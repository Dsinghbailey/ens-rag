{"docstore/data": {"03c62b4a-1bb6-4909-a5c2-c0ae38b0c0dc": {"__data__": {"id_": "03c62b4a-1bb6-4909-a5c2-c0ae38b0c0dc", "embedding": null, "metadata": {"file_path": "src/pages/bugs.mdx", "file_name": "bugs.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/bugs.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/bugs.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["button", "covered", "contracts", "rewards", "program", "bounty", "smart", "provides", "import", "overview", "anyone", "brief", "finds"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "61998a4efcfbdb989f5c480c08909d667884df5f", "node_type": "4", "metadata": {"file_path": "src/pages/bugs.mdx", "file_name": "bugs.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/bugs.mdx"}, "hash": "34019b4842f10eaf5abfd750d99a83bab8c5867b0c6a3cd55cf0639bde0f6a6c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "85481d63-9fa8-46ff-af75-17f98290d36b", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "8dd094f86927f1e55439f59519f25766b3984da034bef909001edfac4b1bbcd4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "import { Button } from '../components/ui/Button' # \ud83e\udeb2 Bug Bounty Program\n\nThe ENS bug bounty program rewards anyone who finds a bug in covered ENS smart contracts and ENS Labs assets. This page provides a brief overview of the program which is operated by Immunefi and ENS Labs.\n\n[See the full program](https://immunefi.com/bug-bounty/ens) ## Bounties \ud83d\udcb8\n\nReward sizes are guided by the rules below, but are in the end, determined at the sole discretion of the ENS Labs team. ### Smart Contracts\n\n- **Critical**: up to $250,000 USD\n- **High**: up to $150,000 USD\n- **Medium**: up to $100,000 USD", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 48, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "38046b9f-ee17-4df9-ae8f-b89affb613c1": {"__data__": {"id_": "38046b9f-ee17-4df9-ae8f-b89affb613c1", "embedding": null, "metadata": {"file_path": "src/pages/bugs.mdx", "file_name": "bugs.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/bugs.mdx", "header_path": "/\ud83e\udeb2 Bug Bounty Program/Bounties \ud83d\udcb8/", "customer_id": 1, "source_url": "src/pages/bugs.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["events", "protocol", "changelog", "announcement", "dentity", "adjust", "applications", "happened", "bounty", "contains", "reserves", "right", "websites", "amounts", "changes"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "61998a4efcfbdb989f5c480c08909d667884df5f", "node_type": "4", "metadata": {"file_path": "src/pages/bugs.mdx", "file_name": "bugs.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/bugs.mdx"}, "hash": "34019b4842f10eaf5abfd750d99a83bab8c5867b0c6a3cd55cf0639bde0f6a6c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ded38b97-cff7-4087-964f-30c6eb63bc78", "node_type": "1", "metadata": {"file_path": "src/pages/bugs.mdx", "file_name": "bugs.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/bugs.mdx", "header_path": "/\ud83e\udeb2 Bug Bounty Program/Bounties \ud83d\udcb8/"}, "hash": "5c08012292107f5e31ee081d3216536650ef65cf960025dc8e6ccfb066ad1c2c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Websites and Applications\n\n- **Critical**: up to $50,000 USD\n- **High**: up to $20,000 USD\n- **Medium**: up to $5,000 USD\n- **Low**: up to $1,000 USD\n\nThe ENS Labs team reserves the right to adjust bounty amounts at any time in the future. # \ud83d\udcdd Changelog\n\nThis page contains a list of changes and events that happened to the ENS protocol & ecosystem. ## Dentity Announcement\n\nOn August 21st, 2024 the ENS Labs team announced a new integration with Dentity, an independent identity provider that allows users to verify information and share it on their ENS profile.0\nThis integration leverages a draft ENSIP that allows for W3C Verifiable Credentials to be stored inside ENS profiles.", "mimetype": "text/plain", "start_char_idx": 598, "end_char_idx": 841, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c6b15143-6f20-4714-b491-efa94198639d": {"__data__": {"id_": "c6b15143-6f20-4714-b491-efa94198639d", "embedding": null, "metadata": {"file_path": "src/pages/changelog.mdx", "file_name": "changelog.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/changelog.mdx", "header_path": "/\ud83d\udcdd Changelog/", "customer_id": 1, "source_url": "src/pages/changelog.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["announced", "plans", "migrating", "announcement", "ensv2", "march", "scaling", "brand", "improving", "roadmap", "internet", "entire", "registrations", "involves", "addition"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "10dd8b62a3045dca49137da7dcb6a4c4121c8a18", "node_type": "4", "metadata": {"file_path": "src/pages/changelog.mdx", "file_name": "changelog.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/changelog.mdx"}, "hash": "6650a0f53d6dbc7fb7702638bc0dac6eca486f37f25cca1371e061025055ad40", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f8eb88c8-1838-40a7-96c5-30068ba6daa9", "node_type": "1", "metadata": {"file_path": "src/pages/changelog.mdx", "file_name": "changelog.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/changelog.mdx", "header_path": "/\ud83d\udcdd Changelog/"}, "hash": "a242f829aaa139205b625ef4f0440139564f419d790de75fa0f0def0a84b61d8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## ENSv2 Announcement\n\nOn March 28th, 2024 the ENS Labs team announced our plans and roadmap for scaling ENS to the entire internet and beyond.\nThis involves migrating .eth registrations to a brand new system, in addition to improving support for existing L2 solutions.\nYou can read more [on our blog](https://blog.ens.domains/post/ensv2), [on X](https://twitter.com/ensdomains/status/1795440186513576318), and [the forums](https://discuss.ens.domains/t/technical-feedback-thread-for-ensv2/19233). ---\ndescription: The Ethereum Name Service Smart Contracts Overview\n---\n\nimport { EmbedLink } from '../../components/EmbedLink'\nimport { Repository } from '../../components/Repository'", "mimetype": "text/plain", "start_char_idx": 445, "end_char_idx": 942, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "61e92ba0-3a4f-4269-82ea-f3c88cee56ae": {"__data__": {"id_": "61e92ba0-3a4f-4269-82ea-f3c88cee56ae", "embedding": null, "metadata": {"file_path": "src/pages/contracts/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/contracts/index.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/contracts/index.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ethereum", "responsible", "storing", "contracts", "these", "smart", "resolution", "associated", "managing", "information", "service"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "69298715a5aec4e7656a839af9af420b37df7943", "node_type": "4", "metadata": {"file_path": "src/pages/contracts/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/contracts/index.mdx"}, "hash": "e2689b3cada1dcaf8da40b394f6f92dc0af664275ce6cff04c0d4f47b77cb544", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7d45de52-f28b-42ea-9c6b-688d669d257a", "node_type": "1", "metadata": {"file_path": "src/pages/contracts/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/contracts/index.mdx", "header_path": "/"}, "hash": "bca3c580a0b9136e7fe2b09d6a1bedff7930b970a42162b448becca8806527a7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "34698d49-8b76-40b8-ad38-71431a6bc529", "node_type": "1", "metadata": {"header_path": "/Smart Contracts/"}, "hash": "260e11a9c874d417acdcb95e1bac45bf24f3d83b640c8f79c6f0c7481c88c775", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Smart Contracts\n\nThe Ethereum Name Service is made up of a set of smart contracts.\nThese smart contracts are responsible for storing and managing information associated with names. ## Resolution\n\nThe resolution process outlines how a name is resolved.\nThis includes the process of finding a resolver, and then using that resolver to fetch information about a name.\n\n<EmbedLink\n  title=\"Resolution Process\"\n  description=\"The resolution process\"\n  href=\"/resolution\"\n/> ## Resolvers\n\nEvery name has a resolver, responsible for fetching information about a name, such as address, avatar, and more.\nResolvers allow for programmatic control over the information associated with a name, implemented in solidity.\n\nThere are various resolvers to choose from, such as the [Public Resolver](/resolvers/public) or [write your own](/resolvers/writing).\n\n<EmbedLink\n  title=\"Resolvers Quickstart\"\n  description=\"\"\n  href=\"/resolvers/quickstart\"\n/>", "mimetype": "text/plain", "start_char_idx": 186, "end_char_idx": 368, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "58b1a582-76e7-4502-8aca-88300dfa69db": {"__data__": {"id_": "58b1a582-76e7-4502-8aca-88300dfa69db", "embedding": null, "metadata": {"file_path": "src/pages/contracts/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/contracts/index.mdx", "header_path": "/Smart Contracts/", "customer_id": 1, "source_url": "src/pages/contracts/index.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["github", "registry", "smart", "found", "resolution", "registrars", "contracts"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "69298715a5aec4e7656a839af9af420b37df7943", "node_type": "4", "metadata": {"file_path": "src/pages/contracts/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/contracts/index.mdx"}, "hash": "e2689b3cada1dcaf8da40b394f6f92dc0af664275ce6cff04c0d4f47b77cb544", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3178400a-d823-4352-b9d2-6bea6a874fde", "node_type": "1", "metadata": {"file_path": "src/pages/contracts/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/contracts/index.mdx", "header_path": "/Smart Contracts/"}, "hash": "1fc6843fbd797f99129275e79145201330b4ef6949d1d853d9c73d7f66f00466", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c54b0326-7de9-4697-a837-7bb2ec11f4c8", "node_type": "1", "metadata": {"header_path": "/Smart Contracts/"}, "hash": "afea567d30fc60c67dad6755539cb203c80bc23170e4b0c63c856a070ef6104b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Registry & Registrars\n\nThe smart contracts can be found on github at [ensdomains/ens-contracts](https://github.com/ensdomains/ens-contracts).\n\n<div>\n  <div className=\"grid grid-cols-3 gap-4\">\n    {[\n      ['The Registry', '/registry/ens'],\n      ['ETH Registrar', '/registry/eth'],\n      ['DNS Registrar', '/registry/dns'],\n      ['Reverse Registrar', '/registry/reverse'],\n    ].map((list) => (\n      <EmbedLink\n        title={list[0]}\n        description=\"The resolution process\"\n        href={list[1]}\n        key={list[1]}\n        className=\"p-4\"\n      />\n    ))}\n  </div>\n</div>", "mimetype": "text/plain", "start_char_idx": 1127, "end_char_idx": 1713, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c54b0326-7de9-4697-a837-7bb2ec11f4c8": {"__data__": {"id_": "c54b0326-7de9-4697-a837-7bb2ec11f4c8", "embedding": null, "metadata": {"file_path": "src/pages/contracts/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/contracts/index.mdx", "header_path": "/Smart Contracts/", "customer_id": 1, "source_url": "src/pages/contracts/index.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["service", "latest", "around", "determine", "binding", "information", "smart", "found", "actions", "constitution", "source", "contracts", "rules", "governance"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "69298715a5aec4e7656a839af9af420b37df7943", "node_type": "4", "metadata": {"file_path": "src/pages/contracts/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/contracts/index.mdx"}, "hash": "e2689b3cada1dcaf8da40b394f6f92dc0af664275ce6cff04c0d4f47b77cb544", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "58b1a582-76e7-4502-8aca-88300dfa69db", "node_type": "1", "metadata": {"file_path": "src/pages/contracts/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/contracts/index.mdx", "header_path": "/Smart Contracts/"}, "hash": "060e2f26a64e2d80437dd0f83b1aef0be82c96c33897af4249efac953c70c7dc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Source Code\n\nThe code for the ENS Smart Contracts as well as information around the latest deploys, tests, and more can be found on github.\n\n<div>\n  <Repository\n    src=\"ensdomains/ens-contracts\"\n    description=\"Ethereum Name Service Contracts\"\n  />\n</div> # ENS DAO Constitution\n\nThe ENS constitution is a set of binding rules that determine what governance actions are legitimate for the DAO to take.\n\nEach article has examples of permissible and non permissible actions. These examples are illustrative and should not be considered a binding part of the text of the constitution itself.", "mimetype": "text/plain", "start_char_idx": 1715, "end_char_idx": 1975, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "acae3053-2189-4bcd-ae73-bc16f2f0ddab": {"__data__": {"id_": "acae3053-2189-4bcd-ae73-bc16f2f0ddab", "embedding": null, "metadata": {"file_path": "src/pages/dao/constitution.mdx", "file_name": "constitution.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/constitution.mdx", "header_path": "/ENS DAO Constitution/", "customer_id": 1, "source_url": "src/pages/dao/constitution.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["infringes", "retain", "ability", "against", "ownership", "rights", "discriminate", "enact", "governance", "infringed", "users", "change", "names", "shall", "unfairly"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6da91feba0c3e5a64e590639831f383ebb89e4e3", "node_type": "4", "metadata": {"file_path": "src/pages/dao/constitution.mdx", "file_name": "constitution.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/constitution.mdx"}, "hash": "4c72e4c6b567df2a6bc362beb76fac67341f82001e27b029ff2a3822b38c90ce", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "52913c7e-2e0f-4a7e-9bdb-ce5763f9bf64", "node_type": "1", "metadata": {"file_path": "src/pages/dao/constitution.mdx", "file_name": "constitution.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/constitution.mdx", "header_path": "/"}, "hash": "d9c013b97d9b450cd008a3eea8d3726235bb8d75fe248fd57da00d98c2aeb2b5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "25114bc0-06a2-482f-8c77-55e6a1ebd227", "node_type": "1", "metadata": {"header_path": "/ENS DAO Constitution/I. Name ownership shall not be infringed/"}, "hash": "f3347de1adb31f58f84c411d06c0abc636f8c50b60788fb228f4de1266c74bdf", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## I. Name ownership shall not be infringed\n\nENS governance will not enact any change that infringes on the rights of ENS users to retain names they own, or unfairly discriminate against name owners' ability to extend, transfer, or otherwise use their names. ### **Examples**\n\n**Permissible**: ENS governance may enact a change affecting the registration or extension costs of all names based on transparent criteria such as length, as long as it pursues a goal outlined in this constitution.\n\n**Not Permissible**: ENS governance must not enact a change increasing or reducing the extension costs of a list of existing ENS names, as this would unfairly benefit or penalise a handpicked group.", "mimetype": "text/plain", "start_char_idx": 334, "end_char_idx": 592, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7dafaa9e-5384-4ec6-8a1e-b4338bbb1a71": {"__data__": {"id_": "7dafaa9e-5384-4ec6-8a1e-b4338bbb1a71", "embedding": null, "metadata": {"file_path": "src/pages/dao/constitution.mdx", "file_name": "constitution.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/constitution.mdx", "header_path": "/ENS DAO Constitution/", "customer_id": 1, "source_url": "src/pages/dao/constitution.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["mechanism", "primary", "purpose", "overwhelmed", "registration", "becoming", "incentive", "speculatively", "registered", "primarily", "secondary", "namespace", "prevent"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6da91feba0c3e5a64e590639831f383ebb89e4e3", "node_type": "4", "metadata": {"file_path": "src/pages/dao/constitution.mdx", "file_name": "constitution.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/constitution.mdx"}, "hash": "4c72e4c6b567df2a6bc362beb76fac67341f82001e27b029ff2a3822b38c90ce", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "25114bc0-06a2-482f-8c77-55e6a1ebd227", "node_type": "1", "metadata": {"file_path": "src/pages/dao/constitution.mdx", "file_name": "constitution.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/constitution.mdx", "header_path": "/ENS DAO Constitution/I. Name ownership shall not be infringed/"}, "hash": "481afd0f2ecad0ac3412df9ca0efc67480c7d9c7e74b7c5255e2808a6611d8d8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bf56cc51-f8e6-4057-90f3-a7e042fee5c6", "node_type": "1", "metadata": {"header_path": "/ENS DAO Constitution/II. Fees are primarily an incentive mechanism/"}, "hash": "dd6ab78c7640b060fd1abca40031bfde9c02131c2418b316982f2e045b88d91d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## II. Fees are primarily an incentive mechanism\n\nThe primary purpose of registration fees is as an incentive mechanism to prevent the namespace becoming overwhelmed with speculatively registered names. A secondary purpose is to provide enough revenue to the DAO to fund ongoing development and improvement of ENS. ENS governance will not enact any fee other than for these purposes. ### **Examples**\n\n**Permissible**: ENS governance may increase the price of name registrations in order to address excessive speculative registrations induced by a price that is set too low, or because the current price is insufficient to fund ongoing ENS operations at a reasonable level.\n\n**Not Permissible**: ENS governance must not enact a change imposing a fee for claiming DNS domains inside ENS, because such a fee would be purely an income generating measure and not an incentive mechanism.", "mimetype": "text/plain", "start_char_idx": 1029, "end_char_idx": 1412, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7918dc0d-ede1-474e-ae53-dcdb4e6fbbae": {"__data__": {"id_": "7918dc0d-ede1-474e-ae53-dcdb4e6fbbae", "embedding": null, "metadata": {"file_path": "src/pages/dao/constitution.mdx", "file_name": "constitution.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/constitution.mdx", "header_path": "/ENS DAO Constitution/", "customer_id": 1, "source_url": "src/pages/dao/constitution.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["other", "development", "viability", "treasury", "income", "funds", "public", "first", "generated", "ensure", "goods", "improvement", "continuing"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6da91feba0c3e5a64e590639831f383ebb89e4e3", "node_type": "4", "metadata": {"file_path": "src/pages/dao/constitution.mdx", "file_name": "constitution.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/constitution.mdx"}, "hash": "4c72e4c6b567df2a6bc362beb76fac67341f82001e27b029ff2a3822b38c90ce", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bf56cc51-f8e6-4057-90f3-a7e042fee5c6", "node_type": "1", "metadata": {"file_path": "src/pages/dao/constitution.mdx", "file_name": "constitution.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/constitution.mdx", "header_path": "/ENS DAO Constitution/II. Fees are primarily an incentive mechanism/"}, "hash": "828726dd07419fcdae28645366f41fed7f14809f26d4590ca235c55ba78d8b9c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6079b638-a814-4cf1-acca-5648dc5a3bc1", "node_type": "1", "metadata": {"header_path": "/ENS DAO Constitution/III. Income funds ENS and other public goods/"}, "hash": "f5e1d7ea892fb9fac27e08b3143114bdbaebd0e021b9bf577b1863798ab5a34c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## III. Income funds ENS and other public goods\n\nAny income generated to the ENS treasury is to be used first of all to ensure the long-term viability of ENS, and to fund continuing development and improvement of the ENS system. Funds that are not reasonably required to achieve this goal may be used to fund other public goods within web3 as ENS governance sees fit.\n\nENS governance will not allocate funds to a team or individual who does not commit to uphold the same principles outlined in this constitution in their use of the allocated funds.", "mimetype": "text/plain", "start_char_idx": 1914, "end_char_idx": 2462, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6079b638-a814-4cf1-acca-5648dc5a3bc1": {"__data__": {"id_": "6079b638-a814-4cf1-acca-5648dc5a3bc1", "embedding": null, "metadata": {"file_path": "src/pages/dao/constitution.mdx", "file_name": "constitution.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/constitution.mdx", "header_path": "/ENS DAO Constitution/III. Income funds ENS and other public goods/", "customer_id": 1, "source_url": "src/pages/dao/constitution.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["viability", "unrelated", "offer", "conflict", "grant", "goals", "affect", "public", "funds", "funding", "support", "doing", "projects", "governance"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6da91feba0c3e5a64e590639831f383ebb89e4e3", "node_type": "4", "metadata": {"file_path": "src/pages/dao/constitution.mdx", "file_name": "constitution.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/constitution.mdx"}, "hash": "4c72e4c6b567df2a6bc362beb76fac67341f82001e27b029ff2a3822b38c90ce", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7918dc0d-ede1-474e-ae53-dcdb4e6fbbae", "node_type": "1", "metadata": {"file_path": "src/pages/dao/constitution.mdx", "file_name": "constitution.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/constitution.mdx", "header_path": "/ENS DAO Constitution/"}, "hash": "2923bbc0d132a6e06f047e45edd46d14922fe67de926006ee9a89823f8af94de", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "954a8651-235d-4033-977f-732d33279039", "node_type": "1", "metadata": {"header_path": "/ENS DAO Constitution/"}, "hash": "d0068588989e9b2af5870ae632df69e05125e1fef7bb8245832375d669f53c77", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### **Examples**\n\n**Permissible**: ENS governance may offer grant funding for a public good unrelated to ENS or Ethereum, so long as doing so does not affect the long-term viability of ENS.\n\n**Not Permissible**: ENS governance must not use the funds to support projects that conflict with the goals of ENS. ## IV. ENS Integrates with the global namespace\n\nIn order to facilitate making the most widely usable naming system, ENS aims to integrate with the legacy DNS naming system to the greatest extent possible without sacrificing decentralization of ENS. ENS governance will not enact changes that compromise ENS's ability to do this.", "mimetype": "text/plain", "start_char_idx": 2464, "end_char_idx": 2770, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fc068f04-1dbf-4625-b704-625676e90a9a": {"__data__": {"id_": "fc068f04-1dbf-4625-b704-625676e90a9a", "embedding": null, "metadata": {"file_path": "src/pages/dao/constitution.mdx", "file_name": "constitution.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/constitution.mdx", "header_path": "/ENS DAO Constitution/IV. ENS Integrates with the global namespace/", "customer_id": 1, "source_url": "src/pages/dao/constitution.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["domains", "those", "amendments", "granted", "control", "grant", "unless", "domain", "system", "create", "owner", "should", "governance"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6da91feba0c3e5a64e590639831f383ebb89e4e3", "node_type": "4", "metadata": {"file_path": "src/pages/dao/constitution.mdx", "file_name": "constitution.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/constitution.mdx"}, "hash": "4c72e4c6b567df2a6bc362beb76fac67341f82001e27b029ff2a3822b38c90ce", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "954a8651-235d-4033-977f-732d33279039", "node_type": "1", "metadata": {"file_path": "src/pages/dao/constitution.mdx", "file_name": "constitution.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/constitution.mdx", "header_path": "/ENS DAO Constitution/"}, "hash": "24e15d8192eb9830ef3438199bd8bfa897a9e39baff10d7369f78bbb3f29f95d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6984396d-86de-468f-99ec-b705ae4886d1", "node_type": "1", "metadata": {"header_path": "/ENS DAO Constitution/"}, "hash": "9c7419bc4e3ebe442199d33166c1c4ad9f028fc3fe902fd6240bd4f645ef5abb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### **Examples**\n\n**Permissible**: ENS governance should grant control of a top-level domain to its owner in the DNS system on request.\n\n**Not permissible**: ENS governance must not create new top-level domains unless those domains have been granted to ENS by a DNS authority. ## V. Amendments to this constitution by majority vote\n\nAny change may be made to this constitution only by two-thirds majority and at least 1% of all tokens participating. # The ENS Foundation ## Why have a legal entity?\n\nHaving a legal entity that represents the DAO in the \"real world\" is valuable for a number of reasons:\n\n- It provides limited liability to DAO participants for the actions of the DAO. Without a legal entity, participants may be individually held liable for anything the DAO as a whole does.\n- It is capable of complying with taxation requirements - without a legal entity, DAO participants may be held liable for a proportion of the DAO's income, even if they are not able to access these funds.\n- It is capable of entering into contracts with other \"real world\" entities, of holding assets (including IP rights), and so forth.\n\nFor a more detailed discussion of this topic, see [this excellent blog post](https://mirror.xyz/0x954888B7a5C6736F4955dF18B556D8328FD02f61/5K9llACK4tzu5WHL68CM3bBsmSleL_XxJ2kRGYnwp7A).", "mimetype": "text/plain", "start_char_idx": 3103, "end_char_idx": 3379, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e35370e7-b94a-4fb5-9d93-b4aedb421d7e": {"__data__": {"id_": "e35370e7-b94a-4fb5-9d93-b4aedb421d7e", "embedding": null, "metadata": {"file_path": "src/pages/dao/foundation.mdx", "file_name": "foundation.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/foundation.mdx", "header_path": "/The ENS Foundation/", "customer_id": 1, "source_url": "src/pages/dao/foundation.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["company", "limited", "foundations", "directors", "details", "foundation", "cayman", "incorporated", "cannot", "companies", "shareholders", "dividends"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3fc0ffd26c436ca41bd28f1813768bfcef16b09a", "node_type": "4", "metadata": {"file_path": "src/pages/dao/foundation.mdx", "file_name": "foundation.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/foundation.mdx"}, "hash": "b332ef78322bb9549c882e035b2427f934613bc21dce2c3438908ce1d8a9eb27", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7b3e04b1-93d8-4f50-8a42-5f1a7a57e595", "node_type": "1", "metadata": {"file_path": "src/pages/dao/foundation.mdx", "file_name": "foundation.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/foundation.mdx", "header_path": "/The ENS Foundation/"}, "hash": "69f7c4443f0d0ddbc2765879e4d05bb8e46c69dfc955d412de7bdac6961174a2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "04dc5d67-8948-4cc0-8216-a5167e8da5a1", "node_type": "1", "metadata": {"header_path": "/The ENS Foundation/"}, "hash": "4afd8adc58fc2671cc22888d8ab433b4582e8ce2a4a1cad369c079a91b267a77", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## What is The ENS Foundation?\n\nThe ENS Foundation is a Foundation Company Limited By Guarantee, incorporated in the Cayman Islands. Foundation companies are nonprofits; The ENS Foundation has no shareholders and cannot pay out dividends to its directors or members. For more details on how foundations work, see [this article](https://www.careyolsen.com/briefings/overview-cayman-islands-foundation-companies).\n\nThe ENS Foundation has three directors: Nick Johnson, Brantly Millegan, and Kevin Gaspar, all ENS core team members. Directors are in charge of the day-to-day running of the foundation.\n\nThe ENS Foundation has one supervisor. The supervisor is an administrative role whose job is to make sure that the directors are doing their jobs in accordance with Cayman Islands law. The position of supervisor is filled by a Cayman Islands firm, DS Limited.\n\nThe ENS Foundation's Articles of Incorporation give significant powers to the ENS DAO (referred to as \"The Council\" in the Articles). The DAO may vote to:\n\n- Appoint or remove a director, member, or supervisor.\n- Prohibit admitting any members in future.\n- Instruct the directors to wind up the foundation, and specify what charity or other foundation should receive the foundation's assets.\n\nThough not specified directly in the Articles, the DAO may also instruct the directors to take action on behalf of the Foundation - such as signing a contract, engaging a company for a service the DAO requires, or delegating some of the directors' powers to a DAO working group.", "mimetype": "text/plain", "start_char_idx": 866, "end_char_idx": 2398, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "04dc5d67-8948-4cc0-8216-a5167e8da5a1": {"__data__": {"id_": "04dc5d67-8948-4cc0-8216-a5167e8da5a1", "embedding": null, "metadata": {"file_path": "src/pages/dao/foundation.mdx", "file_name": "foundation.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/foundation.mdx", "header_path": "/The ENS Foundation/", "customer_id": 1, "source_url": "src/pages/dao/foundation.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["running", "office", "agent", "supervisory", "anticipated", "foundation", "expenses", "registered", "secretary", "incomplete", "companies", "comes", "service"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3fc0ffd26c436ca41bd28f1813768bfcef16b09a", "node_type": "4", "metadata": {"file_path": "src/pages/dao/foundation.mdx", "file_name": "foundation.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/foundation.mdx"}, "hash": "b332ef78322bb9549c882e035b2427f934613bc21dce2c3438908ce1d8a9eb27", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e35370e7-b94a-4fb5-9d93-b4aedb421d7e", "node_type": "1", "metadata": {"file_path": "src/pages/dao/foundation.mdx", "file_name": "foundation.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/foundation.mdx", "header_path": "/The ENS Foundation/"}, "hash": "5d8b527a8c6bf714776d43326a717d317542a5f9e6699dca9085afe5eb39ac12", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "49cb1752-12c9-4025-92d5-02e28ba01b04", "node_type": "1", "metadata": {"header_path": "/The ENS Foundation/"}, "hash": "8400cdd7e664bb45edc8a250fe8633c7f7d2076cfbb115396ea8bd87893ea0da", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Foundation Expenses\n\nRunning a Foundation is not free, and comes with some real-world costs. An incomplete list of anticipated expenses includes:\n\n- Registered Office & Secretary Services: $10,000 USD p/a\n- Supervisory Services: $30,000 USD p/a\n- Agent for service of process: $1,200 USD p/a\n- Companies Register Fees: $850 USD p/a\n\nThe Directors may ask the DAO for reimbursement of these fees when they are incurred so that the Foundation can continue to operate. ## Documents\n\nFor transparency, important documents relating to the Foundation can be found below. Meeting minutes, resolutions, accounts, and other documentation will be uploaded here as it is made available to the directors.\n\n:::note\n[M & A - Incorp - The ENS Foundation - 26 October 2021.pdf](https://github.com/ensdomains/governance-docs/blob/main/assets/M%26A%20-%20Incorp%20-%20The%20ENS%20Foundation%20-%2026%20October%202021.pdf)\n:::\n\n:::note\n[Certificate of Incorporation - The ENS Foundation - 26 October 2021.pdf](https://github.com/ensdomains/governance-docs/blob/main/assets/Certificate%20of%20Incorporation%20-%20The%20ENS%20Foundation%20-%2026%20October%202021.pdf)\n:::\n\n:::note\n[Dir Res - Stage 2 - The ENS Foundation (27.10.21).pdf](<https://github.com/ensdomains/governance-docs/blob/main/assets/Dir%20Res%20-%20Stage%202%20-%20The%20ENS%20Foundation%20(27.10.21).pdf>)\n:::\n\n:::note\n[Resignation and appointment of a director.pdf](https://github.com/ensdomains/governance-docs/blob/main/assets/Resignation%20and%20appointment%20of%20a%20director.pdf)\n:::\n\n:::note\n[Brantly resignation.pdf](https://github.com/ensdomains/governance-docs/blob/main/assets/Brantly%20resignation.pdf)\n:::", "mimetype": "text/plain", "start_char_idx": 2400, "end_char_idx": 2868, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f962702c-4f05-4779-90aa-80655c661b30": {"__data__": {"id_": "f962702c-4f05-4779-90aa-80655c661b30", "embedding": null, "metadata": {"file_path": "src/pages/dao/governance/moderator.mdx", "file_name": "moderator.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/governance/moderator.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/governance/moderator.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["author", "moderator", "modify", "advancing", "advanced", "proposal", "documentation", "draft", "below", "handling", "moderators", "checklists", "follow"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b0b1369dd98c88d4727707bbddb7b0fca7294aa7", "node_type": "4", "metadata": {"file_path": "src/pages/dao/governance/moderator.mdx", "file_name": "moderator.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/governance/moderator.mdx"}, "hash": "a25062e5b9bf46ee1b7a17f4df61ab1129d9100c97dca9ef3fdd55aaa6fa80b3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dbb26d83-19be-4635-a58e-5d1eb80536e2", "node_type": "1", "metadata": {"header_path": "/Moderator Checklists [Process documentation and checklists for DAO moderators handling proposals]/"}, "hash": "1741ecf0111c3504ca26c0a17f13bb239d65ef3f1dda6b3a30c89e41f52ff369", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Moderator Checklists [Process documentation and checklists for DAO moderators handling proposals] ## Advancing a proposal to a vote\n\nWhen the author of a Draft Proposal asks for it to be advanced to a vote, and you agree, follow the below steps:\n\n- [ ] Modify the title to include the next sequential EP number (eg `[EP4] ...`).\n- [ ] Move from Draft Proposals to Active Proposals category.\n- [ ] Delete Discourse poll (if any).\n- [ ] [Create a Snapshot vote](https://snapshot.org/#/ens.eth/create):\n  - [ ] 5 day duration.\n  - [ ] Simple voting unless otherwise called for in the proposal.\n  - [ ] Copy and paste the title and contents of the proposal to the vote.\n  - [ ] Add a link to the forum thread at the bottom.\n- [ ] Replicate the proposal in the governance docs:\n  - [ ] Create the header table with a link to the forum thread and snapshot vote.\n  - [ ] Copy and paste the title and contents of the proposal.\n  - [ ] Set the status to 'Active'.\n  - [ ] Submit as a PR for the docs.\n- [ ] Edit the forum thread to link to the Snapshot vote at the top.\n- [ ] Send a forum DM to the 'delegates' group announcing that the proposal is up for voting.\n- [ ] Send a tweet announcing that the proposal is up for voting.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 99, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "dc7f1064-3d47-4e0a-ac2d-5cce27976b19": {"__data__": {"id_": "dc7f1064-3d47-4e0a-ac2d-5cce27976b19", "embedding": null, "metadata": {"file_path": "src/pages/dao/governance/moderator.mdx", "file_name": "moderator.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/governance/moderator.mdx", "header_path": "/Moderator Checklists [Process documentation and checklists for DAO moderators handling proposals]/", "customer_id": 1, "source_url": "src/pages/dao/governance/moderator.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["voting", "proposal", "follow", "update", "below", "passed", "snapshot", "executable", "period", "status", "governance"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b0b1369dd98c88d4727707bbddb7b0fca7294aa7", "node_type": "4", "metadata": {"file_path": "src/pages/dao/governance/moderator.mdx", "file_name": "moderator.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/governance/moderator.mdx"}, "hash": "a25062e5b9bf46ee1b7a17f4df61ab1129d9100c97dca9ef3fdd55aaa6fa80b3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dbb26d83-19be-4635-a58e-5d1eb80536e2", "node_type": "1", "metadata": {"file_path": "src/pages/dao/governance/moderator.mdx", "file_name": "moderator.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/governance/moderator.mdx", "header_path": "/Moderator Checklists [Process documentation and checklists for DAO moderators handling proposals]/"}, "hash": "3ebc7d35b016d7114cdde90bac472fd2f136f417be49b2e52e69c48490b481b6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0fec98a1-2795-40a9-8133-e028d7adeb09", "node_type": "1", "metadata": {"header_path": "/Moderator Checklists [Process documentation and checklists for DAO moderators handling proposals]/"}, "hash": "cecaf038041e9a0ccd87898c30c464e4d47dbd76da2b03a229fddd64d9bd8623", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Proposal pass/rejection\n\nWhen a proposal's voting period concludes, follow the below steps:\n\n- [ ] Update the proposal in the governance docs:\n  - For an Executable Proposal that just passed its Snapshot vote, set the status to 'Awaiting Execution'.\n  - Otherwise, set the status to 'Passed' if it passed and 'Rejected' if it did not.\n- [ ] Update the forum thread:\n  - [ ] Remove the Snapshot/Tally link at the top.\n  - [ ] List the current status (as above) at the top of the proposal.\n  - [ ] If the proposal is Passed or Rejected, lock the thread.\n- [ ] If the proposal is an Executable Proposal and passed its snapshot vote:\n  - Do the \"Executing a proposal\" checklist below if it is ready to be executed.\n  - Otherwise, add a note to the forum thread about when it will be scheduled for execution.\n- [ ] If the proposal is a Constitutional Amendment:\n  - Merge the PR to the constitution if it passed.\n  - Close the PR otherwise.\n- [ ] If the proposal requires any other action, alert those responsible of the need to enact it.\n- [ ] Send a tweet announcing the result of the proposal.", "mimetype": "text/plain", "start_char_idx": 1225, "end_char_idx": 2319, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0fec98a1-2795-40a9-8133-e028d7adeb09": {"__data__": {"id_": "0fec98a1-2795-40a9-8133-e028d7adeb09", "embedding": null, "metadata": {"file_path": "src/pages/dao/governance/moderator.mdx", "file_name": "moderator.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/governance/moderator.mdx", "header_path": "/Moderator Checklists [Process documentation and checklists for DAO moderators handling proposals]/", "customer_id": 1, "source_url": "src/pages/dao/governance/moderator.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["submit", "power", "construct", "voting", "proposal", "someone", "below", "sufficient", "executable", "ready", "executing", "follow"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b0b1369dd98c88d4727707bbddb7b0fca7294aa7", "node_type": "4", "metadata": {"file_path": "src/pages/dao/governance/moderator.mdx", "file_name": "moderator.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/governance/moderator.mdx"}, "hash": "a25062e5b9bf46ee1b7a17f4df61ab1129d9100c97dca9ef3fdd55aaa6fa80b3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dc7f1064-3d47-4e0a-ac2d-5cce27976b19", "node_type": "1", "metadata": {"file_path": "src/pages/dao/governance/moderator.mdx", "file_name": "moderator.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/governance/moderator.mdx", "header_path": "/Moderator Checklists [Process documentation and checklists for DAO moderators handling proposals]/"}, "hash": "4df1d64b1b2c414f1897ddaf8388b19fa1265efe93bb119ae651a95aeecf9328", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Executing a proposal\n\nWhen an Executable Proposal is ready to be executed, follow the below steps. If you do not have sufficient voting power to submit an executable proposal, ask someone else to do this for you.\n\n- [ ] Construct the executable proposal on the interface of your choice, such as [Tally](https://www.withtally.com/governance/ens/proposal/new) or [OZ Defender](https://defender.openzeppelin.com/#/admin/contracts/mainnet-0x323A76393544d5ecca80cd6ef2A560C6a395b7E3/newAdminAction?), following the instructions in the proposal.\n- [ ] Have someone else double-check the proposal is structured correctly for you.\n- [ ] Optionally, use [Tenderly](https://dashboard.tenderly.co) to simulate the effects of submitting the proposal directly to the timelock contract to check it has the expected effect.\n- [ ] Submit the proposal to the chain.\n- [ ] Add a link to the vote on Tally to the top of the proposal on the forum thread.\n- [ ] Update the status of the proposal in the governance docs to 'Active'.\n- [ ] Send a forum DM to the 'delegates' group announcing the proposal is up for execution, with a link to the Tally proposal page.\n- [ ] Send a tweet announcing that the proposal is up for voting.", "mimetype": "text/plain", "start_char_idx": 2321, "end_char_idx": 3532, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ca38ab31-3f42-468e-acd9-e18a0ca6df0b": {"__data__": {"id_": "ca38ab31-3f42-468e-acd9-e18a0ca6df0b", "embedding": null, "metadata": {"file_path": "src/pages/dao/governance/process.mdx", "file_name": "process.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/governance/process.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/governance/process.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["living", "document", "advancing", "suggested", "developing", "enforced", "modified", "overview", "intended", "process", "governance"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b574a585df475c28afa32c974d576b6d6a2b705d", "node_type": "4", "metadata": {"file_path": "src/pages/dao/governance/process.mdx", "file_name": "process.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/governance/process.mdx"}, "hash": "67d95923dfe6b7602b97453eb848d600ada018a8e0e7a379f524bf8087166582", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8db84951-5d14-4ffc-b4e7-23fe0553c5ec", "node_type": "1", "metadata": {"header_path": "/Governance Process [An overview of the ENS DAO's governance processes, and how you can get involved]/"}, "hash": "7872b24bf12501ab0543d2279a9bc07e5d5feb574cb2508db2af93c48b004405", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Governance Process [An overview of the ENS DAO's governance processes, and how you can get involved]\n\nThis document is a suggested process for developing and advancing ENS Governance Proposals. It is a living document intended to be owned, modified and enforced by the ENS community. ## Venues\n\n[discuss.ens.domains](https://discuss.ens.domains) is a Discourse forum for governance-related discussion. Community members must register for an account before sharing or liking posts. Registering for the forum allows community members to post in the general forum; for access to the working groups, fill out the [participant request form](https://airtable.com/shrv2xP39SmuCcd5j).\n\nThere are three workstream categories: [Meta-Governance](https://discuss.ens.domains/c/meta-governance/28), [Public Goods](https://discuss.ens.domains/c/public-goods/37), and [ENS Ecosystem](https://discuss.ens.domains/c/ens-ecosystem/32). Each category has subcategories for each of the steps of the governance process described below.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 285, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b844299e-9222-4043-8e28-898b2dc8dd61": {"__data__": {"id_": "b844299e-9222-4043-8e28-898b2dc8dd61", "embedding": null, "metadata": {"file_path": "src/pages/dao/governance/process.mdx", "file_name": "process.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/governance/process.mdx", "header_path": "/Governance Process [An overview of the ENS DAO's governance processes, and how you can get involved]/Venues/", "customer_id": 1, "source_url": "src/pages/dao/governance/process.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["votes", "delegated", "sentiment", "allows", "signal", "voting", "address", "weighted", "simple", "interface", "snapshot", "users", "number", "governance"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b574a585df475c28afa32c974d576b6d6a2b705d", "node_type": "4", "metadata": {"file_path": "src/pages/dao/governance/process.mdx", "file_name": "process.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/governance/process.mdx"}, "hash": "67d95923dfe6b7602b97453eb848d600ada018a8e0e7a379f524bf8087166582", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8db84951-5d14-4ffc-b4e7-23fe0553c5ec", "node_type": "1", "metadata": {"file_path": "src/pages/dao/governance/process.mdx", "file_name": "process.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/governance/process.mdx", "header_path": "/Governance Process [An overview of the ENS DAO's governance processes, and how you can get involved]/"}, "hash": "fe469884b37aa9d2cf30cd34eb7db701b8541dbb7e53d0f6cdf3007cb6c5e5cf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4bb80593-32ee-4c62-9037-fa372fbcfd81", "node_type": "1", "metadata": {"header_path": "/Governance Process [An overview of the ENS DAO's governance processes, and how you can get involved]/Venues/"}, "hash": "07e5dbcf809556208a897941e78dcc64ea06f3dd1f91b66e66c6974b42a708e3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Snapshot\n\n[Snapshot](https://snapshot.org/#/ens.eth/) is a simple voting interface that allows users to signal sentiment off-chain. Votes on snapshot are weighted by the number of ENS delegated to the address used to vote. ### Governance portals\n\n[Tally](https://tally.ensdao.org) and [Agora](https://agora.ensdao.org) are governance portal that allows token holders to delegate their votes, and allows delegates to create and vote on binding proposals. ## Getting Work Done\n\nYou are probably here because you want the DAO to _do_ something. The primary mechanism by which the DAO gets things done is via \"Requests for Proposal\" (RFPs). An RFP is a request from the DAO for contributors to offer to do work on its behalf, and receive compensation in return.\n\nAnyone who identifies a need can write an RFP, and if the RFP is passed, anyone can write a proposal in response and be awarded the work. Even if you believe you can do the work yourself, you will still need to pass an RFP in order to be awarded the work (and corresponding compensation) by the DAO.\n\nRFPs vary in detail and complexity. An RFP for improving the DAO's documentation may only be a paragraph or two long, and proposals for it will be equally short. At the other extreme, an RFP for managing the DAO's funds may be lengthy, and a successful proposal could be multiple pages justifying the proposer's ability to take on the job.", "mimetype": "text/plain", "start_char_idx": 1019, "end_char_idx": 1245, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a62d8855-c65d-4fb2-97d1-8dfb95207a0f": {"__data__": {"id_": "a62d8855-c65d-4fb2-97d1-8dfb95207a0f", "embedding": null, "metadata": {"file_path": "src/pages/dao/governance/process.mdx", "file_name": "process.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/governance/process.mdx", "header_path": "/Governance Process [An overview of the ENS DAO's governance processes, and how you can get involved]/Getting Work Done/", "customer_id": 1, "source_url": "src/pages/dao/governance/process.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["specify", "explain", "group", "scope", "process", "write", "draft", "follow", "discussion", "working", "requirements", "appropriate", "describe", "winning", "thread"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b574a585df475c28afa32c974d576b6d6a2b705d", "node_type": "4", "metadata": {"file_path": "src/pages/dao/governance/process.mdx", "file_name": "process.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/governance/process.mdx"}, "hash": "67d95923dfe6b7602b97453eb848d600ada018a8e0e7a379f524bf8087166582", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8154d450-c5bb-485d-94bd-98a0d6bcf662", "node_type": "1", "metadata": {"file_path": "src/pages/dao/governance/process.mdx", "file_name": "process.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/governance/process.mdx", "header_path": "/Governance Process [An overview of the ENS DAO's governance processes, and how you can get involved]/"}, "hash": "12e2896838902def592a49ff74245d52099b7fa89193baa07521ed7a60f1ab2d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ee1be138-7899-46f0-a67f-d0e5f1feeb49", "node_type": "1", "metadata": {"header_path": "/Governance Process [An overview of the ENS DAO's governance processes, and how you can get involved]/"}, "hash": "e91b00018e963a21cd27e4b30e13f9e3bb08a9066ff25ffd182f2e3a515b4857", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### The RFP Process\n\nRFPs all follow this process:\n\n1.  Write a draft RFP ([template here](https://github.com/ensdomains/docs/blob/master/src/public/governance/rfp-template.md)) and post it as a discussion thread in the appropriate working group on [the DAO forum](https://discuss.ens.domains/). At a minimum, RFPs must:\n\n    a. Explain the need for the RFP and describe the work to be done - the scope of work and deliverables.\n\n    b. Specify the requirements for a winning bid - criteria for selection.\n\n    c. Provide a timeline for submissions and completion of the work.\n\n    d. Nominate a party who will select a winning bid and approve & disburse compensation (the RFP manager). Normally this will be the working group who adopts the RFP.\n\n    e. Specify a maximum budget for the RFP.\n\n2.  Incorporate feedback from DAO participants into your draft. When you believe it is ready, tag the stewards of the working group and request they consider adopting it.\n3.  If the stewards agree to adopt your RFP, they will decide if it can be paid out of WG funds, or if it needs a DAO wide vote.\n\n    a. If the RFP can be paid out of WG funds, they will set a submission period and post it as an active RFP.\n\n    b. Otherwise, the stewards will create an executable proposal (or, they may ask you to do this) asking the DAO as a whole to approve the RFP. The proposal should contain the RFP. The executable component should specify approvals from the DAO funds to the RFP manager in the amount of the maximum budget for the proposal.\n\n4.  Once the RFP is approved - either by the WG or by a DAO-wide vote - the submission period begins. You or a WG steward should create a post on the DAO forum for proposals, and anyone can submit a proposal to this thread.\n5.  Once the submission period is concluded, the RFP manager selects a winning bid. Normally the manager will be the stewards of the working group who has adopted your RFP.\n6.  The author of the winning proposal commences the work. As they meet milestones specified in the RFP and their proposal, they can request compensation from the RFP manager, who disburses it from the allocated funds.", "mimetype": "text/plain", "start_char_idx": 2426, "end_char_idx": 4574, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ee1be138-7899-46f0-a67f-d0e5f1feeb49": {"__data__": {"id_": "ee1be138-7899-46f0-a67f-d0e5f1feeb49", "embedding": null, "metadata": {"file_path": "src/pages/dao/governance/process.mdx", "file_name": "process.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/governance/process.mdx", "header_path": "/Governance Process [An overview of the ENS DAO's governance processes, and how you can get involved]/", "customer_id": 1, "source_url": "src/pages/dao/governance/process.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["operations", "proposals", "types", "proposal", "passing", "three", "smart", "there", "executed", "contract", "series", "governance"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b574a585df475c28afa32c974d576b6d6a2b705d", "node_type": "4", "metadata": {"file_path": "src/pages/dao/governance/process.mdx", "file_name": "process.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/governance/process.mdx"}, "hash": "67d95923dfe6b7602b97453eb848d600ada018a8e0e7a379f524bf8087166582", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a62d8855-c65d-4fb2-97d1-8dfb95207a0f", "node_type": "1", "metadata": {"file_path": "src/pages/dao/governance/process.mdx", "file_name": "process.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/governance/process.mdx", "header_path": "/Governance Process [An overview of the ENS DAO's governance processes, and how you can get involved]/Getting Work Done/"}, "hash": "4490b863860fb0953838ec4b21899b531e0a1f915300f0fa5e1cb90a819179b8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "94ca4aa6-f5ad-4969-b209-13c92a485d69", "node_type": "1", "metadata": {"header_path": "/Governance Process [An overview of the ENS DAO's governance processes, and how you can get involved]/Passing a Proposal/"}, "hash": "a7dbc0dbc7b07a520e008357a7a22d5195317e863af6af1224a6f4fc22c34ce1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Passing a Proposal ### Types of Proposal\n\nThere are three main types of governance proposals you can make:\n\n1. **[Executable Proposal](https://github.com/ensdomains/docs/tree/master/src/public/governance/executable-proposal-template.md):** This is a proposal for a series of smart contract operations to be executed by accounts the DAO controls. These can include transfers of tokens as well as arbitrary smart contract calls. Examples of this include allocating funding to a workstream multisig wallet, or upgrading an ENS core contract. Executable proposals have a quorum requirement of 1% and require a minimum approval of 50% to pass.\n2. **[Social Proposal](https://github.com/ensdomains/docs/tree/master/src/public/governance/social-proposal-template.md)**: This is a proposal that asks for the agreement of the DAO on something that cannot be enforced onchain. Examples of this include a proposal to change the royalty percentage for the ENS secondary market on OpenSea, or a petition to the root keyholders. Social proposals have a quorum requirement of 1% and require a minimum approval of 50% to pass.\n3. **[Constitutional Amendment](https://github.com/ensdomains/docs/tree/master/src/public/governance/constitutional-amendment-template.md)**: This is a social proposal that asks the DAO to amend the constitution. Your draft proposal should include a [diff](https://en.wikipedia.org/wiki/Diff) showing the exact changes you propose to make to the constitution. Rules for amending the constitution are set in the constitution itself, and currently require a quorum of 1% and a minimum approval of two thirds to pass.", "mimetype": "text/plain", "start_char_idx": 4576, "end_char_idx": 4597, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "db238dd6-2b8f-4d07-95a4-b6ae66249de3": {"__data__": {"id_": "db238dd6-2b8f-4d07-95a4-b6ae66249de3", "embedding": null, "metadata": {"file_path": "src/pages/dao/governance/process.mdx", "file_name": "process.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/governance/process.mdx", "header_path": "/Governance Process [An overview of the ENS DAO's governance processes, and how you can get involved]/Passing a Proposal/", "customer_id": 1, "source_url": "src/pages/dao/governance/process.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["check", "community", "purpose", "determine", "temperature", "question", "about", "create", "sufficient", "there", "status", "changes"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b574a585df475c28afa32c974d576b6d6a2b705d", "node_type": "4", "metadata": {"file_path": "src/pages/dao/governance/process.mdx", "file_name": "process.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/governance/process.mdx"}, "hash": "67d95923dfe6b7602b97453eb848d600ada018a8e0e7a379f524bf8087166582", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "94ca4aa6-f5ad-4969-b209-13c92a485d69", "node_type": "1", "metadata": {"file_path": "src/pages/dao/governance/process.mdx", "file_name": "process.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/governance/process.mdx", "header_path": "/Governance Process [An overview of the ENS DAO's governance processes, and how you can get involved]/Passing a Proposal/"}, "hash": "3ba15c11c8faea44229f6e4d9e8334782a6e647655a6a01431e90ae5e64cb028", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "37bab68f-f7d6-4f4f-8a4a-074177cd4775", "node_type": "1", "metadata": {"header_path": "/Governance Process [An overview of the ENS DAO's governance processes, and how you can get involved]/Passing a Proposal/"}, "hash": "522c75f1f689229d7f5bd2aeccb467b0f8ef8e41b7341a283bb36a25cc7d8df4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### **Phase 1: Temperature Check \u2014 Discourse**\n\nThe purpose of the Temperature Check is to determine if there is sufficient will to make changes to the status quo.\n\nTo create a Temperature Check, ask a general, non-biased question to the community on [discuss.ens.domains](https://discuss.ens.domains) about a potential change (example: \u201cShould ENS decrease registration costs for 3-letter domains?\u201d). Forum posts should be in the \"DAO-wide -> Temperature Check\" category.\n\nTemperature checks are informal and optional; it's up to you to use the feedback to decide if you want to proceed further with your proposal.", "mimetype": "text/plain", "start_char_idx": 6207, "end_char_idx": 6822, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "37bab68f-f7d6-4f4f-8a4a-074177cd4775": {"__data__": {"id_": "37bab68f-f7d6-4f4f-8a4a-074177cd4775", "embedding": null, "metadata": {"file_path": "src/pages/dao/governance/process.mdx", "file_name": "process.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/governance/process.mdx", "header_path": "/Governance Process [An overview of the ENS DAO's governance processes, and how you can get involved]/Passing a Proposal/", "customer_id": 1, "source_url": "src/pages/dao/governance/process.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["formal", "purpose", "start", "around", "repository", "proposal", "draft", "establish", "discussion", "potential", "create", "governance"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b574a585df475c28afa32c974d576b6d6a2b705d", "node_type": "4", "metadata": {"file_path": "src/pages/dao/governance/process.mdx", "file_name": "process.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/governance/process.mdx"}, "hash": "67d95923dfe6b7602b97453eb848d600ada018a8e0e7a379f524bf8087166582", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "db238dd6-2b8f-4d07-95a4-b6ae66249de3", "node_type": "1", "metadata": {"file_path": "src/pages/dao/governance/process.mdx", "file_name": "process.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/governance/process.mdx", "header_path": "/Governance Process [An overview of the ENS DAO's governance processes, and how you can get involved]/Passing a Proposal/"}, "hash": "66b1b919db4c29b01ab062528be7db65f45dfc7f2ab828454eb9f59060577ff4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1e28483f-5643-4bfb-b854-73ca1cc0f698", "node_type": "1", "metadata": {"header_path": "/Governance Process [An overview of the ENS DAO's governance processes, and how you can get involved]/Passing a Proposal/"}, "hash": "80d831912755d555342189d7b8d76e2127200f7b08c3248fa5d3ae7ddac2de1b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### **Phase 2: Draft Proposal \u2014 GitHub**\n\nThe purpose of the Draft Proposal is to establish formal discussion around a potential proposal.\n\nTo create a Draft Proposal, [create a new governance proposal](https://github.com/ensdomains/governance-docs/new/main/governance-proposals) in the governance-docs repository on GitHub. Start by copying the template for an [executable proposal](executable-proposal-template.md), [social proposal](social-proposal-template.md), or [constitutional amendment](constitutional-amendment-template.md), as appropriate. Once you have written your proposal, create a Draft Pull Request for it. Start a new post in the DAO-wide -> Draft Proposals\" category with a link to the PR for discussion.\n\nReach out to your network to build support for the proposal. Discuss the proposal and solicit delegates to provide feedback on it. Be willing to respond to questions on the Draft Proposal topic and in comments on the pull request. Share your viewpoint, although try to remain as impartial as possible.\n\nIf your proposal is an executable proposal, you will need to specify the actions your proposal will take while it is in draft stage. You may wish to wait until the proposal is stable before doing this. The executable proposal template explains how to do this.\n\nIf your proposal is a constitutional amendment, you will need to produce a diff showing the exact changes you are proposing to make. The easiest way to do this is to go to the [constitution](/dao/constitution), click \"Edit on GitHub\", then click the pencil icon to edit the document in a fork. You can then create a pull request via the GitHub UI and include this in your proposal. You should do this in a separate branch to your draft proposal; while the proposal will be merged as soon as it goes to a vote, the amendment will only be merged if the proposal passes.\n\nOnce you are confident the proposal is in a stable state, you can proceed to phase 3.", "mimetype": "text/plain", "start_char_idx": 6824, "end_char_idx": 8767, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1e28483f-5643-4bfb-b854-73ca1cc0f698": {"__data__": {"id_": "1e28483f-5643-4bfb-b854-73ca1cc0f698", "embedding": null, "metadata": {"file_path": "src/pages/dao/governance/process.mdx", "file_name": "process.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/governance/process.mdx", "header_path": "/Governance Process [An overview of the ENS DAO's governance processes, and how you can get involved]/Passing a Proposal/", "customer_id": 1, "source_url": "src/pages/dao/governance/process.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["github", "contributor", "proposal", "snapshot", "governance", "schedule", "active", "ready", "number", "merge", "assign", "meets"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b574a585df475c28afa32c974d576b6d6a2b705d", "node_type": "4", "metadata": {"file_path": "src/pages/dao/governance/process.mdx", "file_name": "process.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/governance/process.mdx"}, "hash": "67d95923dfe6b7602b97453eb848d600ada018a8e0e7a379f524bf8087166582", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "37bab68f-f7d6-4f4f-8a4a-074177cd4775", "node_type": "1", "metadata": {"file_path": "src/pages/dao/governance/process.mdx", "file_name": "process.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/governance/process.mdx", "header_path": "/Governance Process [An overview of the ENS DAO's governance processes, and how you can get involved]/Passing a Proposal/"}, "hash": "890c65fc6e4e6d434ea2f3a22526bad13284706083d86a434a52ba25edf970a7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3aa6e25a-019c-4643-89fc-a6fd5b448bea", "node_type": "1", "metadata": {"header_path": "/Governance Process [An overview of the ENS DAO's governance processes, and how you can get involved]/"}, "hash": "64de388baee7e76eb559e86ae3e4bfd9aca0fc1212a99e7525d44832c23a945e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### **Phase 3: Active Proposal \u2014 Snapshot / Governance Portal**\n\nUse GitHub to flag your PR as Ready for Review. A contributor will:\n\n1. Merge your PR if it meets the requirements.\n2. Assign your proposal a proposal number in the form EP###.\n3. Schedule the proposal for a snapshot vote.\n\nIf your proposal is a Social Proposal or a Constitutional Amendment, that's it! If the snapshot vote passes, the proposal is passed and you are done.\n\nIf your proposal is an Executable Proposal, you will now need to submit it to the governor contract for voting onchain.\n\nTo enact an Executable Proposal:\n\n1. Ensure at least 100k ENS is delegated to your address in order to submit a proposal, or find a delegate who has enough delegated ENS to meet the proposal threshold to propose on your behalf.\n2. Call the propose() function of the ENS governor (at [governor.ensdao.eth](https://etherscan.io/address/0x323a76393544d5ecca80cd6ef2a560c6a395b7e3)) to deploy your proposal.\n\nOnce the propose() function has been called, a seven day voting period is started. Ongoing discussion can take place on your proposal post. If the proposal passes successfully, a two day timelock will follow before the proposed code is executed.", "mimetype": "text/plain", "start_char_idx": 8769, "end_char_idx": 9980, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3aa6e25a-019c-4643-89fc-a6fd5b448bea": {"__data__": {"id_": "3aa6e25a-019c-4643-89fc-a6fd5b448bea", "embedding": null, "metadata": {"file_path": "src/pages/dao/governance/process.mdx", "file_name": "process.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/governance/process.mdx", "header_path": "/Governance Process [An overview of the ENS DAO's governance processes, and how you can get involved]/", "customer_id": 1, "source_url": "src/pages/dao/governance/process.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["weight", "EIP-712", "designates", "voting", "proposals", "proposal", "delegation", "holders", "create", "their", "cannot", "delegate", "until", "token"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b574a585df475c28afa32c974d576b6d6a2b705d", "node_type": "4", "metadata": {"file_path": "src/pages/dao/governance/process.mdx", "file_name": "process.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/governance/process.mdx"}, "hash": "67d95923dfe6b7602b97453eb848d600ada018a8e0e7a379f524bf8087166582", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1e28483f-5643-4bfb-b854-73ca1cc0f698", "node_type": "1", "metadata": {"file_path": "src/pages/dao/governance/process.mdx", "file_name": "process.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/governance/process.mdx", "header_path": "/Governance Process [An overview of the ENS DAO's governance processes, and how you can get involved]/Passing a Proposal/"}, "hash": "736a51f51024166b036178e34677646ac9d15ad88489339450eae9577465d15e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## **Governance Terminology**\n\n**ENS**: An ERC-20 token that designates the weight of a user\u2019s voting rights. The more ENS a user has in their wallet, the more weight their delegation or vote on a proposal holds.\n\n**Delegation**: ENS holders cannot vote or create proposals until they delegate their voting rights to an address. Delegation can be given to one address at a time, including the holder\u2019s own address. Note that delegation does not lock tokens; it simply adds votes to the chosen delegation address.\n\n**Executable Proposal**: An executable proposal is a type of proposal that is executed by the governance contract through timelock. It can replace the governance contract, transfer tokens from the community treasury, or perform an almost infinite range of other on-chain actions. In order to create a proposal, an address must have at least 0.1% (100k ENS) of all ENS delegated to their address. Proposals are stored in the \u201cproposals\u201d mapping of the Governor smart contract. All proposals are subject to a 7-day voting period.\n\n**Quorum**: In order for a vote to pass, a certain percentage of ENS tokens must vote in the affirmative. The current quorum requirements are:\n\n- Executable Proposals: 1%\n- Social Proposals: 1%\n- Constitutional Amendments: 1%\n\nThe purpose of this quorum is to ensure that the only measures that pass have adequate voter participation.\n\n**Voting on Executable Proposals**: Users can vote for or against single proposals once they have voting rights delegated to their address. Votes can be cast while a proposal is in the \u201cActive\u201d state. Votes can be submitted immediately using \u201ccastVote\u201d or submitted later with \u201ccastVoteBySig\u201d (For more info on castVoteBySig and offline signatures, see EIP-712). If the majority of votes (and a 1% quorum of ENS) vote for a proposal, the proposal may be queued in the Timelock.\n\n**Voting Period**: Proposals on Snapshot have a 5 day voting period. Once an executable proposal has been put forward, ENS community members will have a seven day period (the Voting Period) to cast their votes.\n\n**Timelock**: All governance actions are delayed for a minimum of 2 days by the timelock contract before they can be executed.", "mimetype": "text/plain", "start_char_idx": 9982, "end_char_idx": 12178, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "46e3229f-8619-460f-87c9-7aa8ba490dc2": {"__data__": {"id_": "46e3229f-8619-460f-87c9-7aa8ba490dc2", "embedding": null, "metadata": {"file_path": "src/pages/dao/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/index.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/index.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["community", "protocol", "manage", "twitter", "governs", "welcome", "support", "landing", "register", "users", "context", "official", "where"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7487535ef62920a2375d26873895825683379d42", "node_type": "4", "metadata": {"file_path": "src/pages/dao/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/index.mdx"}, "hash": "313661efd59c28c1cec84dfe93b31161f6f556ab25c15f111aeb2de935bc1ec2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "57490367-1c01-4956-a6f0-fa035949c497", "node_type": "1", "metadata": {"header_path": "/Welcome to ENS DAO [The ENS DAO governs the ENS protocol and treasury]/"}, "hash": "b73ab4a72eff52c787bbd0a128df8f31685f4b8da16d972286ddec93d0bec446", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Welcome to ENS DAO [The ENS DAO governs the ENS protocol and treasury] ## Context for ENS\n\n- [**ENS landing page**](https://ens.domains): Where you can register and manage ENS names.\n- [**X.com**](https://x.com/ensdomains): The official ENS Twitter account.\n- [**Discord**](https://chat.ens.domains): Where the users can get support and the community can hang out. ## Context for Governance\n\n- [**Forum**](https://discuss.ens.domains): For discussion on governance proposals and working group operations.\n- [**Snapshot**](https://snapshot.org/#/ens.eth): For off-chain proposals.\n- [**Agora**](https://agora.ensdao.org): For onchain proposals and token delegation.\n- [**Tally**](https://www.withtally.com/governance/ens): For onchain proposals and token delegation.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 72, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1411cad6-14f1-47fe-a5a3-ceaa6bd320be": {"__data__": {"id_": "1411cad6-14f1-47fe-a5a3-ceaa6bd320be", "embedding": null, "metadata": {"file_path": "src/pages/dao/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/index.mdx", "header_path": "/Welcome to ENS DAO [The ENS DAO governs the ENS protocol and treasury]/", "customer_id": 1, "source_url": "src/pages/dao/index.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["please", "categories", "restricted", "request", "ownership", "treasury", "transfer", "participation", "multisig", "discourse", "onboarding", "contract"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7487535ef62920a2375d26873895825683379d42", "node_type": "4", "metadata": {"file_path": "src/pages/dao/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/index.mdx"}, "hash": "313661efd59c28c1cec84dfe93b31161f6f556ab25c15f111aeb2de935bc1ec2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1bb45773-fe71-471f-a717-fe452f0c550f", "node_type": "1", "metadata": {"file_path": "src/pages/dao/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/index.mdx", "header_path": "/Welcome to ENS DAO [The ENS DAO governs the ENS protocol and treasury]/"}, "hash": "a7d0e39ca2adc9a64fbcd8680f1061afc79b77a3c67dcd973569fff73f4f8d37", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Onboarding & Participation\n\n[**Participation Request Form**](https://airtable.com/shrv2xP39SmuCcd5j): To request write-access for restricted categories of the Discourse Forum, please fill in this form. ---\ndescription: 'Transfer ENS treasury and contract ownership from the ENS Multisig to ENS DAO.'\nauthors: ['fireeyesdao']\nproposal:\n  discourse: '6307'\n  snapshot: '0xfe73d1b06675d6bc1cc074f440c347274d13c55b513ea02ec950efe639adbbb0'\n  type: 'social'\n--- # [EP0.1] [Social] Proposal: Transfer ENS Treasury and Contract Ownership\n\n::authors\n\n| **Status**            | Passed                                                                                                                 |\n| --------------------- | ---------------------------------------------------------------------------------------------------------------------- |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/6307)                                                                            |\n| **Votes**             | [Snapshot](https://snapshot.org/#/ens.eth/proposal/0xfe73d1b06675d6bc1cc074f440c347274d13c55b513ea02ec950efe639adbbb0) |\n\n_Note: This was previously numbered EP1._", "mimetype": "text/plain", "start_char_idx": 771, "end_char_idx": 975, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a35ca2c1-5266-47a4-9c39-67aee592452f": {"__data__": {"id_": "a35ca2c1-5266-47a4-9c39-67aee592452f", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/0.1.mdx", "file_name": "0.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/0.1.mdx", "header_path": "/[EP0.1] [Social] Proposal: Transfer ENS Treasury and Contract Ownership/", "customer_id": 1, "source_url": "src/pages/dao/proposals/0.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["contract", "taken", "ownership", "transferred", "abstract", "treasury", "planning", "launch", "transfer", "recent", "multisig", "summary", "powers", "governance"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a994d5a2080393d753842c17f9c5b45642c990dd", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/0.1.mdx", "file_name": "0.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/0.1.mdx"}, "hash": "d8207c8226ccf6e0a6aed9eb7ff43aea2eaedebe60b2f3f9474fd10fe502f041", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "980c587b-afe2-492a-9f0f-eb16e4a6edab", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/0.1.mdx", "file_name": "0.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/0.1.mdx", "header_path": "/"}, "hash": "b4d90fae7af81f5c96cacca360de7619d7af81dfb51e5ff1a73ba8235fd2334e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2e5b94b9-5f6b-4812-94c6-1a1d5fd87eaa", "node_type": "1", "metadata": {"header_path": "/[EP0.1] [Social] Proposal: Transfer ENS Treasury and Contract Ownership/"}, "hash": "984b28ad423c1076c22a61d4d4e266542cec331c349d1221357a710e25aa19dc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Summary\n\nTransfer ENS treasury and contract ownership from the ENS Multisig to ENS DAO. ## Abstract\n\nWith the recent launch of the ENS DAO and $ENS token, it is now time for key governance powers of ENS to be transferred from the ENS root multisig to the ENS DAO.\n\n\ud83d\udd25_\ud83d\udd25 ([Fire Eyes DAO](https://fireeyes.xyz)) has taken a [central role in the planning and execution](https://mirror.xyz/james.eth/XkOIGh8xu_bF2cQV4QZkKxoN0o1OuNoEb3o-Nzjdo3I) of ENS's decentralization journey and is excited to present this first proposal to the community.\n\nThis proposal will take a different form than normal as it proposes making a request to the ENS multisig root keyholders, rather than executing an action on the DAO.\n\n**This proposal looks to execute a transfer of ownership of several aspects of the protocol which are currently controlled by the ENS root multisig:**\n\n1. We propose that control over the existing ENS treasury is transferred to the DAO.\n2. We propose that ownership of the ENS Registrar Controller and the pricing oracle is transferred to the DAO.\n\n   Ownership of the price oracle gives the DAO the ability to:\n\n   1. Set the contract used to get the USD-ETH price.\\*\n   2. Change the price per year of each length of domain name.\n\n   Ownership of the registrar controller gives the DAO the ability to:\n\n   1. Replace the price oracle contract.\n   2. Withdraw accumulated funds to the DAO treasury.\n   3. Set the minimum and maximum period between the first and second transactions of the registration process.\n\n3. We propose that ownership of the ENS Registrar is transferred to the DAO. Ownership of the .eth registrar gives the DAO the ability to:\n\n   1. Add and remove controller contracts.\n   2. Set the resolver contract for .eth\n\n4. We propose that ownership of the 'reverse' namespace, which governs assignment of primary ENS records, be transferred to the DAO. Ownership of the .reverse TLD gives the DAO the ability to:\n   1. Replace the reverse registrar for Ethereum addresses.\n   2. Create new types of reverse resolution (For example, bitcoin addresses) and update them.\n\nImportantly, control over the ENS root will remain with the ENS root multisig for now. Control over the root allows for the creation and replacement of ENS top-level domains (TLDs) other than .eth (.eth is locked and cannot be changed by the root). This proposal also does not transfer ownership of the DNSSEC registrar contract, necessary for administering the DNSSEC integration used to allow owners of DNS domains to claim them on ENS.\n\nPowers over the ENS root are not being requested immediately, as they are both powers that can be abused to revoke or reassign non-.eth ENS names, and as such the risk to name owners is significantly higher than the other powers the DAO will exercise. Once the DAO has demonstrated its ability to successfully govern ENS, a future proposal will transfer these powers to the DAO.\n\nSnapshot voting on the above proposals will be conducted individually via approval voting; any proposal above that gets at least 50% approval and a quorum of 1% becomes the official policy of the DAO.", "mimetype": "text/plain", "start_char_idx": 974, "end_char_idx": 1064, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ab0f1a2b-f99d-4779-8fb3-59e295bd1c00": {"__data__": {"id_": "ab0f1a2b-f99d-4779-8fb3-59e295bd1c00", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/0.1.mdx", "file_name": "0.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/0.1.mdx", "header_path": "/[EP0.1] [Social] Proposal: Transfer ENS Treasury and Contract Ownership/", "customer_id": 1, "source_url": "src/pages/dao/proposals/0.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["transaction", "transactions", "owners", "multisig", "execute", "petitions", "proposal", "taking", "following", "transfer", "keyholders", "timelock", "located", "formally", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a994d5a2080393d753842c17f9c5b45642c990dd", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/0.1.mdx", "file_name": "0.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/0.1.mdx"}, "hash": "d8207c8226ccf6e0a6aed9eb7ff43aea2eaedebe60b2f3f9474fd10fe502f041", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2e5b94b9-5f6b-4812-94c6-1a1d5fd87eaa", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/0.1.mdx", "file_name": "0.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/0.1.mdx", "header_path": "/[EP0.1] [Social] Proposal: Transfer ENS Treasury and Contract Ownership/"}, "hash": "4976c83ed8897d121f0c269ac1192c552effeca6fb50956d951585e8d8e48331", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b849f16d-d38d-40b0-9b25-cfb3d2d30c97", "node_type": "1", "metadata": {"header_path": "/[EP0.1] [Social] Proposal: Transfer ENS Treasury and Contract Ownership/"}, "hash": "10368996f89bcb2a11f98144595f7c086d82b658e012dc2dc206a3df491e3f1c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\nThe ENS DAO formally petitions the ENS root keyholders (being the owners of the multisig located at multisig.ens.eth) to execute a transaction or transactions taking the following actions:\n\n1. If proposal 1 passes, transfer all ETH and USDC held by multisig.ens.eth to the DAO's timelock contract at wallet.ensdao.eth.\n2. If proposal 2 passes, call `transferOwnership` on the contracts at controller.ens.eth and 0xb9d374d0fe3d8341155663fae31b7beae0ae233a (the price oracle), passing in the address of wallet.ensdao.eth.\n3. If proposal 3 passes, call `transferOwnership` on the contract at registrar.ens.eth, passing in the address of wallet.ensdao.eth.\n4. If proposal 4 passes, call `setSubnodeOwner` on the root, passing in `keccak256('reverse')` and the address of wallet.ensdao.eth.\n\nThe ENS DAO agrees to use these funds and powers in accordance with the ENS Constitution.", "mimetype": "text/plain", "start_char_idx": 4093, "end_char_idx": 4987, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b849f16d-d38d-40b0-9b25-cfb3d2d30c97": {"__data__": {"id_": "b849f16d-d38d-40b0-9b25-cfb3d2d30c97", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/0.1.mdx", "file_name": "0.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/0.1.mdx", "header_path": "/[EP0.1] [Social] Proposal: Transfer ENS Treasury and Contract Ownership/", "customer_id": 1, "source_url": "src/pages/dao/proposals/0.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["significant", "aspects", "taken", "delegates", "precedent", "dispense", "control", "action", "proposal", "looks", "first", "successful", "conclusion", "steps", "token"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a994d5a2080393d753842c17f9c5b45642c990dd", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/0.1.mdx", "file_name": "0.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/0.1.mdx"}, "hash": "d8207c8226ccf6e0a6aed9eb7ff43aea2eaedebe60b2f3f9474fd10fe502f041", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ab0f1a2b-f99d-4779-8fb3-59e295bd1c00", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/0.1.mdx", "file_name": "0.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/0.1.mdx", "header_path": "/[EP0.1] [Social] Proposal: Transfer ENS Treasury and Contract Ownership/"}, "hash": "214d5fe7f8bb1380baf7ae0283c31cfdff545076c5d8b0b17101a01682b91c88", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Conclusion & Next Steps\n\nThis proposal looks to set precedent as the first action taken by ENS delegates & token holders. Upon successful execution, the ENS DAO will hold control over two significant aspects of the protocol, and will be able to dispense funds effectively towards community initiatives.\n\n- Discuss this proposal on the ENS forum and discord.\n- Implement a vote on this proposal on Snapshot.\n- If passed:\n  - Transfer existing assets from the ENS Community multisig to the ENS DAO.\n  - Transfer control over the Registrar Controller to the ENS DAO.\n\nThis vote is being conducted via approval voting; select each option you wish to see pass. Those options that have at least 50% support and 1% quorum when voting ends will pass", "mimetype": "text/plain", "start_char_idx": 4989, "end_char_idx": 5733, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "03d836d0-529c-420e-ab9b-37464f0afa9c": {"__data__": {"id_": "03d836d0-529c-420e-ab9b-37464f0afa9c", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/0.2.mdx", "file_name": "0.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/0.2.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/0.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["primary", "contract", "tokens", "accounts", "amended", "multiplier", "despite", "owned", "receive", "another", "users", "airdrop", "retrospective", "owning"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7f18dfee12840fe64a2c0aa664da0dac4637e691", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/0.2.mdx", "file_name": "0.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/0.2.mdx"}, "hash": "81b4c93e4b156cdafbb2e1a7df46da8852bfc9c0826285d3fc43ee3576bf24ef", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "98367c69-b5c3-4ca8-bf2b-767f3846a248", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "a51dea6d4950f35b1ee96ac0b776798c07a5bf51adcd09eee2d5a3a80d46ec88", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: 'Send 213,049 ENS tokens to a new airdrop contract for users who did not receive the 2x multiplier despite owning a name that was used as a primary ENS name. As amended by EP3.'\nauthors: ['arachnid']\nproposal:\n  discourse: '6755'\n  snapshot: '0xcf77c74696cab1d939936ae8684c0007297bed641f60896ad186354f036d725f'\n  tally: '90476529665364161211265365238121921179703522228680648046371476645353679539653'\n  type: 'executable'\n--- # [EP0.2] [Executable] Retrospective airdrop for accounts that owned another account's primary ENS name\n\n::authors\n\n| **Status**            | Passed                                                                                                                        |\n| --------------------- | ----------------------------------------------------------------------------------------------------------------------------- |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/6755)                                                                                   |\n| **Social Votes**      | [Snapshot](https://snapshot.org/#/ens.eth/proposal/0xcf77c74696cab1d939936ae8684c0007297bed641f60896ad186354f036d725f)        |\n| **Onchain Votes**     | [Tally](https://www.tally.xyz/gov/ens/proposal/90476529665364161211265365238121921179703522228680648046371476645353679539653) |\n\n_Note: This was previously numbered EP2._", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 441, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7b940807-0627-4ecf-8574-438539aa4227": {"__data__": {"id_": "7b940807-0627-4ecf-8574-438539aa4227", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/0.2.mdx", "file_name": "0.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/0.2.mdx", "header_path": "/[EP0.2] [Executable] Retrospective airdrop for accounts that owned another account's primary ENS name/", "customer_id": 1, "source_url": "src/pages/dao/proposals/0.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["primary", "tokens", "whether", "criteria", "abstract", "multiplier", "despite", "receive", "users", "summary", "airdrop", "contract", "owning", "account"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7f18dfee12840fe64a2c0aa664da0dac4637e691", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/0.2.mdx", "file_name": "0.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/0.2.mdx"}, "hash": "81b4c93e4b156cdafbb2e1a7df46da8852bfc9c0826285d3fc43ee3576bf24ef", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "98367c69-b5c3-4ca8-bf2b-767f3846a248", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/0.2.mdx", "file_name": "0.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/0.2.mdx", "header_path": "/"}, "hash": "b32b34742a4152f0b080d9aadba860c891fa37d978752c4b77046376a8d0abd8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5d89b494-2312-48e0-9e6f-a90001708955", "node_type": "1", "metadata": {"header_path": "/[EP0.2] [Executable] Retrospective airdrop for accounts that owned another account's primary ENS name/"}, "hash": "e6427c433d2458dd4985d46eac8ea853f2860b6d929cb82e6c09da280c5c95db", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Summary\n\nSend 213,049 ENS tokens to a new airdrop contract for users who did not receive the 2x multiplier despite owning a name that was used as a primary ENS name. ## Abstract\n\nOne of the criteria used for the ENS airdrop was whether the account had a primary ENS name set. Those accounts that did got a 2x multiplier on their airdrop amount. The intention was to use this as a measure of involvement in the ENS ecosystem; those accounts that set primary ENS names are typically using their names in supported applications, while those that don't are less likely to be doing so.\n\nThe way this was implemented was to award the multiplier to all accounts that had interacted with the reverse registrar. This had the unintended side effect that if a user owned an ENS name on account A, and configured it to resolve to account B, which used it as its primary name, account A would get tokens, and account B would get the multiplier. As B doesn't own any names, the multiplier has no effect and the end result is that some users got fewer tokens than they would have if they had used the same account for everything.\n\nThis proposal aims to correct this, by introducing a new criteria for determining who to award the multiplier to, and creating a new airdrop contract for all accounts that qualify for the new criteria but not the old one.\n\nIn plain english terms, the new criteria is that the account must have at some point in time owned a name that was used as the primary ENS name for an account.\n\nMore formally, for each account `a`, the account is assigned the multiplier if there exists a name `n` and a time before 2021-11-01 00:00:00 UTC, where all of the following are true:\n\n1. `a` is the registrant of `n`.\n2. `n` has a resolver, `r`, set on the ENS registry.\n3. `r` has an `addr` record, `a'`, set for `n`, and has emitted an `AddrChanged` event to record this fact.\n4. The reverse record for `a'` has a resolver, `r'`, set on the ENS registry.\n5. `r'` has a `name` record, `n'`, set for the reverse record of `a`. `r'` is either the default reverse resolver, or has emitted a `NameChanged` event for `n'` and `a'`.\n6. `n == n'`.\n\nThis logic is implemented by [this series of BigQuery queries](https://gist.github.com/Arachnid/667178e854945abaecb6dfd3b6c0c279/106d9bc156988cf96786c71f6448f13fb11599fc), and shows that 1,969 accounts meet these criteria but did not qualify for the multiplier under the original criteria. The sum of the tokens these accounts would be entitled to comes to \\~213,049 ENS tokens. A list of affected accounts and balances is [here](https://gist.github.com/Arachnid/e8b1a18fc19818fb00f51fbb8d90e429).\n\nFurther, a number of users have accidentally transferred their ENS tokens to the token contract, totalling 6,246 contracts across 49 transfers. These tokens should be returned to their previous owners. This proposal, if executed, will transfer 219,295 ENS tokens to [a new merkle airdrop contract ](https://github.com/ensdomains/governance/pull/9)allowing affected users to claim them.", "mimetype": "text/plain", "start_char_idx": 1373, "end_char_idx": 1541, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1eae0915-0f98-49a3-bb3f-8ef6bc111a3f": {"__data__": {"id_": "1eae0915-0f98-49a3-bb3f-8ef6bc111a3f", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/0.2.mdx", "file_name": "0.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/0.2.mdx", "header_path": "/[EP0.2] [Executable] Retrospective airdrop for accounts that owned another account's primary ENS name/", "customer_id": 1, "source_url": "src/pages/dao/proposals/0.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["merkle", "limited", "tokens", "allows", "request", "deploy", "write", "using", "claiming", "methodology", "proofs", "contract", "names", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7f18dfee12840fe64a2c0aa664da0dac4637e691", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/0.2.mdx", "file_name": "0.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/0.2.mdx"}, "hash": "81b4c93e4b156cdafbb2e1a7df46da8852bfc9c0826285d3fc43ee3576bf24ef", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5d89b494-2312-48e0-9e6f-a90001708955", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/0.2.mdx", "file_name": "0.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/0.2.mdx", "header_path": "/[EP0.2] [Executable] Retrospective airdrop for accounts that owned another account's primary ENS name/"}, "hash": "f2ebe674e43e7074fd72c6cb83037340d42ea9f98bbe0963061f400df38407f9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bfef58d2-6ac3-4de9-b61e-ff2a93624757", "node_type": "1", "metadata": {"header_path": "/[EP0.2] [Executable] Retrospective airdrop for accounts that owned another account's primary ENS name/"}, "hash": "1490776bf8fe860e7c8e3ff55b018d529d285b97385f156950768de64d02f320", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\n1. Request that True Names Limited write and deploy a contract that allows claiming of tokens via Merkle Proofs using the same methodology as was used for the airdrop.\n2. Request that True Names Limited make changes to the claim.ens.domains site to support claiming this additional airdrop for qualifying accounts.\n3. Authorise the contract deployed in (1) to spend 219295650978169915391391 base ENS tokens from the ENS DAO account. ## Code\n\n```javascript\nconst ethers = require('ethers')\nconst abi = [\n  'function approve(address _spender, uint256 _value) public returns (bool success)',\n]\nconst token = new ethers.Contract(\n  '0xC18360217D8F7Ab5e7c516566761Ea12Ce7F9D72',\n  abi\n)\nconst airdropAddress = 'TBD'\nconst tx = await token.populateTransaction.approve(\n  airdropAddress,\n  '213049736662531485206636'\n)\nconsole.log([token.address])\nconsole.log([0])\nconsole.log([tx.data])\n```", "mimetype": "text/plain", "start_char_idx": 4405, "end_char_idx": 4855, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1bd58345-3353-40fc-9ab9-7241be175220": {"__data__": {"id_": "1bd58345-3353-40fc-9ab9-7241be175220", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/0.3.mdx", "file_name": "0.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/0.3.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/0.3.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["accidentally", "amend", "numbered", "proposal", "include", "funds", "passed", "returned", "airdrop", "previously", "token"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "69b9e7785bb4744be9335d95436149c8275199cf", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/0.3.mdx", "file_name": "0.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/0.3.mdx"}, "hash": "b86b29b6a4fd14187f2f7eab01968ac3ae464059b2412a4fa6d5f1c3b595ff75", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4c75db23-eaeb-4f69-96e1-c9a9bd7e6ea0", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "06d7462a45b51e67ae92e4febb0c8bec225a8a92711f2dde9106f03fd0c9ff1b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: 'Amend EP2 to include funds accidentally sent back to the $ENS token contract.'\nauthors: ['arachnid']\nproposal:\n  discourse: '6975'\n  snapshot: '0x9ab53c76cee40d58cb27b244dfa5f9f2763bd8b97b1b4be1dd0f0bf706818fb4'\n  type: 'social'\n--- # [EP0.3] [Social] Amend airdrop proposal to include accidentally returned funds\n\n::authors\n\n| **Status**            | Passed                                                                                                                 |\n| --------------------- | ---------------------------------------------------------------------------------------------------------------------- |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/6975)                                                                            |\n| **Votes**             | [Snapshot](https://snapshot.org/#/ens.eth/proposal/0x9ab53c76cee40d58cb27b244dfa5f9f2763bd8b97b1b4be1dd0f0bf706818fb4) |\n\n_Note: This was previously numbered EP3._", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 250, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "04050e01-2864-4c5b-964d-f2c2a1576963": {"__data__": {"id_": "04050e01-2864-4c5b-964d-f2c2a1576963", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/0.3.mdx", "file_name": "0.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/0.3.mdx", "header_path": "/[EP0.3] [Social] Amend airdrop proposal to include accidentally returned funds/", "customer_id": 1, "source_url": "src/pages/dao/proposals/0.3.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["number", "tokens", "accidentally", "amend", "separate", "abstract", "amounted", "include", "funds", "users", "summary", "december", "token"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "69b9e7785bb4744be9335d95436149c8275199cf", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/0.3.mdx", "file_name": "0.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/0.3.mdx"}, "hash": "b86b29b6a4fd14187f2f7eab01968ac3ae464059b2412a4fa6d5f1c3b595ff75", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4c75db23-eaeb-4f69-96e1-c9a9bd7e6ea0", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/0.3.mdx", "file_name": "0.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/0.3.mdx", "header_path": "/"}, "hash": "8e31987c51e9b9a405948ddfdc87e42b77d2adf1f807224ccf5d080fcac340b0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e570fc23-f4f9-4c7c-b0a5-e290cc18009e", "node_type": "1", "metadata": {"header_path": "/[EP0.3] [Social] Amend airdrop proposal to include accidentally returned funds/"}, "hash": "b895a5a55ef83f920d23430f9ab057b3aa4b9eaff51fd30715bde5cebaa79845", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Summary\n\nAmend EP2 to include funds accidentally sent back to the $ENS token contract. ## Abstract\n\nA number of users have [accidentally sent](https://discuss.ens.domains/t/proposal-to-correct-ens-transfer-errors-back-to-contract/5989) $ENS tokens back to the token contract. As of December 6, this amounted to some 6,246 tokens in 49 separate transactions.\n\nThese funds are held in the same account as is used for new airdrop claims, and on May 4, 2022 when the airdrop expires, the DAO will be able to claim them back to its own account.\n\n[EP2](https://discuss.ens.domains/t/executable-retrospective-airdrop-for-accounts-that-owned-another-accounts-primary-ens-name/6755) sends approximately 200k tokens to users who owned ENS names that were used as primary names but did not already benefit from the 2x multiplier.\n\nThis proposal suggests that [EP2](https://discuss.ens.domains/t/executable-retrospective-airdrop-for-accounts-that-owned-another-accounts-primary-ens-name/6755) be amended to include returning the mistakenly sent funds as part of the same airdrop. This minimises overhead, as the DAO will not incur transaction fees or have to set a separate system up, and enables users to get their mistakenly sent funds back promptly.", "mimetype": "text/plain", "start_char_idx": 977, "end_char_idx": 1066, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f2354256-cc12-446b-a3bc-34178b45a141": {"__data__": {"id_": "f2354256-cc12-446b-a3bc-34178b45a141", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/0.3.mdx", "file_name": "0.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/0.3.mdx", "header_path": "/[EP0.3] [Social] Amend airdrop proposal to include accidentally returned funds/", "customer_id": 1, "source_url": "src/pages/dao/proposals/0.3.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["implemented", "tokens", "amend", "logic", "criteria", "accounts", "original", "multiplier", "these", "bigquery", "shows", "qualify", "under", "series", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "69b9e7785bb4744be9335d95436149c8275199cf", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/0.3.mdx", "file_name": "0.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/0.3.mdx"}, "hash": "b86b29b6a4fd14187f2f7eab01968ac3ae464059b2412a4fa6d5f1c3b595ff75", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e570fc23-f4f9-4c7c-b0a5-e290cc18009e", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/0.3.mdx", "file_name": "0.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/0.3.mdx", "header_path": "/[EP0.3] [Social] Amend airdrop proposal to include accidentally returned funds/"}, "hash": "a96a25c7a1d2a1c04a8b34c1e0b87b95e7c8cc967f315f82879d53364c991fac", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\nAmend [EP2](https://discuss.ens.domains/t/executable-retrospective-airdrop-for-accounts-that-owned-another-accounts-primary-ens-name/6755) as follows:\n\n> `-This logic is implemented by [this series of BigQuery queries](https://gist.github.com/Arachnid/667178e854945abaecb6dfd3b6c0c279/1182eea3145394181affe4bb799d6b7858f9eb58), and shows that 1,969 accounts meet these criteria but did not qualify for the multiplier under the original criteria. The sum of the tokens these accounts would be entitled to comes to ~213,049 ENS tokens.`&#x20;\n>\n> `+This logic is implemented by [this series of BigQuery queries](https://gist.github.com/Arachnid/667178e854945abaecb6dfd3b6c0c279/106d9bc156988cf96786c71f6448f13fb11599fc), and shows that 1,969 accounts meet these criteria but did not qualify for the multiplier under the original criteria. The sum of the tokens these accounts would be entitled to comes to ~213,049 ENS tokens.`\n\n> `-A list of affected accounts and balances is [here](https://gist.github.com/Arachnid/d6495f57ac6a5b17cf28e01b646e99a8).`&#x20;\n>\n> `+A list of affected accounts and balances is [here](https://gist.github.com/Arachnid/e8b1a18fc19818fb00f51fbb8d90e429).`\n\n> `-This proposal, if executed, will transfer 213,049 ENS tokens to [a new merkle airdrop contract ](https://github.com/ensdomains/governance/pull/9) allowing affected users to claim them.`&#x20;\n>\n> `+Further, a number of users have accidentally transferred their ENS tokens to the token contract, totalling 6,246 contracts across 49 transfers. These tokens should be returned to their previous owners.`&#x20;\n>\n> `+This proposal, if executed, will transfer 219,295 ENS tokens to [a new merkle airdrop contract ](https://github.com/ensdomains/governance/pull/9) allowing affected users to claim them.`\n\n> `-3. Authorise the contract deployed in (1) to spend 213049736662531485206636 base ENS tokens from the ENS DAO account.`&#x20;\n>\n> `+3. Authorise the contract deployed in (1) to spend 219295650978169915391391 base ENS tokens from the ENS DAO account.`\n\n> `-const tx = await token.populateTransaction.approve(airdropAddress, '213049736662531485206636');`&#x20;\n>\n> `+const tx = await token.populateTransaction.approve(airdropAddress, '219295650978169915391391');`", "mimetype": "text/plain", "start_char_idx": 2223, "end_char_idx": 4493, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "46fb3510-cb07-4a4e-8b11-e7702cf7bd75": {"__data__": {"id_": "46fb3510-cb07-4a4e-8b11-e7702cf7bd75", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/0.4.mdx", "file_name": "0.4.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/0.4.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/0.4.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["foundational", "groups", "creation", "establish", "within", "working", "related", "dissolution", "rules"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d6f4c38d58dda7420ae643988365bba43457efbc", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/0.4.mdx", "file_name": "0.4.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/0.4.mdx"}, "hash": "d15e33f96e5c22d6caae16dfc46329de1421385ce4afff10c7c5593e0851f232", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b6d6fe8e-8dbd-42fd-af18-4ec390a7d606", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "704c60d372e72f962fbd5847f41300d0a8653b419c85aabc0cc7955adc6503ac", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: 'Creates four foundational working groups and establish rules related to the creation, management, and dissolution of working groups within the ENS DAO.'\nauthors: ['futurealisha']\nproposal:\n  discourse: '8156'\n  snapshot: '0x899ead1d9b9b98f63f6a60dc0939bef55dbe365e78c6a550f07be969a47f148b'\n  type: 'social'\n--- # [EP0.4] [Social] Proposal: Creation of Foundational Working Groups and Working Group Rules\n\n::authors\n\n| **Status**            | Passed                                                                                                                 |\n| --------------------- | ---------------------------------------------------------------------------------------------------------------------- |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/8156)                                                                            |\n| **Votes**             | [Snapshot](https://snapshot.org/#/ens.eth/proposal/0x899ead1d9b9b98f63f6a60dc0939bef55dbe365e78c6a550f07be969a47f148b) |\n\n_Note: This was previously numbered EP4._", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 328, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0239a6c3-37aa-4e10-8b07-50019abbbb99": {"__data__": {"id_": "0239a6c3-37aa-4e10-8b07-50019abbbb99", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/0.4.mdx", "file_name": "0.4.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/0.4.mdx", "header_path": "/[EP0.4] [Social] Proposal: Creation of Foundational Working Groups and Working Group Rules/", "customer_id": 1, "source_url": "src/pages/dao/proposals/0.4.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["foundational", "groups", "activities", "abstract", "establish", "within", "create", "working", "related", "place", "summary", "dissolution", "rules"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d6f4c38d58dda7420ae643988365bba43457efbc", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/0.4.mdx", "file_name": "0.4.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/0.4.mdx"}, "hash": "d15e33f96e5c22d6caae16dfc46329de1421385ce4afff10c7c5593e0851f232", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b6d6fe8e-8dbd-42fd-af18-4ec390a7d606", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/0.4.mdx", "file_name": "0.4.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/0.4.mdx", "header_path": "/"}, "hash": "e2e80dcd73b58f93cdba60732255e0936a26e1e01a211bc7c8c622be5e0a6b91", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8208daca-1acb-4d3f-b043-3c9e9956ff15", "node_type": "1", "metadata": {"header_path": "/[EP0.4] [Social] Proposal: Creation of Foundational Working Groups and Working Group Rules/"}, "hash": "df65e811bee8f679ad548cdbaaea606333701573ddcdcffa6877fd343744b91e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Summary\n\nCreate four foundational working groups and establish rules related to the creation, management, and dissolution of working groups within the ENS DAO. ## Abstract\n\nThe work-related activities of the ENS DAO will take place within working groups. Each working group will have a specific focus area and mission, aligned with the constitution and needs of the DAO.\n\nThis proposal establishes four foundational working groups:\n\n1. Meta-Governance: providing governance oversight and support of the management and operation of the ENS DAO and working groups;\n2. ENS Ecosystem: continuing development and improvement of the ENS protocol and ecosystem, with a focus on all technical matters related to ENS;\n3. Community: supporting the people and organizations that are users of ENS, with a focus on non-technical matters; and\n4. Public Goods: amplifying ENS as a public good and funding public goods within the ENS ecosystem, and more broadly within web3.\n\nThis proposal also sets out rules related to the creation and dissolution of working groups and outlines how working groups will be managed within the DAO.", "mimetype": "text/plain", "start_char_idx": 1067, "end_char_idx": 1229, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3867e942-0397-4790-b7e8-5514f5a012d8": {"__data__": {"id_": "3867e942-0397-4790-b7e8-5514f5a012d8", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/0.4.mdx", "file_name": "0.4.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/0.4.mdx", "header_path": "/[EP0.4] [Social] Proposal: Creation of Foundational Working Groups and Working Group Rules/", "customer_id": 1, "source_url": "src/pages/dao/proposals/0.4.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["groups", "motivation", "creation", "action", "manage", "decisions", "passed", "allow", "working", "initiative", "establishing", "every", "without", "decision"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d6f4c38d58dda7420ae643988365bba43457efbc", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/0.4.mdx", "file_name": "0.4.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/0.4.mdx"}, "hash": "d15e33f96e5c22d6caae16dfc46329de1421385ce4afff10c7c5593e0851f232", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8208daca-1acb-4d3f-b043-3c9e9956ff15", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/0.4.mdx", "file_name": "0.4.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/0.4.mdx", "header_path": "/[EP0.4] [Social] Proposal: Creation of Foundational Working Groups and Working Group Rules/"}, "hash": "c1f2ffce195f19b4e70d6e8ed17c17133f2bf8928d773c20cc365243617374fe", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "31e94a70-9b5f-4833-a92e-1ea8e4aa735b", "node_type": "1", "metadata": {"header_path": "/[EP0.4] [Social] Proposal: Creation of Foundational Working Groups and Working Group Rules/"}, "hash": "0fa40c5c5e3c1b1ab53aef2313807aed6b7ab2ba40b8e97e8d0f98de6b113296", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Motivation\n\nEstablishing working groups to manage DAO-related work will allow decisions to be made, and action to be taken, without the need for every initiative or decision of the DAO to be passed as a proposal.\n\nThe creation of working groups will streamline the management of the DAO into core areas that will persist, irrespective of changes in activities or contributors. A working group system will promote stability and encourage long-term thinking and planning.\n\nThe working group structure will provide new and existing community members clear onboarding pathways for meaningful participation and engagement in the DAO.", "mimetype": "text/plain", "start_char_idx": 2188, "end_char_idx": 2819, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "31e94a70-9b5f-4833-a92e-1ea8e4aa735b": {"__data__": {"id_": "31e94a70-9b5f-4833-a92e-1ea8e4aa735b", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/0.4.mdx", "file_name": "0.4.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/0.4.mdx", "header_path": "/[EP0.4] [Social] Proposal: Creation of Foundational Working Groups and Working Group Rules/", "customer_id": 1, "source_url": "src/pages/dao/proposals/0.4.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["foundational", "groups", "establish", "within", "create", "working", "related", "dissolution", "rules", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d6f4c38d58dda7420ae643988365bba43457efbc", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/0.4.mdx", "file_name": "0.4.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/0.4.mdx"}, "hash": "d15e33f96e5c22d6caae16dfc46329de1421385ce4afff10c7c5593e0851f232", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3867e942-0397-4790-b7e8-5514f5a012d8", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/0.4.mdx", "file_name": "0.4.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/0.4.mdx", "header_path": "/[EP0.4] [Social] Proposal: Creation of Foundational Working Groups and Working Group Rules/"}, "hash": "39074ca6ed05dc26198e2f55f03f485bed88a00632d033343f22c6c7fdf6f27e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cfb3e109-90b0-42f4-be1c-035f31492470", "node_type": "1", "metadata": {"header_path": "/[EP0.4] [Social] Proposal: Creation of Foundational Working Groups and Working Group Rules/"}, "hash": "652ef9ca656c9b87d13f40d7427025d8fcefda2c83f024e982db7c5fb48011a9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\nCreate four foundational working groups and establish rules related to the creation, management, and dissolution of working groups within the ENS DAO (\u2018**DAO**\u2019).\n\n1. **Working Groups**\n   1. Four foundational working groups will be established within the DAO:\n      1. Meta-Governance Working Group;\n      2. ENS Ecosystem Working Group;\n      3. Community Working Group; and\n      4. Public Goods Working Group.\n2. **Formation of Working Groups**\n   1. To create a new working group, a social proposal, as defined by the [ENS governance documentation](https://docs.ens.domains/v/governance/process#types-of-proposal) (\u2018**Social Proposal**\u2019), must be put forward and passed by the DAO.\n   2. A Social Proposal to create a new working group must demonstrate that the new working group is needed and the work cannot be undertaken within an existing working group.\n3. **Dissolution of Working Groups**\n   1. A working group can be dissolved by passing a Social Proposal requesting the dissolution of a working group or working groups.\n   2. If an active proposal is put forward to dissolve a working group, all working group funds, including outgoing payments, within that working group, are to be frozen with immediate effect, pending the outcome of the vote.\n   3. Upon the dissolution of a working group, any and all unspent working group funds from that working group, at the time of dissolution, must be immediately returned to the DAO treasury, without delay.\n4. **Working Group Stewards**\n   1. Each working group shall be managed by five stewards (hereafter a '**Steward**' or '**Stewards**').\n   2. Stewards will be elected, unless otherwise stated in these rules, to serve within working groups for a set period of time (hereafter known as a '**Term**' or '**Terms**').\n   3. There are two Terms each calendar year:\n      1. The first Term commences at 9am UTC on January 1 each year and ends immediately prior to the commencement of the second Term ('**First Term**'); and\n      2. The second Term commences at 9am UTC on July 1 each year and ends immediately prior to the commencement of the First Term of the following year ('**Second Term**').\n   4. Stewards are responsible for managing the operations of each working group.\n   5. The responsibilities of Stewards include, but are not limited to:\n      1. Managing operational tasks related to the administration of a working group;\n      2. Maintaining a description that sets forth the focus and intent of the working group;\n      3. Developing working group goals for the Term and providing a clear road map for achieving those goals, to be published in the ENS governance forum within the first 30 days of a Term;\n      4. Approving the creation and dissolution of sub-groups or workstreams within a working group to undertake work and/or carry out specific projects or tasks;\n      5. Requesting working group funds from the DAO; and\n      6. Approving and making funding available to sub-groups, workstreams, or contributors within a working group.\n   6. To request working group funds, Stewards of all working groups will collaborate to submit an active executable proposal, as defined by the [ENS governance documentation](https://docs.ens.domains/v/governance/process#types-of-proposal) ('**Collective Proposal**'), to the DAO within the final 15 days (inclusive) of the months of January, March, July, and October each calendar year (each a '**Funding Window**').\n      1. In order for a working group to have a funding request included in a Collective Proposal submitted to the DAO during a Funding Window, the funding request must have passed as a Social Proposal in the same Funding Window.\n      2. In the case of an emergency, where working group funds are needed by a working group outside of a Funding Window, an Executable Proposal may be submitted at any time by a Steward of a working group to request funds from the DAO.\n5. **Steward Eligibility and Nominations**\n   1. Any individual is eligible to nominate themselves to be a Steward of a working group within the DAO ('**Eligible Person**' or '**Eligible Persons**').\n   2. To be eligible to be included in the ballot for First Term elections of a given year, Eligible Persons must nominate themselves between 9am UTC on December 6 and 9am UTC on December 9 ('**First Term Nomination Window**').\n   3. To be eligible to be included in the ballot for Second Term elections of a given year, Eligible Persons must nominate themselves between 9am UTC on June 6 and 9am UTC on June 9 ('**Second Term Nomination Window**').\n   4. An Eligible Person may nominate themselves to become a Steward of a working group or working groups during the First Term Nomination Window or the Second Term Nomination Window (each a '**Nomination Window**'), by meeting the requirements set out in a call for nominations posted in the relevant working group category of the ENS governance forum.\n   5. An Eligible Person who completes the steps outlined in rule 5.4 above during a Nomination Window and receives 10,000 signed votes to support their nomination will be included in the ballot as a nominee in the election for Stewards that takes place following that Nomination Window ('**Nominee**').\n6. **Steward Elections**\n   1. Elections for working group Stewards for the First Term of a given year will take place by a ranked-choice vote of governance token holders using signed messages and will be open for 120 hours, commencing at 9am UTC on December 10 each year ('**First Term Election Window**').\n   2. Elections for working group Stewards for the Second Term of a given year will take place by a ranked-choice vote of governance token holders using signed messages and will be open for 120 hours, commencing at 9am UTC on June 10 each year (**'Second Term Election Window**').\n   3. The top-ranked Nominees from each working group vote held during a First Term Election Window or a Second Term Election Window (each an '**Election Window**'), will fill any available positions for the role of Steward for those working groups for the Term immediately following an Election Window, based on the order in which they are ranked in each working group vote.\n   4. A Nominee elected to serve as a Steward may not take up the role of Steward for more than two working groups during a single Term.\n7. **Delay of Nominations or Elections**\n   1. In the event that nominations or elections for Stewards take place after a Nomination Window or after an Election Window, the nomination process or elections shall take place, as otherwise prescribed in rules 5 and 6 above, as soon as is practicable after the missed Nomination Window or missed Election Window.\n   2. In the event that an election takes place outside of an Election Window and after the commencement date of a new Term, outgoing Stewards from the previous Term shall stay in their positions as working group Stewards until immediately prior to 9am UTC the day following the end of the election, which, for the avoidance of doubt, is 120 hours after voting in those elections commenced.\n   3. In the event that an election takes place outside of an Election Window and after the commencement date of a new Term, newly elected Stewards will assume the responsibilities of stewardship within working groups at 9am UTC the day following the end of the election, as defined in rule 7.2 above, for the remainder of that Term.\n8. **Core Team Stewards**\n   1. For the First Term, commencing January 1 2022 at 9am UTC, each working group will include two Stewards who are core team members of True Names Limited (Singapore) ('**TNL**'), as selected by TNL and not subject to the Steward nomination and election process outlined in rules 5 and 6 above.\n   2. For the Second Term, commencing July 1 2022 at 9am UTC, each working group will include one Steward who is a core team member of TNL, as selected by TNL and not subject to the Steward nomination and election process outlined in rules 5 and 6 above.\n   3. For the First Term of the following year, commencing January 1 2023, and for all Terms thereafter, all Stewards must be elected and appointed in accordance with the rules set out in rules 5 and 6 above.\n9. **Removal and Replacement of Stewards**\n   1. Stewards may be removed at any time by:\n      1. a Social Proposal passed by the DAO; or\n      2. a simple indicative majority vote among the Stewards of a given working group, with the outcome of the vote communicated in the relevant working group category of the ENS governance forum.\n   2. Stewards may step down from their position at any time by communicating their intention to step down in the ENS governance forum.\n   3. In the event that a Steward is removed, steps down, or is unable to continue as a Steward, for whatever reason, prior to the end of a Term, any vacant positions will be filled for the remainder of a Term by the next highest ranked Nominee(s) in a given working group from the most recent working group vote in the most recent election for Stewards.\n   4. In the event that a Steward steps down or is removed prior to the end of a Term and is a member of the core team of TNL in accordance with rule 8.1 or 8.2 above, the vacant position(s) will be filled by a core team member or team members of TNL, as selected by TNL.\n   5. Any Steward selected by TNL in accordance with rule 8.1 or 8.2 above, can be removed by TNL at any time prior to the end of a Term, for any reason, and replaced by another core team member for the remainder of that Term.\n10. **Compensation for Stewards**\n    1. Elected Stewards are eligible to receive fair compensation for their work as a Steward.\n    2. All requests for Steward compensation must be detailed in a Collective Proposal for working group funds submitted to the DAO in accordance with rule 4.6.\n    3. Stewards may not receive compensation for their role as a Steward outside of that compensation expressly provided for in a Collective Proposal submitted to the DAO in accordance with rule 10.2.\n    4. Stewards selected by TNL are not eligible to receive compensation from the DAO or working groups for their work as a Steward.\n11. **Amendments**\n    1. These rules may be amended at any time by passing a Social Proposal.", "mimetype": "text/plain", "start_char_idx": 2821, "end_char_idx": 13069, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cfb3e109-90b0-42f4-be1c-035f31492470": {"__data__": {"id_": "cfb3e109-90b0-42f4-be1c-035f31492470", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/0.4.mdx", "file_name": "0.4.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/0.4.mdx", "header_path": "/[EP0.4] [Social] Proposal: Creation of Foundational Working Groups and Working Group Rules/", "customer_id": 1, "source_url": "src/pages/dao/proposals/0.4.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["foundational", "groups", "favor", "single", "voting", "creating", "proposal", "choice", "snapshot", "choose", "working", "abstain", "steps"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d6f4c38d58dda7420ae643988365bba43457efbc", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/0.4.mdx", "file_name": "0.4.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/0.4.mdx"}, "hash": "d15e33f96e5c22d6caae16dfc46329de1421385ce4afff10c7c5593e0851f232", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "31e94a70-9b5f-4833-a92e-1ea8e4aa735b", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/0.4.mdx", "file_name": "0.4.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/0.4.mdx", "header_path": "/[EP0.4] [Social] Proposal: Creation of Foundational Working Groups and Working Group Rules/"}, "hash": "ef5f187eb7432b4e6bdb7795acc510b58bb9188e0690464bc386831eeceb2d4a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Next Steps\n\nThis proposal will be open for voting on Snapshot for five days. This vote will be a single choice vote. You may vote 'for' or 'against' the proposal, or choose to abstain from the vote.\n\nBy voting 'for' this proposal, you are voting in favor of creating four foundational working groups and establishing rules related to the creation, management, and dissolution of working groups within the ENS DAO, as provided in this proposal.\n\nGiven the time of year, Steward nominations and elections for the First Term of 2022 will be delayed until the beginning of 2022.\n\nThe Nomination Window for the First Term of 2022 will be open between 9am UTC on January 5, 2022 and 9am UTC on January 8, 2022. Any individual is eligible to nominate themselves to be a Steward of a working group or working groups during this Nomination Window. All Eligible Persons who satisfy the requirements set out in rule 5.4 and 5.5 will be included on the ballot for the First Term elections. More details about the nomination process will be available in the call for nominations released prior to the Nomination Window opening.\n\nThe Election Window for the First Term of 2022 will be open for 120 hours, commencing at 9am UTC on January 10 2022. Following the election, in accordance with rule 7.3, newly elected Stewards will assume the responsibilities of stewardship within working groups at 9am UTC on January 16, 2022, for the remainder of the First Term.\n\nTo stay up to date on developments regarding working groups, please follow the DAO-Bulletin channel in the ENS Discord Server and follow [@ens_dao](https://twitter.com/ens_dao) on Twitter.", "mimetype": "text/plain", "start_char_idx": 13071, "end_char_idx": 14711, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "27057ce6-42e1-4c06-8cf3-adb8383cc697": {"__data__": {"id_": "27057ce6-42e1-4c06-8cf3-adb8383cc697", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/1.1.mdx", "file_name": "1.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.1.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["expire", "temporary", "start", "price", "numbered", "added", "passed", "premium", "names", "previously"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c4769c1a127b735d178499682235056c0975d9c3", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/1.1.mdx", "file_name": "1.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.1.mdx"}, "hash": "4eca5fbcf8c3b33285f2c95e69de994079e63f9d5425fa2b67475519ea616b5d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9bed567e-c282-4781-a9b9-d5725c06d70a", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "e6670e59534246725ff37416d32c01dbfcdc57534b53a951af48a49bb0c94b90", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: 'Increases the start price for the temporary premium added when names expire from $2,000 to $100,000.'\nauthors: ['arachnid']\nproposal:\n  discourse: '9336'\n  snapshot: '0xf854140e16ab96eaed7bbd783f31b441ff5122efc8c002632396df9b7d20342d'\n  tally: '65967822514040846992464797266243157509206510058326665394616765053720727454968'\n  type: 'executable'\n--- # [EP1.1] [Executable] Set the temporary premium start price to $100,000\n\n::authors\n\n| **Status**            | Passed                                                                                                                        |\n| --------------------- | ----------------------------------------------------------------------------------------------------------------------------- |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/9336)                                                                                   |\n| **Votes**             | [Tally](https://www.tally.xyz/gov/ens/proposal/65967822514040846992464797266243157509206510058326665394616765053720727454968) |\n\n_Note: This was previously numbered EP5._", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 366, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9361edb9-4bb5-4837-86c6-73613b861dcf": {"__data__": {"id_": "9361edb9-4bb5-4837-86c6-73613b861dcf", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/1.1.mdx", "file_name": "1.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.1.mdx", "header_path": "/[EP1.1] [Executable] Set the temporary premium start price to $100,000/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["increases", "expire", "temporary", "start", "after", "price", "abstract", "grace", "added", "which", "names", "premium", "summary", "becomes", "through"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c4769c1a127b735d178499682235056c0975d9c3", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/1.1.mdx", "file_name": "1.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.1.mdx"}, "hash": "4eca5fbcf8c3b33285f2c95e69de994079e63f9d5425fa2b67475519ea616b5d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9bed567e-c282-4781-a9b9-d5725c06d70a", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/1.1.mdx", "file_name": "1.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.1.mdx", "header_path": "/"}, "hash": "9cd01d9d221cca1fa5f77be70e162588e71f71a6d134945e05f5f0d00aa8ade4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "efafdf45-1375-4e8f-9f84-d1a43d1ae273", "node_type": "1", "metadata": {"header_path": "/[EP1.1] [Executable] Set the temporary premium start price to $100,000/"}, "hash": "a990c2a2b27d7a9459453845458aa8de80644fe5e703d92623cbbe59f614ad26", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Summary\n\nIncreases the start price for the temporary premium added when names expire from $2,000 to $100,000. ## Abstract\n\nWhen a name expires, it goes through a 90 day grace period, after which it becomes available for general registration. To prevent it becoming a race to register, a 'temporary premium' is attached, starting at $2000 and diminishing to 0 over 28 days. Done properly this results in a dutch auction for the name.\n\nWhen the premium was set, $2000 was roughly the 98th percentile of all auction prices for the short name auction, and seemed like a reasonable starting price. Today, we're seeing multiple reports of names, particularly 3 character names, being snapped up by bots the moment they become available at the maximum premium.\n\nLong-term we can improve the mechanism by setting the initial premium based on the base price of the name (so 3 letter names start off more expensive than 5+ letter names), and by introducing a nonlinear pricing curve (for example, having the price diminish by 1% per hour for 28 days). In the short term, however, I'd like to propose setting the initial premium to a much higher value, which we can do with a simple transaction from the DAO account.\n\nResearch of current trends shows:\n\n- 2,798 names have been bought during the temporary premium period so far.\n- Of these, 340 (12%) were purchased the moment they became available.\n- Registrations of names during the temporary premium period have been on the increase since the DAO launched in November.\n- 12 names have been purchased at a premium and flipped on OpenSea; the most valuable of these, punk.eth, went for $85,636.\n\nAccordingly, I propose increasing the temporary premium from its current value of $2,000 to a new value of $100,000. This will ensure that the start price exceeds the secondary market resale value of almost all released domains, and corresponds to a rate of decrease of just under $150/hr, meaning that less valuable domains will still have a multi-hour period during which people can purchase them before the premium expires.\n\nIn parallel, work should be initiated on a new nonlinear premium model, so that high initial premiums can be combined with a slow decrease towards 0, allowing both high and low value names to be bid on fairly.", "mimetype": "text/plain", "start_char_idx": 1113, "end_char_idx": 1225, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "db4ee585-edc6-40c4-aabe-4a97b2242877": {"__data__": {"id_": "db4ee585-edc6-40c4-aabe-4a97b2242877", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/1.1.mdx", "file_name": "1.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.1.mdx", "header_path": "/[EP1.1] [Executable] Set the temporary premium start price to $100,000/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["other", "instance", "variables", "price", "address", "deploy", "pricing", "current", "passing", "oracle", "period", "identical", "initial", "premium", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c4769c1a127b735d178499682235056c0975d9c3", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/1.1.mdx", "file_name": "1.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.1.mdx"}, "hash": "4eca5fbcf8c3b33285f2c95e69de994079e63f9d5425fa2b67475519ea616b5d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "efafdf45-1375-4e8f-9f84-d1a43d1ae273", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/1.1.mdx", "file_name": "1.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.1.mdx", "header_path": "/[EP1.1] [Executable] Set the temporary premium start price to $100,000/"}, "hash": "ec095af8cae8aa7723b7e115363949090d0a3bda8240fcf273b4b5ad7a46d476", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a10a5575-29fa-487a-b30e-79353ee13fe8", "node_type": "1", "metadata": {"header_path": "/[EP1.1] [Executable] Set the temporary premium start price to $100,000/"}, "hash": "ae586eac3313de219f73b7d6fdaf54a719a907f97851f3bd97a956d448c18fa5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification <a href=\"#specification-3\" id=\"specification-3\"></a>\n\n1. Deploy a new instance of the `LinearPremiumPriceOracle` with the initial premium set to 100,000 USD and the period set to 28 days, with other pricing variables identical to the current oracle.\n2. Call `setPriceOracle` on `controller.ens.eth`, passing in the address of the new price oracle contract. ## Code <a href=\"#code-4\" id=\"code-4\"></a>\n\nTBD ---\ndescription: 'The removal of Brantly Millegan as Director of The ENS Foundation (the \"Foundation Company.\").'\nauthors: ['coltron-code']\nproposal:\n  discourse: '11092'\n  snapshot: '0xa9a2dc5a52ea54b478c4c5fea88540622dff7ad5000f8d146dff482c6e6b6055'\n  type: 'social'\n---", "mimetype": "text/plain", "start_char_idx": 3392, "end_char_idx": 3765, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "701689bb-900c-4986-8bf0-7a5da4d167ac": {"__data__": {"id_": "701689bb-900c-4986-8bf0-7a5da4d167ac", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/1.2.1.mdx", "file_name": "1.2.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.2.1.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.2.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["removal", "numbered", "brantly", "foundation", "director", "rejected", "millegan", "previously"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "29081a337c70a6d9edcb403bfd0f2549c546b5cb", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/1.2.1.mdx", "file_name": "1.2.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.2.1.mdx"}, "hash": "c37efca130ae2d69fe9d9dbe05234b07dcac8c51ed940d76a521b8b6f0accf70", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cae98bcb-10b1-42cc-9b75-0c1a5aca5d70", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/1.2.1.mdx", "file_name": "1.2.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.2.1.mdx", "header_path": "/"}, "hash": "9519ccdb88b18a1eca26fbd40143fbd9c1933ddadcc0ee5b6d5dc6022121c5e8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f75a467d-213e-4032-9836-b43b5686bcba", "node_type": "1", "metadata": {"header_path": "/[EP1.2.1] [Social] Removal of Brantly Millegan as Director of the ENS Foundation/"}, "hash": "f497a5fad360e0c4eac3fd5385140b72b07a4c3a9cbdc886694a1ddbade379a4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# [EP1.2.1] [Social] Removal of Brantly Millegan as Director of the ENS Foundation\n\n::authors\n\n| **Status**            | Rejected                                                                                                               |\n| --------------------- | ---------------------------------------------------------------------------------------------------------------------- |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/11092)                                                                           |\n| **Votes**             | [Snapshot](https://snapshot.org/#/ens.eth/proposal/0xa9a2dc5a52ea54b478c4c5fea88540622dff7ad5000f8d146dff482c6e6b6055) |\n\n_Note: This was previously numbered EP6.1._", "mimetype": "text/plain", "start_char_idx": 274, "end_char_idx": 1001, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f75a467d-213e-4032-9836-b43b5686bcba": {"__data__": {"id_": "f75a467d-213e-4032-9836-b43b5686bcba", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/1.2.1.mdx", "file_name": "1.2.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.2.1.mdx", "header_path": "/[EP1.2.1] [Social] Removal of Brantly Millegan as Director of the ENS Foundation/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.2.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["millegan", "removal", "social", "abstract", "brantly", "adapted", "original", "proposal", "forth", "enact", "foundation", "possible", "summary", "director"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "29081a337c70a6d9edcb403bfd0f2549c546b5cb", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/1.2.1.mdx", "file_name": "1.2.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.2.1.mdx"}, "hash": "c37efca130ae2d69fe9d9dbe05234b07dcac8c51ed940d76a521b8b6f0accf70", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "701689bb-900c-4986-8bf0-7a5da4d167ac", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/1.2.1.mdx", "file_name": "1.2.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.2.1.mdx", "header_path": "/"}, "hash": "ec7b87148e5826c9b41480daf800ace3a51d4b5d20b400430d0e99ee6d0c8726", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "59ee425a-e951-462f-856d-09cc3f754ad8", "node_type": "1", "metadata": {"header_path": "/[EP1.2.1] [Social] Removal of Brantly Millegan as Director of the ENS Foundation/"}, "hash": "4983757eb33e97762aa7ec7cdeeaee811b95e153c37999f281e212bd05df9adb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Summary\n\nThe removal of Brantly Millegan as Director of The ENS Foundation (the \"Foundation Company.\").\n\nAdapted from the original [EP6](https://discuss.ens.domains/t/ep6-cancelled-see-ep-6-1-and-6-2) Proposal. ## Abstract\n\nThis social proposal puts forth a vote to enact the possible removal of Brantly Millegan as the Director of the Foundation Company.\n\nThis action is justifiable under [Clause 15 of the Articles of Association of The ENS Foundation paragraph titled 'Directors'](https://464911102-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FVAbPWWNVJRvupIW5EOre%2Fuploads%2Fgit-blob-4b4ba71c3fe2a3146e9b1402d03ecb69d89c0913%2FM%26A%20-%20Incorp%20-%20The%20ENS%20Foundation%20-%2026%20October%202021.pdf?alt=media#page=9) which states that:\n\n> The Council has the power, exercisable by notice to the Foundation Company, to appoint or remove one or more directors of the Foundation Company.", "mimetype": "text/plain", "start_char_idx": 1003, "end_char_idx": 1216, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f756ac5b-0bf1-4342-a1b9-da45c2c28a7e": {"__data__": {"id_": "f756ac5b-0bf1-4342-a1b9-da45c2c28a7e", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/1.2.1.mdx", "file_name": "1.2.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.2.1.mdx", "header_path": "/[EP1.2.1] [Social] Removal of Brantly Millegan as Director of the ENS Foundation/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.2.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["events", "community", "contraception", "motivation", "masturbation", "brantly", "quoted", "abortion", "proposal", "stewards", "timeline", "another", "posted", "transgenderism", "millegan"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "29081a337c70a6d9edcb403bfd0f2549c546b5cb", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/1.2.1.mdx", "file_name": "1.2.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.2.1.mdx"}, "hash": "c37efca130ae2d69fe9d9dbe05234b07dcac8c51ed940d76a521b8b6f0accf70", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "59ee425a-e951-462f-856d-09cc3f754ad8", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/1.2.1.mdx", "file_name": "1.2.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.2.1.mdx", "header_path": "/[EP1.2.1] [Social] Removal of Brantly Millegan as Director of the ENS Foundation/"}, "hash": "a23719bf191e77695a93902fa739caba4d9df736389dce63b075c43d89b6da9e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "254a800e-2f47-46fe-8fd0-4575f4b61377", "node_type": "1", "metadata": {"header_path": "/[EP1.2.1] [Social] Removal of Brantly Millegan as Director of the ENS Foundation/"}, "hash": "fc82216bf143adfb3136315656362b6ead4260d344e9c3c3318f0f8efaf5c1d7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Motivation\n\nA timeline of events that led to this proposal has been posted by Community WG Stewards in another post [here](https://discuss.ens.domains/t/ens-dao-next-steps-re-brantly/10424/15) and quoted below:\n\n> In May 2016, Brantly Millegan tweeted, \"Homosexual acts are evil. Transgenderism doesn't exist. Abortion is murder. Contraception is a perversion. So is masturbation and porn.\"\n>\n> On February 5th, 2022, brantly.eth, well-known as a prominent representative of the ENS protocol, [defended these views in a publicly held Twitter space](https://www.dropbox.com/s/ljrp0vjibawuufr/Brantly%20ENS.mp4?dl=0).\n>\n> Irrespective of one's personal beliefs, we, as ENS DAO Community Stewards, must set the example for inclusivity and must divide our community.\n>\n> Propagating rhetoric that is viewed as hateful and discriminatory is not conduct conducive to the role as a Community Steward. This conduct will not be tolerated despite one's contributions to the protocol.\n\nThrough this Social Proposal, the DAO shall decide whether Brantly Millegan is deemed capable, or otherwise, of continuing his role as the Director of the Foundation Company, and to appoint a suitable replacement if he is deemed incapable.", "mimetype": "text/plain", "start_char_idx": 1927, "end_char_idx": 3144, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "254a800e-2f47-46fe-8fd0-4575f4b61377": {"__data__": {"id_": "254a800e-2f47-46fe-8fd0-4575f4b61377", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/1.2.1.mdx", "file_name": "1.2.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.2.1.mdx", "header_path": "/[EP1.2.1] [Social] Removal of Brantly Millegan as Director of the ENS Foundation/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.2.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["directorship", "removal", "company", "removed", "brantly", "foundation", "snapshot", "defined", "millegan", "option", "specification", "should", "simple"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "29081a337c70a6d9edcb403bfd0f2549c546b5cb", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/1.2.1.mdx", "file_name": "1.2.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.2.1.mdx"}, "hash": "c37efca130ae2d69fe9d9dbe05234b07dcac8c51ed940d76a521b8b6f0accf70", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f756ac5b-0bf1-4342-a1b9-da45c2c28a7e", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/1.2.1.mdx", "file_name": "1.2.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.2.1.mdx", "header_path": "/[EP1.2.1] [Social] Removal of Brantly Millegan as Director of the ENS Foundation/"}, "hash": "a8a794fb009e3902d06330a8c5ad50e5de9a37a52f916c6645f4078994ef7df3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a4b4c3bc-2fee-48b5-9717-98fb068e1274", "node_type": "1", "metadata": {"header_path": "/[EP1.2.1] [Social] Removal of Brantly Millegan as Director of the ENS Foundation/"}, "hash": "e77f43cc6edd432a756ac5c442642570dac5221251e1c7e6ad2dbecf06fe5d7d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\nThe removal of Brantly Millegan's directorship of the Foundation Company will be defined by a simple \"Yes\" or \"No\" vote with the option to abstain.\n\n**Draft Snapshot Vote**\n\n> Should Brantly Millegan be removed from directorship of the Foundation Company? **Choice 1:** Yes **Choice 2:** No **Choice 3:** Abstain\n\n**If Majority \"Yes:\"** Brantly Millegan is voted to be removed and the results of [**\\[EP6.2\\] \\[Social\\] Election of a new Director of the ENS Foundation**](https://discuss.ens.domains/t/ep6-2-social-replacement-of-brantly-millegan-as-director-of-the-ens-foundation/11093) regarding Brantly Millegan's successor shall be effective immediately.\n\n**If Majority \"No:\"** Brantly Millegan is voted to remain in a directorship position over the Foundation Company, the results of [**\\[EP6.2\\] \\[Social\\] Election of a new Director of the ENS Foundation**](https://discuss.ens.domains/t/ep6-2-social-replacement-of-brantly-millegan-as-director-of-the-ens-foundation/11093) shall be null and void.", "mimetype": "text/plain", "start_char_idx": 3146, "end_char_idx": 4168, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a4b4c3bc-2fee-48b5-9717-98fb068e1274": {"__data__": {"id_": "a4b4c3bc-2fee-48b5-9717-98fb068e1274", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/1.2.1.mdx", "file_name": "1.2.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.2.1.mdx", "header_path": "/[EP1.2.1] [Social] Removal of Brantly Millegan as Director of the ENS Foundation/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.2.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["remove", "formal", "company", "gives", "served", "articles", "brantly", "foundation", "notice", "millegan", "article"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "29081a337c70a6d9edcb403bfd0f2549c546b5cb", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/1.2.1.mdx", "file_name": "1.2.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.2.1.mdx"}, "hash": "c37efca130ae2d69fe9d9dbe05234b07dcac8c51ed940d76a521b8b6f0accf70", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "254a800e-2f47-46fe-8fd0-4575f4b61377", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/1.2.1.mdx", "file_name": "1.2.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.2.1.mdx", "header_path": "/[EP1.2.1] [Social] Removal of Brantly Millegan as Director of the ENS Foundation/"}, "hash": "a569aca429a79be16a0087fa27d3f41755b29847d6d4d67d62d4dd585536391d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Notice to The ENS Foundation\n\nIn line with this proposal, a formal notice is served to the ENS Foundation as follows:\n\n_\"Pursuant to Article 15 of the Articles of Association, the council, hereby, gives notice to the Foundation Company of a vote to remove Brantly Millegan as a director of the Foundation Company._\n\n_Whereas, the council undertook a vote, via Snapshot, to remove Brantly Millegan, as a director of the Foundation Company;_\n\n_Whereas, by a majority of the votes cast is to remove Brantly Millegan, as a director of the Foundation Company;_\n\n_Wherefore, Brantly Millegan is hereby removed as a director of The ENS Foundation and shall cease and desist all duties thereto._\n\n_The result to be formally noted in the council records and shall be promptly communicated to the Foundation Company without further process._\n\n_This Notice shall have no force or effect, if the vote to remove Brantly Millegan fails to obtain a majority of the votes cast.\"_", "mimetype": "text/plain", "start_char_idx": 4170, "end_char_idx": 5136, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "191d23ac-e5ea-4a0a-ba19-b2b105c6f56d": {"__data__": {"id_": "191d23ac-e5ea-4a0a-ba19-b2b105c6f56d", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/1.2.2.mdx", "file_name": "1.2.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.2.2.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.2.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["selected", "numbered", "proposal", "election", "foundation", "director", "previously"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "33eab29a6208ea20adda0029e292aa1e4bad8c0d", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/1.2.2.mdx", "file_name": "1.2.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.2.2.mdx"}, "hash": "6e0410d747d8f65e66f7b38765f291ebedcc424c7051636aada573124ceb9221", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e1dbcedb-8a1c-4a7e-96a6-846d83df6979", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "c8eaccc9c7537b29517efd78b0d6818af3cb1cd1d555de0708564dbba28b1ccd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: 'This proposal is for the election of a new Director of the ENS Foundation.'\nauthors: ['coltron-code']\nproposal:\n  discourse: '11093'\n  snapshot: '0xc4bc562d32e59a528dec301261e8d2b3b0c6880c2b782201c2e9f1ff3979d165'\n  type: 'social'\n--- # [EP1.2.2] [Social] Election of a new Director of The ENS Foundation\n\n::authors\n\n| **Status**            | Passed, avsa.eth selected                                                                                              |\n| --------------------- | ---------------------------------------------------------------------------------------------------------------------- |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/11093)                                                                           |\n| **Votes**             | [Snapshot](https://snapshot.org/#/ens.eth/proposal/0xc4bc562d32e59a528dec301261e8d2b3b0c6880c2b782201c2e9f1ff3979d165) |\n\n_Note: This was previously numbered EP6.2._", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 252, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0a3a5a71-a093-4050-b3f5-a9af479b2388": {"__data__": {"id_": "0a3a5a71-a093-4050-b3f5-a9af479b2388", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/1.2.2.mdx", "file_name": "1.2.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.2.2.mdx", "header_path": "/[EP1.2.2] [Social] Election of a new Director of The ENS Foundation/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.2.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["removal", "social", "abstract", "ratified", "brantly", "proposal", "election", "forth", "director", "summary", "millegan"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "33eab29a6208ea20adda0029e292aa1e4bad8c0d", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/1.2.2.mdx", "file_name": "1.2.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.2.2.mdx"}, "hash": "6e0410d747d8f65e66f7b38765f291ebedcc424c7051636aada573124ceb9221", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e1dbcedb-8a1c-4a7e-96a6-846d83df6979", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/1.2.2.mdx", "file_name": "1.2.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.2.2.mdx", "header_path": "/"}, "hash": "3c2bd5f7e8e740c04661b9eb970e498610f2982bf6ac09257412e3eab92c5bde", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "798dc90e-4dda-4004-bad3-526dcd9ef913", "node_type": "1", "metadata": {"header_path": "/[EP1.2.2] [Social] Election of a new Director of The ENS Foundation/"}, "hash": "05f669063b6a27eac63492ff463e25a55e43bc5c86c264a7f1cafcfe3e928540", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Summary\n\nThis proposal is for the election of a new Director of the ENS Foundation. ## Abstract\n\nThis social proposal puts forth a vote for the election of a new Director of the ENS foundation.\n\nThis is a **contingent proposal** that will only be ratified if [\\[EP6.1\\] \\[Social\\] Removal of Brantly Millegan as Director of The ENS Foundation](https://discuss.ens.domains/t/ep-6-1-social-removal-of-brantly-millegan-as-director-of-the-ens-foundation/11092) determines that Brantly Millegan shall be removed from the directorship of the Foundation Company.\n\n**Contingency:** If majority \"No\" is voted on [\\[EP6.1\\] \\[Social\\] Removal of Brantly Millegan as Director of The ENS Foundation](https://discuss.ens.domains/t/ep-6-1-social-removal-of-brantly-millegan-as-director-of-the-ens-foundation/11092), this proposal shall be null and void.", "mimetype": "text/plain", "start_char_idx": 970, "end_char_idx": 1056, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ea88d072-e97b-4a45-9d0b-0cf9ff4d4df0": {"__data__": {"id_": "ea88d072-e97b-4a45-9d0b-0cf9ff4d4df0", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/1.2.2.mdx", "file_name": "1.2.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.2.2.mdx", "header_path": "/[EP1.2.2] [Social] Election of a new Director of The ENS Foundation/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.2.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ethereum", "whether", "motivation", "removed", "brantly", "deemed", "decide", "foundation", "director", "millegan", "shall", "continuing"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "33eab29a6208ea20adda0029e292aa1e4bad8c0d", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/1.2.2.mdx", "file_name": "1.2.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.2.2.mdx"}, "hash": "6e0410d747d8f65e66f7b38765f291ebedcc424c7051636aada573124ceb9221", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "798dc90e-4dda-4004-bad3-526dcd9ef913", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/1.2.2.mdx", "file_name": "1.2.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.2.2.mdx", "header_path": "/[EP1.2.2] [Social] Election of a new Director of The ENS Foundation/"}, "hash": "406abafb1f6e189264f91640c8df9abc87604973d3f17981d255331f7aecdf05", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "944d94d0-8256-438b-88f9-f4c1698e05c7", "node_type": "1", "metadata": {"header_path": "/[EP1.2.2] [Social] Election of a new Director of The ENS Foundation/"}, "hash": "509d4211f8c41c7b98ae01a56dad5adde7513d050d00d9a6f48072f57c1dacc8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Motivation\n\nBy a vote of the council, Brantly Millegan was removed as a director of the Foundation Company., the DAO shall decide whether Brantly Millegan is deemed capable, or otherwise, of continuing his role as the Director of the Ethereum Foundation, and to appoint a suitable replacement if he is deems incapable.\n\nA timeline of events that led to this proposal has been posted by Community WG Stewards in another post [here](https://discuss.ens.domains/t/ens-dao-next-steps-re-brantly/10424/15) and quoted below:\n\n> In May 2016, Brantly Millegan tweeted that, \"Homosexual acts are evil. Transgenderism doesn't exist. Abortion is murder. Contraception is a perversion. So is masturbation and porn.\"\n>\n> On February 5th, 2022, brantly.eth, well-known as a prominent representative of the ENS protocol, [defended these views in a publicly held Twitter space](https://www.dropbox.com/s/ljrp0vjibawuufr/Brantly%20ENS.mp4?dl=0).\n>\n> Irrespective of one's personal beliefs, we, as ENS DAO Community Stewards, must set the example for inclusivity and must not divide our community.\n>\n> Propagating rhetoric that is viewed as hateful and discriminatory is not conduct conducive to the role as a Community Steward. This conduct will not be tolerated despite one's contributions to the protocol.", "mimetype": "text/plain", "start_char_idx": 1815, "end_char_idx": 3108, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "944d94d0-8256-438b-88f9-f4c1698e05c7": {"__data__": {"id_": "944d94d0-8256-438b-88f9-f4c1698e05c7", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/1.2.2.mdx", "file_name": "1.2.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.2.2.mdx", "header_path": "/[EP1.2.2] [Social] Election of a new Director of The ENS Foundation/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.2.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["there", "select", "shall", "incoming", "voters", "appointment", "ranked", "snapshot", "choice", "abstain", "director", "option", "should", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "33eab29a6208ea20adda0029e292aa1e4bad8c0d", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/1.2.2.mdx", "file_name": "1.2.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.2.2.mdx"}, "hash": "6e0410d747d8f65e66f7b38765f291ebedcc424c7051636aada573124ceb9221", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ea88d072-e97b-4a45-9d0b-0cf9ff4d4df0", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/1.2.2.mdx", "file_name": "1.2.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.2.2.mdx", "header_path": "/[EP1.2.2] [Social] Election of a new Director of The ENS Foundation/"}, "hash": "d37f4f3784da5e26a2e9863111269134f6fbfcc44c59bfb5f7c17d30b118db38", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a39def53-63de-4cd6-9c7f-4c963e6ec2c0", "node_type": "1", "metadata": {"header_path": "/[EP1.2.2] [Social] Election of a new Director of The ENS Foundation/"}, "hash": "eb1db5784e59bcce178806f20dc9585686dbd93005992419841bf334188a29a1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\nThe appointment of the incoming Director will be held by a [ranked choice](https://en.wikipedia.org/wiki/Ranked_voting) Snapshot vote from a list of pre-determined nominees. Additionally, there shall be an option for voters to select \"None of the above\" or abstain from this vote.\n\n**Draft Ranked Choice Snapshot Vote**\n\n> Who should be elected as the new Director of the ENS Foundation?\n>\n> **Choice 1:** [avsa.eth](https://discuss.ens.domains/t/nominations-for-ens-foundation-director-to-replace-brantly-eth/10634/12)\n>\n> **Choice 2:** [daylon.eth](https://discuss.ens.domains/t/nominations-for-ens-foundation-director-to-replace-brantly-eth/10634/9)\n>\n> **Choice 3:** [healingvisions.eth](https://discuss.ens.domains/t/nominations-for-ens-foundation-director-to-replace-brantly-eth/10634/3)\n>\n> **Choice 4:** None of the above.\n>\n> **Choice 5:** Abstain.\n\n**Note:** \\*This list was randomized by @berrios.eth.\n\nThe nomination process for this appointment can be found [here](https://discuss.ens.domains/t/nominations-for-ens-foundation-director-to-replace-brantly-eth/10634), and a summary of Director's roles, responsibilities, compensation and liabilities can be found [here](https://discuss.ens.domains/t/role-responsibilities-of-ens-foundation-director/10632).", "mimetype": "text/plain", "start_char_idx": 3110, "end_char_idx": 4395, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a39def53-63de-4cd6-9c7f-4c963e6ec2c0": {"__data__": {"id_": "a39def53-63de-4cd6-9c7f-4c963e6ec2c0", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/1.2.2.mdx", "file_name": "1.2.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.2.2.mdx", "header_path": "/[EP1.2.2] [Social] Election of a new Director of The ENS Foundation/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.2.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["formal", "company", "gives", "served", "articles", "foundation", "appointment", "notice", "director", "article"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "33eab29a6208ea20adda0029e292aa1e4bad8c0d", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/1.2.2.mdx", "file_name": "1.2.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.2.2.mdx"}, "hash": "6e0410d747d8f65e66f7b38765f291ebedcc424c7051636aada573124ceb9221", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "944d94d0-8256-438b-88f9-f4c1698e05c7", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/1.2.2.mdx", "file_name": "1.2.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.2.2.mdx", "header_path": "/[EP1.2.2] [Social] Election of a new Director of The ENS Foundation/"}, "hash": "a4198ce992445b86ea32886f7983fb9e352d7538c7b194fbabce2fe7996b8d33", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Notice to The ENS Foundation\n\nIn line with this proposal, a formal notice is served to the ENS Foundation as follows:\n\n_\"Pursuant to Article 15 of the Articles of Association, the council, hereby, gives notice to the Foundation Company of the appointment of a director of the Foundation Company, to serve pursuant to the terms of its Articles._\n\n_Whereas, the council undertook a vote, via Snapshot, to remove Brantly Millegan,_\n\n_Whereas, the majority of votes cast was to remove Brantly MIllegan and formal Notice given to the Foundation Company of such result,_\n\n_Whereas, the council undertook a second vote, via Snapshot, from among nominees of the council, to appoint a new director of the Foundation Company;_\n\n_Wherefore, the person, if any, with the highest number of votes cast is hereby appointed a director of the Foundation Company._\n\n_The results to be formally noted in the council records and the name of such person, if there be one, shall be promptly communicated to the Foundation Company without further process.\"_\n\nYou may view each candidates [delegate application here ](https://discuss.ens.domains/t/ens-dao-delegate-applications/815/1154)and comments in on nominees for directorship [here](https://discuss.ens.domains/t/comments-on-ens-foundation-nominees/10658).", "mimetype": "text/plain", "start_char_idx": 4397, "end_char_idx": 5688, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fb0552b6-0f09-4087-9739-a1eb1cf49620": {"__data__": {"id_": "fb0552b6-0f09-4087-9739-a1eb1cf49620", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/1.3.1.mdx", "file_name": "1.3.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.3.1.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.3.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["request", "numbered", "budget", "passed", "working", "previously"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e446ffa9be76bd4fbb0083b99edd238093503be3", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/1.3.1.mdx", "file_name": "1.3.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.3.1.mdx"}, "hash": "5e7657e4b1d8ccbde0bd347cf1c4ec02ad21b19cb6d972bc81abf36e17f126df", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1a585d55-2a6d-4620-a08c-7aa667b179cb", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "93f393f583038426e9c65f402c39fdf492e51fe20308024041d8be28845fb7a3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: 'Budget request for Meta-Governance Working Group'\nauthors: ['arachnid']\nproposal:\n  discourse: '11101'\n  snapshot: '0x90a5f884d59a647a5a78aad8023cf0c00d9efb8499bced7009c60ad90b5e2041'\n  tally: '115615865324623814833258987703837575663427750121726187103053182962864855260310'\n  type: 'executable'\n--- # [EP1.3.1] [Executable] Q1 & Q2 2022 Meta-Governance WG Budget\n\n::authors\n\n| **Status**            | Passed                                                                                                                         |\n| --------------------- | ------------------------------------------------------------------------------------------------------------------------------ |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/11101)                                                                                   |\n| **Votes**             | [Tally](https://www.tally.xyz/gov/ens/proposal/115615865324623814833258987703837575663427750121726187103053182962864855260310) |\n\n_Note: This was previously numbered EP7.1._", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 316, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ed7a25f2-1827-4c18-9281-7aa631bf8277": {"__data__": {"id_": "ed7a25f2-1827-4c18-9281-7aa631bf8277", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/1.3.1.mdx", "file_name": "1.3.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.3.1.mdx", "header_path": "/[EP1.3.1] [Executable] Q1 & Q2 2022 Meta-Governance WG Budget/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.3.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["management", "shall", "administration", "group", "treasury", "focus", "areas", "three", "following", "working", "summary", "manage", "structures", "process", "governance"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e446ffa9be76bd4fbb0083b99edd238093503be3", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/1.3.1.mdx", "file_name": "1.3.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.3.1.mdx"}, "hash": "5e7657e4b1d8ccbde0bd347cf1c4ec02ad21b19cb6d972bc81abf36e17f126df", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1a585d55-2a6d-4620-a08c-7aa667b179cb", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/1.3.1.mdx", "file_name": "1.3.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.3.1.mdx", "header_path": "/"}, "hash": "5996dadf5ecff1b15464ba863e2fed65fc0ab1a80afacc95bf6125623ed4fec2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e014b9ed-8aee-4c24-a88e-0a5519a238a6", "node_type": "1", "metadata": {"header_path": "/[EP1.3.1] [Executable] Q1 & Q2 2022 Meta-Governance WG Budget/"}, "hash": "7d4a220badf1886635acad6dae51ec5bdba13d6aa134314bc96ee2ea5f07dad3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Summary\n\nThe goal of the Meta-Governance working group (MG WG) is to manage the administration of the ENS DAO. The MG WG shall focus on the following three areas over the Q1/Q2 2022 Term.\n\n1. Treasury Management\n2. Governance process and DAO structures\n3. DAO Tooling\n\nThe following budget is requested to provide the MG WG with the resources to work on the areas mentioned above over the Q1/Q2 2022 Term. ### Proposed Budget\n\n**Elected Steward Compensation (2,700 $ENS)**\n\n- Elected steward compensation: 100 $ENS for each 3 elected stewards / month x 6 months = 1,800 $ENS.\n- Lead coordinator compensation, to be paid to the steward that is the lead coordinator or other WG members who take on lead coordinator responsibilities, at the discretion of the Stewards: 150 $ENS / month x 6 months = 900 $ENS", "mimetype": "text/plain", "start_char_idx": 1060, "end_char_idx": 1469, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5996d67f-7756-49a9-a206-d7200da7982b": {"__data__": {"id_": "5996d67f-7756-49a9-a206-d7200da7982b", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/1.3.1.mdx", "file_name": "1.3.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.3.1.mdx", "header_path": "/[EP1.3.1] [Executable] Q1 & Q2 2022 Meta-Governance WG Budget/Proposed Budget/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.3.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["processes", "management", "experiments", "valuing", "diversification", "documentation", "within", "contributors", "subgroups", "related", "administer", "governance"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e446ffa9be76bd4fbb0083b99edd238093503be3", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/1.3.1.mdx", "file_name": "1.3.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.3.1.mdx"}, "hash": "5e7657e4b1d8ccbde0bd347cf1c4ec02ad21b19cb6d972bc81abf36e17f126df", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e014b9ed-8aee-4c24-a88e-0a5519a238a6", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/1.3.1.mdx", "file_name": "1.3.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.3.1.mdx", "header_path": "/[EP1.3.1] [Executable] Q1 & Q2 2022 Meta-Governance WG Budget/"}, "hash": "c213c6f3b1979c6b5ca45a6721bfd9fd249bd081a051980b08eb9598249cca2d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "66eabab4-46b4-4595-8702-f55e980f8aa1", "node_type": "1", "metadata": {"header_path": "/[EP1.3.1] [Executable] Q1 & Q2 2022 Meta-Governance WG Budget/Proposed Budget/"}, "hash": "1bf8d93b01318ca70717869e7f7581ef5ca33fd0de604e4b4d514ce6daae5cd4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "#### Subgroups\n\n**Treasury Management ($20k USDC)**\n\n- Management and diversification strategies.\n\n**DAO Governance ($20k USDC)**\n\n- Documentation related to governance processes within the DAO\n- Administer experiments related to onboarding, engaging, and valuing contributors within the DAO.\n\n**DAO Tooling ($10K USDC)**\n\n- Develop dashboards to improve transparency and visibility on DAO and ENS metrics.\n\nThe MG WG stewards may choose to purchase $ENS with the USDC requested and distribute a mix of USDC and $ENS to contributors as they see fit.", "mimetype": "text/plain", "start_char_idx": 1871, "end_char_idx": 2420, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "66eabab4-46b4-4595-8702-f55e980f8aa1": {"__data__": {"id_": "66eabab4-46b4-4595-8702-f55e980f8aa1", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/1.3.1.mdx", "file_name": "1.3.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.3.1.mdx", "header_path": "/[EP1.3.1] [Executable] Q1 & Q2 2022 Meta-Governance WG Budget/Proposed Budget/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.3.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ecosystem", "request", "numbered", "budget", "passed", "funding", "related", "working", "total", "steward", "previously"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e446ffa9be76bd4fbb0083b99edd238093503be3", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/1.3.1.mdx", "file_name": "1.3.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.3.1.mdx"}, "hash": "5e7657e4b1d8ccbde0bd347cf1c4ec02ad21b19cb6d972bc81abf36e17f126df", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5996d67f-7756-49a9-a206-d7200da7982b", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/1.3.1.mdx", "file_name": "1.3.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.3.1.mdx", "header_path": "/[EP1.3.1] [Executable] Q1 & Q2 2022 Meta-Governance WG Budget/Proposed Budget/"}, "hash": "b83f584d1cc7b9544b5ad1400c7d65b665e24c13f47b2b73f8fa114ebd1fce96", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "#### Total MG WG Funding Request for Q1/Q2 2022\n\nSteward related compensation: 2,700  \n$ENS MG WG funding: $50k USDC ---\ndescription: 'Budget request for ENS Ecosystem Working Group'\nauthors: ['aslobodnik']\nproposal:\n  discourse: '13757'\n  snapshot: '0x97265786d808280adc788e6744dd07afd3ff7e2776527d18f4e19abe1bd6c1a5'\n  tally: '21861129347596183989807248258922558214743224135371288783165185538477576992486'\n  type: 'executable'\n--- # [EP2.2.2] [Executable] Q3 & Q4 2022 Ecosystem WG Budget\n\n::authors\n\n| **Status**            | Passed                                                                                                                         |\n| --------------------- | ------------------------------------------------------------------------------------------------------------------------------ |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/10195)                                                                                   |\n| **Votes**             | [Tally](https://www.tally.xyz/gov/ens/proposal/115615865324623814833258987703837575663427750121726187103053182962864855260310) |\n\n_Note: This was previously numbered EP7.2._", "mimetype": "text/plain", "start_char_idx": 2422, "end_char_idx": 2538, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fdb2e910-6059-4df5-9ae6-92a6fd23f071": {"__data__": {"id_": "fdb2e910-6059-4df5-9ae6-92a6fd23f071", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/1.3.2.mdx", "file_name": "1.3.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.3.2.mdx", "header_path": "/[EP2.2.2] [Executable] Q3 & Q4 2022 Ecosystem WG Budget/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.3.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["start", "ecosystem", "request", "bounties", "requesting", "elected", "three", "bounty", "funding", "operational", "summary", "steward", "initial"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "da3cc7157f3141d3cc7b02e90a09ad4267c5a610", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/1.3.2.mdx", "file_name": "1.3.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.3.2.mdx"}, "hash": "e4d63b236d334795fb27b95309d8dc0c9c9a1823cffee4d24d0176f777c4c8e4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c64951f1-a9d0-4859-8b90-340a5b5492b3", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/1.3.2.mdx", "file_name": "1.3.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.3.2.mdx", "header_path": "/"}, "hash": "1f3702cd64a5927cb985d9537b1b54d2120ac4ec2a45992425ac8dfb7ce8c994", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c38c57b0-996e-437b-b2fe-cc67031b85ae", "node_type": "1", "metadata": {"header_path": "/[EP2.2.2] [Executable] Q3 & Q4 2022 Ecosystem WG Budget/Summary/"}, "hash": "4e2b1e1c8eddd6ad6c00bee067381f852ea9ae98dee42b93e0e434a7ee863dfa", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Summary\n\nThe Ecosystem WG is requesting funding to start the Q1/Q2 2022 term. The initial request is made up of three components:\n\n1. Elected steward compensation: $27,500 in USDC/DAI\n2. Bounties for the Bug Bounty program: $50,000 in USDC/DAI\n3. Ecosystem WG operational budget: $50,000 in USDC/DAI, 6 ETH, and 6,500 $ENS #### Bug Bounty\n\nThe ENS Bounty Program provides bounties for bugs. This program has been running since 2017 and historically has been funded by True Names Limited (TNL). With the creation of the DAO, the DAO is now able to manage and fund the bug bounty. Details of the program can be found [here](https://docs.ens.domains/bug-bounty-program). The $50,000 will be awarded to developers outside of TNL who find vulnerabilities in the ENS protocol. As well as funding for white hat coding in response to system vulnerabilities which arise.", "mimetype": "text/plain", "start_char_idx": 1053, "end_char_idx": 1378, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0c787b74-9663-44c4-83a0-e32891bd48be": {"__data__": {"id_": "0c787b74-9663-44c4-83a0-e32891bd48be", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/1.3.2.mdx", "file_name": "1.3.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.3.2.mdx", "header_path": "/[EP2.2.2] [Executable] Q3 & Q4 2022 Ecosystem WG Budget/Summary/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.3.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["subgroup", "ecosystem", "hackathons", "description", "budget", "integrations", "supports", "operational", "subgroups", "following", "facilitating", "managing", "hackathon"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "da3cc7157f3141d3cc7b02e90a09ad4267c5a610", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/1.3.2.mdx", "file_name": "1.3.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.3.2.mdx"}, "hash": "e4d63b236d334795fb27b95309d8dc0c9c9a1823cffee4d24d0176f777c4c8e4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c38c57b0-996e-437b-b2fe-cc67031b85ae", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/1.3.2.mdx", "file_name": "1.3.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.3.2.mdx", "header_path": "/[EP2.2.2] [Executable] Q3 & Q4 2022 Ecosystem WG Budget/Summary/"}, "hash": "c07e04ae3d4e3b7822a153e1197306583b5cbb6de5486c323ad9d170981babb0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "aa87f8ef-fcc2-45ab-b392-ac48f2c47a60", "node_type": "1", "metadata": {"header_path": "/[EP2.2.2] [Executable] Q3 & Q4 2022 Ecosystem WG Budget/Summary/"}, "hash": "3249161ce2bf1f49c6bfcb9b721eef2a51039869c7dc0eeaae04fe4de543c6a3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "#### Operational Budget\n\nThe operational budget supports ecosystem subgroups with the following allocations:\n\n| Subgroup Name        | Description                                                                                                                       | USDC/DAI | ETH        | $ENS  |\n| -------------------- | --------------------------------------------------------------------------------------------------------------------------------- | -------- | ---------- | ----- |\n| Hackathons           | Bounties, judging, and facilitating and managing ENS's hackathon participation.                                                   | $10,000  |            |       |\n| Integrations         | Bounties for ecosystem integration support                                                                                        | $10,000  | 500        |       |\n| 3rd Party Projects   | Support projects that improve the ENS ecosystem, through proactive and retroactive grants.                                        | $10,000  | 6          | 1,000 |\n| Bug Bounty           | Administer the bug bounty program                                                                                                 | $5,000   |            |       |\n| WG Unallocated Funds | Funds to be allocated to the above subgroups or facilitate the funding of new subgroups as the council of stewards deem necessary | $15,000  | 5,000      |       |\n| Total                | $50,000 USDC/DAI                                                                                                                  | 6 ETH    | 6,500 $ENS |       |", "mimetype": "text/plain", "start_char_idx": 1920, "end_char_idx": 3541, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "aa87f8ef-fcc2-45ab-b392-ac48f2c47a60": {"__data__": {"id_": "aa87f8ef-fcc2-45ab-b392-ac48f2c47a60", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/1.3.2.mdx", "file_name": "1.3.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.3.2.mdx", "header_path": "/[EP2.2.2] [Executable] Q3 & Q4 2022 Ecosystem WG Budget/Summary/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.3.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["months", "stewarding", "coordination", "description", "efforts", "active", "stewards", "elected", "total", "steward", "compensation", "provide"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "da3cc7157f3141d3cc7b02e90a09ad4267c5a610", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/1.3.2.mdx", "file_name": "1.3.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.3.2.mdx"}, "hash": "e4d63b236d334795fb27b95309d8dc0c9c9a1823cffee4d24d0176f777c4c8e4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0c787b74-9663-44c4-83a0-e32891bd48be", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/1.3.2.mdx", "file_name": "1.3.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.3.2.mdx", "header_path": "/[EP2.2.2] [Executable] Q3 & Q4 2022 Ecosystem WG Budget/Summary/"}, "hash": "95859a5a3e0d9f29f7d76aa7a9fd79714ca550c84376b6a189f1a83149699352", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "#### Elected Steward Compensation\n\nProvide compensation for the stewarding and the coordination efforts of active elected stewards.\n\n| Description               | Compensation | Months #         | Stewards # | Total   |\n| ------------------------- | ------------ | ---------------- | ---------- | ------- |\n| Base Compensation         | $1,000/month | 5.5              | 3          | $16,500 |\n| Supplement compensation\\* | $2,000/month | 5.5              | N/A        | $11,000 |\n| Total                     |              | $27,500 USDC/DAI |            |         |\n\n\\*Supplement compensation is allocated to the steward who supports coordination or who has greater involvement in DAO activities above what is expected of a steward. The steward council determines how the supplemental compensation is split between the stewards based on contributions of each steward.\n\nIt should be noted that the ecosystem working group has three elected stewards (@slobo.eth, @Ginge.eth, @bobjiang) and two appointed stewards (@nick.eth, @jefflau.eth). The appointed stewards are not compensated via this request.", "mimetype": "text/plain", "start_char_idx": 3543, "end_char_idx": 4643, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9270c857-164d-40a3-83df-8d3990aae4b9": {"__data__": {"id_": "9270c857-164d-40a3-83df-8d3990aae4b9", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/1.3.3.mdx", "file_name": "1.3.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.3.3.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.3.3.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["community", "request", "numbered", "budget", "passed", "working", "previously"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "eb818dd928b07a7bceb167a8ea94af8e79f9a198", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/1.3.3.mdx", "file_name": "1.3.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.3.3.mdx"}, "hash": "c4eecdb275d71162ae01e1188c147579223b4d0d06d02dd44d83cf280d6b852f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f626cde5-abf6-42e9-99b8-94156d1cfd38", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "e7b990853f29fdaf6653b089b9d160ad6a36c61b4d3835543958b186cfcc3240", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: 'Budget request for Community Working Group'\nauthors: ['coltron-code']\nproposal:\n  discourse: '11046'\n  snapshot: '0x29040b3196c4d7109fdb7b55b8bfd5e85dd074d3cb22266e0d94cc42cfad1eb2'\n  tally: '115615865324623814833258987703837575663427750121726187103053182962864855260310'\n  type: 'executable'\n--- # [EP1.3.3] [Executable] Q1 & Q2 2022 Community WG Budget\n\n::authors\n\n| **Status**            | Passed                                                                                                                         |\n| --------------------- | ------------------------------------------------------------------------------------------------------------------------------ |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/11046)                                                                                   |\n| **Votes**             | [Tally](https://www.tally.xyz/gov/ens/proposal/115615865324623814833258987703837575663427750121726187103053182962864855260310) |\n\n_Note: This was previously numbered EP7.3._", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 314, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "943e91e4-b4a6-4a72-ba3a-7d422781037d": {"__data__": {"id_": "943e91e4-b4a6-4a72-ba3a-7d422781037d", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/1.3.3.mdx", "file_name": "1.3.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.3.3.mdx", "header_path": "/[EP1.3.3] [Executable] Q1 & Q2 2022 Community WG Budget/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.3.3.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["community", "subgroup", "fulfill", "description", "steward", "budget", "learn", "operational", "funding", "summary", "entire", "requested", "needs"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "eb818dd928b07a7bceb167a8ea94af8e79f9a198", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/1.3.3.mdx", "file_name": "1.3.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.3.3.mdx"}, "hash": "c4eecdb275d71162ae01e1188c147579223b4d0d06d02dd44d83cf280d6b852f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f626cde5-abf6-42e9-99b8-94156d1cfd38", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/1.3.3.mdx", "file_name": "1.3.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.3.3.mdx", "header_path": "/"}, "hash": "ea12968d2a620d360ff055a2d3501e96c08358e01e0ff544ff4a3160c9b30c00", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "989bfffb-bff0-4348-a607-fec3bd150902", "node_type": "1", "metadata": {"header_path": "/[EP1.3.3] [Executable] Q1 & Q2 2022 Community WG Budget/"}, "hash": "84d5bd13bf6a29b015ad2aa8be6d21981ea7b718ffb19ce350ac8a6810cf3d13", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Summary\n\n1. **Community WG Operational Budget:** 115,000 USDC/DAI, 1 ETH, and 650 ENS.\n2. **Elected Steward Compensation:** 27,500 in USDC/DAI.\n\n   **Total USD Value:** \\~$155,050. ## Community WG Budget: Q1 & Q2 Steward Term ### 1. Operational Budget\n\nThis funding is requested to fulfill the needs of the entire Q1/Q2 term.\n\n| Subgroup Name                    | Description                                                                                                                                                      | USDC/DAI |   ETH   | $ENS |\n| -------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------- | :------: | :-----: | :--: |\n| Learn Docs                       | Content related to user documentation, tutorials, and case studies.                                                                                              |  11,000  |    0    |  0   |\n| Communications                   | Provide communications services for the DAO to include a bi-weekly digest, weekly twitter spaces, and other outreach services to drive education and engagement. |  10,000  |    0    | 100  |\n| Onboarding                       | Facilitate and coordinate weekly onboarding calls about ENS and the DAO. Also, focus on refining the DAO onboarding process.                                     |  10,000  |    0    |  0   |\n| Discord Support Moderation       | Provides 24-hr support coverage in the ENS Discord.                                                                                                              |  66,000  |    0    |  0   |\n| Translation                      | Administer translation services for the ENS DAO official documents and website details.                                                                          |  6,000   |    0    |  0   |\n| Communidad Para Hispanohablantes | Increase onboarding for the native Spanish-speaking community.                                                                                                   |  2,000   |    0    |  0   |\n| IRL Outreach                     | Community engagement focused on in-person events.                                                                                                                |  10,000  |    0    |  0   |\n| WG Discretionary Funds           | Discretionary funding to be allocated to the above subgroups or facilitate the funding of new subgroups as the council of stewards deem necessary.               |    0     |    1    | 550  |\n| **Total**                        | **115,000**                                                                                                                                                      |  **1**   | **650** |      |\n\n**Note:** This includes subgroups and supports moderation of the ENS Discord. The Discord moderation is a necessary DAO expense carried by the community working group.", "mimetype": "text/plain", "start_char_idx": 1052, "end_char_idx": 1235, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "afce39f0-25af-4d13-ab24-5ddbe0eebd10": {"__data__": {"id_": "afce39f0-25af-4d13-ab24-5ddbe0eebd10", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/1.3.3.mdx", "file_name": "1.3.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.3.3.mdx", "header_path": "/[EP1.3.3] [Executable] Q1 & Q2 2022 Community WG Budget/Community WG Budget: Q1 & Q2 Steward Term/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.3.3.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["community", "months", "description", "stewards", "elected", "three", "entire", "steward", "compensation", "provide"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "eb818dd928b07a7bceb167a8ea94af8e79f9a198", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/1.3.3.mdx", "file_name": "1.3.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.3.3.mdx"}, "hash": "c4eecdb275d71162ae01e1188c147579223b4d0d06d02dd44d83cf280d6b852f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a68fa01b-4653-40d6-ae32-ca8ffff4d049", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/1.3.3.mdx", "file_name": "1.3.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.3.3.mdx", "header_path": "/[EP1.3.3] [Executable] Q1 & Q2 2022 Community WG Budget/Community WG Budget: Q1 & Q2 Steward Term/"}, "hash": "ac7cb4feb0c819386eb5c28c0261200d8d0c4f603f9791a27a08b1781dc2e4b8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7cee1bcf-5e82-42fd-af15-a3e83fab96ef", "node_type": "1", "metadata": {"header_path": "/[EP1.3.3] [Executable] Q1 & Q2 2022 Community WG Budget/Community WG Budget: Q1 & Q2 Steward Term/"}, "hash": "c16c7eb586f1541c9fc905a2e4bb203d389c7a1cc577038450ec86b12b8c38e5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### 2. Elected Steward Compensation\n\nProvide compensation for the three elected Community Stewards @limes , @spencecoin and @coltron.eth for the entire Q1/Q2 steward term.\n\n| Description               | Compensation |  Months #  | Stewards # | Total USDC |\n| ------------------------- | :----------: | :--------: | :--------: | :--------: |\n| Base Compensation         | $1,000/month |    5.5     |     3      |   16,500   |\n| Supplemental Compensation | $2,000/month |    5.5     |     -      |   11,000   |\n| **Total**                 |              | **27,500** |            |            |\n\n**Note:** _Supplemental compensation shall be distributed to stewards and contributors involved in running operations for the WG. The supplemental compensation will be used in situations where contributors or stewards perform duties beyond what is normally expected. The steward council determines how the supplemental compensation will be split between the stewards based on the contributions of each steward._", "mimetype": "text/plain", "start_char_idx": 4062, "end_char_idx": 5067, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7cee1bcf-5e82-42fd-af15-a3e83fab96ef": {"__data__": {"id_": "7cee1bcf-5e82-42fd-af15-a3e83fab96ef", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/1.3.3.mdx", "file_name": "1.3.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.3.3.mdx", "header_path": "/[EP1.3.3] [Executable] Q1 & Q2 2022 Community WG Budget/Community WG Budget: Q1 & Q2 Steward Term/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.3.3.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["considerations", "approve", "multiple", "disbursements", "services", "deemed", "parties", "budget", "these", "using", "guarantee", "funding", "incomplete", "specifically", "rendered"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "eb818dd928b07a7bceb167a8ea94af8e79f9a198", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/1.3.3.mdx", "file_name": "1.3.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.3.3.mdx"}, "hash": "c4eecdb275d71162ae01e1188c147579223b4d0d06d02dd44d83cf280d6b852f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "afce39f0-25af-4d13-ab24-5ddbe0eebd10", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/1.3.3.mdx", "file_name": "1.3.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.3.3.mdx", "header_path": "/[EP1.3.3] [Executable] Q1 & Q2 2022 Community WG Budget/Community WG Budget: Q1 & Q2 Steward Term/"}, "hash": "b68f32337f71ce46b13879bacb1b1afde71c6d49c97fd51d217bfefc7c462f4b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Considerations\n\nMultiple parties will approve all funding disbursements using a multi-sig. This budget does not guarantee disbursement, specifically if services rendered to the DAO are incomplete or deemed unsatisfactory. If these situations arise, the working group will review them publicly at the weekly Community Steward Call.\n\nAny funding not used will be re-allocated back to the treasury. ---\ndescription: 'Budget request for Public Goods Working Group'\nauthors: ['alexvandesande']\nproposal:\n  discourse: '11022'\n  snapshot: '0x8c05add423e7ab5900113b203326286763d402f88300ebbe65c278ed2488b8d1'\n  tally: '115615865324623814833258987703837575663427750121726187103053182962864855260310'\n  type: 'executable'\n---", "mimetype": "text/plain", "start_char_idx": 5069, "end_char_idx": 5468, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fcb2327e-25f5-42ad-ae98-1b8f099db6cc": {"__data__": {"id_": "fcb2327e-25f5-42ad-ae98-1b8f099db6cc", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/1.3.4.mdx", "file_name": "1.3.4.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.3.4.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.3.4.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["numbered", "budget", "passed", "public", "goods", "previously"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "54696254683656e5b45d4f25550d4fae51b92919", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/1.3.4.mdx", "file_name": "1.3.4.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.3.4.mdx"}, "hash": "a0e97eb1be0de8a99d72029678696533c380accd880d3ba9694f3be17fc5e560", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "79950430-a7dc-4411-908d-32623ca70d63", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/1.3.4.mdx", "file_name": "1.3.4.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.3.4.mdx", "header_path": "/"}, "hash": "5bd55e003387d1c6d494acffb3d43711fbb0b5a07f363c43a114d5ef171ebf30", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dbf663bf-1d2e-4450-8583-c5c20b56b372", "node_type": "1", "metadata": {"header_path": "/[EP1.3.4] [Executable] Q1 & Q2 2022 Public Goods WG Budget/"}, "hash": "615b2c671a02896f979e02742c4f84b993c241f055e41a3bba864795b82c7746", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# [EP1.3.4] [Executable] Q1 & Q2 2022 Public Goods WG Budget\n\n::authors\n\n| **Status**            | Passed                                                                                                                         |\n| --------------------- | ------------------------------------------------------------------------------------------------------------------------------ |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/11022)                                                                                   |\n| **Votes**             | [Tally](https://www.tally.xyz/gov/ens/proposal/115615865324623814833258987703837575663427750121726187103053182962864855260310) |\n\n_Note: This was previously numbered EP7.4._", "mimetype": "text/plain", "start_char_idx": 321, "end_char_idx": 1058, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "dbf663bf-1d2e-4450-8583-c5c20b56b372": {"__data__": {"id_": "dbf663bf-1d2e-4450-8583-c5c20b56b372", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/1.3.4.mdx", "file_name": "1.3.4.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.3.4.mdx", "header_path": "/[EP1.3.4] [Executable] Q1 & Q2 2022 Public Goods WG Budget/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.3.4.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["start", "ecosystem", "request", "steward", "proposals", "requesting", "bounties", "elected", "three", "public", "funding", "summary", "goods", "initial"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "54696254683656e5b45d4f25550d4fae51b92919", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/1.3.4.mdx", "file_name": "1.3.4.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.3.4.mdx"}, "hash": "a0e97eb1be0de8a99d72029678696533c380accd880d3ba9694f3be17fc5e560", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fcb2327e-25f5-42ad-ae98-1b8f099db6cc", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/1.3.4.mdx", "file_name": "1.3.4.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.3.4.mdx", "header_path": "/"}, "hash": "dae25de8b493d5bc008003ed0e80912ca6bc3cce2622a64d9bc67fae72728e26", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Summary\n\nThe Ecosystem WG is requesting funding to start the Q1/Q2 2022 term. The initial request is made up of three components:\n\n1. Elected steward compensation: $12,000 in cDAI\n2. Bounties for ENS Public Goods Request for Proposals program: $50,000 in cDAI\n3. Operational Budget $38,000 in cDAI\n\n**Total for Q1 & Q2: $150,000.00 in cDAI**\n\nThe group will be using the price of cDAI in uniswap to calculate the exact amounts requested. We are using cDAI as a accounting unit as a manner to provide a stable value that will still accrue value while not in utilization and resist dollar depreciation. The group can convert them in DAI when sending out payments and grants. The current price of cDAI orbits around 0.021-0.022 per dai and the total budget would be, in today's value, about 6.85M cDAI.\n\n**Elected steward compensation**\n\nThe group has 5 elected stewards: Alex (avsa.eth), makoto.eth, sumedha.eth, Scott and Richard Moore (Ricmoo.eth). Two of these steward are appointed by True Names and will not be receiving compensation, and one of the other stewards has elected to forego compensation and therefore we will asking only for a total of 12k USD for the total Steward Compensation. Pay for past months will be sent immediately and the remaining will be streamed until june 30th.\n\n**Bounties for ENS Public Goods Request for Proposals program:**\n\nThe bounties will be distributed in prizes of $1,000, $5,000, and $10,000 for projects that execute on basic implementation of goals elected by the stewards. These are set to be given directly to projects and not spent on operations. Any funds remaining at the end of the term will be either given back to the DAO or rolled in the Public Goods stewards budget for the next term.\n\n**Operational Budget**\n\nThese will encompass tasks like reimbursements for expenses executed by stewards, payment for projects like a website, social media, or compensation for work done in partner integrations. All payments must be approved by at least 3 other stewards and will be executed in the most transparent manner the stewards can find.", "mimetype": "text/plain", "start_char_idx": 1060, "end_char_idx": 3148, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bb67c201-8516-4817-b4dd-bc7aafa8f532": {"__data__": {"id_": "bb67c201-8516-4817-b4dd-bc7aafa8f532", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/1.4.mdx", "file_name": "1.4.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.4.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.4.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["incurred", "limited", "numbered", "reimburse", "expenses", "passed", "names", "obligations", "behalf", "previously"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3dc821253cfe96e107c1af96b08b2eb5bfd4e8c8", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/1.4.mdx", "file_name": "1.4.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.4.mdx"}, "hash": "fdb8d71d132177bd2fefa6734068d3a908205df3c0334cdefbec0a913de60fc8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "180f259a-35b6-4393-aa9b-16f4f6fc67dc", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "c516813f533599e51be5cca54992acefebd23a5f92f33315f624383ed2f4b023", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: 'Proposes to reimburse True Names Limited for expenses incurred on behalf of ENS and the DAO.'\nauthors: ['arachnid']\nproposal:\n  discourse: '10053'\n  snapshot: '0xdf7e59e58ab0cf5ee0a591bd65369db3ee5091ae3b7ca696a0d31c2eac9959f5'\n  tally: '82659277767818009782194204088226418907972756681918239480374274857360772298879'\n  type: 'executable'\n--- # [EP1.4] [Executable] Reimburse True Names for expenses and tax obligations incurred for the DAO\n\n::authors\n\n| **Status**            | Passed                                                                                                                        |\n| --------------------- | ----------------------------------------------------------------------------------------------------------------------------- |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/10053)                                                                                  |\n| **Votes**             | [Tally](https://www.tally.xyz/gov/ens/proposal/82659277767818009782194204088226418907972756681918239480374274857360772298879) |\n\n_Note: This was previously numbered EP8._", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 359, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3b4c399d-2500-4812-aa04-b28443b92000": {"__data__": {"id_": "3b4c399d-2500-4812-aa04-b28443b92000", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/1.4.mdx", "file_name": "1.4.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.4.mdx", "header_path": "/[EP1.4] [Executable] Reimburse True Names for expenses and tax obligations incurred for the DAO/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.4.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ethereum", "accrued", "controlled", "abstract", "since", "started", "allowing", "revenue", "using", "individuals", "order", "which", "drawn", "seven", "registrations"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3dc821253cfe96e107c1af96b08b2eb5bfd4e8c8", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/1.4.mdx", "file_name": "1.4.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.4.mdx"}, "hash": "fdb8d71d132177bd2fefa6734068d3a908205df3c0334cdefbec0a913de60fc8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "180f259a-35b6-4393-aa9b-16f4f6fc67dc", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/1.4.mdx", "file_name": "1.4.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.4.mdx", "header_path": "/"}, "hash": "27664d932f812d963f8d4258abf2ef056034c050ff0b863e6b7b42df890a4dea", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "28af730d-f7aa-4cc8-b97a-bb6519e358db", "node_type": "1", "metadata": {"header_path": "/[EP1.4] [Executable] Reimburse True Names for expenses and tax obligations incurred for the DAO/Abstract/"}, "hash": "1ed14ee7d33a84aba96418b545ee2a7cb10bc22356f29d5f0b20a0ee1e425cfe", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Abstract\n\nSince ENS started allowing registrations using the annual-fee model, revenue from this has accrued to the ENS root multisig, which is controlled by seven individuals drawn from the Ethereum community. In order to shield them from individual tax liability, True Names Limited, the development company responsible for ENS development, historically identified itself as the beneficial owner of these funds, which obliged True Names to pay tax on any income to the multisig.\n\nIn past years True Names has covered this tax bill from its own reserves - primarily out of funds that were collected during the Short Name auction - but in 2021 revenue rose to a level that meant that was no longer sustainable. Accordingly, True Names requested funds from the multisig to cover the anticipated tax, and the multisig agreed.\n\nThe calculation used to determine the tax owing used the actual income to October 20th, plus a 1/12th buffer to cover the anticipated income between the launch of the DAO and its potential request for control of the funds from the keyholders. This total came to $2,163,921 USDC.\n\nHowever, this failed to take into account the enormous uptick in interest that the announcement of the DAO produced, and so falls significantly short of True Names' actual tax obligations for FY 2021. This proposal requests that the DAO sends True Names the remainder of the funds required to cover the multisig's income during the period that True Names was the beneficial owner.\n\nFurther, True Names has incurred the following expenses on behalf of the DAO in January 2022:\n\n:::note\nThis screenshot could not be found\n:::\n\nWe additionally request the DAO reimburse True Names for these expenses in the total of $48,637.", "mimetype": "text/plain", "start_char_idx": 1131, "end_char_idx": 2860, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "28af730d-f7aa-4cc8-b97a-bb6519e358db": {"__data__": {"id_": "28af730d-f7aa-4cc8-b97a-bb6519e358db", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/1.4.mdx", "file_name": "1.4.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.4.mdx", "header_path": "/[EP1.4] [Executable] Reimburse True Names for expenses and tax obligations incurred for the DAO/Abstract/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.4.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["calculated", "revenue", "exclusively", "using", "bigquery", "following", "registrations", "producing", "multisig", "onchain", "month"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3dc821253cfe96e107c1af96b08b2eb5bfd4e8c8", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/1.4.mdx", "file_name": "1.4.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.4.mdx"}, "hash": "fdb8d71d132177bd2fefa6734068d3a908205df3c0334cdefbec0a913de60fc8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3b4c399d-2500-4812-aa04-b28443b92000", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/1.4.mdx", "file_name": "1.4.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.4.mdx", "header_path": "/[EP1.4] [Executable] Reimburse True Names for expenses and tax obligations incurred for the DAO/"}, "hash": "fb0fd130901140f8498cfbfeeeab2b51b654d6e6ccbef394dcb379d699249493", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9d8ff335-2b79-48b9-8585-18d75bf118ec", "node_type": "1", "metadata": {"header_path": "/[EP1.4] [Executable] Reimburse True Names for expenses and tax obligations incurred for the DAO/Abstract/"}, "hash": "4cb7b0e09d2a4427867f5079cf94c15048fa507392d654ff27a87b6602f13cfc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Revenue\n\nRevenue to the multisig came exclusively from ENS name registrations and renewals, and can be calculated from onchain data using [this BigQuery query](https://gist.github.com/Arachnid/dfd374886a3e6b0a0eb17b26703d776a), producing the following results:\n\n| Month     | ETH           | USD             |\n| --------- | ------------- | --------------- |\n| Jan 2021  | 411.6875      | 498484.22       |\n| Feb 2021  | 383.5613      | 643985.05       |\n| Mar 2021  | 453.5619      | 776834.28       |\n| Apr 2021  | 429.0654      | 955345.36       |\n| May 2021  | 243.0624      | 740165.91       |\n| Jun 2021  | 422.2419      | 993899.95       |\n| Jul 2021  | 384.6863      | 811202.23       |\n| Aug 2021  | 849.9890      | 2563121.38      |\n| Sep 2021  | 728.7825      | 2490699.18      |\n| Oct 2021  | 500.3753      | 1863125.83      |\n| Nov 2021  | 1699.4660     | 7643673.03      |\n| **Total** | **6506.4793** | **19980536.41** |", "mimetype": "text/plain", "start_char_idx": 2862, "end_char_idx": 3799, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9d8ff335-2b79-48b9-8585-18d75bf118ec": {"__data__": {"id_": "9d8ff335-2b79-48b9-8585-18d75bf118ec", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/1.4.mdx", "file_name": "1.4.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.4.mdx", "header_path": "/[EP1.4] [Executable] Reimburse True Names for expenses and tax obligations incurred for the DAO/Abstract/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.4.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["leaves", "company", "comes", "owing", "already", "after", "request", "price", "deploy", "exponential", "deducting", "oracle", "meaning", "shortfall", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3dc821253cfe96e107c1af96b08b2eb5bfd4e8c8", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/1.4.mdx", "file_name": "1.4.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.4.mdx"}, "hash": "fdb8d71d132177bd2fefa6734068d3a908205df3c0334cdefbec0a913de60fc8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "28af730d-f7aa-4cc8-b97a-bb6519e358db", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/1.4.mdx", "file_name": "1.4.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.4.mdx", "header_path": "/[EP1.4] [Executable] Reimburse True Names for expenses and tax obligations incurred for the DAO/Abstract/"}, "hash": "ce4d004a74b1b0fb52a4e063ffe704904069f139c4613580c16a66365e7827bc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0b1fa53c-bf06-4b78-83f9-7bb5189ac03a", "node_type": "1", "metadata": {"header_path": "/[EP1.4] [Executable] Reimburse True Names for expenses and tax obligations incurred for the DAO/"}, "hash": "883ef61ac0874fb1a911d692c8d09620e9d793e6eee485bfc604688585df5d78", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Tax\n\nSingapore's company tax rate is 17%, meaning that the tax owing on $19,980,536 comes to $3,396,691. After deducting the $2,163,921 USDC already sent by the multisig, this leaves a shortfall of $1,232,770. ## Specification\n\nWe request that the DAO send $1,281,407 USDC to coldwallet.ens.eth. ---\ndescription: 'Proposes to deploy Exponential Price Oracle Contract to replace the current Linear Price Oracle Contract'\nauthors: ['jefflau']\nproposal:\n  discourse: '11320'\n  snapshot: '0xe040bdae812af4bd5b3b6e3f46ed1ff4701986c338b827ac8f05807c2b9b9d73'\n  tally: '107166664722174233740232174220463354481004128961821575530758100250899337476509'\n  type: 'executable'\n---", "mimetype": "text/plain", "start_char_idx": 3801, "end_char_idx": 4014, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cbf6fe92-7303-4572-8dc2-84ec7f65e457": {"__data__": {"id_": "cbf6fe92-7303-4572-8dc2-84ec7f65e457", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/1.5.mdx", "file_name": "1.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.5.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.5.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["price", "numbered", "exponential", "passed", "oracle", "premium", "change", "previously"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e5dfc26f6176f20211f73d7f492470b73a9fadbf", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/1.5.mdx", "file_name": "1.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.5.mdx"}, "hash": "de0604267cd7bb52a334ca00ec0751aec9263153603615452f491e10f433f396", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4381633a-2bd5-46e5-a494-fb6551b9743e", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/1.5.mdx", "file_name": "1.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.5.mdx", "header_path": "/"}, "hash": "2200ace27b14b949ca75f3b0c7a028f243f1509e5913c7ed4187538ef1748502", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "699acdc1-4910-4aeb-a118-fd3d9b96382c", "node_type": "1", "metadata": {"header_path": "/[EP1.5] [Executable] Change to Exponential Premium Price Oracle/"}, "hash": "e51457ff28b264fca1a20f034f97feed4ed359cd8dca0ef6af9cd328745727af", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# [EP1.5] [Executable] Change to Exponential Premium Price Oracle\n\n::authors\n\n| **Status**            | Passed                                                                                                                         |\n| --------------------- | ------------------------------------------------------------------------------------------------------------------------------ |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/11320)                                                                                   |\n| **Votes**             | [Tally](https://www.tally.xyz/gov/ens/proposal/107166664722174233740232174220463354481004128961821575530758100250899337476509) |\n\n_Note: This was previously numbered EP9._", "mimetype": "text/plain", "start_char_idx": 373, "end_char_idx": 1113, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "699acdc1-4910-4aeb-a118-fd3d9b96382c": {"__data__": {"id_": "699acdc1-4910-4aeb-a118-fd3d9b96382c", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/1.5.mdx", "file_name": "1.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.5.mdx", "header_path": "/[EP1.5] [Executable] Change to Exponential Premium Price Oracle/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.5.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["deployed", "linear", "mechanism", "those", "abstract", "largely", "recently", "create", "oracle", "distribution", "successful", "wanted", "auctions", "involve", "premium"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e5dfc26f6176f20211f73d7f492470b73a9fadbf", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/1.5.mdx", "file_name": "1.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.5.mdx"}, "hash": "de0604267cd7bb52a334ca00ec0751aec9263153603615452f491e10f433f396", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cbf6fe92-7303-4572-8dc2-84ec7f65e457", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/1.5.mdx", "file_name": "1.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.5.mdx", "header_path": "/"}, "hash": "5b38d95cdb37a469be11dc1155dfc873c4b1b3d7bc980fc9fca3293c9114c5ab", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bc0bbc55-c07f-4013-bc4e-85dbd8843954", "node_type": "1", "metadata": {"header_path": "/[EP1.5] [Executable] Change to Exponential Premium Price Oracle/"}, "hash": "9897ae3bd515760cc16bc1a92361ec148761a05cdf4192527ac668e4d96500ee", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Abstract\n\nIn the past we deployed the Linear Premium Oracle as a way to create a distribution mechanism that did not involve gas auctions and bots. This was largely successful and those who wanted a recently expired name could participate in the dutch auction and not have to compete on gas or with bots. Recently with the popularity of ENS increasing, the demand and the price people are willing to pay for these premium names has increased. In response to this TNL quickly drafted a [short-term solution](https://discuss.ens.domains/t/ep5-executable-set-the-temporary-premium-start-price-to-100-000/9336) to raise the premium to 100k, which we felt was the upper limit for what a linear price decay curve could handle.\n\nThere are a couple reasons for this:\n\n1. On a linear curve, if the price is too high the price decreases too fast and the UX is bad for a user who wants an exact price (especially at the lower end of the curve)\n2. If you extend the time period out, the premium lasts for too long. E.g. If we made it 1 million USD and we wanted a similar price decay speed as 100k, we would need to run it for 10 months, which seems unreasonable.\n\nWe can see from the data below, even with the new 100k premium, we have already had a 5-7 domains go for maximum, or close to maximum premium. If a domain sells for the actual premium, it means the dutch auction is not doing its job and so we need to deploy a long-term solution for dealing with premium pricing.\n\n| Row | Label | Event Timestamp         | Premium            |\n| --- | ----- | ----------------------- | ------------------ |\n| 1   | bbc   | 2022-01-30 17:46:03 UTC | 100230.75321837279 |\n| 2   | mets  | 2022-02-04 17:16:22 UTC | 100082.49847319399 |\n| 3   | fbi   | 2022-02-05 06:02:31 UTC | 99894.00632472485  |\n| 4   | fly   | 2022-02-04 18:49:00 UTC | 99747.22640247621  |\n| 5   | ups   | 2022-02-05 07:46:24 UTC | 98822.14747808539  |\n| 6   | dog   | 2022-02-06 16:19:05 UTC | 92950.09208752771  |\n| 7   | ubs   | 2022-02-01 15:31:35 UTC | 89633.15081063367  |\n| 8   | ubi   | 2022-02-19 17:06:17 UTC | 72161.56328771653  |\n| 9   | punks | 2022-02-16 00:15:44 UTC | 59153.166146336    |\n| 10  | omg   | 2022-02-24 16:05:57 UTC | 33214.42499419019  |\n\nThe long-term solution would be to change the actual curve to something that could start at a very high price, would decrease rapidly at the beginning and slow down at the end so you have better UX for users. And therefore this proposal is to deploy an exponential price curve, that does exactly this. This would allow fairer bidding on both high and low priced names.", "mimetype": "text/plain", "start_char_idx": 1115, "end_char_idx": 3710, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bc0bbc55-c07f-4013-bc4e-85dbd8843954": {"__data__": {"id_": "bc0bbc55-c07f-4013-bc4e-85dbd8843954", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/1.5.mdx", "file_name": "1.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.5.mdx", "header_path": "/[EP1.5] [Executable] Change to Exponential Premium Price Oracle/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.5.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["deployed", "establishment", "wayne", "gregory", "address", "identity", "proposal", "passing", "funding", "provider", "rocco", "server", "contract", "specification", "maintained"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e5dfc26f6176f20211f73d7f492470b73a9fadbf", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/1.5.mdx", "file_name": "1.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.5.mdx"}, "hash": "de0604267cd7bb52a334ca00ec0751aec9263153603615452f491e10f433f396", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "699acdc1-4910-4aeb-a118-fd3d9b96382c", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/1.5.mdx", "file_name": "1.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.5.mdx", "header_path": "/[EP1.5] [Executable] Change to Exponential Premium Price Oracle/"}, "hash": "3e81e0a981ccca323af43dd75bd19128254192c849d9b3fdd838fda50c3f28df", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "911b1476-9ec2-439b-9aa1-6460d706d161", "node_type": "1", "metadata": {"header_path": "/[EP1.5] [Executable] Change to Exponential Premium Price Oracle/"}, "hash": "ea8055eb3ae98bd1b5c4a14b9d550d166e0b69c88807da68d5c1fee588d408d3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Contract Code\n\nhttps://github.com/ensdomains/ens-contracts/blob/master/contracts/ethregistrar/ExponentialPremiumPriceOracle.sol ## Specification\n\nCall `setPriceOracle` on `controller.ens.eth`, passing in the address of the deployed `ExponentialPremiumPriceOracle` (TBD). ---\ndescription: 'This proposal is for the funding and establishment of a community-run OIDC Identity Provider Server for Sign-In with Ethereum, maintained by Spruce.'\nauthors: [\n    # Gregory Rocco\n    'obstropolos',\n    # Wayne Chang\n    'wyc',\n  ]\nproposal:\n  discourse: '11125'\n  snapshot: '0x104eb11d42813fadc2b408856e8fa2c10e34dbb4a87abaa2f089ece124263f16'\n  tally: '82659277767818009782194204088226418907972756681918239480374274857360772298879'\n  type: 'executable'\n---", "mimetype": "text/plain", "start_char_idx": 3712, "end_char_idx": 3842, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c087bc11-5670-45fa-bc91-847d8ab236ed": {"__data__": {"id_": "c087bc11-5670-45fa-bc91-847d8ab236ed", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/1.6.mdx", "file_name": "1.6.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.6.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.6.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["numbered", "identity", "passed", "server", "previously"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2250ef7905fdfdc7514c9a97c6beab8946b0b16f", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/1.6.mdx", "file_name": "1.6.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.6.mdx"}, "hash": "349e748ecb4c8a7c6103d9b713d198e1fdba5680082dce478453bde2d0ac8031", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f04c8b0c-506d-4241-b056-c06c37117b92", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/1.6.mdx", "file_name": "1.6.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.6.mdx", "header_path": "/"}, "hash": "65728f2dfede0bd508f54a544d869a36f3c58364b5f61769d1d924d89685fd7b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "58b1bd0a-f97e-462c-903c-7989853b3b58", "node_type": "1", "metadata": {"header_path": "/[EP1.6] [Executable] A DAO-Governed Identity Server/"}, "hash": "88aaa0b9e5e59a41202043c968a566cda812d8a8e0798cc7b4f33ebb2cc91670", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# [EP1.6] [Executable] A DAO-Governed Identity Server\n\n::authors\n\n| **Status**            | Passed                                                                                                                        |\n| --------------------- | ----------------------------------------------------------------------------------------------------------------------------- |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/11125)                                                                                  |\n| **Social Votes**      | [Snapshot](https://snapshot.box/#/s:ens.eth/proposal/0x104eb11d42813fadc2b408856e8fa2c10e34dbb4a87abaa2f089ece124263f16)      |\n| **Onchain Votes**     | [Tally](https://www.tally.xyz/gov/ens/proposal/82659277767818009782194204088226418907972756681918239480374274857360772298879) |\n\n_Note: This was previously numbered EP10._", "mimetype": "text/plain", "start_char_idx": 478, "end_char_idx": 1357, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "58b1bd0a-f97e-462c-903c-7989853b3b58": {"__data__": {"id_": "58b1bd0a-f97e-462c-903c-7989853b3b58", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/1.6.mdx", "file_name": "1.6.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.6.mdx", "header_path": "/[EP1.6] [Executable] A DAO-Governed Identity Server/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.6.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ethereum", "learned", "authentication", "ability", "already", "abstract", "services", "workflow", "found", "passwordless", "their", "wanted", "integrate", "methods"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2250ef7905fdfdc7514c9a97c6beab8946b0b16f", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/1.6.mdx", "file_name": "1.6.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.6.mdx"}, "hash": "349e748ecb4c8a7c6103d9b713d198e1fdba5680082dce478453bde2d0ac8031", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c087bc11-5670-45fa-bc91-847d8ab236ed", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/1.6.mdx", "file_name": "1.6.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.6.mdx", "header_path": "/"}, "hash": "2940209c9780458602d7ba05e011c8e998d38173953c000e34bb3b0e381c283c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "442a68c0-5763-4f7a-87a4-0f738148706d", "node_type": "1", "metadata": {"header_path": "/[EP1.6] [Executable] A DAO-Governed Identity Server/"}, "hash": "680c551fe2a055d34ddeec8c7e2249757fcc661e619266aba4052b864b332e51", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Abstract\n\nIn our research, we found that many services wanted to integrate the Sign-In with Ethereum workflow but did not have the ability to add new passwordless authentication methods to their installations.\n\nWe also learned that most services already support OpenID Connect, and were open to adding a new Identity Provider that supported the SIWE workflow. By meeting those services where they are today, we can provide a pragmatic stepping stone towards true decentralization, with an upgrade path to direct authentication.\n\nTo ensure adherence to the vision, it's critical that we collaborate with the ENS DAO on hosting and maintenance of this identity server, ensuring the identity server's governance ultimately resides with the community, whom we believe will always put users first. This would be the world's first DAO-hosted, transparent identity server.", "mimetype": "text/plain", "start_char_idx": 1359, "end_char_idx": 2227, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "442a68c0-5763-4f7a-87a4-0f738148706d": {"__data__": {"id_": "442a68c0-5763-4f7a-87a4-0f738148706d", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/1.6.mdx", "file_name": "1.6.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.6.mdx", "header_path": "/[EP1.6] [Executable] A DAO-Governed Identity Server/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.6.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["benefit", "community", "ethereum", "adoption", "would", "touchpoint", "identity", "enablement", "rationale", "organizations", "basic", "increased", "information", "believe", "service"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2250ef7905fdfdc7514c9a97c6beab8946b0b16f", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/1.6.mdx", "file_name": "1.6.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.6.mdx"}, "hash": "349e748ecb4c8a7c6103d9b713d198e1fdba5680082dce478453bde2d0ac8031", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "58b1bd0a-f97e-462c-903c-7989853b3b58", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/1.6.mdx", "file_name": "1.6.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.6.mdx", "header_path": "/[EP1.6] [Executable] A DAO-Governed Identity Server/"}, "hash": "962d1a05353ae14c30be523dc95a67c7d680f6be4ff6bc47723bf4786cabe695", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "60613400-66bf-4527-89aa-d7948d9e0f23", "node_type": "1", "metadata": {"header_path": "/[EP1.6] [Executable] A DAO-Governed Identity Server/"}, "hash": "d0595204debc9b7a33105e060868c01e2bca78c156d9386282331f585916d584", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Rationale\n\nThe ENS service and community would benefit from increased adoption of Sign-In with Ethereum due to the enablement of organizations to use ENS as a core touchpoint for a user's basic identity and information (via ENS profiles).\n\nAdditionally, we believe that a community server could be governed by a credibly neutral party that Ethereum users accept as an intermediary. We think a non-profit or DAO are the right structures to help govern such a server, which is why we would like to collaborate with the ENS DAO on hosting and maintenance.", "mimetype": "text/plain", "start_char_idx": 2229, "end_char_idx": 2784, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "60613400-66bf-4527-89aa-d7948d9e0f23": {"__data__": {"id_": "60613400-66bf-4527-89aa-d7948d9e0f23", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/1.6.mdx", "file_name": "1.6.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.6.mdx", "header_path": "/[EP1.6] [Executable] A DAO-Governed Identity Server/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.6.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["community", "subgroup", "ecosystem", "allocated", "request", "identity", "budget", "proposal", "working", "place", "managed", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2250ef7905fdfdc7514c9a97c6beab8946b0b16f", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/1.6.mdx", "file_name": "1.6.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.6.mdx"}, "hash": "349e748ecb4c8a7c6103d9b713d198e1fdba5680082dce478453bde2d0ac8031", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "442a68c0-5763-4f7a-87a4-0f738148706d", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/1.6.mdx", "file_name": "1.6.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.6.mdx", "header_path": "/[EP1.6] [Executable] A DAO-Governed Identity Server/"}, "hash": "6edcec3711d743bd23b62ecf54a0daf659e02214b3bbf810ab56523dbc91a23b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification and Proposal Request\n\n- **Establish a Subgroup in the Ecosystem Working Group: Community Managed Identity Server**\n  - **$250,000** allocated from the DAO to the Ecosystem WG to fund this Subgroup.\n    - **$75,000** from the allocated budget will be in place for community contributions related to the Subgroup, including grants for development, evangelism, and retroactive rewards for SIWE-related efforts.\n    - **$175,000** from the allocated budget will go towards Spruce's maintenance contract (see below). Paid 25% upon execution, and then an additional 25% every 3 months.\n  - This Subgroup will support the administration and maintenance of a DAO-run Identity Server for Sign-In with Ethereum. This subgroup will also serve as a support system to help onboard organizations, and evangelize Sign-In with Ethereum to allow users to control their identifiers and use ENS profiles as a base identity.\n  - An important part of duties this group will include creating training, onboarding, and maintenance materials for managing the server on a specified cloud account.\n  - Additionally, the group will be responsible for providing updates to the broader community on the health of the server.\n  - Initial lead: Rocco from Spruce, while continuing to add interested parties to the group for good governance.\n- **A 12-month maintenance contract awarded to Spruce for the continuous monitoring, maintaining, and improving of the deployed Identity Server.**\n  - Spruce will help host a [`siwe-oidc`](https://github.com/spruceid/siwe-oidc) implementation in a lightweight fashion, using a well-known infrastructure provider ultimately administered by the Subgroup.\n    - Spruce will also be responsible for the deployment, and continuous monitoring, maintenance, and improvements on the server throughout the duration of the contract.\n  - If the DAO votes to end the contract funding will be returned against the remaining days of the year and we will provide sufficient training for administrators to transfer those duties to a new organization.\n  - The server is expected to be live within 60 days of this proposal being accepted, assuming that access to the necessary systems and people is provided on a timely basis.\n  - The 1-year contract begins when this proposal is accepted, and there will not be additional setup fees even if there are increased coordination costs to get the service running.", "mimetype": "text/plain", "start_char_idx": 2786, "end_char_idx": 5203, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5fab2b80-4bec-48c2-b029-a6afd5afd1f2": {"__data__": {"id_": "5fab2b80-4bec-48c2-b029-a6afd5afd1f2", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/1.7.mdx", "file_name": "1.7.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.7.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.7.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["tokens", "numbered", "airdrops", "passed", "transferring", "revoking", "airdrop", "previously"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e2162248fd79a9b62b1c7a06b5e11e6b5e952540", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/1.7.mdx", "file_name": "1.7.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.7.mdx"}, "hash": "19b7c3075660a883217c2a753f9313189081c5f2eb6057814dc6e256623add9a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b74becae-b84e-4703-a880-23100ebb3a65", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "0c856f836a2d379c9f2e71de70e5ccb7dea265c5f4b4a8bcc4b9c700e29b03c1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: 'Ens the $ENS airdrop and EP2 airdrop by transferring tokens and revoking approvals.'\nauthors: ['arachnid']\nproposal:\n  discourse: '12047'\n  snapshot: '0x718c496b04017fb82749b68570d12f32c839f59b9f9433df127f48bf99121eb7'\n  tally: '99882233577221676057992280816078245519848378270443751235073826886360950537295'\n  type: 'executable'\n--- # [EP1.7] [Executable] End the $ENS and EP2 airdrops\n\n::authors\n\n| **Status**            | Passed                                                                                                                        |\n| --------------------- | ----------------------------------------------------------------------------------------------------------------------------- |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/12047)                                                                                  |\n| **Votes**             | [Tally](https://www.tally.xyz/gov/ens/proposal/99882233577221676057992280816078245519848378270443751235073826886360950537295) |\n\n_Note: This was previously numbered EP11._", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 350, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "557dd585-8f5d-484e-852d-94b6dde61e56": {"__data__": {"id_": "557dd585-8f5d-484e-852d-94b6dde61e56", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/1.7.mdx", "file_name": "1.7.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.7.mdx", "header_path": "/[EP1.7] [Executable] End the $ENS and EP2 airdrops/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.7.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["approval", "tokens", "remaining", "after", "abstract", "address", "proposes", "given", "transferring", "revoking", "airdrop", "token", "terminated"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e2162248fd79a9b62b1c7a06b5e11e6b5e952540", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/1.7.mdx", "file_name": "1.7.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.7.mdx"}, "hash": "19b7c3075660a883217c2a753f9313189081c5f2eb6057814dc6e256623add9a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b74becae-b84e-4703-a880-23100ebb3a65", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/1.7.mdx", "file_name": "1.7.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.7.mdx", "header_path": "/"}, "hash": "84596d7da260c3b7fcef195e3af152b933ef462f606b49e161fde992783bb479", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "db39f0e5-a45b-4f68-aa64-3910b7a02211", "node_type": "1", "metadata": {"header_path": "/[EP1.7] [Executable] End the $ENS and EP2 airdrops/"}, "hash": "cbc38151a2603ac5d0c44facf116f37300e7355e98b66630658ae90e4c4de411", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Abstract\n\nThe $ENS airdrop can be terminated at any time on or after May 4, 2022 by a call from the DAO, transferring remaining tokens to an address it specifies. The EP2 airdrop can be terminated at any time by revoking the token approval given to it by the DAO. This EP proposes to execute both of these actions on or shortly after May 4, 2022. ## Specification\n\n- Call 'sweep' on the ENS token contract, specifying the DAO wallet as target address.\n- Call 'approve' on the ENS token contract, specifying the EP2 airdrop contract and an allowance of 0.", "mimetype": "text/plain", "start_char_idx": 1078, "end_char_idx": 1427, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3c207b91-c8bd-409c-a651-d82b0c4bfbd6": {"__data__": {"id_": "3c207b91-c8bd-409c-a651-d82b0c4bfbd6", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/1.7.mdx", "file_name": "1.7.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.7.mdx", "header_path": "/[EP1.7] [Executable] End the $ENS and EP2 airdrops/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.7.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["amount", "transactions", "0x4a1241c2cf2fd4a39918bcd738f90bd7094ec2dc", "0xc18360217d8f7ab5e7c516566761ea12ce7f9d72", "address", "argument", "sweep", "0xfe89cc7abb2c4183683ab71653c4cdc9b02d44b7", "spender", "value", "approve", "function"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e2162248fd79a9b62b1c7a06b5e11e6b5e952540", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/1.7.mdx", "file_name": "1.7.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.7.mdx"}, "hash": "19b7c3075660a883217c2a753f9313189081c5f2eb6057814dc6e256623add9a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "db39f0e5-a45b-4f68-aa64-3910b7a02211", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/1.7.mdx", "file_name": "1.7.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.7.mdx", "header_path": "/[EP1.7] [Executable] End the $ENS and EP2 airdrops/"}, "hash": "594d8b8d8dcbd2a425bc0c0cfef228d9e8bed64d58149e145573345e5410f514", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Transactions\n\n| Address                                    | Value | Function | Argument | Value                                      |\n| ------------------------------------------ | ----- | -------- | -------- | ------------------------------------------ |\n| 0xC18360217D8F7Ab5e7c516566761Ea12Ce7F9D72 | 0     | sweep    | dest     | 0xFe89cc7aBB2C4183683ab71653C4cdc9B02D44b7 |\n| 0xC18360217D8F7Ab5e7c516566761Ea12Ce7F9D72 | 0     | approve  | spender  | 0x4A1241C2Cf2fD4a39918BCd738f90Bd7094eC2DC |\n| amount                                     | 0     |          |          |                                            |", "mimetype": "text/plain", "start_char_idx": 1638, "end_char_idx": 2264, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f83c6da7-bd73-4cf4-bd9d-7bf093254c3f": {"__data__": {"id_": "f83c6da7-bd73-4cf4-bd9d-7bf093254c3f", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/1.8.mdx", "file_name": "1.8.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.8.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.8.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["those", "specified", "group", "replace", "passed", "working", "repeal", "rules"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4236b9482b685947720b3e60876c3ee3c7af1f1d", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/1.8.mdx", "file_name": "1.8.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.8.mdx"}, "hash": "f663b3c720aa6753e186cb30d628aa275af019328e37559d5ac074b9781cb5f5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "89b73b4b-bbff-4be7-84b8-93a504aa1aee", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "5167a720a3cef1a612bcf6168e4cc9b44e23c58ba9b36dc0c7a3ad69782d4f28", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: 'Proposes to repeal the working group rules passed in EP4 and replace those rules with the working group rules specified in this proposal.'\nauthors: ['futurealisha']\nproposal:\n  discourse: '12953'\n  snapshot: '0xc7186cf8bebe47600f8d847e76f7971ea97b48bc04eda1e07780aff91fb6410d'\n  type: 'social'\n--- # [EP1.8] [Social] Working Group Rules\n\n::authors\n\n| **Status**            | Passed                                                                                                                   |\n| --------------------- | ------------------------------------------------------------------------------------------------------------------------ |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/12953)                                                                             |\n| **Votes**             | [Snapshot](https://snapshot.box/#/s:ens.eth/proposal/0xc7186cf8bebe47600f8d847e76f7971ea97b48bc04eda1e07780aff91fb6410d) |\n\n_Note: This was previously numbered EP12._", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 315, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ac3405c1-7ed7-443b-84ce-d04914987403": {"__data__": {"id_": "ac3405c1-7ed7-443b-84ce-d04914987403", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/1.8.mdx", "file_name": "1.8.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.8.mdx", "header_path": "/[EP1.8] [Social] Working Group Rules/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.8.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["those", "specified", "group", "abstract", "replace", "proposal", "passed", "working", "repeal", "rules"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4236b9482b685947720b3e60876c3ee3c7af1f1d", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/1.8.mdx", "file_name": "1.8.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.8.mdx"}, "hash": "f663b3c720aa6753e186cb30d628aa275af019328e37559d5ac074b9781cb5f5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "89b73b4b-bbff-4be7-84b8-93a504aa1aee", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/1.8.mdx", "file_name": "1.8.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.8.mdx", "header_path": "/"}, "hash": "87b51dfa67ec772bf9410d5cdb94db62fbbbf5482ea0d8280252c1ab4cec23f6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e7c21118-cf1e-413c-8b5b-8911bbd792f2", "node_type": "1", "metadata": {"header_path": "/[EP1.8] [Social] Working Group Rules/"}, "hash": "6c0a59e3f584dc872816ed8d638e495a57759ed106596d6434adff066ace564b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Abstract\n\nThis is a proposal to repeal the working group rules passed in [EP4](https://docs.ens.domains/v/governance/governance-proposals/ep4-social-proposal-creation-of-foundational-working-groups-and-working-group-rules) and replace those rules with working group rules specified in this proposal for the Second Term of 2022 and all Terms thereafter.\n\nThe working group rules specified in this proposal add more details about Steward responsibilities and the management of working group funds, as well as introducing the requirement of each working group to appoint a lead steward.\n\nThe specification below also introduces a rule to appoint a new DAO Secretary, responsible for managing working relationships and communications across working groups as well as performing administrative duties for the DAO.", "mimetype": "text/plain", "start_char_idx": 1009, "end_char_idx": 1820, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e7c21118-cf1e-413c-8b5b-8911bbd792f2": {"__data__": {"id_": "e7c21118-cf1e-413c-8b5b-8911bbd792f2", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/1.8.mdx", "file_name": "1.8.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.8.mdx", "header_path": "/[EP1.8] [Social] Working Group Rules/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.8.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["forward", "social", "groups", "formation", "documentation", "passed", "create", "working", "defined", "specification", "rules", "governance"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4236b9482b685947720b3e60876c3ee3c7af1f1d", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/1.8.mdx", "file_name": "1.8.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.8.mdx"}, "hash": "f663b3c720aa6753e186cb30d628aa275af019328e37559d5ac074b9781cb5f5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ac3405c1-7ed7-443b-84ce-d04914987403", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/1.8.mdx", "file_name": "1.8.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.8.mdx", "header_path": "/[EP1.8] [Social] Working Group Rules/"}, "hash": "6761962f767ca452ca89161a49f9cae4607187da992b5637ed5b0b7dd2f7de0e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "576a2ccf-3d3a-4eac-abb4-ad8e39359ebf", "node_type": "1", "metadata": {"header_path": "/[EP1.8] [Social] Working Group Rules/Specification/"}, "hash": "126ea0943143f98ec01b1ba0ac295aa5f083e3194656b56dc3f3fc96a93f1dc5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification ### Working Groups Rules\n\n1. Formation of Working Groups\n   1. To create a new working group, a social proposal, as defined by the ENS governance documentation (\u2018Social Proposal\u2019), must be put forward and passed by the DAO.\n   2. A Social Proposal to create a new working group must demonstrate that the new working group is needed and the work cannot be undertaken within an existing working group.\n2. Dissolution of Working Groups\n   1. A working group can be dissolved by passing a Social Proposal requesting the dissolution of a working group or working groups.\n   2. If an active proposal is put forward to dissolve a working group, all working group funds, including outgoing payments, within that working group, are to be frozen with immediate effect, pending the outcome of that vote.\n   3. Upon the dissolution of a working group, any and all unspent working group funds from that working group, at the time of dissolution, must be immediately returned to the DAO treasury, without delay.\n3. Working Group Stewards\n   1. Each working group shall be managed by three stewards (hereafter a 'Steward' or 'Stewards').\n   2. Stewards will be elected to serve within working groups for a set period of time (hereafter known as a 'Term' or 'Terms').\n   3. There are two Terms each calendar year:\n      1. The first Term commences at 9am UTC on January 1 each year and ends immediately prior to the commencement of the second Term ('First Term'); and\n      2. The second Term commences at 9am UTC on July 1 each year and ends immediately prior to the commencement of the First Term of the following year ('Second Term').\n   4. Stewards are responsible for overseeing the operation of working groups in accordance with these rules and the ENS DAO constitution.\n   5. The responsibilities of Stewards include, but are not limited to:\n      1. Requesting working group funds from the DAO in accordance with these rules;\n      2. Approving the creation of sub-groups or workstreams within a working group to undertake work and/or carry out specific projects or tasks;\n      3. Dissolving sub-groups or workstreams within a working group;\n      4. Using discretion to make working group funds available to sub-groups, workstreams, or contributors within a working group;\n      5. Using discretion to disburse working group funds to people and/or projects in accordance with the ENS DAO constitution; and\n      6. Acting as keyholders of working group multi-sigs.\n4. Steward Eligibility and Nominations\n   1. Any individual is eligible to nominate themselves to be a Steward of a working group within the DAO ('Eligible Person' or 'Eligible Persons').\n   2. To be eligible to be included in the ballot for First Term elections of a given year, Eligible Persons must nominate themselves between 9am UTC on December 6 and 9am UTC on December 9 ('First Term Nomination Window').\n   3. To be eligible to be included in the ballot for Second Term elections of a given year, Eligible Persons must nominate themselves between 9am UTC on June 6 and 9am UTC on June 9 ('Second Term Nomination Window').\n   4. An Eligible Person may nominate themselves to become a Steward of a working group or working groups during the First Term Nomination Window or the Second Term Nomination Window (each a 'Nomination Window'), by meeting the requirements set out in a call for nominations posted in the relevant working group category of the ENS governance forum.\n   5. An Eligible Person who completes the steps outlined in rule 4.4 above during a Nomination Window and receives 10,000 signed votes to support their nomination will be included in the ballot as a nominee in the election for Stewards that takes place following that Nomination Window ('Nominee').\n5. Steward Elections\n   1. Elections for working group Stewards for the First Term of a given year will take place by a vote of governance token holders using signed messages and will be open for 120 hours, commencing at 9am UTC on December 10 each year ('First Term Election Window').\n   2. Elections for working group Stewards for the Second Term of a given year will take place by a vote of governance token holders using signed messages and will be open for 120 hours, commencing at 9am UTC on June 10 each year ('Second Term Election Window').\n   3. The top-ranked Nominees from each working group vote held during a First Term Election Window or a Second Term Election Window (each an 'Election Window'), will fill any available positions for the role of Steward for those working groups for the Term immediately following an Election Window, based on the order in which they are ranked in each working group vote.\n   4. A Nominee elected to serve as a Steward may not take up the role of Steward for more than two working groups during a single Term.\n6. Delay of Nominations or Elections\n   1. In the event that nominations or elections for Stewards take place after a Nomination Window or after an Election Window, the nomination process and/or elections shall take place, as otherwise prescribed in rules 4 and 5 above, as soon as is practicable after the missed Nomination Window or missed Election Window.\n   2. In the event that an election takes place outside of an Election Window and after the commencement date of a new Term, outgoing Stewards from the previous Term shall stay in their positions as working group Stewards until immediately prior to 9am UTC the day following the end of the election, which, for the avoidance of doubt, is 120 hours after voting in those elections commenced.\n   3. In the event that an election takes place outside of an Election Window and after the commencement date of a new Term, newly elected Stewards will assume the responsibilities of stewardship within working groups at 9am UTC the day following the end of the election, as defined in rule 6.2 above, for the remainder of that Term.\n7. Removal and Replacement of Stewards\n   1. Stewards may be removed at any time by:\n      1. a Social Proposal passed by the DAO; or\n      2. a simple indicative majority vote among Stewards of all working groups, with the outcome of that vote communicated in the relevant working group category of the ENS governance forum.\n   2. Stewards may step down from their position at any time by communicating their intention to step down in the ENS governance forum.\n   3. In the event that a Steward is removed, steps down, or is unable to continue as a Steward, for whatever reason, prior to the end of a Term, a new election must be held to fill any vacant Steward positions, in accordance with rule 6 above.\n8. Lead Stewards\n   1. Each working group must appoint a lead Steward within the first five days of a Term (hereafter a 'Lead Steward' or 'Lead Stewards').\n   2. Only current elected Stewards of a working group are eligible to serve as Lead Stewards within a given working group.\n   3. Lead Stewards may be appointed or removed from that role at any time by a simple indicative majority vote among the Stewards of a working group, with the outcome of that vote communicated in the relevant working group category of the ENS governance forum.\n   4. In the event that a Lead Steward steps down from the position or is removed as a Lead Steward before the end of a Term in accordance with rule 8.3 above, a new Lead Steward must be appointed within five calendar days.\n   5. A Steward who is appointed to serve as a Lead Steward of a working group will remain in that position, as Lead Steward, from the date of appointment until the end of their elected Term as a Steward or until they are removed as a Lead Steward in accordance with rule 8.3 above or until they are removed as a Steward in accordance with rule 7 above.\n   6. Lead Stewards are responsible for the operational management and administration of working groups and are expected to provide regular updates to the DAO in the ENS governance forum related to working group progress, achievements, and challenges.\n   7. The responsibilities of Lead Stewards include, but are not limited to:\n      1. Acting as a representative of a working group;\n      2. Managing resource requests from sub-groups, workstreams, and contributors within a working group;\n      3. Initiating the disbursement of working group funds on an as-needed basis;\n      4. Providing reports of working group spending in the ENS governance forum; and\n      5. Maintaining open communications with DAO participants in the ENS governance forum.\n9. DAO Secretary\n   1. At the start of each Term, the current Stewards of each working group shall collaborate to appoint an individual who will serve as the secretary of the DAO (hereafter 'Secretary' or 'Secretaries').\n   2. The Secretary may be appointed or removed from that role at any time by a majority vote of all elected Stewards in a given Term with the outcome of that vote communicated in the ENS governance forum.\n   3. The Secretary will remain in that position, as Secretary of the DAO, from the date of appointment until the end of a given Term or until the date at which they are removed from that position in accordance with rule 9.2 above.\n   4. Secretaries are eligible to receive fair compensation for their work as Secretary of the DAO.\n   5. Compensation for the Secretary of the DAO is to be paid by the Meta-Governance Working Group using funds requested in accordance with rule 10 below.\n   6. Any individual is eligible to be appointed as the Secretary of the DAO, including past and present working group Stewards.\n   7. The Secretary is responsible for managing working relationships and communications across working groups as well as performing administrative duties for the DAO.\n   8. The responsibilities of the Secretary include, but are not limited to:\n      1. Managing a DAO-wide calendar;\n      2. Coordinating and attending working group meetings where possible and ensuring meeting summaries are posted in the ENS governance forum;\n      3. Assisting Stewards with coordination challenges within working groups; and\n      4. Acting as a multi-sig keyholder for each working group.\n10. Working Group Funds\n    1. To request working group funds, Stewards of all working groups will collaborate to submit an active executable proposal, as defined by the ENS governance documentation ('Collective Proposal'), to the DAO during the months of January, April, July, and October each calendar year (each a 'Funding Window').\n       1. In order for a working group to have a funding request included in a Collective Proposal submitted to the DAO during a Funding Window, the funding request must have passed as a Social Proposal in the same Funding Window.\n       2. In the case of an emergency, where working group funds are needed by a working group outside of a Funding Window, an executable proposal, as defined by the ENS governance documentation, may be submitted at any time by a Steward of a working group to request funds from the DAO.\n    2. Working group funds requested and approved in accordance with rule 10.1 above are to be paid out into separate working group multi-sigs controlled by the DAO.\n    3. Each working group multi-sig must have four keyholders, made up of three current elected Stewards for that working group and the Secretary of the DAO for that Term, with no other keyholders permitted.\n    4. Working group funds may be disbursed from working group multi-sigs with three-of-four keyholder signing.\n    5. Stewards of a given working group shall have the discretion to reallocate funds approved in a Collective Proposal where appropriate and where it is not in conflict with any rules of the DAO, DAO bylaws, or the ENS DAO constitution.\n11. Compensation for Stewards and Lead Stewards\n    1. Stewards are eligible to receive fair compensation for their work as a Steward or Lead Steward in the DAO.\n    2. All requests for Steward or Lead Steward compensation must be detailed in a Collective Proposal for working group funds submitted to the DAO in accordance with rule 10.1 above.\n    3. Stewards may not receive compensation for their role as a Steward or Lead Steward outside of that compensation expressly provided for in a Collective Proposal submitted to the DAO in accordance with rule 10.1 above.\n12. Amendments\n    1. These rules may be amended at any time by passing a Social Proposal.", "mimetype": "text/plain", "start_char_idx": 1822, "end_char_idx": 1838, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5a676ae0-1c60-4970-87ac-9c2bbbf8fff8": {"__data__": {"id_": "5a676ae0-1c60-4970-87ac-9c2bbbf8fff8", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/1.8.mdx", "file_name": "1.8.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.8.mdx", "header_path": "/[EP1.8] [Social] Working Group Rules/Specification/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.8.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["replacing", "favor", "single", "voting", "group", "repealing", "choice", "passed", "working", "choose", "abstain", "steps", "rules"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4236b9482b685947720b3e60876c3ee3c7af1f1d", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/1.8.mdx", "file_name": "1.8.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.8.mdx"}, "hash": "f663b3c720aa6753e186cb30d628aa275af019328e37559d5ac074b9781cb5f5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "576a2ccf-3d3a-4eac-abb4-ad8e39359ebf", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/1.8.mdx", "file_name": "1.8.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.8.mdx", "header_path": "/[EP1.8] [Social] Working Group Rules/Specification/"}, "hash": "a333c90d894ad9d9770b141a92a967b436bd5065739fe8ce4e2cc18bda6d5d07", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Next Steps\n\nThis vote will be a single choice vote. You may vote 'for' or 'against' the proposal, or choose to abstain from the vote.\n\nBy voting 'for' this proposal, you are voting in favor of repealing the working group rules passed in EP4 and replacing them with the working group rules provided in the specification of this proposal. ---\ndescription: 'This is a proposal for the ENS DAO to support the Protocol Guild Pilot, a vested split contract which directs funding to 110 Ethereum core protocol contributors over one year.'\nauthors: [\n    # Trent Van Epps\n    'tvanepps',\n    # Tim Beiko\n    'timbeiko',\n  ]\nproposal:\n  discourse: '12877'\n  snapshot: '0xe07284156fb063d5fba6b9fed50cc74fad36ea02c2ede0207434db476884104b'\n  tally: '8759198094868535520038506706231539487662297008587733129541987545743856603253'\n  type: 'executable'\n---", "mimetype": "text/plain", "start_char_idx": 14163, "end_char_idx": 14503, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "25aab8d3-70b2-4f38-a76d-c07767b76d4a": {"__data__": {"id_": "25aab8d3-70b2-4f38-a76d-c07767b76d4a", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/1.9.mdx", "file_name": "1.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.9.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.9.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["protocol", "guild", "numbered", "pilot", "passed", "previously"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8e6fd53cffeba76f3f00808e77af0daa3f1c6d86", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/1.9.mdx", "file_name": "1.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.9.mdx"}, "hash": "6434a9e8db1092638baeefeddcd0e18b454d6fbeabfd063cc3601bcfaa08fd9e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9e316b4c-5f1e-4eea-91b9-d81fc425eb95", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/1.9.mdx", "file_name": "1.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.9.mdx", "header_path": "/"}, "hash": "163ff4355c90c38a1844bf44429ab56ccda73f4228a73658f3fea367bc7e7bdb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5005a839-81c4-4f7e-8636-3d11dee04e47", "node_type": "1", "metadata": {"header_path": "/[EP1.9] [Executable] Fund the Protocol Guild pilot with 200,000 $ENS/"}, "hash": "a27de4b55b45ec0fd71d568c20537fb65f3feba6a9a86828fbc3d1628d36b0dc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# [EP1.9] [Executable] Fund the Protocol Guild pilot with 200,000 $ENS\n\n::authors\n\n| **Status**            | Passed                                                                                                                       |\n| --------------------- | ---------------------------------------------------------------------------------------------------------------------------- |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/12877)                                                                                 |\n| **Votes**             | [Tally](https://www.tally.xyz/gov/ens/proposal/8759198094868535520038506706231539487662297008587733129541987545743856603253) |\n\n_Note: This was previously numbered EP13._", "mimetype": "text/plain", "start_char_idx": 505, "end_char_idx": 1243, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5005a839-81c4-4f7e-8636-3d11dee04e47": {"__data__": {"id_": "5005a839-81c4-4f7e-8636-3d11dee04e47", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/1.9.mdx", "file_name": "1.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.9.mdx", "header_path": "/[EP1.9] [Executable] Fund the Protocol Guild pilot with 200,000 $ENS/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.9.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["benefit", "protocol", "success", "allocated", "abstract", "recognition", "being", "these", "propose", "contributors", "ongoing", "successful", "built", "projects"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8e6fd53cffeba76f3f00808e77af0daa3f1c6d86", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/1.9.mdx", "file_name": "1.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.9.mdx"}, "hash": "6434a9e8db1092638baeefeddcd0e18b454d6fbeabfd063cc3601bcfaa08fd9e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "25aab8d3-70b2-4f38-a76d-c07767b76d4a", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/1.9.mdx", "file_name": "1.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.9.mdx", "header_path": "/"}, "hash": "b93702cfe44581857a20a4371ef1b8a2bbfc57284f8ed1a89137db4afabf4388", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f4a09cce-aa86-4fa4-ac8d-a5d87d4bf3a2", "node_type": "1", "metadata": {"header_path": "/[EP1.9] [Executable] Fund the Protocol Guild pilot with 200,000 $ENS/"}, "hash": "54eb5f6c5d380f9d0b117d22f338d0a28c73a0dd7d627d85aaea5bf5c40021df", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Abstract\n\nWe propose that 200k ENS (\\~3.7% of the [unclaimed airdrop](https://twitter.com/ensdomains/status/1522066354387718144)) be allocated in recognition of past and ongoing work of these core contributors.\n\nENS is one of the most successful projects built on Ethereum, and yet core protocol contributors do not benefit in any way from the success of projects being built on Ethereum. The Protocol Guild provides a vehicle for the ENS community to distribute governance tokens to those individuals who build and maintain the foundational infrastructure that ENS relies on.\n\nENS sponsorship of the Guild allows members to engage with ENS in a way that is values- and incentive-aligned. Simultaneously, it will allow them to continue the important work of scaling our shared infrastructure and making it as resilient as possible for the applications on top of it.", "mimetype": "text/plain", "start_char_idx": 1245, "end_char_idx": 2113, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f4a09cce-aa86-4fa4-ac8d-a5d87d4bf3a2": {"__data__": {"id_": "f4a09cce-aa86-4fa4-ac8d-a5d87d4bf3a2", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/1.9.mdx", "file_name": "1.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.9.mdx", "header_path": "/[EP1.9] [Executable] Fund the Protocol Guild pilot with 200,000 $ENS/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.9.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["announcement", "guild", "vesting", "links", "useful", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8e6fd53cffeba76f3f00808e77af0daa3f1c6d86", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/1.9.mdx", "file_name": "1.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.9.mdx"}, "hash": "6434a9e8db1092638baeefeddcd0e18b454d6fbeabfd063cc3601bcfaa08fd9e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5005a839-81c4-4f7e-8636-3d11dee04e47", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/1.9.mdx", "file_name": "1.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.9.mdx", "header_path": "/[EP1.9] [Executable] Fund the Protocol Guild pilot with 200,000 $ENS/"}, "hash": "b4fcac7a8f63e69a47b8142f74dea3d2307dd931780b149443d945f7457458cf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f21658fd-6a76-4ff5-a057-1fe92d7524bb", "node_type": "1", "metadata": {"header_path": "/[EP1.9] [Executable] Fund the Protocol Guild pilot with 200,000 $ENS/Specification/"}, "hash": "84229f720759859e97b03dda2bfbc3c238657110e7a38effdaf2f382fbb10669", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification ### Useful links\n\n- [Protocol Guild Docs](https://protocol-guild.readthedocs.io/en/latest/index.html)\n- [1 Year Vesting Contract](https://app.0xsplits.xyz/accounts/0xF29Ff96aaEa6C9A1fBa851f74737f3c069d4f1a9/)\n- [Split Contract](https://app.0xsplits.xyz/accounts/0x84af3D5824F0390b9510440B6ABB5CC02BB68ea1/)\n- [Initial Announcement - Dec 2021](https://stateful.mirror.xyz/mEDvFXGCKdDhR-N320KRtsq60Y2OPk8rHcHBCFVryXY)\n- [List of Members](https://protocol-guild.readthedocs.io/en/latest/9-membership.html)\n- [Protocol Guild twitter](https://twitter.com/ProtocolGuild)", "mimetype": "text/plain", "start_char_idx": 2115, "end_char_idx": 2131, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "048dbebe-dcac-4142-b949-7392a18ec5be": {"__data__": {"id_": "048dbebe-dcac-4142-b949-7392a18ec5be", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/1.9.mdx", "file_name": "1.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.9.mdx", "header_path": "/[EP1.9] [Executable] Fund the Protocol Guild pilot with 200,000 $ENS/Specification/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.9.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ethereum", "protocol", "infrastructure", "offer", "block", "incentives", "applications", "uncapturable", "contributors", "credibly", "still", "maximally", "context", "token"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8e6fd53cffeba76f3f00808e77af0daa3f1c6d86", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/1.9.mdx", "file_name": "1.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.9.mdx"}, "hash": "6434a9e8db1092638baeefeddcd0e18b454d6fbeabfd063cc3601bcfaa08fd9e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f21658fd-6a76-4ff5-a057-1fe92d7524bb", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/1.9.mdx", "file_name": "1.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.9.mdx", "header_path": "/[EP1.9] [Executable] Fund the Protocol Guild pilot with 200,000 $ENS/Specification/"}, "hash": "72e4164fdceb71d47f5ce392cd103d4c978341b2e423c2f29a4f426428b522c1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1c9599c7-436e-49b0-aafc-a6c45c2800d7", "node_type": "1", "metadata": {"header_path": "/[EP1.9] [Executable] Fund the Protocol Guild pilot with 200,000 $ENS/Specification/"}, "hash": "f384b1a8e6cf1e8c5dc34633832cac890c61bc81053cbe5b9ff814c15f5e350d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Context\n\n1. As a credibly neutral, maximally uncapturable infrastructure with no block reward, the Ethereum base protocol doesn't offer the same token incentives to contributors as applications or L2s can. However, the protocol still needs to attract and retain talent to continue to evolve. As the broader ecosystem continues to grow, competition for talented individuals will only increase. This isn't to fault individuals for rationally weighting financial incentives, or protocols for leveraging the power of tokens - this is just the reality of the current context. We also acknowledge that financial motivations aren't the only or best motivator for people, it's just one tool in our toolset that is currently underleveraged.\n2. Existing public goods funding solutions tend to be either too narrow or broad in scope, fail to exclusively target core protocol contributors, or depend on an intermediating institution, which often leads to organizations, and not individuals, being recipients of funds.\n3. The Protocol benefits from contributor continuity. Transferring institutional knowledge between cohorts is more likely to happen successfully the more overlap there is.\n\nHere's a longer exploration of the [project rationale](https://protocol-guild.readthedocs.io/en/latest/1-proposal-rationale.html).\n\nIf we believe what we are building is important, then we should structure the incentives to attract more smart people to work on it. After all, \"Ethereum is an unprecedented arena for playing cooperative games\"; we should try to manifest the novel possibilities made possible by this arena. ([Griffith, 2019](https://medium.com/@virgilgr/ethereum-is-game-changing-technology-literally-d67e01a01cf8))", "mimetype": "text/plain", "start_char_idx": 2699, "end_char_idx": 4413, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1c9599c7-436e-49b0-aafc-a6c45c2800d7": {"__data__": {"id_": "1c9599c7-436e-49b0-aafc-a6c45c2800d7", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/1.9.mdx", "file_name": "1.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.9.mdx", "header_path": "/[EP1.9] [Executable] Fund the Protocol Guild pilot with 200,000 $ENS/Specification/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.9.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["solicit", "challenges", "split", "protocol", "guild", "above", "address", "sponsorships", "weighted", "mentioned", "contract", "includes", "members", "simple"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8e6fd53cffeba76f3f00808e77af0daa3f1c6d86", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/1.9.mdx", "file_name": "1.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.9.mdx"}, "hash": "6434a9e8db1092638baeefeddcd0e18b454d6fbeabfd063cc3601bcfaa08fd9e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "048dbebe-dcac-4142-b949-7392a18ec5be", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/1.9.mdx", "file_name": "1.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.9.mdx", "header_path": "/[EP1.9] [Executable] Fund the Protocol Guild pilot with 200,000 $ENS/Specification/"}, "hash": "af6888e2e65fd780d79fe3e92b3854a49a95e812e259f3ec9c04b0be72811a7d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4c717d4e-fd03-4b71-a3da-775207a1ff53", "node_type": "1", "metadata": {"header_path": "/[EP1.9] [Executable] Fund the Protocol Guild pilot with 200,000 $ENS/Specification/"}, "hash": "6165a4214bf858980bd1e3063287f4b1442a327db0d10019a13fba3e0db4695d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### What is the Protocol Guild?\n\nThe Protocol Guild aims to address the challenges mentioned above with a simple tool: a weighted split contract that includes vesting. Members will solicit sponsorships in the form of tokens from applications & protocols that build on Ethereum, which gives core contributors exposure to success at the application layer:\n\n- current contributors are rewarded for past work through time-based weighting\n- current contributors contribute for longer periods, resulting in less contributor churn\n- new contributors are incentivized to join core protocol work, protocol evolution and maintenance is more robust\n\nTo date, the membership includes over 110 Ethereum protocol contributors, including researchers, client maintainers, upgrade coordinators, and more, all self-curated (member list [here](https://protocol-guild.readthedocs.io/en/latest/9-membership.html)). This is a broad-based ecosystem effort: members come from 22 different teams and 9 organizations. Only 30% of members are directly employed by the EF. The membership is continuously curated through quarterly updates to the split contract - we expect the membership to grow to 150 over the course of the Pilot.\n\nThe Guild contracts will act as an autonomous value routing mechanism, operated independently from any existing institution, purpose-built for incentivizing long-term core protocol work. At no point does PG take custody of funds on behalf of members, it is all handled trustlessly. The diagram below and the [docs](https://protocol-guild.readthedocs.io/en/latest/3-smart-contract.html) have more information.\n\n![](/content/dao/proposals/1.9-1.png)", "mimetype": "text/plain", "start_char_idx": 4415, "end_char_idx": 6067, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4c717d4e-fd03-4b71-a3da-775207a1ff53": {"__data__": {"id_": "4c717d4e-fd03-4b71-a3da-775207a1ff53", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/1.9.mdx", "file_name": "1.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.9.mdx", "header_path": "/[EP1.9] [Executable] Fund the Protocol Guild pilot with 200,000 $ENS/Specification/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.9.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["refined", "around", "project", "norms", "member", "since", "documentation", "pilot", "starting", "extensive", "vesting", "built", "onboarding", "created", "splitting"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8e6fd53cffeba76f3f00808e77af0daa3f1c6d86", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/1.9.mdx", "file_name": "1.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.9.mdx"}, "hash": "6434a9e8db1092638baeefeddcd0e18b454d6fbeabfd063cc3601bcfaa08fd9e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1c9599c7-436e-49b0-aafc-a6c45c2800d7", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/1.9.mdx", "file_name": "1.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.9.mdx", "header_path": "/[EP1.9] [Executable] Fund the Protocol Guild pilot with 200,000 $ENS/Specification/"}, "hash": "6befef724dbf218379b5a60119ab694e853ea5970c697d6fefff57f5e380f0ec", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fbca787c-4040-4291-9dce-719598510765", "node_type": "1", "metadata": {"header_path": "/[EP1.9] [Executable] Fund the Protocol Guild pilot with 200,000 $ENS/Specification/"}, "hash": "7433bc1d4bf356f14aa7c11542ef2c0c0213eb2cbb8bae2b6dc7743c264865de", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### 2022 Pilot\n\nSince starting the project in Nov 2021, we've built norms around member onboarding , refined the splitting and vesting mechanisms, and created extensive documentation on how PG operates.\n\nAt this point, we're ready to test the mechanism's efficacy with a 1 year / $10-20mm Pilot. We want to make sure the mechanism operates smoothly before graduating to a full-scale fundraising round for longer vesting periods. The funds for the Pilot would be vested directly to Guild members over one year: see the [Pilot vesting contract here](https://app.0xsplits.xyz/accounts/0xF29Ff96aaEa6C9A1fBa851f74737f3c069d4f1a9/).", "mimetype": "text/plain", "start_char_idx": 6069, "end_char_idx": 6696, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fbca787c-4040-4291-9dce-719598510765": {"__data__": {"id_": "fbca787c-4040-4291-9dce-719598510765", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/1.9.mdx", "file_name": "1.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.9.mdx", "header_path": "/[EP1.9] [Executable] Fund the Protocol Guild pilot with 200,000 $ENS/Specification/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.9.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["deployed", "listed", "tokens", "proposing", "EIP-4844", "underlying", "would", "recognition", "proposal", "these", "EIP-4488", "ongoing", "vesting", "recipient", "beneficiary"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8e6fd53cffeba76f3f00808e77af0daa3f1c6d86", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/1.9.mdx", "file_name": "1.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.9.mdx"}, "hash": "6434a9e8db1092638baeefeddcd0e18b454d6fbeabfd063cc3601bcfaa08fd9e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4c717d4e-fd03-4b71-a3da-775207a1ff53", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/1.9.mdx", "file_name": "1.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.9.mdx", "header_path": "/[EP1.9] [Executable] Fund the Protocol Guild pilot with 200,000 $ENS/Specification/"}, "hash": "4d1ac5defb5e643f44cf853ba48169a4fe51ceafac4e5d958a6a0e331ed7105d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1e527830-455d-41ad-9f08-462d93f84f6b", "node_type": "1", "metadata": {"header_path": "/[EP1.9] [Executable] Fund the Protocol Guild pilot with 200,000 $ENS/"}, "hash": "3e3f6e0d764ac219f285353724d879cfd68a891ac90fcc4ab0e26161369b5adb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Proposal\n\nWe are proposing that 200k ENS (\\~3.7% of the [unclaimed airdrop](https://twitter.com/ensdomains/status/1522066354387718144)) be sent to the [Pilot vesting contract](https://app.0xsplits.xyz/accounts/0xF29Ff96aaEa6C9A1fBa851f74737f3c069d4f1a9/) deployed at 0xF29\u2026f1a9 in recognition of the past and ongoing work of these core contributors.\n\nThe tokens would not be liquidated, but would vest for one year to each beneficiary listed on the underlying split. Each recipient would be making an independent decision about how to use their tokens once vested.\n\nThe USD value of the 200k ENS is $2.49mm as of the time of this post on May 25 2022. This is roughly in line with what we have already proposed to similarly prominent Ethereum-based protocols. [Lido's 2mm LDO contribution](https://research.lido.fi/t/proposal-to-fund-the-protocol-guild-pilot-via-a-lido-grant/2016) was worth $2.6mm; the [active Uniswap proposal](https://gov.uniswap.org/t/governance-proposal-should-the-uniswap-community-participate-in-the-protocol-guild-pilot/16824) requesting 500k UNI would be worth $2.75mm.\n\nThere are a few reasons why supporting the Protocol Guild benefits the ENS community:\n\n- ENS's long-term success is tightly coupled with the continued evolution and maintenance of the Ethereum protocol. These are projects that often have multi-year timelines. Contributing to the Pilot meaningfully increases the incentive to contribute to the core protocol, including:\n  - [The Merge](https://github.com/ethereum/pm/blob/master/Merge/mainnet-readiness.md): moving from PoW to PoS, increasing security and sustainability\n  - EVM improvements: new functionality for developers like [EOF](https://notes.ethereum.org/@ipsilon/evm-object-format-overview)\n  - [Statelessness](https://notes.ethereum.org/@gballet/Sy-a6T5St): sustainable management for state growth\n  - Supporting L2 scaling: [EIP-4844](https://eips.ethereum.org/EIPS/eip-4844), [EIP-4488](https://eips.ethereum.org/EIPS/eip-4488)\n  - [Proposer Builder Separation](https://notes.ethereum.org/@vbuterin/pbs_censorship_resistance): reducing centralizing incentives for consensus participants\n  - Continuous client maintenance: improving sync, exploring new database types, researching modular clients\n  - Coordinating network upgrades: making sure the community helps to shape and is aware of network upgrades\n- Having exposure to ENS allows protocol contributors to engage more with ENS governance. Members will be encouraged (but not obligated) to delegate them within the ENS governance framework.\n- ENS should be among the protocols maximally aligned with the Public Goods of the largest ecosystem it operates in. Pilot participation maintains and expands the ENS community's existing reputation for funding Public Goods.\n- Diverse funding sources from the community further decentralizes protocol governance and prevents influence from pooling with any single entity.\n\nWe hope that a successful Pilot will pave the way for future funding collaborations between the ENS community and the Protocol Guild as we scale up the project after the Pilot. To that end, we think it's important to demonstrate impact: learn more about how we intend to evaluate [Pilot outcomes here](https://protocol-guild.readthedocs.io/en/latest/5-initial-pilot.html). We have also adopted an active stance of continuous adjustments to improve PG while we operate the Pilot: improving documentation, resources for members, better transparency, etc.", "mimetype": "text/plain", "start_char_idx": 6698, "end_char_idx": 10182, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1e527830-455d-41ad-9f08-462d93f84f6b": {"__data__": {"id_": "1e527830-455d-41ad-9f08-462d93f84f6b", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/1.9.mdx", "file_name": "1.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.9.mdx", "header_path": "/[EP1.9] [Executable] Fund the Protocol Guild pilot with 200,000 $ENS/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.9.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["amount", "transactions", "development", "200000000000000000000000", "address", "proposal", "argument", "function", "transfer", "recipient", "value", "improvement", "continuing"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8e6fd53cffeba76f3f00808e77af0daa3f1c6d86", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/1.9.mdx", "file_name": "1.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.9.mdx"}, "hash": "6434a9e8db1092638baeefeddcd0e18b454d6fbeabfd063cc3601bcfaa08fd9e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fbca787c-4040-4291-9dce-719598510765", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/1.9.mdx", "file_name": "1.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.9.mdx", "header_path": "/[EP1.9] [Executable] Fund the Protocol Guild pilot with 200,000 $ENS/Specification/"}, "hash": "512802cf78b2dfa1ff3bdf8466f7fd35e360f5098a4f3b54c578384f40529a9b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Transactions\n\n| Address          | Value                    | Function | Argument  | Value                |\n| ---------------- | ------------------------ | -------- | --------- | -------------------- |\n| token.ensdao.eth | 0                        | transfer | recipient | theprotocolguild.eth |\n| amount           | 200000000000000000000000 |          |           |                      | ---\ndescription: 'A proposal to fund TNL for continuing development and improvement of the ENS system.'\nauthors: ['khori-eth']\nproposal:\n  discourse: '13391'\n  tally: '112764562576314516994943312429834673309292069549953740415731020720942627228986'\n---", "mimetype": "text/plain", "start_char_idx": 10184, "end_char_idx": 10576, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3942c878-43ff-4232-b005-3abb4c90535c": {"__data__": {"id_": "3942c878-43ff-4232-b005-3abb4c90535c", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/2.1.mdx", "file_name": "2.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.1.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/2.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["numbered", "previously", "passed", "funding", "names"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1b72395a4a21227f26ee22089de5bd32bbd3fea0", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/2.1.mdx", "file_name": "2.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.1.mdx"}, "hash": "a39bd22c8d0bfcd10abac8796aca2915768541053e184b95424050f7cce57b29", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "17e6fe46-0d17-4024-ae49-4274dd851c12", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/2.1.mdx", "file_name": "2.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.1.mdx", "header_path": "/"}, "hash": "977a639255170fcd7bb9727797b603a893dfe57b3af8213e1fd22a58722971df", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "326bf1f5-65a5-4624-93c4-1350df3c7e54", "node_type": "1", "metadata": {"header_path": "/[EP2.1] [Executable] Funding True Names Ltd/"}, "hash": "a176affab5ee3ff2d3ec5238e082dbc4a6e306f6b2baf0847ff679d1fdf8919f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# [EP2.1] [Executable] Funding True Names Ltd\n\n::authors\n\n| **Status**            | Passed                                                                                                                         |\n| --------------------- | ------------------------------------------------------------------------------------------------------------------------------ |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/13391)                                                                                   |\n| **Votes**             | [Tally](https://www.tally.xyz/gov/ens/proposal/112764562576314516994943312429834673309292069549953740415731020720942627228986) |\n\n_Note: This was previously numbered EP14._", "mimetype": "text/plain", "start_char_idx": 253, "end_char_idx": 974, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "326bf1f5-65a5-4624-93c4-1350df3c7e54": {"__data__": {"id_": "326bf1f5-65a5-4624-93c4-1350df3c7e54", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/2.1.mdx", "file_name": "2.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.1.mdx", "header_path": "/[EP2.1] [Executable] Funding True Names Ltd/", "customer_id": 1, "source_url": "src/pages/dao/proposals/2.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["developed", "ethereum", "development", "protocol", "service", "abstract", "charge", "solely", "foundation", "incubated", "manage", "focuses", "names", "continues"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1b72395a4a21227f26ee22089de5bd32bbd3fea0", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/2.1.mdx", "file_name": "2.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.1.mdx"}, "hash": "a39bd22c8d0bfcd10abac8796aca2915768541053e184b95424050f7cce57b29", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3942c878-43ff-4232-b005-3abb4c90535c", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/2.1.mdx", "file_name": "2.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.1.mdx", "header_path": "/"}, "hash": "ea44517e9483eafe504adebe6bada7dfed5c1587eb35fcd94e0260604ab7e57d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ea684ac6-dac1-4fbc-91c6-95961f4f1d79", "node_type": "1", "metadata": {"header_path": "/[EP2.1] [Executable] Funding True Names Ltd/"}, "hash": "caf33b8f1e5c3adc0e3dbd4272a44041a855849cef8083821a8c0848a773a538", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Abstract\n\nTrue Names Ltd (\"TNL\") developed the Ethereum Name Service (\"ENS\") protocol, continues to manage the development of the ENS Protocol and solely focuses on this project. Incubated at the Ethereum Foundation in 2017, TNL spun out in 2018 with the charge of designing and deploying THE next generation naming service. TNL is now a growing team of web3 enthusiasts from across the globe working together to support the ENS Ecosystem that now has a passionate community that has registered over 1 million ENS names and uses more than 500 integrations.\n\nIn 2021, TNL initiated the creation of the ENS DAO with the goal of 1) furthering the development of the ENS Protocol and 2) funding public goods projects.\n\nIn consideration of the work completed thus far this calendar year and the work in the months and years to come, per Article III of the ENS Constitution, True Names Ltd respectfully requests an evergreen grant stream that will allow the organization to continue the development and improvement of the ENS Protocol. For Calendar Year 2022, this request will amount to $4,197,500 USDC which is equivalent to a daily stream of $11,500 USDC. In Q1 of each year, TNL or the ENS Dao may make requests to alter and/or terminate this evergreen grant stream.", "mimetype": "text/plain", "start_char_idx": 976, "end_char_idx": 2243, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ea684ac6-dac1-4fbc-91c6-95961f4f1d79": {"__data__": {"id_": "ea684ac6-dac1-4fbc-91c6-95961f4f1d79", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/2.1.mdx", "file_name": "2.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.1.mdx", "header_path": "/[EP2.1] [Executable] Funding True Names Ltd/", "customer_id": 1, "source_url": "src/pages/dao/proposals/2.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["january", "request", "daily", "dedicated", "grant", "accomplished", "approving", "backdated", "streaming", "approve", "spend", "contract", "names", "token", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1b72395a4a21227f26ee22089de5bd32bbd3fea0", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/2.1.mdx", "file_name": "2.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.1.mdx"}, "hash": "a39bd22c8d0bfcd10abac8796aca2915768541053e184b95424050f7cce57b29", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "326bf1f5-65a5-4624-93c4-1350df3c7e54", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/2.1.mdx", "file_name": "2.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.1.mdx", "header_path": "/[EP2.1] [Executable] Funding True Names Ltd/"}, "hash": "8b4608301fdaac25352d4870c54e5c502c8708a2c8028d73e836adc3ab9a945f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\nWe request that the ENS DAO approve a daily grant of $11,500 USDC to True Names Ltd, backdated to January 1st, 2022.\n\nThis will be accomplished by approving a dedicated token streaming contract at `0xB1377e4f32e6746444970823D5506F98f5A04201` to spend USDC on behalf of the DAO. ---\ndescription: 'Budget request for Meta-Governance Working Group'\nauthors: ['coltron-code']\nproposal:\n  discourse: '13756'\n  snapshot: '0x46c7294aca8d70ae8213e8e8c6915697c7be1aab731fbb7e534276f7eb0ef2b9'\n  tally: '21861129347596183989807248258922558214743224135371288783165185538477576992486'\n  type: 'executable'\n---", "mimetype": "text/plain", "start_char_idx": 2245, "end_char_idx": 2540, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c0558ed2-8edc-493a-8922-eb03f790d456": {"__data__": {"id_": "c0558ed2-8edc-493a-8922-eb03f790d456", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/2.2.1.mdx", "file_name": "2.2.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.2.1.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/2.2.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["numbered", "passed", "budget", "previously"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "240392b5e3c4e821b6234da86fa46bcb36115c0c", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/2.2.1.mdx", "file_name": "2.2.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.2.1.mdx"}, "hash": "ad24f703ca94d59bb80ea136badca934480e98dccf4a534baa4459345a467bf0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e4ff67f5-0584-47fd-ad84-cfb0d89709a4", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/2.2.1.mdx", "file_name": "2.2.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.2.1.mdx", "header_path": "/"}, "hash": "13d16ecdbaff62eacd416d9674e0b4be40d379c792b80a0ffac79594ab8d2113", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "85c2d0cb-dcb7-45cc-9677-571c47e6ca48", "node_type": "1", "metadata": {"header_path": "/[EP2.2.1] [Executable] Q3 & Q4 2022 Meta-Governance WG Budget/"}, "hash": "40ed6c6ec188719189ad9dbaec758a7ddd533ee573bad08599666a260dfa6350", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# [EP2.2.1] [Executable] Q3 & Q4 2022 Meta-Governance WG Budget\n\n::authors\n\n| **Status**            | Passed                                                                                                                 |\n| --------------------- | ---------------------------------------------------------------------------------------------------------------------- |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/13756)                                                                           |\n| **Votes**             | [Snapshot](https://snapshot.org/#/ens.eth/proposal/0x46c7294aca8d70ae8213e8e8c6915697c7be1aab731fbb7e534276f7eb0ef2b9) |\n\n_Note: This was previously numbered EP16.1._", "mimetype": "text/plain", "start_char_idx": 321, "end_char_idx": 1030, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "85c2d0cb-dcb7-45cc-9677-571c47e6ca48": {"__data__": {"id_": "85c2d0cb-dcb7-45cc-9677-571c47e6ca48", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/2.2.1.mdx", "file_name": "2.2.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.2.1.mdx", "header_path": "/[EP2.2.1] [Executable] Q3 & Q4 2022 Meta-Governance WG Budget/", "customer_id": 1, "source_url": "src/pages/dao/proposals/2.2.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["multisigs", "category", "group", "budget", "equivalent", "requesting", "presented", "three", "working", "funding", "figures", "related", "summary", "value"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "240392b5e3c4e821b6234da86fa46bcb36115c0c", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/2.2.1.mdx", "file_name": "2.2.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.2.1.mdx"}, "hash": "ad24f703ca94d59bb80ea136badca934480e98dccf4a534baa4459345a467bf0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c0558ed2-8edc-493a-8922-eb03f790d456", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/2.2.1.mdx", "file_name": "2.2.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.2.1.mdx", "header_path": "/"}, "hash": "bf6b960840baa8e60f375b418f068f144d1db172e6ba1423e00702f23c87083a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "813ce509-a9f8-40bc-9ecb-c61618720eeb", "node_type": "1", "metadata": {"header_path": "/[EP2.2.1] [Executable] Q3 & Q4 2022 Meta-Governance WG Budget/"}, "hash": "36706c3f85b68bef8b4fc9ee43fc2e27e0c42eecacdaaa7d01a8c480845c15cd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Summary\n\nThe Meta-Governance Working Group is requesting funding of 632k USD equivalent for the Q3/Q4 of 2022. The budget has three categories. All figures are presented in USD equivalent.\n\n![](/content/dao/proposals/2.2.1-1.png) ## Multisigs / Subgroups: $371k USD Value\n\nFunding in this category is related to the two Meta-Governance subgroup multi-sigs. These have been reviewed and approved by the Meta-Gov Stewards. #### Budget\n\n![](/content/dao/proposals/2.2.1-2.png) #### Description\n\n![](/content/dao/proposals/2.2.1-3.png)", "mimetype": "text/plain", "start_char_idx": 1032, "end_char_idx": 1264, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "48f88023-e156-4770-b5c5-b7fd0cbf83bb": {"__data__": {"id_": "48f88023-e156-4770-b5c5-b7fd0cbf83bb", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/2.2.1.mdx", "file_name": "2.2.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.2.1.mdx", "header_path": "/[EP2.2.1] [Executable] Q3 & Q4 2022 Meta-Governance WG Budget/", "customer_id": 1, "source_url": "src/pages/dao/proposals/2.2.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["category", "group", "description", "budget", "stewards", "passed", "permitted", "funding", "working", "value", "compensation", "state", "relates", "rules"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "240392b5e3c4e821b6234da86fa46bcb36115c0c", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/2.2.1.mdx", "file_name": "2.2.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.2.1.mdx"}, "hash": "ad24f703ca94d59bb80ea136badca934480e98dccf4a534baa4459345a467bf0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "68b51fad-a860-435b-ab3b-0e6be2b7e6bf", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/2.2.1.mdx", "file_name": "2.2.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.2.1.mdx", "header_path": "/[EP2.2.1] [Executable] Q3 & Q4 2022 Meta-Governance WG Budget/Multisigs / Subgroups: $371k USD Value/"}, "hash": "4c78019cb1cce60c1affccf14a5e6b396cce550f66f90ebebb9ae8cd6330998c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "921f04e3-3d15-4e72-a428-ffada8b52cba", "node_type": "1", "metadata": {"header_path": "/[EP2.2.1] [Executable] Q3 & Q4 2022 Meta-Governance WG Budget/Compensation: $190k USD Value/"}, "hash": "5a3cea5058acc21b99d2a1f47066ff4fe219c5577f7900bd16736e718e193eb0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Compensation: $190k USD Value\n\nFunding in this category relates to compensation for DAO stewards and secretary. #### Budget\n\n![](/content/dao/proposals/2.2.1-4.png) #### Description\n\nThe Working Group Rules passed in [EP12](https://discuss.ens.domains/t/ep12-social-working-group-rules/12953#specification-3) state compensation is permitted for stewards and secretary as set out in Rules 11.1 and 9.4 respectively. ## Unallocated: $71k USD Value\n\nThe funds in this category are reserved for unforeseen grants and unexpected expenses for the term. Stewards will distribute unallocated funds on a discretionary basis.\n\n![](/content/dao/proposals/2.2.1-5.png)", "mimetype": "text/plain", "start_char_idx": 1571, "end_char_idx": 1685, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c9794257-8be9-4c3e-9a07-3f16f32eaea5": {"__data__": {"id_": "c9794257-8be9-4c3e-9a07-3f16f32eaea5", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/2.2.2.mdx", "file_name": "2.2.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.2.2.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/2.2.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ecosystem", "request", "numbered", "budget", "passed", "working", "previously"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "356cc7f43f644f3d168d5d6f82bf639888969dff", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/2.2.2.mdx", "file_name": "2.2.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.2.2.mdx"}, "hash": "ab1519f7eba96ce801341bb8ff46365aa9d7211ce3a368e32aad08a2c0f8356c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8b2dc4fe-ae73-4e44-9fda-9af6918355d5", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "d55a2fdab7bdd9290a0d9f044d760897d7d403e3a6645f249734cd2ccbda3f46", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: 'Budget request for Ecosystem Working Group'\nauthors: ['aslobodnik']\nproposal:\n  discourse: '13757'\n  snapshot: '0x97265786d808280adc788e6744dd07afd3ff7e2776527d18f4e19abe1bd6c1a5'\n  tally: '21861129347596183989807248258922558214743224135371288783165185538477576992486'\n  type: 'executable'\n--- # [EP2.2.2] [Executable] Q3 & Q4 2022 Ecosystem WG Budget\n\n::authors\n\n| **Status**            | Passed                                                                                                                 |\n| --------------------- | ---------------------------------------------------------------------------------------------------------------------- |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/13757)                                                                           |\n| **Votes**             | [Snapshot](https://snapshot.org/#/ens.eth/proposal/0x97265786d808280adc788e6744dd07afd3ff7e2776527d18f4e19abe1bd6c1a5) |\n\n_Note: This was previously numbered EP16.2._", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 311, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fc27c99b-c95b-453c-84d5-2d66f0147d4a": {"__data__": {"id_": "fc27c99b-c95b-453c-84d5-2d66f0147d4a", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/2.2.2.mdx", "file_name": "2.2.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.2.2.mdx", "header_path": "/[EP2.2.2] [Executable] Q3 & Q4 2022 Ecosystem WG Budget/", "customer_id": 1, "source_url": "src/pages/dao/proposals/2.2.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ecosystem", "multisigs", "category", "second", "group", "million", "budget", "equivalent", "requesting", "presented", "working", "funding", "figures", "summary"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "356cc7f43f644f3d168d5d6f82bf639888969dff", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/2.2.2.mdx", "file_name": "2.2.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.2.2.mdx"}, "hash": "ab1519f7eba96ce801341bb8ff46365aa9d7211ce3a368e32aad08a2c0f8356c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8b2dc4fe-ae73-4e44-9fda-9af6918355d5", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/2.2.2.mdx", "file_name": "2.2.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.2.2.mdx", "header_path": "/"}, "hash": "cc7bdf3aab66ca6838747435dcb8a5a3a2f3af6d3d44f3d08bf9a14433d97549", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0d87c7d9-e1f0-44e0-b152-60d3364321d2", "node_type": "1", "metadata": {"header_path": "/[EP2.2.2] [Executable] Q3 & Q4 2022 Ecosystem WG Budget/Summary/"}, "hash": "e82d839ede08d9600c76dfad7c1e5e0ada334515c49f16db3a4f7a6cdc56bcb3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Summary\n\nThe Ecosystem Working Group is requesting funding of 2.3 million USD equivalent for the second term. The budget has four categories. All figures are presented in USD equivalent.\n\n![request summary](/content/dao/proposals/2.2.2-1.png) ### Multisigs / Subgroups: $1.5m\n\nFunding in this category is associated with a multisig wallet that has a clearly defined mandate. These multisigs been approved by current stewards of the ENS Ecosystem working group.\n\nExamples of subgroups receiving funding include bug bounty, support mods, dot-eth websites, .limo infrastructure, hackathons, and ENS ecosystem rounds during gitcoin grants rounds.\n\n**Budget**\n\n![](/content/dao/proposals/2.2.2-2.png)\n\n**Description**\n\n![](/content/dao/proposals/2.2.2-3.png)", "mimetype": "text/plain", "start_char_idx": 1018, "end_char_idx": 1263, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d29140c3-9d7b-439d-9ae7-b800318c9caf": {"__data__": {"id_": "d29140c3-9d7b-439d-9ae7-b800318c9caf", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/2.2.2.mdx", "file_name": "2.2.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.2.2.mdx", "header_path": "/[EP2.2.2] [Executable] Q3 & Q4 2022 Ecosystem WG Budget/Summary/", "customer_id": 1, "source_url": "src/pages/dao/proposals/2.2.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["relates", "future", "category", "include", "current", "details", "found", "potential", "funding", "supports", "examples", "process"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "356cc7f43f644f3d168d5d6f82bf639888969dff", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/2.2.2.mdx", "file_name": "2.2.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.2.2.mdx"}, "hash": "ab1519f7eba96ce801341bb8ff46365aa9d7211ce3a368e32aad08a2c0f8356c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0d87c7d9-e1f0-44e0-b152-60d3364321d2", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/2.2.2.mdx", "file_name": "2.2.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.2.2.mdx", "header_path": "/[EP2.2.2] [Executable] Q3 & Q4 2022 Ecosystem WG Budget/Summary/"}, "hash": "93b2ae015e3a0856ab0c80190ea02800dfb1cc9cfffc34a70963c2bf23aaee7c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "969c83ed-5ee0-4bd0-aeab-31e62c404145", "node_type": "1", "metadata": {"header_path": "/[EP2.2.2] [Executable] Q3 & Q4 2022 Ecosystem WG Budget/Summary/"}, "hash": "13dd59cefb6827f932611a9ce1e693a06837d8b6b4a202d12cd5f526a2cee3b2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### RFP Related: $435k\n\nFunding in this category relates to current and future proposals. Potential examples include on-chain normalization, ENS avatar, and future RFPs. Details on the RFP process can be found in this [thread](https://discuss.ens.domains/t/transitioning-the-dao-to-an-rfp-model/11821).\n\n![](/content/dao/proposals/2.2.2-4.png) ### Grants: $262k\n\nFunding in this category supports retro-active grants not covered by predefined multi-sigs in the subgroups category. The majority of this funding is expected to be allocated to the prop-house.\n\n![](/content/dao/proposals/2.2.2-5.png)", "mimetype": "text/plain", "start_char_idx": 1777, "end_char_idx": 2120, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9ca8a0d3-892b-438f-86b6-75dd159eb203": {"__data__": {"id_": "9ca8a0d3-892b-438f-86b6-75dd159eb203", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/2.2.2.mdx", "file_name": "2.2.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.2.2.mdx", "header_path": "/[EP2.2.2] [Executable] Q3 & Q4 2022 Ecosystem WG Budget/Summary/", "customer_id": 1, "source_url": "src/pages/dao/proposals/2.2.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["category", "request", "group", "budget", "funds", "reserved", "public", "working", "passed", "unexpected", "goods", "needs"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "356cc7f43f644f3d168d5d6f82bf639888969dff", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/2.2.2.mdx", "file_name": "2.2.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.2.2.mdx"}, "hash": "ab1519f7eba96ce801341bb8ff46365aa9d7211ce3a368e32aad08a2c0f8356c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "969c83ed-5ee0-4bd0-aeab-31e62c404145", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/2.2.2.mdx", "file_name": "2.2.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.2.2.mdx", "header_path": "/[EP2.2.2] [Executable] Q3 & Q4 2022 Ecosystem WG Budget/Summary/"}, "hash": "40a69264324ef0d8103d0d4dd5941e07fb5484b14c17c507f0f242a25c1cafa1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Unallocated: $109k\n\nThe funds in this category are reserved for unexpected needs of the working group over the term.\n\n![](/content/dao/proposals/2.2.2-6.png) ---\ndescription: 'Budget request for Public Goods Working Group'\nauthors: ['theanthonyware']\nproposal:\n  discourse: '13759'\n  snapshot: '0x5c96e490f3e28d8269e8fc7e929491fb8fa5e4bd04d3379f0c4f4bb1a42dc23e'\n  tally: '21861129347596183989807248258922558214743224135371288783165185538477576992486'\n  type: 'executable'\n--- # [EP2.2.3] [Executable] Q3 & Q4 2022 Public Goods WG Budget\n\n::authors\n\n| **Status**            | Passed                                                                                                                 |\n| --------------------- | ---------------------------------------------------------------------------------------------------------------------- |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/13759)                                                                           |\n| **Votes**             | [Snapshot](https://snapshot.org/#/ens.eth/proposal/0x5c96e490f3e28d8269e8fc7e929491fb8fa5e4bd04d3379f0c4f4bb1a42dc23e) |\n\n_Note: This was previously numbered EP16.3._", "mimetype": "text/plain", "start_char_idx": 2377, "end_char_idx": 2538, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1a4d4f3a-e481-4976-8472-e0f98bc0a88a": {"__data__": {"id_": "1a4d4f3a-e481-4976-8472-e0f98bc0a88a", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/2.2.3.mdx", "file_name": "2.2.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.2.3.mdx", "header_path": "/[EP2.2.3] [Executable] Q3 & Q4 2022 Public Goods WG Budget/", "customer_id": 1, "source_url": "src/pages/dao/proposals/2.2.3.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["multisigs", "second", "group", "budget", "equivalent", "requesting", "presented", "public", "working", "funding", "figures", "summary", "value", "goods"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "130aa01903969438cb3950c4ed13094e887b4751", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/2.2.3.mdx", "file_name": "2.2.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.2.3.mdx"}, "hash": "d2932b6be9731fa01ab284c3b19cad8c2d5e4fb0b3445dd8c6a6456d00c284dc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "656af7cd-b5fd-4b11-8f4d-5b4c7c84213a", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/2.2.3.mdx", "file_name": "2.2.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.2.3.mdx", "header_path": "/"}, "hash": "cfc2286411bcb45e63f548590d8da210309734beb3a7ece1d3d9b4f7a638fee4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c5179022-d4df-41f2-b99b-5eda4c520840", "node_type": "1", "metadata": {"header_path": "/[EP2.2.3] [Executable] Q3 & Q4 2022 Public Goods WG Budget/Summary/"}, "hash": "b0bfaae667650f08fd1c8971610c21a4e02c5c504f28bc7f2b9f47602bf0d95f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Summary\n\nThe Public Goods Working Group is requesting funding of 430,650 USD equivalent for the second term. The budget has five categories. All figures are presented in USD equivalent.\n\n![](/content/dao/proposals/2.2.3-1.png)\n\n_**July 19, 2022. ETH = 1500 USD and ENS = 11.00 USD.**_ ### Multisigs / Subgroups: $431k USD Value\n\nFunding for each category is associated with a multisig wallet that has a clearly defined mandate. These multisigs been approved by current stewards of the ENS Public Goods working group.", "mimetype": "text/plain", "start_char_idx": 1028, "end_char_idx": 1315, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b734bafb-3f9e-4013-b59c-3848ed584d6a": {"__data__": {"id_": "b734bafb-3f9e-4013-b59c-3848ed584d6a", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/2.2.3.mdx", "file_name": "2.2.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.2.3.mdx", "header_path": "/[EP2.2.3] [Executable] Q3 & Q4 2022 Public Goods WG Budget/Summary/Multisigs / Subgroups: $431k USD Value/", "customer_id": 1, "source_url": "src/pages/dao/proposals/2.2.3.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["category", "description", "mechanisms", "budget", "public", "supports", "working", "funding", "multisig", "breakdown", "value", "goods", "grants", "through", "distributed"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "130aa01903969438cb3950c4ed13094e887b4751", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/2.2.3.mdx", "file_name": "2.2.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.2.3.mdx"}, "hash": "d2932b6be9731fa01ab284c3b19cad8c2d5e4fb0b3445dd8c6a6456d00c284dc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c5179022-d4df-41f2-b99b-5eda4c520840", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/2.2.3.mdx", "file_name": "2.2.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.2.3.mdx", "header_path": "/[EP2.2.3] [Executable] Q3 & Q4 2022 Public Goods WG Budget/Summary/"}, "hash": "ebda84caf00f3bf9c93ba6d526ce64636e3070da6f8f5f9ef54d2315fbf8c82e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "690d1f4f-4a26-4862-a581-4037898c9148", "node_type": "1", "metadata": {"header_path": "/[EP2.2.3] [Executable] Q3 & Q4 2022 Public Goods WG Budget/Summary/Multisigs / Subgroups: $431k USD Value/"}, "hash": "f89de50545d453a6f77c4d8acb9fff0ffeb6d7fddacbd3a2dd644d6303c2b95e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "#### Budget\n\n![](/content/dao/proposals/2.2.3-2.png) #### Description\n\nThe breakdown of each Multisig/Subgroup is the following. The PG Pod is the main multisig for the Public Goods Working Group.\n\n![](/content/dao/proposals/2.2.3-3.png) ### Grants: $173K USD Value\n\nFunding in this category supports grants that will be distributed through two mechanisms for this term. Rapid Grants will be distributed through the ENS DAO small grants platform, adopting the Nouns Prop.House model. Grants may also be funded for retro-active value provided by web3 Public Goods, with Steward approval.", "mimetype": "text/plain", "start_char_idx": 1550, "end_char_idx": 1602, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9ab6d5e7-c753-4609-8c6e-05c515dfd939": {"__data__": {"id_": "9ab6d5e7-c753-4609-8c6e-05c515dfd939", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/2.2.3.mdx", "file_name": "2.2.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.2.3.mdx", "header_path": "/[EP2.2.3] [Executable] Q3 & Q4 2022 Public Goods WG Budget/Summary/Grants: $173K USD Value/", "customer_id": 1, "source_url": "src/pages/dao/proposals/2.2.3.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["accomplish", "certain", "relate", "budget", "goals", "projects", "bounties", "initiatives", "which", "funding", "there", "value", "available", "benefits"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "130aa01903969438cb3950c4ed13094e887b4751", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/2.2.3.mdx", "file_name": "2.2.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.2.3.mdx"}, "hash": "d2932b6be9731fa01ab284c3b19cad8c2d5e4fb0b3445dd8c6a6456d00c284dc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1bb17a54-76a9-4510-9daa-c9aa386bdbed", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/2.2.3.mdx", "file_name": "2.2.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.2.3.mdx", "header_path": "/[EP2.2.3] [Executable] Q3 & Q4 2022 Public Goods WG Budget/Summary/"}, "hash": "4b45c52ba92b1fc2a141789ce27b8eeaaaefe9fab1abf0cc826f7ba890fd2f5d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1730c89d-747b-4a72-b65d-2174fb0c1a71", "node_type": "1", "metadata": {"header_path": "/[EP2.2.3] [Executable] Q3 & Q4 2022 Public Goods WG Budget/Summary/"}, "hash": "78cb22b3537e9e821e4f9ddd5c17b1cfd95784aa96b063ec60d772d4db0f1d9e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "#### Budget\n\n![](/content/dao/proposals/2.2.3-4.jpeg) ### Bounties: $113K USD Value\n\nFunding for projects that accomplish certain goals that will be set out in a list of available bounties. Bounties will relate to initiatives and projects for which there is a need that benefits the broader web3 community. #### Budget\n\n![](/content/dao/proposals/2.2.3-5.png) ### Gitcoin GR15 & GR16: $100K USD Value\n\nFunding in this category relates to matching funds provided for the main Gitcoin Grants Rounds over the next six months, GR15 and GR16. This amount is not related to the funding for the ENS Ecosystem Round, which is funded by the Ecosystem Working Group.", "mimetype": "text/plain", "start_char_idx": 2140, "end_char_idx": 2193, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "09798735-4514-4652-9970-881778bfd4ae": {"__data__": {"id_": "09798735-4514-4652-9970-881778bfd4ae", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/2.2.3.mdx", "file_name": "2.2.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.2.3.mdx", "header_path": "/[EP2.2.3] [Executable] Q3 & Q4 2022 Public Goods WG Budget/Summary/Gitcoin GR15 & GR16: $100K USD Value/", "customer_id": 1, "source_url": "src/pages/dao/proposals/2.2.3.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["category", "endowment", "budget", "funds", "reserved", "expenses", "passed", "endaoment", "grants", "unexpected", "unforeseen"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "130aa01903969438cb3950c4ed13094e887b4751", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/2.2.3.mdx", "file_name": "2.2.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.2.3.mdx"}, "hash": "d2932b6be9731fa01ab284c3b19cad8c2d5e4fb0b3445dd8c6a6456d00c284dc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "906343e8-1e15-4529-872a-8c8006e99edd", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/2.2.3.mdx", "file_name": "2.2.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.2.3.mdx", "header_path": "/[EP2.2.3] [Executable] Q3 & Q4 2022 Public Goods WG Budget/Summary/"}, "hash": "312d046a58cb4262586a3c73b26095c164fe33c0530ad7e444fcb680a2872853", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3abaced2-0f20-4a54-b23c-ebb5f2e1015e", "node_type": "1", "metadata": {"header_path": "/[EP2.2.3] [Executable] Q3 & Q4 2022 Public Goods WG Budget/Summary/"}, "hash": "f2d778c1415ce0b3dcc8b90f670346b0ce5705964ee4da95ce030d0badcdc7b9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "#### Budget\n\n![](/content/dao/proposals/2.2.3-6.png) ### Unallocated: $45K USD\n\nThe funds in this category are reserved for unforeseen grants and unexpected expenses for the term. #### Budget\n\n![](/content/dao/proposals/2.2.3-7.png) ---\ndescription: 'RFP for an endowment fund manager'\nauthors: ['arachnid']\nproposal:\n  snapshot: '0x4a1aedbd9d22295f358dc4028b5a3f0a602bb5f1089dabdc2b63bf2bcce45834'\n  type: 'social'\n--- # [EP2.2.4] [Social] ENS Endaoment RFP\n\n::authors\n\n| **Status**            | Passed                                                                                                                 |\n| --------------------- | ---------------------------------------------------------------------------------------------------------------------- |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/ep2-2-4-social-rfp-ens-endowment/14069)                                          |\n| **Votes**             | [Snapshot](https://snapshot.org/#/ens.eth/proposal/0x4a1aedbd9d22295f358dc4028b5a3f0a602bb5f1089dabdc2b63bf2bcce45834) |", "mimetype": "text/plain", "start_char_idx": 2801, "end_char_idx": 2853, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8daa696f-2c6d-4763-9931-ced2aa431c4f": {"__data__": {"id_": "8daa696f-2c6d-4763-9931-ced2aa431c4f", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/2.2.4.mdx", "file_name": "2.2.4.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.2.4.mdx", "header_path": "/[EP2.2.4] [Social] ENS Endaoment RFP/", "customer_id": 1, "source_url": "src/pages/dao/proposals/2.2.4.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["insulate", "established", "seeking", "economic", "endowment", "ensuring", "treasury", "current", "combination", "ongoing", "continue", "overview", "manage", "exist", "manager"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f5a93c865f0ed38f1c8768cffbd87110cdfdf152", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/2.2.4.mdx", "file_name": "2.2.4.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.2.4.mdx"}, "hash": "87d48e458651f53c26ee42b451a026dea92d551dcbc25630cd42afc0e88bb5f3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "911c6325-dc87-4735-95b8-d19a20b54040", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/2.2.4.mdx", "file_name": "2.2.4.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.2.4.mdx", "header_path": "/"}, "hash": "e422bf213820f0beba3c7cbbc913d8989cfeb04d78d411378dc1b3893f702c79", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "514f5baf-1e23-4c1e-b1d0-a8b2b79dcb38", "node_type": "1", "metadata": {"header_path": "/[EP2.2.4] [Social] ENS Endaoment RFP/"}, "hash": "a13dcc6bc914a2bd637d03cf04c04edc557bab54d03087109bca1be10bba0c9c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Overview\n\nThe DAO is seeking a fund manager to manage an endowment fund. This fund will be established from some combination of current treasury and ongoing revenue, and will exist to insulate the DAO from economic fluctuations, ensuring it can continue its core operations regardless of the wider economic outlook.\n\nFunds will be drawn from the DAO's general funds, currently held in ETH and USDC, as well as from ongoing DAO revenue until the fund reaches its target size. Proposals should outline how much of the DAO's current funds the intend to appropriate, as well as what proportion of ongoing revenue will be required, and for how long.\n\nThe DAO's accounting basis divides assets into earned and unearned income. Unearned income corresponds to funds paid for registrations and renewals that are future-dated; for example, if a user spends $100 to register a name for 20 years, after a year $5 of that will be counted as earned income and the remainder as unearned income.\n\nUnearned income may be incorporated into the fund, but must be risk-neutral with regard to ETH. Earned income should be risk-netural with regard to USDC.\n\nThe DAO's current balances can be viewed [here](https://datastudio.google.com/reporting/8785928a-71d5-4b17-9fea-fe1c937b064f); as of this writing they are:\n\n- 13,069 ETH (\\~$20M) in earned income\n- $3,817,067 USDC\n- 18,184 ETH (\\~$20M) in unearned income", "mimetype": "text/plain", "start_char_idx": 828, "end_char_idx": 2221, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "514f5baf-1e23-4c1e-b1d0-a8b2b79dcb38": {"__data__": {"id_": "514f5baf-1e23-4c1e-b1d0-a8b2b79dcb38", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/2.2.4.mdx", "file_name": "2.2.4.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.2.4.mdx", "header_path": "/[EP2.2.4] [Social] ENS Endaoment RFP/", "customer_id": 1, "source_url": "src/pages/dao/proposals/2.2.4.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["structure", "accepted", "expand", "specified", "endowment", "implement", "scope", "adjust", "proposal", "stewards", "executable", "refine", "administer"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f5a93c865f0ed38f1c8768cffbd87110cdfdf152", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/2.2.4.mdx", "file_name": "2.2.4.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.2.4.mdx"}, "hash": "87d48e458651f53c26ee42b451a026dea92d551dcbc25630cd42afc0e88bb5f3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8daa696f-2c6d-4763-9931-ced2aa431c4f", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/2.2.4.mdx", "file_name": "2.2.4.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.2.4.mdx", "header_path": "/[EP2.2.4] [Social] ENS Endaoment RFP/"}, "hash": "ca955bca653ddb9d51205fa4153d81b51fd650cce0b5ea8ae3184b23e09d48d4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d763512e-090f-48b3-91a6-d8837adc7215", "node_type": "1", "metadata": {"header_path": "/[EP2.2.4] [Social] ENS Endaoment RFP/"}, "hash": "740d64a4b0ae82aa15c2847910a83b629164b0c443209369304435e320440b52", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Scope of Work\n\n1. Expand the endowment structure specified in the accepted proposal into an executable form.\n2. Work with the ENS Meta-Governance stewards to refine the proposal.\n3. Implement the proposal onchain.\n4. Administer and adjust the endowment as necessary on an ongoing basis. ## Selection Criteria\n\nThe endowment will need to be able to sustain annual withdrawals of at least $4M USDC without a long-term reduction in principal.\n\nProposals should include, at a minimum:\n\n1. Intended high-level fund allocation of the endowment.\n2. Initial and target size for the endowment fund, including the proportion of funds sourced from earned and unearned income.\n3. How incoming revenues and income will be assigned to the fund.\n4. Specific information on how the fund will be managed, and what steps will be taken to minimise custodial risk.\n5. A fee schedule for the fund manager.\n6. A detailed description of the reporting structures that will be put in place.\n\nPriority will be given to proposals that:\n\n- Minimise custodial risk by using onchain mechanisms that allow administration of the funds without the fund administrator having custody of the funds.\n- Lay out a coherent strategy for how investment returns can be maintained in the short/medium/long term.\n- Minimise capital risks relative to the expected returns.\n- Define clear mechanisms for assessment and adjustment to changing external and internal conditions in order to continue to meet the endowment's objectives.\n- Offer a high rate of return proportional to risk.\n- Define a clear reporting structure for frequent and comprehensive reporting of the fund's status to the DAO.", "mimetype": "text/plain", "start_char_idx": 2223, "end_char_idx": 2512, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "307a33bf-09eb-40f1-a1f0-8bfd416974d9": {"__data__": {"id_": "307a33bf-09eb-40f1-a1f0-8bfd416974d9", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/2.2.4.mdx", "file_name": "2.2.4.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.2.4.mdx", "header_path": "/[EP2.2.4] [Social] ENS Endaoment RFP/", "customer_id": 1, "source_url": "src/pages/dao/proposals/2.2.4.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["september", "october", "proposals", "stewards", "managers", "timeline", "which", "november", "confidence", "until", "submission", "submitted", "manager", "forum"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f5a93c865f0ed38f1c8768cffbd87110cdfdf152", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/2.2.4.mdx", "file_name": "2.2.4.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.2.4.mdx"}, "hash": "87d48e458651f53c26ee42b451a026dea92d551dcbc25630cd42afc0e88bb5f3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d763512e-090f-48b3-91a6-d8837adc7215", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/2.2.4.mdx", "file_name": "2.2.4.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.2.4.mdx", "header_path": "/[EP2.2.4] [Social] ENS Endaoment RFP/"}, "hash": "68dec447645afb898a1977bd544bcdac205bf1cafe50f2151f295063b0d149e9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4f845412-12de-4173-b291-896f0589bfe8", "node_type": "1", "metadata": {"header_path": "/[EP2.2.4] [Social] ENS Endaoment RFP/"}, "hash": "7085a4fa1fb40390040b211bb9c71281e9a644b754949f1d65042d823df32620", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Timeline\n\n|                       |                                |\n| --------------------- | ------------------------------ |\n| **Submission Period** | September 15 - October 10 2022 |\n| **Approval Period**   | October 10 - November 7 2022   | ## RFP Manager\n\nThe Meta-Governance WG stewards are the RFP managers for this RFP.\n\nProposals can be submitted via forum DM to the stewards. They will be held in confidence until the end of the submission period, at which point all applicants will be invited to post their proposals publicly for feedback on the forum.\n\nOnce a winning proposal is selected by the RFP managers, it will be announced and posted publicly.", "mimetype": "text/plain", "start_char_idx": 3877, "end_char_idx": 4125, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "471307ba-8ed0-433a-aace-3ead00537c41": {"__data__": {"id_": "471307ba-8ed0-433a-aace-3ead00537c41", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/2.2.4.mdx", "file_name": "2.2.4.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.2.4.mdx", "header_path": "/[EP2.2.4] [Social] ENS Endaoment RFP/", "customer_id": 1, "source_url": "src/pages/dao/proposals/2.2.4.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["selected", "selection", "expected", "endowment", "capital", "budget", "performance", "proposed", "funded", "combination", "karpatkey", "manager"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f5a93c865f0ed38f1c8768cffbd87110cdfdf152", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/2.2.4.mdx", "file_name": "2.2.4.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.2.4.mdx"}, "hash": "87d48e458651f53c26ee42b451a026dea92d551dcbc25630cd42afc0e88bb5f3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4f845412-12de-4173-b291-896f0589bfe8", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/2.2.4.mdx", "file_name": "2.2.4.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.2.4.mdx", "header_path": "/[EP2.2.4] [Social] ENS Endaoment RFP/"}, "hash": "b6a615c2c41817719760c787fb3eb2dfe030808585c70b74d3bc3c8af896ff31", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Budget\n\nThe endowment is expected to be funded out of a combination of capital and performance fees as proposed by the fund manager. ---\ndescription: 'Selection of an ENS endowment fund manager'\nauthors: ['arachnid']\nproposal:\n  discourse: '15188'\n  snapshot: '0x1ab7ef84f6e904582d5b5b921944b5b1a8e36dbff1f1248fde87fef02b046816'\n  type: 'social'\n--- # [EP2.2.5] [Social] Selection of an ENS endowment fund manager\n\n::authors\n\n| **Status**            | Passed, Karpatkey selected                                                                                             |\n| --------------------- | ---------------------------------------------------------------------------------------------------------------------- |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/15188)                                                                           |\n| **Votes**             | [Snapshot](https://snapshot.org/#/ens.eth/proposal/0x1ab7ef84f6e904582d5b5b921944b5b1a8e36dbff1f1248fde87fef02b046816) |", "mimetype": "text/plain", "start_char_idx": 4547, "end_char_idx": 4682, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "608564ea-a108-4c22-9918-83ac839a903b": {"__data__": {"id_": "608564ea-a108-4c22-9918-83ac839a903b", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/2.2.5.mdx", "file_name": "2.2.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.2.5.mdx", "header_path": "/[EP2.2.5] [Social] Selection of an ENS endowment fund manager/", "customer_id": 1, "source_url": "src/pages/dao/proposals/2.2.5.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["selected", "group", "abstract", "stewards", "managers", "following", "working", "potential", "short", "manage", "elect", "approved", "process", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4e50dc9d543c89a985765a07a5348984bbed7d77", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/2.2.5.mdx", "file_name": "2.2.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.2.5.mdx"}, "hash": "fed4a6a0f4dd43d864f7f1b3d2ecbf5f359e3f0563cbdc0819b1beb22746a90e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "aa8d740e-5d9b-4714-9c2a-14c325b445f4", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/2.2.5.mdx", "file_name": "2.2.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.2.5.mdx", "header_path": "/"}, "hash": "13054d9824aa53ccaffcad68336d626aeae7d55e12855d5544e15c3aa84654fa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "846bf6bb-1f1e-4a33-a0c4-a6347f3fad6c", "node_type": "1", "metadata": {"header_path": "/[EP2.2.5] [Social] Selection of an ENS endowment fund manager/"}, "hash": "dbe392ad60ab3b50e8de19127979e60bb9d789d29d38238ba28f77b26b3f1252", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Abstract\n\nFollowing the RFP process approved in EP2.2.4, the Meta-Governance Working Group stewards have selected a short list of potential fund managers for the DAO to elect to manage the ENS Endowment. ## Specification\n\nEP2.2.4 set out a process for fund managers to submit proposals to the Meta-Governance Working Group for consideration as fund managers over an ENS Endowment. The Endowment's goal is to ensure the long-term viability of ENS by ensuring it can meet its ongoing financial obligations even in the face of reduced ETH price and registration/renewal revenue.\n\nEight submissions were made as a result of the RFP process, and the stewards have narrowed this down to three finalists. All three finalists are established actors with track records of fund management, and their proposals reflect an understanding of the low-risk, long-term sustainability approach that an endowment should take.\n\nRather than select a winner themselves, the Meta-Governance Working Group Stewards believe that the selection of a fund manager should be put to the DAO. This EP implements a Snapshot vote using Ranked Choice voting with the following options:\n\n1. Avantgarde\n2. Karpatkey\n3. Llama\n4. None of the above\n\nSubmissions for the vote are listed in alphabetical order.\n\nFollowing the conclusion of the vote, the Meta-Governance Stewards will work with the winning team to develop an initial treasury allocation strategy, resulting in a separate executable proposal to enact the initial setup of the endowment.", "mimetype": "text/plain", "start_char_idx": 883, "end_char_idx": 1089, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c3e6604e-b15b-4b17-91dc-b998f539636b": {"__data__": {"id_": "c3e6604e-b15b-4b17-91dc-b998f539636b", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/2.2.5.mdx", "file_name": "2.2.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.2.5.mdx", "header_path": "/[EP2.2.5] [Social] Selection of an ENS endowment fund manager/Specification/", "customer_id": 1, "source_url": "src/pages/dao/proposals/2.2.5.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["final", "submissions", "table", "performance", "admin", "target", "breakeven", "below", "return", "summary", "summarizes", "submission", "initial"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4e50dc9d543c89a985765a07a5348984bbed7d77", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/2.2.5.mdx", "file_name": "2.2.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.2.5.mdx"}, "hash": "fed4a6a0f4dd43d864f7f1b3d2ecbf5f359e3f0563cbdc0819b1beb22746a90e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "846bf6bb-1f1e-4a33-a0c4-a6347f3fad6c", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/2.2.5.mdx", "file_name": "2.2.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.2.5.mdx", "header_path": "/[EP2.2.5] [Social] Selection of an ENS endowment fund manager/"}, "hash": "6f65b875605650a694c531cdad0ea88eee879ba65d008b9c47e85ada453fd8e5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Submission Summary\n\nThe table below summarizes the final submissions made by each candidate.\n\n| Submission                                                                                         | Initial Size    | Target Size      | Performance Fee | Admin Fee         | Breakeven Return |\n| -------------------------------------------------------------------------------------------------- | --------------- | ---------------- | --------------- | ----------------- | ---------------- |\n| [Avantgarde](https://discuss.ens.domains/t/endaoment-proposal-avantgarde/14800?u=nick.eth)         | 25,000 ETH      | $100,000,000 USD | 12.5%           | 0.5%              | 0.57%            |\n| [Karpatkey](https://discuss.ens.domains/t/endaoment-proposal-karpatkey-steakhouse-financial/14799) | $52,000,000 USD | $69,000,000 USD  | 10%             | 0.5%              | 0.56%            |\n| [Llama](https://discuss.ens.domains/t/updated-endaoment-proposal-llama-x-alastor/15183)            | 30,000 ETH      | $80,000,000 USD  | 0%              | 1% min. $500k USD | 1% - 1.28%       |\n\nBreakeven return is calculated as `admin_fee / (1 - performance_fee)`.", "mimetype": "text/plain", "start_char_idx": 2399, "end_char_idx": 3553, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d24bb743-6029-4acf-8aa6-8141fff1603a": {"__data__": {"id_": "d24bb743-6029-4acf-8aa6-8141fff1603a", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/3.1.1.mdx", "file_name": "3.1.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.1.1.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/3.1.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ecosystem", "request", "group", "proposal", "passed", "funding", "working"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d84fbf0fb1f018fe61812247f37e823a30dfa1b6", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/3.1.1.mdx", "file_name": "3.1.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.1.1.mdx"}, "hash": "81ea8b68886286df6c4f5b67ff68cc0fced025272523d387c3d27784eb45fbf2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "53374248-6334-48bb-93e5-5a0a60f552f4", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "643bd9324620b214d3f7a7fb47f34a80bfbdcec6558aedd156935298f3a1051e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: 'This is a proposal to request funding for the ENS Ecosystem Working Group for Q1/Q2 2023.'\nauthors: ['aslobodnik']\nproposal:\n  discourse: '15938'\n  snapshot: '0x5788bf0f52ce82a1d3f7750a80f3001671ded49e4e0239dbbafd154275c78f8b'\n  type: 'social'\n--- # [EP3.1.1] [Social] Q1/Q2 2023 Funding Request: ENS Ecosystem Working Group\n\n::authors\n\n| **Status**            | Passed                                                                                                                 |\n| --------------------- | ---------------------------------------------------------------------------------------------------------------------- |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/15938)                                                                           |\n| **Votes**             | [Snapshot](https://snapshot.org/#/ens.eth/proposal/0x5788bf0f52ce82a1d3f7750a80f3001671ded49e4e0239dbbafd154275c78f8b) |", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 265, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6d0901af-2d8f-415a-b60d-c982ccaf56ad": {"__data__": {"id_": "6d0901af-2d8f-415a-b60d-c982ccaf56ad", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/3.1.1.mdx", "file_name": "3.1.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.1.1.mdx", "header_path": "/[EP3.1.1] [Social] Q1/Q2 2023 Funding Request: ENS Ecosystem Working Group/", "customer_id": 1, "source_url": "src/pages/dao/proposals/3.1.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ecosystem", "group", "abstract", "growing", "responsible", "improving", "working", "funding", "requests", "people"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d84fbf0fb1f018fe61812247f37e823a30dfa1b6", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/3.1.1.mdx", "file_name": "3.1.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.1.1.mdx"}, "hash": "81ea8b68886286df6c4f5b67ff68cc0fced025272523d387c3d27784eb45fbf2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "53374248-6334-48bb-93e5-5a0a60f552f4", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/3.1.1.mdx", "file_name": "3.1.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.1.1.mdx", "header_path": "/"}, "hash": "f85b8447fbca0a19a8276599f66a492fbceb634b1b46f45fac7bf959945aced1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "71f2f7ba-9ee7-43b4-9410-fb378495c957", "node_type": "1", "metadata": {"header_path": "/[EP3.1.1] [Social] Q1/Q2 2023 Funding Request: ENS Ecosystem Working Group/"}, "hash": "1defd45ef1de5ee68a519697a96544c0af18f771de63355f0a0b0878e71e9e25", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Abstract\n\nThe ENS Ecosystem Working Group requests funding of 935,000 USDC and 254 ETH from the ENS DAO for Q1/Q2 2023.\n\nThe ENS Ecosystem Working Group is responsible for growing and improving the ENS Ecosystem by funding people and projects that are ENS-specific or ENS-centric. In line with Article III of the ENS DAO Constitution, the requested funds will be used to support projects and builders contributing to the development and improvement of the ENS protocol and the ENS ecosystem.\n\nThis social proposal is submitted to satisfy the requirements set out in Rule 10.1.1 of the Working Group Rules ([EP 1.8](https://docs.ens.domains/v/governance/governance-proposals/term-1/ep12-working-group-rules)). If this proposal is passed, the funding request will be included in a collective executable proposal put forward by all three Working Groups.", "mimetype": "text/plain", "start_char_idx": 945, "end_char_idx": 1798, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "71f2f7ba-9ee7-43b4-9410-fb378495c957": {"__data__": {"id_": "71f2f7ba-9ee7-43b4-9410-fb378495c957", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/3.1.1.mdx", "file_name": "3.1.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.1.1.mdx", "header_path": "/[EP3.1.1] [Social] Q1/Q2 2023 Funding Request: ENS Ecosystem Working Group/", "customer_id": 1, "source_url": "src/pages/dao/proposals/3.1.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ecosystem", "group", "description", "requesting", "currently", "working", "funding", "multisig", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d84fbf0fb1f018fe61812247f37e823a30dfa1b6", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/3.1.1.mdx", "file_name": "3.1.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.1.1.mdx"}, "hash": "81ea8b68886286df6c4f5b67ff68cc0fced025272523d387c3d27784eb45fbf2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6d0901af-2d8f-415a-b60d-c982ccaf56ad", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/3.1.1.mdx", "file_name": "3.1.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.1.1.mdx", "header_path": "/[EP3.1.1] [Social] Q1/Q2 2023 Funding Request: ENS Ecosystem Working Group/"}, "hash": "78a0262deb32deadca4b2059b200193db8969285ef69d84aa173781702b231f6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dbc060d4-5e45-4ee4-a031-9d9903619f64", "node_type": "1", "metadata": {"header_path": "/[EP3.1.1] [Social] Q1/Q2 2023 Funding Request: ENS Ecosystem Working Group/"}, "hash": "fe7f3aeb90dbbbdca3b30a5c333500e96224c9d3796af6476331ba37ece806ca", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\n|                        |  USDC   | ETH | $ENS |\n| ---------------------- | :-----: | :-: | :--: |\n| ENS Ecosystem Multisig | 935,000 | 254 |  -   | ## Description\n\n**ENS Ecosystem Multisig Balance**\n\nThe ENS Ecosystem Working Group is requesting 935,000 USDC, 254 ETH, and 0 $ENS.\n\nThe ENS Ecosystem Working Group currently has 879,982 USDC, 110 ETH, and 40,936 $ENS in its multisigs.\n\nIf this funding request is approved, the ENS Ecosystem Working Group multisigs will have a total of 1,814,982 USDC, 364 ETH, and 40,936 $ENS.\n\n|                                   |     USDC      |   ETH   |    ENS     |\n| --------------------------------- | :-----------: | :-----: | :--------: |\n| Carried Forward (from Q3/Q4 2022) |    879,982    |   110   |   40,936   |\n| Requested (for Q1/Q2 2023)        |    935,000    |   254   |     0      |\n| **Total Balance**                 | **1,814,982** | **364** | **40,936** |\n\n**ENS Ecosystem Multisig Allocations for Q1/Q2 2023 (with funding request approved)**\n\nThe table below shows the total allocations for the ENS Ecosystem Working Group multisig, and related multisigs, with funds carried forward from last term (Q3/Q4 2022) along with funds requested in this proposal for this term (Q1/Q2 2023).\n\n|                   |     USDC      |   ETH   |    $ENS    |\n| ----------------- | :-----------: | :-----: | :--------: |\n| Hackathons        |    235,000    |   20    |     -      |\n| Support           |    178,000    |   20    |   1,250    |\n| Grants            |    220,580    |   30    |     -      |\n| Builders          |    250,000    |   39    |   2,000    |\n| IRL               |    84,256     |   10    |   1,000    |\n| Merch             |    50,967     |    5    |    500     |\n| ENS Fairy         |    50,000     |   174   |     -      |\n| ENS Fellowship    |    60,000     |    -    |     -      |\n| Layer 2           |    150,000    |    -    |     -      |\n| Normalization     |    50,000     |    -    |     -      |\n| ETH.Limo          |    85,000     |   10    |     -      |\n| Bug Bounty\\*\\*    |    240,000    |    -    |     -      |\n| Discretionary     |    161,179    |   56    | 36,186\\*\\* |\n| **Total Balance** | **1,814,982** | **364** | **40,936** |\n\n\\*\\* The USDC in the Bug Bounty and the $ENS held by the ENS Ecosystem Working Group multisig is available if needed and will likely be carried forward into future terms.\n\n**Allocation of Requested Funds**\n\nThe 935,000 USDC, 254 ETH, and 0 $ENS of funds requested in this proposal will be allocated to the following initiatives/outcomes.\n\n|                           |    USDC     |   ETH   | $ENS  |\n| ------------------------- | :---------: | :-----: | :---: |\n| Hackathons                |   230,000   |   10    |   -   |\n| Support                   |   90,000    |    5    |   -   |\n| Grants                    |   105,000   |   30    |   -   |\n| Builders                  |   100,000   |   15    |   -   |\n| IRL                       |   45,000    |    5    |   -   |\n| Merch                     |   40,000    |    5    |   -   |\n| ENS Fairy                 |   50,000    |   174   |   -   |\n| ENS Fellowship            |   60,000    |    -    |   -   |\n| Layer 2                   |   105,000   |    -    |   -   |\n| Normalization             |   40,000    |    -    |   -   |\n| ETH.Limo                  |   70,000    |   10    |   -   |\n| **Total Requested Funds** | **935,000** | **254** | **-** |\n\n**Description of Initiatives/Pods**\n\n| Initiative/Pod | Description                                                                                                                                                                                                                                          | Multisig Signer or Lead Singer |\n| -------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | :----------------------------: |\n| Hackathons     | Sponsorship costs and prize money for hackathons and conferences                                                                                                                                                                                     |          luc.computer          |\n| Support        | Support mods for social platforms, technical and non-technical educational and archival content                                                                                                                                                      |         validator.eth          |\n| Grants         | Small grants funding for ENS proposals on ensgrants.xyz + evergreen integration bounties                                                                                                                                                             |       Ecosystem stewards       |\n| Builders       | Support for builders shipping code that improves ENS                                                                                                                                                                                                 |       Ecosystem stewards       |\n| IRL            | Funding In Real Life events that coincide with the existing Ethereum event schedule + funding IRL community meetups                                                                                                                                  |           limes.eth            |\n| Merch          | Subsidizing the cost of creating and shipping physical ENS merchandise including shirts, hats, and pins                                                                                                                                              |       Ecosystem stewards       |\n| ENS Fairy      | Funds continued development of ensfairy.xyz + acquisition by validator.eth of names on temporary premium that can be utilized to grow ENS adoption + funding the ENS fairy registration bot to gift .eth names to IRL community members and builders |         validator.eth          |\n| ENS Fellowship | Supports exceptional developers actively creating and contributing to the ENS ecosystem with a 6 month Fellowship                                                                                                                                    |       Ecosystem stewards       |\n| Layer 2        | Development of ENS Layer 2 solutions                                                                                                                                                                                                                 |       Ecosystem stewards       |\n| Discretionary  | Funds in the Ecosystem Working Group multisig that are utilized at the discretion of stewards                                                                                                                                                        |       Ecosystem stewards       |\n\nThis proposal was prepared by Slobo.eth, lead steward of the ENS Ecosystem Working Group.", "mimetype": "text/plain", "start_char_idx": 1800, "end_char_idx": 1967, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "486bc25c-2f54-4d3f-8b6c-cd05732cc567": {"__data__": {"id_": "486bc25c-2f54-4d3f-8b6c-cd05732cc567", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/3.1.2.mdx", "file_name": "3.1.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.1.2.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/3.1.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["request", "group", "proposal", "passed", "funding", "working"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2676a0ba1b3d4f477a161ceb312760cb0f96d3cd", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/3.1.2.mdx", "file_name": "3.1.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.1.2.mdx"}, "hash": "3c4761f2e9ccf9c7f54714a4809127209d707b91fc661379942564f8df23960f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bfe72452-56ab-45f3-9fe4-38fea0a2d57b", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "42b146238fb411eb5dc5bfd7fa60f1a2511e9755e83d8f74234809ec54b542e0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: 'This is a proposal to request funding for the Meta-Governance Working Group for Q1/Q2 2023.'\nauthors: ['katherineykwu']\nproposal:\n  discourse: '15940'\n  snapshot: '0xd7eff781be059513b5cd64d79e709abbbc653944c9a8c621dc051e7b42a405cb'\n  type: 'social'\n--- # [EP3.1.2] [Social] Q1/Q2 2023 Funding Request: Meta-Governance Working Group\n\n::authors\n\n| **Status**            | Passed                                                                                                                 |\n| --------------------- | ---------------------------------------------------------------------------------------------------------------------- |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/15940)                                                                           |\n| **Votes**             | [Snapshot](https://snapshot.org/#/ens.eth/proposal/0xd7eff781be059513b5cd64d79e709abbbc653944c9a8c621dc051e7b42a405cb) |", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 270, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f9dd2af8-2dc4-4a37-8cbb-3e1c9f958683": {"__data__": {"id_": "f9dd2af8-2dc4-4a37-8cbb-3e1c9f958683", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/3.1.2.mdx", "file_name": "3.1.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.1.2.mdx", "header_path": "/[EP3.1.2] [Social] Q1/Q2 2023 Funding Request: Meta-Governance Working Group/", "customer_id": 1, "source_url": "src/pages/dao/proposals/3.1.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["processes", "social", "infrastructure", "group", "abstract", "funding", "working", "support", "manage", "requests", "build", "governance"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2676a0ba1b3d4f477a161ceb312760cb0f96d3cd", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/3.1.2.mdx", "file_name": "3.1.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.1.2.mdx"}, "hash": "3c4761f2e9ccf9c7f54714a4809127209d707b91fc661379942564f8df23960f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bfe72452-56ab-45f3-9fe4-38fea0a2d57b", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/3.1.2.mdx", "file_name": "3.1.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.1.2.mdx", "header_path": "/"}, "hash": "b0ec22c17155e84e695134a2dd20b6cec3bb284f61b57d7544983c7b64e3a461", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "499151f9-af41-4d8a-8b00-28c7a024c4f4", "node_type": "1", "metadata": {"header_path": "/[EP3.1.2] [Social] Q1/Q2 2023 Funding Request: Meta-Governance Working Group/"}, "hash": "755cc009e119c5c6f6140239ff802a8b937bd634c2da7d29b80293f267dbdcc3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Abstract\n\nThe Meta-Governance Working Group requests funding of 364,000 USDC, 125 ETH, and 3,500 $ENS from the ENS DAO for Q1/Q2 2023.\n\nThis funding will be used to support the governance processes of the ENS DAO as well as manage and build infrastructure to support the ENS DAO and Working Groups.\n\nThis social proposal is submitted to satisfy the requirements set out in Rule 10.1.1 of the Working Group Rules ([EP 1.8](https://docs.ens.domains/v/governance/governance-proposals/term-1/ep12-working-group-rules)). If this proposal is passed, the funding request will be included in a collective executable proposal put forward by all three Working Groups.", "mimetype": "text/plain", "start_char_idx": 952, "end_char_idx": 1612, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "499151f9-af41-4d8a-8b00-28c7a024c4f4": {"__data__": {"id_": "499151f9-af41-4d8a-8b00-28c7a024c4f4", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/3.1.2.mdx", "file_name": "3.1.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.1.2.mdx", "header_path": "/[EP3.1.2] [Social] Q1/Q2 2023 Funding Request: Meta-Governance Working Group/", "customer_id": 1, "source_url": "src/pages/dao/proposals/3.1.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["request", "group", "description", "multisig", "requesting", "currently", "working", "funding", "total", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2676a0ba1b3d4f477a161ceb312760cb0f96d3cd", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/3.1.2.mdx", "file_name": "3.1.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.1.2.mdx"}, "hash": "3c4761f2e9ccf9c7f54714a4809127209d707b91fc661379942564f8df23960f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f9dd2af8-2dc4-4a37-8cbb-3e1c9f958683", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/3.1.2.mdx", "file_name": "3.1.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.1.2.mdx", "header_path": "/[EP3.1.2] [Social] Q1/Q2 2023 Funding Request: Meta-Governance Working Group/"}, "hash": "d2371493b0a0bd2fb283603cd8673c6ec1a058d50a451f4a5d9975f31389fae5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f121e40b-7f57-4abe-97ec-194121cf9931", "node_type": "1", "metadata": {"header_path": "/[EP3.1.2] [Social] Q1/Q2 2023 Funding Request: Meta-Governance Working Group/"}, "hash": "598484f870388446813428b790c2d1d6769df86e0ad4506b80e161038c7c2384", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\n|                          |  USDC   | ETH | $ENS  |\n| ------------------------ | :-----: | :-: | :---: |\n| Meta-Governance Multisig | 364,000 | 125 | 3,500 | ## Description\n\n**Meta-Governance Multisig Balance**\n\nThe Meta-Governance Working Group is requesting 364,000 USDC, 125 ETH, and 3,500 $ENS.\n\nThe Meta-Governance Working Group currently has 217,510 USDC, 17 ETH, and 8,940 $ENS in its multi-sigs.\n\nIf this funding request is approved, the Meta-Governance Working Group multi-sigs will have a total of 581,510 USDC, 142 ETH, and 12,440 $ENS.\n\n|                                   | USDC        | ETH     | $ENS       |\n| --------------------------------- | ----------- | ------- | ---------- |\n| Carried Forward (from Q3/Q4 2022) | 217,510     | 17      | 8,940      |\n| Requested (for Q1/Q2 2023)        | 364,000     | 125     | 3,500      |\n| **Total Balance**                 | **581,510** | **142** | **12,440** |\n\n**MetaGovernance Multisig Allocations for Q1/Q2 2023 (with funding request approved)**\n\nThe table below shows the total allocations for the MetaGovernance Working Group multi-sig, and related pods, with funds carried forward from last term (Q3/Q4 2022) along with funds requested in this proposal for this term (Q1/Q2 2023).\n\n|                                  | USDC        | ETH     | $ENS       |\n| -------------------------------- | ----------- | ------- | ---------- |\n| Steward + Secretary Compensation | 184,000     | -       | 3,500      |\n| Governance                       | 88,500      | 32      | 1,250      |\n| DAO Tooling                      | 171,000     | 60      | 3,000      |\n| DAO Sponsorship                  | 60,000      | 10      | -          |\n| Discretionary                    | 78,010      | 40      | 4,690      |\n| **Total Balance**                | **581,510** | **142** | **12,440** |\n\n**Allocation of Requested Funds**\n\nThe 364,000 USDC, 125 ETH, and 3,500 $ENS of funds requested in this proposal will be allocated to the following initiatives/outcomes.\n\n|                                  | USDC        | ETH     | $ENS      |\n| -------------------------------- | ----------- | ------- | --------- |\n| Steward + Secretary Compensation | 184,000     | -       | 3,500     |\n| Governance                       | 40,000      | 30      | -         |\n| DAO Tooling                      | 80,000      | 50      | -         |\n| DAO Sponsorship                  | 60,000      | 10      | -         |\n| Discretionary                    | -           | 35      | -         |\n| **Total Requested Funds**        | **364,000** | **125** | **3,500** |\n\n**Description of Initiatives/Pods**\n\n| Initiative/Pod                   | Description                                                                                                     | Multisig Signers or Lead Signer |\n| -------------------------------- | --------------------------------------------------------------------------------------------------------------- | ------------------------------- |\n| Steward + Secretary Compensation | Working Group Steward compensation totaling $144k USDC + 3,000 $ENS plus Secretary compensation of $40k USDC    | MetaGov stewards                |\n| Governance                       | Fee reimbursements and initiatives related to reducing friction in the governance process                       | MetaGov stewards                |\n| DAO Tooling                      | Developing interfaces and dashboards to improve the governance process and increase transparency across the DAO | alisha.eth                      |\n| DAO Sponsorship                  | Sponsoring DAO-specific events such as DAO NYC, DAO Tokyo, and Aragon's DAO Global Hackathon                    | MetaGov stewards                |\n| Discretionary                    | Funds distributed at the discretion of stewards towards new initiatives + governance experiments                | MetaGov stewards                |\n\nThis proposal was prepared by Katherine Wu, lead steward of the MetaGovernance Working Group.", "mimetype": "text/plain", "start_char_idx": 1614, "end_char_idx": 1790, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ba22d2a8-0f4f-40b3-85dd-23dd963d1c92": {"__data__": {"id_": "ba22d2a8-0f4f-40b3-85dd-23dd963d1c92", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/3.1.3.mdx", "file_name": "3.1.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.1.3.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/3.1.3.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["request", "group", "proposal", "public", "passed", "funding", "working", "goods"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "41a2a51b46af8418c1aa3a6055cd314a20692c6a", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/3.1.3.mdx", "file_name": "3.1.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.1.3.mdx"}, "hash": "8ef031af778a64fde19473d2a6cd13a43b59ab1da9653f4115d7ae73fa513799", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4e5b7016-1d9e-4006-8d07-6cefc145303e", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "0b236be44b406f1efec935537620dd569b0586a453563481fb0fbd836ee7c1b8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: 'This is a proposal to request funding for the Public Goods Working Group for Q1/Q2 2023.'\nauthors: ['coltron-code']\nproposal:\n  discourse: '15941'\n  snapshot: '0x41b3509b88e15677aa15680f48278517f794822fb9a79b9c621def53f1866be7'\n  type: 'social'\n--- # [EP3.1.3] [Social] Q1/Q2 2023 Funding Request: Public Goods Working Group\n\n::authors\n\n| **Status**            | Passed                                                                                                                 |\n| --------------------- | ---------------------------------------------------------------------------------------------------------------------- |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/15941)                                                                           |\n| **Votes**             | [Snapshot](https://snapshot.org/#/ens.eth/proposal/0x41b3509b88e15677aa15680f48278517f794822fb9a79b9c621def53f1866be7) |", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 266, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "186d8c59-e2df-4f41-b1c3-0b082ac89280": {"__data__": {"id_": "186d8c59-e2df-4f41-b1c3-0b082ac89280", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/3.1.3.mdx", "file_name": "3.1.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.1.3.mdx", "header_path": "/[EP3.1.3] [Social] Q1/Q2 2023 Funding Request: Public Goods Working Group/", "customer_id": 1, "source_url": "src/pages/dao/proposals/3.1.3.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["goods", "group", "abstract", "provisioned", "builders", "public", "which", "working", "funding", "support", "provides", "requests", "article", "projects"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "41a2a51b46af8418c1aa3a6055cd314a20692c6a", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/3.1.3.mdx", "file_name": "3.1.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.1.3.mdx"}, "hash": "8ef031af778a64fde19473d2a6cd13a43b59ab1da9653f4115d7ae73fa513799", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4e5b7016-1d9e-4006-8d07-6cefc145303e", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/3.1.3.mdx", "file_name": "3.1.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.1.3.mdx", "header_path": "/"}, "hash": "6549e2810d9fb3838b4253c0e2a0a757632bee11cdd8b2d6fa570f0dc9e1eb88", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2b4ee8a1-f06c-41ea-898e-f5e6a6dd8ebc", "node_type": "1", "metadata": {"header_path": "/[EP3.1.3] [Social] Q1/Q2 2023 Funding Request: Public Goods Working Group/"}, "hash": "f9cd87671541097466c92794b07f6ae09c392d8bf4a8b682ebe3564b8cd54fb3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Abstract\n\nThe Public Goods Working Group requests funding of 250,000 USDC and 50 ETH from the ENS DAO for Q1/Q2 2023.\n\nThis funding will be used to support projects and builders as provisioned by Article III of the ENS DAO Constitution, which provides for the funding of public goods in web3.\n\nThis social proposal is submitted to satisfy the requirements set out in Rule 10.1.1 of the Working Group Rules ([EP 1.8](https://docs.ens.domains/v/governance/governance-proposals/term-1/ep12-working-group-rules)). If this proposal is passed the funding request will be included in a collective executable proposal put forward by all three Working Groups.", "mimetype": "text/plain", "start_char_idx": 945, "end_char_idx": 1598, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2b4ee8a1-f06c-41ea-898e-f5e6a6dd8ebc": {"__data__": {"id_": "2b4ee8a1-f06c-41ea-898e-f5e6a6dd8ebc", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/3.1.3.mdx", "file_name": "3.1.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.1.3.mdx", "header_path": "/[EP3.1.3] [Social] Q1/Q2 2023 Funding Request: Public Goods Working Group/", "customer_id": 1, "source_url": "src/pages/dao/proposals/3.1.3.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["group", "description", "requesting", "public", "working", "multisig", "goods", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "41a2a51b46af8418c1aa3a6055cd314a20692c6a", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/3.1.3.mdx", "file_name": "3.1.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.1.3.mdx"}, "hash": "8ef031af778a64fde19473d2a6cd13a43b59ab1da9653f4115d7ae73fa513799", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "186d8c59-e2df-4f41-b1c3-0b082ac89280", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/3.1.3.mdx", "file_name": "3.1.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.1.3.mdx", "header_path": "/[EP3.1.3] [Social] Q1/Q2 2023 Funding Request: Public Goods Working Group/"}, "hash": "1d7191a1a9a661ae1632ddfd01095cf6f39d65b4ae2466df1304ba3ae231501e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "baee10b9-4211-419b-b036-275f329aedda", "node_type": "1", "metadata": {"header_path": "/[EP3.1.3] [Social] Q1/Q2 2023 Funding Request: Public Goods Working Group/"}, "hash": "06e484f37c42c68bc5f9d3cfde13ba8a10fc95e8bac942245d487de40ec972f6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\n|                       |  USDC   | ETH | $ENS |\n| --------------------- | :-----: | :-: | :--: |\n| Public Goods Multisig | 250,000 | 50  |  -   | ## Description\n\n**Public Goods Multisig Balance**\n\nThe Public Goods Working Group is requesting 250,000 USDC, 50 ETH, and 0 $ENS.\n\nThe Public Goods Working Group currently has 146,548 USDC, 75 ETH, and 200 $ENS in its multisigs.\n\nIf this funding request is approved, the Public Goods Working Group multisigs will have a total of 396,548 USDC, 125 ETH, and 200 $ENS.\n\n|                                   | USDC        | ETH     | $ENS    |\n| --------------------------------- | ----------- | ------- | ------- |\n| Carried Forward (from Q3/Q4 2022) | 146,548     | 75      | 200     |\n| Requested (for Q1/Q2 2023)        | 250,000     | 50      | 0       |\n| **Total Balance**                 | **396,548** | **125** | **200** |\n\n**Public Goods Multisig Allocations for Q1/Q2 2023 (with funding request approved)**\n\nThe table below shows the total allocations for the Public Goods Working Group multisig, and related pods, with funds carried forward from last term (Q3/Q4 2022) along with funds requested in this proposal for this term (Q1/Q2 2023).\n\n|                   | USDC        | ETH     | $ENS    |\n| ----------------- | ----------- | ------- | ------- |\n| Small Grants      | -           | 50      | -       |\n| Gitcoin Grants    | 100,000     | -       | -       |\n| Rapid Grants      | 50,000      | 10      | -       |\n| Large Grants      | 200,000     | 50      | -       |\n| Discretionary     | 46,548      | 15      | 200     |\n| **Total Balance** | **396,548** | **125** | **200** |\n\n**Allocation of Requested Funds**\n\nThe 250,000 USDC and 50 ETH will be allocated to the following initiatives/outcomes.\n\n|                           | USDC        | ETH    | $ENS  |\n| ------------------------- | ----------- | ------ | ----- |\n| Small Grants              | -           | 40     | -     |\n| Gitcoin Grants            | 50,000      | -      | -     |\n| Rapid Grants              | 50,000      | 10     | -     |\n| Large Grants              | 150,000     | -      | -     |\n| Discretionary             | -           | -      | -     |\n| **Total Requested Funds** | **250,000** | **50** | **-** |\n\n**Description of Initiatives/Pods**\n\n| Initiative/Pod | Description                                                                                         | Multisig Signer       |\n| -------------- | --------------------------------------------------------------------------------------------------- | --------------------- |\n| Small Grants   | ETH for the top Public Goods proposals submitted to ensgrants.xyz                                   | Public Goods stewards |\n| Gitcoin Grants | Support for Open Source and Ethereum Infrastructure rounds by Gitcoin through their grants protocol | Public Goods stewards |\n| Rapid Grants   | Grants up to $10k each for web3 public goods                                                        | Public Goods stewards |\n| Large Grants   | Grants up to $100k each for web3 public goods                                                       | Public Goods stewards |\n| Discretionary  | Funds distributed at the discretion of stewards towards new initiatives + public goods experiments  | Public Goods stewards |\n\nThis proposal was prepared by Coltron.eth, lead steward of the Public Goods Working Group.", "mimetype": "text/plain", "start_char_idx": 1600, "end_char_idx": 1764, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "74d13cc1-bf70-49ff-9ebb-8e597b9cf449": {"__data__": {"id_": "74d13cc1-bf70-49ff-9ebb-8e597b9cf449", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/3.2.mdx", "file_name": "3.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.2.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/3.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["executes", "groups", "group", "april", "proposal", "passed", "working", "funding", "requests"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "23c37542bfaa676e9f5b688c6d31af6c54e176b6", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/3.2.mdx", "file_name": "3.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.2.mdx"}, "hash": "977ea50270f1abc79b14bb89a35b1c4a3b23ec5adda8351ab7afe8d414b57ffd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e7e269d1-6482-4dc9-92c1-2376bfdb9f72", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "94289b92d4176015cbba6468c9a724f053b55a8e4d55f5441537e589b18cccc2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: 'This proposal executes the funding requests for the ENS DAO Working Groups for the April 2023 funding window.'\nauthors: ['fireeyesdao']\nproposal:\n  discourse: '15905'\n  tally: '45461903078948131870051132081249892009497709518413744958551889217805827301425'\n  type: 'executable'\n--- # [EP3.2] [Executable] April 2023 Working Group Funding\n\n::authors\n\n| **Status**            | Passed                                                                                                                         |\n| --------------------- | ------------------------------------------------------------------------------------------------------------------------------ |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/16123)                                                                                   |\n| **Votes**             | [Tally](https://www.tally.xyz/gov/ens/proposal/105292919185331921858643224173178583901390266903267892669205105842869373522526) |", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 298, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "766b7f26-249a-4848-9040-a605a1dc37ed": {"__data__": {"id_": "766b7f26-249a-4848-9040-a605a1dc37ed", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/3.2.mdx", "file_name": "3.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.2.mdx", "header_path": "/[EP3.2] [Executable] April 2023 Working Group Funding/", "customer_id": 1, "source_url": "src/pages/dao/proposals/3.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["executes", "ecosystem", "motivation", "group", "abstract", "proposal", "three", "passed", "working", "funding", "links", "requests", "governance"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "23c37542bfaa676e9f5b688c6d31af6c54e176b6", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/3.2.mdx", "file_name": "3.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.2.mdx"}, "hash": "977ea50270f1abc79b14bb89a35b1c4a3b23ec5adda8351ab7afe8d414b57ffd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e7e269d1-6482-4dc9-92c1-2376bfdb9f72", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/3.2.mdx", "file_name": "3.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.2.mdx", "header_path": "/"}, "hash": "4271e9b536a9b64b86c153051d24b2709ad6e56470aba4e5657e38b1b92a647a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ede290d8-2b15-4426-ae0c-bdc484e1c4f0", "node_type": "1", "metadata": {"header_path": "/[EP3.2] [Executable] April 2023 Working Group Funding/"}, "hash": "be5455277562112252958f3bf00d26534c8b96b2f9b1265db2ad592104459477", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Abstract\n\nThis proposal executes all three Working Group funding requests for Q1/Q2 2023 as passed in EP 3.1.1, EP 3.1.2, and EP 3.1.3. For more detail, view the [ENS Governance docs](https://docs.ens.domains/v/governance/governance-proposals/term-3) or view the links below. ## Motivation\n\n[**EP 3.1.1 \u2014 ENS Ecosystem Working Group**](https://docs.ens.domains/v/governance/governance-proposals/term-3/ep3.1.1-social-q1-q2-2023-funding-request-ens-ecosystem-working-group)\n\nThe ENS Ecosystem Working Group requests funding of 935,000 USDC and 254 ETH from the ENS DAO for Q1/Q2 2023.\n\nThe ENS Ecosystem Working Group is responsible for growing and improving the ENS Ecosystem by funding people and projects that are ENS-specific or ENS-centric. In line with Article III of the ENS DAO Constitution, the requested funds will be used to support projects and builders contributing to the development and improvement of the ENS protocol and the ENS ecosystem.\n\n[**EP 3.1.2 \u2014 MetaGovernance Working Group**](https://docs.ens.domains/v/governance/governance-proposals/term-3/ep3.1.2-social-q1-q2-2023-funding-request-meta-governance-working-group)\n\nThe Meta-Governance Working Group requests funding of 364,000 USDC, 125 ETH, and 3,500 $ENS from the ENS DAO for Q1/Q2 2023.\n\nThis MetaGovernance Working Group will use this funding to support the governance processes of the ENS DAO as well as manage and build infrastructure to support the ENS DAO and Working Groups.\n\n[**EP 3.1.3 \u2014 Public Goods Working Group**](https://docs.ens.domains/v/governance/governance-proposals/term-3/ep3.1.3-social-q1-q2-2023-funding-request-public-goods-working-group)\n\nThe Public Goods Working Group requests funding of 250,000 USDC and 50 ETH from the ENS DAO for Q1/Q2 2023.\n\nThe Public Goods Working Group will be use this funding to support projects and builders as provisioned by Article III of the ENS DAO Constitution, which provides for the funding of public goods in web3.", "mimetype": "text/plain", "start_char_idx": 989, "end_char_idx": 1267, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0dcb2019-2c08-4684-8d1d-757670d27ac4": {"__data__": {"id_": "0dcb2019-2c08-4684-8d1d-757670d27ac4", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/3.2.mdx", "file_name": "3.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.2.mdx", "header_path": "/[EP3.2] [Executable] April 2023 Working Group Funding/", "customer_id": 1, "source_url": "src/pages/dao/proposals/3.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["transactions", "0xcd42b4c4d102cc22864e3a1341bb0529c17fd87d", "0x2686a8919df194aa7673244549e68d42c1685d03", "address", "argument", "transfer", "0x91c32893216de3ea0a55abb9851f581d4503d39b", "value", "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48", "function", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "23c37542bfaa676e9f5b688c6d31af6c54e176b6", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/3.2.mdx", "file_name": "3.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.2.mdx"}, "hash": "977ea50270f1abc79b14bb89a35b1c4a3b23ec5adda8351ab7afe8d414b57ffd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ede290d8-2b15-4426-ae0c-bdc484e1c4f0", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/3.2.mdx", "file_name": "3.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.2.mdx", "header_path": "/[EP3.2] [Executable] April 2023 Working Group Funding/"}, "hash": "88fa4580ab8879ecf02af1d8e5a5355df9b3d01ccbe0a0a8e7090e589c0692fe", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9a14d163-d164-4910-94fa-280bd7a41b1d", "node_type": "1", "metadata": {"header_path": "/[EP3.2] [Executable] April 2023 Working Group Funding/"}, "hash": "0d513ceaaca5eb1f5c766ac34a9f368573979e9df91b4f47255c87fa01a1950c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\n1. Transfer 935,000 USDC and 254 ETH to ens-ecosystem.pod.xyz\n2. Transfer 364,000 USDC, 125 ETH, and 3,500 $ENS to ens-metagov.pod.xyz\n3. Transfer 250,000 USDC and 50 ETH to ens-publicgoods.pod.xyz\n\n**Addresses:**\n\n- 0x2686A8919Df194aA7673244549E68D42C1685d03 - ens-ecosystem.pod.xyz\n- 0x91c32893216dE3eA0a55ABb9851f581d4503d39b - ens-metagov.pod.xyz\n- 0xcD42b4c4D102cc22864e3A1341Bb0529c17fD87d - ens-publicgoods.pod.xyz ## Transactions\n\n| Address                                    | Value   | Function | Argument | Value                   |\n| ------------------------------------------ | ------- | -------- | -------- | ----------------------- |\n| ens-ecosystem.pod.xyz                      | 254 ETH |          |          |                         |\n| ens-metagov.pod.xyz                        | 125 ETH |          |          |                         |\n| ens-publicgoods.pod.xyz                    | 50 ETH  |          |          |                         |\n| 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48 |         | transfer | to       | ens-ecosystem.pod.xyz   |\n|                                            |         |          | value    | 935000000000            |\n| 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48 |         | transfer | to       | ens-metagov.pod.xyz     |\n|                                            |         |          | value    | 364000000000            |\n| 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48 |         | transfer | to       | ens-publicgoods.pod.xyz |\n|                                            |         |          | value    | 250000000000            |\n| 0xc18360217d8f7ab5e7c516566761ea12ce7f9d72 |         | transfer | to       | ens-metagov.pod.xyz     |\n|                                            |         |          | value    | 3500000000000000000000  |", "mimetype": "text/plain", "start_char_idx": 2951, "end_char_idx": 3390, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3adc35f2-a7a8-43f3-93bb-0b2c0a4049e9": {"__data__": {"id_": "3adc35f2-a7a8-43f3-93bb-0b2c0a4049e9", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/3.3.mdx", "file_name": "3.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.3.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/3.3.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["executes", "operating", "proposal", "expenses", "enough", "passed", "ensure", "cover"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "304f867ffa1249de6f40a356e7f9a9a8aea41ed6", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/3.3.mdx", "file_name": "3.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.3.mdx"}, "hash": "46977ca33186bbc7a3404f387f850bbe81410dfe848775b06eb304dc621010bc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "587a1273-bf00-45fa-a0e7-3e675661bff3", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "8b305e5621ebe778bd286a3ec933542b5651d2557886842c1feb8c17f2064334", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: 'This proposal executes a swap of 10,000 ETH into USDC, to ensure ENS DAO has enough to cover operating expenses for 18 - 24 months.'\nauthors: ['fireeyesdao']\nproposal:\n  discourse: '15906'\n  tally: '45461903078948131870051132081249892009497709518413744958551889217805827301425'\n  type: 'executable'\n--- # [EP3.3] [Executable] Sell ETH to USDC\n\n::authors\n\n| **Status**            | Passed                                                                                                                        |\n| --------------------- | ----------------------------------------------------------------------------------------------------------------------------- |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/15906)                                                                                  |\n| **Votes**             | [Tally](https://www.tally.xyz/gov/ens/proposal/45461903078948131870051132081249892009497709518413744958551889217805827301425) |", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 320, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8cebbf2b-1946-4d5e-81ab-0be5ee3af388": {"__data__": {"id_": "8cebbf2b-1946-4d5e-81ab-0be5ee3af388", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/3.3.mdx", "file_name": "3.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.3.mdx", "header_path": "/[EP3.3] [Executable] Sell ETH to USDC/", "customer_id": 1, "source_url": "src/pages/dao/proposals/3.3.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["executes", "motivation", "keeps", "operating", "abstract", "treasury", "proposal", "expenses", "enough", "currently", "cover", "ensure", "almost", "while", "spendable"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "304f867ffa1249de6f40a356e7f9a9a8aea41ed6", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/3.3.mdx", "file_name": "3.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.3.mdx"}, "hash": "46977ca33186bbc7a3404f387f850bbe81410dfe848775b06eb304dc621010bc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "587a1273-bf00-45fa-a0e7-3e675661bff3", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/3.3.mdx", "file_name": "3.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.3.mdx", "header_path": "/"}, "hash": "77c907c510fafdb78acd66b3caa538340460654f130bd3950e87e0815cfe1745", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "862b81bc-c913-4ff8-a52a-e96255e05b3e", "node_type": "1", "metadata": {"header_path": "/[EP3.3] [Executable] Sell ETH to USDC/"}, "hash": "2e67dd2aae9836b30b8528a8b0b791232c83eef37eb92410215f17bc5c4d839c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Abstract\n\nThis proposal executes a swap of 10,000 ETH into USDC, to ensure ENS DAO has enough to cover operating expenses for 18 - 24 months. ## Motivation\n\nThe DAO currently keeps almost 100% of its spendable treasury in ETH. While ENS generates protocol revenue in ETH, having so much exposure to a single volatile asset places the DAO in a vulnerable position.\n\nThis is a proposal to convert 10,000 ETH into USDC through a Cowswap swap.\n\n10,000 ETH is approximately 25% of the total amount of ETH held by the ENS DAO (wallet.ensdao.eth) and register controller (controller.ens.eth) as of January 18, 2023.\n\nIt is hoped that this sale will generate in excess of $13m in USDC. The goal is to ensure that the DAO has enough USDC to cover operations for the next 18 - 24 months.", "mimetype": "text/plain", "start_char_idx": 991, "end_char_idx": 1135, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "186dd590-6411-4c94-92e5-81983459c4de": {"__data__": {"id_": "186dd590-6411-4c94-92e5-81983459c4de", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/3.3.mdx", "file_name": "3.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.3.mdx", "header_path": "/[EP3.3] [Executable] Sell ETH to USDC/", "customer_id": 1, "source_url": "src/pages/dao/proposals/3.3.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["check", "against", "price", "checker", "limit", "10000", "weth9", "milkman", "sending", "uniswap", "specification", "configured"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "304f867ffa1249de6f40a356e7f9a9a8aea41ed6", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/3.3.mdx", "file_name": "3.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.3.mdx"}, "hash": "46977ca33186bbc7a3404f387f850bbe81410dfe848775b06eb304dc621010bc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "862b81bc-c913-4ff8-a52a-e96255e05b3e", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/3.3.mdx", "file_name": "3.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.3.mdx", "header_path": "/[EP3.3] [Executable] Sell ETH to USDC/"}, "hash": "bae39f4681d73e0ebd24a35973edea07f29a7cce4c496b900cf71d15babf5e01", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2b6ee95a-dace-471b-8a0a-eac1b5705a56", "node_type": "1", "metadata": {"header_path": "/[EP3.3] [Executable] Sell ETH to USDC/"}, "hash": "dc1f256ced8dcfcf06df6082dcf6b99a2334e7ebcaf8b9ef649465aaf8cb532c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\n1. Call `withdraw()` on controller.ens.eth (0x283af0b28c62c092c9727f1ee09c02ca627eb7f5)\n2. Call `deposit()` on WETH9 (0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2), sending 10,000 ETH\n3. Call `approve(<milkman>, 10000 ETH)` on WETH9 (0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2)\n4. Call `requestSwapExactTokensForTokens(10000 ETH, <WETH9>, <USDC>, wallet.ensdao.eth, <uniswap v3 price checker>, <price checker data>)` on milkman (0x11C76AD590ABDFFCD980afEC9ad951B160F02797)\n\nPrice checker data is configured to check the swap against the Uniswap v3 pool and limit to 2% slippage. It is generated using the below code:\n\n```javascript\nimport { ethers } from 'https://cdn.ethers.io/lib/ethers-5.2.esm.min.js'\n\nfunction getCheckerData(slippage, path, fees) {\n  return ethers.utils.defaultAbiCoder.encode(\n    ['uint256', 'bytes'],\n    [\n      slippage,\n      ethers.utils.defaultAbiCoder.encode(\n        ['address[]', 'uint24[]'],\n        [path, fees]\n      ),\n    ]\n  )\n}\n\nconst checkerData = getCheckerData(\n  200,\n  [\n    '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',\n    '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n  ],\n  [5]\n)\nconsole.log('checkerData:', checkerData)\n```\n\n**Addresses:**\n\n- 0xfe89cc7abb2c4183683ab71653c4cdc9b02d44b7 - wallet.ensdao.eth\n- 0x283af0b28c62c092c9727f1ee09c02ca627eb7f5 - controller.ens.eth\n- 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 - WETH9\n- 0x11C76AD590ABDFFCD980afEC9ad951B160F02797 - milkman\n- 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48 - USDC\n- 0x2F965935f93718bB66d53a37a97080785657f0AC - Uniswap v3 slippage checker", "mimetype": "text/plain", "start_char_idx": 1774, "end_char_idx": 3346, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2b6ee95a-dace-471b-8a0a-eac1b5705a56": {"__data__": {"id_": "2b6ee95a-dace-471b-8a0a-eac1b5705a56", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/3.3.mdx", "file_name": "3.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.3.mdx", "header_path": "/[EP3.3] [Executable] Sell ETH to USDC/", "customer_id": 1, "source_url": "src/pages/dao/proposals/3.3.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["deposit", "transactions", "0x283af0b28c62c092c9727f1ee09c02ca627eb7f5", "10000000000000000000000", "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2", "address", "0x11c76ad590abdffcd980afec9ad951b160f02797", "10000", "argument", "withdraw", "value", "approve", "function"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "304f867ffa1249de6f40a356e7f9a9a8aea41ed6", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/3.3.mdx", "file_name": "3.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.3.mdx"}, "hash": "46977ca33186bbc7a3404f387f850bbe81410dfe848775b06eb304dc621010bc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "186dd590-6411-4c94-92e5-81983459c4de", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/3.3.mdx", "file_name": "3.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.3.mdx", "header_path": "/[EP3.3] [Executable] Sell ETH to USDC/"}, "hash": "d04ba1d602ab55f2d75a403e1cf30d05f79ecdfafcc36a19d265ec6ac89153bc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Transactions\n\n| Address                                    | Value     | Function                        | Argument         | Value|\n| ------------------------------------------ | --------- | ------------------------------- | ---------------- ||\n| 0x283Af0B28c62C092C9727F1Ee09c02CA627EB7F5 | -         | withdraw                        |                  ||\n| 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 | 10000 ETH | deposit                         |                  ||\n| 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 | -         | approve                         | guy              | 0x11C76AD590ABDFFCD980afEC9ad|\n|                                            |           |                                 | wad              ||\n| 0x11C76AD590ABDFFCD980afEC9ad951B160F02797 | -         | requestSwapExactTokensForTokens | amountIn         ||\n|                                            |           |                                 | fromToken        | 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc|\n|                                            |           |                                 | toToken          | 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606e|\n|                                            |           |                                 | to               | 0xfe89cc7abb2c4183683ab71653c4cdc9b02d44b|\n|                                            |           |                                 | priceChecker     | 0x2F965935f93718bB66d53a37a97080785657f|\n|                                            |           |                                 | priceCheckerData | 0x00000000000000000000000000000000000000000000000000000000000000c8000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000002000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4800000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000005 |", "mimetype": "text/plain", "start_char_idx": 3348, "end_char_idx": 12448, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1ea9b6ee-e4d4-4184-9c3b-4b57b7b3fb7e": {"__data__": {"id_": "1ea9b6ee-e4d4-4184-9c3b-4b57b7b3fb7e", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/3.4.mdx", "file_name": "3.4.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.4.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/3.4.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["first", "passed", "tranche", "endowment"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "bb8d14ca7d972482b63a1e9f8527eb29a0d0db3e", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/3.4.mdx", "file_name": "3.4.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.4.mdx"}, "hash": "6db53014f316d2871acad8ef67fa940104e10afc4200e3d8196cbc4effe6d415", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "50ca018f-c6eb-4252-a10d-08b73d15a1b3", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "63160de7d5e5637313cecac3eb77c8078a462a54d15820d90107b5d413345424", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: 'The first tranche of the Endowment'\nauthors: ['karpatkey']\nproposal:\n  discourse: '15952'\n  tally: '90786656233306599444783442367171420493182391933134906270328139870999449830964'\n  type: 'executable'\n--- # [EP 3.4] [Executable] Fund the Endowment (first tranche)\n\n::authors\n\n| **Status**            | Passed                                                                                                                        |\n| --------------------- | ----------------------------------------------------------------------------------------------------------------------------- |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/15952)                                                                                  |\n| **Votes**             | [Tally](https://www.tally.xyz/gov/ens/proposal/90786656233306599444783442367171420493182391933134906270328139870999449830964) |", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 221, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f0654a41-18d2-42de-8b7d-9016a81adf7d": {"__data__": {"id_": "f0654a41-18d2-42de-8b7d-9016a81adf7d", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/3.4.mdx", "file_name": "3.4.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.4.mdx", "header_path": "/[EP 3.4] [Executable] Fund the Endowment (first tranche)/", "customer_id": 1, "source_url": "src/pages/dao/proposals/3.4.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["additional", "tranche", "monthly", "endowment", "motivation", "abstract", "initiated", "steakhouse", "first", "public", "account", "sustainability", "ensure", "karpatkey", "process"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "bb8d14ca7d972482b63a1e9f8527eb29a0d0db3e", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/3.4.mdx", "file_name": "3.4.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.4.mdx"}, "hash": "6db53014f316d2871acad8ef67fa940104e10afc4200e3d8196cbc4effe6d415", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "50ca018f-c6eb-4252-a10d-08b73d15a1b3", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/3.4.mdx", "file_name": "3.4.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.4.mdx", "header_path": "/"}, "hash": "00fd61c927e3ac054a5e67d7bc7b336d7538dd86fa82738d9d1ce59c4d301d2a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b44b7514-350a-412a-8645-029c54fb0ac1", "node_type": "1", "metadata": {"header_path": "/[EP 3.4] [Executable] Fund the Endowment (first tranche)/"}, "hash": "9492ffcb2fffc6eab26128c3269c89b8a1d9669d4b5427ec5e385be382a200bd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Abstract\n\nFirst tranche to fund the Endowment with 16,000 ETH sent from [ENS DAO](https://etherscan.io/address/0xfe89cc7abb2c4183683ab71653c4cdc9b02d44b7) to the [ENS Endowment](https://etherscan.io/address/0x4F2083f5fBede34C2714aFfb3105539775f7FE64) and an additional 150 ETH sent to the [Meta-Gov Pod](https://etherscan.io/address/0x91c32893216dE3eA0a55ABb9851f581d4503d39b) to account for karpatkey and Steakhouse monthly fees. ## Motivation\n\n[Approximately one year ago](https://discuss.ens.domains/t/an-ens-endaoment/11756), the ENS DAO initiated a process to ensure the sustainability of ENS as a self-funded public good for the long term. The [RFP process](https://discuss.ens.domains/t/ep2-2-4-social-rfp-ens-endowment/14069) (EP2.2.4), on which [karpatkey, together with Steakhouse, made a proposal](https://discuss.ens.domains/t/updated-endaoment-proposal-karpatkey-steakhouse-financial/14799), resulted in the [selection of karpatkey](https://discuss.ens.domains/t/social-ep2-2-5-selection-of-an-ens-endowment-fund-manager/15188) (EP2.2.5).\n\nFor reference, the proposal submitted by karpatkey was for an initial size of \\$52,000,000 USD (converted to 32,000 ETH for operational purposes as the Endowment will be founded in ETH and to account for the reduction of the pool according to [EP3.3](https://discuss.ens.domains/t/ep3-3-executable-sell-eth-into-usdc/15906)). The proposal included performance fees of 10% above the investment's reference currency, with $ for $-related investments and ETH for ETH-related investments, as well as an annual fee of 0.5% based on the size of the endowment, payable entirely in ETH on a monthly basis.\n\nKarpatkey engaged in discussions with the ENS community to seek feedback on strategies and the ramp-up process, both [here](https://discuss.ens.domains/t/social-endowment-initial-conditions-required-steps/15684) and [here](https://discuss.ens.domains/t/endowment-initiation/15952). Feedback was received regarding concerns about the required time to establish trust and the need to limit executive votes for funding. Karpatkey believes that a balanced approach, such as funding 50% on day one and the remaining 50% after six months, would be a suitable tradeoff for all parties. To address questions and concerns raised, a [FAQ](https://discuss.ens.domains/t/endowment-frequently-asked-questions-faq/16228) was provided.\n\nIn the meantime, karpatkey made progress on the setup of [the Endowment safe](https://etherscan.io/address/0x4F2083f5fBede34C2714aFfb3105539775f7FE64), which has been seeded to display target positions. The necessary [managing permissions](https://docs.google.com/document/d/11xrliJIveXO6C6twYOrnGJ5QUW0Apr1LCcDY8hOfpuo/edit) have been defined and audits from [Ackee](https://github.com/gnosis/zodiac-modifier-roles/blob/main/packages/evm/docs/ZodiacModifierRolesJanuary2023abch.pdf) and [Sub 7](https://github.com/gnosis/zodiac-modifier-roles/blob/main/packages/evm/docs/ZodiacModifierRolesJanuary2023sub7.pdf) have been completed. On its part, Steakhouse has started work on providing open source [accounting and financial services](https://docs.google.com/document/d/1xS4nXx1G0QCjFS-VdG5yVmVoMa5t1q9_dFZ9N4wGSJ8/edit?usp=sharing), as well as a [monitoring Dune dashboard](https://dune.com/steakhouse/ens-steakhouse), both of which are work in progress.\n\nIf the Endowment is funded through this first tranche, karpatkey will allocate the funds as follows:\n\n| #   | Protocol              | Assets                           | Strategy      | Share per Strat | Allocated Funds | Share of Portfolio | Proj. APR | Proj. Rev      | Pool TVL <br />(MM) |\n| --- | --------------------- | -------------------------------- | ------------- | --------------- | --------------- | ------------------ | --------- | -------------- | ------------------- |\n| 1   | Compound v2           | DAI                              | USD - neutral | 50%             | $5,506,971      | 20.61%             | 2.21%     | $121,704       | $560                |\n| 2   | Compound v2           | USDC                             | USD - neutral | 50%             | $5,506,971      | 20.61%             | 2.16%     | $118,951       | $637                |\n| 3   | Aura Finance          | wstETH - WETH                    | ETH - neutral | 40%             | $6,282,423      | 23.51%             | 10.38%    | $652,116       | $208                |\n| 4   | Curve                 | stETH - ETH                      | ETH - neutral | 40%             | $6,282,423      | 23.51%             | 5.38%     | $337,994       | $1,653              |\n| 5   | Stakewise/ Uniswap v3 | sETH2 - ETH Range: 1.000 - 1.006 | ETH - neutral | 20%             | $3,141,212      | 11.76%             | 12.77%    | $401,133       | $65                 |\n|     | **Total**             |                                  |               |                 | **$26,720,000** | **100.00%**        | **6.11%** | **$1,631,897** |                     |", "mimetype": "text/plain", "start_char_idx": 911, "end_char_idx": 1344, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e2925c83-df31-4dfb-9533-4b4107d465c8": {"__data__": {"id_": "e2925c83-df31-4dfb-9533-4b4107d465c8", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/3.4.mdx", "file_name": "3.4.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.4.mdx", "header_path": "/[EP 3.4] [Executable] Fund the Endowment (first tranche)/", "customer_id": 1, "source_url": "src/pages/dao/proposals/3.4.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["transactions", "endowment", "address", "argument", "0xfe89cc7abb2c4183683ab71653c4cdc9b02d44b7", "transfer", "0x91c32893216de3ea0a55abb9851f581d4503d39b", "0x4f2083f5fbede34c2714affb3105539775f7fe64", "value", "cover", "function", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "bb8d14ca7d972482b63a1e9f8527eb29a0d0db3e", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/3.4.mdx", "file_name": "3.4.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.4.mdx"}, "hash": "6db53014f316d2871acad8ef67fa940104e10afc4200e3d8196cbc4effe6d415", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b44b7514-350a-412a-8645-029c54fb0ac1", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/3.4.mdx", "file_name": "3.4.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.4.mdx", "header_path": "/[EP 3.4] [Executable] Fund the Endowment (first tranche)/"}, "hash": "a1e7775f4b76d3422b4b137d3ba3f0653b4de14da94940ba0297a40b34845318", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3df6c782-fb1e-4f10-887a-3a1957687524", "node_type": "1", "metadata": {"header_path": "/[EP 3.4] [Executable] Fund the Endowment (first tranche)/"}, "hash": "cf78969b205396cb0b607540bfded981be146ca7ed6acc71e5f362b6f839eb43", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\n1.  Transfer 16,000 ETH to the Endowment (0x4F2083f5fBede34C2714aFfb3105539775f7FE64)\n2.  Transfer 150 ETH to ens-metagov.pod.xyz (0x91c32893216dE3eA0a55ABb9851f581d4503d39b) to cover Endowment fees for Q1/Q2\n\nAddresses:\n\n- 0xFe89cc7aBB2C4183683ab71653C4cdc9B02D44b7 - ENS DAO\n- 0x4F2083f5fBede34C2714aFfb3105539775f7FE64 - endowment\n- 0x91c32893216dE3eA0a55ABb9851f581d4503d39b - ens-metagov.pod.xyz ## Transactions\n\n| Address                                    | Value      | Function | Argument | Value |\n| ------------------------------------------ | ---------- | -------- | -------- | ----- |\n| 0x4F2083f5fBede34C2714aFfb3105539775f7FE64 | 16,000 ETH |\n| 0x91c32893216dE3eA0a55ABb9851f581d4503d39b | 150 ETH    |", "mimetype": "text/plain", "start_char_idx": 5877, "end_char_idx": 6295, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "60620605-c1b8-4291-94c0-485bdffe6896": {"__data__": {"id_": "60620605-c1b8-4291-94c0-485bdffe6896", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/3.5.mdx", "file_name": "3.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.5.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/3.5.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["controller", "registrar", "proposal", "reverse", "passed", "activate"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d54ac6e65decfc0410125b743da363a4119fda93", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/3.5.mdx", "file_name": "3.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.5.mdx"}, "hash": "5f1a8280761896bb849085e59d8f79a3bb20333f4026671c301a6f478e3dd79a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f350687f-3a4a-4cab-878c-3970d04b7e06", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "b4209a3a78d49d760f958a41d86ecaaabfecca3b6bd4c23f3637ad2ae5075d0c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: 'This proposal will activate the new .eth controller and reverse registrar'\nauthors: ['jefflau', 'arachnid']\nproposal:\n  discourse: '16776'\n  tally: '42973781582803845389836855775840822719678533376883030929209752909248937768242'\n  type: 'executable'\n--- # [EP3.5] [Executable] Activate new .eth Controller and Reverse Registrar\n\n::authors\n\n| **Status**            | Passed                                                                                                                        |\n| --------------------- | ----------------------------------------------------------------------------------------------------------------------------- |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/16776)                                                                                  |\n| **Votes**             | [Tally](https://www.tally.xyz/gov/ens/proposal/42973781582803845389836855775840822719678533376883030929209752909248937768242) |", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 270, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9518cde5-046c-4004-a4e9-b9f8f33e857b": {"__data__": {"id_": "9518cde5-046c-4004-a4e9-b9f8f33e857b", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/3.5.mdx", "file_name": "3.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.5.mdx", "header_path": "/[EP3.5] [Executable] Activate new .eth Controller and Reverse Registrar/", "customer_id": 1, "source_url": "src/pages/dao/proposals/3.5.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["controller", "allows", "multiple", "reduce", "directly", "transactions", "abstract", "registering", "reverse", "record", "wrapped", "records", "adding", "names"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d54ac6e65decfc0410125b743da363a4119fda93", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/3.5.mdx", "file_name": "3.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.5.mdx"}, "hash": "5f1a8280761896bb849085e59d8f79a3bb20333f4026671c301a6f478e3dd79a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f350687f-3a4a-4cab-878c-3970d04b7e06", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/3.5.mdx", "file_name": "3.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.5.mdx", "header_path": "/"}, "hash": "4557417e4bc71595ed6102728397cdea6620ca38b93e4356c37ed06db9ae662f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "49a9c96f-49ed-4795-aa65-56c1002f592b", "node_type": "1", "metadata": {"header_path": "/[EP3.5] [Executable] Activate new .eth Controller and Reverse Registrar/"}, "hash": "f284fbc9d447f3ababcd0db9504e7bfd95ce58523af67645dae2879d8b3c1ba9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Abstract\n\nWith the new Name Wrapper, we will add a new .eth controller that allows registering wrapped names directly as well as registering with multiple records and adding a reverse record in 1 transaction. This will reduce the transactions required from 4 to 2 (for adding records + reverse). This will be added as a controller to the NameWrapper, and the NameWrapper will be added as the new controller of the existing .eth Base Registrar.\n\nWe will also replace the current reverse registrar with a new reverse registrar which allows the new controller to set the reverse on registration, as well as adds support for the owner of contract to retrospectively claim their reverse node.", "mimetype": "text/plain", "start_char_idx": 975, "end_char_idx": 1665, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "49a9c96f-49ed-4795-aa65-56c1002f592b": {"__data__": {"id_": "49a9c96f-49ed-4795-aa65-56c1002f592b", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/3.5.mdx", "file_name": "3.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.5.mdx", "header_path": "/[EP3.5] [Executable] Activate new .eth Controller and Reverse Registrar/", "customer_id": 1, "source_url": "src/pages/dao/proposals/3.5.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["deployed", "controller", "mainnet", "registrar", "ownership", "instances", "transferred", "reverse", "these", "public", "default", "resolver", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d54ac6e65decfc0410125b743da363a4119fda93", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/3.5.mdx", "file_name": "3.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.5.mdx"}, "hash": "5f1a8280761896bb849085e59d8f79a3bb20333f4026671c301a6f478e3dd79a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9518cde5-046c-4004-a4e9-b9f8f33e857b", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/3.5.mdx", "file_name": "3.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.5.mdx", "header_path": "/[EP3.5] [Executable] Activate new .eth Controller and Reverse Registrar/"}, "hash": "0f586343b439b30969dc0350257c7d32f99402a55538316a3bd53b4dd0ffc5c8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c4e7d3b3-8e9c-4e27-a713-213b9df031d0", "node_type": "1", "metadata": {"header_path": "/[EP3.5] [Executable] Activate new .eth Controller and Reverse Registrar/"}, "hash": "aa9b6ced5f546a530b613f1e6fc5845fc0125e37924500741541ec3d8fb0423b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\nNew instances of the Name Wrapper, Reverse Registrar, and .eth registrar controller have been deployed to mainnet at these addresses:\n\n- NameWrapper: `0xD4416b13d2b3a9aBae7AcD5D6C2BbDBE25686401`\n- ReverseRegistrar: `0xa58E81fe9b61B5c3fE2AFD33CF304c454AbFc7Cb`\n- ETHRegistrarController: `0x253553366Da8546fC250F225fe3d25d0C782303b`\n- PublicResolver: `0x231b0Ee14048e9dCcD1d247744d114a4EB5E8E63`\n\nThey have been configured, and ownership has been transferred to the DAO.The new Public Resolver is set as the default resolver on the reverse registrar.\n\nThis executable proposal will execute the following calls to complete the contract upgrades:\n\n1. Call `registrar.addController(newNameWrapperAddress)`\n2. Call `ens.setSubnodeOwner(namehash('reverse'), labelhash('addr'), newReverseRegistrarAddress)`\n3. Call `setInterface` on the resolver for .eth with the interface IDs and contract addresses of the new .eth registrar controller and namewrapper. This is used as part of the discovery mechanism by the ENS manager app and others in order to locate the new contracts.", "mimetype": "text/plain", "start_char_idx": 1667, "end_char_idx": 2751, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c4e7d3b3-8e9c-4e27-a713-213b9df031d0": {"__data__": {"id_": "c4e7d3b3-8e9c-4e27-a713-213b9df031d0", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/3.5.mdx", "file_name": "3.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.5.mdx", "header_path": "/[EP3.5] [Executable] Activate new .eth Controller and Reverse Registrar/", "customer_id": 1, "source_url": "src/pages/dao/proposals/3.5.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["0x00000000000c2e074ec69a0dfb2997ba6c7d2e1e", "transactions", "controller", "labelhash", "addcontroller", "0xd4416b13d2b3a9abae7acd5d6c2bbdbe25686401", "address", "0x57f1887a8bf19b14fc0df6fd9b2acc9af147ea85", "value", "argument", "setsubnodeowner", "0xe5e14487b78f85faa6e1808e89246cf57dd34831548ff2e6097380d98db2504a", "0xa097f6721ce401e757d1223a763fef49b8b5f90bb18567ddb86fd205dff71d34", "function"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d54ac6e65decfc0410125b743da363a4119fda93", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/3.5.mdx", "file_name": "3.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.5.mdx"}, "hash": "5f1a8280761896bb849085e59d8f79a3bb20333f4026671c301a6f478e3dd79a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "49a9c96f-49ed-4795-aa65-56c1002f592b", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/3.5.mdx", "file_name": "3.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.5.mdx", "header_path": "/[EP3.5] [Executable] Activate new .eth Controller and Reverse Registrar/"}, "hash": "eb2d453cf7944e850293ddf19016358ae5b7dccf7f2aed3c08c037ee2b126607", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Transactions\n\n| Address                                    | Value | Function        | Argument    | Value                                                              |\n| ------------------------------------------ | ----- | --------------- | ----------- | ------------------------------------------------------------------ |\n| 0x57f1887a8BF19b14fC0dF6Fd9B2acc9Af147eA85 |       | addController   | controller  | 0xD4416b13d2b3a9aBae7AcD5D6C2BbDBE25686401                         |\n| 0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e |       | setSubnodeOwner | node        | 0xa097f6721ce401e757d1223a763fef49b8b5f90bb18567ddb86fd205dff71d34 |\n|                                            |       |                 | labelhash   | 0xe5e14487b78f85faa6e1808e89246cf57dd34831548ff2e6097380d98db2504a |\n|                                            |       |                 | owner       | 0xa58E81fe9b61B5c3fE2AFD33CF304c454AbFc7Cb                         |\n| 0x30200e0cb040f38e474e53ef437c95a1be723b2b |       | setInterface    | node        | 0x93cdeb708b7545dc668eb9280176169d1c33cfd8ed6f04690a0bcc88a93fc4ae |\n|                                            |       |                 | interfaceId | 0x019a38fe                                                         |\n|                                            |       |                 | implementer | 0xD4416b13d2b3a9aBae7AcD5D6C2BbDBE25686401                         |\n| 0x30200e0cb040f38e474e53ef437c95a1be723b2b |       | setInterface    | node        | 0x93cdeb708b7545dc668eb9280176169d1c33cfd8ed6f04690a0bcc88a93fc4ae |\n|                                            |       |                 | interfaceId | 0x612e8c09                                                         |\n|                                            |       |                 | implementer | 0x253553366Da8546fC250F225fe3d25d0C782303b                         |", "mimetype": "text/plain", "start_char_idx": 2753, "end_char_idx": 4641, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9614435f-ed4b-4ab5-89c7-ec1a5551a5cd": {"__data__": {"id_": "9614435f-ed4b-4ab5-89c7-ec1a5551a5cd", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/3.6.mdx", "file_name": "3.6.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.6.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/3.6.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["foundation", "passed", "director", "election"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "cf1b14de40f8829d833bc7e51aab7f5e1efb4193", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/3.6.mdx", "file_name": "3.6.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.6.mdx"}, "hash": "92794259b69cf1e0c52f89ecdb2b7a05b11017ce340f8fbeb112e2ad625d37e3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cb886b2f-dc52-4177-a454-60985c786603", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "afbd9dceb5422c7981e06cf52d558c1701afe28d5fbbe40f574045c39d310852", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: 'Elect a new ENS Foundation director'\nauthors: ['gov.alisha.eth']\nproposal:\n  discourse: '17008'\n  snapshot: '0x3c6b192eb2e990d74125d82ef886a1ec9e7373f4f768ed5b4adc23a03c26d649'\n  type: 'social'\n--- # [EP3.6] [Social] Election of new ENS Foundation director\n\n::authors\n\n| **Status**            | Passed (elected: Alex Van de Sande)                                                                                      |\n| --------------------- | ------------------------------------------------------------------------------------------------------------------------ |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/17008)                                                                             |\n| **Votes**             | [Snapshot](https://snapshot.box/#/s:ens.eth/proposal/0x3c6b192eb2e990d74125d82ef886a1ec9e7373f4f768ed5b4adc23a03c26d649) |", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 215, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3306ae43-3588-4f62-9cdd-f1ad1982329d": {"__data__": {"id_": "3306ae43-3588-4f62-9cdd-f1ad1982329d", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/3.6.mdx", "file_name": "3.6.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.6.mdx", "header_path": "/[EP3.6] [Social] Election of new ENS Foundation director/", "customer_id": 1, "source_url": "src/pages/dao/proposals/3.6.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["motivation", "abstract", "would", "brantly", "resignation", "resign", "director", "appointment", "following", "elect", "millegan", "effect", "appoint"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "cf1b14de40f8829d833bc7e51aab7f5e1efb4193", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/3.6.mdx", "file_name": "3.6.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.6.mdx"}, "hash": "92794259b69cf1e0c52f89ecdb2b7a05b11017ce340f8fbeb112e2ad625d37e3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cb886b2f-dc52-4177-a454-60985c786603", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/3.6.mdx", "file_name": "3.6.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.6.mdx", "header_path": "/"}, "hash": "ab95db19c87e92658f3d61a27b1feab3ee82a9015966fd7edb013b0ac3d7e9e3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c15ac6b7-e794-47b5-ac11-2c6a9f75e0f0", "node_type": "1", "metadata": {"header_path": "/[EP3.6] [Social] Election of new ENS Foundation director/"}, "hash": "69b45d80241a3095fb7f0cac15a25a1f1b0583841967c6e309c6c5dc4d5f86a1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Abstract\n\nThis is a vote to elect a new director of the ENS Foundation. ## Motivation\n\nBrantly Millegan has [communicated](https://discuss.ens.domains/t/resignation-from-the-ens-foundation-effective-upon-the-election-of-a-replacement/16676) that he would like to resign as a director of the ENS Foundation. Brantly's resignation will take effect following the appointment of a new director by the DAO.\n\nThe DAO may appoint a new director of the ENS Foundation pursuant to Article 15 of the Articles of Association of the ENS Foundation.", "mimetype": "text/plain", "start_char_idx": 885, "end_char_idx": 959, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e16f19f7-c41a-49cc-9a57-d01583078fcd": {"__data__": {"id_": "e16f19f7-c41a-49cc-9a57-d01583078fcd", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/3.6.mdx", "file_name": "3.6.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.6.mdx", "header_path": "/[EP3.6] [Social] Election of new ENS Foundation director/", "customer_id": 1, "source_url": "src/pages/dao/proposals/3.6.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["completing", "seeking", "after", "appoint", "election", "requirements", "successfully", "outlined", "director", "candidates", "specification", "governance"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "cf1b14de40f8829d833bc7e51aab7f5e1efb4193", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/3.6.mdx", "file_name": "3.6.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.6.mdx"}, "hash": "92794259b69cf1e0c52f89ecdb2b7a05b11017ce340f8fbeb112e2ad625d37e3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c15ac6b7-e794-47b5-ac11-2c6a9f75e0f0", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/3.6.mdx", "file_name": "3.6.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.6.mdx", "header_path": "/[EP3.6] [Social] Election of new ENS Foundation director/"}, "hash": "8df863faf9a590984ee28a37a3f32c925fa9fcf26b8874cbdfde5f0fb8fecfd3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d292176d-5ae5-4fd7-807b-677955dd90f2", "node_type": "1", "metadata": {"header_path": "/[EP3.6] [Social] Election of new ENS Foundation director/Specification/"}, "hash": "313876fab7fe37c128f869f4e0a6a833b8d149585bf9edd031e4288089d0d9d0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\nThe DAO will vote to appoint one new director of the ENS Foundation.\n\nTwo candidates are seeking election after successfully completing the requirements outlined in the ['Call for Nominees' post](https://discuss.ens.domains/t/call-for-nominees-ens-foundation-director/16858) on the ENS Governance forum.\n\nThe candidates seeking election are:\n\n1. Sean Murray\n2. Alex Van de Sande\n\nThe candidate with the highest number of votes above quorum will be appointed as a director of the ENS Foundation following the completion of mandatory KYC checks.", "mimetype": "text/plain", "start_char_idx": 1427, "end_char_idx": 1988, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d292176d-5ae5-4fd7-807b-677955dd90f2": {"__data__": {"id_": "d292176d-5ae5-4fd7-807b-677955dd90f2", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/3.6.mdx", "file_name": "3.6.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.6.mdx", "header_path": "/[EP3.6] [Social] Election of new ENS Foundation director/Specification/", "customer_id": 1, "source_url": "src/pages/dao/proposals/3.6.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["favor", "single", "voting", "above", "named", "appointing", "choice", "following", "abstain", "murray", "director", "sande", "candidate"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "cf1b14de40f8829d833bc7e51aab7f5e1efb4193", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/3.6.mdx", "file_name": "3.6.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.6.mdx"}, "hash": "92794259b69cf1e0c52f89ecdb2b7a05b11017ce340f8fbeb112e2ad625d37e3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e16f19f7-c41a-49cc-9a57-d01583078fcd", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/3.6.mdx", "file_name": "3.6.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.6.mdx", "header_path": "/[EP3.6] [Social] Election of new ENS Foundation director/"}, "hash": "1b68ef8935505116d983c37cfae78283c3708b0d58f23268b2923925bd820e9d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c614aa7c-0aa7-48f6-8c61-8b1218f0163a", "node_type": "1", "metadata": {"header_path": "/[EP3.6] [Social] Election of new ENS Foundation director/"}, "hash": "3e9546997f4e1bed6f01134e33753c3d0e7fa765a8ef6cf301051cbbe7f84e28", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Voting\n\nThis vote is a single choice vote. You may vote for one of the following options:\n\n1. Sean Murray\n2. Alex Van de Sande\n3. None of the above\n4. Abstain\n\nBy voting for a named candidate, you are voting in favor of appointing that candidate as a director of the ENS Foundation. ## Candidates ### Sean Murray\n\n**Twitter**: [@financeguy74](https://twitter.com/financeguy74) \\\n**Are you 18 years of age or older?** Yes \\\n**Are you a U.S citizen or permanent resident?** Yes \\\n**Do you live in the U.S or one of its territories?** Yes\n\n**Why should you be appointed as a director of the ENS Foundation?** \\\nI am capable of fulfilling the required duties but also beyond that I would use it as a platform to increase mainstream ENS adoption.\n\n**How would you handle a request from the SEC for information about the ENS Foundation and/or the $ENS token?** \\\nThis is an incomplete question because it does not specify who \"you\" is. If an SEC inquiry is addressed only to the Foundation itself, the correct answer is that the Foundation retain counsel and that counsel manage the inquiry. Should the definition of \"you\" be more broad, then any rational person should find my conditions stated below rational, reasonable, and necessary. They should be put in place regardless of who is chosen.\n\n**Is there any other information you would like delegates to know about you or your nomination?** \\\nYes, if by chance I am selected, my acceptance of the role is conditional on:\n\n- The DAO authorizing the Foundation to set up D\\&O insurance;\n- The DAO authorizing the Foundation to compensate directors.", "mimetype": "text/plain", "start_char_idx": 1990, "end_char_idx": 2276, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c6ed1008-b93b-42ec-a812-90e6afc480d1": {"__data__": {"id_": "c6ed1008-b93b-42ec-a812-90e6afc480d1", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/3.6.mdx", "file_name": "3.6.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.6.mdx", "header_path": "/[EP3.6] [Social] Election of new ENS Foundation director/Candidates/", "customer_id": 1, "source_url": "src/pages/dao/proposals/3.6.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["purely", "appointed", "directors", "permanent", "everything", "working", "ceremonial", "citizen", "years", "director", "sande", "believe", "should"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "cf1b14de40f8829d833bc7e51aab7f5e1efb4193", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/3.6.mdx", "file_name": "3.6.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.6.mdx"}, "hash": "92794259b69cf1e0c52f89ecdb2b7a05b11017ce340f8fbeb112e2ad625d37e3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6da7c9ed-5ddf-4705-9ff6-09b34a34159a", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/3.6.mdx", "file_name": "3.6.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.6.mdx", "header_path": "/[EP3.6] [Social] Election of new ENS Foundation director/Candidates/"}, "hash": "127dcc32c8271c6fa6f490f593707cf2fac5f2632f670f5b6cf840316451343b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Alex Van de Sande\n\n**Twitter**: [@avsa](https://twitter.com/avsa) \\\n**Are you 18 years of age or older?** Yes \\\n**Are you a U.S citizen or permanent resident?** No \\\n**Do you live in the U.S or one of its territories?** No\n\n**Why should you be appointed as a director of the ENS Foundation?** \\\nI won't lie: I believe this role is purely ceremonial and believe that as long as everything is working as intended, Directors should do nothing but rubberstamp what the DAO approves. But as a symbol, I do think it's important for the Directors not to be all from ENS Labs, nor for them to be in any jurisdiction that is not welcome to Crypto - and at this moment, the US is such jurisdiction.\n\nSo that's it, that's the whole of my pitch: I do not work for ENS labs, I do not respond to them, nor do I am subject to US jurisdiction. I also have been in this space for the last 10 years and you can expect me to be around in the next 10 years.\n\n**How would you handle a request from the SEC for information about the ENS Foundation and/or the $ENS token?** \\\nI am not not subject to American laws, but that doesn't mean I intend to break any of them, as I still intend to keep the privilege of landing in US soil. I still believe the US to be a reasonable thriving democracy that is just right now a bit on the wrong side of the pendulum. I also believe that the ENS airdrop was a great precedent on how to do token distribution to the community: no \"investor\" ever received it in the airdrop, because there were no investors in ENS before the airdrop. All that received them were either involved in the community or the development.\n\nIf I ever received a request from the SEC of any other legal institutions from anywhere I would take the reasonable route: talk to my lawyer, open it with as much as possible with the community and, in an extreme case in which I believed I the requests would hurt ENS and I couldn't be open to talk about it, I would resign from the foundation.\n\n**Is there any other information you would like delegates to know about you or your nomination?** \\\nI am not Dutch either, despite a lot of people seemingly believing it so.", "mimetype": "text/plain", "start_char_idx": 3592, "end_char_idx": 5744, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "032aef20-e8db-4205-a970-42e9e3d27be0": {"__data__": {"id_": "032aef20-e8db-4205-a970-42e9e3d27be0", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/3.7.mdx", "file_name": "3.7.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.7.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/3.7.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["normalization", "passed", "standard", "approval"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4f45f5028d85a55b262e6a28ca64f3c37c6f6659", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/3.7.mdx", "file_name": "3.7.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.7.mdx"}, "hash": "0fc5bf8997c1afc8b66729e85cb21266f6be2dadd9dc4c98a6038b9be4446307", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "95374153-690f-4596-a2c6-b326f7a13bfe", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "a5a5d7dcb5753b32bb3ae15ad861953cddae56404241ad8cae973756a96ca72d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: 'ENS Normalization Standard'\nauthors: ['raffy.eth']\nproposal:\n  discourse: '16957'\n  snapshot: '0xed7bbde7c1136cbb5b9090a0abd48438c97a020b9e8a1e8f6257a46d068aa2e0'\n  type: 'social'\n--- # [EP3.7] [Social] Approval of ENS Name Normalization Standard (ENSIP-15)\n\n::authors\n\n| **Status**            | Passed                                                                                                                   |\n| --------------------- | ------------------------------------------------------------------------------------------------------------------------ |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/16957)                                                                             |\n| **Votes**             | [Snapshot](https://snapshot.box/#/s:ens.eth/proposal/0xed7bbde7c1136cbb5b9090a0abd48438c97a020b9e8a1e8f6257a46d068aa2e0) |", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 201, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "85937d28-4c47-4bb2-bbc3-0a3bee6126ba": {"__data__": {"id_": "85937d28-4c47-4bb2-bbc3-0a3bee6126ba", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/3.7.mdx", "file_name": "3.7.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.7.mdx", "header_path": "/[EP3.7] [Social] Approval of ENS Name Normalization Standard (ENSIP-15)/", "customer_id": 1, "source_url": "src/pages/dao/proposals/3.7.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["normalization", "approval", "social", "motivation", "abstract", "since", "confirmed", "enforced", "EIP-137", "there", "approve", "through", "should"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4f45f5028d85a55b262e6a28ca64f3c37c6f6659", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/3.7.mdx", "file_name": "3.7.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.7.mdx"}, "hash": "0fc5bf8997c1afc8b66729e85cb21266f6be2dadd9dc4c98a6038b9be4446307", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "95374153-690f-4596-a2c6-b326f7a13bfe", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/3.7.mdx", "file_name": "3.7.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.7.mdx", "header_path": "/"}, "hash": "45501bc42071e3b27fedf347a5dd3e362ec920006112695fe7de1d01ab8b957b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1298b1d1-4e9b-40c9-bc42-983fc15d7302", "node_type": "1", "metadata": {"header_path": "/[EP3.7] [Social] Approval of ENS Name Normalization Standard (ENSIP-15)/"}, "hash": "af2e62a23f4ce13fb72eebf2f8e5746991705f0dcbebb683a1f3c33e638a0169", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Abstract\n\nThis is a vote to approve [ENSIP-15: Normalization Standard.](https://docs.ens.domains/ens-improvement-proposals/ensip-15-normalization-standard) ## Motivation ### EP3.7 Motivation\n\n- Normalization isn't enforced on-chain.\n- There is no code for the DAO to execute.\n- Approval for ENSIP-15 should be confirmed through a social vote. ### ENSIP-15 Motivation\n\n- Since [ENSIP-1](https://github.com/ensdomains/governance-docs/blob/8e2e6c98198dd31fd2e982987e286fd6ce540319/governance-proposals/ensip-1-ens.md) (originally [EIP-137](https://eips.ethereum.org/EIPS/eip-137)) was finalized in 2016, Unicode has [evolved](https://unicode.org/history/publicationdates.html) from version 8.0.0 to 15.0.0 and incorporated many new characters, including complex emoji sequences.\n- ENSIP-1 does not state the version of Unicode.\n- ENSIP-1 implies but does not state an explicit flavor of IDNA processing.\n- [UTS-46](https://unicode.org/reports/tr46/) is insufficient to normalize emoji sequences. Correct emoji processing is only possible with [UTS-51](https://www.unicode.org/reports/tr51/).\n- Validation tests are needed to ensure implementation compliance.\n- The success of ENS has encouraged spoofing via the following techniques:\n  1. Insertion of zero-width characters.\n  2. Using names which normalize differently between algorithms.\n  3. Using names which appear differently between applications and devices.\n  4. Substitution of confusable (look-alike) characters.\n  5. Mixing incompatible scripts.", "mimetype": "text/plain", "start_char_idx": 886, "end_char_idx": 1044, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cb7e5dfe-e6c7-4607-81f7-b2f2a8366868": {"__data__": {"id_": "cb7e5dfe-e6c7-4607-81f7-b2f2a8366868", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/3.7.mdx", "file_name": "3.7.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.7.mdx", "header_path": "/[EP3.7] [Social] Approval of ENS Name Normalization Standard (ENSIP-15)/", "customer_id": 1, "source_url": "src/pages/dao/proposals/3.7.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["implementing", "python", "safer", "libraries", "replace", "frameworks", "agree", "using", "specification", "javascript", "normalize", "names", "according"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4f45f5028d85a55b262e6a28ca64f3c37c6f6659", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/3.7.mdx", "file_name": "3.7.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.7.mdx"}, "hash": "0fc5bf8997c1afc8b66729e85cb21266f6be2dadd9dc4c98a6038b9be4446307", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d49d77e0-e055-4274-ab75-7dec7b6fd708", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/3.7.mdx", "file_name": "3.7.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.7.mdx", "header_path": "/[EP3.7] [Social] Approval of ENS Name Normalization Standard (ENSIP-15)/Motivation/"}, "hash": "494e8b1ea3a4c9b716d9cc50c6b7f52bbe4efd3c63e0958b17c1afc219e0daa6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1a3d793e-bf39-43ad-be46-8119aa3491d8", "node_type": "1", "metadata": {"header_path": "/[EP3.7] [Social] Approval of ENS Name Normalization Standard (ENSIP-15)/"}, "hash": "37287862ebe4e8801781e24d47e8bae5c2c28b9b842abee2b0bfc435ef5ecfd8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\n- Replace [ENSIP-1 \u00a7 Name Syntax](https://docs.ens.domains/ens-improvement-proposals/ensip-1-ens#name-syntax) \"UTS-46 algorithm\" with link to [ENSIP-15](https://docs.ens.domains/ens-improvement-proposals/ensip-15-normalization-standard).\n- Agree to normalize names according to ENSIP-15 for a safer end-user experience.\n  - Examples:\n    1. ![](https://i.imgur.com/VDOnxXe.png)\n    1. ![](https://i.imgur.com/tWDRp8H.png)\n    1. ![](https://i.imgur.com/OYIigpp.png)\n  - Libraries implementing ENSIP-15:\n    1. Javascript \u2014 [adraffy/ens-normalize](https://github.com/adraffy/ens-normalize.js)\n    2. Javascript \u2014 [ensdomains/eth-ens-namehash](https://github.com/ensdomains/eth-ens-namehash)\n    3. Python \u2014 [namehash/ens-normalize-python](https://github.com/namehash/ens-normalize-python)\n  - Web Frameworks using ENSIP-15:\n    1. Javascript \u2014 [ethers/ethers.io](https://github.com/ethers-io/ethers.js/)\n    2. Javascript \u2014 [web3/web3.js](https://github.com/web3/web3.js)\n    3. Javascript \u2014 [wagmi-dev/viem](https://github.com/wagmi-dev/viem)\n- Names visible to the end-user should be [**beautified**](https://docs.ens.domains/ens-improvement-proposals/ensip-15-normalization-standard#annex-beautification) for a more consistent appearance.\n  - Example: These labels are the same:\\\n    [![](https://camo.githubusercontent.com/1b7b4f3d0baa83d62415760a4622955e6de1f8f102a8ea5070e21ae0d44ab9ea/68747470733a2f2f692e696d6775722e636f6d2f703772785572452e706e67)](https://camo.githubusercontent.com/1b7b4f3d0baa83d62415760a4622955e6de1f8f102a8ea5070e21ae0d44ab9ea/68747470733a2f2f692e696d6775722e636f6d2f703772785572452e706e67)", "mimetype": "text/plain", "start_char_idx": 2397, "end_char_idx": 4034, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1a3d793e-bf39-43ad-be46-8119aa3491d8": {"__data__": {"id_": "1a3d793e-bf39-43ad-be46-8119aa3491d8", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/3.7.mdx", "file_name": "3.7.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.7.mdx", "header_path": "/[EP3.7] [Social] Approval of ENS Name Normalization Standard (ENSIP-15)/", "customer_id": 1, "source_url": "src/pages/dao/proposals/3.7.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["strategies", "favor", "single", "voting", "approving", "choice", "following", "actions"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4f45f5028d85a55b262e6a28ca64f3c37c6f6659", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/3.7.mdx", "file_name": "3.7.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.7.mdx"}, "hash": "0fc5bf8997c1afc8b66729e85cb21266f6be2dadd9dc4c98a6038b9be4446307", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cb7e5dfe-e6c7-4607-81f7-b2f2a8366868", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/3.7.mdx", "file_name": "3.7.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.7.mdx", "header_path": "/[EP3.7] [Social] Approval of ENS Name Normalization Standard (ENSIP-15)/"}, "hash": "ae75f9bcdacd43a324147db31242ae6707852a15f7cb39919a2b504cff1a94a3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Voting\n\nThis vote is a single choice vote. You may vote for one of the following options:\n\n- **For**\n- **Against**\n- **Abstain**\n\nBy voting **For** this proposal, you are voting in favor of approving [ENSIP-15](https://docs.ens.domains/ens-improvement-proposals/ensip-15-normalization-standard). ---\ndescription: 'Additional actions and strategies for the Endowment'\nauthors: ['karpatkey']\nproposal:\n  discourse: '17406'\n  tally: '55447465396737793905646186593156244424717001140618132725073945884287085787959'\n  type: 'executable'\n---", "mimetype": "text/plain", "start_char_idx": 4036, "end_char_idx": 4334, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "67a9d35f-dd38-4d74-9286-4adde1698a98": {"__data__": {"id_": "67a9d35f-dd38-4d74-9286-4adde1698a98", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.1.mdx", "file_name": "4.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.1.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["strategies", "endowment", "actions", "passed", "further", "approve"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f127d4f240828976857627d4222670802b77ed83", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.1.mdx", "file_name": "4.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.1.mdx"}, "hash": "4d047f4107ee02a158b6d6f2c9e07e95d75566f3992d2559fcae21bbb3ebfaf5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "50eb6cce-da93-4f27-8655-6dfc81c8c35d", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.1.mdx", "file_name": "4.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.1.mdx", "header_path": "/"}, "hash": "18770d9cc20e99675a4000ea13a35e7aab27a7713f817e7dc643ac4938951b92", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "be7cf2ca-9ac8-452c-b999-cc112bcc090f", "node_type": "1", "metadata": {"header_path": "/[EP4.1] [Executable] Approve further actions and strategies for the Endowment/"}, "hash": "8cd65d160e5886bf2573d88f748474ee79bcfbf7bb21035ba6968d3a2edea5cc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# [EP4.1] [Executable] Approve further actions and strategies for the Endowment\n\n::authors\n\n| **Status**            | Passed                                                                                                                        |\n| --------------------- | ----------------------------------------------------------------------------------------------------------------------------- |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/17406)                                                                                  |\n| **Votes**             | [Tally](https://www.tally.xyz/gov/ens/proposal/55447465396737793905646186593156244424717001140618132725073945884287085787959) |", "mimetype": "text/plain", "start_char_idx": 240, "end_char_idx": 947, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "be7cf2ca-9ac8-452c-b999-cc112bcc090f": {"__data__": {"id_": "be7cf2ca-9ac8-452c-b999-cc112bcc090f", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.1.mdx", "file_name": "4.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.1.mdx", "header_path": "/[EP4.1] [Executable] Approve further actions and strategies for the Endowment/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["additional", "introduces", "require", "permissions", "strategies", "motivation", "endowment", "granted", "abstract", "enhance", "proposal", "actions", "which", "manage", "karpatkey"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f127d4f240828976857627d4222670802b77ed83", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.1.mdx", "file_name": "4.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.1.mdx"}, "hash": "4d047f4107ee02a158b6d6f2c9e07e95d75566f3992d2559fcae21bbb3ebfaf5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "67a9d35f-dd38-4d74-9286-4adde1698a98", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.1.mdx", "file_name": "4.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.1.mdx", "header_path": "/"}, "hash": "ddfe60cce070ac674f415e0752b3fafdd863f0bdaba6391433de645fa3696c38", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dfb55e7e-0bd7-47b8-83a5-a7ed57849960", "node_type": "1", "metadata": {"header_path": "/[EP4.1] [Executable] Approve further actions and strategies for the Endowment/"}, "hash": "4eafef4a7055c3a7078711173dee3c95f7a110ce4ff84cec93ea65751500a3e7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Abstract\n\nThis proposal introduces additional actions and strategies to the [ENS Endowment](https://discuss.ens.domains/t/ep3-4-executable-fund-the-endowment-first-tranche/16277?u=alisha.eth), which enhance the Endowment's performance, adaptability, and diversification. ## Motivation\n\nPermissions granted to Karpatkey to manage the Endowment are not static, and require regular updates to effectively respond to evolving market conditions and to capitalize on emerging opportunities.\n\nAny changes to the permissions related to Endowment funds ([endowment.ensdao.eth](https://etherscan.io/address/0x4F2083f5fBede34C2714aFfb3105539775f7FE64)) must be executed by the DAO. To streamline the process for delegates, Karpatkey has bundled all non-urgent changes in this proposal.", "mimetype": "text/plain", "start_char_idx": 949, "end_char_idx": 1222, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "045824c9-4e43-4dba-a0db-59fcba4a91c3": {"__data__": {"id_": "045824c9-4e43-4dba-a0db-59fcba4a91c3", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.1.mdx", "file_name": "4.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.1.mdx", "header_path": "/[EP4.1] [Executable] Approve further actions and strategies for the Endowment/Motivation/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["amount", "latest", "ncaum", "updates", "endowment", "assets", "capital", "percentage", "update", "report", "weekly", "shows", "under", "utilisation"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f127d4f240828976857627d4222670802b77ed83", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.1.mdx", "file_name": "4.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.1.mdx"}, "hash": "4d047f4107ee02a158b6d6f2c9e07e95d75566f3992d2559fcae21bbb3ebfaf5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dfb55e7e-0bd7-47b8-83a5-a7ed57849960", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.1.mdx", "file_name": "4.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.1.mdx", "header_path": "/[EP4.1] [Executable] Approve further actions and strategies for the Endowment/"}, "hash": "3b0e1b84b83ddb9a9e77a909faa74f26ef10509ba594c091069c7ae636056094", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bc9ffcae-f9f9-4555-934c-d88b1f522da7", "node_type": "1", "metadata": {"header_path": "/[EP4.1] [Executable] Approve further actions and strategies for the Endowment/"}, "hash": "2e9bbabd659e1a74b19057fadef166ac9d5ac3a1ab9b19618bad8b60fdc158a0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Endowment Update\n\nThe latest weekly report shows that the Endowment's ncAUM (non-custodial Assets Under Management) amount is $30.1M, with a capital utilisation of 99.95% and an APR (Annual Percentage Rate) of 2.78%.\n\nWeekly updates on the Endowment can be found in the ENS governance forum [here](https://discuss.ens.domains/t/endowment-weekly-reports/16665?u=alisha.eth). Monthly updates can be found in the ENS governance forum [here](https://discuss.ens.domains/t/ens-financial-reporting-by-steakhouse/16601?u=alisha.eth).", "mimetype": "text/plain", "start_char_idx": 1729, "end_char_idx": 2259, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bc9ffcae-f9f9-4555-934c-d88b1f522da7": {"__data__": {"id_": "bc9ffcae-f9f9-4555-934c-d88b1f522da7", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.1.mdx", "file_name": "4.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.1.mdx", "header_path": "/[EP4.1] [Executable] Approve further actions and strategies for the Endowment/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["deposit", "wsteth", "proposal", "added", "compound", "steth", "stake", "permissions", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f127d4f240828976857627d4222670802b77ed83", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.1.mdx", "file_name": "4.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.1.mdx"}, "hash": "4d047f4107ee02a158b6d6f2c9e07e95d75566f3992d2559fcae21bbb3ebfaf5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "045824c9-4e43-4dba-a0db-59fcba4a91c3", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.1.mdx", "file_name": "4.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.1.mdx", "header_path": "/[EP4.1] [Executable] Approve further actions and strategies for the Endowment/Motivation/"}, "hash": "f88fde2be077018345e50d9ca36b8d281817ea14eb809e8cdb127e5b360494a9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e6e47967-536b-45c8-8db9-b55a81efc68a", "node_type": "1", "metadata": {"header_path": "/[EP4.1] [Executable] Approve further actions and strategies for the Endowment/Specification/"}, "hash": "555ea5a9b7b8412ea3782f26376347a0a4f61022b08fc953a964516cb235aeda", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\nPermissions that will be added in this proposal are:\n\n1. Deposit USDC on Compound v3;\n2. Deposit DAI on AAVE v3;\n3. Deposit USDC on AAVE v3;\n4. Deposit DAI on Maker's DSR module;\n5. Deposit wstETH - ETH on Balancer;\n6. Stake ETH - stETH on Convex;\n7. Deposit and stake rETH - WETH on Balancer;\n8. Stake rETH - WETH on Aura;\n9. Deposit and stake Compound USDC DAI on Curve;\n10. Stake Compound USDC DAI on Convex;\n11. Deposit and stake Balancer Boosted Aave V3 USD on Balancer;\n12. Stake Balancer Boosted Aave V3 USD on Aura;\n13. Add swap route CVX - WETH on Curve;\n14. Migrate wstETH-WETH position to a new gauge on Aura,\n15. Add swap route processor for SushiSwap's concentrated liquidity (v3) pools, and\n16. Add swapping options on Cow Swap\n\nThe majority of the actions mentioned above were initially presented in the proposal that resulted in the selection of Karpatkey as the Endowment Manager. However, it is important to note that there is one exception, namely action #4 - Deposit DAI on Maker's DSR module. This particular opportunity has emerged as an appealing addition subsequent to the original proposal, presenting a new avenue that was not available at the time of its submission. More details about the new actions are posted below as a comment to this post.\n\nMoving forward, this initial list of actions will be subject to updates based on future market conditions, ensuring the Endowment remains responsive and adaptable.", "mimetype": "text/plain", "start_char_idx": 2261, "end_char_idx": 3716, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e6e47967-536b-45c8-8db9-b55a81efc68a": {"__data__": {"id_": "e6e47967-536b-45c8-8db9-b55a81efc68a", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.1.mdx", "file_name": "4.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.1.mdx", "header_path": "/[EP4.1] [Executable] Approve further actions and strategies for the Endowment/Specification/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["preset", "additional", "payload", "granted", "being", "version", "propose", "update", "including", "shows", "updated", "requested", "information", "permissions"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f127d4f240828976857627d4222670802b77ed83", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.1.mdx", "file_name": "4.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.1.mdx"}, "hash": "4d047f4107ee02a158b6d6f2c9e07e95d75566f3992d2559fcae21bbb3ebfaf5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bc9ffcae-f9f9-4555-934c-d88b1f522da7", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.1.mdx", "file_name": "4.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.1.mdx", "header_path": "/[EP4.1] [Executable] Approve further actions and strategies for the Endowment/"}, "hash": "dde49dbef534db59194d2c87f45ed86a7a722139d68e05f690b14821164897d3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Additional information\n\nWe propose an updated version of the \"Preset permissions - ENS Endowment\" [document](https://docs.google.com/document/d/1ccSDe25I9ojvlbPGT5acqD71LOY9U8xkjBYWJgjJtgI/edit?usp=sharing) that shows all the permissions granted to Karpatkey, including the ones that are being requested now.\n\nThe payload to update the preset that needs to be executed by the ENS DAO upon a successful on-chain vote is posted below as a comment to this post along with some additional considerations.", "mimetype": "text/plain", "start_char_idx": 3718, "end_char_idx": 4222, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1c4ab026-2dda-4b4e-a5b8-5a554188de8a": {"__data__": {"id_": "1c4ab026-2dda-4b4e-a5b8-5a554188de8a", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.10.mdx", "file_name": "4.10.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.10.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.10.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["community", "power", "aiming", "ownership", "transfers", "enhance", "proposal", "decentralize", "passed", "transfer", "further", "managing", "trust", "governance"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "01ee139d7998ab3e37e58980ef63c5f858061654", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.10.mdx", "file_name": "4.10.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.10.mdx"}, "hash": "dd6462b12b3acd72a5e71f0160ad62b2e3b2ade6e2b8a14f26ac10efd8807c1a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f24ab75d-2b69-4c41-ae5f-77544d9fcc81", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "2daa229952323e1ec71d32204d13c836d3fa7baeaf22fd7f5a81e54188175443", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: 'This proposal transfers ownership of the ENS root key to the ENS DAO, aiming to further decentralize governance and enhance community trust and power in managing the ENS Protocol.'\nauthors: ['estmcmxci.eth']\nproposal:\n  discourse: '18338'\n  snapshot: '0x8e3c8812bd52d1760eb2bbf8dc603d68860741f80d489dc051017e863151a242'\n  type: 'social'\n--- # [EP4.10] [Social] Transfer ENS Root Key Ownership to the ENS DAO\n\n::authors\n\n| **Status**            | Passed                                                                                                                   |\n| --------------------- | ------------------------------------------------------------------------------------------------------------------------ |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/18338)                                                                             |\n| **Votes**             | [Snapshot](https://snapshot.box/#/s:ens.eth/proposal/0x8e3c8812bd52d1760eb2bbf8dc603d68860741f80d489dc051017e863151a242) |", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 358, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9c988448-cfd5-4cc4-9c69-360841b1bad1": {"__data__": {"id_": "9c988448-cfd5-4cc4-9c69-360841b1bad1", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.10.mdx", "file_name": "4.10.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.10.mdx", "header_path": "/[EP4.10] [Social] Transfer ENS Root Key Ownership to the ENS DAO/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.10.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["capability", "ethereum", "aspects", "established", "ownership", "abstract", "entity", "responsibility", "propose", "itself", "further", "demonstrated", "several", "service", "governance"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "01ee139d7998ab3e37e58980ef63c5f858061654", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.10.mdx", "file_name": "4.10.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.10.mdx"}, "hash": "dd6462b12b3acd72a5e71f0160ad62b2e3b2ade6e2b8a14f26ac10efd8807c1a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f24ab75d-2b69-4c41-ae5f-77544d9fcc81", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.10.mdx", "file_name": "4.10.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.10.mdx", "header_path": "/"}, "hash": "5892e4d2ffdb68bf1c2a4a62a13839b1198e907b4359f2a96774a1fead7667eb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a25ae527-a60a-4523-b3b3-97dfb8a8829e", "node_type": "1", "metadata": {"header_path": "/[EP4.10] [Social] Transfer ENS Root Key Ownership to the ENS DAO/"}, "hash": "e85b17f8d6e63ff2986ba66ab58396c5e86d546e73970521f8be51c55adb33d1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Abstract\n\nThe ENS DAO has established itself as the key governance entity for the Ethereum Name Service (ENS) and has demonstrated capability and responsibility in ownership of several aspects of the protocol. We now propose the further decentralization of the ENS governance structure by transferring ownership of the ENS root key from the current multisig system (multisig.ens.eth) to the ENS DAO (wallet.ensdao.eth). ## Background ### ENS Root Key\n\nThe ENS root node is currently owned by a multisig contract. The root key can control the allocation and replacement of all TLDs except for .eth. Keyholders are well-respected individuals in the Ethereum community and, with the exception of Nick Johnson, founder of ENS, are unaffiliated with ENS. While the .eth registrar contract control has been locked and cannot be affected by the root keyholders, they still hold significant powers over the structure and functioning of the ENS Protocol.", "mimetype": "text/plain", "start_char_idx": 1036, "end_char_idx": 1458, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f941c31e-8558-4077-98aa-758b20bcbe44": {"__data__": {"id_": "f941c31e-8558-4077-98aa-758b20bcbe44", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.10.mdx", "file_name": "4.10.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.10.mdx", "header_path": "/[EP4.10] [Social] Transfer ENS Root Key Ownership to the ENS DAO/Background/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.10.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["capability", "retains", "registrar", "powers", "ownership", "controls", "holds", "control", "adjust", "current", "functionalities", "which", "create", "existing"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "01ee139d7998ab3e37e58980ef63c5f858061654", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.10.mdx", "file_name": "4.10.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.10.mdx"}, "hash": "dd6462b12b3acd72a5e71f0160ad62b2e3b2ade6e2b8a14f26ac10efd8807c1a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "946826a6-b058-4f06-82ec-81e667b15b8d", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.10.mdx", "file_name": "4.10.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.10.mdx", "header_path": "/[EP4.10] [Social] Transfer ENS Root Key Ownership to the ENS DAO/Background/"}, "hash": "a1dd25da31997477e170cd32ed8a9bcd504bd6aea01a8ac15888c7b35a5f111c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "704ce12d-8643-45f3-bed1-add75aabaf9b", "node_type": "1", "metadata": {"header_path": "/[EP4.10] [Social] Transfer ENS Root Key Ownership to the ENS DAO/"}, "hash": "485432572910a2f392683eb5e7317b9ba50b9f634ad585bed98393ed83967bd2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### ENS DAO Current Powers\n\nThe ENS DAO holds ownership of the .eth registrar and has control over functionalities like the NameWrapper. The DAO does not have control over the core ENS root name, which retains the capability to create new TLDs, adjust controls for existing ones, and upgrade the contracts responsible for reverse resolution. ## Proposal\n\n1. **Transfer of Root Key Ownership**: We propose the transfer of ownership of the ENS root key from the current multisig holders to the ENS DAO. This will consolidate governance powers and further the vision of decentralized control over the ENS Protocol.\n2. **TLD Management**: While .eth is permanently set and unchangeable, the DAO will inherit the power to create and manage other top-level domains (TLD). The DAO will also have the ability to lock any TLD permanently if deemed necessary.\n3. **Reverse Resolutions and L2s**: The DAO will have the capacity to update reverse resolutions. Additionally, with the Labs team's support, the DAO will explore and potentially implement primary domain names on Layer 2 solutions (L2s).", "mimetype": "text/plain", "start_char_idx": 1988, "end_char_idx": 2329, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "074f7ee4-1e93-4bbe-bd19-4ea6366525f5": {"__data__": {"id_": "074f7ee4-1e93-4bbe-bd19-4ea6366525f5", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.10.mdx", "file_name": "4.10.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.10.mdx", "header_path": "/[EP4.10] [Social] Transfer ENS Root Key Ownership to the ENS DAO/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.10.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["transaction", "ensuring", "commits", "ownership", "designated", "execute", "current", "funds", "transferring", "keyholders", "managing", "requested", "powers", "specification", "transparent"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "01ee139d7998ab3e37e58980ef63c5f858061654", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.10.mdx", "file_name": "4.10.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.10.mdx"}, "hash": "dd6462b12b3acd72a5e71f0160ad62b2e3b2ade6e2b8a14f26ac10efd8807c1a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "704ce12d-8643-45f3-bed1-add75aabaf9b", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.10.mdx", "file_name": "4.10.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.10.mdx", "header_path": "/[EP4.10] [Social] Transfer ENS Root Key Ownership to the ENS DAO/"}, "hash": "314e1b7d873c94a15e190d9282af91e621d1c9093d375464cebc5d1c30cd75fa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "40575ea6-144a-493e-b143-d610c10f1262", "node_type": "1", "metadata": {"header_path": "/[EP4.10] [Social] Transfer ENS Root Key Ownership to the ENS DAO/"}, "hash": "fbadb00881a9464381bebc7bf5048a4eb8ada0e6b80fc75e9513ecf21d76c829", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\n1. Current ENS root keyholders are requested to execute a transaction transferring root key ownership to the ENS DAO's designated contract.\n2. The ENS DAO commits to managing the new powers and funds in line with the [ENS DAO Constitution](/dao/constitution), ensuring transparent governance and decision-making.\n3. The DAO will develop policies to govern TLD management, (oracle) pricing updates, and other key decisions. ## Coda (Conclusion)\n\nWith this proposal, we aim to further decentralize the control and governance of the ENS Protocol, placing more trust and power in the hands of the ENS community via the DAO. Community discussion will ensue on the [Governance Forum](https://discuss.ens.domains). The ballot will begin on [Snapshot](https://snapshot.org/#/ens.eth) and, should it be passed, the current ENS root keyholders will initiate a transfer of the ENS root key to the ENS DAO where it will be managed according to the precepts outlined herein.", "mimetype": "text/plain", "start_char_idx": 3078, "end_char_idx": 3518, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8235eb78-8296-4c97-9351-0a79e3bdde73": {"__data__": {"id_": "8235eb78-8296-4c97-9351-0a79e3bdde73", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.2.mdx", "file_name": "4.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.2.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["passed", "endowment"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e8a8293d5d243e8bc15e05ae3f2ff6dce36255de", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.2.mdx", "file_name": "4.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.2.mdx"}, "hash": "12c2642549d86d47820126c02d54d6610efae19778f1864e293fd990572ccb39", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4fff9e6e-318c-40a7-9cf2-667d1392408b", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "38b22cad734ab717e466c64d76b68e83561c42a11614f5341b98b4279065199e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: 'Fund the Endowment (second tranche)'\nauthors: ['karpatkey']\nproposal:\n  discourse: '17743'\n  tally: '10686228418271748393758532071249002330319730525037728746406757788787068261444'\n  type: 'executable'\n--- # [EP4.2] [Executable] Fund the Endowment (second tranche)\n\n::authors\n\n| **Status**            | Passed                                                                                                                        |\n| --------------------- | ----------------------------------------------------------------------------------------------------------------------------- |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/17743)                                                                                  |\n| **Votes**             | [Tally](https://www.tally.xyz/gov/ens/proposal/10686228418271748393758532071249002330319730525037728746406757788787068261444) |", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 222, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "661a7b3a-1cae-4611-9b14-c80b0cfbd9ae": {"__data__": {"id_": "661a7b3a-1cae-4611-9b14-c80b0cfbd9ae", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.2.mdx", "file_name": "4.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.2.mdx", "header_path": "/[EP4.2] [Executable] Fund the Endowment (second tranche)/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["preset", "introduces", "allocation", "motivation", "second", "abstract", "march", "proposal", "adjustments", "maintenance", "minor", "outlines", "existing", "permissions", "comprising"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e8a8293d5d243e8bc15e05ae3f2ff6dce36255de", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.2.mdx", "file_name": "4.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.2.mdx"}, "hash": "12c2642549d86d47820126c02d54d6610efae19778f1864e293fd990572ccb39", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4fff9e6e-318c-40a7-9cf2-667d1392408b", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.2.mdx", "file_name": "4.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.2.mdx", "header_path": "/"}, "hash": "a61816da333a5da3c1a73f49efbdd505ff01af173ef2bef06eee4ff57b75bd0c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2c670e70-d54d-41be-8a4e-8d05809d7b1d", "node_type": "1", "metadata": {"header_path": "/[EP4.2] [Executable] Fund the Endowment (second tranche)/"}, "hash": "f66fc607a2b6610c2832e3de10ce095077472e92e7dc71f55aa17166aa94f471", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Abstract\n\nThis proposal outlines the allocation of the second tranche, comprising 16,000 ETH, from the [ENS DAO](https://etherscan.io/address/0xfe89cc7abb2c4183683ab71653c4cdc9b02d44b7) to the [ENS Endowment](https://etherscan.io/address/0x4F2083f5fBede34C2714aFfb3105539775f7FE64). Additionally, it introduces minor adjustments to the existing permissions preset for maintenance purposes. ## Motivation\n\nIn March 2023, the ENS Endowment was formally established following the [joint proposal](https://discuss.ens.domains/t/updated-endaoment-proposal-karpatkey-steakhouse-financial/14799) by karpatkey and @steakhouse, after the successful execution of [E.P 3.4 - Fund the Endowment (first tranche)](https://www.tally.xyz/gov/ens/proposal/90786656233306599444783442367171420493182391933134906270328139870999449830964). The community had expressed a preference for a phased funding approach, leading to the decision to allocate the funds in two equal tranches over a six-month interval. As we reach this pivotal milestone, this proposal seeks community approval for the second tranche.", "mimetype": "text/plain", "start_char_idx": 912, "end_char_idx": 1304, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "879f0528-6639-45e3-a0f4-69735a75612a": {"__data__": {"id_": "879f0528-6639-45e3-a0f4-69735a75612a", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.2.mdx", "file_name": "4.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.2.mdx", "header_path": "/[EP4.2] [Executable] Fund the Endowment (second tranche)/Motivation/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["detailing", "ncaum", "endowment", "monthly", "assets", "capital", "performance", "update", "report", "recent", "august", "based", "under", "utilisation"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e8a8293d5d243e8bc15e05ae3f2ff6dce36255de", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.2.mdx", "file_name": "4.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.2.mdx"}, "hash": "12c2642549d86d47820126c02d54d6610efae19778f1864e293fd990572ccb39", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2c670e70-d54d-41be-8a4e-8d05809d7b1d", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.2.mdx", "file_name": "4.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.2.mdx", "header_path": "/[EP4.2] [Executable] Fund the Endowment (second tranche)/"}, "hash": "74b6423c06e94490c18797e462f18d6b97c4f27971adc37ef7799d929ec2de43", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "14d93045-f662-4c95-86fd-063b8b7ae54e", "node_type": "1", "metadata": {"header_path": "/[EP4.2] [Executable] Fund the Endowment (second tranche)/Motivation/Endowment Update/"}, "hash": "c6d93f6e5208acf51e666f82afad6187b5291c91f98bac2b7978066090300037", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Endowment Update\n\nBased on the most recent monthly report detailing the Endowment's performance for August 2023, the Endowment has achieved:\n\n- $28.03 M of ncAUM (non-custodial assets under management)\n- 100% of capital utilisation\n- An APY (annual percentage yield) of 4.1%\n- Monthly farming results of $93,841\n\nA comprehensive review [post](https://discuss.ens.domains/t/karpatkey-h1-2023-review-for-the-ens-endowment/17682) detailing our collaborative efforts with the ENS DAO has been recently shared on the forum. We encourage community members to consult this post for insights into our achievements and ongoing initiatives.", "mimetype": "text/plain", "start_char_idx": 2002, "end_char_idx": 2636, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "14d93045-f662-4c95-86fd-063b8b7ae54e": {"__data__": {"id_": "14d93045-f662-4c95-86fd-063b8b7ae54e", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.2.mdx", "file_name": "4.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.2.mdx", "header_path": "/[EP4.2] [Executable] Fund the Endowment (second tranche)/Motivation/Endowment Update/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["later", "accrued", "strategies", "endowment", "transitioned", "cumulative", "since", "initially", "operational", "shared", "stablecoin", "revenues", "through", "reports"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e8a8293d5d243e8bc15e05ae3f2ff6dce36255de", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.2.mdx", "file_name": "4.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.2.mdx"}, "hash": "12c2642549d86d47820126c02d54d6610efae19778f1864e293fd990572ccb39", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "879f0528-6639-45e3-a0f4-69735a75612a", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.2.mdx", "file_name": "4.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.2.mdx", "header_path": "/[EP4.2] [Executable] Fund the Endowment (second tranche)/Motivation/"}, "hash": "c5f9e62c9bd34ff051b57eb130b462ddace0ee1cd2b7b503c91a1be4dbbc460e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7c238625-65fd-46f3-824a-5b7fc6752139", "node_type": "1", "metadata": {"header_path": "/[EP4.2] [Executable] Fund the Endowment (second tranche)/"}, "hash": "e8755574e10e9af20d58cb751e84be5841c3f4559a02a3dca5247b22f6d9433f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "#### Cumulative Revenues\n\nIn the 182 days since the Endowment was established, 173 ETH have been accrued through ETH-neutral strategies and $136,764 in stablecoin revenues via USD-neutral strategies. Operational reports were initially shared on a [weekly basis](https://discuss.ens.domains/t/endowment-weekly-reports/16665) and later transitioned to [monthly updates](https://discuss.ens.domains/t/endowment-monthly-reports/17614), all of which were made available on the forum for community review.\n\nThe Endowment's phased initiation should also be taken into account when interpreting these results. Full capital utilisation was only achieved 49 days after the Endowment's inception, following the completion of the earned ETH-to-stablecoin tranche swaps. This staggered approach had a discernible impact on the reported financial metrics.\n\nTaking into consideration the revenue generated during the most recent four months\u2014after reaching 100% capital utilisation\u2014the projected annual revenues at the current Endowment's size stand at 367 ETH from ETH-neutral strategies and an equivalent of $351,654 in stablecoins from USD-neutral strategies. This results in a projected Annual Percentage Rate (APR) of approximately 3.4%.", "mimetype": "text/plain", "start_char_idx": 2638, "end_char_idx": 3864, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7c238625-65fd-46f3-824a-5b7fc6752139": {"__data__": {"id_": "7c238625-65fd-46f3-824a-5b7fc6752139", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.2.mdx", "file_name": "4.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.2.mdx", "header_path": "/[EP4.2] [Executable] Fund the Endowment (second tranche)/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["preset", "events", "reduce", "endowment", "frequency", "voting", "adjustments", "propose", "transfer", "streamline", "commitment", "specification", "permissions", "governance"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e8a8293d5d243e8bc15e05ae3f2ff6dce36255de", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.2.mdx", "file_name": "4.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.2.mdx"}, "hash": "12c2642549d86d47820126c02d54d6610efae19778f1864e293fd990572ccb39", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "14d93045-f662-4c95-86fd-063b8b7ae54e", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.2.mdx", "file_name": "4.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.2.mdx", "header_path": "/[EP4.2] [Executable] Fund the Endowment (second tranche)/Motivation/Endowment Update/"}, "hash": "a0247a5d61df1663a8692384f881a5e97609f0cc178a81afef5938a561c11b7c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "27be5292-f0a4-4bbe-bc97-dde46d5856ba", "node_type": "1", "metadata": {"header_path": "/[EP4.2] [Executable] Fund the Endowment (second tranche)/Specification/"}, "hash": "f66b69a43df7158c0f0ad9d0294ede339e5d9c46fac8ba23184ec3e7b9a759c2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification ### Fund Transfer\n\nTransfer 16,000 ETH to the Endowment (0x4F2083f5fBede34C2714aFfb3105539775f7FE64). ### Permissions preset adjustments\n\nIn line with our commitment to streamline governance and reduce the frequency of voting events for the community, we propose targeted adjustments to the existing permissions preset within this proposal. Specifically, we are requesting three key changes:\n\n- **Whitelisting the updated wstETH-WETH Pool and Gauge**: As part of our ongoing optimization, we propose to whitelist the updated wstETH-WETH pool on [Balancer](https://app.balancer.fi/#/ethereum/pool/0x93d199263632a4ef4bb438f1feb99e57b4b5f0bd0000000000000000000005c2) and its corresponding gauge on [Aura](https://app.aura.finance/#/1/pool/153).\n- **Revoking Permissions for Aura's bb-a-usd Pool**: In light of the recent [vulnerability](https://forum.balancer.fi/t/vulnerability-found-in-some-pools/5102) disclosed by Balancer on August 24, 2023, we recommend revoking all permissions associated with potentially compromised pools. It's important to note that the Endowment had no exposure to these compromised pools at the time the vulnerability was made public.\n- **Whitelisting the **_**delegatecall**_** function on Cow Swap**: A minor bug was found in the existing preset configuration. Specifically, the _signOrder_ function within Cow Swap's order signer contract is designed to be executed solely via a delegate call, a capability not currently supported by the preset. This oversight not only hindered functionality but also revealed a flaw in the SDK preset testing framework. The issue has been swiftly addressed and rectified in a recent [commit](https://github.com/gnosis/zodiac-modifier-roles-v1/commit/c22b1fa8c10b1e3cfb2c1fceef24498c25f3ea2d) to the codebase.\n\nAs is customary, we are presenting an updated version of the [\"Preset permissions - ENS Endowment'' document](https://docs.google.com/document/d/1vhws_fnbIws8EUItK14V2TVIecHdJLxKzN8Za4d5L0M/edit). This document comprehensively lists all permissions granted to karpatkey, with newly requested permissions highlighted in green and any revocations marked in red.\n\nWe are also sharing the [payload](https://gist.github.com/santinomics/bb6b345ff977e7451ff0506e253ebc4c/044f46247ab57f8c65bf608b83eacefa128671f7) to apply the proposed changes for your review. We strongly encourage community members with the required technical expertise to scrutinise the content and share their invaluable feedback.", "mimetype": "text/plain", "start_char_idx": 3866, "end_char_idx": 3882, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "356807e8-ef34-469d-a486-c80dbcc45b37": {"__data__": {"id_": "356807e8-ef34-469d-a486-c80dbcc45b37", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.2.mdx", "file_name": "4.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.2.mdx", "header_path": "/[EP4.2] [Executable] Fund the Endowment (second tranche)/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["transactions", "refund", "passed", "found", "following", "names", "invalid"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e8a8293d5d243e8bc15e05ae3f2ff6dce36255de", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.2.mdx", "file_name": "4.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.2.mdx"}, "hash": "12c2642549d86d47820126c02d54d6610efae19778f1864e293fd990572ccb39", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b862566f-79c8-463b-8a1e-04d56fa17ec6", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.2.mdx", "file_name": "4.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.2.mdx", "header_path": "/[EP4.2] [Executable] Fund the Endowment (second tranche)/Specification/"}, "hash": "3c3af740e7e23bc158a486e70cefe14149e761255c59a5d83bcf413524a38319", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Transactions\n\nAll transactions can be found in the following [payload](https://gist.github.com/santinomics/bb6b345ff977e7451ff0506e253ebc4c/044f46247ab57f8c65bf608b83eacefa128671f7). ---\ndescription: 'Refund Invalid .eth Names'\nauthors: []\nproposal:\n  discourse: '16824'\n  tally: '87741894125754523615596264728611635516467361279764827076788536604061840625452'\n  type: 'executable'\n--- # [EP4.3] [Executable] Refund Invalid .eth Names\n\n::authors\n\n| **Status**            | Passed                                                                                                                        |\n| --------------------- | ----------------------------------------------------------------------------------------------------------------------------- |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/16824)                                                                                  |\n| **Votes**             | [Tally](https://www.tally.xyz/gov/ens/proposal/87741894125754523615596264728611635516467361279764827076788536604061840625452) |", "mimetype": "text/plain", "start_char_idx": 6354, "end_char_idx": 6539, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e06d93a2-4903-4be0-bef6-ce5633925b04": {"__data__": {"id_": "e06d93a2-4903-4be0-bef6-ce5633925b04", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.3.mdx", "file_name": "4.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.3.mdx", "header_path": "/[EP4.3] [Executable] Refund Invalid .eth Names/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.3.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["facilitate", "latest", "group", "abstract", "introduced", "proposal", "transfer", "working", "initiates", "normalization", "refunding", "invalidated", "names", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "34e5714aa7e5b9cf9c3801979bc46db55eda23a4", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.3.mdx", "file_name": "4.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.3.mdx"}, "hash": "f2727e1a96801c745a27d4374504dd10a16c084add8eccf8ff1244fab5eb8010", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "609f1589-3c08-4b24-be7b-db1901a114f5", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.3.mdx", "file_name": "4.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.3.mdx", "header_path": "/"}, "hash": "e3efed74b8c99232328b8c1b697d74933810fa15a8110b4090ddf0a64799a48a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a3c91aa4-e3b3-4d32-bab0-ae1bc7c19583", "node_type": "1", "metadata": {"header_path": "/[EP4.3] [Executable] Refund Invalid .eth Names/"}, "hash": "bf30a5c329cfb1ead150fab544421e38db043f05406670ff94e18c008bfc583b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Abstract\n\nThis proposal initiates a transfer of 117 ETH to the Meta-Governance Working Group to facilitate the refunding of .eth names invalidated by ENSIP-15, the latest ENS name normalization standard. ## Specification\n\nENSIP-15 introduced a new ENS name normalization standard, resulting in the invalidation of a set of .eth names. In order to address the impact on owners of these invalidated names, refund amounts have been determined based on the following factors:\n\n1. Remaining registration fee or renewal fee\n2. Gas fees paid to register the name\n3. Any premium protocol fee paid to acquire the names\n\nThese factors together have been used to calculate the refund amounts. A total of 2,973 unique addresses will be refunded a total of approximately 115 ETH.\n\nNote: The data is from June 18, 2023 when ENSIP-15 passed. The [distributions](https://docs.google.com/spreadsheets/d/1JoLq8obUwFu_xGaXRMslAyX6nwR3njXqIc7I9sizTLU/edit?usp=sharing) and [code](https://github.com/ensdomains/normalise-refund) are both open source.\n\nTo facilitate the transfer of refunds to the affected addresses, this proposal suggests transferring the necessary ETH amount, including gas fees, to the Meta-Governance multisig. The multisig will then execute the refunds on behalf of the ENS DAO and return any leftover gas funds, if applicable.", "mimetype": "text/plain", "start_char_idx": 881, "end_char_idx": 1087, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "589371e1-565c-4002-aba5-79bc58215f57": {"__data__": {"id_": "589371e1-565c-4002-aba5-79bc58215f57", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.3.mdx", "file_name": "4.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.3.mdx", "header_path": "/[EP4.3] [Executable] Refund Invalid .eth Names/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.3.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["transactions", "ecosystem", "address", "proposal", "argument", "0x91c32893216de3ea0a55abb9851f581d4503d39b", "funding", "working", "value", "requests", "function"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "34e5714aa7e5b9cf9c3801979bc46db55eda23a4", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.3.mdx", "file_name": "4.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.3.mdx"}, "hash": "f2727e1a96801c745a27d4374504dd10a16c084add8eccf8ff1244fab5eb8010", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a3c91aa4-e3b3-4d32-bab0-ae1bc7c19583", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.3.mdx", "file_name": "4.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.3.mdx", "header_path": "/[EP4.3] [Executable] Refund Invalid .eth Names/"}, "hash": "f77f20b6d39f03bde92609214ccc96435434dd46e279eed2d2d9b5a5d2d90b6e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Transactions\n\n| Address                                    | Value   | Function | Argument | Value |\n| ------------------------------------------ | ------- | -------- | -------- | ----- |\n| 0x91c32893216dE3eA0a55ABb9851f581d4503d39b | 117 ETH |          |          |       | ---\ndescription: 'This proposal requests funding for the ENS Ecosystem Working Group.'\nauthors: ['slobo.eth']\nproposal:\n  discourse: '17995'\n  snapshot: '0x12a2abca291496c7e990d099240b4c995099dc0fb85767e04f22b9496e953799'\n  type: 'social'\n---", "mimetype": "text/plain", "start_char_idx": 2215, "end_char_idx": 2492, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e521f5fc-8271-4151-be02-e6d72251c180": {"__data__": {"id_": "e521f5fc-8271-4151-be02-e6d72251c180", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.4.1.mdx", "file_name": "4.4.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.4.1.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.4.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ecosystem", "group", "passed", "funding", "working"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "35762c48bc02e9af512ea3cf46c040f6c58e916b", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.4.1.mdx", "file_name": "4.4.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.4.1.mdx"}, "hash": "05b8cee077ad41cc259888397eb9233357e4517b1976ab4ba5d5f98b52f5e128", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8d85b5eb-6c8e-45c8-86ae-b378b681f175", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.4.1.mdx", "file_name": "4.4.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.4.1.mdx", "header_path": "/"}, "hash": "b9b5c403a5ee83282fc698c16566c42868b7745a7ba5e45ebba0e8361f593ea1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "264faeef-de6a-4436-8678-ed7d59e1570c", "node_type": "1", "metadata": {"header_path": "/[4.4.1] [Social] Funding Request: ENS Ecosystem Working Group/"}, "hash": "3cbf3b40cdac95c00efad322063a98de2774ed1f0c9759db0b0036668fafcf47", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# [4.4.1] [Social] Funding Request: ENS Ecosystem Working Group\n\n::authors\n\n| **Status**            | Passed                                                                                                                   |\n| --------------------- | ------------------------------------------------------------------------------------------------------------------------ |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/4-4-1-social-funding-request-ens-ecosystem-working-group/17995)                    |\n| **Votes**             | [Snapshot](https://snapshot.box/#/s:ens.eth/proposal/0x12a2abca291496c7e990d099240b4c995099dc0fb85767e04f22b9496e953799) |", "mimetype": "text/plain", "start_char_idx": 244, "end_char_idx": 915, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "264faeef-de6a-4436-8678-ed7d59e1570c": {"__data__": {"id_": "264faeef-de6a-4436-8678-ed7d59e1570c", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.4.1.mdx", "file_name": "4.4.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.4.1.mdx", "header_path": "/[4.4.1] [Social] Funding Request: ENS Ecosystem Working Group/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.4.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["operations", "ecosystem", "request", "group", "abstract", "march", "working", "funding", "support", "until", "requests"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "35762c48bc02e9af512ea3cf46c040f6c58e916b", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.4.1.mdx", "file_name": "4.4.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.4.1.mdx"}, "hash": "05b8cee077ad41cc259888397eb9233357e4517b1976ab4ba5d5f98b52f5e128", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e521f5fc-8271-4151-be02-e6d72251c180", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.4.1.mdx", "file_name": "4.4.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.4.1.mdx", "header_path": "/"}, "hash": "2600a92ad1dfcd89e19b356f558892e74d65f9fc6018781f13b31fd9ea749c0c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0070967d-2767-495f-a5da-e4c874506f9a", "node_type": "1", "metadata": {"header_path": "/[4.4.1] [Social] Funding Request: ENS Ecosystem Working Group/"}, "hash": "5d4f358004c43a33e305529e076a89477401d2beb0ea0e8d931e91d98cb41116", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Abstract\n\nThe ENS Ecosystem Working Group requests funding of 409,000 USDC to support operations until the March 2024 funding window. This is the only funding request of this term.\n\nThe ENS Ecosystem Working Group is responsible for growing and improving the ENS Ecosystem by funding builders and projects that are ENS-specific or ENS-centric.\n\nThis social proposal is submitted to satisfy the requirements set out in Rule 10.1.1 of the Working Group Rules ([EP 1.8](https://docs.ens.domains/v/governance/governance-proposals/term-1/ep12-working-group-rules)). If this proposal is passed, the funding request will be included in a collective executable proposal put forward by all three Working Groups.", "mimetype": "text/plain", "start_char_idx": 917, "end_char_idx": 1622, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0070967d-2767-495f-a5da-e4c874506f9a": {"__data__": {"id_": "0070967d-2767-495f-a5da-e4c874506f9a", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.4.1.mdx", "file_name": "4.4.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.4.1.mdx", "header_path": "/[4.4.1] [Social] Funding Request: ENS Ecosystem Working Group/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.4.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ecosystem", "group", "description", "october", "rounding", "working", "balances", "multisig", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "35762c48bc02e9af512ea3cf46c040f6c58e916b", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.4.1.mdx", "file_name": "4.4.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.4.1.mdx"}, "hash": "05b8cee077ad41cc259888397eb9233357e4517b1976ab4ba5d5f98b52f5e128", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "264faeef-de6a-4436-8678-ed7d59e1570c", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.4.1.mdx", "file_name": "4.4.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.4.1.mdx", "header_path": "/[4.4.1] [Social] Funding Request: ENS Ecosystem Working Group/"}, "hash": "3efd151d70a198525b66070f5c1aa83d4dd9f7674d12bdd7b3a83bcc2f215694", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a03ca7f4-c0b3-4059-84b8-f6fa4a51ac92", "node_type": "1", "metadata": {"header_path": "/[4.4.1] [Social] Funding Request: ENS Ecosystem Working Group/"}, "hash": "ec5bb5147ac71ba38ec1c1146953f54300563f6a47e7e4a4d8bf224481c61011", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\n|                             |  USDC   | ETH | $ENS |\n| --------------------------- | :-----: | :-: | :--: |\n| ENS Ecosystem Main Multisig | 409,000 | --  |  --  | ## Description ### ENS Ecosystem Multisig Balances - As of October 18, 2023\n\nThe ENS Ecosystem Working Group multisigs:\n| Multisigs|USDC|ETH|\n|:----|----:|----:|\n|[Main Multisig](https://etherscan.io/address/0x2686a8919df194aa7673244549e68d42c1685d03)|215k | 157|\n|[Builder Grants](https://etherscan.io/address/0x6a016548310076285668e2378df70bd545396b5a)|157k | 38|\n|[Grants](https://etherscan.io/address/0xba0c461b22d918fb1f52fef556310230d177d1f2)|141k| 3|\n|[IRL](https://etherscan.io/address/0x536013c57daf01d78e8a70cad1b1abada9411819)|21k| 9|\n|[Hackathon](https://etherscan.io/address/0x9b9c249be04dd433c7e8fbbf5e61e6741b89966d)|68k | 19|\n|[Support](https://etherscan.io/address/0x69a79128462853833e22bba1a43bcdac4725761b)|74k| 19|\n|[Bug Bounty](https://etherscan.io/address/0xb3a37c813d3d365a03dd1dd3e68cc11af019cdd6)|14k|0\n|[Merch](https://etherscan.io/address/0x0d06a817584ac378849f03df6f11a9ad67dd786d)|39k| 4|\n|[Newsletter](https://etherscan.io/address/0x13aEe52C1C688d3554a15556c5353cb0c3696ea2)|14k| 0|\n|Total\\*\\* |741k|249|\n\n\\*\\*Amounts do not foot due to rounding (739k vs. 741)", "mimetype": "text/plain", "start_char_idx": 1624, "end_char_idx": 1806, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e0c48793-8bb6-47b2-ad51-071f27886f4a": {"__data__": {"id_": "e0c48793-8bb6-47b2-ad51-071f27886f4a", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.4.1.mdx", "file_name": "4.4.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.4.1.mdx", "header_path": "/[4.4.1] [Social] Funding Request: ENS Ecosystem Working Group/Description/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.4.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ecosystem", "actual", "depend", "reserving", "reserved", "initiatives", "bounty", "cover", "reserves", "spending", "spend", "amounts"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "35762c48bc02e9af512ea3cf46c040f6c58e916b", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.4.1.mdx", "file_name": "4.4.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.4.1.mdx"}, "hash": "05b8cee077ad41cc259888397eb9233357e4517b1976ab4ba5d5f98b52f5e128", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "56b9e4aa-28b7-4e0c-b802-edacaad03bc9", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.4.1.mdx", "file_name": "4.4.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.4.1.mdx", "header_path": "/[4.4.1] [Social] Funding Request: ENS Ecosystem Working Group/Description/"}, "hash": "ce246e07cabb31c0da9fd00027d5e980f96bab19a70b00e82052534391b6e9b5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c16e2973-974b-42b5-87bd-151267951be7", "node_type": "1", "metadata": {"header_path": "/[4.4.1] [Social] Funding Request: ENS Ecosystem Working Group/Description/Reserved for Initiatives/"}, "hash": "dd34d3244a844b4132c99b0697863cc1a5d85e70d2eb0e03df2b18197bded21e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Reserved for Initiatives\n\nEcosystem reserves amounts to make sure we can cover initiatives that are important. Reserving is not the same as spending it. For example, we are reserving 250k for the bug bounty program. The actual spend will depend on what, if any, bugs are discovered.\n\n| Initiatives    | USDC | ETH |\n| :------------- | ---: | --: |\n| Grants         | 300k | 115 |\n| Bug Bounty     | 250k |   0 |\n| Hackathon      | 150k |  50 |\n| Audit Support  | 100k |   0 |\n| IRL            |  75k |   0 |\n| Newsletter     |  25k |   0 |\n| Reserved Total | 900k | 165 |\n\n**Reconciliation**\n| Initiatives|USDC|ETH|\n|:----|----:|----:|\n|Current Balance|741k| 249|\n|Reserved|(900k)| (165)|\n|Buffer|(250k)| (50)|\n|Total|(409k)|34 |\n\nAs result, Ecosystem WG is requesting 409,000 in USDC and zero ETH. This request ensures that there are sufficient resources to meet the expected future needs of the working group.", "mimetype": "text/plain", "start_char_idx": 2901, "end_char_idx": 3816, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c16e2973-974b-42b5-87bd-151267951be7": {"__data__": {"id_": "c16e2973-974b-42b5-87bd-151267951be7", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.4.1.mdx", "file_name": "4.4.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.4.1.mdx", "header_path": "/[4.4.1] [Social] Funding Request: ENS Ecosystem Working Group/Description/Reserved for Initiatives/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.4.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["discretionary", "expected", "description", "small", "builders", "initiatives", "support", "initiative", "breakdown", "fellowship", "grants"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "35762c48bc02e9af512ea3cf46c040f6c58e916b", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.4.1.mdx", "file_name": "4.4.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.4.1.mdx"}, "hash": "05b8cee077ad41cc259888397eb9233357e4517b1976ab4ba5d5f98b52f5e128", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e0c48793-8bb6-47b2-ad51-071f27886f4a", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.4.1.mdx", "file_name": "4.4.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.4.1.mdx", "header_path": "/[4.4.1] [Social] Funding Request: ENS Ecosystem Working Group/Description/"}, "hash": "9c23882dd6d866028062d23c87265f6b7e915bace8c23c9d7a03e9596732c6d8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cf42eb6b-e834-43e2-935b-50d68f1c3e80", "node_type": "1", "metadata": {"header_path": "/[4.4.1] [Social] Funding Request: ENS Ecosystem Working Group/Description/"}, "hash": "2cdbeb873f39af06e96cc109accdd7a33010b0df5545f404e03bbf7b12345876", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "#### Grants Breakdown\n\n| Item          |     USDC |     ETH |\n| ------------- | -------: | ------: |\n| eth.limo\\*\\*  |      85k |      10 |\n| ensgrants.xyz |      0.0 |      55 |\n| Fellowship    |      60k |       0 |\n| Discretionary |     155k |      50 |\n| **Total**     | **300k** | **115** |\n\n\\*\\* Expected to be paid in Q1 2024. ### Initiatives Description\n\n| Initiative     | Description                                                                                                                                                                                 |\n| -------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| Grants         | Grants support ens small grants funding, builders such as [eth.limo](https://eth.limo/), [unruggable](https://www.unruggablelabs.com/), library support, and other builder centric bounties |\n| Bug Bounty     | Supports the official bug bounty [program](https://docs.ens.domains/bug-bounty-program) of ENS -- soon to be managed by [immunifi](https://immunefi.com/)                                   |\n| Hackathons     | Sponsorship costs and prize money for hackathons and conferences                                                                                                                            |\n| Support        | Support mods for social platforms, technical and non-technical educational and archival content                                                                                             |\n| IRL            | Funding In Real Life events that coincide with the existing Ethereum event schedule                                                                                                         |\n| Merch          | Subsidizing the cost of creating and shipping physical ENS merchandise including shirts, hats, and pins                                                                                     |\n| ENS Fellowship | Supports exceptional developers actively creating and contributing to the ENS ecosystem with a 6 month Fellowship                                                                           |\n\nThis proposal was prepared by slobo.eth, lead steward of the ENS Ecosystem Working Group.", "mimetype": "text/plain", "start_char_idx": 3818, "end_char_idx": 4151, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fee47ba0-68e2-4921-b4b0-149d7ff72c7f": {"__data__": {"id_": "fee47ba0-68e2-4921-b4b0-149d7ff72c7f", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.4.2.mdx", "file_name": "4.4.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.4.2.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.4.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["group", "proposal", "passed", "funding", "working", "requests"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e1ab7ccac835860ee87e5c897299d2f05e12ce65", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.4.2.mdx", "file_name": "4.4.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.4.2.mdx"}, "hash": "bc500c20576383110593f3e9e4107a0d94b5fd59197b28c13bba04a4ff3bb15c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6d233ad9-6119-427d-a9e2-52d407bbf630", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "991140be14af2d90231f4ebd3b949e4f107b110dfdbf69373bedb488910c2161", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: 'This proposal requests funding for the ENS Meta-Goverance Working Group.'\nauthors: ['katherine.eth']\nproposal:\n  discourse: '17994'\n  type: 'social'\n  snapshot: '0x5c0d103911aaaa64ee33fc35aa30bffd7c1ca04ac2df85fb274414732c45a6f9'\n--- # [4.4.2] [Social] Funding Request: ENS Meta-Goverance Working Group\n\n::authors\n\n| **Status**            | Passed                                                                                                                   |\n| --------------------- | ------------------------------------------------------------------------------------------------------------------------ |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/17994)                                                                             |\n| **Votes**             | [Snapshot](https://snapshot.box/#/s:ens.eth/proposal/0x5c0d103911aaaa64ee33fc35aa30bffd7c1ca04ac2df85fb274414732c45a6f9) |", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 251, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cd3053ec-61fb-4350-8610-6d531554e2eb": {"__data__": {"id_": "cd3053ec-61fb-4350-8610-6d531554e2eb", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.4.2.mdx", "file_name": "4.4.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.4.2.mdx", "header_path": "/[4.4.2] [Social] Funding Request: ENS Meta-Goverance Working Group/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.4.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["operations", "means", "group", "abstract", "march", "requesting", "funds", "below", "funding", "working", "until", "requests"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e1ab7ccac835860ee87e5c897299d2f05e12ce65", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.4.2.mdx", "file_name": "4.4.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.4.2.mdx"}, "hash": "bc500c20576383110593f3e9e4107a0d94b5fd59197b28c13bba04a4ff3bb15c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6d233ad9-6119-427d-a9e2-52d407bbf630", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.4.2.mdx", "file_name": "4.4.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.4.2.mdx", "header_path": "/"}, "hash": "6e6cc72885262c4ed0b45cc1ff1cd5350dcecaec29e146927e9c77b030365cea", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "62c40d78-eb5f-4112-99b0-c4bffdbfc56c", "node_type": "1", "metadata": {"header_path": "/[4.4.2] [Social] Funding Request: ENS Meta-Goverance Working Group/"}, "hash": "bf6baf44cb2c67f043c130e0846dc395334f25063b757a1710df1572d2e0d2f7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Abstract\n\nThe ENS Meta-Governance Working Group requests funding of the below to **support operations until the March 2024 funding window**. This means the Working Group will not be requesting funds in the January 2024 Funding Window.\n\nThe Meta-Governance Working Group is responsible for providing governance oversight and supporting the management and operation of working groups through DAO tooling and governance initiatives as well as treasury management for the DAO.\n\nThis social proposal is submitted to satisfy the requirements set out in Rule 10.1.1 of the Working Group Rules ([EP 1.8](https://docs.ens.domains/v/governance/governance-proposals/term-1/ep12-working-group-rules)). If this proposal is passed, the funding request will be included in a collective executable proposal put forward by all three Working Groups.", "mimetype": "text/plain", "start_char_idx": 931, "end_char_idx": 1765, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "62c40d78-eb5f-4112-99b0-c4bffdbfc56c": {"__data__": {"id_": "62c40d78-eb5f-4112-99b0-c4bffdbfc56c", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.4.2.mdx", "file_name": "4.4.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.4.2.mdx", "header_path": "/[4.4.2] [Social] Funding Request: ENS Meta-Goverance Working Group/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.4.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["metagov", "expected", "description", "october", "address", "current", "hyperlinked", "balances", "multisig", "wallet", "names", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e1ab7ccac835860ee87e5c897299d2f05e12ce65", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.4.2.mdx", "file_name": "4.4.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.4.2.mdx"}, "hash": "bc500c20576383110593f3e9e4107a0d94b5fd59197b28c13bba04a4ff3bb15c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cd3053ec-61fb-4350-8610-6d531554e2eb", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.4.2.mdx", "file_name": "4.4.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.4.2.mdx", "header_path": "/[4.4.2] [Social] Funding Request: ENS Meta-Goverance Working Group/"}, "hash": "7de811d529c077c2869948c70f380bb6b171a50457106de40b4fb268ae4d3f92", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c82c8e8a-244a-4500-a955-8e2d2f13843a", "node_type": "1", "metadata": {"header_path": "/[4.4.2] [Social] Funding Request: ENS Meta-Goverance Working Group/"}, "hash": "0711cd3f17ad834e45c4247840403d1b17238009c74456dd7741eaefe7697e3e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\n|                            |   USDC    | ETH |  $ENS  |\n| -------------------------- | :-------: | :-: | :----: |\n| ENS Meta-Gov Main Multisig | 376,000\\t | 40  | 52,300 |\n\n--- ## Description ### Current Metagov Wallet Balances\n\n(Values expected as of October 20th, 2023 - Use hyperlinked wallet names to see current balances)\n| Address | ETH | USDC | $ENS |\n| ---------------------------------------------------------------------------------------------------- | --- | ------- | ----- |\n| [ens-metagov.pod.xyz](https://etherscan.io/address/0x91c32893216dE3eA0a55ABb9851f581d4503d39b) | 1.2\\* | 162,653 | 1,990 |\n| [ens-governance.pod.xyz](https://etherscan.io/address/0x4f4cAdb8AF8F1d463240c2b93952D8a16688a818) | 32 | 83,500 | 1,250 |\n| [ens-daotooling.pod.xyz](https://etherscan.io/address/0x8f730f4aC5fd234df9993E0E317f07e44fb869C1) | 0 | 85,993 | |\n| [ens-endowmentfees.pod.xyz](https://etherscan.io/address/0x83DD97A584C4aD50015f7aA6B48bf4970A056d8f) | 86.69 | | |\n\n\\*As of 10/18 this wallet also temporarily holds the 117 ETH being distributed via [ [EP4.3] [Executable] Refund .eth names affected by normalization updates](https://discuss.ens.domains/t/ep4-3-executable-refund-eth-names-affected-by-normalization-updates/17622)\n\n---", "mimetype": "text/plain", "start_char_idx": 1767, "end_char_idx": 1963, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b30daaf7-5d8b-486f-8100-daae8f61c7c2": {"__data__": {"id_": "b30daaf7-5d8b-486f-8100-daae8f61c7c2", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.4.2.mdx", "file_name": "4.4.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.4.2.mdx", "header_path": "/[4.4.2] [Social] Funding Request: ENS Meta-Goverance Working Group/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.4.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["final", "expenditures", "critical", "depends", "funds", "aside", "strive", "coverage", "pending", "ensure", "spending", "while", "estimate", "mission"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e1ab7ccac835860ee87e5c897299d2f05e12ce65", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.4.2.mdx", "file_name": "4.4.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.4.2.mdx"}, "hash": "bc500c20576383110593f3e9e4107a0d94b5fd59197b28c13bba04a4ff3bb15c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "01df2ec7-e0d1-4640-adbd-5f51f200733c", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.4.2.mdx", "file_name": "4.4.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.4.2.mdx", "header_path": "/[4.4.2] [Social] Funding Request: ENS Meta-Goverance Working Group/Description/"}, "hash": "0003323ad167ff65a54f1298ae80b00157edf5fa6dd4bd3b62bb4d8a0f3d4629", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "352bf6b0-63ea-4132-b0ca-f50dc0d3a7b0", "node_type": "1", "metadata": {"header_path": "/[4.4.2] [Social] Funding Request: ENS Meta-Goverance Working Group/Expenditures/"}, "hash": "762f4fd4821b27aa41f789c413591622c90397e49130efa47f37babb1a69283c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Expenditures\n\nMeta-Gov sets aside funds to ensure coverage for critical mission initiatives. While we strive to estimate term expenditures accurately, the final spending depends on pending initiatives. We anticipate that Final Expenditures will not surpass the Expected Expenses allocated for the term. ### Expected Expenses through March 2024\n\n|                                  | USDC        | ETH    | $ENS       |\n| -------------------------------- | ----------- | ------ | ---------- |\n| Steward + Secretary Compensation | 276,000     | -      |            |\n| Governance                       | 50,000      | -      | 52,300     |\n| DAO Tooling                      | 50,000      | 30     | -          |\n| DAO Sponsorship                  | -           | 10     | -          |\n| Discretionary                    | -           | -      | -          |\n| **Total Balance**                | **376,000** | **40** | **52,300** |", "mimetype": "text/plain", "start_char_idx": 3031, "end_char_idx": 3336, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "30732d8b-472f-49ba-b3e5-292f65ccff8a": {"__data__": {"id_": "30732d8b-472f-49ba-b3e5-292f65ccff8a", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.4.2.mdx", "file_name": "4.4.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.4.2.mdx", "header_path": "/[4.4.2] [Social] Funding Request: ENS Meta-Goverance Working Group/Expenditures/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.4.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["friction", "group", "description", "reducing", "totalling", "include", "reimbursements", "initiatives", "working", "related", "secretary", "steward", "compensation", "governance"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e1ab7ccac835860ee87e5c897299d2f05e12ce65", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.4.2.mdx", "file_name": "4.4.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.4.2.mdx"}, "hash": "bc500c20576383110593f3e9e4107a0d94b5fd59197b28c13bba04a4ff3bb15c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "352bf6b0-63ea-4132-b0ca-f50dc0d3a7b0", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.4.2.mdx", "file_name": "4.4.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.4.2.mdx", "header_path": "/[4.4.2] [Social] Funding Request: ENS Meta-Goverance Working Group/Expenditures/"}, "hash": "1cb86d77f715735ea11d28700ade2c382aa56354ef53cc880f3fa2c7efb511e0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Description of Initiatives/Pods\n\n**Steward + Secretary Compensation**: Working Group Steward and Secretary compensation totalling $276,000 USDC.\n\n**Governance**: Fee reimbursements and initiatives related to reducing friction in the governance process. This can also include $ENS distributed in order to lower barriers to the governance proposal process.\n\n**DAO Tooling**: Developing interfaces and dashboards to improve the governance process and increase transparency across the DAO.\n\n**DAO Sponsorship**: Sponsoring DAO-specific events such as DAO NYC, DAO Tokyo, or others that fit the criteria.\n\n**Discretionary**: Funds distributed at the discretion of stewards towards new initiatives + governance experiments.\n\n---\n\nThis proposal was prepared by katherine.eth, lead steward of the ENS Meta-Governance Working Group.", "mimetype": "text/plain", "start_char_idx": 3965, "end_char_idx": 4792, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f824e608-c5e2-4429-96e7-32094840e584": {"__data__": {"id_": "f824e608-c5e2-4429-96e7-32094840e584", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.4.3.mdx", "file_name": "4.4.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.4.3.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.4.3.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["requests", "group", "proposal", "passed", "public", "funding", "working", "goods"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f482e39f0eb278080809d7d4f71b2b92b368b0dc", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.4.3.mdx", "file_name": "4.4.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.4.3.mdx"}, "hash": "e684d9becc7d53cfe5bf3beba300b9f771455a83af4991d813a682f713770a03", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4990858b-71fc-4df2-b549-30d7a86a7581", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "5b9a1e7eca494a7da3743c20a700f2578b4f5b025e537d59296b55bb031af4c0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: 'This proposal requests funding for the ENS Public Goods Working Group.'\nauthors: ['coltron.eth']\nproposal:\n  discourse: '17996'\n  snapshot: '0x0a7bec3cd182dadbd043e77cf7a610a6e33c5228fabe407cb89c632b578b83a9'\n  type: 'social'\n--- # [4.4.3] [Social] Funding Request: Public Goods Working Group\n\n::authors\n\n| **Status**            | Passed                                                                                                                   |\n| --------------------- | ------------------------------------------------------------------------------------------------------------------------ |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/17996)                                                                             |\n| **Votes**             | [Snapshot](https://snapshot.box/#/s:ens.eth/proposal/0x0a7bec3cd182dadbd043e77cf7a610a6e33c5228fabe407cb89c632b578b83a9) |", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 247, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "272139c0-562f-4f24-b93a-e26390e2aa9a": {"__data__": {"id_": "272139c0-562f-4f24-b93a-e26390e2aa9a", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.4.3.mdx", "file_name": "4.4.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.4.3.mdx", "header_path": "/[4.4.3] [Social] Funding Request: Public Goods Working Group/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.4.3.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["operations", "goods", "group", "abstract", "march", "public", "below", "working", "funding", "until", "requests", "intends"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f482e39f0eb278080809d7d4f71b2b92b368b0dc", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.4.3.mdx", "file_name": "4.4.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.4.3.mdx"}, "hash": "e684d9becc7d53cfe5bf3beba300b9f771455a83af4991d813a682f713770a03", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4990858b-71fc-4df2-b549-30d7a86a7581", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.4.3.mdx", "file_name": "4.4.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.4.3.mdx", "header_path": "/"}, "hash": "f68f38bd467dd9f91372218f0813d8cb7d44fc2cf4e6b0c73f474205899dfaaa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cdcaa058-bdff-4bf2-975c-830619481f1c", "node_type": "1", "metadata": {"header_path": "/[4.4.3] [Social] Funding Request: Public Goods Working Group/"}, "hash": "25137cd0b82dc9ba3e13830aa4ee4eb30953349180bdafa36ece66367943b5ea", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Abstract\n\nThe ENS Public Goods Working Group requests funding of the below to **support operations until the March 2024 funding window**. The Working Group intends to refrain from requesting funds in the upcoming January 2024 Funding Window.\n\nThe Public Goods Working Group is responsible for supporting projects and builders as provisioned by Article III of the ENS DAO Constitution, which provides direction for the DAO to fund public goods that benefit the broader Ethereum and Web3 Ecosystems.\n\nThis social proposal is submitted to satisfy the requirements set out in Rule 10.1.1 of the Working Group Rules ([EP 1.8](https://docs.ens.domains/v/governance/governance-proposals/term-1/ep12-working-group-rules)). If this proposal is passed, the funding request will be included in a collective executable proposal put forward by all three Working Groups.", "mimetype": "text/plain", "start_char_idx": 921, "end_char_idx": 1780, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cdcaa058-bdff-4bf2-975c-830619481f1c": {"__data__": {"id_": "cdcaa058-bdff-4bf2-975c-830619481f1c", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.4.3.mdx", "file_name": "4.4.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.4.3.mdx", "header_path": "/[4.4.3] [Social] Funding Request: Public Goods Working Group/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.4.3.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["amount", "requested", "treasury", "anticipated", "march", "public", "budgetary", "fulfil", "multisig", "goods", "needs", "through", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f482e39f0eb278080809d7d4f71b2b92b368b0dc", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.4.3.mdx", "file_name": "4.4.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.4.3.mdx"}, "hash": "e684d9becc7d53cfe5bf3beba300b9f771455a83af4991d813a682f713770a03", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "272139c0-562f-4f24-b93a-e26390e2aa9a", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.4.3.mdx", "file_name": "4.4.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.4.3.mdx", "header_path": "/[4.4.3] [Social] Funding Request: Public Goods Working Group/"}, "hash": "4d45339d45fd4e045701abd05a9aa2f31f00b2c5cadfea7749bc55458ce99d30", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "33c69d6e-43e8-4bfb-9a25-c6b9fbb247bb", "node_type": "1", "metadata": {"header_path": "/[4.4.3] [Social] Funding Request: Public Goods Working Group/"}, "hash": "7e4e291af8172087a7d54f892cd4c4016eb9a14c59a41bf0b91437a8cf2a7622", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\nThis specification is the amount requested from the DAO treasury to the Public Goods Multisig to fulfil anticipated budgetary needs through March 2024.\n| | USDC | ETH| $ENS |\n| ---- | :----: | :----: | :----:|\n| Amount Requested from DAO| 218,204 | 35 | 0 |\n\n--- ## Description ### Current Public Goods Wallet Balance\n\n(Values expected as of October 20th, 2023 - Use hyperlinked wallet names to see current balances.)\n| Address | USDC | ETH | $ENS |\n| ---------------------------------------------------------------------------------------------------- | --- | ------- | ----- |\n| [ens-publicgoods.pod.xyz](0xcD42b4c4D102cc22864e3A1341Bb0529c17fD87d) | 184,796 | 25 | 1,352 |\n\n---", "mimetype": "text/plain", "start_char_idx": 1782, "end_char_idx": 2062, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c729c807-07bd-4d0d-9ea9-0320d20d7151": {"__data__": {"id_": "c729c807-07bd-4d0d-9ea9-0320d20d7151", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.4.3.mdx", "file_name": "4.4.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.4.3.mdx", "header_path": "/[4.4.3] [Social] Funding Request: Public Goods Working Group/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.4.3.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["discretionary", "events", "projected", "expected", "hackathons", "march", "small", "expenses", "grants", "large", "through", "expenditures"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f482e39f0eb278080809d7d4f71b2b92b368b0dc", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.4.3.mdx", "file_name": "4.4.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.4.3.mdx"}, "hash": "e684d9becc7d53cfe5bf3beba300b9f771455a83af4991d813a682f713770a03", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3bec77e5-9f42-4499-8852-43f11c5181df", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.4.3.mdx", "file_name": "4.4.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.4.3.mdx", "header_path": "/[4.4.3] [Social] Funding Request: Public Goods Working Group/Description/"}, "hash": "2d0da3ad61f0641d3181ed4ca99a2b1a8d87fc92fd20b707f2c9f2111c75c248", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "972b35c8-2a1c-4ab9-84fa-5aaef42b7018", "node_type": "1", "metadata": {"header_path": "/[4.4.3] [Social] Funding Request: Public Goods Working Group/Expenditures/"}, "hash": "a92016d9e5aea00bbf5aae0e2e687ebe011d96bb8a202c18760afa174a8f00c4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Expenditures ### Expected Expenses through March 2024\n\n|                              | USDC        | ETH    | $ENS      |\n| ---------------------------- | ----------- | ------ | --------- |\n| Large Grants                 | 300,000     | -      | -         |\n| Small Grants                 | -           | 45     | -         |\n| Events & Hackathons          | 50,000      | -      | -         |\n| Discretionary                | 53,000      | 15     | -         |\n| **Total Projected Expenses** | **403,000** | **60** | **1,352** |", "mimetype": "text/plain", "start_char_idx": 2484, "end_char_idx": 2499, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "659c02d1-9cb6-49b7-829c-e1a53de4162d": {"__data__": {"id_": "659c02d1-9cb6-49b7-829c-e1a53de4162d", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.4.3.mdx", "file_name": "4.4.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.4.3.mdx", "header_path": "/[4.4.3] [Social] Funding Request: Public Goods Working Group/Expenditures/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.4.3.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["accepted", "allocated", "basis", "description", "rolling", "applications", "throughout", "grants", "resuming", "large", "through", "should"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f482e39f0eb278080809d7d4f71b2b92b368b0dc", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.4.3.mdx", "file_name": "4.4.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.4.3.mdx"}, "hash": "e684d9becc7d53cfe5bf3beba300b9f771455a83af4991d813a682f713770a03", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "972b35c8-2a1c-4ab9-84fa-5aaef42b7018", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.4.3.mdx", "file_name": "4.4.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.4.3.mdx", "header_path": "/[4.4.3] [Social] Funding Request: Public Goods Working Group/Expenditures/"}, "hash": "d1b071417e8487d8d33e41e322d9409065fc2778ff607c34cf85ab42af24598e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ab68a89f-4207-4754-83b0-fd572c3ed60d", "node_type": "1", "metadata": {"header_path": "/[4.4.3] [Social] Funding Request: Public Goods Working Group/Expenditures/Description of Initiatives/Pods/"}, "hash": "c613f9e1c5006a60ddc56e4ed5b88ba4e49a0081416ef5b405e2c5d516fe6c55", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Description of Initiatives/Pods #### Large Grants\n\nGrants up to 50k USDC with applications accepted on a rolling basis throughout the term. Large Grants are resuming in Q4 2023 and should be allocated through Q1 2024. #### Small Grants\n\nMultiple micro-grants voted on by the community. Small Grants is resuming this term with modifications to the voting format. Three rounds, totalling 15 ETH each, are expected to occur until March 2023. #### Events and Hackathons\n\nThe working group will provide support to Public Goods events and hackathons. Following discussions around hackathon opportunities, we want to ensure we have availing funding if requests arise.", "mimetype": "text/plain", "start_char_idx": 3020, "end_char_idx": 3055, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3c39d8f1-0d05-45cc-bdbc-d913a82cc21a": {"__data__": {"id_": "3c39d8f1-0d05-45cc-bdbc-d913a82cc21a", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.4.3.mdx", "file_name": "4.4.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.4.3.mdx", "header_path": "/[4.4.3] [Social] Funding Request: Public Goods Working Group/Expenditures/Description of Initiatives/Pods/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.4.3.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["discretionary", "category", "group", "include", "stewards", "funds", "reserved", "expenses", "working", "unexpected", "discretion", "spending", "grants", "unforeseen"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f482e39f0eb278080809d7d4f71b2b92b368b0dc", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.4.3.mdx", "file_name": "4.4.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.4.3.mdx"}, "hash": "e684d9becc7d53cfe5bf3beba300b9f771455a83af4991d813a682f713770a03", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b8da93b0-5451-4c82-95bb-00a5bcbd122e", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.4.3.mdx", "file_name": "4.4.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.4.3.mdx", "header_path": "/[4.4.3] [Social] Funding Request: Public Goods Working Group/Expenditures/Description of Initiatives/Pods/"}, "hash": "18870b27a6ab7a378a95097bc7625c67b139318130fd9917db182365a564c7ac", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "#### Discretionary\n\nThe funds in this category are reserved for unforeseen grants and unexpected expenses for the term. Spending in this category is at the discretion of the working group stewards and may include grants not listed but in alignment with the purpose of this working group.\n\n---\n\nThis proposal was prepared by coltron.eth, lead steward of the ENS Public Goods Working Group. ---\ndescription: 'This proposal introduces new actions and strategies to the Endowment with the aim of enhancing diversification and adapting to current market conditions. Notable additions include ETH-neutral strategy.'\nauthors: ['karpatkey']\nproposal:\n  discourse: '18036'\n  tally: '15706104363492914432572227540113855373051896881975394006732444538096386655538'\n  type: 'executable'\n---", "mimetype": "text/plain", "start_char_idx": 3689, "end_char_idx": 4077, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f8e05795-3625-4fba-8e3a-25bfe17e993b": {"__data__": {"id_": "f8e05795-3625-4fba-8e3a-25bfe17e993b", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.5.mdx", "file_name": "4.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.5.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.5.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["karpatkey", "endowment", "passed", "update", "permissions"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "47275a3f3fa887ab77778303ed52fb8a1775f26b", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.5.mdx", "file_name": "4.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.5.mdx"}, "hash": "8c4c803348f0351abc2013c8f03857327f22dd7b1c90740b77aa71685ebe5e5f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "56ed2cb9-e545-4c1b-8fed-5e6bdb9262e6", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.5.mdx", "file_name": "4.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.5.mdx", "header_path": "/"}, "hash": "7e03e1dbbb9b8264c85d987879fd9b3d5901f4b856843d4ad291953aa628d021", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3ac4813b-f90a-46c9-9bff-5626d8330201", "node_type": "1", "metadata": {"header_path": "/[EP4.5] [Executable] Endowment permissions to karpatkey - Update 3/"}, "hash": "f101ff8a013262cea4632c63929896f774fb868e8a6981e0da9fc59b7a99c39b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# [EP4.5] [Executable] Endowment permissions to karpatkey - Update 3\n\n::authors\n\n| **Status**            | Passed                                                                                                                        |\n| --------------------- | ----------------------------------------------------------------------------------------------------------------------------- |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/18036)                                                                                  |\n| **Votes**             | [Tally](https://www.tally.xyz/gov/ens/proposal/15706104363492914432572227540113855373051896881975394006732444538096386655538) |", "mimetype": "text/plain", "start_char_idx": 390, "end_char_idx": 1086, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3ac4813b-f90a-46c9-9bff-5626d8330201": {"__data__": {"id_": "3ac4813b-f90a-46c9-9bff-5626d8330201", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.5.mdx", "file_name": "4.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.5.mdx", "header_path": "/[EP4.5] [Executable] Endowment permissions to karpatkey - Update 3/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.5.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["introduces", "strategies", "endowment", "abstract", "proposal", "diversification", "current", "market", "actions", "include", "adapting", "enhancing", "additions", "notable"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "47275a3f3fa887ab77778303ed52fb8a1775f26b", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.5.mdx", "file_name": "4.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.5.mdx"}, "hash": "8c4c803348f0351abc2013c8f03857327f22dd7b1c90740b77aa71685ebe5e5f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f8e05795-3625-4fba-8e3a-25bfe17e993b", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.5.mdx", "file_name": "4.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.5.mdx", "header_path": "/"}, "hash": "3098a02a9a7b1810dd304fb54ee11eded588ed86bc84cc4c4d8445505eb8e44c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e86a647c-ba38-411b-93a3-5ebd26710417", "node_type": "1", "metadata": {"header_path": "/[EP4.5] [Executable] Endowment permissions to karpatkey - Update 3/"}, "hash": "17f5a5812fe8a1058994907fb30377b2319c5798521e6ade23e9ca98b4ffb159", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Abstract\n\nThis proposal introduces new actions and strategies to the Endowment with the aim of enhancing diversification and adapting to current market conditions. Notable additions include ETH-neutral strategies involving Liquid Staking Protocols and established Money Markets. ## Motivation\n\nFollowing the successful approval of [E.P. 4.2](https://www.tally.xyz/gov/ens/proposal/10686228418271748393758532071249002330319730525037728746406757788787068261444), the second tranche of the Endowment was funded with 16,000 ETH. Community feedback during the E.P. 4.2 voting window indicated a desire to reduce exposure to Lido due to concerns about centralization risks in the network. While diversifying ETH-neutral holdings was already underway, the need for further diversification and divestment from Lido became clear during [community discussions](https://discuss.ens.domains/t/4-2-executable-fund-the-endowment-second-tranche/17743) and the last [Meta-gov call](https://discuss.ens.domains/t/metagov-working-group-weekly-meeting-11am-et-tuesday/15981/43#h-2-endowment-discussion-karpatkey-steakhouse-10) before the vote's closure. Consequently, karpatkey and @steakhouse proposed a 20% cap on Lido's maximum allocation within the ETH-neutral portfolio, set to be achieved by month-end. This proposal's goal is to introduce new strategies for deploying the remaining 80% of the funds as well as other minor maintenance actions.", "mimetype": "text/plain", "start_char_idx": 1088, "end_char_idx": 1369, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5b1cbb6f-f082-45c1-998f-de5b5305402d": {"__data__": {"id_": "5b1cbb6f-f082-45c1-998f-de5b5305402d", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.5.mdx", "file_name": "4.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.5.mdx", "header_path": "/[EP4.5] [Executable] Endowment permissions to karpatkey - Update 3/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.5.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["deposit", "removal", "cowswap", "spark", "sushiswap", "added", "compound", "stake", "specification", "permissions", "addition"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "47275a3f3fa887ab77778303ed52fb8a1775f26b", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.5.mdx", "file_name": "4.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.5.mdx"}, "hash": "8c4c803348f0351abc2013c8f03857327f22dd7b1c90740b77aa71685ebe5e5f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e86a647c-ba38-411b-93a3-5ebd26710417", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.5.mdx", "file_name": "4.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.5.mdx", "header_path": "/[EP4.5] [Executable] Endowment permissions to karpatkey - Update 3/"}, "hash": "52165b61f5612284f07347bbc77830951e4c903cba4b0e3f2ea1a71c34067b99", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ccd37ea0-5d24-404e-bc9c-bf9815b46de1", "node_type": "1", "metadata": {"header_path": "/[EP4.5] [Executable] Endowment permissions to karpatkey - Update 3/Specification/"}, "hash": "ed5f774261479a40616bae7e69356641063d2c4b49b04e708b541159c826c14c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\nPermissions to be added in this proposal:\n\n1. Deposit ETH on Compound v3;\n2. Deposit ETH or WETH on AAVE v3;\n3. Deposit ETH or WETH on Spark Protocol;\n4. Stake (and unstake) ETH on Stader;\n5. Stake (and unstake) ETH on Ankr;\n6. Removal of CowSwap permissions;\n7. Removal of SushiSwap permissions;\n8. Addition of an alternative getReward() for Aura pools;\n9. Swaps:\n   1. rETH &lt;&gt; WETH on Balancer;\n   2. rETH &lt;&gt; WETH on Uniswap v3;\n   3. ankrETH &lt;&gt; wstETH on Balancer;\n   4. ETHx &lt;&gt; WETH on Balancer;\n   5. ankrETH &lt;&gt; ETH on Curve;\n   6. ETHx &lt;&gt; WETH on Pancake Swap", "mimetype": "text/plain", "start_char_idx": 2524, "end_char_idx": 3143, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ccd37ea0-5d24-404e-bc9c-bf9815b46de1": {"__data__": {"id_": "ccd37ea0-5d24-404e-bc9c-bf9815b46de1", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.5.mdx", "file_name": "4.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.5.mdx", "header_path": "/[EP4.5] [Executable] Endowment permissions to karpatkey - Update 3/Specification/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.5.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["encourage", "updated", "granted", "auditing", "revocations", "proposed", "version", "highlighting", "green", "additions", "marked", "permissions", "process", "releasing"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "47275a3f3fa887ab77778303ed52fb8a1775f26b", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.5.mdx", "file_name": "4.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.5.mdx"}, "hash": "8c4c803348f0351abc2013c8f03857327f22dd7b1c90740b77aa71685ebe5e5f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5b1cbb6f-f082-45c1-998f-de5b5305402d", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.5.mdx", "file_name": "4.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.5.mdx", "header_path": "/[EP4.5] [Executable] Endowment permissions to karpatkey - Update 3/"}, "hash": "6a173fa10d33afa2c9ffd5e102ef9d419830246ba18a46f751957c4cd39d2efe", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Auditing Process\n\nWe are releasing an updated version of the [\"Preset Permissions - ENS Endowment\"](https://docs.google.com/document/d/1Ker_TkBJV0xmQ9Li9HB-vtdlpx1vEeVEQwpIH6WoK0o/edit?usp=sharing) document, highlighting all permissions granted to karpatkey, with proposed additions marked in green and revocations in red. We encourage community members with technical expertise to review and provide feedback on the preset update [payload](https://gist.github.com/santinomics/5b43dee4839d74e2c593ac9e7c7d1d3d).\n\nIn the auditing realm, significant progress has been made, with a [new version](https://zodiac-roles-1h9v0miw9-gnosis-guild.vercel.app/gor%3A0x74F819Fa1D95B57a15ECDEf9ce5c779C1bD6cc8A/roles/test-role/diff/4Iq1jdNbLbCBKmLAKciGaDQANiHStkCqFvJJ5KWQc) of the Zodiac Roles Modifier app developed by Gnosis Guild. When fully operational, this app will allow users to input a payload and check the before-and-after status of permissions presets, enhancing the auditing process.\n\nFurthermore, we're actively engaged in collaborative efforts with potential partners to create a user-friendly audit report, enhancing openness for all stakeholders involved in the process. In our commitment to transparency, we're taking an additional step by offering a [self-audit report](https://github.com/karpatkey/gists/blob/main/Self%20Audit_%20%5BENS%5D%20-%20PUR%20%233%20-%20New%20ETH-Neutral%20Strategies.md). This report sheds light on our internal procedures for assessing proposed permissions and changes, providing further insight into our practices.", "mimetype": "text/plain", "start_char_idx": 3145, "end_char_idx": 4699, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a0a45d3a-dcc2-4154-8346-da0f27e4ddb6": {"__data__": {"id_": "a0a45d3a-dcc2-4154-8346-da0f27e4ddb6", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.6.mdx", "file_name": "4.6.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.6.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.6.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["executes", "group", "october", "proposal", "three", "passed", "working", "funding", "requests"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4d4699de4e69af7e3f9820abb1d35918d3c54741", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.6.mdx", "file_name": "4.6.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.6.mdx"}, "hash": "4981f6abd9bc73ee4708e320ea3ff5d27dd02e591010bd043ea32147dda56a12", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9755f672-2d97-451f-9080-964f0d066451", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "c341007efc26e3238771a535c34f2fe60cf203f8b6083a6546e5e5b5eeed89c3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: 'This proposal executes all three Working Group funding requests for the October 2023 funding window.'\nauthors: ['5pence.eth']\nproposal:\n  discourse: '18064'\n  type: 'executable'\n--- # [EP4.6] [Executable] October 2023 Working Group Funding\n\n::authors\n\n| **Status**            | Passed                                                                                                                    |\n| --------------------- | ------------------------------------------------------------------------------------------------------------------------- |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/18064)                                                                              |\n| **Votes**             | [Agora](https://agora.ensdao.org/proposals/97815480450036429026998617227498389389237567897899533433380564585906006968770) |\n\nThis proposal executes all three Working Group funding requests for the October 2023 funding window as passed in EP 4.4.1, EP 4.4.2, and EP 4.4.3. For more detail, view the ENS Governance docs at [https://basics.ensdao.org](https://basics.ensdao.org) 1 [Draft Discourse link](https://discuss.ens.domains/t/ep-4-6-executable-october-2023-working-group-funding/18064)", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 199, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c01a4a0c-765f-425d-bfb8-9f2c20ce5280": {"__data__": {"id_": "c01a4a0c-765f-425d-bfb8-9f2c20ce5280", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.6.mdx", "file_name": "4.6.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.6.mdx", "header_path": "/[EP4.6] [Executable] October 2023 Working Group Funding/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.6.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ecosystem", "group", "abstract", "growing", "responsible", "improving", "working", "funding", "requests"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4d4699de4e69af7e3f9820abb1d35918d3c54741", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.6.mdx", "file_name": "4.6.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.6.mdx"}, "hash": "4981f6abd9bc73ee4708e320ea3ff5d27dd02e591010bd043ea32147dda56a12", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9755f672-2d97-451f-9080-964f0d066451", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.6.mdx", "file_name": "4.6.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.6.mdx", "header_path": "/"}, "hash": "46a4f45131e656f8f2ad3e591be9b4db6036713db95eee23aee7ebdcf667fd10", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f387c7d9-4f4d-491b-948f-20c36261a238", "node_type": "1", "metadata": {"header_path": "/[EP4.6] [Executable] October 2023 Working Group Funding/"}, "hash": "49d6fa52dec9ab4d28b8198bd0c4051c6e4eff32a5c9f6887ecbb7c126fcc5ce", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Abstract ## [EP 4.4.1 \u2014 ENS Ecosystem Working Group](https://discuss.ens.domains/t/4-4-1-social-funding-request-ens-ecosystem-working-group/17995)\n\nThe ENS Ecosystem Working Group requests funding of **409,000 USDC** from the ENS DAO treasury.\n\nThe ENS Ecosystem Working Group is responsible for growing and improving the ENS Ecosystem by funding people and projects that are ENS-specific or ENS-centric. In line with Article III of the ENS DAO Constitution, the requested funds will be used to support projects and builders contributing to the development and improvement of the ENS protocol and the ENS ecosystem.", "mimetype": "text/plain", "start_char_idx": 1239, "end_char_idx": 1250, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a18b83e2-4f03-4dc5-b899-1dc0ac582452": {"__data__": {"id_": "a18b83e2-4f03-4dc5-b899-1dc0ac582452", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.6.mdx", "file_name": "4.6.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.6.mdx", "header_path": "/[EP4.6] [Executable] October 2023 Working Group Funding/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.6.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["processes", "metagovernance", "group", "funding", "working", "support", "manage", "requests", "build", "governance"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4d4699de4e69af7e3f9820abb1d35918d3c54741", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.6.mdx", "file_name": "4.6.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.6.mdx"}, "hash": "4981f6abd9bc73ee4708e320ea3ff5d27dd02e591010bd043ea32147dda56a12", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f387c7d9-4f4d-491b-948f-20c36261a238", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.6.mdx", "file_name": "4.6.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.6.mdx", "header_path": "/[EP4.6] [Executable] October 2023 Working Group Funding/"}, "hash": "ac7b9a5bee40c21b3af67aaf790652e4f262fd9357d83fa5bab998f1f4fc0de6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d1911c3f-b6a3-49d1-9404-e6d193e2ee2f", "node_type": "1", "metadata": {"header_path": "/[EP4.6] [Executable] October 2023 Working Group Funding/"}, "hash": "61d5d7d0f4488b1dadc3ff5b090bcbddb3ea0a6cc21006ab086b275bf7de8d75", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## [EP 4.4.2 \u2014 MetaGovernance Working Group](https://discuss.ens.domains/t/4-4-2-social-funding-request-ens-meta-goverance-working-group/17994)\n\nThe Meta-Governance Working Group requests funding of **376,000 USDC, 40 ETH, and 52,300 $ENS** from the ENS DAO treasury.\n\nThis MetaGovernance Working Group will use this funding to support the governance processes of the ENS DAO as well as manage and build infrastructure to support the ENS DAO and Working Groups. ## [EP 4.4.3 \u2014 Public Goods Working Group](https://discuss.ens.domains/t/4-4-3-social-funding-request-ens-public-goods-working-group/17996?u=5pence.eth)\n\nThe ENS Public Goods Working Group requests funding of **218,204 USDC, and 35 ETH** from the ENS DAO treasury.\n\nThe Public Goods Working Group will be use this funding to support projects and builders as provisioned by Article III of the ENS DAO Constitution, which provides for the funding of public goods in web3.", "mimetype": "text/plain", "start_char_idx": 1860, "end_char_idx": 2321, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fca28c76-e83f-4417-96b2-c1325b2be025": {"__data__": {"id_": "fca28c76-e83f-4417-96b2-c1325b2be025", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.6.mdx", "file_name": "4.6.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.6.mdx", "header_path": "/[EP4.6] [Executable] October 2023 Working Group Funding/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.6.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["structure", "0xcd42b4c4d102cc22864e3a1341bb0529c17fd87d", "addresses", "0x2686a8919df194aa7673244549e68d42c1685d03", "transfers", "proposal", "transfer", "following", "0x91c32893216de3ea0a55abb9851f581d4503d39b", "creates", "electing", "service", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4d4699de4e69af7e3f9820abb1d35918d3c54741", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.6.mdx", "file_name": "4.6.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.6.mdx"}, "hash": "4981f6abd9bc73ee4708e320ea3ff5d27dd02e591010bd043ea32147dda56a12", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d1911c3f-b6a3-49d1-9404-e6d193e2ee2f", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.6.mdx", "file_name": "4.6.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.6.mdx", "header_path": "/[EP4.6] [Executable] October 2023 Working Group Funding/"}, "hash": "a5b01176847b2be2fa8004a00c7b2f139fc07dcf29c8faa41634c884bd99eb4c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\nThe following transfers are to be made:\n\n- Transfer 409,000 USDC to ens-ecosystem.pod.xyz\n- Transfer 376,000 USDC, 40 ETH, and 52,300 $ENS to ens-metagov.pod.xyz\n- Transfer 218,204 USDC and 35 ETH to ens-publicgoods.pod.xyz\n\nAddresses for confirmation:\n\n- 0x2686A8919Df194aA7673244549E68D42C1685d03 for ens-ecosystem.pod.xyz\n- 0x91c32893216dE3eA0a55ABb9851f581d4503d39b for ens-metagov.pod.xyz\n- 0xcD42b4c4D102cc22864e3A1341Bb0529c17fD87d for ens-publicgoods.pod.xyz ---\ndescription: 'This proposal creates a structure for electing new service providers for the DAO'\nauthors: ['alexvansande']\nproposal:\n  discourse: '18091'\n  snapshot: '0x5748982aed143f51333befbc6cc490116648b85a2b0212fdfaf3ab848932c7ae'\n  type: 'social'\n---", "mimetype": "text/plain", "start_char_idx": 2794, "end_char_idx": 3278, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e0ada741-a59a-4f73-bb09-3fc82b094064": {"__data__": {"id_": "e0ada741-a59a-4f73-bb09-3fc82b094064", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.7.mdx", "file_name": "4.7.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.7.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.7.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["streams", "budget", "create", "provider", "service"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fba16e66e14b44d57136544ad4626a98f44ad840", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.7.mdx", "file_name": "4.7.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.7.mdx"}, "hash": "88ed8bfc3847bba8bff4dcf595bc8dde4aa6bcf146e298c515a3b3bcb88ebca1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "222afdbd-be8f-4fa1-847a-388f037f7009", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.7.mdx", "file_name": "4.7.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.7.mdx", "header_path": "/"}, "hash": "3c7812f8a2a75433b5a91445024f9b99ad3e4b9c3f67dd852b1d70ab75ae070c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "40c2e112-69c5-4725-b219-773884c542a9", "node_type": "1", "metadata": {"header_path": "/[EP4.7] [Social] Create Service Provider Streams/"}, "hash": "b3966ee00895621c4231bcfa8fb4bf0d21b6f1e39b123482c8554ffae5b550a7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# [EP4.7] [Social] Create Service Provider Streams\n\n::authors\n\n| **Status**            | Passed, Budget of $3.6M                                                                                                  |\n| --------------------- | ------------------------------------------------------------------------------------------------------------------------ |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/18091)                                                                             |\n| **Votes**             | [Snapshot](https://snapshot.box/#/s:ens.eth/proposal/0x5748982aed143f51333befbc6cc490116648b85a2b0212fdfaf3ab848932c7ae) |", "mimetype": "text/plain", "start_char_idx": 260, "end_char_idx": 918, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "40c2e112-69c5-4725-b219-773884c542a9": {"__data__": {"id_": "40c2e112-69c5-4725-b219-773884c542a9", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.7.mdx", "file_name": "4.7.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.7.mdx", "header_path": "/[EP4.7] [Social] Create Service Provider Streams/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.7.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["structure", "service", "motivation", "abstract", "providers", "streams", "income", "proposal", "propose", "treasury", "generated", "intent", "elect", "constitution", "should"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fba16e66e14b44d57136544ad4626a98f44ad840", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.7.mdx", "file_name": "4.7.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.7.mdx"}, "hash": "88ed8bfc3847bba8bff4dcf595bc8dde4aa6bcf146e298c515a3b3bcb88ebca1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e0ada741-a59a-4f73-bb09-3fc82b094064", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.7.mdx", "file_name": "4.7.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.7.mdx", "header_path": "/"}, "hash": "8ce374d90766c37cf48cf67d77e51af483041ba42dbd9a4d1d4f69f6847abbf4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b3890f39-16f6-4235-8f41-16abd52ac666", "node_type": "1", "metadata": {"header_path": "/[EP4.7] [Social] Create Service Provider Streams/"}, "hash": "1d948f7047b1dfe208d089fa33e93f0876ae3642f1b8e6d7f36799d2a8788313", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Abstract\n\nThe intent of this proposal is to add new Streams for service providers and propose a structure on how to elect them. ## Motivation\n\nThe ENS DAO constitution mandates:\n\n_\"Any income generated by the ENS treasury should primarily ensure the long-term viability of ENS and fund the ongoing development and enhancement of the ENS system. Surplus funds may be allocated to other public goods within the web3 space as determined by ENS governance.\"_\n\nThe Endowment has been pivotal in securing the longevity of ENS. This proposal aims to utilize new funds to establish funding streams for service providers dedicated to the continuous evolution and enhancement of the ENS system.", "mimetype": "text/plain", "start_char_idx": 920, "end_char_idx": 1050, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bb0b17e3-b658-4271-a662-cf1e1f5c4b2c": {"__data__": {"id_": "bb0b17e3-b658-4271-a662-cf1e1f5c4b2c", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.7.mdx", "file_name": "4.7.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.7.mdx", "header_path": "/[EP4.7] [Social] Create Service Provider Streams/Motivation/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.7.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["service", "submit", "demonstrating", "providers", "participating", "providing", "interested", "candidacy", "their", "enhancing", "december", "expertise", "detailed", "forum"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fba16e66e14b44d57136544ad4626a98f44ad840", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.7.mdx", "file_name": "4.7.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.7.mdx"}, "hash": "88ed8bfc3847bba8bff4dcf595bc8dde4aa6bcf146e298c515a3b3bcb88ebca1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b3890f39-16f6-4235-8f41-16abd52ac666", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.7.mdx", "file_name": "4.7.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.7.mdx", "header_path": "/[EP4.7] [Social] Create Service Provider Streams/"}, "hash": "cefd0345d45a18b49ab223e7578bac07eb5d1b3a8a1f3b1c45db39b7a737aff9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3e5dbb7f-26c5-4a01-9471-06a9d4e181af", "node_type": "1", "metadata": {"header_path": "/[EP4.7] [Social] Create Service Provider Streams/Motivation/**Procedure for Implementation**/"}, "hash": "0e9b25b963f564dcc750b40e630ac11d4e1c6d0b89519a9dcd0c0d1272c4d579", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### **Procedure for Implementation**\n\nService providers interested in participating must submit their candidacy on the ENS Forum by December 1st, demonstrating their expertise and providing a plan for enhancing the ENS system. Detailed instructions will be issued following the approval of this proposal.\n\nCandidates must stipulate their service fees in increments of US$200,000 per annum, committing to a minimum service period of 12 months. Project budgets should not exceed US$1 million annually.\n\nA new snapshot for approval voting will be set up. Projects must obtain a minimum of 1 million ENS in approvals to proceed.\n\nEligible projects will be ranked by vote count. A greedy algorithm will then be applied to select the highest-voted projects, provided the cumulative budget does not exceed the preset limit.\n\nFunding for streams will be guaranteed for a minimum of 18 months to prevent service disruptions. However, a reassessment vote will be conducted after 12 months. Although the one-year term is non-binding, and streams may be discontinued at any time by the service provider or the DAO, proper notice will be given in advance.\n\nAll outputs financed by the DAO must be released under an Open Source License permitting derivative works.", "mimetype": "text/plain", "start_char_idx": 1610, "end_char_idx": 2860, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3e5dbb7f-26c5-4a01-9471-06a9d4e181af": {"__data__": {"id_": "3e5dbb7f-26c5-4a01-9471-06a9d4e181af", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.7.mdx", "file_name": "4.7.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.7.mdx", "header_path": "/[EP4.7] [Social] Create Service Provider Streams/Motivation/**Procedure for Implementation**/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.7.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["complete", "limited", "development", "facilitate", "audiences", "alternative", "diverse", "developer", "maintenance", "referral", "integration", "implementation", "project", "various", "projects"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fba16e66e14b44d57136544ad4626a98f44ad840", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.7.mdx", "file_name": "4.7.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.7.mdx"}, "hash": "88ed8bfc3847bba8bff4dcf595bc8dde4aa6bcf146e298c515a3b3bcb88ebca1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bb0b17e3-b658-4271-a662-cf1e1f5c4b2c", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.7.mdx", "file_name": "4.7.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.7.mdx", "header_path": "/[EP4.7] [Social] Create Service Provider Streams/Motivation/"}, "hash": "04857fa1a4fcdf8ecf059902a5b7b1d7a3616358fca55815bd5b04081f05696c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a17092ff-9164-4ca3-97f1-53d7afd9d8df", "node_type": "1", "metadata": {"header_path": "/[EP4.7] [Social] Create Service Provider Streams/"}, "hash": "bd8d2ea5757d63ffc89ed91fffc21cdaac7943ff8ff058a039203c2bd42a7a66", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "#### **Criteria for Project Qualification**\n\nProjects may include, but are not limited to:\n\n- Development of alternative open-source front-ends for diverse audiences or platforms.\n- Maintenance of developer tools, such as SDKs, to facilitate ENS integration into various applications.\n- Implementation of a referral program, complete with necessary contracts and outreach for successful execution.\n- Proposals for enhancements to ENS base layer contracts for a more refined experience or to facilitate cost-effective batch transactions.\n- Creation and support of improved tools for ENS names' interoperability with decentralized storage solutions.\n- Development of novel off-chain trading experiences for names or innovative NFT trading experiments to broaden ENS's appeal.\n- Exploration of untapped platforms or entirely new applications for ENS.", "mimetype": "text/plain", "start_char_idx": 2862, "end_char_idx": 3709, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a17092ff-9164-4ca3-97f1-53d7afd9d8df": {"__data__": {"id_": "a17092ff-9164-4ca3-97f1-53d7afd9d8df", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.7.mdx", "file_name": "4.7.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.7.mdx", "header_path": "/[EP4.7] [Social] Create Service Provider Streams/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.7.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["approve", "preferred", "voting", "ideal", "budget", "proposal", "ranked", "choice", "amends", "working", "project", "highest", "rather"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fba16e66e14b44d57136544ad4626a98f44ad840", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.7.mdx", "file_name": "4.7.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.7.mdx"}, "hash": "88ed8bfc3847bba8bff4dcf595bc8dde4aa6bcf146e298c515a3b3bcb88ebca1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3e5dbb7f-26c5-4a01-9471-06a9d4e181af", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.7.mdx", "file_name": "4.7.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.7.mdx", "header_path": "/[EP4.7] [Social] Create Service Provider Streams/Motivation/**Procedure for Implementation**/"}, "hash": "74ada6fa984939f07fb848d23fc5d58886bc1b8c549f8dc6cbdff80ab80fdeba", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Voting\n\nThe vote is a ranked choice voting on the ideal budget: rank your preferred budget or if you'd rather not approve the project at all, rank NO as the highest ranked choice. ---\ndescription: 'This proposal amends the working group rules related to Steward term duration and compensation rules.'\nauthors: ['alexvansande']\nproposal:\n  snapshot: '0x26a5c8dec547837495707e70446d1e7cd874a91f75753c602998f6e70083a266'\n  type: 'social'\n--- # [EP4.8] [Social] Amend working groups rules to extend to a full year\n\n::authors\n\n| **Status** | Passed                                                                                                                   |\n| ---------- | ------------------------------------------------------------------------------------------------------------------------ |\n| **Votes**  | [Snapshot](https://snapshot.box/#/s:ens.eth/proposal/0x26a5c8dec547837495707e70446d1e7cd874a91f75753c602998f6e70083a266) |", "mimetype": "text/plain", "start_char_idx": 3711, "end_char_idx": 3893, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d849b75b-23a5-4984-92f0-71ef714ad1ac": {"__data__": {"id_": "d849b75b-23a5-4984-92f0-71ef714ad1ac", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.8.mdx", "file_name": "4.8.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.8.mdx", "header_path": "/[EP4.8] [Social] Amend working groups rules to extend to a full year/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.8.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["guidelines", "attract", "increasing", "retain", "ability", "modify", "motivation", "group", "abstract", "enhance", "proposal", "enable", "working", "potential", "intent"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8f7e9b85fde163515b934a1c4e9ed3586fe65b10", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.8.mdx", "file_name": "4.8.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.8.mdx"}, "hash": "8aa9b3eb865ee54a2c1bc01ae02f956f3cd6a2886343e7247517e6a27869e14e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d70dd876-fc1a-4180-81c2-5d84da4257b9", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.8.mdx", "file_name": "4.8.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.8.mdx", "header_path": "/"}, "hash": "666d19b518ec5b0f84cca86a7a9c5582ee80952d62585e1d06863b3bbf6e8d9c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3704dde9-2468-4b11-acd6-81c4f0f5dcc7", "node_type": "1", "metadata": {"header_path": "/[EP4.8] [Social] Amend working groups rules to extend to a full year/"}, "hash": "2530e07b60618f237ac91cea2c20b940932c918dc334db034f1518b436c04e84", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Abstract\n\nThe intent of this proposal is to modify the working group guidelines to enhance the DAO's ability to attract and retain talent. ## Motivation\n\nBy increasing the term length, we aim to enable potential stewards to allocate more time to the DAO and to establish a transparent and predictable compensation structure for the delegates and token community. ### Proposed changes #### Regarding term changes\n\nThese amendments are designed to extend the stewardship term, allowing candidates to commit more substantially to the DAO and benefit from a more stable financial prospect.\n\nThere are numerous small textual changes that change the two terms into a single one.\n\n**Current:**\n\n> 3.2. Stewards will be elected to serve within working groups for a set period of time (hereafter known as a 'Term' or 'Terms').\n>\n> 3.3. There are two Terms each calendar year:\n>\n> 1. The first Term commences at 9am UTC on January 1 each year and ends immediately prior to the commencement of the second Term ('First Term'); and\n> 2. The second Term commences at 9am UTC on July 1 each year and ends immediately prior to the commencement of the First Term of the following year ('Second Term').\n\n**Proposed:**\n\n> 3.2. Stewards will be elected to serve within working groups for a set period of one calendar year (hereafter known as a 'Term').\n>\n> 3.3. The Term for Stewards commences at 9am UTC on January 1 each year and ends immediately prior to the commencement of the Term of the following year.\n\nSome minor changes also occur in sections 4 and 5 just to the same effect. [See the full diff below](https://github.com/ensdomains/governance-docs/pull/44/files).", "mimetype": "text/plain", "start_char_idx": 758, "end_char_idx": 899, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "87966131-45a6-4a00-a9aa-e40b377e57e7": {"__data__": {"id_": "87966131-45a6-4a00-a9aa-e40b377e57e7", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.8.mdx", "file_name": "4.8.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.8.mdx", "header_path": "/[EP4.8] [Social] Amend working groups rules to extend to a full year/Motivation/Proposed changes/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.8.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["guidelines", "bolster", "attract", "capacity", "delegates", "transparency", "voters", "regarding", "surrounding", "benefiting", "enhancing", "maintain", "compensation", "changes"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8f7e9b85fde163515b934a1c4e9ed3586fe65b10", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.8.mdx", "file_name": "4.8.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.8.mdx"}, "hash": "8aa9b3eb865ee54a2c1bc01ae02f956f3cd6a2886343e7247517e6a27869e14e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d7934d62-718b-4865-8dd1-b3229f03c904", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.8.mdx", "file_name": "4.8.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.8.mdx", "header_path": "/[EP4.8] [Social] Amend working groups rules to extend to a full year/Motivation/Proposed changes/"}, "hash": "a67b3d2f054e404f8827383f4d5bb38a02a13c82d9a51cc49371eb597ce62e43", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c2a27263-90c3-4e82-a362-a16eb71160c2", "node_type": "1", "metadata": {"header_path": "/[EP4.8] [Social] Amend working groups rules to extend to a full year/"}, "hash": "bf6293fe4ca37cbe45dbf46cfc5f3a3632980bb1641e069fe56a329d5d0725f5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "#### Regarding changes to fair compensation guidelines\n\nThe aim here is to bolster the transparency surrounding compensation practices, benefiting voters and delegates and enhancing the DAO's capacity to attract and maintain skilled contributors. These are proposed amendments to section 11 (compensation for stewards)\n\n**Proposed Addition:**\n\n> 10.4. The Meta-Governance working group are responsible for defining standards for fair compensation ('Compensation Guidelines').\n>\n> 10.5. The Compensation Guidelines shall be defined prior to the Nomination Window for each term and can only take effect for the following term. Summary\n\nThe proposed changes intend to make Steward compensation more predictable and transparent, which serves the dual purpose of attracting more talent to the space as well as being fully transparent towards the electors.", "mimetype": "text/plain", "start_char_idx": 2419, "end_char_idx": 3269, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c2a27263-90c3-4e82-a362-a16eb71160c2": {"__data__": {"id_": "c2a27263-90c3-4e82-a362-a16eb71160c2", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.8.mdx", "file_name": "4.8.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.8.mdx", "header_path": "/[EP4.8] [Social] Amend working groups rules to extend to a full year/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.8.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["select", "approval", "individual", "higher", "voting", "reject", "proposal", "rejection", "approve", "meaning", "effect", "changes", "section"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8f7e9b85fde163515b934a1c4e9ed3586fe65b10", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.8.mdx", "file_name": "4.8.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.8.mdx"}, "hash": "8aa9b3eb865ee54a2c1bc01ae02f956f3cd6a2886343e7247517e6a27869e14e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "87966131-45a6-4a00-a9aa-e40b377e57e7", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.8.mdx", "file_name": "4.8.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.8.mdx", "header_path": "/[EP4.8] [Social] Amend working groups rules to extend to a full year/Motivation/Proposed changes/"}, "hash": "a10b63a9883525912809d6bf4895bb0338aaa45c6af29b46e75ddd58d202f318", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Voting\n\nThe vote is an approval voting meaning you need to vote to approve or reject each individual change. Changes will only take effect if the vote for approval on each section is higher than the rejection ---\ndescription: 'This proposal aims to select service providers following the approval of EP4.7, with a budget of $3,600,000 USDC annually to support providers that can enhance the ENS system.'\nauthors: ['nick.eth']\nproposal:\n  discourse: '18309'\n  snapshot: '0x6ba81cd2997288cc49ae1b95921ec8f107e8ffb9733321d53d488e2b30710b86'\n  type: 'social'\n---", "mimetype": "text/plain", "start_char_idx": 3271, "end_char_idx": 3482, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ed0c6e78-0ceb-40d4-8069-d45f92d2cb11": {"__data__": {"id_": "ed0c6e78-0ceb-40d4-8069-d45f92d2cb11", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.9.mdx", "file_name": "4.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.9.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.9.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["providers", "streams", "passed", "select"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "00ce5c61dbd0addd19e8f61b5f0501d6a290e100", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.9.mdx", "file_name": "4.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.9.mdx"}, "hash": "0546c098346f13863edf31a6b88580ec0db50b53dd68c8b0da358de056c4fb7d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "79ab12ce-c9da-44c3-9be7-16e297619986", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.9.mdx", "file_name": "4.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.9.mdx", "header_path": "/"}, "hash": "fa4106aa8bdddf2c5fae93b1a4c802e9e15c4735645fe70480b0c6feff287c59", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "95631830-6b86-464f-b046-b2cf64faa12e", "node_type": "1", "metadata": {"header_path": "/[EP4.9] [Social] Select providers for EP4.7 streams/"}, "hash": "b6cb4d55621e1a43e571209ccc88a46e20eecb0835c4c574cafcfd6db03587b1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# [EP4.9] [Social] Select providers for EP4.7 streams\n\n::authors\n\n| **Status**            | Passed                                                                                                                   |\n| --------------------- | ------------------------------------------------------------------------------------------------------------------------ |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/18309)                                                                             |\n| **Votes**             | [Snapshot](https://snapshot.box/#/s:ens.eth/proposal/0x6ba81cd2997288cc49ae1b95921ec8f107e8ffb9733321d53d488e2b30710b86) |", "mimetype": "text/plain", "start_char_idx": 351, "end_char_idx": 1012, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "95631830-6b86-464f-b046-b2cf64faa12e": {"__data__": {"id_": "95631830-6b86-464f-b046-b2cf64faa12e", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.9.mdx", "file_name": "4.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.9.mdx", "header_path": "/[EP4.9] [Social] Select providers for EP4.7 streams/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.9.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["approval", "considered", "providers", "abstract", "applications", "proposal", "following", "prospective", "successful", "provides", "collects", "submitted", "service", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "00ce5c61dbd0addd19e8f61b5f0501d6a290e100", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.9.mdx", "file_name": "4.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.9.mdx"}, "hash": "0546c098346f13863edf31a6b88580ec0db50b53dd68c8b0da358de056c4fb7d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ed0c6e78-0ceb-40d4-8069-d45f92d2cb11", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.9.mdx", "file_name": "4.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.9.mdx", "header_path": "/"}, "hash": "7330f65dbe0fbe87e9c44bde22d7cd8046c0a729904425147186e8adf57daee5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "95e6c0b7-a5b2-4bf0-b0a3-74e06b66a0cb", "node_type": "1", "metadata": {"header_path": "/[EP4.9] [Social] Select providers for EP4.7 streams/"}, "hash": "d12c7060fff9a6bba68b829fd1bb33bd9e62eea9274677dcf5588d6cfe788079", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Abstract\n\nFollowing the approval of [EP4.7](/dao/proposals/4.7) by the DAO, prospective service providers have submitted applications to be considered by the DAO for funding. This proposal collects successful applications for a vote by the DAO. ## Specification\n\nEP4.7 provides for a budget of $3,600,000 USDC to be provided annually to qualifying service providers. All successful applications are summarized below in [random order](https://twitter.com/nicksdjohnson/status/1731660224031793376).\n\nThe purpose of this vote is to select service providers to receive streaming funding from the DAO. Per the [draft rules](https://github.com/alexvansande/governance-docs/blob/Streams-rules/service-provider-rules.md), selection of winning proposals uses the following process:\n\n1. **Order Proposals**\n   - Arrange all proposals in descending order based on the number of votes received.\n2. **Evaluate Proposals Sequentially**\n   - **Vote Threshold Check**\n     - If a proposal has received fewer than 1 million votes, stop the evaluation process immediately.\n   - **Comparison with 'None of the Above'**\n     - If a proposal has fewer votes than the 'None of the Above' option, stop the evaluation process.\n   - **Budget Check**\n     - If a proposal's requested budget exceeds the remaining budget, skip it and move to the next proposal.\n   - **Selection**\n     - If a proposal passes the above checks, add it to the set of selected proposals. Deduct its requested budget from the remaining budget.", "mimetype": "text/plain", "start_char_idx": 1014, "end_char_idx": 1261, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "264d67b6-3cd4-43fd-8596-c313f6c13f47": {"__data__": {"id_": "264d67b6-3cd4-43fd-8596-c313f6c13f47", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.9.mdx", "file_name": "4.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.9.mdx", "header_path": "/[EP4.9] [Social] Select providers for EP4.7 streams/Specification/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.9.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["procedure", "january", "implement", "group", "providers", "streams", "least", "working", "funding", "executable", "instructions", "provider", "believe", "service"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "00ce5c61dbd0addd19e8f61b5f0501d6a290e100", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.9.mdx", "file_name": "4.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.9.mdx"}, "hash": "0546c098346f13863edf31a6b88580ec0db50b53dd68c8b0da358de056c4fb7d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "95e6c0b7-a5b2-4bf0-b0a3-74e06b66a0cb", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.9.mdx", "file_name": "4.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.9.mdx", "header_path": "/[EP4.9] [Social] Select providers for EP4.7 streams/"}, "hash": "89f463c4fc849fd0140d67755b16a143e42db9569d6200dd1fbfcb882c0f68ad", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "65e19b93-b3c3-4eb5-bfc3-4256d1666044", "node_type": "1", "metadata": {"header_path": "/[EP4.9] [Social] Select providers for EP4.7 streams/"}, "hash": "56b45f83cc5ddbf1f88162c398d2ee9c36f0756499c391a43fd2f422bf92d68c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Post-Selection Procedure\n\n- If at least one service provider is chosen, the Meta-Governance working group will post an executable vote to implement the funding streams by January 10 at the latest. ## Instructions\n\n**Vote FOR** on any service providers whom you believe that are capable of continuous evolution and enhancement of the ENS system and for which you believe offer a good cost benefit. **Do NOT vote** to any provider you do not believe to be capable of such, for which you believe the proposed projects are out of scope or for which you believe the ask is too high for the proposals. _Only vote \"None of the Above\" if you want to express your disapproval with the whole system and would rather **not have ANY** of the projects be selected._", "mimetype": "text/plain", "start_char_idx": 2514, "end_char_idx": 2714, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f1be52bc-ce60-4988-a3fc-45f2bf368846": {"__data__": {"id_": "f1be52bc-ce60-4988-a3fc-45f2bf368846", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.9.mdx", "file_name": "4.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.9.mdx", "header_path": "/[EP4.9] [Social] Select providers for EP4.7 streams/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.9.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["candidates"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "00ce5c61dbd0addd19e8f61b5f0501d6a290e100", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.9.mdx", "file_name": "4.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.9.mdx"}, "hash": "0546c098346f13863edf31a6b88580ec0db50b53dd68c8b0da358de056c4fb7d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "65e19b93-b3c3-4eb5-bfc3-4256d1666044", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.9.mdx", "file_name": "4.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.9.mdx", "header_path": "/[EP4.9] [Social] Select providers for EP4.7 streams/"}, "hash": "1cd2c0403b2367125aa6f083e0bf4ef7339b1a54a5adea2e5519a3e1bc991c24", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d93666fd-634a-46fd-afc7-6178ce6f3ce6", "node_type": "1", "metadata": {"header_path": "/[EP4.9] [Social] Select providers for EP4.7 streams/Candidates/"}, "hash": "2745d2773b76599463216dbce19e01b13277686de25802a1202a43cb703ecc26", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Candidates ### NameSys.eth\n\n[Summary](https://discuss.ens.domains/t/ep4-7-candidates-short-description/18382#namesysethhttpsdiscussensdomainstservice-provider-stream-nomination-thread181426-1) | [Full Proposal](https://discuss.ens.domains/t/service-provider-stream-nomination-thread/18142/6) **Requested Budget**: $200,000 p.a. ### handle.eth\n\n[Summary](https://discuss.ens.domains/t/ep4-7-candidates-short-description/18382#handleethhttpsdiscussensdomainstservice-provider-stream-nomination-thread1814237-2) | [Full Proposal](https://discuss.ens.domains/t/service-provider-stream-nomination-thread/18142/37) **Requested Budget**: $100,000 p.a.", "mimetype": "text/plain", "start_char_idx": 3273, "end_char_idx": 3286, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "208da026-7d7c-42d7-8693-8a1653accccf": {"__data__": {"id_": "208da026-7d7c-42d7-8693-8a1653accccf", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.9.mdx", "file_name": "4.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.9.mdx", "header_path": "/[EP4.9] [Social] Select providers for EP4.7 streams/Candidates/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.9.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["unruggable", "namehash"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "00ce5c61dbd0addd19e8f61b5f0501d6a290e100", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.9.mdx", "file_name": "4.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.9.mdx"}, "hash": "0546c098346f13863edf31a6b88580ec0db50b53dd68c8b0da358de056c4fb7d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "54d36211-0cbc-4bf1-b73b-f27fdc3b5e1c", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.9.mdx", "file_name": "4.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.9.mdx", "header_path": "/[EP4.9] [Social] Select providers for EP4.7 streams/Candidates/"}, "hash": "e4dd29b6891ec8f46bd24454c2db32509ebee7e68c7574875f1377dd05d8038e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "48a35b60-376c-4610-ab65-5a1db1e11345", "node_type": "1", "metadata": {"header_path": "/[EP4.9] [Social] Select providers for EP4.7 streams/Candidates/"}, "hash": "c36ab9fc5e977867b5d5a0b4ab45fdaec193af61c5dc7b450d4b10727b92935b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### NameHash Labs\n\n[Summary](https://discuss.ens.domains/t/ep4-7-candidates-short-description/18382#namehash-labshttpsdiscussensdomainstservice-provider-stream-nomination-thread1814239-3) | [Full Proposal](https://discuss.ens.domains/t/service-provider-stream-nomination-thread/18142/39) **Requested Budget**: $600,000 p.a. ### Unruggable\n\n[Summary](https://discuss.ens.domains/t/ep4-7-candidates-short-description/18382#unruggablehttpsdiscussensdomainstservice-provider-stream-nomination-thread181425-4) | [Full Proposal](https://discuss.ens.domains/t/service-provider-stream-nomination-thread/18142/5) **Requested Budget**: $400,000 p.a.", "mimetype": "text/plain", "start_char_idx": 3924, "end_char_idx": 4247, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8da457b1-7236-4191-b2ca-a959631c1cbf": {"__data__": {"id_": "8da457b1-7236-4191-b2ca-a959631c1cbf", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.9.mdx", "file_name": "4.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.9.mdx", "header_path": "/[EP4.9] [Social] Select providers for EP4.7 streams/Candidates/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.9.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": []}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "00ce5c61dbd0addd19e8f61b5f0501d6a290e100", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.9.mdx", "file_name": "4.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.9.mdx"}, "hash": "0546c098346f13863edf31a6b88580ec0db50b53dd68c8b0da358de056c4fb7d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "48a35b60-376c-4610-ab65-5a1db1e11345", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.9.mdx", "file_name": "4.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.9.mdx", "header_path": "/[EP4.9] [Social] Select providers for EP4.7 streams/Candidates/"}, "hash": "dd7371cc04cc253e208ec4e49f01b2f4efc9e69d308f2822fc07dd2b92386890", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d38819f8-c109-42b4-8e6c-4b06b2b297ce", "node_type": "1", "metadata": {"header_path": "/[EP4.9] [Social] Select providers for EP4.7 streams/Candidates/"}, "hash": "1adcec84baf2e928bc2bc0cc722543c1fefbbeda03b3e2028c71dac0324c9dc9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### generalmagic.eth & pairwise.eth\n\n[Summary](https://discuss.ens.domains/t/ep4-7-candidates-short-description/18382#generalmagiceth-pairwiseethhttpsdiscussensdomainstservice-provider-stream-nomination-thread1814231-5) | [Full Proposal](https://discuss.ens.domains/t/service-provider-stream-nomination-thread/18142/31) **Requested Budget**: $300,000 p.a. ### servais.eth / web3xplorer.com\n\n[Summary](https://discuss.ens.domains/t/ep4-7-candidates-short-description/18382#servaiseth-web3xplorercomhttpsdiscussensdomainstservice-provider-stream-nomination-thread181429-6) | [Full Proposal](https://discuss.ens.domains/t/service-provider-stream-nomination-thread/18142/9) **Requested Budget**: $100,000 p.a.", "mimetype": "text/plain", "start_char_idx": 4566, "end_char_idx": 4921, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3359ff13-8920-4b92-9680-fb461744aabb": {"__data__": {"id_": "3359ff13-8920-4b92-9680-fb461744aabb", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.9.mdx", "file_name": "4.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.9.mdx", "header_path": "/[EP4.9] [Social] Select providers for EP4.7 streams/Candidates/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.9.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["protocol", "alphawallet"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "00ce5c61dbd0addd19e8f61b5f0501d6a290e100", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.9.mdx", "file_name": "4.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.9.mdx"}, "hash": "0546c098346f13863edf31a6b88580ec0db50b53dd68c8b0da358de056c4fb7d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d38819f8-c109-42b4-8e6c-4b06b2b297ce", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.9.mdx", "file_name": "4.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.9.mdx", "header_path": "/[EP4.9] [Social] Select providers for EP4.7 streams/Candidates/"}, "hash": "86d75c00fe40870b86530af1e0445dbc61bf2911e97cad881788399bded3cc3f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "57e48249-04f6-4638-a5f0-58b3f21ca2f9", "node_type": "1", "metadata": {"header_path": "/[EP4.9] [Social] Select providers for EP4.7 streams/Candidates/"}, "hash": "468a29c9b5a761e476e3ee7e3cee8b0f19d435e03f74f6f055596884aec481ad", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### AlphaWallet\n\n[Summary](https://discuss.ens.domains/t/ep4-7-candidates-short-description/18382#alphawallethttpsdiscussensdomainstservice-provider-stream-nomination-thread1814217-7) | [Full Proposal](https://discuss.ens.domains/t/service-provider-stream-nomination-thread/18142/17) **Requested Budget**: $100,000 p.a. ### ENS Like Protocol\n\n[Summary](https://discuss.ens.domains/t/ep4-7-candidates-short-description/18382#ens-like-protocolhttpsdiscussensdomainstservice-provider-stream-nomination-thread1814230-8) | [Full Proposal](https://discuss.ens.domains/t/service-provider-stream-nomination-thread/18142/30) **Requested Budget**: $100,000 p.a.", "mimetype": "text/plain", "start_char_idx": 5274, "end_char_idx": 5593, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0fa03420-4ecf-4ab7-922e-4dd401f84c93": {"__data__": {"id_": "0fa03420-4ecf-4ab7-922e-4dd401f84c93", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.9.mdx", "file_name": "4.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.9.mdx", "header_path": "/[EP4.9] [Social] Select providers for EP4.7 streams/Candidates/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.9.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["guild", "namespace", "gnosis"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "00ce5c61dbd0addd19e8f61b5f0501d6a290e100", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.9.mdx", "file_name": "4.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.9.mdx"}, "hash": "0546c098346f13863edf31a6b88580ec0db50b53dd68c8b0da358de056c4fb7d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "57e48249-04f6-4638-a5f0-58b3f21ca2f9", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.9.mdx", "file_name": "4.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.9.mdx", "header_path": "/[EP4.9] [Social] Select providers for EP4.7 streams/Candidates/"}, "hash": "1ae0e9811061db9f17c28938eef79264dd965031f6eb3f253a03f6310e6f8bed", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7c3fca8a-791e-457b-bc19-c58f81c6dbad", "node_type": "1", "metadata": {"header_path": "/[EP4.9] [Social] Select providers for EP4.7 streams/Candidates/"}, "hash": "4db16f413976fdd9c34d2bc65b37e081a3d870c3632326d86ee7493c1d104b8d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Namespace\n\n[Summary](https://discuss.ens.domains/t/ep4-7-candidates-short-description/18382#namespacehttpsdiscussensdomainstservice-provider-stream-nomination-thread1814220unicketh-9) | [Full Proposal](https://discuss.ens.domains/t/service-provider-stream-nomination-thread/18142/20?u=nick.eth) **Requested Budget**: $200,000 p.a. ### Gnosis Guild\n\n[Summary](https://discuss.ens.domains/t/ep4-7-candidates-short-description/18382#gnosis-guildhttpsdiscussensdomainstservice-provider-stream-nomination-thread1814233-10) | [Full Proposal](https://discuss.ens.domains/t/service-provider-stream-nomination-thread/18142/33) **Requested Budget**: $600,000 p.a.", "mimetype": "text/plain", "start_char_idx": 5928, "end_char_idx": 6262, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "98b5f877-bbf7-4760-8ce8-c7faeceba58b": {"__data__": {"id_": "98b5f877-bbf7-4760-8ce8-c7faeceba58b", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.9.mdx", "file_name": "4.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.9.mdx", "header_path": "/[EP4.9] [Social] Select providers for EP4.7 streams/Candidates/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.9.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["forge", "gravitydao", "vision"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "00ce5c61dbd0addd19e8f61b5f0501d6a290e100", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.9.mdx", "file_name": "4.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.9.mdx"}, "hash": "0546c098346f13863edf31a6b88580ec0db50b53dd68c8b0da358de056c4fb7d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7c3fca8a-791e-457b-bc19-c58f81c6dbad", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.9.mdx", "file_name": "4.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.9.mdx", "header_path": "/[EP4.9] [Social] Select providers for EP4.7 streams/Candidates/"}, "hash": "6296d45df209d0fa64c089c1f71e15eeb75ffe625c89f9e117892076d5f2be82", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "20182de6-8029-4f00-839d-18dc37550f70", "node_type": "1", "metadata": {"header_path": "/[EP4.9] [Social] Select providers for EP4.7 streams/Candidates/"}, "hash": "99812c942b23c5b37137fe2253ebe798735a7347803e6991a25ce833079033a0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### GravityDAO\n\n[Summary](https://discuss.ens.domains/t/ep4-7-candidates-short-description/18382#gravitydaohttpsdiscussensdomainstservice-provider-stream-nomination-thread1814226-11) | [Full Proposal](https://discuss.ens.domains/t/service-provider-stream-nomination-thread/18142/26) **Requested Budget**: $100,000 p.a. ### ENS Vision Forge\n\n[Summary](https://discuss.ens.domains/t/ep4-7-candidates-short-description/18382#ens-vision-forgehttpsdiscussensdomainstservice-provider-stream-nomination-thread1814219-12) | [Full Proposal](https://discuss.ens.domains/t/service-provider-stream-nomination-thread/18142/19) **Requested Budget**: $500,000 p.a.", "mimetype": "text/plain", "start_char_idx": 6588, "end_char_idx": 6906, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "93665316-f86d-4c1a-9c91-36b9b405ea97": {"__data__": {"id_": "93665316-f86d-4c1a-9c91-36b9b405ea97", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.9.mdx", "file_name": "4.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.9.mdx", "header_path": "/[EP4.9] [Social] Select providers for EP4.7 streams/Candidates/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.9.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["blockful"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "00ce5c61dbd0addd19e8f61b5f0501d6a290e100", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.9.mdx", "file_name": "4.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.9.mdx"}, "hash": "0546c098346f13863edf31a6b88580ec0db50b53dd68c8b0da358de056c4fb7d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "20182de6-8029-4f00-839d-18dc37550f70", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.9.mdx", "file_name": "4.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.9.mdx", "header_path": "/[EP4.9] [Social] Select providers for EP4.7 streams/Candidates/"}, "hash": "3456c6ff85059bb315d3cd98f2d2dd4e23d7126c542b4be5497f93bf9eeb525b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5643fc0a-2494-4c2f-af17-7670d37ff2d4", "node_type": "1", "metadata": {"header_path": "/[EP4.9] [Social] Select providers for EP4.7 streams/Candidates/"}, "hash": "bb3a2a74ebe8b6b7ef2866fe4e5dbf44955aa5e90ca28f29c13312ec6b178490", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Blockful\n\n[Summary](https://discuss.ens.domains/t/ep4-7-candidates-short-description/18382#blockfulhttpsdiscussensdomainstservice-provider-stream-nomination-thread1814238-13) | [Full Proposal](https://discuss.ens.domains/t/service-provider-stream-nomination-thread/18142/38) **Requested Budget**: $300,000 p.a. ### Web3Domains.com\n\n[Summary](https://discuss.ens.domains/t/ep4-7-candidates-short-description/18382#web3domainscomhttpsdiscussensdomainstservice-provider-stream-nomination-thread1814227-14) | [Full Proposal](https://discuss.ens.domains/t/service-provider-stream-nomination-thread/18142/27) **Requested Budget**: $500,000 p.a.", "mimetype": "text/plain", "start_char_idx": 7240, "end_char_idx": 7554, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4fb08107-afa0-43bb-b2b9-894aef106827": {"__data__": {"id_": "4fb08107-afa0-43bb-b2b9-894aef106827", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.9.mdx", "file_name": "4.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.9.mdx", "header_path": "/[EP4.9] [Social] Select providers for EP4.7 streams/Candidates/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.9.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["tools", "dappling"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "00ce5c61dbd0addd19e8f61b5f0501d6a290e100", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.9.mdx", "file_name": "4.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.9.mdx"}, "hash": "0546c098346f13863edf31a6b88580ec0db50b53dd68c8b0da358de056c4fb7d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5643fc0a-2494-4c2f-af17-7670d37ff2d4", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.9.mdx", "file_name": "4.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.9.mdx", "header_path": "/[EP4.9] [Social] Select providers for EP4.7 streams/Candidates/"}, "hash": "210968f2a061a1f8aacb9f878021f1695a3ac83b3dd7caf939ef17747340864e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7dca9483-48dd-49ec-8322-eabe181c3999", "node_type": "1", "metadata": {"header_path": "/[EP4.9] [Social] Select providers for EP4.7 streams/Candidates/"}, "hash": "0f84f82d996f6af1791b3070a3b98edacefeebc309b3e65332fcf750644c94dd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### dAppling\n\n[Summary](https://discuss.ens.domains/t/ep4-7-candidates-short-description/18382#dapplinghttpsdiscussensdomainstservice-provider-stream-nomination-thread1814222-15) | [Full Proposal](https://discuss.ens.domains/t/service-provider-stream-nomination-thread/18142/22) **Requested Budget**: $400,000 p.a. ### ESF Tools\n\n[Summary](https://discuss.ens.domains/t/ep4-7-candidates-short-description/18382#esf-toolshttpsdiscussensdomainstservice-provider-stream-nomination-thread1814216-16) | [Full Proposal](https://discuss.ens.domains/t/service-provider-stream-nomination-thread/18142/16) **Requested Budget**: $200,000 p.a.", "mimetype": "text/plain", "start_char_idx": 7885, "end_char_idx": 8199, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "19ea8390-bbb0-48fc-8b1b-39cf6997ad3d": {"__data__": {"id_": "19ea8390-bbb0-48fc-8b1b-39cf6997ad3d", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.9.mdx", "file_name": "4.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.9.mdx", "header_path": "/[EP4.9] [Social] Select providers for EP4.7 streams/Candidates/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.9.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["interceptor", "stablelab"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "00ce5c61dbd0addd19e8f61b5f0501d6a290e100", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.9.mdx", "file_name": "4.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.9.mdx"}, "hash": "0546c098346f13863edf31a6b88580ec0db50b53dd68c8b0da358de056c4fb7d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7dca9483-48dd-49ec-8322-eabe181c3999", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.9.mdx", "file_name": "4.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.9.mdx", "header_path": "/[EP4.9] [Social] Select providers for EP4.7 streams/Candidates/"}, "hash": "c27c7ec268c7a5c8bd273eea8a8c04b1f1ce3459111e82dffcd0023e827c864c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "66f2cbbc-d8ee-4e4c-9463-5d02d0a0e7bb", "node_type": "1", "metadata": {"header_path": "/[EP4.9] [Social] Select providers for EP4.7 streams/Candidates/"}, "hash": "96631376bc785c1aeef55207d85dd1985ea0c64f5c9a7c60db8fa2424cd039a2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### StableLab\n\n[Summary](https://discuss.ens.domains/t/ep4-7-candidates-short-description/18382#stablelabhttpsdiscussensdomainstservice-provider-stream-nomination-thread1814223-17) | [Full Proposal](https://discuss.ens.domains/t/service-provider-stream-nomination-thread/18142/23) **Requested Budget**: $300,000 p.a. ### The Interceptor\n\n[Summary](https://discuss.ens.domains/t/ep4-7-candidates-short-description/18382#the-interceptorhttpsdiscussensdomainstservice-provider-stream-nomination-thread1814210-18) | [Full Proposal](https://discuss.ens.domains/t/service-provider-stream-nomination-thread/18142/10) **Requested Budget**: $500,000 p.a.", "mimetype": "text/plain", "start_char_idx": 8519, "end_char_idx": 8835, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1524ab94-670a-4bd5-adf1-83a329e36b0c": {"__data__": {"id_": "1524ab94-670a-4bd5-adf1-83a329e36b0c", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.9.mdx", "file_name": "4.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.9.mdx", "header_path": "/[EP4.9] [Social] Select providers for EP4.7 streams/Candidates/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.9.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["tally", "tools"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "00ce5c61dbd0addd19e8f61b5f0501d6a290e100", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.9.mdx", "file_name": "4.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.9.mdx"}, "hash": "0546c098346f13863edf31a6b88580ec0db50b53dd68c8b0da358de056c4fb7d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "66f2cbbc-d8ee-4e4c-9463-5d02d0a0e7bb", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.9.mdx", "file_name": "4.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.9.mdx", "header_path": "/[EP4.9] [Social] Select providers for EP4.7 streams/Candidates/"}, "hash": "875053e97cbd222b2f79ff811edaaac400c60b6255e0747c7bd13a434e5b661c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9795cfc5-7f79-4418-88f5-2bb32a53c1f1", "node_type": "1", "metadata": {"header_path": "/[EP4.9] [Social] Select providers for EP4.7 streams/Candidates/"}, "hash": "9c6c4bd8790f0fb5c4976da40ba994d729ff0b05376eb02251c9ced5ec656180", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Tally\n\n[Summary](https://discuss.ens.domains/t/ep4-7-candidates-short-description/18382#tallyhttpsdiscussensdomainstservice-provider-stream-nomination-thread1814232-19) | [Full Proposal](https://discuss.ens.domains/t/service-provider-stream-nomination-thread/18142/32) **Requested Budget**: $300,000 p.a. ### ENS Anti-Abuse Tools\n\n[Summary](https://discuss.ens.domains/t/ep4-7-candidates-short-description/18382#ens-anti-abuse-toolshttpsdiscussensdomainstservice-provider-stream-nomination-thread1814221-20) | [Full Proposal](https://discuss.ens.domains/t/service-provider-stream-nomination-thread/18142/21) **Requested Budget**: $100,000 p.a.", "mimetype": "text/plain", "start_char_idx": 9167, "end_char_idx": 9475, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4a335bf5-c922-451f-96fc-d9bbb244fff9": {"__data__": {"id_": "4a335bf5-c922-451f-96fc-d9bbb244fff9", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.9.mdx", "file_name": "4.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.9.mdx", "header_path": "/[EP4.9] [Social] Select providers for EP4.7 streams/Candidates/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.9.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["wildcard"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "00ce5c61dbd0addd19e8f61b5f0501d6a290e100", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.9.mdx", "file_name": "4.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.9.mdx"}, "hash": "0546c098346f13863edf31a6b88580ec0db50b53dd68c8b0da358de056c4fb7d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9795cfc5-7f79-4418-88f5-2bb32a53c1f1", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.9.mdx", "file_name": "4.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.9.mdx", "header_path": "/[EP4.9] [Social] Select providers for EP4.7 streams/Candidates/"}, "hash": "672d68494150b24765c08cd9b5c9e6019c4bb3ddaf608e30212f0a5e0beff0c0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5e6e2273-4dc7-4cf4-8899-7a927befbe08", "node_type": "1", "metadata": {"header_path": "/[EP4.9] [Social] Select providers for EP4.7 streams/Candidates/"}, "hash": "d8fbf2a7f14de4c8aea87c0b39761974f4a1d69107d20b5ba14937e14f5abcb7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Wildcard Labs\n\n[Summary](https://discuss.ens.domains/t/ep4-7-candidates-short-description/18382#wildcard-labshttpsdiscussensdomainstservice-provider-stream-nomination-thread1814225-21) | [Full Proposal](https://discuss.ens.domains/t/service-provider-stream-nomination-thread/18142/25) **Requested Budget**: $200,000 p.a. ### eth.limo\n\n[Summary](https://discuss.ens.domains/t/ep4-7-candidates-short-description/18382#ethlimohttpsdiscussensdomainstservice-provider-stream-nomination-thread181423-22) | [Full Proposal](https://discuss.ens.domains/t/service-provider-stream-nomination-thread/18142/3) **Requested Budget**: $500,000 p.a.", "mimetype": "text/plain", "start_char_idx": 9817, "end_char_idx": 10141, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "eb73840f-ec5a-449e-a4a7-a63755d11d9c": {"__data__": {"id_": "eb73840f-ec5a-449e-a4a7-a63755d11d9c", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.9.mdx", "file_name": "4.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.9.mdx", "header_path": "/[EP4.9] [Social] Select providers for EP4.7 streams/Candidates/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.9.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["powered", "referrals"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "00ce5c61dbd0addd19e8f61b5f0501d6a290e100", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.9.mdx", "file_name": "4.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.9.mdx"}, "hash": "0546c098346f13863edf31a6b88580ec0db50b53dd68c8b0da358de056c4fb7d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5e6e2273-4dc7-4cf4-8899-7a927befbe08", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.9.mdx", "file_name": "4.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.9.mdx", "header_path": "/[EP4.9] [Social] Select providers for EP4.7 streams/Candidates/"}, "hash": "e33dba71bd37eebc17348b835d7088d7242ce428dc227e23c684d04af27b0766", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9040fe6b-0271-401a-bd47-d64e83d850ec", "node_type": "1", "metadata": {"header_path": "/[EP4.9] [Social] Select providers for EP4.7 streams/Candidates/"}, "hash": "6798a3dcfce1e519bfe43c71300e5f2f201ceb53ca5989bd3a5fd80ae3672245", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### wayback-machine.eth\n\n[Summary](https://discuss.ens.domains/t/ep4-7-candidates-short-description/18382#wayback-machineethhttpsdiscussensdomainstservice-provider-stream-nomination-thread1814229-23) | [Full Proposal](https://discuss.ens.domains/t/service-provider-stream-nomination-thread/18142/29) **Requested Budget**: $200,000 p.a. ### Referrals powered by generalmagic.eth\n\n[Summary](https://discuss.ens.domains/t/ep4-7-candidates-short-description/18382#referrals-powered-by-generalmagicethhttpsdiscussensdomainstservice-provider-stream-nomination-thread1814234-24) | [Full Proposal](https://discuss.ens.domains/t/service-provider-stream-nomination-thread/18142/34) **Requested Budget**: $200,000 p.a.", "mimetype": "text/plain", "start_char_idx": 10456, "end_char_idx": 10791, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1139db0c-9ea5-4255-b308-7bcde2cfc0de": {"__data__": {"id_": "1139db0c-9ea5-4255-b308-7bcde2cfc0de", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.9.mdx", "file_name": "4.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.9.mdx", "header_path": "/[EP4.9] [Social] Select providers for EP4.7 streams/Candidates/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.9.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ethereum", "protocol", "follow"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "00ce5c61dbd0addd19e8f61b5f0501d6a290e100", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.9.mdx", "file_name": "4.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.9.mdx"}, "hash": "0546c098346f13863edf31a6b88580ec0db50b53dd68c8b0da358de056c4fb7d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9040fe6b-0271-401a-bd47-d64e83d850ec", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.9.mdx", "file_name": "4.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.9.mdx", "header_path": "/[EP4.9] [Social] Select providers for EP4.7 streams/Candidates/"}, "hash": "96382aec4efd19498e73d1b600aab0bb0948c73a41e4abb214ed2d077676223d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c42602df-59b4-43a1-9fec-23058f988785", "node_type": "1", "metadata": {"header_path": "/[EP4.9] [Social] Select providers for EP4.7 streams/Candidates/"}, "hash": "c1c43dabf9703678279c7e140b2e9c48ef2d558b99bbd8d8a3427f0bba3585e8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### unicorn.eth\n\n[Summary](https://discuss.ens.domains/t/ep4-7-candidates-short-description/18382#unicornethhttpsdiscussensdomainstservice-provider-stream-nomination-thread1814236-25) | [Full Proposal](https://discuss.ens.domains/t/service-provider-stream-nomination-thread/18142/36) **Requested Budget**: $200,000 p.a. ### Ethereum Follow Protocol\n\n[Summary](https://discuss.ens.domains/t/ep4-7-candidates-short-description/18382#ethereum-follow-protocolhttpsdiscussensdomainstservice-provider-stream-nomination-thread1814218-26) | [Full Proposal](https://discuss.ens.domains/t/service-provider-stream-nomination-thread/18142/18) **Requested Budget**: $500,000 p.a.", "mimetype": "text/plain", "start_char_idx": 11166, "end_char_idx": 11485, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0ecc8946-fb29-4cf2-a407-07398d13a118": {"__data__": {"id_": "0ecc8946-fb29-4cf2-a407-07398d13a118", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/4.9.mdx", "file_name": "4.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.9.mdx", "header_path": "/[EP4.9] [Social] Select providers for EP4.7 streams/Candidates/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.9.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": []}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "00ce5c61dbd0addd19e8f61b5f0501d6a290e100", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/4.9.mdx", "file_name": "4.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.9.mdx"}, "hash": "0546c098346f13863edf31a6b88580ec0db50b53dd68c8b0da358de056c4fb7d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c42602df-59b4-43a1-9fec-23058f988785", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/4.9.mdx", "file_name": "4.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.9.mdx", "header_path": "/[EP4.9] [Social] Select providers for EP4.7 streams/Candidates/"}, "hash": "86fa9af570b6f9cdc41ef4d294d2b20e30a8a2e4e9ab1b94a37e7c9e0c5df6be", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8842e69d-1df9-42c4-a15b-5445a7dafc46", "node_type": "1", "metadata": {"header_path": "/[EP4.9] [Social] Select providers for EP4.7 streams/Candidates/"}, "hash": "85f2ddfba314139bed52a3a42640a8a9419bc714ca909318592ddd1f12a7bdb9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### resolverworks.eth\n\n[Summary](https://discuss.ens.domains/t/ep4-7-candidates-short-description/18382#resolverworksethhttpsdiscussensdomainstservice-provider-stream-nomination-thread1814224-27) | [Full Proposal](https://discuss.ens.domains/t/service-provider-stream-nomination-thread/18142/24) **Requested Budget**: $700,000 p.a. ### 1w3.eth\n\n[Summary](https://discuss.ens.domains/t/ep4-7-candidates-short-description/18382#h-1w3ethhttpsdiscussensdomainstservice-provider-stream-nomination-thread181428-28) | [Full Proposal](https://discuss.ens.domains/t/service-provider-stream-nomination-thread/18142/8) **Requested Budget**: $500,000 p.a.", "mimetype": "text/plain", "start_char_idx": 11835, "end_char_idx": 12166, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "68e4fd6a-a645-4c2a-8d32-8701caa6ecbc": {"__data__": {"id_": "68e4fd6a-a645-4c2a-8d32-8701caa6ecbc", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.1.mdx", "file_name": "5.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.1.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["enables", "registrar", "upgrade", "version", "passed", "oracle", "support", "dnssec"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "17a3cb0d28286bc508f58906e9a5ff9733cb8573", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.1.mdx", "file_name": "5.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.1.mdx"}, "hash": "43cbbc008283ee9afc794b65b294d1b40afbdf84988c9c88bc5c0b51f2068975", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3ba3b23f-a2bb-488c-b105-10599e9e71a1", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "cfab5b406ff184ad7dfe79da7bf5f67a4deeb016ca52af8f82fc9037d8df88d3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: \"Deploy a new version of the DNSSEC oracle and DNS registrar that enables 'gasless DNSSEC' functionality.\"\nauthors: ['arachnid']\nproposal:\n  discourse: '18535'\n  tally: '4208408830555077285685632645423534041634535116286721240943655761928631543220'\n  type: 'executable'\n--- # [EP5.1] [Executable] Upgrade DNSSEC support\n\n::authors\n\n| **Status**            | Passed                                                                                                                   |\n| --------------------- | ------------------------------------------------------------------------------------------------------------------------ |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/ep5-1-executable-upgrade-dnssec-support/18535)                                     |\n| **Votes**             | [Agora](https://agora.ensdao.org/proposals/4208408830555077285685632645423534041634535116286721240943655761928631543220) |", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 289, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "71d9f953-d01b-4330-b964-03f22881be5e": {"__data__": {"id_": "71d9f953-d01b-4330-b964-03f22881be5e", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.1.mdx", "file_name": "5.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.1.mdx", "header_path": "/[EP5.1] [Executable] Upgrade DNSSEC support/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["wildcard", "transactions", "registrar", "abstract", "combined", "version", "resolution", "allow", "working", "oracle", "inside", "enabling", "onchain", "names", "dnssec"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "17a3cb0d28286bc508f58906e9a5ff9733cb8573", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.1.mdx", "file_name": "5.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.1.mdx"}, "hash": "43cbbc008283ee9afc794b65b294d1b40afbdf84988c9c88bc5c0b51f2068975", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3ba3b23f-a2bb-488c-b105-10599e9e71a1", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.1.mdx", "file_name": "5.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.1.mdx", "header_path": "/"}, "hash": "64c98bcc4324b99e6e7c755fd0b48dd4098906a71190eb36e322cf0c5440d9ed", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4265bbb6-ef4c-49c9-b4f1-8ce0b1435d66", "node_type": "1", "metadata": {"header_path": "/[EP5.1] [Executable] Upgrade DNSSEC support/"}, "hash": "7faf1a808f0506aed12badee69a728968560c3928fda23b5fffc637b0b4521ef", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Abstract\n\nThe ENS labs team has been working on a new version of the DNSSEC oracle and the DNS registrar that, combined with wildcard resolution (ENSIP 10) and CCIP-Read, allow for 'gasless DNSSEC' - enabling the use of DNS names inside ENS with no onchain transactions required. This proposal replaces the existing DNSSEC registrar with the new one.\n\nExisting DNS names will continue to function as before, and names can still be imported using the 'legacy' method. The new registrar also allows configuring a name by setting a TXT record on \\_ens.name.tld, containing the address of a special resolver contract to use, followed by any resolver-specific data. Resolvers designed for the purpose can be configured to parse this extra data, making configuration entirely offchain a possibility.\n\nAlongside the new registrar and oracle contracts, a simple resolver is provided that reads the Ethereum address to resolve a name to from the extra data.\n\nPost-execution, ENS Labs will run a process to upgrade all current DNS TLDs to use the new registrar. TLDs will only function with the new registrar once this (permissionless) transaction is sent for the TLD.", "mimetype": "text/plain", "start_char_idx": 946, "end_char_idx": 2107, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4265bbb6-ef4c-49c9-b4f1-8ce0b1435d66": {"__data__": {"id_": "4265bbb6-ef4c-49c9-b4f1-8ce0b1435d66", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.1.mdx", "file_name": "5.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.1.mdx", "header_path": "/[EP5.1] [Executable] Upgrade DNSSEC support/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["contract", "transactions", "registrar", "0xb32cb5677a7c971689228ec835800432b339ba2b", "0xab528d626ec275e3fad363ff1393a41f581c5897", "address", "argument", "passing", "value", "setcontroller", "function", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "17a3cb0d28286bc508f58906e9a5ff9733cb8573", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.1.mdx", "file_name": "5.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.1.mdx"}, "hash": "43cbbc008283ee9afc794b65b294d1b40afbdf84988c9c88bc5c0b51f2068975", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "71d9f953-d01b-4330-b964-03f22881be5e", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.1.mdx", "file_name": "5.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.1.mdx", "header_path": "/[EP5.1] [Executable] Upgrade DNSSEC support/"}, "hash": "cef040e6d24aac8fac17b1a2048d4add4765c82fe332e323dcf17e611253514b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2dd7a183-8549-4ad6-88d8-53dec3f53890", "node_type": "1", "metadata": {"header_path": "/[EP5.1] [Executable] Upgrade DNSSEC support/"}, "hash": "ebeb918e30a14173d5ec3b15f1c69639a1c4d9005a5ddecdd91029eb7485e836", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\nCall `setController` on the Root contract at `root.ens.eth`, passing in the address of the new DNS registrar (`0xb32cb5677a7c971689228ec835800432b339ba2b`). ## Transactions\n\n| Address                                    | Value | Function      | Argument | Value                                      |\n| ------------------------------------------ | ----- | ------------- | -------- | ------------------------------------------ |\n| 0xaB528d626EC275E3faD363fF1393A41F581c5897 | 0 ETH | setController |          | 0xB32cB5677a7C971689228EC835800432B339bA2B |\n|                                            |       |               |          | true                                       |", "mimetype": "text/plain", "start_char_idx": 2109, "end_char_idx": 2283, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c0e8fe01-3bbf-444e-b582-a6c1e28da36b": {"__data__": {"id_": "c0e8fe01-3bbf-444e-b582-a6c1e28da36b", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.10.mdx", "file_name": "5.10.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.10.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.10.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["confirms", "attacks", "against", "securitycouncil", "security", "malicious", "proposals", "proposal", "individuals", "using", "smart", "canceling", "protect", "defined", "governance"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e39e027548c49485ed06ca8330b68d62d263f701", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.10.mdx", "file_name": "5.10.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.10.mdx"}, "hash": "58dab8291effefa556533528b0b11c4ef8df26565282612e24a57c3925efd68d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3470cd20-cc9f-472e-95ba-a9aa1f5c68e7", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "3fc02258e176f3c7f78c2655a7852c462ca1703854bc69e166bdcd8bfa1765ae", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: 'This proposal confirms the 8 individuals for the Security Council, as defined in EP5.7, to protect against governance attacks by canceling malicious proposals using the SecurityCouncil smart contract.'\nauthors: ['alextnetto.eth']\nproposal:\n  snapshot: '0xa0b1bfadf6853b5b0d59d3c4d73c434fc6389339887d05de805361372eb17c3a'\n  type: 'social'\n--- # [EP5.10] [Social] Confirming the ENS DAO Security Council Members\n\n::authors\n\n| **Status**            | Passed                                                                                                                   |\n| --------------------- | ------------------------------------------------------------------------------------------------------------------------ |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/temp-check-enable-cancel-role-on-the-dao/19090)                                    |\n| **Votes**             | [Snapshot](https://snapshot.box/#/s:ens.eth/proposal/0xa0b1bfadf6853b5b0d59d3c4d73c434fc6389339887d05de805361372eb17c3a) |", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 359, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d9f4485c-36bd-4e0d-8df8-26d5aff9e0f3": {"__data__": {"id_": "d9f4485c-36bd-4e0d-8df8-26d5aff9e0f3", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.10.mdx", "file_name": "5.10.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.10.mdx", "header_path": "/[EP5.10] [Social] Confirming the ENS DAO Security Council Members/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.10.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["protecting", "security", "abstract", "responsible", "proposal", "individuals", "passing", "council", "following", "successful", "confirm", "defined", "permissions"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e39e027548c49485ed06ca8330b68d62d263f701", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.10.mdx", "file_name": "5.10.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.10.mdx"}, "hash": "58dab8291effefa556533528b0b11c4ef8df26565282612e24a57c3925efd68d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3470cd20-cc9f-472e-95ba-a9aa1f5c68e7", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.10.mdx", "file_name": "5.10.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.10.mdx", "header_path": "/"}, "hash": "533ea3f1d5fc75df9f6d42a5657f8b5aadbf26767f934ce3192f7b282f864871", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f93c5942-6ed5-49e7-8ac0-2744a56ebb23", "node_type": "1", "metadata": {"header_path": "/[EP5.10] [Social] Confirming the ENS DAO Security Council Members/"}, "hash": "536f101e0558394a11e07532a341c48f77b6cba5bcfc534b22b604e189eb99b4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Abstract\n\nFollowing the successful passing of the [EP5.7](https://snapshot.org/#/ens.eth/proposal/0xf3a4673fe04a3ecfed4a2f066f6ced1539a5466d61630428333360b843653c54), this proposal aims to confirm the 8 individuals who will form the Security Council with the permissions defined in [EP5.7](https://snapshot.org/#/ens.eth/proposal/0xf3a4673fe04a3ecfed4a2f066f6ced1539a5466d61630428333360b843653c54). The Security Council will be responsible for protecting the organization from potential governance attacks by having the ability to cancel malicious proposals using the [SecurityCouncil](https://github.com/blockful-io/security-council-ens/blob/main/README.md) smart contract.", "mimetype": "text/plain", "start_char_idx": 1038, "end_char_idx": 1715, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f93c5942-6ed5-49e7-8ac0-2744a56ebb23": {"__data__": {"id_": "f93c5942-6ed5-49e7-8ac0-2744a56ebb23", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.10.mdx", "file_name": "5.10.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.10.mdx", "header_path": "/[EP5.10] [Social] Confirming the ENS DAO Security Council Members/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.10.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["mitigate", "attacks", "security", "proposal", "council", "discussion", "enable", "following", "which", "forum", "titled", "cancel", "specification", "detailed", "governance"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e39e027548c49485ed06ca8330b68d62d263f701", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.10.mdx", "file_name": "5.10.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.10.mdx"}, "hash": "58dab8291effefa556533528b0b11c4ef8df26565282612e24a57c3925efd68d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d9f4485c-36bd-4e0d-8df8-26d5aff9e0f3", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.10.mdx", "file_name": "5.10.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.10.mdx", "header_path": "/[EP5.10] [Social] Confirming the ENS DAO Security Council Members/"}, "hash": "e6529e1ee217adea930e4d237ae79fd8225a3129c8b0ef33b48ec5f21d93b057", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2de5a625-0abf-4ca1-b0ee-34c513e41065", "node_type": "1", "metadata": {"header_path": "/[EP5.10] [Social] Confirming the ENS DAO Security Council Members/Specification/"}, "hash": "8aed8ac9127b38f9d31caa8143af4595fcd9b77ab0ccc4759bf15a5dd02190df", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\nA discussion was held in the ENS forum titled **[[Temp Check] Enable CANCEL role on the DAO](https://discuss.ens.domains/t/temp-check-enable-cancel-role-on-the-dao/19090)**.\nFollowing that discussion, The [EP5.7](https://snapshot.org/#/ens.eth/proposal/0xf3a4673fe04a3ecfed4a2f066f6ced1539a5466d61630428333360b843653c54) proposal, which can be [found here](https://snapshot.org/#/ens.eth/proposal/0xf3a4673fe04a3ecfed4a2f066f6ced1539a5466d61630428333360b843653c54), detailed the need for a Security Council to mitigate the risk of governance attacks on the ENS DAO. The proposal passed with overwhelming support from the community, receiving 1.4 million votes and 100% approval.\n\nAs outlined in the [EP5.7](https://snapshot.org/#/ens.eth/proposal/0xf3a4673fe04a3ecfed4a2f066f6ced1539a5466d61630428333360b843653c54) proposal, the [SecurityCouncil](https://github.com/blockful-io/security-council-ens/blob/main/README.md) smart contract will be deployed, and the Security Council multisig will be granted the PROPOSER_ROLE in the timelock. This will allow the Security Council to cancel malicious proposals, without granting the ability to initiate proposals, vote on proposals, or perform any other actions. The contract also features an expiration mechanism that automatically revokes the council's veto power after 2 years, promoting decentralization.", "mimetype": "text/plain", "start_char_idx": 1717, "end_char_idx": 3087, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2de5a625-0abf-4ca1-b0ee-34c513e41065": {"__data__": {"id_": "2de5a625-0abf-4ca1-b0ee-34c513e41065", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.10.mdx", "file_name": "5.10.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.10.mdx", "header_path": "/[EP5.10] [Social] Confirming the ENS DAO Security Council Members/Specification/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.10.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["included", "delegates", "specified", "security", "proposed", "consist", "council", "individuals", "following", "multisig", "contract", "members"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e39e027548c49485ed06ca8330b68d62d263f701", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.10.mdx", "file_name": "5.10.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.10.mdx"}, "hash": "58dab8291effefa556533528b0b11c4ef8df26565282612e24a57c3925efd68d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f93c5942-6ed5-49e7-8ac0-2744a56ebb23", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.10.mdx", "file_name": "5.10.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.10.mdx", "header_path": "/[EP5.10] [Social] Confirming the ENS DAO Security Council Members/"}, "hash": "3382ffaa1114c342e31d668d729eac1f4da1c2afd20c85f32378b8e5869ed933", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "975ef36b-3be6-470f-85b9-bf9e6d5e2378", "node_type": "1", "metadata": {"header_path": "/[EP5.10] [Social] Confirming the ENS DAO Security Council Members/Specification/"}, "hash": "68a68756d1e47dbfa5632946d249cb7eeed37995aea4eee3cae30c7e96352e35", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Proposed Security Council Members\n\nThe proposed Security Council will consist of the following 8 individuals in a 4/8 multisig configuration:\n\n1. [nick.eth](https://www.tally.xyz/gov/ens/delegate/nick.eth)\n2. [griff.eth](https://www.tally.xyz/gov/ens/delegate/0x839395e20bbb182fa440d08f850e6c7a8f6f0780)\n3. [avsa.eth](https://www.tally.xyz/gov/ens/delegate/avsa.eth)\n4. [lefteris.eth](https://www.tally.xyz/gov/ens/delegate/lefteris.eth)\n5. [katherineykwu.eth](https://www.tally.xyz/gov/ens/delegate/katherineykwu.eth)\n6. [fireeyes.eth](https://www.tally.xyz/gov/ens/delegate/fireeyesdao.eth)\n7. [brantly.eth](https://www.tally.xyz/gov/ens/delegate/brantly.eth)\n8. [alextnetto.eth](https://www.tally.xyz/gov/ens/delegate/alextnetto.eth)\n\nThe text of [EP5.7](https://snapshot.org/#/ens.eth/proposal/0xf3a4673fe04a3ecfed4a2f066f6ced1539a5466d61630428333360b843653c54) specified that the 5 delegates included on the veto contract would be included in the security council. To fill the remaining 3 places on the council, consideration was given to, delegation power, past activity in governance, economic skin on the game, and jurisdictional diversity (for legal reasons).", "mimetype": "text/plain", "start_char_idx": 3089, "end_char_idx": 4261, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "975ef36b-3be6-470f-85b9-bf9e6d5e2378": {"__data__": {"id_": "975ef36b-3be6-470f-85b9-bf9e6d5e2378", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.10.mdx", "file_name": "5.10.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.10.mdx", "header_path": "/[EP5.10] [Social] Confirming the ENS DAO Security Council Members/Specification/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.10.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["complete", "social", "separate", "security", "voting", "proposal", "individuals", "council", "executable", "confirm", "entire", "seeks", "simple"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e39e027548c49485ed06ca8330b68d62d263f701", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.10.mdx", "file_name": "5.10.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.10.mdx"}, "hash": "58dab8291effefa556533528b0b11c4ef8df26565282612e24a57c3925efd68d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2de5a625-0abf-4ca1-b0ee-34c513e41065", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.10.mdx", "file_name": "5.10.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.10.mdx", "header_path": "/[EP5.10] [Social] Confirming the ENS DAO Security Council Members/Specification/"}, "hash": "ffc2e8147ce15aec6095253632f24dc6de14d372405326878db633be0a8e2d1c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cf349581-82cb-4205-b65a-1b2993a9ef0c", "node_type": "1", "metadata": {"header_path": "/[EP5.10] [Social] Confirming the ENS DAO Security Council Members/Specification/"}, "hash": "88921a0b08c5e7221659a54d9be6db103e23fa57469c598519199ca3200b5832", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Voting\n\nThis social proposal seeks to confirm the complete list of 8 individuals as the Security Council members. **The vote will be a simple For/Against/Abstain vote on the entire list.** If the proposal is successful, a separate executable proposal will be put forward to deploy the SecurityCouncil smart contract and grant the necessary roles.\n\nFor this vote, the 8 proposed members of the Security Council will vote \"**Abstain**\" to help meet quorum requirements while preserving their impartiality.", "mimetype": "text/plain", "start_char_idx": 4263, "end_char_idx": 4770, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cf349581-82cb-4205-b65a-1b2993a9ef0c": {"__data__": {"id_": "cf349581-82cb-4205-b65a-1b2993a9ef0c", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.10.mdx", "file_name": "5.10.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.10.mdx", "header_path": "/[EP5.10] [Social] Confirming the ENS DAO Security Council Members/Specification/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.10.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["confirmation", "deployed", "social", "securitycouncil", "security", "multsig", "council", "following", "manually", "steps", "contract", "through", "members"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e39e027548c49485ed06ca8330b68d62d263f701", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.10.mdx", "file_name": "5.10.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.10.mdx"}, "hash": "58dab8291effefa556533528b0b11c4ef8df26565282612e24a57c3925efd68d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "975ef36b-3be6-470f-85b9-bf9e6d5e2378", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.10.mdx", "file_name": "5.10.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.10.mdx", "header_path": "/[EP5.10] [Social] Confirming the ENS DAO Security Council Members/Specification/"}, "hash": "8e00a7d4412476530058da3bc68fe1068c81d7a174acba2367b8b84d818f57a7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fa9ddaa7-c258-4e97-bae7-d15e7676e7c4", "node_type": "1", "metadata": {"header_path": "/[EP5.10] [Social] Confirming the ENS DAO Security Council Members/"}, "hash": "583d18cca5970865d0d2fa604d2e8820954c7dcd5a905e3804dbdea887fb6652", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Next Steps\n\nUpon confirmation of the Security Council members through this social proposal, the following steps will be taken:\n\n1. The SecurityCouncil contract will be manually deployed to Mainnet.\n2. A multsig will be manually created with the 8 members as signers.\n3. The multisig will accept ownership of the SecurityCouncil contract.\n4. The executable proposal will grant the PROPOSER_ROLE to the SecurityCouncil contract address using the grantRole function in the timelock.\n\nOnce the executable proposal is passed and the contract is deployed with the necessary roles granted, the Security Council will be able to cancel malicious proposals to protect the ENS DAO.\n\nAfter the specified expiration period (2 years), anyone can revoke the PROPOSER_ROLE from the Security Council, ensuring this is a time-limited mechanism that defaults back to a more decentralized posture.", "mimetype": "text/plain", "start_char_idx": 4772, "end_char_idx": 5653, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fa9ddaa7-c258-4e97-bae7-d15e7676e7c4": {"__data__": {"id_": "fa9ddaa7-c258-4e97-bae7-d15e7676e7c4", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.10.mdx", "file_name": "5.10.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.10.mdx", "header_path": "/[EP5.10] [Social] Confirming the ENS DAO Security Council Members/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.10.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["supply", "votes", "social", "success", "quorum", "criteria", "voting", "million", "proposal", "receive", "following", "requirements", "total", "minimum"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e39e027548c49485ed06ca8330b68d62d263f701", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.10.mdx", "file_name": "5.10.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.10.mdx"}, "hash": "58dab8291effefa556533528b0b11c4ef8df26565282612e24a57c3925efd68d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cf349581-82cb-4205-b65a-1b2993a9ef0c", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.10.mdx", "file_name": "5.10.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.10.mdx", "header_path": "/[EP5.10] [Social] Confirming the ENS DAO Security Council Members/Specification/"}, "hash": "214a58004b9ce7a5bc1742be826f9163763b617d4c8babbb70746da6407dc25c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Success Criteria\n\nFor this social proposal to pass, the following quorum and voting requirements must be met:\n\n1. **Quorum**: The proposal must receive a minimum of 1% of the total supply of $ENS (1 million votes) in the form of \"Yes\" and \"Abstain\" votes combined. \"No\" votes do not count towards quorum.\n\n2. **Approval**: Once the quorum is reached, the proposal requires a simple majority (>50%) of \"Yes\" votes among the \"Yes\" and \"No\" votes to pass. \"Abstain\" votes do not count towards the approval calculation.", "mimetype": "text/plain", "start_char_idx": 5655, "end_char_idx": 6173, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cc427ac7-d114-4a32-81bd-3b52c9e61b10": {"__data__": {"id_": "cc427ac7-d114-4a32-81bd-3b52c9e61b10", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.11.mdx", "file_name": "5.11.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.11.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.11.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["specified", "group", "treasury", "amended", "proposal", "funds", "passed", "working", "support", "including", "governance"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a598e792434e0549ac45f9b4f47a59c16ce2db58", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.11.mdx", "file_name": "5.11.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.11.mdx"}, "hash": "c34aa1c565b588b7a044e08b2c3c46a38e536390cebfa4de572afd935596aa4d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "abb37bfb-c704-40d2-9afb-b82e20f741a7", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "a05bcd61264543c4e75bc95c3ab4357ce71c3e4a3dd4444a847abe67b9ba83b3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: 'This proposal funds the Meta-Governance Working Group with 374k USDC and 150k ENS to support DAO-wide operations, including Working Groups, treasury management, and governance initiatives, as specified in EP 5.9 and amended by EP 5.8.'\nauthors: ['avsa.eth']\nproposal:\n  tally: '76312276134880424811339391717815330375652916610982980144903695563372140531115'\n  type: 'executable'\n--- # [EP5.11] [Executable] Fund the Meta-Governance Working Group (Term 5)\n\n::authors\n\n| **Status**            | Passed                                                                                                                    |\n| --------------------- | ------------------------------------------------------------------------------------------------------------------------- |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/ep5-11-executable-proposal-fund-the-meta-governance-working-group-term-5/19358)     |\n| **Votes**             | [Agora](https://agora.ensdao.org/proposals/76312276134880424811339391717815330375652916610982980144903695563372140531115) |", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 399, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a35a9bba-9db1-4e28-8c1e-1f052c9bb13d": {"__data__": {"id_": "a35a9bba-9db1-4e28-8c1e-1f052c9bb13d", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.11.mdx", "file_name": "5.11.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.11.mdx", "header_path": "/[EP5.11] [Executable] Fund the Meta-Governance Working Group (Term 5)/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.11.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["amendments", "seeking", "request", "group", "abstract", "treasury", "introduced", "proposal", "execute", "funding", "support", "including", "working", "governance", "aligns"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a598e792434e0549ac45f9b4f47a59c16ce2db58", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.11.mdx", "file_name": "5.11.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.11.mdx"}, "hash": "c34aa1c565b588b7a044e08b2c3c46a38e536390cebfa4de572afd935596aa4d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "abb37bfb-c704-40d2-9afb-b82e20f741a7", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.11.mdx", "file_name": "5.11.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.11.mdx", "header_path": "/"}, "hash": "75964fbb2185e22acd051908a493089fa7d793e124951a451affb2a2ceb3fdd4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9c937e25-2b26-4526-81cd-c591cc5732a9", "node_type": "1", "metadata": {"header_path": "/[EP5.11] [Executable] Fund the Meta-Governance Working Group (Term 5)/"}, "hash": "b69b82f1004127324a101870ef7f0e225b9c79956059744b1da47acc421ae7c4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Abstract\n\nMeta-Governance is seeking funding to support DAO-wide operations, including Working Groups, treasury management, and governance initiatives. This request aligns with Rule 10.1.1 of the [Working Group Rules](https://docs.ens.domains/dao/wg/rules) and amendments introduced in [EP 4.8](https://docs.ens.domains/dao/proposals/4.8). This proposal will execute the funding specification according to [EP 5.9](https://snapshot.org/#/ens.eth/proposal/0x66d355555c24ed0d2fed0aee89e4fe009e2925c84144c4edc707d33e7c19e554), as amended by [EP 5.8](https://snapshot.org/#/ens.eth/proposal/0x1f328fd1fda5f3cabfdace3e521403def7ad41b0b0582e27334c135cd23c511d).", "mimetype": "text/plain", "start_char_idx": 1086, "end_char_idx": 1744, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9c937e25-2b26-4526-81cd-c591cc5732a9": {"__data__": {"id_": "9c937e25-2b26-4526-81cd-c591cc5732a9", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.11.mdx", "file_name": "5.11.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.11.mdx", "header_path": "/[EP5.11] [Executable] Fund the Meta-Governance Working Group (Term 5)/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.11.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["processes", "motivation", "group", "treasury", "working", "funding", "support", "manage", "requests", "build", "governance"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a598e792434e0549ac45f9b4f47a59c16ce2db58", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.11.mdx", "file_name": "5.11.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.11.mdx"}, "hash": "c34aa1c565b588b7a044e08b2c3c46a38e536390cebfa4de572afd935596aa4d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a35a9bba-9db1-4e28-8c1e-1f052c9bb13d", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.11.mdx", "file_name": "5.11.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.11.mdx", "header_path": "/[EP5.11] [Executable] Fund the Meta-Governance Working Group (Term 5)/"}, "hash": "5b02f1ba5a5199aa6b5f041c8e1abae00b9ad0c5d42653bf8bba97ad04331853", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b26387b5-0fea-45d0-b9eb-31ec94cc9ebf", "node_type": "1", "metadata": {"header_path": "/[EP5.11] [Executable] Fund the Meta-Governance Working Group (Term 5)/Motivation/"}, "hash": "ca7a2af6d5eb258799fa265417f7bf9c429db4d82c8a0c6a48ce184f5494f434", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Motivation ### [EP 5.9 \u2014 Funding Request: ENS Meta-Governance Working Group Term 5 ](https://discuss.ens.domains/t/4-4-2-social-funding-request-ens-meta-goverance-working-group/17994)\n\nThe Meta-Governance Working Group requests funding of **374,000 USDC and 150,000 ENS** from the ENS DAO treasury ([wallet.ensdao.eth](https://etherscan.io/address/0xFe89cc7aBB2C4183683ab71653C4cdc9B02D44b7)). This funding will be used to support the governance processes of the ENS DAO and to manage and build infrastructure that supports the ENS DAO, its treasury, and its Working Groups.", "mimetype": "text/plain", "start_char_idx": 1746, "end_char_idx": 1759, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b570aebc-10d5-4480-aad2-b1fb9f02144f": {"__data__": {"id_": "b570aebc-10d5-4480-aad2-b1fb9f02144f", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.11.mdx", "file_name": "5.11.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.11.mdx", "header_path": "/[EP5.11] [Executable] Fund the Meta-Governance Working Group (Term 5)/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.11.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["addresses", "improves", "transfers", "version", "proposal", "roles", "transfer", "following", "0x91c32893216de3ea0a55abb9851f581d4503d39b", "modifier", "updated", "zodiac", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a598e792434e0549ac45f9b4f47a59c16ce2db58", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.11.mdx", "file_name": "5.11.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.11.mdx"}, "hash": "c34aa1c565b588b7a044e08b2c3c46a38e536390cebfa4de572afd935596aa4d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b26387b5-0fea-45d0-b9eb-31ec94cc9ebf", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.11.mdx", "file_name": "5.11.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.11.mdx", "header_path": "/[EP5.11] [Executable] Fund the Meta-Governance Working Group (Term 5)/Motivation/"}, "hash": "c1083cc3f28e350c1f249d754da1d5d0ce5e0f73da7f0c0bbbbe19d1a57c4308", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\nThe following transfers are to be made:\n\n- Transfer 374,000 USDC to [main.mg.wg.ens.eth](https://etherscan.io/address/0x91c32893216dE3eA0a55ABb9851f581d4503d39b).\n- Transfer 150,000 ENS to [main.mg.wg.ens.eth](https://etherscan.io/address/0x91c32893216dE3eA0a55ABb9851f581d4503d39b).\n\nAddresses for confirmation:\n\n- 0x91c32893216de3ea0a55abb9851f581d4503d39b for main.mg.wg.ens.eth ---\ndescription: 'This proposal aims to roll out an updated version of the Zodiac Roles Modifier module. The new version improves usability and transparency of treasury management operations. Upon approval, the Roles Modifier v2 module will be activated. Furthermore, this proposal requests authorization from the DAO to revise the permissions policy.'\nauthors: ['avsa.eth']\nproposal:\n  tally: '107992041043258996427224563090014372885335179099580585497266204203463156791290'\n  type: 'executable'\n---", "mimetype": "text/plain", "start_char_idx": 2326, "end_char_idx": 2725, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a037b9d7-b6ca-45e2-89dd-1d106cfde39c": {"__data__": {"id_": "a037b9d7-b6ca-45e2-89dd-1d106cfde39c", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.12.mdx", "file_name": "5.12.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.12.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.12.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["updates", "endowment", "roles", "passed", "migration", "modifier", "permissions"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "bb38110a632599a398dca4776103984395f43830", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.12.mdx", "file_name": "5.12.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.12.mdx"}, "hash": "6530c1c085d61ef5b43cf8ac51d65af66d1faf82f38a849371de25531a79c277", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "34e7d7bc-c6ba-4f8e-b04a-b6b29bc36a78", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.12.mdx", "file_name": "5.12.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.12.mdx", "header_path": "/"}, "hash": "82fd35b0a2d7d185f61f01d40ee0a10b6ddf631e30f900cf3a616191e55b887e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7c352582-1b5c-47cf-b84d-e4376f8e10b2", "node_type": "1", "metadata": {"header_path": "/[EP 5.12] [Executable] Roles Modifier V2 Migration & Updates to Endowment Permissions/"}, "hash": "b1f5ec008e95105d203607bab890f75b0a6f4752b1d398d58ca8c80929654448", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# [EP 5.12] [Executable] Roles Modifier V2 Migration & Updates to Endowment Permissions\n\n::authors\n\n| **Status**            | Passed                                                                                                                     |\n| --------------------- | -------------------------------------------------------------------------------------------------------------------------- |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/ep-5-12-roles-modifier-v2-migration-updates-to-endowment-permissions/19173)          |\n| **Votes**             | [Agora](https://agora.ensdao.org/proposals/107992041043258996427224563090014372885335179099580585497266204203463156791290) |", "mimetype": "text/plain", "start_char_idx": 501, "end_char_idx": 1204, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7c352582-1b5c-47cf-b84d-e4376f8e10b2": {"__data__": {"id_": "7c352582-1b5c-47cf-b84d-e4376f8e10b2", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.12.mdx", "file_name": "5.12.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.12.mdx", "header_path": "/[EP 5.12] [Executable] Roles Modifier V2 Migration & Updates to Endowment Permissions/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.12.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["management", "usability", "improves", "treasury", "abstract", "transparency", "version", "proposal", "roles", "modifier", "updated", "zodiac"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "bb38110a632599a398dca4776103984395f43830", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.12.mdx", "file_name": "5.12.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.12.mdx"}, "hash": "6530c1c085d61ef5b43cf8ac51d65af66d1faf82f38a849371de25531a79c277", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a037b9d7-b6ca-45e2-89dd-1d106cfde39c", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.12.mdx", "file_name": "5.12.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.12.mdx", "header_path": "/"}, "hash": "2d976baacef74331cdc1813ce09cdb87f1329e565777a25f56e493373fd1b686", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e506da9d-ba43-4a58-899a-f2c2cf722216", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "a6b5126c5803cf6250c21fd42322dda3d5d555f52ac285e0ad796f361c17f33b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Abstract\n\nThis proposal aims to roll out an updated version of the Zodiac Roles Modifier module. The new version improves usability and transparency of treasury management operations. Upon approval, the Roles Modifier v2 module will be activated.\n\nFurthermore, this proposal requests authorization from the DAO to revise the permissions policy. A notable change includes enabling swapping actions on CoW Swap while the other permissions primarily focus on eliminating obsolete actions and protocols, and refining parameters within the existing permissions.", "mimetype": "text/plain", "start_char_idx": 1206, "end_char_idx": 1765, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e506da9d-ba43-4a58-899a-f2c2cf722216": {"__data__": {"id_": "e506da9d-ba43-4a58-899a-f2c2cf722216", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.12.mdx", "file_name": "5.12.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.12.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.12.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["facilitates", "management", "ensuring", "motivation", "endowment", "proxy", "policy", "roles", "migration", "modifier", "voted", "defined", "permissions", "zodiac"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "bb38110a632599a398dca4776103984395f43830", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.12.mdx", "file_name": "5.12.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.12.mdx"}, "hash": "6530c1c085d61ef5b43cf8ac51d65af66d1faf82f38a849371de25531a79c277", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7c352582-1b5c-47cf-b84d-e4376f8e10b2", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.12.mdx", "file_name": "5.12.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.12.mdx", "header_path": "/[EP 5.12] [Executable] Roles Modifier V2 Migration & Updates to Endowment Permissions/"}, "hash": "d484ccd3868658e760f9b4bcaffd321c95cd14d6b1f6e9edbd48830ff3198381", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7f7eb80e-bc97-4316-898f-51e03e379618", "node_type": "1", "metadata": {"header_path": "/Roles v2 Migration/"}, "hash": "6230c4e788d8871b8c30e8f183d8f2e8722e34475382d10b0bd6e53179c40b60", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Roles v2 Migration ## Motivation\n\nAs\u00a0[previously stated](https://discuss.ens.domains/t/endowment-initiation/15952#a-list-of-zodiac-roles-modifier-permissions-for-the-manager-role-9), the Zodiac Roles Modifier facilitates karpatkey\u2019s proxy management of the Endowment by ensuring that only pre-approved transactions, defined by the permissions policy voted on by the DAO, can be executed. In collaboration with karpatkey, the Gnosis Guild team has significantly upgraded the Zodiac Roles Modifier module and the Zodiac Roles app. These enhancements have resulted in a more powerful and robust on-chain permissions infrastructure with the following improvements:\n\n- **Introduction of Allowances**: Implementation of spending limits within permissions.\n- **Enhanced Call Data Scoping Toolset**: This toolset considerably broadens the range of functions that can have permissions set, increasing flexibility.\n- **Advanced Logical Conditions**: Allows for the creation of complex permissions structures to accommodate sophisticated operational needs.\n- **Compatibility with**\u00a0[**DeFi Kit**](https://kit.karpatkey.com/): This feature integrates with karpatkey\u2019s permissions policy building module, facilitating the straightforward crafting of protocol actions.\n- **Improved Visualisation and User Interface**: the new\u00a0[Zodiac Roles app UI\u00a01](https://roles.gnosisguild.org/)\u00a0not only displays permissions clearly but also provides a user-friendly interface to compare changes in each policy update, enhancing transparency and simplifying audits.\n\nFor more detailed information, please refer to the following resources:\n\n- **Documentation**:\u00a0[The Zodiac Roles Modifier](https://docs.roles.gnosisguild.org/)\\\n- **Articles**:\u00a0[Evolving Smart Accounts with Onchain Permissions](https://gnosisguild.mirror.xyz/oQcy_c62huwNkFS0cMIxXwQzrfG0ESQax8EBc_tWwwk),\u00a0[Permissions as code](https://engineering.gnosisguild.org/posts/permissions-as-code)", "mimetype": "text/plain", "start_char_idx": 1767, "end_char_idx": 1787, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1e390e81-6473-43ef-b850-1b0cf47ec438": {"__data__": {"id_": "1e390e81-6473-43ef-b850-1b0cf47ec438", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.12.mdx", "file_name": "5.12.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.12.mdx", "header_path": "/Roles v2 Migration/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.12.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["audited", "audits", "auditing", "reports", "zodiac", "audit", "roles", "internal", "modifier", "available", "rigorously", "contract", "detailed", "gnosis"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "bb38110a632599a398dca4776103984395f43830", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.12.mdx", "file_name": "5.12.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.12.mdx"}, "hash": "6530c1c085d61ef5b43cf8ac51d65af66d1faf82f38a849371de25531a79c277", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7f7eb80e-bc97-4316-898f-51e03e379618", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.12.mdx", "file_name": "5.12.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.12.mdx", "header_path": "/Roles v2 Migration/"}, "hash": "de78d3782c0b51b2e5bff3bcd4900c3bc20610dde8aa90e74bab6e792941228e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "516afe93-b3af-46a5-8fce-af38be0c1bf5", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "bb6382eca968abb1fcfa06d42c97575325d65b88480378331085fb7568b8505a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Contract audits\n\nThe Zodiac Roles Modifier v2 contract has been rigorously audited by G0 Group, the internal auditing team of Gnosis DAO, and by\u00a0[Omniscia](https://omniscia.io/). The detailed audit reports are available for review\u00a0[here\u00a01](https://github.com/gnosisguild/zodiac-modifier-roles/tree/main/packages/evm/docs). # Changes to Permissions policy\n\nThis proposal outlines the following modifications to the permissions policy:\n\n1. **Token Arrays for Swapping**:\n\n- Considering the tokens involved in the existing permissions, we have updated the token arrays to ensure they can be seamlessly swapped across the various whitelisted protocols and aggregators.\n- **Token IN Allowlist**: \\\\[CRV, DAI, USDT, BAL, AURA, CVX, ETHx, COMP, rETH, SWISE, wstETH, LDO, WETH, ankrETH, USDC, stETH].\n- **Token OUT Allowlist**: \\\\[DAI, USDT, USDC, rETH, wstETH, WETH, stETH].\n- 4. The above arrays are to be utilised for swapping on CoW Swap, with equivalent lists replicated for Uniswap v3 and Balancer.\n\n2. **Introduction of CoW Swap**\u00a0([diff\u00a04](https://roles.gnosisguild.org/eth:0xBd1099dFD3c11b65FB4BB19A350da2f5B61Efb0d/roles/ENS-MANAGER-V1/diff/C0zUV4NtNErufEpbpNc2S55F2oiAGw8aKE2jYwWjLg?annotations=false#right-0x23da9ade38e4477b23770ded512fd37b12381fab)):\n\n- Addition of a\u00a0**CoW Swap Order signer**\u00a0to enable gas-minimised and MEV-protected swaps. This includes an extensive set of aggregated exchange routes, improving the efficiency and effectiveness of required swaps.\n- Tokens will be swapped on CoW Swap according to the token IN/OUT allowlists mentioned above.\n\n3. **Deprecations and Removals**:\n\n- **Uniswap v2 Swaps**\u00a0([diff\u00a01](https://roles.gnosisguild.org/eth:0xBd1099dFD3c11b65FB4BB19A350da2f5B61Efb0d/roles/ENS-MANAGER-V1/diff/C0zUV4NtNErufEpbpNc2S55F2oiAGw8aKE2jYwWjLg?annotations=false#left-0x68b3465833fb72a70ecdf485e0e4c7bd8665fc45-0x472b43f3)): Removed due to insufficient liquidity in V2 pools.\n- **Stakewise v2**: Deprecated functions related to deposit ([diff\u00a01](https://roles.gnosisguild.org/eth:0xBd1099dFD3c11b65FB4BB19A350da2f5B61Efb0d/roles/ENS-MANAGER-V1/diff/C0zUV4NtNErufEpbpNc2S55F2oiAGw8aKE2jYwWjLg?annotations=false#left-0xc874b064f465bdd6411d45734b56fac750cda29a)) and claim ([diff\u00a01](https://roles.gnosisguild.org/eth:0xBd1099dFD3c11b65FB4BB19A350da2f5B61Efb0d/roles/ENS-MANAGER-V1/diff/C0zUV4NtNErufEpbpNc2S55F2oiAGw8aKE2jYwWjLg?annotations=false#left-0xa3f21010e8b9a3930996c8849df38f9ca3647c20)) functions in light of the recent launch of Stakewise v3. Consequently, permitted actions related to Stakewise v2\u2019s sETH2-ETH Uniswap pool are also removed ([diff](https://roles.gnosisguild.org/eth:0xBd1099dFD3c11b65FB4BB19A350da2f5B61Efb0d/roles/ENS-MANAGER-V1/diff/C0zUV4NtNErufEpbpNc2S55F2oiAGw8aKE2jYwWjLg?annotations=false#left-0xc36442b4a4522e871399cd717abdd847ab11fe88)).\n- **Compound v2**\u00a0([diff](https://roles.gnosisguild.org/eth:0xBd1099dFD3c11b65FB4BB19A350da2f5B61Efb0d/roles/ENS-MANAGER-V1/diff/C0zUV4NtNErufEpbpNc2S55F2oiAGw8aKE2jYwWjLg?annotations=false#left-0x39aa39c021dfbae8fac545936693ac917d5e7563)): Discontinued all actions targeting v2 contracts and v2 cTokens (cUSDC and cDAI) due to the ongoing transition of the protocol to its v3.\n- **Revocation of Existing/Obsolete Allowances:**\u00a0All existing and outdated allowances previously set by the Endowment are revoked (set to zero). The ability to call the corresponding approve functions is included in the newly proposed policy. Accordingly, the payload contains a bundle of transactions to revoke these allowances.\n\n4. **Updates**:\n\n- **Uniswap v3**\u00a0([diff\u00a01](https://roles.gnosisguild.org/eth:0xBd1099dFD3c11b65FB4BB19A350da2f5B61Efb0d/roles/ENS-MANAGER-V1/diff/C0zUV4NtNErufEpbpNc2S55F2oiAGw8aKE2jYwWjLg?annotations=false#right-0x68b3465833fb72a70ecdf485e0e4c7bd8665fc45-0x04e45aaf))\u00a0**and Balancer**\u00a0([diff](https://roles.gnosisguild.org/eth:0xBd1099dFD3c11b65FB4BB19A350da2f5B61Efb0d/roles/ENS-MANAGER-V1/diff/C0zUV4NtNErufEpbpNc2S55F2oiAGw8aKE2jYwWjLg?annotations=false#right-0xba12222222228d8ba445958a75a0704d566bf2c8)): Adjusted to allow the mentioned token IN/OUT allowlists.\n- **Curve Pools**: Addition of stETH-ng (factory) pool ([diff](https://roles.gnosisguild.org/eth:0xBd1099dFD3c11b65FB4BB19A350da2f5B61Efb0d/roles/ENS-MANAGER-V1/diff/rMNui3Yp9LlBScVLFjY9cWkk4QGYoIVkkYxURs16ys?annotations=false#right-0x21e27a5e5513d6e65c4f830167390997aa84843a)) and removal of cUSDC + cDAI pool ([diff\u00a01](https://roles.gnosisguild.org/eth:0xBd1099dFD3c11b65FB4BB19A350da2f5B61Efb0d/roles/ENS-MANAGER-V1/diff/rMNui3Yp9LlBScVLFjY9cWkk4QGYoIVkkYxURs16ys?annotations=false#left-0xa2b47e3d5c44877cca798226b7b8118f9bfb7a56); Compound v2 tokens).\n- **Curve ZAP Deposit Contract**\u00a0([diff](https://roles.gnosisguild.org/eth:0xBd1099dFD3c11b65FB4BB19A350da2f5B61Efb0d/roles/ENS-MANAGER-V1/diff/rMNui3Yp9LlBScVLFjY9cWkk4QGYoIVkkYxURs16ys?annotations=false#right-0x56c526b0159a258887e0d79ec3a80dfb940d0cd7)): Introduced to allow depositing and staking of LP tokens in a single step.\n- **Convex Staking**\u00a0([diff](https://roles.gnosisguild.org/eth:0xBd1099dFD3c11b65FB4BB19A350da2f5B61Efb0d/roles/ENS-MANAGER-V1/diff/C0zUV4NtNErufEpbpNc2S55F2oiAGw8aKE2jYwWjLg?annotations=false#right-0x6b27d7bc63f1999d14ff9ba900069ee516669ee8)): Added the CVX/stETH Rewards contract.\n- **Lido Withdrawals**\u00a0([diff](https://roles.gnosisguild.org/eth:0xBd1099dFD3c11b65FB4BB19A350da2f5B61Efb0d/roles/ENS-MANAGER-V1/diff/C0zUV4NtNErufEpbpNc2S55F2oiAGw8aKE2jYwWjLg?annotations=false#right-0x889edc2edab5f40e902b864ad4d7ade8e412f9b1)): Enhanced to include new withdrawal methods using permits for both wstETH and stETH; methods include\u00a0`requestWithdrawalsWstETHWithPermit`\u00a0and\u00a0`requestWithdrawalsWithPermit`.\n- **Spark Rewards Claim**\u00a0([diff\u00a01](https://roles.gnosisguild.org/eth:0xBd1099dFD3c11b65FB4BB19A350da2f5B61Efb0d/roles/ENS-MANAGER-V1/diff/C0zUV4NtNErufEpbpNc2S55F2oiAGw8aKE2jYwWjLg?annotations=false#right-0x4370d3b6c9588e02ce9d22e684387859c7ff5b34)): Added functionality to claim wstETH rewards in Spark.", "mimetype": "text/plain", "start_char_idx": 3700, "end_char_idx": 4025, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6f36f26e-2f9f-497e-b416-7d8191c3d24f": {"__data__": {"id_": "6f36f26e-2f9f-497e-b416-7d8191c3d24f", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.12.mdx", "file_name": "5.12.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.12.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.12.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["considerations", "feedback", "encourage", "involvement", "content", "providing", "highly", "audit", "examine", "reviewing", "necessary", "value", "technical", "members", "expertise"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "bb38110a632599a398dca4776103984395f43830", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.12.mdx", "file_name": "5.12.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.12.mdx"}, "hash": "6530c1c085d61ef5b43cf8ac51d65af66d1faf82f38a849371de25531a79c277", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "516afe93-b3af-46a5-8fce-af38be0c1bf5", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.12.mdx", "file_name": "5.12.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.12.mdx", "header_path": "/"}, "hash": "ea3427e4e2501c3365fdb8a511dc5166add125ffa6d6db6f8423579aa642d458", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a5fc6ffd-60ad-4176-b872-37dc0c8d0c91", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "b65dccc0bb7604d9afea8620c3ed4ad333db75eea66600263990f69ae699a156", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Audit Considerations\n\nWe highly value the community\u2019s involvement in reviewing and providing feedback on this proposal. We encourage members with the necessary technical expertise to examine the content carefully (including this\u00a0[payload\u00a01](https://gist.github.com/santinomics/773117b729152f31a121045f4ba26b5b)) and share their insights with us. For effective testing of the permissions policy configuration, we have utilised a\u00a0[Testing Avatar Safe\u00a01](https://app.safe.global/balances?safe=eth:0xC01318baB7ee1f5ba734172bF7718b5DC6Ec90E1). This safe mirrors the current state of the\u00a0[permissions policy v4\u00a01](https://docs.google.com/document/d/1Ker_TkBJV0xmQ9Li9HB-vtdlpx1vEeVEQwpIH6WoK0o)\u00a0granted by the Endowment to the Manager SAFE operated by karpatkey. The enhancements in the Zodiac Roles app interface now allow for a clear visualisation of all existing permissions, accessible\u00a0[here\u00a02](https://roles.gnosisguild.org/eth:0xbd1099dfd3c11b65fb4bb19a350da2f5b61efb0d/roles/ENS-MANAGER-V1). The updated interface also simplifies the process of identifying\u00a0[changes](https://roles.gnosisguild.org/eth:0xBd1099dFD3c11b65FB4BB19A350da2f5B61Efb0d/roles/ENS-MANAGER-V1/diff/C0zUV4NtNErufEpbpNc2S55F2oiAGw8aKE2jYwWjLg?annotations=false)\u00a0by displaying the current permissions policy on the left side and the newly proposed policy on the right side. To further aid in the adoption and understanding of these tools for audit purposes, we have detailed the proposed changes in\u00a0[version 5 documentation](https://docs.google.com/document/d/1KU4a7s-AxAAAPJxd8vexn7kCl8hsr3-c7VIDfEPHbKc/edit), following our standard Policy Update Request (PUR) format.", "mimetype": "text/plain", "start_char_idx": 9688, "end_char_idx": 11330, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a5fc6ffd-60ad-4176-b872-37dc0c8d0c91": {"__data__": {"id_": "a5fc6ffd-60ad-4176-b872-37dc0c8d0c91", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.12.mdx", "file_name": "5.12.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.12.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.12.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["considerations", "additional", "enabling", "roles", "transition", "modifier", "active", "ensure", "module", "prevent", "existing", "smooth", "remain"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "bb38110a632599a398dca4776103984395f43830", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.12.mdx", "file_name": "5.12.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.12.mdx"}, "hash": "6530c1c085d61ef5b43cf8ac51d65af66d1faf82f38a849371de25531a79c277", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6f36f26e-2f9f-497e-b416-7d8191c3d24f", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.12.mdx", "file_name": "5.12.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.12.mdx", "header_path": "/"}, "hash": "08caec2d5d9d3f6a0119d0e0ab216128c98f3ce7a170b0bae829f9eff003f676", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "febfa8be-0855-453b-b5b3-bad2f13d92df", "node_type": "1", "metadata": {"header_path": "/Additional Considerations/"}, "hash": "a0e79aa4beae6fbb2782f151d613df27fce44a1721ba6674d65cf71ec9a6b3c3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Additional Considerations ## Roles Modifier v1 and Enabling of v2\n\nThe existing Roles Modifier v1 module will remain active to ensure a smooth transition and prevent any unexpected disruptions in operational execution. Ownership of the deployed\u00a0[Roles Modifier v2 module\u00a01](https://etherscan.io/address/0x703806E61847984346d2D7DDd853049627e50A40), equipped with the new proposed permissions policy, has been\u00a0[transferred\u00a01](https://etherscan.io/tx/0x78c69c7ad0c5f430d97ec5c3bac5cb649d831a756b3d4c5b09b45152427ae8f4)\u00a0to the Endowment\u2019s Avatar Safe. These permissions are displayed\u00a0[here\u00a04](https://roles.gnosisguild.org/eth:0x703806e61847984346d2d7ddd853049627e50a40/roles/MANAGER)\u00a0and match those shown on the comparison interface\u00a0[here\u00a01](https://roles.gnosisguild.org/eth:0xBd1099dFD3c11b65FB4BB19A350da2f5B61Efb0d/roles/ENS-MANAGER-V1/diff/rMNui3Yp9LlBScVLFjY9cWkk4QGYoIVkkYxURs16ys?annotations=false). The payload will only activate this module, marking the first phase of the migration process. A subsequent policy update proposal will seek to disable the v1 module.", "mimetype": "text/plain", "start_char_idx": 11332, "end_char_idx": 11359, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b954e43e-f6cb-477c-8439-b9bd792777fa": {"__data__": {"id_": "b954e43e-f6cb-477c-8439-b9bd792777fa", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.12.mdx", "file_name": "5.12.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.12.mdx", "header_path": "/Additional Considerations/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.12.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["visualisation", "permissions", "expressed", "protocol", "feature", "proposed", "policy", "actions", "provides", "offers", "terms", "located", "through"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "bb38110a632599a398dca4776103984395f43830", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.12.mdx", "file_name": "5.12.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.12.mdx"}, "hash": "6530c1c085d61ef5b43cf8ac51d65af66d1faf82f38a849371de25531a79c277", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "febfa8be-0855-453b-b5b3-bad2f13d92df", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.12.mdx", "file_name": "5.12.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.12.mdx", "header_path": "/Additional Considerations/"}, "hash": "89dde5a7dd77ee80dd4cbb2bc6ccd2ddab4b14e5aeb804106a76ce1b0bcfd2eb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Policy Visualisation in Terms of DeFi Kit Actions\n\nThe \u201cshow annotations\u201d button, located at the top-right\u00a0[here\u00a01](https://roles.gnosisguild.org/eth:0xBd1099dFD3c11b65FB4BB19A350da2f5B61Efb0d/roles/ENS-MANAGER-V1/diff/rMNui3Yp9LlBScVLFjY9cWkk4QGYoIVkkYxURs16ys?annotations=false), provides a visualisation of the proposed permissions policy expressed through the DeFi Kit Protocol Actions. This feature offers a more abstract and simplified description of the policy, enhancing understanding and accessibility.", "mimetype": "text/plain", "start_char_idx": 12408, "end_char_idx": 12922, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "62afb90f-485c-49ca-930a-889d0b60ad53": {"__data__": {"id_": "62afb90f-485c-49ca-930a-889d0b60ad53", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.13.mdx", "file_name": "5.13.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.13.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.13.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["mechanism", "security", "malicious", "expiration", "control", "establish", "authority", "council", "proposal", "centralized", "greater", "delegation", "ensure", "prevent", "governance"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c4d59eb011b10fdb4d0e92ba61da1832c64f2a2a", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.13.mdx", "file_name": "5.13.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.13.mdx"}, "hash": "c935b283c895985dd7b47df6cb3adbc9aa576314ee757ad2fe637c440049d63c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a5ef36b7-d8db-4e6e-b79c-ddb92548dcf9", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "e6d5145460513d906c4a7e1f054fbad6dbbcada9bf1e9c88f045f980d8d5fa05", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: 'This proposal aims to establish a Security Council for the ENS DAO with the authority to veto malicious proposals, with a built-in expiration mechanism to prevent centralized control and ensure greater delegation and governance distribution over time.'\nauthors: ['alextnetto.eth']\nproposal:\n  tally: '42329103797433777309488042029679811802172320979541414683300183273376839219133'\n  type: 'executable'\n--- # [EP 5.13] [Executable] Security Council\n\n::authors\n\n| **Status**            | Passed                                                                                                                    |\n| --------------------- | ------------------------------------------------------------------------------------------------------------------------- |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/ep5-13-executable-security-council/19412)                                           |\n| **Votes**             | [Agora](https://agora.ensdao.org/proposals/42329103797433777309488042029679811802172320979541414683300183273376839219133) |", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 422, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d9dad3f1-5a66-4390-b1b8-bb197fe3cd02": {"__data__": {"id_": "d9dad3f1-5a66-4390-b1b8-bb197fe3cd02", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.13.mdx", "file_name": "5.13.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.13.mdx", "header_path": "/[EP 5.13] [Executable] Security Council/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.13.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["primary", "govern", "economic", "attacks", "protocol", "abstract", "treasury", "changing", "allocate", "vulnerable", "mission", "increasingly", "broader", "constitution", "resources"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c4d59eb011b10fdb4d0e92ba61da1832c64f2a2a", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.13.mdx", "file_name": "5.13.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.13.mdx"}, "hash": "c935b283c895985dd7b47df6cb3adbc9aa576314ee757ad2fe637c440049d63c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a5ef36b7-d8db-4e6e-b79c-ddb92548dcf9", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.13.mdx", "file_name": "5.13.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.13.mdx", "header_path": "/"}, "hash": "0bb03becb674a73bfe7b8d379bedd67fcc71b42b4e2727e698501ec58e19efaa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "db7e6fe4-5f5d-4dd5-bfa8-9e1a63a71b85", "node_type": "1", "metadata": {"header_path": "/[EP 5.13] [Executable] Security Council/"}, "hash": "0a97771c9dc7d9d46f23f7066211e27b5f899d09599b150dffaaa0d6aea285f2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Abstract\n\nThe primary mission of ENS DAO is to govern the protocol and allocate resources from the treasury in line with the DAO's constitution and broader objectives. However, due to changing economic dynamics, the DAO is increasingly vulnerable to attacks aimed at draining its treasury.\n\nTo safeguard the DAO's integrity and longevity, a Security Council with the authority to cancel malicious proposals is needed. To avoid perpetuating centralized power, the Security Council's authority will have a built-in expiration date. After two years, anyone will be able to call a [function](https://github.com/blockful-io/security-council-ens/blob/main/src/SecurityCouncil.sol#L59) that revokes the council's power to veto proposals, ensuring a time-limited mechanism to counter malicious attacks while promoting more delegation and governance distribution.\n\n![security-council-diagram](https://hackmd.io/_uploads/BJb0bHP_A.png)", "mimetype": "text/plain", "start_char_idx": 1079, "end_char_idx": 2007, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "db7e6fe4-5f5d-4dd5-bfa8-9e1a63a71b85": {"__data__": {"id_": "db7e6fe4-5f5d-4dd5-bfa8-9e1a63a71b85", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.13.mdx", "file_name": "5.13.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.13.mdx", "header_path": "/[EP 5.13] [Executable] Security Council/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.13.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["imbalance", "acquire", "delegated", "tokens", "actively", "motivation", "attacker", "treasury", "percentage", "enough", "creates", "always", "could", "where", "continues"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c4d59eb011b10fdb4d0e92ba61da1832c64f2a2a", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.13.mdx", "file_name": "5.13.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.13.mdx"}, "hash": "c935b283c895985dd7b47df6cb3adbc9aa576314ee757ad2fe637c440049d63c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d9dad3f1-5a66-4390-b1b8-bb197fe3cd02", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.13.mdx", "file_name": "5.13.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.13.mdx", "header_path": "/[EP 5.13] [Executable] Security Council/"}, "hash": "000bcdfb6bd698e88c7e7ca46263a5149d585f69a644e6e80c945f9b7ba75b34", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a8e22399-acff-4be8-8f06-2f9c1d76f89b", "node_type": "1", "metadata": {"header_path": "/[EP 5.13] [Executable] Security Council/"}, "hash": "86ea7441e0997e2224fdd6c1d470a08cfb1ca6c2d53d46f8e64d33a1692043fc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Motivation\n\nAs ENS continues to grow, its treasury in ETH is always growing. Simultaneously, the percentage of tokens actively delegated is on the decline.\n\nThis imbalance creates a risk where an attacker could acquire enough $ENS to gain control of the DAO at a cost lower than the treasury's total value. This has been a growing concern since March 2023.\n\nPast attacks on DAOs have exploited similar vulnerabilities, with some [being thwarted](https://x.com/AragonProject/status/1656028382939815937) by components with veto power. Currently, the ENS governance process involves a proposal passing through the governor, relying on delegated voting power for approval. If approved, the governor queues the proposal in a timelock contract, delaying execution by two days. While the governor can cancel proposals, it follows the same pathway as a malicious proposal, introducing potential risks.\n\nThe short-term solution was delegating 3.8M $ENS to a contract that can only vote \"Against\"; more details about this can be found in [Nick's forum post](https://discuss.ens.domains/t/introducing-veto-ensdao-eth/19088). The attack is still profitable and, depending on market conditions can be up to a 3x ROI, like in Dec 2023. We need a **mid-term solution** to cancel the attack, which is this proposal. An article about this research done by the Blockful team will be published [here](https://blockful.io/blog/ens-security-council) after the proposal is executed and there is no attack risk.", "mimetype": "text/plain", "start_char_idx": 2009, "end_char_idx": 3500, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a8e22399-acff-4be8-8f06-2f9c1d76f89b": {"__data__": {"id_": "a8e22399-acff-4be8-8f06-2f9c1d76f89b", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.13.mdx", "file_name": "5.13.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.13.mdx", "header_path": "/[EP 5.13] [Executable] Security Council/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.13.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["other", "power", "ability", "modify", "scope", "enhance", "proposals", "granting", "initiate", "council", "proposal", "receiving", "without", "cancel", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c4d59eb011b10fdb4d0e92ba61da1832c64f2a2a", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.13.mdx", "file_name": "5.13.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.13.mdx"}, "hash": "c935b283c895985dd7b47df6cb3adbc9aa576314ee757ad2fe637c440049d63c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "db7e6fe4-5f5d-4dd5-bfa8-9e1a63a71b85", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.13.mdx", "file_name": "5.13.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.13.mdx", "header_path": "/[EP 5.13] [Executable] Security Council/"}, "hash": "6d4d4e7fe446837d8bb8682de70e833d2a664307491af0feb095498538a6e1a1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1c9c16f9-bd3a-4e32-b3c4-f17761ab1471", "node_type": "1", "metadata": {"header_path": "/[EP 5.13] [Executable] Security Council/"}, "hash": "739d7ec43c678a7cd96408bc2038ebdabb7d18f9f7607d520b5698a842b041d3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\nTo enhance security, the [SecurityCouncil contract](https://github.com/blockful-io/security-council-ens/blob/main/src/SecurityCouncil.sol) will be deployed, receiving the PROPOSER_ROLE in the timelock, granting it the ability to cancel proposals (callable only by the [Security Council multisig](https://etherscan.io/address/0xaa5cd05f6b62c3af58ae9c4f3f7a2acc2cdc2cc7)) without the power to initiate or modify other DAO actions. \\*\\*The scope of this proposal is to assign the PROPOSER_ROLE to the SecurityCouncil contract ([Etherscan](https://etherscan.io/address/0xb8fa0ce3f91f41c5292d07475b445c35ddf63ee0#code))\\*\\*.\n\nTo ensure decentralization, the contract will also feature a time-based expiration mechanism that allows anyone to revoke the PROPOSER_ROLE after two years. This window provides time to strengthen delegation and address current vulnerabilities, facilitating the DAO's transition to a more secure governance scenario.", "mimetype": "text/plain", "start_char_idx": 3502, "end_char_idx": 4457, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1c9c16f9-bd3a-4e32-b3c4-f17761ab1471": {"__data__": {"id_": "1c9c16f9-bd3a-4e32-b3c4-f17761ab1471", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.13.mdx", "file_name": "5.13.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.13.mdx", "header_path": "/[EP 5.13] [Executable] Security Council/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.13.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["considerations", "operations", "overly", "broad", "allows", "security", "multisig", "address", "within", "requirements", "create", "timelock", "assigning", "contract"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c4d59eb011b10fdb4d0e92ba61da1832c64f2a2a", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.13.mdx", "file_name": "5.13.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.13.mdx"}, "hash": "c935b283c895985dd7b47df6cb3adbc9aa576314ee757ad2fe637c440049d63c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a8e22399-acff-4be8-8f06-2f9c1d76f89b", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.13.mdx", "file_name": "5.13.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.13.mdx", "header_path": "/[EP 5.13] [Executable] Security Council/"}, "hash": "08edae0ee734e94a858da8a5e3d3fd255f35f7909cc0f2e46ca0fdfafd766566", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b151bd79-3dd5-4d19-8e4a-499a717f8fe1", "node_type": "1", "metadata": {"header_path": "/[EP 5.13] [Executable] Security Council/"}, "hash": "b99fece6f60e70aaaddcff929c2552707719a579c594c7fa1f9fa9691a120c6b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Security considerations\n\nAssigning the PROPOSER_ROLE to a multisig within the timelock contract is overly broad for our requirements as it allows the address to create operations in the timelock. If the multisig signers are compromised, they could potentially propose and execute malicious changes. Therefore our approach is deploying a new contract similar to the current veto.ensdao.eth contract, which can only do one action: to CANCEL a transaction in the timelock, triggered only by the security council multisig.\n\nThe risk is mitigated but one scenario remains: if the whole multisig is compromised then a malicious entity could kick other signers and effectively stop the DAO from executing proposals by canceling all transactions, including any that would remove this contract from the PROPOSER_ROLE. Anyways, after 2 years, [anyone can remove the PROPOSER_ROLE from the contract](https://github.com/blockful-io/security-council-ens/blob/main/src/SecurityCouncil.sol#L59).", "mimetype": "text/plain", "start_char_idx": 4459, "end_char_idx": 5442, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b151bd79-3dd5-4d19-8e4a-499a717f8fe1": {"__data__": {"id_": "b151bd79-3dd5-4d19-8e4a-499a717f8fe1", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.13.mdx", "file_name": "5.13.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.13.mdx", "header_path": "/[EP 5.13] [Executable] Security Council/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.13.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["operations", "other", "those", "responsibilities", "backed", "clear", "expectations", "security", "interest", "council", "roles", "gains", "might", "everyone"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c4d59eb011b10fdb4d0e92ba61da1832c64f2a2a", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.13.mdx", "file_name": "5.13.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.13.mdx"}, "hash": "c935b283c895985dd7b47df6cb3adbc9aa576314ee757ad2fe637c440049d63c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1c9c16f9-bd3a-4e32-b3c4-f17761ab1471", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.13.mdx", "file_name": "5.13.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.13.mdx", "header_path": "/[EP 5.13] [Executable] Security Council/"}, "hash": "e1d62df334fba99fc5edf40d31c59b2b21181109a0e1028ce43c24d2dcde6738", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8fcb1e60-5d15-4f1d-8092-f0bc684810e8", "node_type": "1", "metadata": {"header_path": "/[EP 5.13] [Executable] Security Council/"}, "hash": "503749c34df3b7595382b3f587682f9dad0c4b86b971293e9d38dc7962c6faf6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Council Operations\n\nIt is in the best interest of everyone to make clear the expectations and responsibilities ENS DAO put on those members, backed by the reputation, other roles and gains those might have in the organization.\n\nThe security council is expected to act only in emergency, in the given following situations or similar cases:\n\n- If a proposal goes against the ENS constitution\n\n- If a proposal is approved with malicious intent against the DAO longevity/sustainability\n\n- If such proposal is approved by any group of voters, but directly financially incentivised to vote against the DAOs interests to preserve their own financial stake.\n\n- If any approved proposal goes directly against the DAO for the sole benefit of an attacker.", "mimetype": "text/plain", "start_char_idx": 5444, "end_char_idx": 6191, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8fcb1e60-5d15-4f1d-8092-f0bc684810e8": {"__data__": {"id_": "8fcb1e60-5d15-4f1d-8092-f0bc684810e8", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.13.mdx", "file_name": "5.13.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.13.mdx", "header_path": "/[EP 5.13] [Executable] Security Council/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.13.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["contract", "securitycouncil", "security", "council", "snapshot", "multisig", "confirming", "relevant", "links"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c4d59eb011b10fdb4d0e92ba61da1832c64f2a2a", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.13.mdx", "file_name": "5.13.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.13.mdx"}, "hash": "c935b283c895985dd7b47df6cb3adbc9aa576314ee757ad2fe637c440049d63c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b151bd79-3dd5-4d19-8e4a-499a717f8fe1", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.13.mdx", "file_name": "5.13.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.13.mdx", "header_path": "/[EP 5.13] [Executable] Security Council/"}, "hash": "d494ae50c9830a158ee04c71571a63dc3dea39a57f1445d9a91f311a28415e4a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Relevant links\n\n- SecurityCouncil contract ([GitHub](https://github.com/blockful-io/security-council-ens/blob/main/src/SecurityCouncil.sol), [Etherscan](https://etherscan.io/address/0xb8fa0ce3f91f41c5292d07475b445c35ddf63ee0#code))\n\n- Security Council multisig ([Safe](https://app.safe.global/home?safe=eth:0xaA5cD05f6B62C3af58AE9c4F3F7A2aCC2Cdc2Cc7), [Etherscan](https://etherscan.io/address/0xaA5cD05f6B62C3af58AE9c4F3F7A2aCC2Cdc2Cc7))\n\n- Snapshot proposals:\n\n- [[EP5.7][Social] Security Council](https://snapshot.org/#/ens.eth/proposal/0xf3a4673fe04a3ecfed4a2f066f6ced1539a5466d61630428333360b843653c54)\n\n- [[EP5.10][Social] Confirming the ENS DAO Security Council Members](https://snapshot.org/#/ens.eth/proposal/0xa0b1bfadf6853b5b0d59d3c4d73c434fc6389339887d05de805361372eb17c3a)\n\n- [Forum discussion](https://discuss.ens.domains/t/temp-check-enable-cancel-role-on-the-dao/19090/19)", "mimetype": "text/plain", "start_char_idx": 6193, "end_char_idx": 7083, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "da0ecb25-29dc-4ad9-80b6-a9b063c1774b": {"__data__": {"id_": "da0ecb25-29dc-4ad9-80b6-a9b063c1774b", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.14.mdx", "file_name": "5.14.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.14.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.14.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["deploying", "landscape", "permissions", "evolving", "endowment", "proposal", "diversification", "market", "alignment", "introduce", "focusing", "karpatkey", "improved"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "39082baa9575bc246e4de83db1be3f9dc3e6a5fe", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.14.mdx", "file_name": "5.14.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.14.mdx"}, "hash": "539d22da8f3a7ec83ee784cdb38ad2b82474456a2acc32f9c225cc9ad40b36ba", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "337e2e14-4cb5-4dbf-957f-85b31558d101", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "4d4c180c826607d2ebb973ad72b0455003cc4ee0a45c86760c08fff5bb3b387e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: 'This proposal aims to introduce new permissions for deploying Endowment funds, focusing on improved diversification and alignment with the evolving market landscape and liquidity.'\nauthors: ['alextnetto.eth']\nproposal:\n  tally: '462537345451524095629071359388092434511638926463658570104856324869910407296726'\n  type: 'executable'\n--- # [EP 5.14] [Executable] Endowment permissions to karpatkey - Update #4\n\n::authors\n\n| **Status**            | Passed                                                                                                                    |\n| --------------------- | ------------------------------------------------------------------------------------------------------------------------- |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/ep-5-14-executable-endowment-permissions-to-karpatkey-update-4/19503)               |\n| **Votes**             | [Agora](https://agora.ensdao.org/proposals/62537345451524095629071359388092434511638926463658570104856324869910407296726) |", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 351, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8873ddbe-e902-4784-bcda-9b99a52b2c78": {"__data__": {"id_": "8873ddbe-e902-4784-bcda-9b99a52b2c78", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.14.mdx", "file_name": "5.14.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.14.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.14.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["deploying", "landscape", "evolving", "endowment", "abstract", "introducing", "independent", "proposal", "diversification", "market", "alignment", "introduce", "focusing", "permissions", "improved"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "39082baa9575bc246e4de83db1be3f9dc3e6a5fe", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.14.mdx", "file_name": "5.14.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.14.mdx"}, "hash": "539d22da8f3a7ec83ee784cdb38ad2b82474456a2acc32f9c225cc9ad40b36ba", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "337e2e14-4cb5-4dbf-957f-85b31558d101", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.14.mdx", "file_name": "5.14.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.14.mdx", "header_path": "/"}, "hash": "681b65f0b8ab66a02a471261fce429f0d90d166ca72c1d6f4a14fc1b903f0da9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d058a4a4-09f3-47dd-9d30-49352bc0c79e", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "919ff2932622421cab1e3a026d6bfb741e513ea592dfbb998beede6d1376fbe2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Abstract\n\nThis proposal aims to introduce new permissions for deploying Endowment funds, focusing on improved diversification and alignment with the evolving market landscape and liquidity. We are also introducing an independent audit report together with the Permissions Update; this will be the standard practice for Permissions Updates going forward. # Motivation\n\nEffective treasury management strategies must be adapted to market conditions and protocol updates; for existing Permissions, there might be migrations and introductions of new pools; for new Permissions, protocols and pools that were previously considered immature and unsuitable for the Endowment\u2019s risk appetite may become viable options as they become more time- and battle-tested. This proposal seeks to request new permissions from the ENS DAO for karpatkey, enabling the introduction of new yield-generation strategies for the Endowment.\n\nThe new permissions have also been audited by [ThirdGuard](https://thirdguard.com/), an independent 3rd-party, to ensure the suggested changes have been thoroughly reviewed by a technically-competent, independent party.", "mimetype": "text/plain", "start_char_idx": 1038, "end_char_idx": 1393, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9b002ff9-fc4d-4ab1-9c6f-e4e0867165f7": {"__data__": {"id_": "9b002ff9-fc4d-4ab1-9c6f-e4e0867165f7", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.14.mdx", "file_name": "5.14.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.14.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.14.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["deposit", "permissions", "implemented", "stakewise", "payload", "oseth", "vault", "stake", "through", "genesis", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "39082baa9575bc246e4de83db1be3f9dc3e6a5fe", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.14.mdx", "file_name": "5.14.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.14.mdx"}, "hash": "539d22da8f3a7ec83ee784cdb38ad2b82474456a2acc32f9c225cc9ad40b36ba", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d058a4a4-09f3-47dd-9d30-49352bc0c79e", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.14.mdx", "file_name": "5.14.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.14.mdx", "header_path": "/"}, "hash": "ed45fba8a71431aa4ecf20dd1955b2be523d971d0320a92cb77231a037d91da5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ae0ea110-a1f4-4a03-8da9-5012d788abb9", "node_type": "1", "metadata": {"header_path": "/Specification/"}, "hash": "e95954a0fdf92281b5df0d14d2fcb388771285b47224b8e1a5bcf0ff56b80c76", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Specification ## New permissions implemented in this payload\n\n1. Deposit osETH on Aave v3;\n2. Stake (and unstake) ETH on Stakewise v3;\n\n   1. Through the [Genesis Vault](https://app.stakewise.io/vault/mainnet/0xac0f906e433d58fa868f936e8a43230473652885).\n\n3. Mint (and burn) osETH on Stakewise v3;\n\n   1. Through the Genesis Vault\n\n4. WETH/osETH pool on Balancer;\n5. WETH/osETH pool on Aura Finance;\n6. Swaps:\n\n   1. WETH &lt;&gt; osETH on Balancer\n   2. USDC &lt;&gt; osETH on Uniswap v3\n   3. USDC &lt;&gt; WETH &lt;&gt; osETH on CoW Swap\n   4. RPL &lt;&gt; WETH on Uniswap v3\n   5. RPL &lt;&gt; WETH on CoW Swap\n\n7. Unsign order on Cow Protocol so that a pending order that has been submitted but not executed can be cancelled.", "mimetype": "text/plain", "start_char_idx": 2176, "end_char_idx": 2191, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fa595e06-102c-4b4d-8000-da134556e2e4": {"__data__": {"id_": "fa595e06-102c-4b4d-8000-da134556e2e4", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.14.mdx", "file_name": "5.14.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.14.mdx", "header_path": "/Specification/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.14.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["additional", "approval", "payload", "proposed", "proposal", "details", "called", "found", "enable", "successful", "implementation", "executed", "pointing", "permissions", "function"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "39082baa9575bc246e4de83db1be3f9dc3e6a5fe", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.14.mdx", "file_name": "5.14.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.14.mdx"}, "hash": "539d22da8f3a7ec83ee784cdb38ad2b82474456a2acc32f9c225cc9ad40b36ba", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ae0ea110-a1f4-4a03-8da9-5012d788abb9", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.14.mdx", "file_name": "5.14.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.14.mdx", "header_path": "/Specification/"}, "hash": "cbc8f7dfa0789f65e2c2c94bb722236fd3ecf44fbb1e7de4d35e4c2c585fbcd5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b2e644df-b16a-44f3-9177-a6b8ee38383c", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "fc8f3436aa91e8a39cbd503cf54500a5f9434ab726572a3d3431026304a5c01d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Additional implementation details\n\n1. The enableModule(address module) function is called to enable the modules, pointing it to the [Avatar address](https://app.safe.global/home?safe=eth:0x4F2083f5fBede34C2714aFfb3105539775f7FE64) (the Endowment).\n2. The payload to be executed upon the successful approval of this proposal can be found [here](https://gist.github.com/JeronimoHoulin/55f50e86d1dc874e4e685d5e9b496a67). The proposed permissions policy can be visualised in the aforementioned [link](https://roles.gnosisguild.org/eth:0x703806E61847984346d2D7DDd853049627e50A40/roles/MANAGER/diff/C5Twf3khKv2Ny8PvzoARgHFKFFK8vIiNR7nDkrIM?annotations=false) for ease of review.\n3. We have tested the payload to make sure all interactions mentioned on this proposal work as expected through our [Test Safe](https://app.safe.global/transactions/history?safe=eth:0xC01318baB7ee1f5ba734172bF7718b5DC6Ec90E1).\n4. With the introduction of the [new Roles App Permissions Visualisation tool](https://roles.gnosisguild.org/eth:0x703806E61847984346d2D7DDd853049627e50A40/roles/MANAGER?annotations=false), manually updating the \u201cPreset Permissions - ENS Endowment\u201d [document](https://docs.google.com/document/d/1KU4a7s-AxAAAPJxd8vexn7kCl8hsr3-c7VIDfEPHbKc/edit?usp=sharing) is no longer necessary. The new tool provides an up-to-date and accurate method for exploring the current permissions granted to karpatkey by the ENS DAO.", "mimetype": "text/plain", "start_char_idx": 2910, "end_char_idx": 4325, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b2e644df-b16a-44f3-9177-a6b8ee38383c": {"__data__": {"id_": "b2e644df-b16a-44f3-9177-a6b8ee38383c", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.14.mdx", "file_name": "5.14.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.14.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.14.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["introduction", "feedback", "community", "previous", "helpful", "independent", "auditing", "would", "audit", "proposal", "received", "party", "review", "report", "process"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "39082baa9575bc246e4de83db1be3f9dc3e6a5fe", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.14.mdx", "file_name": "5.14.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.14.mdx"}, "hash": "539d22da8f3a7ec83ee784cdb38ad2b82474456a2acc32f9c225cc9ad40b36ba", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fa595e06-102c-4b4d-8000-da134556e2e4", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.14.mdx", "file_name": "5.14.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.14.mdx", "header_path": "/Specification/"}, "hash": "fef82f1d140e0e02ec7abadd633a354666a68f76d446fb807dca779dd899e593", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6fdf69fc-a854-4420-ac4c-4852d7bfacce", "node_type": "1", "metadata": {"header_path": "/Auditing process/"}, "hash": "d12296f9f51bf81ad9bc8f19355db9aa65f5c10805690588103c3acc9abb00cc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Auditing process ## Introduction of an independent audit report\n\nWe have received feedback in the previous proposal that independent, 3rd party code review would be helpful for the ENS community and delegates to make a more informed decision and to reduce delegate fatigue.\n\nIn our commitment to transparency and effort towards DAO efficiency, karpatkey decided to engage with independent, third-party firms / individuals for every contract upgrade starting with this proposal. [ThirdGuard](https://thirdguard.com/) has been engaged for this proposal's code review; ThirdGuard is a provider of on-chain risk monitoring solutions, and has been working with the Zodiac Roles Modifier since its inception (and its precursor, Scope Guard). Given their past experiences across Zodiac Roles Modifier, Solidity, and DeFi risk management, ThirdGuard was deemed to be a suitable candidate to fulfil the role of policy reviewer. Their approach to auditing the permissions can be found [here](https://www.loom.com/share/0b3cbcd6907a4455ab45ead4887c7f9a?sid=9bd0a2c7-d932-45c0-acad-8516201c56ea).\n\n**The ThirdGuard audit for the permissions in this payload can be found [here](https://github.com/ThirdGuard/roles-policy-audits/blob/main/ENS/ens-policy-audit-v2-21st-Aug-2024.pdf).**\n\nAudit report summary is as follows:\n\n- No material findings were found.\n- Policy changes requested were considered bona fide actions needed by the Manager to carry out their DeFi operations.\n- 1 Informational Finding and 1 Warning were logged, and acknowledged by karpatkey. These findings do not post an immediate risk but are relevant to security best practices.", "mimetype": "text/plain", "start_char_idx": 4327, "end_char_idx": 4345, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3952aa3c-5762-46ac-8880-4c9974920e41": {"__data__": {"id_": "3952aa3c-5762-46ac-8880-4c9974920e41", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.15.mdx", "file_name": "5.15.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.15.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.15.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["proposalbond", "functionality", "proposing", "would", "governor", "proposes", "propose", "accessible", "allow", "proposer", "lower", "adding"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4a567b11fb2631abecb3cb1b3cdea3a33ad8fdf2", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.15.mdx", "file_name": "5.15.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.15.mdx"}, "hash": "750318a89ee9e963ffe9e7dfecf363cf6e63464a63119c23ed84569290f1ef54", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "030abb94-04c5-4a26-9981-8154d8f2f2cd", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "a36e15d5a14a0b34a0235428f31b7e80dfaf070a7069f048aa5700d6ad35dab6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: 'Agora proposes adding the functionality of the ProposalBond to the ENS DAO Governor that would allow a proposer to propose with a lower threshold.'\nauthors: ['steward.estmcmxci.eth']\nproposal:\n  snapshot: '0xca27ce450e2a404b51d7ec7979639561dc5d8302949b3a29e4dfef2a8993f018'\n  discourse: 'https://discuss.ens.domains/t/temp-check-social-adding-proposalbond-to-ens-governor-to-make-proposing-more-accessible/19539/6'\n  type: 'social'\n--- # [EP 5.15] [Social] Adding ProposalBond to ENS Governor to make proposing more accessible\n\n::authors\n\n| **Status**            | Passed                                                                                                                                           |\n| --------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------ |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/temp-check-social-adding-proposalbond-to-ens-governor-to-make-proposing-more-accessible/19539?u=estmcmxci) |\n| **Votes**             | [Snapshot](https://snapshot.box/#/s:ens.eth/proposal/0xca27ce450e2a404b51d7ec7979639561dc5d8302949b3a29e4dfef2a8993f018)                         |", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 453, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c6d59e1f-a711-4faf-84ec-6e7860ea6dc7": {"__data__": {"id_": "c6d59e1f-a711-4faf-84ec-6e7860ea6dc7", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.15.mdx", "file_name": "5.15.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.15.mdx", "header_path": "/[EP 5.15] [Social] Adding ProposalBond to ENS Governor to make proposing more accessible/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.15.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["community", "rightly", "keeping", "abstract", "proposals", "popular", "proposal", "propose", "standard", "executable", "quality", "threshold", "highest"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4a567b11fb2631abecb3cb1b3cdea3a33ad8fdf2", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.15.mdx", "file_name": "5.15.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.15.mdx"}, "hash": "750318a89ee9e963ffe9e7dfecf363cf6e63464a63119c23ed84569290f1ef54", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "030abb94-04c5-4a26-9981-8154d8f2f2cd", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.15.mdx", "file_name": "5.15.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.15.mdx", "header_path": "/"}, "hash": "a42a1fc5d73380ccac8126fe3e38de57bdff3914d02a40bece9e653cff464e85", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c3e3b392-a217-4663-88c9-133614de87d0", "node_type": "1", "metadata": {"header_path": "/[EP 5.15] [Social] Adding ProposalBond to ENS Governor to make proposing more accessible/"}, "hash": "4001454e108648de2711355e301b23ccf01ae3345b5bc87ad2c33351e61029c3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Abstract\n\nThe proposal threshold for propose new executable ENS proposals is high, and rightly so. ENS is one of the most popular DAOs and community in the Web3 community and keeping the quality bar of proposals to the highest standard is very important. However, ENS also has the treasury and the desire to expand the community and make proposing easier and more accessible to enable more builders to come and build in ENS.\n\n[Agora](https://agora.xyz/) proposes adding the functionality of the ProposalBond to the ENS DAO Governor that would allow a proposer to propose with a lower threshold, and then the community could vote [For, Against, Against with penalty, Abstain]. If the weight of `Against with penalty + Against > For`, then the proposer does not get their bond back and the proposal does not pass.\n\nTo clarify further: a bond is withheld only if a proposal is rejected (the sum of rejections are bigger than the approvals) AND if the \"Against with penalty\" is bigger than \"Against\".\n\nThis way we align incentives to create good proposals.", "mimetype": "text/plain", "start_char_idx": 1251, "end_char_idx": 2306, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c3e3b392-a217-4663-88c9-133614de87d0": {"__data__": {"id_": "c3e3b392-a217-4663-88c9-133614de87d0", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.15.mdx", "file_name": "5.15.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.15.mdx", "header_path": "/[EP 5.15] [Social] Adding ProposalBond to ENS Governor to make proposing more accessible/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.15.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["proposing", "needed", "group", "upgrade", "governor", "since", "proposed", "discussion", "working", "following", "which", "outlines", "change", "agora", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4a567b11fb2631abecb3cb1b3cdea3a33ad8fdf2", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.15.mdx", "file_name": "5.15.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.15.mdx"}, "hash": "750318a89ee9e963ffe9e7dfecf363cf6e63464a63119c23ed84569290f1ef54", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c6d59e1f-a711-4faf-84ec-6e7860ea6dc7", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.15.mdx", "file_name": "5.15.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.15.mdx", "header_path": "/[EP 5.15] [Social] Adding ProposalBond to ENS Governor to make proposing more accessible/"}, "hash": "14313c22e935d074d5713ade7d9425b55f10dc5775f9a7baadeb8e7e8af769e9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1a35017e-42a7-4d2f-853d-cf2449a30982", "node_type": "1", "metadata": {"header_path": "/[EP 5.15] [Social] Adding ProposalBond to ENS Governor to make proposing more accessible/"}, "hash": "237371fbb34f73629cd0fcd65cda3d7b24be25fd9e4216c2a21742d50cf7adf0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\nA discussion in the DAO Meta-Gov working group titled: [Seeking Feedback: ENS Governor Upgrade to make proposing more accessible](https://discuss.ens.domains/t/seeking-feedback-ens-governor-upgrade-to-make-proposing-more-accessible/19296), Agora proposed the following PR on the ENS Governor: [Proposal Bond Pull Request](https://github.com/voteagora/ens-governance-contracts/pull/1) which outlines the code needed to make this change happen.\n\nSince the time of that PR and during the follow up discussions, the community has asked for the following additions:\n\n- Ensure that the ProposalBond work proposed by Agora works with the new Veto rules and security council. This covers the case of a proposal being vetoed from within the timelock therefore making sure we have the code to handle that case. The default case here being that the bond would not be returned.\n- Work with OpenZeppelin to see if we can bring this functionality into OZ Governance Core\n- Collaborate with ScopeLift to bring in a few sensible defaults to the voting delay period which is currently set to only one block. This leaves the DAO open to attack and the MetaGov working group is agreed on a 24 hour delay to ensure the DAO time to protect itself if needed.\n\nAgora is committed to building public goods and is already working closely with OpenZeppelin to bring innovations of Agora's Governor into OZ Governance Core.\n\nGiven that the proposal threshold of this new functionality will be the most important piece, there is a general consensus in the discussion group that `1,000 ENS` is the right initial value. This parameter can later be set governance and moved up and down as we see fit.", "mimetype": "text/plain", "start_char_idx": 2308, "end_char_idx": 3995, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1a35017e-42a7-4d2f-853d-cf2449a30982": {"__data__": {"id_": "1a35017e-42a7-4d2f-853d-cf2449a30982", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.15.mdx", "file_name": "5.15.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.15.mdx", "header_path": "/[EP 5.15] [Social] Adding ProposalBond to ENS Governor to make proposing more accessible/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.15.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["delay", "securing", "closing", "scopelift", "putting", "logic", "responsible", "voting", "review", "working", "agora", "implementation", "steps", "should"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4a567b11fb2631abecb3cb1b3cdea3a33ad8fdf2", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.15.mdx", "file_name": "5.15.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.15.mdx"}, "hash": "750318a89ee9e963ffe9e7dfecf363cf6e63464a63119c23ed84569290f1ef54", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c3e3b392-a217-4663-88c9-133614de87d0", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.15.mdx", "file_name": "5.15.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.15.mdx", "header_path": "/[EP 5.15] [Social] Adding ProposalBond to ENS Governor to make proposing more accessible/"}, "hash": "f682c7d59bf3c3d398a2a37d23dd539a02ffa3528795a76359341bfe4b9fba0c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5a569e70-850c-48ab-a4b6-9a8dc849da82", "node_type": "1", "metadata": {"header_path": "/[EP 5.15] [Social] Adding ProposalBond to ENS Governor to make proposing more accessible/"}, "hash": "218313ae2ecf7815932c68e02ec22662669258e4369156a321c60abed9934c08", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Voting\n\nWe are putting this to a simple, for/again/abstain vote ## Next Steps\n\nShould the vote pass, Agora will be responsible for:\n\n- closing out the implementation\n- working with ScopeLift to review the code and add in the Voting Delay logic\n- securing and organizing the audits\n- making any changes raised by the auditors\n- getting the code ready for a governor upgrade ### Auditing\n\nGiven the potential impact of the change, we are going to work with the ENS MetaGov stewards to do 2 audits on this code: one chosen by Agora, and the other chosen by the stewards.\n\nAgora recommends using [OpenZeppelin](https://www.openzeppelin.com/security-audits), a reputable and top quality auditor in the governance space.\n\nAgora recommends that the MetaGov stewards pick from: [CodeArena](https://code4rena.com/), [Trail of Bits](https://www.trailofbits.com/services/software-assurance/blockchain/), [Spearbit](https://spearbit.com/) or [Trust Security](https://www.trust-security.xyz/services). Each of these are quality auditing firms with a proven track record of working with governance contracts.\n\nBoth of these audits will be funded by ENS, and code changes will be implemented by Agora as part of their service contract with ENS, at no additional charge.\n\nResults and changes will be posted for everyone to see", "mimetype": "text/plain", "start_char_idx": 3997, "end_char_idx": 4063, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1fe34838-aaf2-47cb-9c20-18d0b0f02c8e": {"__data__": {"id_": "1fe34838-aaf2-47cb-9c20-18d0b0f02c8e", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.15.mdx", "file_name": "5.15.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.15.mdx", "header_path": "/[EP 5.15] [Social] Adding ProposalBond to ENS Governor to make proposing more accessible/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.15.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["supply", "votes", "social", "success", "quorum", "criteria", "voting", "million", "proposal", "receive", "following", "requirements", "total", "minimum"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4a567b11fb2631abecb3cb1b3cdea3a33ad8fdf2", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.15.mdx", "file_name": "5.15.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.15.mdx"}, "hash": "750318a89ee9e963ffe9e7dfecf363cf6e63464a63119c23ed84569290f1ef54", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f038457b-5da0-4c7a-aaf4-be428b4b2408", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.15.mdx", "file_name": "5.15.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.15.mdx", "header_path": "/[EP 5.15] [Social] Adding ProposalBond to ENS Governor to make proposing more accessible/Next Steps/"}, "hash": "3db9eb1b8e64ebb32c37666d24405142ab851067926276085e274194bea3e607", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Success Criteria\n\nFor this social proposal to pass, the following quorum and voting requirements must be met:\n\n**Quorum**: The proposal must receive a minimum of 1% of the total supply of $ENS (1 million votes) in the form of \"Yes\" and \"Abstain\" votes combined. \"No\" votes do not count towards quorum.\n\n**Approval**: Once the quorum is reached, the proposal requires a simple majority (>50%) of \"Yes\" votes among the \"Yes\" and \"No\" votes to pass. \"Abstain\" votes do not count towards the approval calculation.", "mimetype": "text/plain", "start_char_idx": 5314, "end_char_idx": 5826, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bdfeabc7-6c13-47bb-910b-af00310fecea": {"__data__": {"id_": "bdfeabc7-6c13-47bb-910b-af00310fecea", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.16.mdx", "file_name": "5.16.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.16.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.16.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["incurred", "payment", "litigation", "implement", "pursuing", "proposal", "legal", "seeks", "reimbursement", "executable", "protect", "while"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "045200707d2d7e1b0862602ba488ce539f45f064", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.16.mdx", "file_name": "5.16.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.16.mdx"}, "hash": "c52f425cd270c7bd84a19288fa302a9da2177ef1e568f7474603485732114581", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "67d652e0-e6d2-4873-b7f6-f6a1365e951d", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "c61f943d2478a1499bac352d654130251b9cd9648ec3a8f9339b97df1e06c792", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: 'This executable proposal seeks to implement the reimbursement payment to ENS Labs for the legal fees incurred while pursuing litigation to protect the eth.link domain.'\nauthors: ['nick.eth']\nproposal:\n  tally: '33657496545373741813637578444724485346468737982573562831880427564621945332995'\n  type: 'executable'\n--- # [EP 5.16] [Executable] Reimbursement of ENS Labs\u2019 legal fees in eth.link litigation\n\n::authors\n\n| **Status**            | Passed                                                                                                                      |\n| --------------------- | --------------------------------------------------------------------------------------------------------------------------- |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/ep-5-16-executable-reimbursement-of-ens-labs-legal-fees-in-eth-link-litigation/19613) |\n| **Votes**             | [Agora](https://agora.ensdao.org/proposals/33657496545373741813637578444724485346468737982573562831880427564621945332995)   |", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 332, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e242e347-557b-406c-b995-16acd61adf29": {"__data__": {"id_": "e242e347-557b-406c-b995-16acd61adf29", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.16.mdx", "file_name": "5.16.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.16.mdx", "header_path": "/[EP 5.16] [Executable] Reimbursement of ENS Labs\u2019 legal fees in eth.link litigation/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.16.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["incurred", "payment", "litigation", "implement", "pursuing", "proposal", "legal", "approved", "seeks", "reimbursement", "executable", "protect", "summary", "while"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "045200707d2d7e1b0862602ba488ce539f45f064", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.16.mdx", "file_name": "5.16.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.16.mdx"}, "hash": "c52f425cd270c7bd84a19288fa302a9da2177ef1e568f7474603485732114581", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "67d652e0-e6d2-4873-b7f6-f6a1365e951d", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.16.mdx", "file_name": "5.16.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.16.mdx", "header_path": "/"}, "hash": "d09e51381e99ba35bcdaf304b3ba6a47c7bcce2eac4b07b1305d43baf8eb5983", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "90941e9e-0845-43f2-8a90-c952ab25d68f", "node_type": "1", "metadata": {"header_path": "/[EP 5.16] [Executable] Reimbursement of ENS Labs\u2019 legal fees in eth.link litigation/"}, "hash": "1009c16e22c785a48dd9d6e7664a01e91ae4ffd49bc4f975dabfd13fda849f40", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Summary\n\nThis executable proposal seeks to implement the reimbursement payment to ENS Labs for the legal fees incurred while pursuing litigation to protect the eth.link domain. The reimbursement was approved in the previously passed social proposal [EP 5.3](./5.3). ## Background\n\nThe lawsuit that ENS filed in federal district court in Arizona to maintain ownership and control over eth.link has been resolved, and on 26 August 2024, the Court officially closed this case.\n\nENS Labs has maintained full ownership and control over the eth.link domain and, therefore, ENS Labs has achieved the initial objective they had when first filing the complaint and obtaining injunctive relief. To reach this outcome, ENS Labs has spent in total 1,218,669.76 USD. This legal action was necessary to defend the ENS ecosystem and maintain control of the eth.link domain, a critical infrastructure component since 2017.", "mimetype": "text/plain", "start_char_idx": 1041, "end_char_idx": 1309, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6d8b50d2-0c34-4224-bce8-13be7d0e0e68": {"__data__": {"id_": "6d8b50d2-0c34-4224-bce8-13be7d0e0e68", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.16.mdx", "file_name": "5.16.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.16.mdx", "header_path": "/[EP 5.16] [Executable] Reimbursement of ENS Labs\u2019 legal fees in eth.link litigation/Background/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.16.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["final", "amount", "treasury", "initiate", "proposal", "legal", "expenses", "discussion", "snapshot", "transfer", "executable", "total", "represents", "links", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "045200707d2d7e1b0862602ba488ce539f45f064", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.16.mdx", "file_name": "5.16.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.16.mdx"}, "hash": "c52f425cd270c7bd84a19288fa302a9da2177ef1e568f7474603485732114581", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "90941e9e-0845-43f2-8a90-c952ab25d68f", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.16.mdx", "file_name": "5.16.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.16.mdx", "header_path": "/[EP 5.16] [Executable] Reimbursement of ENS Labs\u2019 legal fees in eth.link litigation/"}, "hash": "bc76ea19af912f124df74080034f7a09dd8c9ac2ff23f35fae45631a321204ee", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e6f333ed-1602-4012-8154-f3dce51ca4c7", "node_type": "1", "metadata": {"header_path": "/[EP 5.16] [Executable] Reimbursement of ENS Labs\u2019 legal fees in eth.link litigation/"}, "hash": "1c3b0d8c138829900d196ceb402085824fe929d2da987784f32a166f6940a27e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Links\n\n- [EP 5.3 Snapshot Vote](https://snapshot.org/#/ens.eth/proposal/0x456ccb438eed5d189cbe51e5e36a88d2bb4dc0c61f12f6d9e310a7ba4798d5fc)\n- [Forum Discussion on EP 5.3](https://discuss.ens.domains/t/ep5-2-social-determine-ens-labs-next-steps-in-eth-link-litigation/18756) ## Specification\n\nThis executable proposal will initiate a transfer of 1,218,669.76 USDC from the ENS DAO treasury to ENS Labs. This amount represents the final total of all legal expenses related to the eth.link litigation.", "mimetype": "text/plain", "start_char_idx": 1953, "end_char_idx": 2230, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "18910034-ab2c-4e39-b135-5f56fcf7ad04": {"__data__": {"id_": "18910034-ab2c-4e39-b135-5f56fcf7ad04", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.16.mdx", "file_name": "5.16.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.16.mdx", "header_path": "/[EP 5.16] [Executable] Reimbursement of ENS Labs\u2019 legal fees in eth.link litigation/Specification/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.16.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["transaction", "calls", "litigation", "decimal", "treasury", "legal", "details", "token", "transferring", "reimbursement", "considering", "contract", "function"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "045200707d2d7e1b0862602ba488ce539f45f064", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.16.mdx", "file_name": "5.16.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.16.mdx"}, "hash": "c52f425cd270c7bd84a19288fa302a9da2177ef1e568f7474603485732114581", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e6f333ed-1602-4012-8154-f3dce51ca4c7", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.16.mdx", "file_name": "5.16.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.16.mdx", "header_path": "/[EP 5.16] [Executable] Reimbursement of ENS Labs\u2019 legal fees in eth.link litigation/"}, "hash": "a8b7f6433639c217e30128ff8761a019cd96bba6547cbcd2ff3e4ee8d48f0120", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7d8e5244-00a3-4da9-9a55-d9b529bd50be", "node_type": "1", "metadata": {"header_path": "/[EP 5.16] [Executable] Reimbursement of ENS Labs\u2019 legal fees in eth.link litigation/"}, "hash": "aaf5c64693a3d05dd7860de58f35d01463ec2ab54c140a3e06d1452f8ffacdbc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Transaction Details\n\n- **From:** ENS DAO Treasury (0xFe89cc7aBB2C4183683ab71653C4cdc9B02D44b7)\n- **To:** USDC Token Contract (0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48)\n- **Recipient:** ENS Labs (0x690F0581eCecCf8389c223170778cD9D029606F2)\n- **Amount:** 1,218,669.76 USDC (1218669760000 considering USDC's 6 decimal places)\n- **Purpose:** Reimbursement for legal fees in eth.link litigation\n\nThis transaction calls the `transfer` function of the USDC contract, transferring 1,218,669.76 USDC to ENS Labs' address.", "mimetype": "text/plain", "start_char_idx": 2458, "end_char_idx": 2976, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7d8e5244-00a3-4da9-9a55-d9b529bd50be": {"__data__": {"id_": "7d8e5244-00a3-4da9-9a55-d9b529bd50be", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.16.mdx", "file_name": "5.16.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.16.mdx", "header_path": "/[EP 5.16] [Executable] Reimbursement of ENS Labs\u2019 legal fees in eth.link litigation/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.16.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["incurred", "safeguard", "acknowledges", "protecting", "critical", "passage", "efforts", "legal", "expenses", "rationale", "support", "reimbursing", "reimbursement", "demonstrated", "through"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "045200707d2d7e1b0862602ba488ce539f45f064", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.16.mdx", "file_name": "5.16.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.16.mdx"}, "hash": "c52f425cd270c7bd84a19288fa302a9da2177ef1e568f7474603485732114581", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "18910034-ab2c-4e39-b135-5f56fcf7ad04", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.16.mdx", "file_name": "5.16.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.16.mdx", "header_path": "/[EP 5.16] [Executable] Reimbursement of ENS Labs\u2019 legal fees in eth.link litigation/Specification/"}, "hash": "d6e0d1c77098c28c7a3c04e191b3046a1db0dde8c2f42c382a2f460d62ac7849", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Rationale\n\nThe ENS community, through the passage of EP 5.3, has demonstrated its support for reimbursing ENS Labs for the legal expenses incurred in protecting the eth.link domain. This reimbursement acknowledges the efforts made by ENS Labs to safeguard a critical asset of the ENS ecosystem. It ensures that the financial burden of this legal action does not fall solely on ENS Labs, particularly given that their actions were taken to benefit the entire ENS community.\n\n---\n\n_Note - When the original snapshot for the social vote was posted it was numbered as 5.2, but it should have been 5.3. It has been renumbered in the official ENS documentation. Some links point to forum discussions and Snapshots that show the original duplicitive label of 5.2_", "mimetype": "text/plain", "start_char_idx": 2978, "end_char_idx": 3737, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "25027bf8-34e7-4dbf-b063-eceaecabca23": {"__data__": {"id_": "25027bf8-34e7-4dbf-b063-eceaecabca23", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.17.1.mdx", "file_name": "5.17.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.17.1.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.17.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["operations", "covering", "social", "group", "april", "proposal", "passed", "funding", "working", "requests", "through", "resources"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "feb102dd42cbf6d3061d7e85a13a85265423d0f2", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.17.1.mdx", "file_name": "5.17.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.17.1.mdx"}, "hash": "bc00b4339b7c5f9a72f38759ea86979c934d96511e08eb4edbc4d07c618ce6f2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0eaa844e-d38a-4a81-a9d9-fe94b529b94b", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "48e218ee31e9533375c8f6ec8f57916427989aacef841c1ad5d986a2e1694bd4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: 'This social proposal requests $254k USDC for operations through April 2025, covering compensation, tools, and resources for governance.'\nauthors: ['5pence.eth']\nproposal:\n  snapshot: '0x0f906ef744da4aace051305dff824fe7b000814f23af36f037f0dd23a1a94f98'\n  discourse: 'https://discuss.ens.domains/t/5-17-1-social-funding-request-ens-meta-governance-working-group-term-5-oct-window/19677?'\n  type: 'social'\n--- # [5.17.1] [Social] Funding Request: ENS Meta-Governance Working Group Term 5 (Oct. Window)\n\n::authors\n\n| **Status**            | Passed                                                                                                                         |\n| --------------------- | ------------------------------------------------------------------------------------------------------------------------------ |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/5-17-1-social-funding-request-ens-meta-governance-working-group-term-5-oct-window/19677) |\n| **Votes**             | [Snapshot](https://snapshot.box/#/s:ens.eth/proposal/0x0f906ef744da4aace051305dff824fe7b000814f23af36f037f0dd23a1a94f98)       |", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 424, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "16b386b3-17c3-4c02-9d74-b6e01ea43219": {"__data__": {"id_": "16b386b3-17c3-4c02-9d74-b6e01ea43219", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.17.1.mdx", "file_name": "5.17.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.17.1.mdx", "header_path": "/[5.17.1] [Social] Funding Request: ENS Meta-Governance Working Group Term 5 (Oct. Window)/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.17.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["management", "groups", "group", "providing", "abstract", "responsible", "tooling", "oversight", "working", "operation", "through", "supporting", "governance"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "feb102dd42cbf6d3061d7e85a13a85265423d0f2", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.17.1.mdx", "file_name": "5.17.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.17.1.mdx"}, "hash": "bc00b4339b7c5f9a72f38759ea86979c934d96511e08eb4edbc4d07c618ce6f2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0eaa844e-d38a-4a81-a9d9-fe94b529b94b", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.17.1.mdx", "file_name": "5.17.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.17.1.mdx", "header_path": "/"}, "hash": "a8b3e17a53558a123ad59168327ab7c732c9e98023ac838067e52942d495cf6a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f14576b5-1094-4692-aca2-09fd71b42612", "node_type": "1", "metadata": {"header_path": "/[5.17.1] [Social] Funding Request: ENS Meta-Governance Working Group Term 5 (Oct. Window)/"}, "hash": "0a756df1a718edab37db7d94b4c3fd1decd3f48eddc6b03b63eccd94d2898cf3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Abstract\n\nThe Meta-Governance Working Group is responsible for providing governance oversight and supporting the management and operation of working groups through DAO tooling and governance initiatives as well as treasury management for the DAO.\n\nThis social proposal is submitted to satisfy the requirements set out in Rule 10.1.1 of the Working Group Rules ([EP 1.8](/dao/proposals/1.8)) and further required by [this snapshot proposal in Nov. 2023 modifying steward rules](https://snapshot.org/#/ens.eth/proposal/0x26a5c8dec547837495707e70446d1e7cd874a91f75753c602998f6e70083a266). If this proposal is passed, the funding request will be included in a collective executable proposal put forward by all three Working Groups.", "mimetype": "text/plain", "start_char_idx": 1151, "end_char_idx": 1881, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f14576b5-1094-4692-aca2-09fd71b42612": {"__data__": {"id_": "f14576b5-1094-4692-aca2-09fd71b42612", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.17.1.mdx", "file_name": "5.17.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.17.1.mdx", "header_path": "/[5.17.1] [Social] Funding Request: ENS Meta-Governance Working Group Term 5 (Oct. Window)/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.17.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["amount", "formal", "metagov", "treasury", "anticipated", "window", "budgetary", "funding", "multisig", "fulfill", "requested", "needs", "through", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "feb102dd42cbf6d3061d7e85a13a85265423d0f2", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.17.1.mdx", "file_name": "5.17.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.17.1.mdx"}, "hash": "bc00b4339b7c5f9a72f38759ea86979c934d96511e08eb4edbc4d07c618ce6f2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "16b386b3-17c3-4c02-9d74-b6e01ea43219", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.17.1.mdx", "file_name": "5.17.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.17.1.mdx", "header_path": "/[5.17.1] [Social] Funding Request: ENS Meta-Governance Working Group Term 5 (Oct. Window)/"}, "hash": "ea65bc333f70d61d9487fa9290b6df670e148a1a746ad9fa9690e28c0dc61032", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0de814d1-6671-4d0c-a5d1-fa61bda9d2d7", "node_type": "1", "metadata": {"header_path": "/[5.17.1] [Social] Funding Request: ENS Meta-Governance Working Group Term 5 (Oct. Window)/"}, "hash": "ac4b18b5c4f10f7be24d01ad1cc1d5f8646f28a0850c4966c71ce6dfd4d1a8c9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\nThis specification is the amount requested from the DAO treasury to the Metagov Multisig to fulfill anticipated budgetary needs through the next formal funding window in April 2025.\n\n|                            | USDC | ETH | $ENS |\n| -------------------------- | ---- | --- | ---- |\n| ENS Meta-Gov Main Multisig | 254k | 0   | 0    |\n\nThis amount will cover all expected expenses outlined below while leaving a 100k prudent reserve to ensure continuity if future funding is delayed.", "mimetype": "text/plain", "start_char_idx": 1883, "end_char_idx": 2385, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0de814d1-6671-4d0c-a5d1-fa61bda9d2d7": {"__data__": {"id_": "0de814d1-6671-4d0c-a5d1-fa61bda9d2d7", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.17.1.mdx", "file_name": "5.17.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.17.1.mdx", "header_path": "/[5.17.1] [Social] Funding Request: ENS Meta-Governance Working Group Term 5 (Oct. Window)/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.17.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["balance", "metagov", "wallet", "description", "while", "funds", "found", "aside", "coverage", "strive", "multisig", "ensure", "information", "estimate", "expenditures"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "feb102dd42cbf6d3061d7e85a13a85265423d0f2", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.17.1.mdx", "file_name": "5.17.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.17.1.mdx"}, "hash": "bc00b4339b7c5f9a72f38759ea86979c934d96511e08eb4edbc4d07c618ce6f2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f14576b5-1094-4692-aca2-09fd71b42612", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.17.1.mdx", "file_name": "5.17.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.17.1.mdx", "header_path": "/[5.17.1] [Social] Funding Request: ENS Meta-Governance Working Group Term 5 (Oct. Window)/"}, "hash": "873f748ea60f06dc7a4e242dd16f03d814a9e8266e39b70b878a8808a0e7b443", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "662b517a-31e3-4691-a628-cca58fcd590c", "node_type": "1", "metadata": {"header_path": "/[5.17.1] [Social] Funding Request: ENS Meta-Governance Working Group Term 5 (Oct. Window)/"}, "hash": "dfdc265898f0536333c17f797a0ddc297a32ab3b89b21439b89b131197bb169a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Description\n\n**Current Metagov Wallet Balances**\n\n|                            | USDC | ETH  | $ENS |\n| -------------------------- | ---- | ---- | ---- |\n| ENS Meta-Gov Main Multisig | 286k | 83.7 | 51   |\n\n\\*Up to date balance information can be found at https://enswallets.xyz ## Expenditures\n\nMeta-Gov sets aside funds to ensure coverage for mission-critical initiatives. While we strive to estimate term expenditures accurately, the final spending depends on pending initiatives. ### Expected Expenses through April 2025\n\n|                                    | USDC | ETH | $ENS |\n| ---------------------------------- | ---- | --- | ---- |\n| Steward + Secretary Compensation \u00b9 | 294k | -   | -    |\n| Governance                         | -    | -   | -    |\n| Contract Audits                    | 155k | -   | -    |\n| DAO Tooling                        | 150k | -   | -    |\n| Discretionary                      | 40k  | -   | -    |\n| Total Balance                      | 639k | -   | -    |", "mimetype": "text/plain", "start_char_idx": 2387, "end_char_idx": 2668, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3279de26-2223-4fc6-862a-05b8dcfbe80d": {"__data__": {"id_": "3279de26-2223-4fc6-862a-05b8dcfbe80d", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.17.1.mdx", "file_name": "5.17.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.17.1.mdx", "header_path": "/[5.17.1] [Social] Funding Request: ENS Meta-Governance Working Group Term 5 (Oct. Window)/Expenditures/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.17.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["announced", "check", "distributions", "group", "description", "working", "distribution", "posted", "secretary", "steward", "codified", "strategy", "governance"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "feb102dd42cbf6d3061d7e85a13a85265423d0f2", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.17.1.mdx", "file_name": "5.17.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.17.1.mdx"}, "hash": "bc00b4339b7c5f9a72f38759ea86979c934d96511e08eb4edbc4d07c618ce6f2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "acf0761f-4752-41f3-9e4a-0aeea30d6b1b", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.17.1.mdx", "file_name": "5.17.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.17.1.mdx", "header_path": "/[5.17.1] [Social] Funding Request: ENS Meta-Governance Working Group Term 5 (Oct. Window)/Expenditures/"}, "hash": "b72896de881f04cfc640cec5e33a0c39cd97194cfa9350f957609a6bb8f5533d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cbff5c0f-0ca0-473c-bc84-f5587fb09b4d", "node_type": "1", "metadata": {"header_path": "/[5.17.1] [Social] Funding Request: ENS Meta-Governance Working Group Term 5 (Oct. Window)/Expenditures/"}, "hash": "0558e285410cb04ede24781566bf7fc1bbc35cc42e515f412fe7796a3fe35dcd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Governance Distributions\n\nThe governance distribution strategy for Term 6 will be announced and posted as a temp check in the forum. This strategy will then be codified by a DAO vote. ### Description of Initiatives/Pods\n\n**Steward + Secretary Compensation**: Working Group Steward and Secretary compensation as required by [revised steward working group rules](https://snapshot.org/#/ens.eth/proposal/0x26a5c8dec547837495707e70446d1e7cd874a91f75753c602998f6e70083a266) and [totaling $294,000 USDC to cover the costs for all 9 stewards and supporting roles for a 6 month period](https://discuss.ens.domains/t/ens-dao-steward-compensation/18063).\n\n\u00b9This is the expected compensation amount based on existing compensation. The Meta-governance working group is required by [EP 4.8](https://docs.ens.domains/dao/proposals/4.8) to announce compensation ahead of the next term's steward nominations. **The current Term 5 stewards will also be proposing Term 6 compensation numbers to the DAO to ensure consensus. This proposal will take place before the Term 6 nominations to comply with [EP 4.8].**\n\n**Governance**: Fee reimbursements and initiatives related to reducing friction in the governance process. This can also include $ENS distributed in order to lower barriers to the governance proposal process. The $ENS distributions to stewards and service providers falls into this category.\n\n**Contract Audits**: Meta-governance maintains a balance to be used for contract audits. These audits are performed independently on contracts that are to be included in executable proposals if those contracts impact or affect any ENS protocol or ENS DAO contracts or processes. Examples would be any proposed changes to the ENS DAO governor contract or protocol related contracts such as the registrar.\nThis line item is larger than normal because Meta-governance is anticipating potential audits for both governor upgrades and contracts from Service Providers that are contributing to the ENS v2 work.\n\n**DAO Tooling**: Developing interfaces and dashboards to improve the governance process and increase transparency across the DAO. An example of DAO tooling spend is our current engagement with Agora as they help build out an enhanced DAO proposal flow to streamline the proposal process.\n\n**Discretionary**: Funds distributed at the discretion of stewards towards new initiatives + governance experiments. In this cycle, we've consolidated the former DAO Sponsorship category into this discretionary category.", "mimetype": "text/plain", "start_char_idx": 3391, "end_char_idx": 3578, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3a7d85a8-07b0-48a8-9425-fdda474609f2": {"__data__": {"id_": "3a7d85a8-07b0-48a8-9425-fdda474609f2", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.17.1.mdx", "file_name": "5.17.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.17.1.mdx", "header_path": "/[5.17.1] [Social] Funding Request: ENS Meta-Governance Working Group Term 5 (Oct. Window)/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.17.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["management", "ensuring", "request", "group", "providing", "allow", "funding", "working", "continue", "essential", "operation", "conclusion", "supporting", "governance"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "feb102dd42cbf6d3061d7e85a13a85265423d0f2", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.17.1.mdx", "file_name": "5.17.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.17.1.mdx"}, "hash": "bc00b4339b7c5f9a72f38759ea86979c934d96511e08eb4edbc4d07c618ce6f2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cbff5c0f-0ca0-473c-bc84-f5587fb09b4d", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.17.1.mdx", "file_name": "5.17.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.17.1.mdx", "header_path": "/[5.17.1] [Social] Funding Request: ENS Meta-Governance Working Group Term 5 (Oct. Window)/Expenditures/"}, "hash": "6d620724e48aec7b027c3997d962ef8b6e414ac42a00909b2096500a40dae313", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Conclusion\n\nThis funding request will allow the ENS Meta-Governance Working Group to continue its essential work in providing governance oversight, supporting the management and operation of working groups, and ensuring effective treasury management for the DAO. The requested funds will enable us to maintain our ongoing initiatives and develop new tools to enhance the governance process. We are grateful for the community's ongoing support and engagement, which is crucial to the success of the ENS DAO. The Meta-Governance Working Group remains committed to serving the ENS community and driving the long-term growth and sustainability of the ecosystem.", "mimetype": "text/plain", "start_char_idx": 5899, "end_char_idx": 6559, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "386842c1-9a6b-48db-9d3b-33c94913234f": {"__data__": {"id_": "386842c1-9a6b-48db-9d3b-33c94913234f", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.17.2.mdx", "file_name": "5.17.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.17.2.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.17.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["social", "ecosystem", "group", "proposal", "passed", "funding", "working", "including", "requests"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6c52d41b712678eb24d67cd26bd9181f50144835", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.17.2.mdx", "file_name": "5.17.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.17.2.mdx"}, "hash": "46a28c43430dec718f5af884b345bc4c44a5de3d38d8a160021a8dc577fd8df4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8b30c7b4-de5f-4e5c-8e61-a4492a49bacb", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "5866a13d2c9d85daa204912ae7fbbb59658da3c20664545d3d416a0cd358e10c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: 'This social proposal requests $836k USDC for ecosystem initiatives, including grants, hackathons, and partnerships.'\nauthors: ['slobo.eth']\nproposal:\n  snapshot: '0xfe303865510b5ef7fabee2bcbd5081afa01f276195f57e1561ff27c477459984'\n  type: 'social'\n--- # [5.17.2] [Social] Funding Request: ENS Ecosystem Working Group\n\n::authors\n\n| **Status**            | Passed                                                                                                                   |\n| --------------------- | ------------------------------------------------------------------------------------------------------------------------ |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/5-17-2-social-funding-request-ens-ecosystem-working-group/19678)                   |\n| **Votes**             | [Snapshot](https://snapshot.box/#/s:ens.eth/proposal/0xfe303865510b5ef7fabee2bcbd5081afa01f276195f57e1561ff27c477459984) |", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 269, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7b048c95-81c6-4c7b-8432-9eacde858581": {"__data__": {"id_": "7b048c95-81c6-4c7b-8432-9eacde858581", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.17.2.mdx", "file_name": "5.17.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.17.2.mdx", "header_path": "/[5.17.2] [Social] Funding Request: ENS Ecosystem Working Group/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.17.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["operations", "ecosystem", "request", "group", "abstract", "april", "working", "funding", "support", "requests", "through"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6c52d41b712678eb24d67cd26bd9181f50144835", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.17.2.mdx", "file_name": "5.17.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.17.2.mdx"}, "hash": "46a28c43430dec718f5af884b345bc4c44a5de3d38d8a160021a8dc577fd8df4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8b30c7b4-de5f-4e5c-8e61-a4492a49bacb", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.17.2.mdx", "file_name": "5.17.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.17.2.mdx", "header_path": "/"}, "hash": "bb8bd365fe34498bf3234503875fa87af45a2c86b8ae2b5ae2e169df0fc841af", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5eb30dbe-8483-44ee-8509-25650df45c14", "node_type": "1", "metadata": {"header_path": "/[5.17.2] [Social] Funding Request: ENS Ecosystem Working Group/"}, "hash": "e3fec7220ac4e2f705e71b3a2f622654548c07c0a836b157da06cb94dcde7c0e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Abstract\n\nThe ENS Ecosystem Working Group requests funding of 836,000 USDC to support operations through April 2025. This is the only funding request of Term 5.\n\nThe ENS Ecosystem Working Group is responsible for growing and improving the ENS Ecosystem by funding builders and projects that are ENS-specific or ENS-centric.\n\nThis social proposal is submitted to satisfy the requirements set out in Rule 10.1.1 of the Working Group Rules ([EP 1.8](https://docs.ens.domains/v/governance/governance-proposals/term-1/ep12-working-group-rules)). If this proposal is passed, the funding request will be included in a collective executable proposal put forward by all three Working Groups.", "mimetype": "text/plain", "start_char_idx": 945, "end_char_idx": 1630, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5eb30dbe-8483-44ee-8509-25650df45c14": {"__data__": {"id_": "5eb30dbe-8483-44ee-8509-25650df45c14", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.17.2.mdx", "file_name": "5.17.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.17.2.mdx", "header_path": "/[5.17.2] [Social] Funding Request: ENS Ecosystem Working Group/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.17.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ecosystem", "multisigs", "group", "description", "october", "working", "balances", "multisig", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6c52d41b712678eb24d67cd26bd9181f50144835", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.17.2.mdx", "file_name": "5.17.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.17.2.mdx"}, "hash": "46a28c43430dec718f5af884b345bc4c44a5de3d38d8a160021a8dc577fd8df4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7b048c95-81c6-4c7b-8432-9eacde858581", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.17.2.mdx", "file_name": "5.17.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.17.2.mdx", "header_path": "/[5.17.2] [Social] Funding Request: ENS Ecosystem Working Group/"}, "hash": "15fa7dbefb4004341d768b90f2b3045745ab4ca6b7cdea041b38fc660fcf5be1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "46f4ec5e-f4d5-46ef-8244-0e8acf4101f9", "node_type": "1", "metadata": {"header_path": "/[5.17.2] [Social] Funding Request: ENS Ecosystem Working Group/"}, "hash": "6b717358e7a26244936ffedffb18a49bb15536d0007a8eae3dfc8e01ff3fa6c5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\n|                                                                                                        |  USDC   | ETH | $ENS |\n| ------------------------------------------------------------------------------------------------------ | :-----: | :-: | :--: |\n| [ENS Ecosystem Main Multisig](https://etherscan.io/address/0x2686a8919df194aa7673244549e68d42c1685d03) | 836,000 | --  |  --  | ## Description ### ENS Ecosystem Multisig Balances - As of October 4, 2023\n\nThe ENS Ecosystem Working Group multisigs:\n\n| Multisigs                                                                                |     USDC |      ETH |\n| :--------------------------------------------------------------------------------------- | -------: | -------: |\n| [Main Multisig](https://etherscan.io/address/0x2686a8919df194aa7673244549e68d42c1685d03) |      82k |     81.7 |\n| [IRL](https://etherscan.io/address/0x536013c57daf01d78e8a70cad1b1abada9411819)           |      21k |        - |\n| [Hackathon](https://etherscan.io/address/0x9b9c249be04dd433c7e8fbbf5e61e6741b89966d)     |      22k |      9.8 |\n| [Newsletter](https://etherscan.io/address/0x13aEe52C1C688d3554a15556c5353cb0c3696ea2)    |       4k |        - |\n| **Total**                                                                                | **129k** | **91.5** |", "mimetype": "text/plain", "start_char_idx": 1632, "end_char_idx": 2039, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0d1186a8-4951-4442-9c7f-5e5dbbb04293": {"__data__": {"id_": "0d1186a8-4951-4442-9c7f-5e5dbbb04293", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.17.2.mdx", "file_name": "5.17.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.17.2.mdx", "header_path": "/[5.17.2] [Social] Funding Request: ENS Ecosystem Working Group/Description/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.17.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ecosystem", "actual", "depend", "reserving", "reserved", "initiatives", "bounty", "cover", "reserves", "spending", "spend", "amounts"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6c52d41b712678eb24d67cd26bd9181f50144835", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.17.2.mdx", "file_name": "5.17.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.17.2.mdx"}, "hash": "46a28c43430dec718f5af884b345bc4c44a5de3d38d8a160021a8dc577fd8df4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c021ffdf-9423-478e-a24a-14a865d55309", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.17.2.mdx", "file_name": "5.17.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.17.2.mdx", "header_path": "/[5.17.2] [Social] Funding Request: ENS Ecosystem Working Group/Description/"}, "hash": "1b459fcd9f1c76e260af4eb1192032c20e3eb1ca1386ee2a0d361f474b7315a5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b6e03aa5-6fa1-41d9-ae6a-a0b19d7ddee5", "node_type": "1", "metadata": {"header_path": "/[5.17.2] [Social] Funding Request: ENS Ecosystem Working Group/Description/"}, "hash": "ef713e32b3dfee75117f062041748e9f9508eb82a746bf6de48b04d31f57f7ad", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Reserved for Initiatives\n\nEcosystem reserves amounts to make sure we can cover initiatives that are important. Reserving is not the same as spending it. For example, we are reserving 100k for the bug bounty program. The actual spend will depend on what, if any, bugs are discovered.\n\n| Initiatives     |     USDC |    ETH |\n| :-------------- | -------: | -----: |\n| Hackathon       |     300k |      - |\n| Grants          |     200k |     10 |\n| Library Support |     100k |      - |\n| Bug Bounty      |     100k |      - |\n| Audit Support   |     100k |      - |\n| IRL             |      50k |      - |\n| Support         |      15k |      - |\n| Reserved Total  | **865k** | **10** |\n\n**Reconciliation**\n| Initiatives|USDC|ETH|\n|:----|----:|----:|\n|Current Balance|129k| 91.5|\n|Reserved|(865k)| (10)|\n|Buffer|(100k)| (81.5)|\n|Total|**(836k)**|**-** |\n\nEcosystem WG is requesting 836,000 in USDC and zero ETH. This request ensures that there are sufficient resources to meet the expected future needs of the ecosystem working group. Buffer is an additional reserve to cover unforeseen expenses or opportunities.", "mimetype": "text/plain", "start_char_idx": 2968, "end_char_idx": 4082, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b6e03aa5-6fa1-41d9-ae6a-a0b19d7ddee5": {"__data__": {"id_": "b6e03aa5-6fa1-41d9-ae6a-a0b19d7ddee5", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.17.2.mdx", "file_name": "5.17.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.17.2.mdx", "header_path": "/[5.17.2] [Social] Funding Request: ENS Ecosystem Working Group/Description/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.17.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["hackathons", "calendar", "description", "participating", "least", "consist", "anticipate", "initiatives", "following", "initiative", "december", "payments", "grants"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6c52d41b712678eb24d67cd26bd9181f50144835", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.17.2.mdx", "file_name": "5.17.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.17.2.mdx"}, "hash": "46a28c43430dec718f5af884b345bc4c44a5de3d38d8a160021a8dc577fd8df4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0d1186a8-4951-4442-9c7f-5e5dbbb04293", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.17.2.mdx", "file_name": "5.17.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.17.2.mdx", "header_path": "/[5.17.2] [Social] Funding Request: ENS Ecosystem Working Group/Description/"}, "hash": "0f1956994ac47e9c0483cd0b0125e71a20252d88ebfb3b800f68e5a17185e83d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "25ed975e-6016-420b-873b-f068c95cae19", "node_type": "1", "metadata": {"header_path": "/[5.17.2] [Social] Funding Request: ENS Ecosystem Working Group/Description/"}, "hash": "9079e83cb37e86bd7cfbd5379acccef435d5b3d0a31d958f77baf0241000c303", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Initiatives Description\n\n| Initiative      | Description                                                                                                                                                                                                                                                                                                           |\n| --------------- | :-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Hackathons      | For our main partner, ETHGlobal, payments are made in December for the following calendar year. We anticipate participating in at least 7 events.                                                                                                                                                                     |\n| Grants          | Grants consist of [builder grants](https://discuss.ens.domains/t/term-5-grants-summary/18921), [Gitcoin rounds](https://discuss.ens.domains/t/gg20-ens-identity-round-conclusion/19301), and [ENS subgraph](https://discuss.ens.domains/t/ens-subgraph-migration-to-the-decentralised-version/19183/4) subsidization. |\n| Bug Bounty      | Supports the official bug bounty program of ENS administered by [immunefi](https://immunefi.com/bug-bounty/ens/information/).                                                                                                                                                                                         |\n| Library Support | Support open-source libraries that ENS depends on, either directly or through a program such as [drips](https://blog.ens.domains/post/supporting-software-dependencies-with-drips).                                                                                                                                   |\n| Audit Support   | Provide funding for auditing smart contracts that have significant prominence in the ecosystem or are expected to see widespread use.                                                                                                                                                                                 |\n| IRL             | Funding relates to events that coincide with conferences, such as ethCC & Devcon.                                                                                                                                                                                                                                     |\n| Support         | Support mods for social platforms, technical and non-technical educational content and the [newsletter](https://discuss.ens.domains/t/ens-dao-newsletter-70-09-24-24/19621).                                                                                                                                          |", "mimetype": "text/plain", "start_char_idx": 4084, "end_char_idx": 7100, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "25ed975e-6016-420b-873b-f068c95cae19": {"__data__": {"id_": "25ed975e-6016-420b-873b-f068c95cae19", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.17.2.mdx", "file_name": "5.17.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.17.2.mdx", "header_path": "/[5.17.2] [Social] Funding Request: ENS Ecosystem Working Group/Description/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.17.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["historical", "spending", "prepared", "ecosystem", "after", "proposal", "consult", "within", "which", "released", "steward", "reports"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6c52d41b712678eb24d67cd26bd9181f50144835", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.17.2.mdx", "file_name": "5.17.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.17.2.mdx"}, "hash": "46a28c43430dec718f5af884b345bc4c44a5de3d38d8a160021a8dc577fd8df4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b6e03aa5-6fa1-41d9-ae6a-a0b19d7ddee5", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.17.2.mdx", "file_name": "5.17.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.17.2.mdx", "header_path": "/[5.17.2] [Social] Funding Request: ENS Ecosystem Working Group/Description/"}, "hash": "7831df12377b8e15da1feb19c3d32b42b2ae5dc7942ff94742ca989ef3f13b8f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Historical Spending\n\nFor historical spending consult the spending reports for [Q1](https://discuss.ens.domains/t/term-5-working-group-spending-summary-2024-q1/19146) & [Q2](https://discuss.ens.domains/t/term-5-working-group-spending-summary-2024-q2/19449), which are released within 30 days after the end of each quarter.\n\n---\n\n_This proposal was prepared by [slobo.eth](https://x.com/AlexSlobodnik), Lead Steward of the Ecosystem Working Group._ ---\ndescription: 'This social proposal requests $236k USDC for grants, events, hackathons, and bounties supporting Web3 infrastructure'\nauthors: ['simona.eth']\nproposal:\n  snapshot: '0xafb1325f49057dd20fabf2908531da93565172525309a0a3a914daa7f773b0c6'\n  type: 'social'\n---", "mimetype": "text/plain", "start_char_idx": 7102, "end_char_idx": 7552, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ad7b4b0c-d932-4191-ab4a-161d490bfbd7": {"__data__": {"id_": "ad7b4b0c-d932-4191-ab4a-161d490bfbd7", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.17.3.mdx", "file_name": "5.17.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.17.3.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.17.3.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["group", "public", "passed", "funding", "working", "goods"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a0defc8fa6b14a2dd3d6432b56c91a1b1f896c38", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.17.3.mdx", "file_name": "5.17.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.17.3.mdx"}, "hash": "e06ed0ac8d97deff36f92977eb96a2b8bc2c0afb5ca234cd7120f89eb9764ffd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c9f6d0a2-4629-48fc-b485-4f318cabd0f3", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.17.3.mdx", "file_name": "5.17.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.17.3.mdx", "header_path": "/"}, "hash": "b088c59c06f35048a812ac74f10c2e32a9d8f9652a6dfa56c1180ca39d338867", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "25bf1d5c-d4d1-4a24-9d6d-30b476551c21", "node_type": "1", "metadata": {"header_path": "/[5.17.3] [Social] Funding Request: ENS Public Goods Working Group/"}, "hash": "962b8b262320bf687f5c3929d578930aab999b9ff37fb151594c2b634b989d9c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# [5.17.3] [Social] Funding Request: ENS Public Goods Working Group\n\n::authors\n\n| **Status**            | Passed                                                                                                                   |\n| --------------------- | ------------------------------------------------------------------------------------------------------------------------ |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/5-17-3-social-funding-request-ens-public-goods-working-group/19679)                |\n| **Votes**             | [Snapshot](https://snapshot.box/#/s:ens.eth/proposal/0xafb1325f49057dd20fabf2908531da93565172525309a0a3a914daa7f773b0c6) |", "mimetype": "text/plain", "start_char_idx": 273, "end_char_idx": 948, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "25bf1d5c-d4d1-4a24-9d6d-30b476551c21": {"__data__": {"id_": "25bf1d5c-d4d1-4a24-9d6d-30b476551c21", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.17.3.mdx", "file_name": "5.17.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.17.3.mdx", "header_path": "/[5.17.3] [Social] Funding Request: ENS Public Goods Working Group/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.17.3.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["operations", "goods", "group", "abstract", "window", "april", "public", "working", "funding", "support", "until", "requests"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a0defc8fa6b14a2dd3d6432b56c91a1b1f896c38", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.17.3.mdx", "file_name": "5.17.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.17.3.mdx"}, "hash": "e06ed0ac8d97deff36f92977eb96a2b8bc2c0afb5ca234cd7120f89eb9764ffd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ad7b4b0c-d932-4191-ab4a-161d490bfbd7", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.17.3.mdx", "file_name": "5.17.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.17.3.mdx", "header_path": "/"}, "hash": "8a0b73781afb88bfebbeaba954a1dec68793132c65d96af49bd34b337ef480d5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "65f36be4-e621-4903-94b8-408df15463f5", "node_type": "1", "metadata": {"header_path": "/[5.17.3] [Social] Funding Request: ENS Public Goods Working Group/"}, "hash": "c3810e7d67285ed4de32baeb20524b02d303eae0c741feb22a855b929a87e682", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Abstract\n\nThe ENS Public Goods Working Group requests funding to support operations until the next funding window in April 2025.\n\nThe Public Goods working group funds projects and builders improving the Web3 ecosystem. This funding stream is authorized in Article III of the ENS DAO Constitution. The funding supports initiatives related to open-source software, tooling, research and any practical implementations that broadly benefit a wide range of users of Ethereum and Web3.\n\nThe funds requested extends current need through to next term to ensure that next season\u2019s stewards have some available funding before the next funding window available.\n\nThe total request in this proposal is 226k USDC to be transferred from the DAO wallet to the Public Goods Working Group.", "mimetype": "text/plain", "start_char_idx": 950, "end_char_idx": 1725, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "65f36be4-e621-4903-94b8-408df15463f5": {"__data__": {"id_": "65f36be4-e621-4903-94b8-408df15463f5", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.17.3.mdx", "file_name": "5.17.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.17.3.mdx", "header_path": "/[5.17.3] [Social] Funding Request: ENS Public Goods Working Group/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.17.3.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["amount", "formal", "requested", "treasury", "anticipated", "public", "budgetary", "funding", "multisig", "fulfill", "goods", "needs", "through", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a0defc8fa6b14a2dd3d6432b56c91a1b1f896c38", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.17.3.mdx", "file_name": "5.17.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.17.3.mdx"}, "hash": "e06ed0ac8d97deff36f92977eb96a2b8bc2c0afb5ca234cd7120f89eb9764ffd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "25bf1d5c-d4d1-4a24-9d6d-30b476551c21", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.17.3.mdx", "file_name": "5.17.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.17.3.mdx", "header_path": "/[5.17.3] [Social] Funding Request: ENS Public Goods Working Group/"}, "hash": "b71b3a0bdf14d033df336835048de82f1d1d411087ffa64a916357225d9da33b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0a722a7d-cd73-4616-8344-0f36969744a7", "node_type": "1", "metadata": {"header_path": "/[5.17.3] [Social] Funding Request: ENS Public Goods Working Group/"}, "hash": "0574ff1a8f3e583c49891bd828f3d94afdeb553cffd27bc01b1bd9d744fad0cf", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\nThis specification is the amount requested from the DAO treasury to the Public Goods Multisig to fulfill anticipated budgetary needs through the next formal funding window in April 2025.\n\n![](https://ipfs.punkscape.xyz/ipfs/bafkreigs2h6fb5zpnsep76k3qejqlcwz757bgsl3vjsn7muvvgigta5q7a)\n![](https://ipfs.punkscape.xyz/ipfs/bafkreictfvsa3fq2xv3rnnlnqdulphsq5d7s5eybiyvbjnqz5umqstsewu)\n\nOf these funds, 256k is allocated to large grants builders and initiaves through to the end of 2024. This leaves approximately 89k USD and 29.5 Ether unallocated and available to be rolled into the next term.\n\n![](https://ipfs.punkscape.xyz/ipfs/bafkreigv5qvxcs7u7hhoj3lrwzp2hsikjasugtuwe7bepobjz6bhvg5nby)\n\n**Note #1:** To ensure grantees have consistency, the funds requested for this category carry the program to Q3 which is an exception from the other spending categories which plan only through April 2025.\n\n**Note #2:** The PG Working group budget request is in USDC only; our balance of ETH will rollover to next term, but it will be left to future stewards discretion to swap it, keep it or return it to the treasury.\n\n![](https://ipfs.punkscape.xyz/ipfs/bafkreihplgibqq5zdwvy7eqksvue753a76tmtpkvicitirfazle3wpbyy4)\n\nSubtracting the 89k available to rollover from 2024, the unmet need is 226k USDC which is the sum total to be included as the specification of this funding request.", "mimetype": "text/plain", "start_char_idx": 1727, "end_char_idx": 3118, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0a722a7d-cd73-4616-8344-0f36969744a7": {"__data__": {"id_": "0a722a7d-cd73-4616-8344-0f36969744a7", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.17.3.mdx", "file_name": "5.17.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.17.3.mdx", "header_path": "/[5.17.3] [Social] Funding Request: ENS Public Goods Working Group/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.17.3.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["explained", "consolidates", "category", "categories", "builder", "program", "existing", "small", "under", "public", "grants", "spending", "large"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a0defc8fa6b14a2dd3d6432b56c91a1b1f896c38", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.17.3.mdx", "file_name": "5.17.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.17.3.mdx"}, "hash": "e06ed0ac8d97deff36f92977eb96a2b8bc2c0afb5ca234cd7120f89eb9764ffd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "65f36be4-e621-4903-94b8-408df15463f5", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.17.3.mdx", "file_name": "5.17.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.17.3.mdx", "header_path": "/[5.17.3] [Social] Funding Request: ENS Public Goods Working Group/"}, "hash": "5e5c89bc059ef96e5487e07f4b4c2e466f724add7a8f862a888034ccf55e56c7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d7ff7bc7-6cfe-4273-b94a-e007790e806c", "node_type": "1", "metadata": {"header_path": "/[5.17.3] [Social] Funding Request: ENS Public Goods Working Group/Spending Categories Explained/"}, "hash": "2c1b9ebbc1a0d000d82feaaaee756c429a514cc88700ae5e4dd07ee96c1019ac", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Spending Categories Explained ### Builder Grants\n\nThis new category consolidates the existing Large and Small grants under one category and program title. The Public Good working group has been working with a provider to create a unified platform which will be announced during frENSday in Bangkok on 11/11/2024. To ensure grantees have consistency, the funds requested for this category carry the program through to Q3 which is an exception from the other spending categories which plan through to April 2025.\n\n- **Small Grants**  \n  Multiple micro-grants will be distributed to builders via the Builder Grants platform to be launched. We have added the amount expected to spend in the next 5 months with the same amounts distributed in the last rounds.\n\n- **Large Grants**  \n  Grants up to 50k USDC with applications accepted on a rolling basis throughout the term. Large Grants will continue in Q4. The working group will continue to focus on strengthening impact measurements accomplished by grantees during the previous Large Grants cycle.", "mimetype": "text/plain", "start_char_idx": 3120, "end_char_idx": 3152, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6fd30b8b-2b8c-4709-83e4-e97dfb453108": {"__data__": {"id_": "6fd30b8b-2b8c-4709-83e4-e97dfb453108", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.17.3.mdx", "file_name": "5.17.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.17.3.mdx", "header_path": "/[5.17.3] [Social] Funding Request: ENS Public Goods Working Group/Spending Categories Explained/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.17.3.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["align", "perpetual", "developing", "march", "bounty", "funds", "builders", "which", "principles", "during", "launched", "available", "projects", "ethlondon"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a0defc8fa6b14a2dd3d6432b56c91a1b1f896c38", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.17.3.mdx", "file_name": "5.17.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.17.3.mdx"}, "hash": "e06ed0ac8d97deff36f92977eb96a2b8bc2c0afb5ca234cd7120f89eb9764ffd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d7ff7bc7-6cfe-4273-b94a-e007790e806c", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.17.3.mdx", "file_name": "5.17.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.17.3.mdx", "header_path": "/[5.17.3] [Social] Funding Request: ENS Public Goods Working Group/Spending Categories Explained/"}, "hash": "f6bf8428cd527cb69cf5b3285ba0a341db2ed255db259368bfceb508c2f09280", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3e156731-8fe6-41fa-9cba-7248294aa247", "node_type": "1", "metadata": {"header_path": "/[5.17.3] [Social] Funding Request: ENS Public Goods Working Group/Spending Categories Explained/"}, "hash": "ec019e7fe72af942f81c746c29e65b864837f2194f279a219c00974ff576d2ec", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### PG Perpetual Bounty\n\nLaunched during ETHLondon in March 2024, this is a perpetual pool of funds that is available to builders who are developing projects which align with the principles of public goods in the web3 space.\n\nThis funding pool is available at any time, but also marketed specifically towards builders who are not eligible for ENS-related bounties during hackthons, but deserve support for their public goods mission. ### Events and Hackathons\n\nThe working group provides support to Public Goods events and hackathons. These funds cover expenses related to event sponsorship, bounties, judging and other participatory support roles during events.\n\n**The current earmarked events are:**\n\n- ETHGlobal Bangkok\n- Devcon\n- ETHDenver 2025\n\n\\*This list is not set as several events are still in planning stages for Q1 of 2025. The PG stewards continuously assess opportunities for expanding the public goods conversation and collaborations.", "mimetype": "text/plain", "start_char_idx": 4170, "end_char_idx": 4603, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "605a4628-41e7-4048-8445-ec9252ab200d": {"__data__": {"id_": "605a4628-41e7-4048-8445-ec9252ab200d", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.17.3.mdx", "file_name": "5.17.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.17.3.mdx", "header_path": "/[5.17.3] [Social] Funding Request: ENS Public Goods Working Group/Spending Categories Explained/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.17.3.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["discretionary", "additional", "category", "group", "grant", "opportunities", "funds", "reserved", "expenses", "working", "discretion", "during", "spending", "arise"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a0defc8fa6b14a2dd3d6432b56c91a1b1f896c38", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.17.3.mdx", "file_name": "5.17.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.17.3.mdx"}, "hash": "e06ed0ac8d97deff36f92977eb96a2b8bc2c0afb5ca234cd7120f89eb9764ffd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3e156731-8fe6-41fa-9cba-7248294aa247", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.17.3.mdx", "file_name": "5.17.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.17.3.mdx", "header_path": "/[5.17.3] [Social] Funding Request: ENS Public Goods Working Group/Spending Categories Explained/"}, "hash": "661992ed8add323c2fd1583c11b5173d06b44cf23e4a43249e20e7f1235ce10c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Discretionary\n\nThe funds in this category are reserved for additional grant opportunities and expenses that arise during the term. Spending in this category is at the discretion of the working group stewards. ---\ndescription: \"This proposal outlines the ENS DAO's steward compensation structure for Term 6, detailing monthly USDC payments for various roles, a new $ENS token distribution tied to annual USDC compensation, and terms for DAO approval.\"\nauthors: ['5pence.eth']\nproposal:\n  snapshot: '0x88de13f2f088390262d1d5e7db9ddff5a74d0b878fedf590a0448c32692078ba'\n  discourse: 'https://discuss.ens.domains/t/ens-dao-steward-compensation-structure-term-6/19739'\n  type: 'social'\n---\n\n| **Status**            | Passed                                                                                                                   |\n| --------------------- | ------------------------------------------------------------------------------------------------------------------------ |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/ens-dao-steward-compensation-structure-term-6/19739)                               |\n| **Votes**             | [Snapshot](https://snapshot.box/#/s:ens.eth/proposal/0x88de13f2f088390262d1d5e7db9ddff5a74d0b878fedf590a0448c32692078ba) |", "mimetype": "text/plain", "start_char_idx": 5122, "end_char_idx": 5334, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c7769dc2-7547-481c-94fe-8490ab8cb11a": {"__data__": {"id_": "c7769dc2-7547-481c-94fe-8490ab8cb11a", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.18.mdx", "file_name": "5.18.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.18.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.18.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["structure", "metagov", "group", "creation", "responsibility", "background", "working", "place", "steward", "compensation", "rules"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "862f3ee634783325a1c41d6a62b40e0d91398faf", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.18.mdx", "file_name": "5.18.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.18.mdx"}, "hash": "b25cee585aef6eda08ff3250cc98780248771a82548a2dddb747d5e2e4fe929b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f76613c8-9ca1-42ff-ad5e-c4b5bbd1d3d5", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.18.mdx", "file_name": "5.18.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.18.mdx", "header_path": "/"}, "hash": "286d35e06f1f484415c0a48ab32addb62ee158e017458dd18f43bdc2b2577222", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4d2cce37-1c4d-4298-b15b-36380f21a0a3", "node_type": "1", "metadata": {"header_path": "/[EP 5.18] [Social] ENS DAO Steward Compensation Structure - Term 6/"}, "hash": "1d59052d2ef6fc25d7d8eb13c4b685f93bef1f8357ecec47201227169a15b4cf", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# [EP 5.18] [Social] ENS DAO Steward Compensation Structure - Term 6\n\n::authors ## Background\n\nThe ENS DAO Working Group Rules place the responsibility for steward compensation on the Metagov working group.\n\n**Working Group Rules:**\n[[EP0.4] [Social] Proposal: Creation of Foundational Working Groups and Working Group Rules](https://docs.ens.domains/v/governance/governance-proposals/term-0/ep4-social-proposal-creation-of-foundational-working-groups-and-working-group-rules)\n[[EP12][Social] Working Group Rules ](https://discuss.ens.domains/t/ep12-social-working-group-rules/12953)\n\nWith the passing of [this social proposal](https://snapshot.org/#/ens.eth/proposal/0x26a5c8dec547837495707e70446d1e7cd874a91f75753c602998f6e70083a266) in Term 4, these two rules were added:\n\n> **10.4.** The Meta-Governance working group are responsible for defining standards for fair compensation ('Compensation Guidelines').\n> **10.5.** The Compensation Guidelines shall be defined prior to the Nomination Window for each term and can only take effect for the following term.", "mimetype": "text/plain", "start_char_idx": 1073, "end_char_idx": 1152, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "179a11a6-8942-4b7c-a017-35f2b69c051f": {"__data__": {"id_": "179a11a6-8942-4b7c-a017-35f2b69c051f", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.18.mdx", "file_name": "5.18.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.18.mdx", "header_path": "/[EP 5.18] [Social] ENS DAO Steward Compensation Structure - Term 6/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.18.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["structure", "previous", "proposed", "outlines", "stewards", "builds", "compensation", "summary", "during", "several", "accordance", "includes", "models"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "862f3ee634783325a1c41d6a62b40e0d91398faf", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.18.mdx", "file_name": "5.18.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.18.mdx"}, "hash": "b25cee585aef6eda08ff3250cc98780248771a82548a2dddb747d5e2e4fe929b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4d2cce37-1c4d-4298-b15b-36380f21a0a3", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.18.mdx", "file_name": "5.18.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.18.mdx", "header_path": "/[EP 5.18] [Social] ENS DAO Steward Compensation Structure - Term 6/"}, "hash": "a604a318cac224da57f36838ce0177ba34d0f0864f3ee670d3d268d16f72d597", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e8255a53-e62c-41de-b81c-7d10d8a41d32", "node_type": "1", "metadata": {"header_path": "/[EP 5.18] [Social] ENS DAO Steward Compensation Structure - Term 6/"}, "hash": "f8da6fc3ee9ab81cd888a704d3f1f14c2aaad1735f6984e0ccd44be3895a2920", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Summary\n\nIn accordance with rule 10.5, This post outlines the proposed compensation structure for ENS DAO stewards during Term 6. The structure builds upon previous compensation models but includes several important changes. Notably, this compensation proposal will be put to a DAO vote for approval. ## Proposed Compensation Structure ### USDC Compensation\n\nThe total USDC compensation is the same as Term 5. The base compensation structure remains similar to previous terms, with some adjustments:\n\n| Role         | Quantity | Per Steward Per Month | Per Steward Per Term | Total per Term |\n| ------------ | -------- | --------------------- | -------------------- | -------------- |\n| Steward      | 6        | $4,000                | $24,000              | $288,000       |\n| Lead Steward | 3        | $5,500                | $33,000              | $198,000       |\n| Secretary    | 1        | $5,500                | $33,000              | $66,000        |\n| Scribe       | 1        | $3,000                | $18,000              | $36,000        |\n| **Total**    |          |                       |                      | **$588,000**   |\n\n([previous structure linked here for reference](https://discuss.ens.domains/t/ens-dao-steward-compensation/18063))\n\nKey changes:\n\n- The discretionary amount has been removed.\n- The $3,000 previously allocated to each WG for discretionary compensation has been split evenly among the stewards of that working group.\n- Regular stewards will now receive $4,000 USDC per month (up from $3,000).\n- Lead stewards will now receive $5,500 USDC per month (up from $4,500).", "mimetype": "text/plain", "start_char_idx": 2138, "end_char_idx": 2441, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7d5fa07f-e148-4b2f-a7c4-c1b08aedc222": {"__data__": {"id_": "7d5fa07f-e148-4b2f-a7c4-c1b08aedc222", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.18.mdx", "file_name": "5.18.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.18.mdx", "header_path": "/[EP 5.18] [Social] ENS DAO Steward Compensation Structure - Term 6/Proposed Compensation Structure/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.18.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["structure", "equal", "tokens", "introducing", "receive", "distribution", "their", "total", "value", "steward", "compensation", "token", "governance"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "862f3ee634783325a1c41d6a62b40e0d91398faf", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.18.mdx", "file_name": "5.18.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.18.mdx"}, "hash": "b25cee585aef6eda08ff3250cc98780248771a82548a2dddb747d5e2e4fe929b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8b8df177-7855-4e09-9382-185692f9c125", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.18.mdx", "file_name": "5.18.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.18.mdx", "header_path": "/[EP 5.18] [Social] ENS DAO Steward Compensation Structure - Term 6/Proposed Compensation Structure/"}, "hash": "a5153ee79518a1dd7b5a2e13eba288094929acc0a4730850732a38c75a17d596", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b752e0f2-2eaf-4268-9d27-4ffa5d609c94", "node_type": "1", "metadata": {"header_path": "/[EP 5.18] [Social] ENS DAO Steward Compensation Structure - Term 6/Proposed Compensation Structure/"}, "hash": "0b20d2c78790f4591d99d6000844b1e3d6f16f39fd9fc1be84e43974791e9f29", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### $ENS Token Distribution\n\nWe are introducing a new structure for $ENS governance distribution to stewards:\n\n1. Each steward will receive $ENS tokens equal in value to their total USDC compensation for the year.\n2. The $ENS tokens will be distributed on July 1st, via 2-year linear vesting contracts.\n3. The $ENS token price used to calculate the number of tokens each steward receives will be derived from the average daily price of the token between January 1st and July 1st of the term.\n4. The vesting period will start from the beginning of the term (January 1st), meaning 6 months of vesting will have already occurred at the time of distribution.\n\nExample calculation:\n\n- A regular steward receiving $48,000 USDC for the year would also receive $48,000 worth of $ENS tokens.\n- If the average $ENS price is $12 when calculated on July 1st, the steward would receive 4,000 $ENS tokens in a 2-year linear vesting contract.\n- At the time of distribution (July 1st), 25% of the tokens (1,000 $ENS) would have already vested.\n\nThis structure ensures that stewards' token compensation aligns with their USDC compensation and incentivizes long-term commitment to the DAO.", "mimetype": "text/plain", "start_char_idx": 3754, "end_char_idx": 4925, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b752e0f2-2eaf-4268-9d27-4ffa5d609c94": {"__data__": {"id_": "b752e0f2-2eaf-4268-9d27-4ffa5d609c94", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.18.mdx", "file_name": "5.18.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.18.mdx", "header_path": "/[EP 5.18] [Social] ENS DAO Steward Compensation Structure - Term 6/Proposed Compensation Structure/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.18.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["supply", "votes", "social", "success", "quorum", "criteria", "voting", "million", "proposal", "receive", "following", "requirements", "total", "minimum"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "862f3ee634783325a1c41d6a62b40e0d91398faf", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.18.mdx", "file_name": "5.18.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.18.mdx"}, "hash": "b25cee585aef6eda08ff3250cc98780248771a82548a2dddb747d5e2e4fe929b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7d5fa07f-e148-4b2f-a7c4-c1b08aedc222", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.18.mdx", "file_name": "5.18.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.18.mdx", "header_path": "/[EP 5.18] [Social] ENS DAO Steward Compensation Structure - Term 6/Proposed Compensation Structure/"}, "hash": "745c3eaba48e74889c1ca43af8032bb090071b0f8219d53651aab6283bd43db8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Success Criteria\n\nFor this social proposal to pass, the following quorum and voting requirements must be met:\n\n1. **Quorum**: The proposal must receive a minimum of 1% of the total supply of $ENS (1 million votes) in the form of \"Yes\" and \"Abstain\" votes combined. \"No\" votes do not count towards quorum.\n\n2. **Approval**: Once the quorum is reached, the proposal requires a simple majority (>50%) of \"Yes\" votes among the \"Yes\" and \"No\" votes to pass. \"Abstain\" votes do not count towards the approval calculation.\n\nIf approved, this structure will be implemented for Term 6. If not approved, the Metagovernance Working Group will reassess and propose an alternative structure based on feedback received.", "mimetype": "text/plain", "start_char_idx": 4927, "end_char_idx": 5636, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0842ff1d-ab6a-483e-a5b4-dc1c52c641e4": {"__data__": {"id_": "0842ff1d-ab6a-483e-a5b4-dc1c52c641e4", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.19.mdx", "file_name": "5.19.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.19.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.19.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["tokens", "engage", "aiming", "program", "proposal", "eligible", "pilot", "contributors", "issuing", "receiving", "distribute", "outlines", "payments", "governance"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7cc385a2cb8ce08970cd694f5809ed89a76d696a", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.19.mdx", "file_name": "5.19.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.19.mdx"}, "hash": "be7e8746f575bedb534367e048058b180d41f55902b931c9ce756229cbd805a7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "56ebbbc5-38e1-42b9-babb-4f143985aae6", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "6383435186bb4d3cec47ed12812cc5d9a8f2f6490285f85124fe45d50cc9156f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: \"This proposal outlines a pilot program to distribute ENS governance tokens to eligible contributors receiving grants, bounties, or payments from the DAO, aiming to engage them in governance by issuing tokens according to a quadratic distribution model, with the program's budget to be determined by a ranked choice vote.\"\nauthors: ['avsa.eth']\nproposal:\n  snapshot: '0xfa54ff2b55f0495c96ec2d8645241bcff48ca6afe1f4925fb51f29c4667252df'\n  discourse: 'https://discuss.ens.domains/t/ep-5-19-social-governance-distribution-pilot-program/19759'\n  type: 'social'\n---", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 577, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "56ebbbc5-38e1-42b9-babb-4f143985aae6": {"__data__": {"id_": "56ebbbc5-38e1-42b9-babb-4f143985aae6", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.19.mdx", "file_name": "5.19.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.19.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.19.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["program", "pilot", "distribution", "approved", "governance"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7cc385a2cb8ce08970cd694f5809ed89a76d696a", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.19.mdx", "file_name": "5.19.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.19.mdx"}, "hash": "be7e8746f575bedb534367e048058b180d41f55902b931c9ce756229cbd805a7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0842ff1d-ab6a-483e-a5b4-dc1c52c641e4", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.19.mdx", "file_name": "5.19.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.19.mdx", "header_path": "/"}, "hash": "892e73638621d2afb218e5b584b2eb1de22d2b16d7d2144d0c846c86c2f20afd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "13f6decd-d5f6-4acb-9cbd-9c14b240cf9c", "node_type": "1", "metadata": {"header_path": "/[EP 5.19] [Social] Governance Distribution Pilot Program/"}, "hash": "18d1cdb8d94a20d58352778457a73b9ef48256b3c17d4536bca6bdc2fd320b03", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# [EP 5.19] [Social] Governance Distribution Pilot Program\n\n::authors\n\n| **Status**            | Passed, approved 30K $ENS distribution program                                                                           |\n| --------------------- | ------------------------------------------------------------------------------------------------------------------------ |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/ep-5-19-social-governance-distribution-pilot-program/19759)                        |\n| **Votes**             | [Snapshot](https://snapshot.box/#/s:ens.eth/proposal/0xfa54ff2b55f0495c96ec2d8645241bcff48ca6afe1f4925fb51f29c4667252df) |", "mimetype": "text/plain", "start_char_idx": 579, "end_char_idx": 1245, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "13f6decd-d5f6-4acb-9cbd-9c14b240cf9c": {"__data__": {"id_": "13f6decd-d5f6-4acb-9cbd-9c14b240cf9c", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.19.mdx", "file_name": "5.19.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.19.mdx", "header_path": "/[EP 5.19] [Social] Governance Distribution Pilot Program/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.19.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["other", "selected", "payment", "establishes", "distribute", "would", "program", "proposal", "eligible", "pilot", "contributors", "receive", "serve", "governance"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7cc385a2cb8ce08970cd694f5809ed89a76d696a", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.19.mdx", "file_name": "5.19.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.19.mdx"}, "hash": "be7e8746f575bedb534367e048058b180d41f55902b931c9ce756229cbd805a7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "56ebbbc5-38e1-42b9-babb-4f143985aae6", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.19.mdx", "file_name": "5.19.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.19.mdx", "header_path": "/"}, "hash": "262365b33a0ae51c713f475d54cbe3a3feea6dfbc16b28091d35d076f5b8dd1d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b51fa0cc-cab7-4c7e-9216-8851ebb5acda", "node_type": "1", "metadata": {"header_path": "/[EP 5.19] [Social] Governance Distribution Pilot Program/"}, "hash": "781600d3883bfef2f1c8410c5916c198495d3c5b3bfe1098fbac8f27bcfcdf7a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Objective:\n\nThis proposal establishes a pilot program to distribute ENS governance to eligible DAO contributors who have been selected by the DAO to receive a grant, bounty, or other payment for services. The program would also serve as a pilot, and if successful, could become a long-term initiative, aiming to cover all DAO USDC and ETH recipients, while setting a policy for future governance distribution.\n\nThe intent is to engage contributors in governance. We believe governance distribution increases access to DAO governance, enhances the utility of the token, decreases the amount of tokens purely used in markets, increases delegation and the safety of the DAO, and helps align developers and other contributors who bring value to the DAO.", "mimetype": "text/plain", "start_char_idx": 1247, "end_char_idx": 1999, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b51fa0cc-cab7-4c7e-9216-8851ebb5acda": {"__data__": {"id_": "b51fa0cc-cab7-4c7e-9216-8851ebb5acda", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.19.mdx", "file_name": "5.19.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.19.mdx", "header_path": "/[EP 5.19] [Social] Governance Distribution Pilot Program/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.19.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["select", "tokens", "determine", "security", "providers", "budget", "program", "council", "within", "matching", "between", "approved", "range", "service"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7cc385a2cb8ce08970cd694f5809ed89a76d696a", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.19.mdx", "file_name": "5.19.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.19.mdx"}, "hash": "be7e8746f575bedb534367e048058b180d41f55902b931c9ce756229cbd805a7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "13f6decd-d5f6-4acb-9cbd-9c14b240cf9c", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.19.mdx", "file_name": "5.19.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.19.mdx", "header_path": "/[EP 5.19] [Social] Governance Distribution Pilot Program/"}, "hash": "490b03b2dd50b3863831912c344c9fbeb0c6d2de0cf10867ade270b5734ce12d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "60c1a7f6-ce11-44fa-a1f1-411e2ffb0d94", "node_type": "1", "metadata": {"header_path": "/[EP 5.19] [Social] Governance Distribution Pilot Program/"}, "hash": "95acf393687d32e2b0ac50038907ff6880d02089f46c044ac144eac2c03fc8b1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Context:\n\n- **Previous Distributions**:\n\n  - [90k ENS tokens to stewards](https://discuss.ens.domains/t/5-8-social-ens-steward-vesting-proposal/19059)\n  - [80k ENS tokens to service providers and security council members](https://discuss.ens.domains/t/distribution-of-80k-ens-tokens-to-service-providers-and-security-council-members/19541)\n\n- **Proposed Distribution**:\n  - This vote is to determine if the program is approved and to select its budget within a range between 0 and 90k ENS. ## Matching Program:\n\nThe distributions are calculated using a progressive ratio, meaning that the more you receive in dollar value from the DAO, the more you will receive in absolute values in ENS, but less relatively to the amount, following a quadratic formula. The process is as follows:\n\n1. **Calculate all eligible transfers**: First, we list all transfers from the various DAO wallets into external wallets from January to September 2024. Data is collected from the [ENS Ledger app](https://ens-ledger.app).\n2. **Exclude ineligible transactions**: Transactions to Stewards, ENS Labs, Service Providers, and other transactions that are considered refunds or payments for goods are not counted.\n3. **Calculate the square root of the total value received**: The total weights are calculated to determine the percentage of the budget each recipient will receive. That calculation and further details can be seen in [this spreadsheet](https://docs.google.com/spreadsheets/d/1hnrBSPy5efi2W0b4hd4y2BnAmRIfI0M5y4NgYGjEPms/edit?usp=sharing).\n4. **Decide the program's total budget**: The total budget will be determined by this vote.", "mimetype": "text/plain", "start_char_idx": 2001, "end_char_idx": 2493, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1280b65e-35ce-41e6-a088-90c8b29ce66a": {"__data__": {"id_": "1280b65e-35ce-41e6-a088-90c8b29ce66a", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.19.mdx", "file_name": "5.19.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.19.mdx", "header_path": "/[EP 5.19] [Social] Governance Distribution Pilot Program/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.19.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["votes", "table", "voting", "budget", "proposal", "EIP-7212", "system", "ranked", "options", "choice", "instant", "distribution", "total", "considered", "option"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7cc385a2cb8ce08970cd694f5809ed89a76d696a", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.19.mdx", "file_name": "5.19.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.19.mdx"}, "hash": "be7e8746f575bedb534367e048058b180d41f55902b931c9ce756229cbd805a7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "60c1a7f6-ce11-44fa-a1f1-411e2ffb0d94", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.19.mdx", "file_name": "5.19.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.19.mdx", "header_path": "/[EP 5.19] [Social] Governance Distribution Pilot Program/"}, "hash": "bf22c604333a7cb4204faee14129ecec0aeadce4c14ee593e52aac2406a538dc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e9363660-ccf3-4965-a2ae-9f1926caa4b3", "node_type": "1", "metadata": {"header_path": "/[EP 5.19] [Social] Governance Distribution Pilot Program/"}, "hash": "36cd9a2352314568a995300971420de16fe669918b77f88caa438d965a95087d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Voting Method:\n\nThe vote will use a ranked choice voting system with options of 0, 30k, 60k, and 90k ENS.\n\nAn Instant Run-Off will be calculated, and if the budget option of 0 wins, or if the total votes are less than 1 million, then the proposal will be considered rejected. ## Distribution Table:\n\nThe table below is from the [ENS ledger](https://ens-ledger.app), excluding Stewards, Service Providers, ENS Labs, refunds, and internal wallets. ETHGlobal Hackers are bounties given by ETHGlobal to hackathon winners. The final number of hackers is still being calculated, but here it is presented as a maximum of 100. If the final number is less than this, then more ENS will be distributed to other recipients, and if it is greater, it will be capped at 100. This proposal covers transactions from January 2024 to September 2024, and the final table may be subject to change upon legal or technical review.\n\n|                                          | $ Received jan-sep 2024 | 30k ENS | %    | 60k ENS | %    | 90k ENS | %    |\n| ---------------------------------------- | ----------------------- | ------- | ---- | ------- | ---- | ------- | ---- |\n| ETHGlobal                                | $ 190,000.00            | 1,441   | 13%  | 2,883   | 26%  | 4,324   | 39%  |\n| Karpatkey                                | $ 187,149.13            | 1,430   | 13%  | 2,861   | 26%  | 4,291   | 39%  |\n| @UGWST_COM                               | $ 75,000.00             | 906     | 21%  | 1,811   | 41%  | 2,717   | 62%  |\n| Rotki                                    | $ 53,973.38             | 768     | 24%  | 1,536   | 48%  | 2,305   | 73%  |\n| wslyvh.eth                               | $ 50,004.00             | 739     | 25%  | 1,479   | 50%  | 2,218   | 75%  |\n| gashawk.eth                              | $ 40,000.00             | 661     | 28%  | 1,323   | 56%  | 1,984   | 84%  |\n| buidlguidl.eth                           | $ 35,000.00             | 619     | 30%  | 1,237   | 60%  | 1,856   | 90%  |\n| borderlessafrica.eth                     | $ 30,000.00             | 573     | 32%  | 1,145   | 65%  | 1,718   | 97%  |\n| daemon.eth                               | $ 27,000.00             | 543     | 34%  | 1,087   | 68%  | 1,630   | 103% |\n| Revoke.Cash                              | $ 25,000.00             | 523     | 36%  | 1,046   | 71%  | 1,568   | 107% |\n| Onthis                                   | $ 25,000.00             | 523     | 36%  | 1,046   | 71%  | 1,568   | 107% |\n| ipns.eth                                 | $ 25,000.00             | 523     | 36%  | 1,046   | 71%  | 1,568   | 107% |\n| Fluidkey                                 | $ 25,000.00             | 523     | 36%  | 1,046   | 71%  | 1,568   | 107% |\n| Blockscout                               | $ 25,000.00             | 523     | 36%  | 1,046   | 71%  | 1,568   | 107% |\n| beaconchain.eth                          | $ 25,000.00             | 523     | 36%  | 1,046   | 71%  | 1,568   | 107% |\n| 1w3.eth                                  | $ 25,000.00             | 523     | 36%  | 1,046   | 71%  | 1,568   | 107% |\n| Firefly                                  | $ 20,000.00             | 468     | 40%  | 935     | 79%  | 1,403   | 119% |\n| EIP-7212                                 | $ 20,000.00             | 468     | 40%  | 935     | 79%  | 1,403   | 119% |\n| Urbe Campus                              | $ 19,680.00             | 464     | 40%  | 928     | 80%  | 1,392   | 120% |\n| ethdaily.eth                             | $ 14,797.60             | 402     | 46%  | 804     | 92%  | 1,207   | 139% |\n| Discord Support                          | $ 13,000.00             | 377     | 49%  | 754     | 99%  | 1,131   | 148% |\n| Dappnode                                 | $ 12,500.00             | 370     | 50%  | 739     | 101% | 1,109   | 151% |\n| generalmagic.eth                         | $ 11,563.43             | 356     | 52%  | 711     | 105% | 1,067   | 157% |\n| Immunefi                                 | $ 10,200.00             | 334     | 56%  | 668     | 111% | 1,002   | 167% |\n| Pugson                                   | $ 10,000.00             | 331     | 56%  | 661     | 112% | 992     | 169% |\n| Juicebox                                 | $ 10,000.00             | 331     | 56%  | 661     | 112% | 992     | 169% |\n| frolic.eth                               | $ 10,000.00             | 331     | 56%  | 661     | 112% | 992     | 169% |\n| ETHDenver                                | $ 10,000.00             | 331     | 56%  | 661     | 112% | 992     | 169% |\n| Drips                                    | $ 10,000.00             | 331     | 56%  | 661     | 112% | 992     | 169% |\n| Lemma                                    | $ 9,998.67              | 331     | 56%  | 661     | 112% | 992     | 169% |\n| Tally                                    | $ 8,999.54              | 314     | 59%  | 627     | 119% | 941     | 178% |\n| pairwise.eth                             | $ 8,402.18              | 303     | 61%  | 606     | 123% | 909     | 184% |\n| @navad                                   | $ 7,500.00              | 286     | 65%  | 573     | 130% | 859     | 195% |\n| apoorv.eth                               | $ 7,021.88              | 277     | 67%  | 554     | 134% | 831     | 201% |\n| leticiaferraz.eth                        | $ 6,949.32              | 276     | 67%  | 551     | 135% | 827     | 202% |\n| @Sagamore                                | $ 6,000.00              | 256     | 73%  | 512     | 145% | 768     | 218% |\n| Socket                                   | $ 5,000.00              | 234     | 79%  | 468     | 159% | 701     | 238% |\n| Latin Hackathon                          | $ 5,000.00              | 234     | 79%  | 468     | 159% | 701     | 238% |\n| eth-mexico.eth                           | $ 5,000.00              | 234     | 79%  | 468     | 159% | 701     | 238% |\n| aynieducativo.eth                        | $ 5,000.00              | 234     | 79%  | 468     | 159% | 701     | 238% |\n| @adhd                                    | $ 5,000.00              | 234     | 79%  | 468     | 159% | 701     | 238% |\n| ENS Fairy                                | $ 4,781.34              | 229     | 81%  | 457     | 163% | 686     | 244% |\n| glodollar.eth                            | $ 3,762.22              | 203     | 92%  | 406     | 183% | 608     | 275% |\n| weird3.eth                               | $ 3,000.00              | 181     | 103% | 362     | 205% | 543     | 308% |\n| Event Support                            | $ 3,000.00              | 181     | 103% | 362     | 205% | 543     | 308% |\n| daveytea.eth                             | $ 2,818.29              | 176     | 106% | 351     | 212% | 527     | 318% |\n| @solidityhaxor                           | $ 2,500.00              | 165     | 112% | 331     | 225% | 496     | 337% |\n| @haoce505                                | $ 2,500.00              | 165     | 112% | 331     | 225% | 496     | 337% |\n| @h4nt3rx                                 | $ 2,500.00              | 165     | 112% | 331     | 225% | 496     | 337% |\n| stephancill.eth                          | $ 2,367.89              | 161     | 116% | 322     | 231% | 483     | 347% |\n| Scope.sh                                 | $ 2,367.89              | 161     | 116% | 322     | 231% | 483     | 347% |\n| Kiwi News                                | $ 2,367.89              | 161     | 116% | 322     | 231% | 483     | 347% |\n| bloomnetwork.eth                         | $ 1,881.11              | 143     | 130% | 287     | 259% | 430     | 389% |\n| modularcrypto.eth                        | $ 1,818.29              | 141     | 132% | 282     | 264% | 423     | 395% |\n| aexek.eth                                | $ 1,750.00              | 138     | 134% | 277     | 269% | 415     | 403% |\n| @austinoa012                             | $ 1,000.00              | 105     | 178% | 209     | 356% | 314     | 533% |\n| illuminated.eth                          | $ 940.56                | 101     | 183% | 203     | 367% | 304     | 550% |\n| dhive.eth                                | $ 940.56                | 101     | 183% | 203     | 367% | 304     | 550% |\n| pabl0cks.eth                             | $ 877.74                | 98      | 190% | 196     | 379% | 294     | 569% |\n| iviangita.eth                            | $ 877.74                | 98      | 190% | 196     | 379% | 294     | 569% |\n| easlabs.eth                              | $ 877.74                | 98      | 190% | 196     | 379% | 294     | 569% |\n| 2118.eth                                 | $ 877.74                | 98      | 190% | 196     | 379% | 294     | 569% |\n| andrewpage.eth                           | $ 780.00                | 92      | 201% | 185     | 403% | 277     | 604% |\n| ETHGlobal Hackers (max 100 participants) | $ 500.00                | 72      | 245% | 144     | 491% | 216     | 736% |", "mimetype": "text/plain", "start_char_idx": 3628, "end_char_idx": 3906, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "95051d0b-4676-42e9-9d91-75cfaf2d0998": {"__data__": {"id_": "95051d0b-4676-42e9-9d91-75cfaf2d0998", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.2.mdx", "file_name": "5.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.2.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["commence", "selected", "providers", "streams", "initiate", "passed", "service"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0802bb1297851cdc8b6f26bf16d2dea2717fd157", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.2.mdx", "file_name": "5.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.2.mdx"}, "hash": "0719c419c7f3eced8a571cd3c9cd9896580f46bd04e7e41bc9d58288e0348cfd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7ee53831-9813-4737-aec0-d0fc0922de9d", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "2b2f14c2c7db0f7a3421869db85a6b179d61d6bb70eefe2980cf0fa20bfd208a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: 'This EP will initiate the Streams for Service Providers as selected on EP4.9'\nauthors: ['alexvansande']\nproposal:\n  tally: '63865530602418424570813160277709124551851041237648860550576561576702951975816'\n  type: 'executable'\n--- # [EP5.2] [Executable] Commence Streams for Service Providers\n\n::authors\n\n| **Status**            | Passed                                                                                                                    |\n| --------------------- | ------------------------------------------------------------------------------------------------------------------------- |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/ep5-2-executable-commence-streams-for-service-providers/18615)                      |\n| **Votes**             | [Agora](https://agora.ensdao.org/proposals/63865530602418424570813160277709124551851041237648860550576561576702951975816) |\n\nThis EP will initiate the Streams for Service Providers as selected on [EP4.9](https://docs.ens.domains/dao/proposals/4.9)", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 245, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b2867177-afc9-4b8e-8b51-2f130e6d285d": {"__data__": {"id_": "b2867177-afc9-4b8e-8b51-2f130e6d285d", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.2.mdx", "file_name": "5.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.2.mdx", "header_path": "/[EP5.2] [Executable] Commence Streams for Service Providers/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["selected", "annual", "abstract", "providers", "streams", "proposed", "budget", "following", "their", "provider", "concept", "service"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0802bb1297851cdc8b6f26bf16d2dea2717fd157", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.2.mdx", "file_name": "5.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.2.mdx"}, "hash": "0719c419c7f3eced8a571cd3c9cd9896580f46bd04e7e41bc9d58288e0348cfd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7ee53831-9813-4737-aec0-d0fc0922de9d", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.2.mdx", "file_name": "5.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.2.mdx", "header_path": "/"}, "hash": "73613b3179a57841f613e887f5fd9426b1427f8a82cbc09c7a712521af517ca8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d416f970-010d-41e2-939e-82db374dc08b", "node_type": "1", "metadata": {"header_path": "/[EP5.2] [Executable] Commence Streams for Service Providers/Abstract/"}, "hash": "a1fea2c504802fff5a3eba465072bc5ce90506b672be25e83c458492b59284a7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Abstract\n\n[EP 4.7](https://docs.ens.domains/dao/proposals/4.7) proposed the concept of Streams for service providers and set its budget at $3.6M per annum. EP4.9 selected the following Service providers and their annual budget:\n\n| Service Provider Name    | Annual Stream |\n| ------------------------ | ------------- |\n| ETH.LIMO                 | $500,000.00   |\n| NameHash Labs            | $600,000.00   |\n| Resolverworks.eth        | $700,000.00   |\n| Blockful                 | $300,000.00   |\n| Unruggable               | $400,000.00   |\n| Wildcard Labs            | $200,000.00   |\n| Ethereum Follow Protocol | $500,000.00   |\n| Namespace                | $200,000.00   |\n| UNICORN.ETH              | $200,000.00   |\n\nThe Metagov Working Group has decided this will be implemented in the following manner:\n\n1. Superfluid has been selected as the stream platform (details of which can be found on [this RFP](https://discuss.ens.domains/t/rfp-stream-platform-for-ens-service-providers/18448))\n2. A new wallet, the \"[Stream Management Pod](https://app.safe.global/settings/setup?safe=eth:0xB162Bf7A7fD64eF32b787719335d06B2780e31D1)\" has been created as a Global.Safe (Gnosis Safe) wallet. It requires 3 out of 5 signatures to execute any transaction. Its members are the 3 Metagov Stewards, the secretary and the DAO Governor contract.\n3. **This EP includes 5 Executable Transactions**, as follows:\n   1. **APPROVE** Superfluid contracts to wrap one month worth of USDC streaming (300,000 USDC);\n   2. **WRAP** one month worth of USDC streaming (300,000 USDC to USDCx);\n   3. **START A STREAM** to the Stream Management Pod of 0.114155251141552512 USDC per second [1];\n   4. **APPROVE** AutoWrap [2] contract to wrap an additional 5.1M USDC (this, added to the already wrapped 300k, should be enough to cover 18 months of the stream, after that a new EP will be required to keep the stream running);\n   5. **ENABLE AUTO-WRAP** to keep wrapping USDC to USDCx on a monthly basis (lower limit 200,000, upper limit 500,000).\n4. Meanwhile the Stewards are reaching out to all representatives of the stream providers. Alex Urbelis, the general Counsel for ENS Labs, has drafted a service provider agreement and is acquiring the services of Urbelis to run a basic KYC and Sanctions protection. All Service Providers will be required to go through this process before receiving their first stream.\n5. On February 1st Stream Management Pod will start creating individual streams to the Organizations who have completed the steps outlined in bullet #4. Because of Superfluid unique no-upfront-capital-lockup streams, it means that when all of 9 Service Providers Streams start, the Stream Management Pod will be forwarding 100% of the money it receives directly into the Service Providers. [3]", "mimetype": "text/plain", "start_char_idx": 1046, "end_char_idx": 3836, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d416f970-010d-41e2-939e-82db374dc08b": {"__data__": {"id_": "d416f970-010d-41e2-939e-82db374dc08b", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.2.mdx", "file_name": "5.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.2.mdx", "header_path": "/[EP5.2] [Executable] Commence Streams for Service Providers/Abstract/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["developed", "precision", "second", "decimal", "notes", "value", "corresponds", "current", "superusdc", "approximately", "pinged", "anyone", "years", "extra"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0802bb1297851cdc8b6f26bf16d2dea2717fd157", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.2.mdx", "file_name": "5.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.2.mdx"}, "hash": "0719c419c7f3eced8a571cd3c9cd9896580f46bd04e7e41bc9d58288e0348cfd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b2867177-afc9-4b8e-8b51-2f130e6d285d", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.2.mdx", "file_name": "5.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.2.mdx", "header_path": "/[EP5.2] [Executable] Commence Streams for Service Providers/"}, "hash": "0d55c675718d7a5c3554e0dab742c4643e06606f3709dd985c5fdcbd57169b99", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "776aab8c-52dc-4315-9523-0088c5bd11c0", "node_type": "1", "metadata": {"header_path": "/[EP5.2] [Executable] Commence Streams for Service Providers/"}, "hash": "cfe71171e0d0e1afc62fed060034321d0ae83e1eaf97de2dfe3b4fe4a26617d5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Notes\n\n[1]: USDC has a precision of 6 decimal places, but SuperUSDC has a precision of 18 decimals. The value of 0.114155251141552512 per second corresponds to approximately 9863.01 USDC per day and in 3,600,000.000000000018432 USDC per year in a non-leap year. In leap years (such as the current one) it will mean an extra $9.8K is paid in the 29th of February.\n\n[2]: [Autowrapper](https://etherscan.io/address/0x1D65c6d3AD39d454Ea8F682c49aE7744706eA96d#code) is a [series](https://etherscan.io/address/0x30aE282CF477E2eF28B14d0125aCEAd57Fe1d7a1#code) of [contracts](https://etherscan.io/address/0x1D65c6d3AD39d454Ea8F682c49aE7744706eA96d#code) developed by superfluid. When pinged (and anyone would be able to ping it), if the amount of tokens that the DAO has wrapped is below the lower limit, it will automatically wrap new tokens in order to keep the stream running. The goal is to reduce smart contract risk. If Superfluid is somehow hacked, ENS will not lose more than the upper limit set here (about 50 days worth of funds). If both Superfluid AND the autowrapper are hacked at the same time, ENS cannot lose more than the maximum USDC allowance (18 months worth of funds).\n\n[3]: Any capital that remains in the pod (due to the difference between the day this EP is executed and the day the last Service Provider stream is active) will be still considered under the DAO's ownership and will be used only as a buffer (if autowrapper fails, we will have some weeks to resolve it without interrupting payments) and to solve any logistical issues with service providers. It will NOT count towards Metagov's budget nor it will it be used to any other purpose than the service provider management.", "mimetype": "text/plain", "start_char_idx": 3838, "end_char_idx": 5541, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "776aab8c-52dc-4315-9523-0088c5bd11c0": {"__data__": {"id_": "776aab8c-52dc-4315-9523-0088c5bd11c0", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.2.mdx", "file_name": "5.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.2.mdx", "header_path": "/[EP5.2] [Executable] Commence Streams for Service Providers/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["usdcx", "calldata", "transactions", "target", "details", "decoded", "transfer", "operation", "executed", "approve", "contract", "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48", "supertoken", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0802bb1297851cdc8b6f26bf16d2dea2717fd157", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.2.mdx", "file_name": "5.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.2.mdx"}, "hash": "0719c419c7f3eced8a571cd3c9cd9896580f46bd04e7e41bc9d58288e0348cfd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d416f970-010d-41e2-939e-82db374dc08b", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.2.mdx", "file_name": "5.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.2.mdx", "header_path": "/[EP5.2] [Executable] Commence Streams for Service Providers/Abstract/"}, "hash": "251f10db0ad191fd823657a7bee1cd9c159244ac3935e9c167ffd90c6839707b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\nWe will now details the transactions to be executed on this EP:\n\n| Operation                                                    | Target                                                   | Decoded Calldata                                                                                                                                                                                                                             | Raw Calldata                                                                                                                                                                                                                                                                                                                                                                                                 |\n| ------------------------------------------------------------ | -------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| approve USDCx SuperToken contract to transfer 300k USDC      | 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48 (USDC)        | `function approve(address 0x1BA8603DA702602A8657980e825A6DAa03Dee93a, uint256 300000000000)`                                                                                                                                                 | 0x095ea7b30000000000000000000000001ba8603da702602a8657980e825a6daa03dee93a00000000000000000000000000000000000000000000000000000045d964b800                                                                                                                                                                                                                                                                   |\n| wrap 300k USDC to USDCX                                      | 0x1BA8603DA702602A8657980e825A6DAa03Dee93a (Super-USDC)  | `function upgrade(uint256 300000000000000000000000)`                                                                                                                                                                                         | 0x45977d03000000000000000000000000000000000000000000003f870857a3e0e3800000                                                                                                                                                                                                                                                                                                                                   |\n| start flow to Safe with the flowrate of 0.1141... per second | 0xcfA132E353cB4E398080B9700609bb008eceB125 (Superfluid)  | `function setFlowrate(address 0x1BA8603DA702602A8657980e825A6DAa03Dee93a, address 0xB162Bf7A7fD64eF32b787719335d06B2780e31D1, int96 114155251141552512) `                                                                                    | 0x57e6aa360000000000000000000000001ba8603da702602a8657980e825a6daa03dee93a000000000000000000000000b162bf7a7fd64ef32b787719335d06b2780e31d100000000000000000000000000000000000000000000000001958f989989a980                                                                                                                                                                                                   |\n| approve auto-wrap for 5.1M                                   | 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48 (USDC)        | `function approve(address 0x1D65c6d3AD39d454Ea8F682c49aE7744706eA96d, uint256 5100000000000`                                                                                                                                                 | `0x095ea7b30000000000000000000000001d65c6d3ad39d454ea8f682c49ae7744706ea96d000000000000000000000000000000000000000000000000000004a36fb03800`                                                                                                                                                                                                                                                                 |\n| create auto-wrap schedule                                    | 0x30aE282CF477E2eF28B14d0125aCEAd57Fe1d7a1 (Autowrapper) | `function createWrapSchedule (address 0x1BA8603DA702602A8657980e825A6DAa03Dee93a, address 0x1D65c6d3AD39d454Ea8F682c49aE7744706eA96d, address 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48, uint64 3000000000, uint64 1814400, uint64 4320000` | `0x5626f9e60000000000000000000000001ba8603da702602a8657980e825a6daa03dee93a0000000000000000000000001d65c6d3ad39d454ea8f682c49ae7744706ea96d000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4800000000000000000000000000000000000000000000000000000000b2d05e0000000000000000000000000000000000000000000000000000000000001baf80000000000000000000000000000000000000000000000000000000000041eb00` |\n\nAll contracts have verifiable code. You can use tools such as the [Calldata decoder](https://tools.deth.net/calldata-decoder) to verify the correctness of the calldata and etherscan to look deeper into them. You can also _simulate the transactions yourself_ using [this repo](https://github.com/d10r/ens-streams).\n\nThe terms for the createWrapSchedule are the address of the superToken (super-usdc), the address of the Strategy contract, the address of the base token (USDC), the expiry (set to the far future), lowerLimit and upperLimit. These last two are set in seconds and mean that if, when the autowrapper is pinged, the stream has less than 21 days in it's runway, then it will automatically wrap 50 days worth of funds.", "mimetype": "text/plain", "start_char_idx": 5543, "end_char_idx": 11688, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c491bc79-0e71-4f9f-9866-feefeb8612a7": {"__data__": {"id_": "c491bc79-0e71-4f9f-9866-feefeb8612a7", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.20.mdx", "file_name": "5.20.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.20.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.20.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["community", "introduces", "feedback", "clarify", "endowment", "investment", "performance", "statement", "proposal", "policy", "adjustments", "include", "conservative", "based"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "84a89a83d8d38f5c7ed4eb732e5e184dd6ec8624", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.20.mdx", "file_name": "5.20.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.20.mdx"}, "hash": "a817a03506f994520e1bee51d0d6757b86229868ad3d5935cd7d933e8c245e8c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fc0c73a1-4270-4afe-86c6-c493bd8e687a", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "3c48048905f138263cf2e877a04efd068ad2ea6fb38b601c00155cb0864421c4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: 'This proposal introduces an Investment Policy Statement (IPS) for the ENS Endowment to clarify investment principles, roles, and performance standards, with adjustments based on community feedback to include a more conservative asset allocation and regular income transfers for sustainable growth.'\nauthors: ['governance.karpatkey.eth']\nproposal:\n  snapshot: '0x085a1e40c264ffd44567b6dce889f5943e72cfa8442eaeb81819261a38f0bd0a'\n  discourse: 'https://discuss.ens.domains/t/temp-check-proposal-for-introduction-of-ens-investment-policy-statement/19568'\n  type: 'social'\n---", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 589, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fc0c73a1-4270-4afe-86c6-c493bd8e687a": {"__data__": {"id_": "fc0c73a1-4270-4afe-86c6-c493bd8e687a", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.20.mdx", "file_name": "5.20.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.20.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.20.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["endowment", "investment", "statement", "policy", "passed"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "84a89a83d8d38f5c7ed4eb732e5e184dd6ec8624", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.20.mdx", "file_name": "5.20.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.20.mdx"}, "hash": "a817a03506f994520e1bee51d0d6757b86229868ad3d5935cd7d933e8c245e8c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c491bc79-0e71-4f9f-9866-feefeb8612a7", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.20.mdx", "file_name": "5.20.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.20.mdx", "header_path": "/"}, "hash": "22fccdb71a2ec5496a166d0eb62b2e13f55adb1aea12845c79f6da1debc01e4e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "39009882-824c-469e-aa8e-604f054f6e91", "node_type": "1", "metadata": {"header_path": "/[EP 5.20] [Social] ENS Endowment Investment Policy Statement/"}, "hash": "c5ff89337af0830a43d5c9a060047e6d2671635d11d6929bd67a82b5cfa1ef2c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# [EP 5.20] [Social] ENS Endowment Investment Policy Statement\n\n::authors\n\n| **Status**            | Passed                                                                                                                   |\n| --------------------- | ------------------------------------------------------------------------------------------------------------------------ |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/temp-check-proposal-for-introduction-of-ens-investment-policy-statement/19568)     |\n| **Votes**             | [Snapshot](https://snapshot.box/#/s:ens.eth/proposal/0x085a1e40c264ffd44567b6dce889f5943e72cfa8442eaeb81819261a38f0bd0a) |", "mimetype": "text/plain", "start_char_idx": 591, "end_char_idx": 1261, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "39009882-824c-469e-aa8e-604f054f6e91": {"__data__": {"id_": "39009882-824c-469e-aa8e-604f054f6e91", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.20.mdx", "file_name": "5.20.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.20.mdx", "header_path": "/[EP 5.20] [Social] ENS Endowment Investment Policy Statement/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.20.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["implementing", "guidelines", "management", "introducing", "abstract", "investment", "effective", "proposal", "policy", "statement", "principles", "outlines", "suggests"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "84a89a83d8d38f5c7ed4eb732e5e184dd6ec8624", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.20.mdx", "file_name": "5.20.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.20.mdx"}, "hash": "a817a03506f994520e1bee51d0d6757b86229868ad3d5935cd7d933e8c245e8c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fc0c73a1-4270-4afe-86c6-c493bd8e687a", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.20.mdx", "file_name": "5.20.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.20.mdx", "header_path": "/"}, "hash": "47d62629726778baf2bc93ea929d7a4619eb4a9d92591a9e90f972131bc6329d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9e6b28d3-03c8-4893-b798-49dd0b4925b2", "node_type": "1", "metadata": {"header_path": "/[EP 5.20] [Social] ENS Endowment Investment Policy Statement/"}, "hash": "275f7e6d62c4264eb4d63c767acfbf59b5cdb8cda04258d0d57578cf06d2803e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Abstract\n\nThis proposal suggests introducing and implementing an [Investment Policy Statement (IPS)](https://drive.google.com/file/d/1NtaKb-9HJf9wJmVOq4sQbhsYQ4yZtTF2) for the ENS Endowment.\n\nThe Investment Policy Statement (\u201cIPS\u201d) outlines the principles and guidelines for the effective management of the ENS Endowment Fund (the \u201cEndowment\u201d). And provides additional clarity to the Endowment Manager in their duties of achieving the mandate of the ENS Endowment established in [EP 2.2.4](https://discuss.ens.domains/t/ep2-2-4-social-rfp-ens-endowment/14069).", "mimetype": "text/plain", "start_char_idx": 1263, "end_char_idx": 1826, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9e6b28d3-03c8-4893-b798-49dd0b4925b2": {"__data__": {"id_": "9e6b28d3-03c8-4893-b798-49dd0b4925b2", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.20.mdx", "file_name": "5.20.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.20.mdx", "header_path": "/[EP 5.20] [Social] ENS Endowment Investment Policy Statement/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.20.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["responsibilities", "clear", "objectives", "creation", "define", "parties", "establish", "involved", "investment", "goals", "following", "implementation", "serve", "assign", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "84a89a83d8d38f5c7ed4eb732e5e184dd6ec8624", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.20.mdx", "file_name": "5.20.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.20.mdx"}, "hash": "a817a03506f994520e1bee51d0d6757b86229868ad3d5935cd7d933e8c245e8c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "39009882-824c-469e-aa8e-604f054f6e91", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.20.mdx", "file_name": "5.20.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.20.mdx", "header_path": "/[EP 5.20] [Social] ENS Endowment Investment Policy Statement/"}, "hash": "79892046e485cba0db973c4efd621875ef6c7f06121526824bb6cbc1864b3361", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d9c0092c-6a0f-45bd-9b8c-5125fd1cd3b4", "node_type": "1", "metadata": {"header_path": "/[EP 5.20] [Social] ENS Endowment Investment Policy Statement/Specification/"}, "hash": "bc83500195b096fc383299a77201d6b1ed68e80ea0815b46c2b1fb6b22a008df", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\nThe creation and implementation of the [IPS](https://drive.google.com/file/d/1NtaKb-9HJf9wJmVOq4sQbhsYQ4yZtTF2), will serve the following purposes:\n\n1. Define and assign the responsibilities of all parties involved in the Endowment.\n2. Establish clear investment goals and objectives for the Endowment assets.\n3. Offer guidance and limitations to the Endowment Manager regarding the investment of the Endowment assets.\n4. Establish a basis for evaluating the performance of the Endowment Manager.\n5. Express the prudent standards that are expected in the management of the Endowment assets.\n\nThe proposed ENS Investment Policy Statement to be ratified can be read: [here](https://drive.google.com/file/d/1NtaKb-9HJf9wJmVOq4sQbhsYQ4yZtTF2).\n\nAs specified in the IPS, this document will be continually reviewed annually.", "mimetype": "text/plain", "start_char_idx": 1828, "end_char_idx": 2664, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d9c0092c-6a0f-45bd-9b8c-5125fd1cd3b4": {"__data__": {"id_": "d9c0092c-6a0f-45bd-9b8c-5125fd1cd3b4", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.20.mdx", "file_name": "5.20.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.20.mdx", "header_path": "/[EP 5.20] [Social] ENS Endowment Investment Policy Statement/Specification/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.20.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["check", "feedback", "community", "those", "metagov", "updates", "draft", "provided", "following", "posted", "weekly", "based", "changes"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "84a89a83d8d38f5c7ed4eb732e5e184dd6ec8624", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.20.mdx", "file_name": "5.20.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.20.mdx"}, "hash": "a817a03506f994520e1bee51d0d6757b86229868ad3d5935cd7d933e8c245e8c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9e6b28d3-03c8-4893-b798-49dd0b4925b2", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.20.mdx", "file_name": "5.20.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.20.mdx", "header_path": "/[EP 5.20] [Social] ENS Endowment Investment Policy Statement/"}, "hash": "dd1a45ce73ca6fedba59e6c845566604e61a65ab2be5d56a5e27b99503ef8de2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6e754841-06f9-4772-9659-390dc6102a52", "node_type": "1", "metadata": {"header_path": "/[EP 5.20] [Social] ENS Endowment Investment Policy Statement/"}, "hash": "e92d7c26a551fc36af796b1589cb883b1bd7de34c4300b8763580ca50d9cf25f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Updates from Feedback\n\nFollowing discussions, the community provided feedback on the draft IPS posted in the [September temp check post](https://discuss.ens.domains/t/temp-check-proposal-for-introduction-of-ens-investment-policy-statement/19568) and the weekly MetaGov calls.\n\nBased on those discussions, the following changes have been incorporated into the final version of the IPS:\n\n- **More conservative asset allocation:** Increase stablecoin allocation in the Endowment to 40% (up from 20%).\n- **Regular transfers:** Introduce regular monthly transfers of income from the Controller to the Endowment to support continuous growth and reduce future funding requests.", "mimetype": "text/plain", "start_char_idx": 2666, "end_char_idx": 3340, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6e754841-06f9-4772-9659-390dc6102a52": {"__data__": {"id_": "6e754841-06f9-4772-9659-390dc6102a52", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.20.mdx", "file_name": "5.20.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.20.mdx", "header_path": "/[EP 5.20] [Social] ENS Endowment Investment Policy Statement/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.20.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["supply", "social", "success", "quorum", "criteria", "voting", "million", "proposal", "receive", "following", "requirements", "total", "minimum"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "84a89a83d8d38f5c7ed4eb732e5e184dd6ec8624", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.20.mdx", "file_name": "5.20.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.20.mdx"}, "hash": "a817a03506f994520e1bee51d0d6757b86229868ad3d5935cd7d933e8c245e8c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d9c0092c-6a0f-45bd-9b8c-5125fd1cd3b4", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.20.mdx", "file_name": "5.20.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.20.mdx", "header_path": "/[EP 5.20] [Social] ENS Endowment Investment Policy Statement/Specification/"}, "hash": "c722fdb898d821e0b1dcf9e86c8a731a16489b487ae49c8b5b0737ac0950efff", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Proposal Success Criteria\n\nFor this social proposal to pass, the following quorum and voting requirements must be met:\n\n- **Quorum:** The proposal must receive a minimum of 1% of the total supply of $ENS (1 million votes) in the form of \"For\" and \"Abstain\" votes combined. \"Against\" votes do not count towards quorum.\n\n- **Approval:** Once the quorum is reached, the proposal requires a simple majority (>50%) of \"For\" votes among the \"For\" and \"Against\" votes to pass. \"Abstain\" votes do not count towards the approval calculation.\n\nIf approved, the ENS DAO should adopt the final Investment Policy Statement prepared by karpatkey for the ENS Endowment established under [EP 2.2.4](https://discuss.ens.domains/t/ep2-2-4-social-rfp-ens-endowment/14069). If not approved, karpatkey will reassess and propose an alternative structure based on the feedback received.", "mimetype": "text/plain", "start_char_idx": 3342, "end_char_idx": 4208, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e2172ede-991f-4f5d-9f2d-c43055021053": {"__data__": {"id_": "e2172ede-991f-4f5d-9f2d-c43055021053", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.21.mdx", "file_name": "5.21.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.21.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.21.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["identifying", "tokens", "critical", "blockful", "efforts", "compensate", "proposal", "vulnerability", "which", "seeks", "their", "mitigating", "extensive", "vested", "governance"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b6f599b6f25d49cd1ede8e3815664bd8fd80f056", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.21.mdx", "file_name": "5.21.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.21.mdx"}, "hash": "867ad9b6c849a94102102e702d906b3bc28866b033797cfef5195c23ebb5cab0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "24cad3a2-7e66-46ef-896b-3cdee5382c5f", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "44b8eaa0ce41d68c015774d20376b0cb6046b59b578bd44b3e723b0de60d894f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: This proposal seeks to compensate the blockful team with 100k USDC and 15k vested ENS tokens for their extensive efforts in identifying and mitigating a critical vulnerability in ENS DAO's governance structure, which included developing the Security Council and enhancing long-term DAO security.\nauthors: ['netto.eth']\nproposal:\n  snapshot: '0x5067725bef9cde0de0024adedb653a7a1752aefa726adf628b77048d85821a6d'\n  discourse: 'https://discuss.ens.domains/t/temp-check-governance-security-compensating-blockful-for-preventing-a-potential-attack-on-the-ens-dao/19710'\n  type: 'social'\n---", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 600, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "24cad3a2-7e66-46ef-896b-3cdee5382c5f": {"__data__": {"id_": "24cad3a2-7e66-46ef-896b-3cdee5382c5f", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.21.mdx", "file_name": "5.21.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.21.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.21.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["security", "passed", "governance", "bounty"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b6f599b6f25d49cd1ede8e3815664bd8fd80f056", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.21.mdx", "file_name": "5.21.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.21.mdx"}, "hash": "867ad9b6c849a94102102e702d906b3bc28866b033797cfef5195c23ebb5cab0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e2172ede-991f-4f5d-9f2d-c43055021053", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.21.mdx", "file_name": "5.21.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.21.mdx", "header_path": "/"}, "hash": "c5697301e93bf5faad3e062630976bc3f132f234f4accad48fe41f243bb6a94f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3b626fd6-5efb-47e5-aad1-902774e8ff11", "node_type": "1", "metadata": {"header_path": "/[EP 5.21] [Social] Governance Security Bounty/"}, "hash": "21ba6ae1a1ab658bba9539fd160da6594175193bcfd8ccf17f794108b5a5b076", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# [EP 5.21] [Social] Governance Security Bounty\n\n::authors\n\n| **Status**            | Passed                                                                                                                                             |\n| --------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------- |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/temp-check-governance-security-compensating-blockful-for-preventing-a-potential-attack-on-the-ens-dao/19710) |\n| **Votes**             | [Snapshot](https://snapshot.box/#/s:ens.eth/proposal/0x5067725bef9cde0de0024adedb653a7a1752aefa726adf628b77048d85821a6d)                           |", "mimetype": "text/plain", "start_char_idx": 602, "end_char_idx": 1361, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3b626fd6-5efb-47e5-aad1-902774e8ff11": {"__data__": {"id_": "3b626fd6-5efb-47e5-aad1-902774e8ff11", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.21.mdx", "file_name": "5.21.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.21.mdx", "header_path": "/[EP 5.21] [Social] Governance Security Bounty/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.21.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["critical", "blockful", "compensate", "reporting", "proposal", "vulnerability", "march", "uncovered", "background", "severe", "their", "mitigating", "summary", "governance"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b6f599b6f25d49cd1ede8e3815664bd8fd80f056", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.21.mdx", "file_name": "5.21.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.21.mdx"}, "hash": "867ad9b6c849a94102102e702d906b3bc28866b033797cfef5195c23ebb5cab0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "24cad3a2-7e66-46ef-896b-3cdee5382c5f", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.21.mdx", "file_name": "5.21.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.21.mdx", "header_path": "/"}, "hash": "98f3f93360d7666f4a300ea76ed75533ab762798331e86eb868235d48f9f8467", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9c1a60a3-070b-48f2-8eae-443eafaf1c5a", "node_type": "1", "metadata": {"header_path": "/[EP 5.21] [Social] Governance Security Bounty/"}, "hash": "a73bb8fb4673a6e1da1ad73954220f2b66cb20a62a815c9da5a29c336b28a4f6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Summary\n\nThis proposal aims to compensate the blockful team for their work in identifying, analyzing, reporting and mitigating a severe vulnerability in ENS DAO's governance structure. ## Background\n\nIn March 2024, blockful uncovered a critical vulnerability that could have led to a [~$150M](https://dune.com/steakhouse/ens-steakhouse) theft and protocol capture. Their subsequent work led to the implementation of the Security Council, significantly enhancing ENS DAO's resilience against attacks.", "mimetype": "text/plain", "start_char_idx": 1363, "end_char_idx": 1550, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c0517d39-3b46-4072-b519-24e0331fd2d9": {"__data__": {"id_": "c0517d39-3b46-4072-b519-24e0331fd2d9", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.21.mdx", "file_name": "5.21.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.21.mdx", "header_path": "/[EP 5.21] [Social] Governance Security Bounty/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.21.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["developed", "service", "different", "scope", "involved", "details", "smart", "working", "summing", "contribution", "squad", "contract", "worked", "engineer", "auditors"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b6f599b6f25d49cd1ede8e3815664bd8fd80f056", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.21.mdx", "file_name": "5.21.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.21.mdx"}, "hash": "867ad9b6c849a94102102e702d906b3bc28866b033797cfef5195c23ebb5cab0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9c1a60a3-070b-48f2-8eae-443eafaf1c5a", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.21.mdx", "file_name": "5.21.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.21.mdx", "header_path": "/[EP 5.21] [Social] Governance Security Bounty/"}, "hash": "f03df01b45241ebe79dae698d050d45c721e4f1f88ee7f554c6ae16e86e2a494", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ce1ce580-b026-4732-a403-a93bdac575db", "node_type": "1", "metadata": {"header_path": "/[EP 5.21] [Social] Governance Security Bounty/"}, "hash": "76aa9e8f4b64d8e59120bb6373c0635eb68340de5be3326ab8df753867442bf4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Contribution Details\n\nThe team involved is a [different](https://discuss.ens.domains/t/blockful-service-provider-reports/19553#p-54163-other-contributions-not-related-to-service-provider-scope-14) squad than the one working on the scope of the [ENS service provider](https://discuss.ens.domains/t/blockful-service-provider-reports/19553). It was developed by 2 researchers, 1 smart contract engineer and 4 different auditors the team has worked with previously. Summing up to ~600 hours, the scope includes:\n\n- Comprehensive vulnerability assessment and risk analysis: **[Here](https://mirror.xyz/research.blockful.eth/-PfMduhpxdypPrutofr6099T4ROpsAmX0fPNbvDgR_k)** is our detailed security report.\n- Data analysis of ENS governance metrics and study of past DAO attacker's behaviors.\n- Design, development and deployment of the Security Council contract and multisig.\n- The Security Council was thought with several key features to balance security and decentralization.\n- Smart contract implementation and testing ([GitHub](https://github.com/blockful-io/security-council-ens))\n- Governance proposal drafting and support [[1](https://snapshot.org/#/ens.eth/proposal/0xf3a4673fe04a3ecfed4a2f066f6ced1539a5466d61630428333360b843653c54), [2](https://snapshot.org/#/ens.eth/proposal/0xa0b1bfadf6853b5b0d59d3c4d73c434fc6389339887d05de805361372eb17c3a), [3](https://www.tally.xyz/gov/ens/proposal/42329103797433777309488042029679811802172320979541414683300183273376839219133)]\n\nMore details can be found on the links above for past proposals and the [report](https://mirror.xyz/research.blockful.eth/-PfMduhpxdypPrutofr6099T4ROpsAmX0fPNbvDgR_k).", "mimetype": "text/plain", "start_char_idx": 1868, "end_char_idx": 3512, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ce1ce580-b026-4732-a403-a93bdac575db": {"__data__": {"id_": "ce1ce580-b026-4732-a403-a93bdac575db", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.21.mdx", "file_name": "5.21.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.21.mdx", "header_path": "/[EP 5.21] [Social] Governance Security Bounty/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.21.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["amount", "invested", "bootstrapped", "totally", "received", "rationale", "support", "represents", "never", "sustainable", "requested", "compensation", "towards", "resources"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b6f599b6f25d49cd1ede8e3815664bd8fd80f056", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.21.mdx", "file_name": "5.21.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.21.mdx"}, "hash": "867ad9b6c849a94102102e702d906b3bc28866b033797cfef5195c23ebb5cab0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c0517d39-3b46-4072-b519-24e0331fd2d9", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.21.mdx", "file_name": "5.21.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.21.mdx", "header_path": "/[EP 5.21] [Social] Governance Security Bounty/"}, "hash": "56be9d13bc1131b2d1d747728ce52654ad89daae8cecbddf84d1619ae0a3babd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f56d0410-96c6-4c17-8937-8b2d62c4a061", "node_type": "1", "metadata": {"header_path": "/[EP 5.21] [Social] Governance Security Bounty/"}, "hash": "499b68b2c8cc572e15fa110eb1df0a042ce875ec9e7beb66128769e92d4c94c1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Compensation Rationale\n\nAs a team that is totally bootstrapped and never received any investment, this support us to keep it sustainable with the resources invested towards this initiative. The requested amount represents fair compensation for:\n\n- The potential loss prevention of ~$150M, capture of the DAO and protocol. The attack is anything but theoretical and there are actually many groups of investors who specialize in \"risk free value raiders\". They have exerted the attack on other DAOs before. Currently there are [unknown whales](https://etherscan.io/address/0x245445940b317e509002eb682e03f4429184059d#tokentxns) buying ENS for +450 days and have ~2M ENS, showing how feasible the scenario is, more than the average quorum, in one wallet.\n- A critical code bug bounty in [ENS is $250k USDC](https://immunefi.com/bug-bounty/ens/scope/#assets). Our work was much beyond identifying and disclosing.\n- Significantly lower cost compared to standard rates charged by other security service providers in the DAO space, which typically demand liquid compensation. An example is that Open Zeppelin (one of the most reputable players in security) [charges $4M/year at Compound](https://compound.finance/governance/proposals/76), which recently [suffered](https://mirror.xyz/research.blockful.eth/v0GEP49oXP1gzMDlyP91-S4XIa8PIOd0vKq-6R8f54I) this type of attack.\n- Months of dedicated work by the team involved (researchers, devs and auditors).\n- The long-term value added to ENS through enhanced security.\n- Our commitment to ENS's long-term success and continued contribution, as evidenced by the 2-year vesting schedule.", "mimetype": "text/plain", "start_char_idx": 3514, "end_char_idx": 5141, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f56d0410-96c6-4c17-8937-8b2d62c4a061": {"__data__": {"id_": "f56d0410-96c6-4c17-8937-8b2d62c4a061", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.21.mdx", "file_name": "5.21.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.21.mdx", "header_path": "/[EP 5.21] [Social] Governance Security Bounty/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.21.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["structure", "linear", "start", "tokens", "research", "april", "vesting", "total", "compensation", "years", "vested", "initial"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b6f599b6f25d49cd1ede8e3815664bd8fd80f056", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.21.mdx", "file_name": "5.21.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.21.mdx"}, "hash": "867ad9b6c849a94102102e702d906b3bc28866b033797cfef5195c23ebb5cab0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ce1ce580-b026-4732-a403-a93bdac575db", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.21.mdx", "file_name": "5.21.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.21.mdx", "header_path": "/[EP 5.21] [Social] Governance Security Bounty/"}, "hash": "f4b8c904c8dce46bfb82bb451ba1466510bf9db6397ae7a4278ab7640f699a0f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "609094bc-b782-4dd5-89f3-7eebd66047ee", "node_type": "1", "metadata": {"header_path": "/[EP 5.21] [Social] Governance Security Bounty/"}, "hash": "5df3d2fcfacf8f44db52b74a70b0a09710ea4ec3a9ef2ce51d8cf1e2fb4d614d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Compensation Structure\n\n- Total amount: 100k USDC + 15k vested ENS tokens\n- Vesting period: 2 years\n- Vesting start date: April 8, 2024 (date of initial research disclosure)\n- Vesting schedule: Linear vesting ## Benefits to ENS DAO\n\n- Sets a positive precedent that **responsible vulnerability disclosure and correction are rewarded**, encouraging future security contributions\n- Preserves DAO treasury liquidity by using part of the bounty in ENS tokens instead of USDC or ETH\n- Enhances governance security by increasing the number of engaged, security-focused token holders", "mimetype": "text/plain", "start_char_idx": 5143, "end_char_idx": 5354, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ef1bfa0e-b7c0-4e1e-b137-2a2cef23db66": {"__data__": {"id_": "ef1bfa0e-b7c0-4e1e-b137-2a2cef23db66", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.21.mdx", "file_name": "5.21.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.21.mdx", "header_path": "/[EP 5.21] [Social] Governance Security Bounty/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.21.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["structure", "proactive", "acknowledges", "research", "critical", "security", "approving", "ongoing", "governance", "importance", "vesting", "commitment", "ensures", "conclusion", "aligns"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b6f599b6f25d49cd1ede8e3815664bd8fd80f056", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.21.mdx", "file_name": "5.21.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.21.mdx"}, "hash": "867ad9b6c849a94102102e702d906b3bc28866b033797cfef5195c23ebb5cab0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "609094bc-b782-4dd5-89f3-7eebd66047ee", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.21.mdx", "file_name": "5.21.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.21.mdx", "header_path": "/[EP 5.21] [Social] Governance Security Bounty/"}, "hash": "5bbe5e522d9adde7c543debb23a4a2f054fce44466f7c3293e39fe03bad91188", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "83d5f9a6-75e6-4473-b731-eaafa52a5783", "node_type": "1", "metadata": {"header_path": "/[EP 5.21] [Social] Governance Security Bounty/"}, "hash": "323f86abab43ccd5c66dcff7a26f18058a64abffd586343d5c2ff2aa83d1cc1e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Conclusion\n\nBy approving this compensation, ENS DAO acknowledges the critical importance of security research and proactive governance improvements. The vesting structure ensures ongoing commitment and aligns incentives for continued contribution to ENS's security and stability. ## Success Criteria\n\nFor this social proposal to pass, the following quorum and voting requirements must be met:\n\nQuorum: The proposal must receive a minimum of 1% of the total supply of $ENS (1 million votes) in the form of \"For\" and \"Abstain\" votes combined. \"Against\" votes do not count towards quorum.\n\nApproval: Once the quorum is reached, the proposal requires a simple majority (>50%) of \"For\" votes among the \"For\" and \"Against\" votes to pass. \"Abstain\" votes do not count towards the approval calculation.", "mimetype": "text/plain", "start_char_idx": 5725, "end_char_idx": 6007, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8c0f106d-59d5-4854-84b3-ea4eae74ebd8": {"__data__": {"id_": "8c0f106d-59d5-4854-84b3-ea4eae74ebd8", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.22.mdx", "file_name": "5.22.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.22.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.22.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["stream", "development", "implement", "budget", "proposal", "audit", "passed", "seeks", "funding", "maintain", "revised", "ensv2"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6fed7e26ab86a49d22e52042ff6f1c68560365a2", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.22.mdx", "file_name": "5.22.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.22.mdx"}, "hash": "7b21ba2d35f1b1fe91febb0a8434a4ebbd739cc8c7d30f20f44af38e7fb5b614", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "29ffe69f-d808-4517-9022-a5cec3550d56", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "ae5caddf5bed065d2f430ba2ff21208877cabf639123707d0283f1643f449761", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: 'This proposal seeks to implement the revised budget stream to ENS Labs to develop, maintain and audit ENSv2.'\nauthors: ['katherine.eth']\nproposal:\n  tally: '33504840096777976512510989921427323867039135570342563123194157971712476988820'\n  type: 'executable'\n--- # [EP 5.22] [Executable] ENSv2 Development Funding\n\n::authors\n\n| **Status**            | Passed                                                                                                                    |\n| --------------------- | ------------------------------------------------------------------------------------------------------------------------- |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/ep-5-22-ensv2-development-funding-request/19762)                                    |\n| **Votes**             | [Agora](https://agora.ensdao.org/proposals/33504840096777976512510989921427323867039135570342563123194157971712476988820) |", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 278, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "009e32cd-3f5d-4104-86db-d824e724e7f2": {"__data__": {"id_": "009e32cd-3f5d-4104-86db-d824e724e7f2", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.22.mdx", "file_name": "5.22.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.22.mdx", "header_path": "/[EP 5.22] [Executable] ENSv2 Development Funding/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.22.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["stream", "development", "implement", "budget", "proposal", "audit", "background", "executable", "revised", "summary", "maintain", "seeks", "previously", "detailed"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6fed7e26ab86a49d22e52042ff6f1c68560365a2", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.22.mdx", "file_name": "5.22.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.22.mdx"}, "hash": "7b21ba2d35f1b1fe91febb0a8434a4ebbd739cc8c7d30f20f44af38e7fb5b614", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "29ffe69f-d808-4517-9022-a5cec3550d56", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.22.mdx", "file_name": "5.22.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.22.mdx", "header_path": "/"}, "hash": "b9c1a0f3b403a10a35698c92ff72cd36e14231b8c3ab027f0c149844df003113", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d93333e7-e420-47b9-a68b-22e831178374", "node_type": "1", "metadata": {"header_path": "/[EP 5.22] [Executable] ENSv2 Development Funding/"}, "hash": "b8f7c62b57571cfa8b3fd1d603575cd6335df0411b30b80bced2199b50b48d98", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Summary\n\nThis executable proposal seeks to implement the revised budget stream to ENS Labs develop, maintain and audit [ENSv2](https://discuss.ens.domains/t/ens-labs-development-proposal-ensv2-and-native-l2-support/19232). The motivation, justification, budget breakdown, and development plan was previously detailed in a [Temp Check](https://discuss.ens.domains/t/temp-check-ensv2-development-funding-request/19762) request. ## Background\n\nWith over 3 million .eth names and 20 million more ENS names registered by the likes of Coinbase, Uniswap, and Linea \u2013 ENS has become the standard for web3 identity. As Ethereum's roadmap evolves towards being rollup-centric, it's essential for ENS to adapt in parallel, ensuring it meets the needs of both the Ethereum ecosystem and its users.\n\nTo continue scaling and evolving ENS, ENS Labs is requesting an increase in its annual budget from $4.2M USDC to $9.7M USDC, and a one-time grant for future security audits of ENSv2. This revised funding is necessary for ENS Labs to develop, maintain, and audit ENSv2, a major upgrade that will enhance decentralization, flexibility, and scalability by leveraging Layer 2 solutions and redesigning the ENS protocol from the ground up.", "mimetype": "text/plain", "start_char_idx": 944, "end_char_idx": 1372, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "dada718e-366c-408f-82c5-21458ee4aa71": {"__data__": {"id_": "dada718e-366c-408f-82c5-21458ee4aa71", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.22.mdx", "file_name": "5.22.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.22.mdx", "header_path": "/[EP 5.22] [Executable] ENSv2 Development Funding/Background/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.22.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["stream", "development", "daily", "treasury", "initiate", "transparency", "proposal", "native", "funding", "executable", "links", "ensv2", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6fed7e26ab86a49d22e52042ff6f1c68560365a2", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.22.mdx", "file_name": "5.22.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.22.mdx"}, "hash": "7b21ba2d35f1b1fe91febb0a8434a4ebbd739cc8c7d30f20f44af38e7fb5b614", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d93333e7-e420-47b9-a68b-22e831178374", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.22.mdx", "file_name": "5.22.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.22.mdx", "header_path": "/[EP 5.22] [Executable] ENSv2 Development Funding/"}, "hash": "6ab6385402501d17880ee8261dabfbd4a6361fbd92e37451ac83d3bf16c07942", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ae8d3706-f94c-486e-8aed-371fdd065e58", "node_type": "1", "metadata": {"header_path": "/[EP 5.22] [Executable] ENSv2 Development Funding/"}, "hash": "d0bb71ab0e1ea67df05c2c49131ee0d9131b660ba8bcc1b6c0a65674fdde149e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Links\n\n- [\\[Temp Check\\] ENSv2 Development Funding Request](https://discuss.ens.domains/t/temp-check-ensv2-development-funding-request/19762)\n- [ENS Labs development proposal: ENSv2 and native L2 support](https://discuss.ens.domains/t/ens-labs-development-proposal-ensv2-and-native-l2-support/19232)\n- [ENS Labs Transparency Reports](https://discuss.ens.domains/t/ens-labs-transparency-reports/19806) ## Specification\n\nThis executable proposal will initiate a new daily stream of 15,075.33 USDC from the ENS DAO treasury to ENS Labs, starting on January 1, 2025\\. This will run in addition to the existing streaming contract of 11,500 USDC/day at 0xB1377e4f32e6746444970823D5506F98f5A04201, for a total of 26,575.34 USDC/day ($9.7M USDC/year).", "mimetype": "text/plain", "start_char_idx": 2171, "end_char_idx": 2575, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f6c7f086-3905-4dc8-bd35-030fd6cbbc8a": {"__data__": {"id_": "f6c7f086-3905-4dc8-bd35-030fd6cbbc8a", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.23.mdx", "file_name": "5.23.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.23.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.23.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["security", "blockful", "compensate", "proposal", "reporting", "vulnerability", "bounty", "passed", "severe", "their", "mitigating", "governance"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "00d31569675c9cf4b712578145bdbdc13e6eb94e", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.23.mdx", "file_name": "5.23.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.23.mdx"}, "hash": "91c5456b6adcf7b8e594dc05b6d5fbb42a92b2cd0c3151bb3cba0647784af775", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "eedbdb78-5609-4d78-9c07-99b302df347f", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "be9d858954bcbfb7d3f74a0bfe4c22b7630771f6ce7557db91d4b1685017925b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: \"This proposal aims to compensate the blockful team for their work in identifying, analyzing, reporting and mitigating a severe vulnerability in ENS DAO's governance structure.\"\nauthors: ['netto.eth']\nproposal:\n  tally: '46071186312489687574960948336391811341595411932836110873328798657006776570015'\n  type: 'executable'\n--- # [EP 5.23] [Executable] blockful's governance security bounty\n\n::authors\n\n| **Status**            | Passed                                                                                                                    |\n| --------------------- | ------------------------------------------------------------------------------------------------------------------------- |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/ep-5-23-executable-governance-security-bounty/19803)                                |\n| **Votes**             | [Agora](https://agora.ensdao.org/proposals/46071186312489687574960948336391811341595411932836110873328798657006776570015) |", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 341, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1cd8ec29-4a37-4062-ad11-48e3b564f2f1": {"__data__": {"id_": "1cd8ec29-4a37-4062-ad11-48e3b564f2f1", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.23.mdx", "file_name": "5.23.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.23.mdx", "header_path": "/[EP 5.23] [Executable] blockful's governance security bounty/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.23.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["critical", "blockful", "compensate", "reporting", "proposal", "vulnerability", "march", "uncovered", "background", "severe", "their", "mitigating", "summary", "governance"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "00d31569675c9cf4b712578145bdbdc13e6eb94e", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.23.mdx", "file_name": "5.23.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.23.mdx"}, "hash": "91c5456b6adcf7b8e594dc05b6d5fbb42a92b2cd0c3151bb3cba0647784af775", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "eedbdb78-5609-4d78-9c07-99b302df347f", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.23.mdx", "file_name": "5.23.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.23.mdx", "header_path": "/"}, "hash": "dbe10d3b8144d0813710e838caf554919307cdda1b1fabafdc89074c42e28e3d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "509b4bf2-579c-4894-ad7a-d027a984f16d", "node_type": "1", "metadata": {"header_path": "/[EP 5.23] [Executable] blockful's governance security bounty/"}, "hash": "d9155b044350e76cb2c2cd858c8a78a476074cb98f81edabef4af8b0cfbd464d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Summary\n\nThis proposal aims to compensate the blockful team for their work in identifying, analyzing, reporting and mitigating a severe vulnerability in ENS DAO's governance structure. ## Background\n\nIn March 2024, blockful uncovered a critical vulnerability that could have led to a [~$150M](https://dune.com/steakhouse/ens-steakhouse) theft and protocol capture. Their subsequent work led to the implementation of the Security Council,\nsignificantly enhancing ENS DAO's resilience against attacks.", "mimetype": "text/plain", "start_char_idx": 1019, "end_char_idx": 1206, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a047eb4b-01de-4173-8837-464c8df9cd37": {"__data__": {"id_": "a047eb4b-01de-4173-8837-464c8df9cd37", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.23.mdx", "file_name": "5.23.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.23.mdx", "header_path": "/[EP 5.23] [Executable] blockful's governance security bounty/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.23.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["developed", "service", "different", "scope", "involved", "details", "smart", "working", "summing", "contribution", "squad", "contract", "worked", "engineer", "auditors"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "00d31569675c9cf4b712578145bdbdc13e6eb94e", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.23.mdx", "file_name": "5.23.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.23.mdx"}, "hash": "91c5456b6adcf7b8e594dc05b6d5fbb42a92b2cd0c3151bb3cba0647784af775", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "509b4bf2-579c-4894-ad7a-d027a984f16d", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.23.mdx", "file_name": "5.23.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.23.mdx", "header_path": "/[EP 5.23] [Executable] blockful's governance security bounty/"}, "hash": "41455415c324806f0df955eb08ce6fde1d406448335470e779efa06ac2235101", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "22f5bd2c-de0d-4339-b747-9c44251c5361", "node_type": "1", "metadata": {"header_path": "/[EP 5.23] [Executable] blockful's governance security bounty/"}, "hash": "6ca15e33ee42a82f6fe08e77390b39fa136e15401ac6c2b67bc129aae0c30b54", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Contribution Details\n\nThe team involved is a [different](https://discuss.ens.domains/t/blockful-service-provider-reports/19553#p-54163-other-contributions-not-related-to-service-provider-scope-14) squad than the one working on the scope of the [ENS service provider](https://discuss.ens.domains/t/blockful-service-provider-reports/19553). It was developed by 2 researchers,\n1 smart contract engineer and 4 different auditors the team has worked with previously. Summing up to ~600 hours,\nthe scope includes:\n\n- Comprehensive vulnerability assessment and risk analysis: **[Here](https://mirror.xyz/research.blockful.eth/-PfMduhpxdypPrutofr6099T4ROpsAmX0fPNbvDgR_k)** is our detailed security report.\n\n- Data analysis of ENS governance metrics and study of past DAO attacker's behaviors.\n\n- Design, development and deployment of the Security Council contract and multisig.\n\n- The Security Council was thought with several key features to balance security and decentralization.\n\n- Smart contract implementation and testing ([GitHub](https://github.com/blockful-io/security-council-ens))\n- Governance proposal drafting and support [[1](https://snapshot.org/#/ens.eth/proposal/0xf3a4673fe04a3ecfed4a2f066f6ced1539a5466d61630428333360b843653c54), [2](https://snapshot.org/#/ens.eth/proposal/0xa0b1bfadf6853b5b0d59d3c4d73c434fc6389339887d05de805361372eb17c3a), [3](https://www.tally.xyz/gov/ens/proposal/42329103797433777309488042029679811802172320979541414683300183273376839219133)]\n\nMore details can be found on the links above for past proposals and the [report](https://mirror.xyz/research.blockful.eth/-PfMduhpxdypPrutofr6099T4ROpsAmX0fPNbvDgR_k).", "mimetype": "text/plain", "start_char_idx": 1524, "end_char_idx": 3172, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "22f5bd2c-de0d-4339-b747-9c44251c5361": {"__data__": {"id_": "22f5bd2c-de0d-4339-b747-9c44251c5361", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.23.mdx", "file_name": "5.23.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.23.mdx", "header_path": "/[EP 5.23] [Executable] blockful's governance security bounty/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.23.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["amount", "invested", "bootstrapped", "totally", "received", "rationale", "support", "represents", "never", "sustainable", "requested", "compensation", "towards", "resources"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "00d31569675c9cf4b712578145bdbdc13e6eb94e", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.23.mdx", "file_name": "5.23.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.23.mdx"}, "hash": "91c5456b6adcf7b8e594dc05b6d5fbb42a92b2cd0c3151bb3cba0647784af775", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a047eb4b-01de-4173-8837-464c8df9cd37", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.23.mdx", "file_name": "5.23.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.23.mdx", "header_path": "/[EP 5.23] [Executable] blockful's governance security bounty/"}, "hash": "aea6436d0d4098dd8b2834ff45319643c6a834ef409b47ebb52d63b5537e412a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a4e31bee-b768-47fa-afc4-272206d1e2d2", "node_type": "1", "metadata": {"header_path": "/[EP 5.23] [Executable] blockful's governance security bounty/"}, "hash": "b275c338197b5196b799f86e966f933c40861cedf2aaeb874999c9fc5cda835e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Compensation Rationale\n\nAs a team that is totally bootstrapped and never received any investment, this support us to keep it sustainable with the resources invested towards this initiative. The requested amount represents fair compensation for:\n\n- The potential loss prevention of ~$150M, capture of the DAO and protocol. The attack is anything but theoretical and there are actually many groups of investors who specialize in \"risk free value raiders\". They have exerted the attack on other DAOs before. Currently there are [unknown whales](https://etherscan.io/address/0x245445940b317e509002eb682e03f4429184059d#tokentxns) buying ENS for +450 days and have ~2M ENS, showing how feasible the scenario is, more than the average quorum, in one wallet.\n\n- A critical code bug bounty in [ENS is $250k USDC](https://immunefi.com/bug-bounty/ens/scope/#assets). Our work was much beyond identifying and disclosing.\n\n- Significantly lower cost compared to standard rates charged by other security service providers in the DAO space,\n  which typically demand liquid compensation. An example is that Open Zeppelin (one of the most reputable players in security) [charges $4M/year at Compound](https://compound.finance/governance/proposals/76),\n  which recently [suffered](https://mirror.xyz/research.blockful.eth/v0GEP49oXP1gzMDlyP91-S4XIa8PIOd0vKq-6R8f54I) this type of attack.\n\n- Months of dedicated work by the team involved (researchers, devs and auditors).\n\n- The long-term value added to ENS through enhanced security.\n\n- Our commitment to ENS's long-term success and continued contribution, as evidenced by the 2-year vesting schedule.", "mimetype": "text/plain", "start_char_idx": 3174, "end_char_idx": 4810, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a4e31bee-b768-47fa-afc4-272206d1e2d2": {"__data__": {"id_": "a4e31bee-b768-47fa-afc4-272206d1e2d2", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.23.mdx", "file_name": "5.23.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.23.mdx", "header_path": "/[EP 5.23] [Executable] blockful's governance security bounty/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.23.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["structure", "linear", "start", "tokens", "research", "april", "vesting", "total", "compensation", "years", "vested", "initial"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "00d31569675c9cf4b712578145bdbdc13e6eb94e", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.23.mdx", "file_name": "5.23.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.23.mdx"}, "hash": "91c5456b6adcf7b8e594dc05b6d5fbb42a92b2cd0c3151bb3cba0647784af775", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "22f5bd2c-de0d-4339-b747-9c44251c5361", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.23.mdx", "file_name": "5.23.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.23.mdx", "header_path": "/[EP 5.23] [Executable] blockful's governance security bounty/"}, "hash": "924a18a8de63ade4e12a024c90f6d1b49322f77cbb4df1b42e5cd018616a921a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f378d9d6-42c5-4754-8d87-ffa4e26a489c", "node_type": "1", "metadata": {"header_path": "/[EP 5.23] [Executable] blockful's governance security bounty/"}, "hash": "d88711b383407eb84075a7e50ccb040c197a6a2f75ebdfbd71d71446d313dfe1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Compensation Structure\n\n- Total amount: 100k USDC + 15k vested ENS tokens\n- Vesting period: 2 years\n- Vesting start date: April 8 2024 (date of initial research disclosure)\n- Vesting schedule: Linear vesting\n- Will be sent to the meta-governance multisig transferred and vested to blockful. ## Benefits to ENS DAO\n\n- Sets a positive precedent that **responsible vulnerability disclosure and correction are rewarded**,\n  encouraging future security contributions\n\n- Preserves DAO treasury liquidity by using part of the bounty in ENS tokens instead of USDC or ETH\n\n- Enhances governance security by increasing the number of engaged security-focused token holders", "mimetype": "text/plain", "start_char_idx": 4812, "end_char_idx": 5105, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e0507227-dd77-4686-a027-2bed9c9b7c5f": {"__data__": {"id_": "e0507227-dd77-4686-a027-2bed9c9b7c5f", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.23.mdx", "file_name": "5.23.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.23.mdx", "header_path": "/[EP 5.23] [Executable] blockful's governance security bounty/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.23.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["structure", "proactive", "acknowledges", "research", "critical", "security", "approving", "ongoing", "governance", "importance", "vesting", "commitment", "ensures", "conclusion", "aligns"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "00d31569675c9cf4b712578145bdbdc13e6eb94e", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.23.mdx", "file_name": "5.23.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.23.mdx"}, "hash": "91c5456b6adcf7b8e594dc05b6d5fbb42a92b2cd0c3151bb3cba0647784af775", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f378d9d6-42c5-4754-8d87-ffa4e26a489c", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.23.mdx", "file_name": "5.23.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.23.mdx", "header_path": "/[EP 5.23] [Executable] blockful's governance security bounty/"}, "hash": "2fbc8cbf046a62b1322d320fdf69bc1e186b387bb08f4df1bed25d2c6802edda", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Conclusion\n\nBy approving this compensation, ENS DAO acknowledges the critical importance of security research and proactive governance improvements. The vesting structure ensures ongoing commitment and aligns incentives for continued contribution to ENS's security and stability. ---\ndescription: 'This proposal executes all three Working Group funding requests for the October 2024 funding window.'\nauthors: ['avsa.eth']\nproposal:\n  tally: '6949396467348678571876890705367894936837088742488849089767544172635343148173'\n  type: 'executable'\n---", "mimetype": "text/plain", "start_char_idx": 5479, "end_char_idx": 5761, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2031e6c3-d941-401a-a5a3-e5071814a5c9": {"__data__": {"id_": "2031e6c3-d941-401a-a5a3-e5071814a5c9", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.24.mdx", "file_name": "5.24.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.24.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.24.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["group", "proposal", "working", "rejected", "funding", "collective"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "064cac2120845890d1a07efa6e51287569f33202", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.24.mdx", "file_name": "5.24.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.24.mdx"}, "hash": "859e8302553446fc920c07a0ec02428c180007d21762bb1ca4a6a9576ebf0cd8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "80a03c37-d8a5-48a7-a598-d00d05044cdb", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.24.mdx", "file_name": "5.24.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.24.mdx", "header_path": "/"}, "hash": "caec0089193f6b2b6c9afcf743977a53c695fbff37a02cc676e74dd023bac285", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8bf708c4-9a15-40aa-87c7-c3da1a2b4686", "node_type": "1", "metadata": {"header_path": "/[EP 5.24] [Executable] Term 5 Q4, Collective Working Group Funding Proposal/"}, "hash": "a7af3cf9281f3a8caf4230722f6ebf6f9f660020894dda5f29577579bc167649", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# [EP 5.24] [Executable] Term 5 Q4, Collective Working Group Funding Proposal\n\n::authors\n\n| **Status**            | Rejected                                                                                                                 |\n| --------------------- | ------------------------------------------------------------------------------------------------------------------------ |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/ep-5-24-executable-term-5-q4-collective-working-group-funding-proposal/19801)      |\n| **Votes**             | [Agora](https://agora.ensdao.org/proposals/6949396467348678571876890705367894936837088742488849089767544172635343148173) |", "mimetype": "text/plain", "start_char_idx": 266, "end_char_idx": 951, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8bf708c4-9a15-40aa-87c7-c3da1a2b4686": {"__data__": {"id_": "8bf708c4-9a15-40aa-87c7-c3da1a2b4686", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.24.mdx", "file_name": "5.24.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.24.mdx", "header_path": "/[EP 5.24] [Executable] Term 5 Q4, Collective Working Group Funding Proposal/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.24.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["executes", "group", "description", "october", "window", "proposal", "three", "passed", "working", "funding", "requests", "governance"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "064cac2120845890d1a07efa6e51287569f33202", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.24.mdx", "file_name": "5.24.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.24.mdx"}, "hash": "859e8302553446fc920c07a0ec02428c180007d21762bb1ca4a6a9576ebf0cd8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2031e6c3-d941-401a-a5a3-e5071814a5c9", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.24.mdx", "file_name": "5.24.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.24.mdx", "header_path": "/"}, "hash": "84045488791c973ec9ab9b084f96f499ec2f4dfacc8ee7e6c4b53e39c202c8e6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ea716b8a-717f-4cae-850a-173a90b9f0fd", "node_type": "1", "metadata": {"header_path": "/[EP 5.24] [Executable] Term 5 Q4, Collective Working Group Funding Proposal/"}, "hash": "595e4f5e20015b9051d50f4560ba64d30fc6a4bdf2f18c608748f18d1a278a52", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Description\n\nThis proposal executes all three Working Group funding requests for the October 2024 funding window as passed in [EP 5.17.1](https://discuss.ens.domains/t/5-17-1-social-funding-request-ens-meta-governance-working-group-term-5-oct-window/19677), [EP 5.17.2](https://discuss.ens.domains/t/5-17-2-social-funding-request-ens-ecosystem-working-group/19678), and [EP 5.17.3](https://discuss.ens.domains/t/5-17-3-social-funding-request-ens-public-goods-working-group/19679) as well as [EP 5.21](https://snapshot.org/#/ens.eth/proposal/0x5067725bef9cde0de0024adedb653a7a1752aefa726adf628b77048d85821a6d) and [EP 5.19](https://snapshot.org/#/ens.eth/proposal/0xfa54ff2b55f0495c96ec2d8645241bcff48ca6afe1f4925fb51f29c4667252df).\n\nFor more detail, view the [ENS Governance docs](https://basics.ensdao.org/funding-requests/funding-requests)", "mimetype": "text/plain", "start_char_idx": 953, "end_char_idx": 1797, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ea716b8a-717f-4cae-850a-173a90b9f0fd": {"__data__": {"id_": "ea716b8a-717f-4cae-850a-173a90b9f0fd", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.24.mdx", "file_name": "5.24.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.24.mdx", "header_path": "/[EP 5.24] [Executable] Term 5 Q4, Collective Working Group Funding Proposal/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.24.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["formal", "components", "request", "group", "anticipated", "proposal", "budgetary", "funding", "working", "fulfill", "requests", "needs", "through"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "064cac2120845890d1a07efa6e51287569f33202", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.24.mdx", "file_name": "5.24.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.24.mdx"}, "hash": "859e8302553446fc920c07a0ec02428c180007d21762bb1ca4a6a9576ebf0cd8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8bf708c4-9a15-40aa-87c7-c3da1a2b4686", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.24.mdx", "file_name": "5.24.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.24.mdx", "header_path": "/[EP 5.24] [Executable] Term 5 Q4, Collective Working Group Funding Proposal/"}, "hash": "885b26b911c7c048fba6943466882e41f43a795968a478d10cb354de56b57fdd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "52f7e604-b18e-4611-a47c-60f1cc861610", "node_type": "1", "metadata": {"header_path": "/[EP 5.24] [Executable] Term 5 Q4, Collective Working Group Funding Proposal/Proposal Components/"}, "hash": "caa274e3ed531a90b5c5d0857b1e7a66edee6e911d0b0a3649c7b83249fbe24d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Proposal Components ### 1) [Meta-governance Funding Request [EP 5.17.1]](https://discuss.ens.domains/t/5-17-1-social-funding-request-ens-meta-governance-working-group-term-5-oct-window/19677)\n\nThe Meta-governance Working Group requests funding to fulfill anticipated budgetary needs through the next formal funding window in April 2025.\n\n| Destination                                                                                           |  USDC   | ETH |  $ENS  |\n| :---------------------------------------------------------------------------------------------------- | :-----: | :-: | :----: |\n| [ENS Meta-Gov Main Multisig](https://etherscan.io/address/0x91c32893216dE3eA0a55ABb9851f581d4503d39b) | 354,000 |  0  | 45,000 |\n\nThis amount will cover all expected expenses (including the ENS required for vesting on 5.19 and 5.21) while maintaining a 100,000 USDC prudent reserve to ensure continuity if future funding is delayed.", "mimetype": "text/plain", "start_char_idx": 1799, "end_char_idx": 1821, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "79519b60-8fba-46ae-b4d7-0776d66ca5f6": {"__data__": {"id_": "79519b60-8fba-46ae-b4d7-0776d66ca5f6", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.24.mdx", "file_name": "5.24.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.24.mdx", "header_path": "/[EP 5.24] [Executable] Term 5 Q4, Collective Working Group Funding Proposal/Proposal Components/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.24.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["operations", "ecosystem", "request", "group", "april", "funding", "working", "support", "requests", "through"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "064cac2120845890d1a07efa6e51287569f33202", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.24.mdx", "file_name": "5.24.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.24.mdx"}, "hash": "859e8302553446fc920c07a0ec02428c180007d21762bb1ca4a6a9576ebf0cd8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "52f7e604-b18e-4611-a47c-60f1cc861610", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.24.mdx", "file_name": "5.24.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.24.mdx", "header_path": "/[EP 5.24] [Executable] Term 5 Q4, Collective Working Group Funding Proposal/Proposal Components/"}, "hash": "66248ab3bc72dcf46e7f60d5623f9180341920ae9e51704e619634b4e5658306", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "04ff77f8-63b0-4566-82c9-c85a102c0272", "node_type": "1", "metadata": {"header_path": "/[EP 5.24] [Executable] Term 5 Q4, Collective Working Group Funding Proposal/Proposal Components/"}, "hash": "0f5720b0dac414dbbb9506ace2d4be9b201db435a9557a26d9c32d2cb7d56893", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### 2) [Ecosystem Funding Request [EP 5.17.2]](https://discuss.ens.domains/t/5-17-2-social-funding-request-ens-ecosystem-working-group/19678)\n\nThe ENS Ecosystem Working Group requests funding to support operations through April 2025. This is the only funding request of Term 5. The working group is responsible for growing and improving the ENS Ecosystem by funding builders and projects that are ENS-specific or ENS-centric.\n\n| Destination                                                                                            |  USDC   | ETH | $ENS |\n| :----------------------------------------------------------------------------------------------------- | :-----: | :-: | :--: |\n| [ENS Ecosystem Main Multisig](https://etherscan.io/address/0x2686a8919df194aa7673244549e68d42c1685d03) | 836,000 |  0  |  0   |", "mimetype": "text/plain", "start_char_idx": 2739, "end_char_idx": 3555, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "04ff77f8-63b0-4566-82c9-c85a102c0272": {"__data__": {"id_": "04ff77f8-63b0-4566-82c9-c85a102c0272", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.24.mdx", "file_name": "5.24.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.24.mdx", "header_path": "/[EP 5.24] [Executable] Term 5 Q4, Collective Working Group Funding Proposal/Proposal Components/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.24.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["operations", "goods", "request", "group", "window", "april", "public", "funding", "working", "support", "requests", "through"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "064cac2120845890d1a07efa6e51287569f33202", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.24.mdx", "file_name": "5.24.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.24.mdx"}, "hash": "859e8302553446fc920c07a0ec02428c180007d21762bb1ca4a6a9576ebf0cd8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "79519b60-8fba-46ae-b4d7-0776d66ca5f6", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.24.mdx", "file_name": "5.24.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.24.mdx", "header_path": "/[EP 5.24] [Executable] Term 5 Q4, Collective Working Group Funding Proposal/Proposal Components/"}, "hash": "72f6876e953e1a5d20c8465ce05653a584d3cccaf3fffcb1005a647d416ee37a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4b704df6-63e0-478b-86e7-6a992d1236f3", "node_type": "1", "metadata": {"header_path": "/[EP 5.24] [Executable] Term 5 Q4, Collective Working Group Funding Proposal/"}, "hash": "3fc0f1ec60d10810b7b0b8a06e3a8f60742f110a57a5f851844e036226486136", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### 3) [Public Goods Funding Request [EP 5.17.3]](https://discuss.ens.domains/t/5-17-3-social-funding-request-ens-public-goods-working-group/19679)\n\nThe ENS Public Goods Working Group requests funding to support operations through the next funding window in April 2025. The funds requested extend current needs through to next term to ensure that next season's stewards have available funding before the next funding window.\n\n| Destination                                                                                           |  USDC   | ETH | $ENS |\n| :---------------------------------------------------------------------------------------------------- | :-----: | :-: | :--: |\n| [Public Goods Main Multisig](https://etherscan.io/address/0xcD42b4c4D102cc22864e3A1341Bb0529c17fD87d) | 226,000 |  0  |  0   |", "mimetype": "text/plain", "start_char_idx": 3557, "end_char_idx": 4369, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4b704df6-63e0-478b-86e7-6a992d1236f3": {"__data__": {"id_": "4b704df6-63e0-478b-86e7-6a992d1236f3", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.24.mdx", "file_name": "5.24.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.24.mdx", "header_path": "/[EP 5.24] [Executable] Term 5 Q4, Collective Working Group Funding Proposal/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.24.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ecosystem", "transfers", "public", "transfer", "following", "goods", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "064cac2120845890d1a07efa6e51287569f33202", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.24.mdx", "file_name": "5.24.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.24.mdx"}, "hash": "859e8302553446fc920c07a0ec02428c180007d21762bb1ca4a6a9576ebf0cd8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "04ff77f8-63b0-4566-82c9-c85a102c0272", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.24.mdx", "file_name": "5.24.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.24.mdx", "header_path": "/[EP 5.24] [Executable] Term 5 Q4, Collective Working Group Funding Proposal/Proposal Components/"}, "hash": "98e5a2d289a4ddd200069dc3ddecb9122b83d4192af871d8843aa1e85ac78281", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6f52e93d-7a3c-4d70-b122-282b15a4579c", "node_type": "1", "metadata": {"header_path": "/[EP 5.24] [Executable] Term 5 Q4, Collective Working Group Funding Proposal/Specification/"}, "hash": "567c0a0d3dc4416d9280e6cfc960f6197ac988fb726ef1ead12b1014c96b91cf", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\nThe following transfers are to be made from the DAO treasury:\n\n1. Transfer 354,000 USDC to the Meta-governance safe:\n\n   - Address: `0x91c32893216dE3eA0a55ABb9851f581d4503d39b`\n\n2. Transfer 836,000 USDC to the Ecosystem safe:\n\n   - Address: `0x2686A8919Df194aA7673244549E68D42C1685d03`\n\n3. Transfer 226,000 USDC to the Public Goods safe:\n\n   - Address: `0xcD42b4c4D102cc22864e3A1341Bb0529c17fD87d`\n\n4. Transfer 45,000 ENS to the Meta-governance safe:\n   - Address: `0x91c32893216dE3eA0a55ABb9851f581d4503d39b`", "mimetype": "text/plain", "start_char_idx": 4371, "end_char_idx": 4898, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6f52e93d-7a3c-4d70-b122-282b15a4579c": {"__data__": {"id_": "6f52e93d-7a3c-4d70-b122-282b15a4579c", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.24.mdx", "file_name": "5.24.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.24.mdx", "header_path": "/[EP 5.24] [Executable] Term 5 Q4, Collective Working Group Funding Proposal/Specification/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.24.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["amounts", "request", "group", "passed", "transfer", "funding", "working", "resubmission", "total", "technical", "collective", "changes"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "064cac2120845890d1a07efa6e51287569f33202", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.24.mdx", "file_name": "5.24.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.24.mdx"}, "hash": "859e8302553446fc920c07a0ec02428c180007d21762bb1ca4a6a9576ebf0cd8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4b704df6-63e0-478b-86e7-6a992d1236f3", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.24.mdx", "file_name": "5.24.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.24.mdx", "header_path": "/[EP 5.24] [Executable] Term 5 Q4, Collective Working Group Funding Proposal/"}, "hash": "8164a8737dce70fdb16381065b59a558bf2ce2476ec630c2359bfd2d038d249b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "#### Total transfer amount: 1,416,000 USDC and 45,000 ENS ---\ndescription: 'This is a resubmission of EP 5.24, with no changes to the funding amounts or technical specifications.'\nauthors: ['5pence.eth']\nproposal:\n  tally: '14573906698181916980991958251655570598275649222336388998984945658874299918898'\n  type: 'executable'\n--- # [EP 5.25] [Executable] Collective Working Group Funding Request (Oct 2024) - Resubmission\n\n::authors\n\n| **Status**            | Passed                                                                                                                         |\n| --------------------- | ------------------------------------------------------------------------------------------------------------------------------ |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/ep-5-25-executable-collective-working-group-funding-request-oct-2024-resubmission/19847) |\n| **Votes**             | [Agora](https://agora.ensdao.org/proposals/14573906698181916980991958251655570598275649222336388998984945658874299918898)      |", "mimetype": "text/plain", "start_char_idx": 4900, "end_char_idx": 4957, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ccec0058-cd57-4903-a06f-7a0979e3cdfb": {"__data__": {"id_": "ccec0058-cd57-4903-a06f-7a0979e3cdfb", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.25.mdx", "file_name": "5.25.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.25.mdx", "header_path": "/[EP 5.25] [Executable] Collective Working Group Funding Request (Oct 2024) - Resubmission/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.25.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["executes", "amounts", "group", "description", "october", "abstract", "proposal", "three", "funding", "working", "resubmission", "requests", "technical", "changes"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "085c5fa1cf626643aefc2dca893366458aee6dbd", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.25.mdx", "file_name": "5.25.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.25.mdx"}, "hash": "f6eba9dfe8a012ec31322e86e8b9f47bc59d9187f5a34e12cbca4e7534dce003", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c9834cfc-1db5-4b91-8bbf-c9b6838450f6", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.25.mdx", "file_name": "5.25.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.25.mdx", "header_path": "/"}, "hash": "cffc3168c6f1c3a80eeb865f85fd23911f26a886c6f63796666f8db481202a5a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "596b733f-7893-4da0-9fed-c7abb1fcfe74", "node_type": "1", "metadata": {"header_path": "/[EP 5.25] [Executable] Collective Working Group Funding Request (Oct 2024) - Resubmission/"}, "hash": "0721af09c520137b767b4d2120611213628f31622f7bdb060bc339b5bb68dc46", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Description\n\nThis is a resubmission of [EP 5.24], with no changes to the funding amounts or technical specifications. ## Abstract\n\nThis proposal executes all three Working Group funding requests for the October 2024 funding window as passed in [EP 5.17.1](https://discuss.ens.domains/t/5-17-1-social-funding-request-ens-meta-governance-working-group-term-5-oct-window/19677), [EP 5.17.2](https://discuss.ens.domains/t/5-17-2-social-funding-request-ens-ecosystem-working-group/19678), and [EP 5.17.3](https://discuss.ens.domains/t/5-17-3-social-funding-request-ens-public-goods-working-group/19679). For more detail, view the ENS Governance docs at https://basics.ensdao.org/funding-requests", "mimetype": "text/plain", "start_char_idx": 996, "end_char_idx": 1116, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4b434471-32b0-483d-8c71-f825cff539c8": {"__data__": {"id_": "4b434471-32b0-483d-8c71-f825cff539c8", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.25.mdx", "file_name": "5.25.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.25.mdx", "header_path": "/[EP 5.25] [Executable] Collective Working Group Funding Request (Oct 2024) - Resubmission/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.25.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["formal", "components", "request", "group", "anticipated", "proposal", "budgetary", "funding", "working", "fulfill", "requests", "needs", "through"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "085c5fa1cf626643aefc2dca893366458aee6dbd", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.25.mdx", "file_name": "5.25.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.25.mdx"}, "hash": "f6eba9dfe8a012ec31322e86e8b9f47bc59d9187f5a34e12cbca4e7534dce003", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "596b733f-7893-4da0-9fed-c7abb1fcfe74", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.25.mdx", "file_name": "5.25.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.25.mdx", "header_path": "/[EP 5.25] [Executable] Collective Working Group Funding Request (Oct 2024) - Resubmission/"}, "hash": "703e78e6200313cfb173bbf80e9a93c96dcb07ccedd3b674ac4f271ea87e85aa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "65616723-a271-4e7f-8e17-0f1c33670c32", "node_type": "1", "metadata": {"header_path": "/[EP 5.25] [Executable] Collective Working Group Funding Request (Oct 2024) - Resubmission/Proposal Components/"}, "hash": "4d7fc90cc0e1fad3b323118c69eac03cd8350dc58871a8946f51a86018a58f09", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Proposal Components\n\n--- ### 1) [Meta-governance Funding Request [EP 5.17.1]](https://discuss.ens.domains/t/5-17-1-social-funding-request-ens-meta-governance-working-group-term-5-oct-window/19677)\n\nThe Meta-governance Working Group requests funding to fulfill anticipated budgetary needs through the next formal funding window in April 2025.\n\n| Destination                                                                                           |  USDC   | ETH | $ENS |\n| :---------------------------------------------------------------------------------------------------- | :-----: | :-: | :--: |\n| [ENS Meta-Gov Main Multisig](https://etherscan.io/address/0x91c32893216dE3eA0a55ABb9851f581d4503d39b) | 254,000 |  0  |  0   |\n\nThis amount will cover all expected expenses while maintaining a 100,000 USDC prudent reserve to ensure continuity if future funding is delayed.\n\n---", "mimetype": "text/plain", "start_char_idx": 1692, "end_char_idx": 1719, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0f96e932-f8bf-4532-9647-72c0a1f279be": {"__data__": {"id_": "0f96e932-f8bf-4532-9647-72c0a1f279be", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.25.mdx", "file_name": "5.25.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.25.mdx", "header_path": "/[EP 5.25] [Executable] Collective Working Group Funding Request (Oct 2024) - Resubmission/Proposal Components/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.25.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["operations", "ecosystem", "request", "group", "april", "funding", "working", "support", "requests", "through"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "085c5fa1cf626643aefc2dca893366458aee6dbd", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.25.mdx", "file_name": "5.25.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.25.mdx"}, "hash": "f6eba9dfe8a012ec31322e86e8b9f47bc59d9187f5a34e12cbca4e7534dce003", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "65616723-a271-4e7f-8e17-0f1c33670c32", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.25.mdx", "file_name": "5.25.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.25.mdx", "header_path": "/[EP 5.25] [Executable] Collective Working Group Funding Request (Oct 2024) - Resubmission/Proposal Components/"}, "hash": "9862dd0ab996cd576d416f70a46e5a03b77d0174932ec672ffebd7d130cc9078", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "93ff0a49-49b8-4501-b8a9-81ee80e00a06", "node_type": "1", "metadata": {"header_path": "/[EP 5.25] [Executable] Collective Working Group Funding Request (Oct 2024) - Resubmission/Proposal Components/"}, "hash": "0ba8431b20603e8186b287889c96467815d4a11c477f0d72ccec39cdadd7ec99", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### 2) [Ecosystem Funding Request [EP 5.17.2]](https://discuss.ens.domains/t/5-17-2-social-funding-request-ens-ecosystem-working-group/19678)\n\nThe ENS Ecosystem Working Group requests funding to support operations through April 2025. This is the only funding request of Term 5. The working group is responsible for growing and improving the ENS Ecosystem by funding builders and projects that are ENS-specific or ENS-centric.\n\n| Destination                                                                                            |  USDC   | ETH | $ENS |\n| :----------------------------------------------------------------------------------------------------- | :-----: | :-: | :--: |\n| [ENS Ecosystem Main Multisig](https://etherscan.io/address/0x2686a8919df194aa7673244549e68d42c1685d03) | 836,000 |  0  |  0   |\n\n---", "mimetype": "text/plain", "start_char_idx": 2578, "end_char_idx": 3399, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "93ff0a49-49b8-4501-b8a9-81ee80e00a06": {"__data__": {"id_": "93ff0a49-49b8-4501-b8a9-81ee80e00a06", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.25.mdx", "file_name": "5.25.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.25.mdx", "header_path": "/[EP 5.25] [Executable] Collective Working Group Funding Request (Oct 2024) - Resubmission/Proposal Components/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.25.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["operations", "goods", "request", "group", "window", "april", "public", "funding", "working", "support", "requests", "through"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "085c5fa1cf626643aefc2dca893366458aee6dbd", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.25.mdx", "file_name": "5.25.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.25.mdx"}, "hash": "f6eba9dfe8a012ec31322e86e8b9f47bc59d9187f5a34e12cbca4e7534dce003", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0f96e932-f8bf-4532-9647-72c0a1f279be", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.25.mdx", "file_name": "5.25.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.25.mdx", "header_path": "/[EP 5.25] [Executable] Collective Working Group Funding Request (Oct 2024) - Resubmission/Proposal Components/"}, "hash": "f5f8eab978b7e505e4197b6f6dd95b67821ff5e4c34d15340175e488f60d48b0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a1bf66ff-51aa-401d-9e98-e48dde78fd44", "node_type": "1", "metadata": {"header_path": "/[EP 5.25] [Executable] Collective Working Group Funding Request (Oct 2024) - Resubmission/"}, "hash": "09c869fbc480dbfe942327aecd63a99725c1dbe22741426d4b81efbda7eca31f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### 3) [Public Goods Funding Request [EP 5.17.3]](https://discuss.ens.domains/t/5-17-3-social-funding-request-ens-public-goods-working-group/19679)\n\nThe ENS Public Goods Working Group requests funding to support operations through the next funding window in April 2025. The funds requested extend current needs through to next term to ensure that next season's stewards have available funding before the next funding window.\n\n| Destination                                                                                           |  USDC   | ETH | $ENS |\n| :---------------------------------------------------------------------------------------------------- | :-----: | :-: | :--: |\n| [Public Goods Main Multisig](https://etherscan.io/address/0xcD42b4c4D102cc22864e3A1341Bb0529c17fD87d) | 226,000 |  0  |  0   |\n\n---", "mimetype": "text/plain", "start_char_idx": 3401, "end_char_idx": 4218, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a1bf66ff-51aa-401d-9e98-e48dde78fd44": {"__data__": {"id_": "a1bf66ff-51aa-401d-9e98-e48dde78fd44", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.25.mdx", "file_name": "5.25.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.25.mdx", "header_path": "/[EP 5.25] [Executable] Collective Working Group Funding Request (Oct 2024) - Resubmission/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.25.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ecosystem", "transfers", "public", "transfer", "following", "total", "goods", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "085c5fa1cf626643aefc2dca893366458aee6dbd", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.25.mdx", "file_name": "5.25.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.25.mdx"}, "hash": "f6eba9dfe8a012ec31322e86e8b9f47bc59d9187f5a34e12cbca4e7534dce003", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "93ff0a49-49b8-4501-b8a9-81ee80e00a06", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.25.mdx", "file_name": "5.25.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.25.mdx", "header_path": "/[EP 5.25] [Executable] Collective Working Group Funding Request (Oct 2024) - Resubmission/Proposal Components/"}, "hash": "a0ee20f48727e307ce037b0d20624e64451249c48611335b277aec3b49478d32", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a2367d13-2ef9-4b5d-9e37-730ff49947ff", "node_type": "1", "metadata": {"header_path": "/[EP 5.25] [Executable] Collective Working Group Funding Request (Oct 2024) - Resubmission/Specification/"}, "hash": "5f17191916e5a9330b1f026198319f78a1309789e4b94bb8d3c33c1aa2f4ac62", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\nThe following transfers are to be made from the DAO treasury:\n\n1. Transfer 254,000 USDC to the Meta-governance safe:\n\n   - Address: `0x91c32893216dE3eA0a55ABb9851f581d4503d39b`\n\n2. Transfer 836,000 USDC to the Ecosystem safe:\n\n   - Address: `0x2686A8919Df194aA7673244549E68D42C1685d03`\n\n3. Transfer 226,000 USDC to the Public Goods safe:\n   - Address: `0xcD42b4c4D102cc22864e3A1341Bb0529c17fD87d` #### Total transfer amount: 1,316,000 USDC\n\n--- ### Calldata:\n\n**5.17.1 Tx to Metagov**\n\n```\n{\n    \"target\": \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\",\n    \"value\": 0,\n    \"calldata\": \"0xa9059cbb00000000000000000000000091c32893216de3ea0a55abb9851f581d4503d39b0000000000000000000000000000000000000000000000000000003b23946c00\"\n}\n```\n\n**5.17.2 Tx to Ecosystem**\n\n```\n{\n    \"target\": \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\",\n    \"value\": 0,\n    \"calldata\": \"0xa9059cbb0000000000000000000000002686a8919df194aa7673244549e68d42c1685d03000000000000000000000000000000000000000000000000000000c2a57ba800\"\n}\n```\n\n**5.17.3 Tx to Public Goods**\n\n```\n{\n    \"target\": \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\",\n    \"value\": 0,\n    \"calldata\": \"0xa9059cbb000000000000000000000000cd42b4c4d102cc22864e3a1341bb0529c17fd87d000000000000000000000000000000000000000000000000000000349ea65400\"\n}\n```", "mimetype": "text/plain", "start_char_idx": 4220, "end_char_idx": 4634, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9e548961-218e-421b-b975-21d33f2077e8": {"__data__": {"id_": "9e548961-218e-421b-b975-21d33f2077e8", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.26.mdx", "file_name": "5.26.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.26.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.26.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["program", "proposal", "pilot", "passed", "distribution", "executable", "implementation", "implements", "approved", "governance"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "77bef923da6a25731952f8a9c9b9d34897b00118", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.26.mdx", "file_name": "5.26.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.26.mdx"}, "hash": "924c1c2e73e711ccefe1310ab0632fec72af562df4e1e17c167dd9da26671f8d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "edc5568c-d6a2-42fa-a7cc-12ed809a9ba3", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "4b313d75bb992a632f3f67893cb2409622660a7ea6d4a2481845e779c68de532", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: 'This executable proposal implements the Governance Distribution Pilot Program approved in EP5.19.'\nauthors: ['5pence.eth']\nproposal:\n  tally: '50152158826647742094695349340830523178083147237337111134725087674188893435887'\n  type: 'executable'\n--- # [EP 5.26] [Executable] Implementation of EP 5.19\u2019s ENS Governance Distribution Pilot Program\n\n::authors\n\n| **Status**            | Passed                                                                                                                                |\n| --------------------- | ------------------------------------------------------------------------------------------------------------------------------------- |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/ep-5-26-executable-implementation-of-ep-5-19-s-ens-governance-distribution-pilot-program/19878) |\n| **Votes**             | [Agora](https://agora.ensdao.org/proposals/50152158826647742094695349340830523178083147237337111134725087674188893435887)             |\n\n| **Status**            | Passed                                                                                                                                |\n| --------------------- | ------------------------------------------------------------------------------------------------------------------------------------- |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/ep-5-26-executable-implementation-of-ep-5-19-s-ens-governance-distribution-pilot-program/19878) |\n| **Votes**             | [Agora](https://agora.ensdao.org/proposals/50152158826647742094695349340830523178083147237337111134725087674188893435887)             |", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 264, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e2f8f1e1-f75b-40af-ba2d-d9f6f8f50352": {"__data__": {"id_": "e2f8f1e1-f75b-40af-ba2d-d9f6f8f50352", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.26.mdx", "file_name": "5.26.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.26.mdx", "header_path": "/[EP 5.26] [Executable] Implementation of EP 5.19\u2019s ENS Governance Distribution Pilot Program/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.26.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["authorizes", "abstract", "program", "proposal", "pilot", "following", "transfer", "distribution", "executable", "implements", "approved", "selection", "governance"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "77bef923da6a25731952f8a9c9b9d34897b00118", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.26.mdx", "file_name": "5.26.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.26.mdx"}, "hash": "924c1c2e73e711ccefe1310ab0632fec72af562df4e1e17c167dd9da26671f8d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "edc5568c-d6a2-42fa-a7cc-12ed809a9ba3", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.26.mdx", "file_name": "5.26.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.26.mdx", "header_path": "/"}, "hash": "8c7b2ac2cd414bfecb8f871a9ab29806393caa443ca4c93fa6ea04d287e23b68", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "de4c50bc-b4c6-4f89-949e-02fbff0bd2e0", "node_type": "1", "metadata": {"header_path": "/[EP 5.26] [Executable] Implementation of EP 5.19\u2019s ENS Governance Distribution Pilot Program/"}, "hash": "e4e9122d918d7227322ab98870074c056f577e421dc4f15aa1766b243157c238", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Abstract\n\nThis executable proposal implements the Governance Distribution Pilot Program approved in [EP5.19](https://snapshot.org/#/ens.eth/proposal/0xfa54ff2b55f0495c96ec2d8645241bcff48ca6afe1f4925fb51f29c4667252df). Following the community's selection of the 30k ENS distribution option, this proposal authorizes the transfer of ENS tokens from the treasury to implement the program. ## Specification\n\nThis proposal authorizes:\n\n1. The transfer of 30,000 ENS tokens from the DAO treasury to the Meta-governance working group's main wallet (main.mg.wg.ens.eth) for distribution to eligible recipients\n2. The Meta-governance working group will then distribute these tokens through 2-year linear vesting contracts according to the allocation table below\n\nThis distribution follows the quadratic funding method, which is a progressive ratio where recipients receive ENS tokens proportional to the square root of their USDC/ETH contributions during January-September 2024. The complete distribution table is as follows:", "mimetype": "text/plain", "start_char_idx": 1671, "end_char_idx": 2059, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d34445b3-1b53-4feb-a84e-e53762824ffa": {"__data__": {"id_": "d34445b3-1b53-4feb-a84e-e53762824ffa", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.26.mdx", "file_name": "5.26.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.26.mdx", "header_path": "/[EP 5.26] [Executable] Implementation of EP 5.19\u2019s ENS Governance Distribution Pilot Program/Specification/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.26.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["recipients", "fluidkey", "weight", "ecosystem", "onthis", "received", "ethglobal", "blockscout", "discord", "support", "total", "EIP-7212", "value", "squared", "campus"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "77bef923da6a25731952f8a9c9b9d34897b00118", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.26.mdx", "file_name": "5.26.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.26.mdx"}, "hash": "924c1c2e73e711ccefe1310ab0632fec72af562df4e1e17c167dd9da26671f8d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "de4c50bc-b4c6-4f89-949e-02fbff0bd2e0", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.26.mdx", "file_name": "5.26.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.26.mdx", "header_path": "/[EP 5.26] [Executable] Implementation of EP 5.19\u2019s ENS Governance Distribution Pilot Program/"}, "hash": "1ea589be16a2a550e6f36a751f6791f9e6e5e1f37c7f1367b7055ea279761a1c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ea4f4272-86a1-482c-a11f-62f1415977e5", "node_type": "1", "metadata": {"header_path": "/[EP 5.26] [Executable] Implementation of EP 5.19\u2019s ENS Governance Distribution Pilot Program/"}, "hash": "7acd500c7a1bffbbfc031f94e0e483f10c0dffb0908d8058ae9b18244f6096c1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Recipients\n\n| From                  | To                                 | SUM of Value   | Squared Weight | % of total | ENS       | % of value received |\n| --------------------- | ---------------------------------- | -------------- | -------------- | ---------- | --------- | ------------------- |\n| Ecosystem             | ETHGlobal                          | $ 190,000.00   | 435.9          | 5.2%       | 1,569.85  | 11.6%               |\n|                       | wslyvh.eth                         | $ 50,004.00    | 223.6          | 2.7%       | 805.35    | 22.5%               |\n|                       | Onthis                             | $ 25,000.00    | 158.1          | 1.9%       | 569.44    | 31.9%               |\n|                       | ipns.eth                           | $ 25,000.00    | 158.1          | 1.9%       | 569.44    | 31.9%               |\n|                       | Fluidkey                           | $ 25,000.00    | 158.1          | 1.9%       | 569.44    | 31.9%               |\n|                       | Blockscout                         | $ 25,000.00    | 158.1          | 1.9%       | 569.44    | 31.9%               |\n|                       | beaconchain.eth                    | $ 25,000.00    | 158.1          | 1.9%       | 569.44    | 31.9%               |\n|                       | 1w3.eth                            | $ 25,000.00    | 158.1          | 1.9%       | 569.44    | 31.9%               |\n|                       | Urbe Campus                        | $ 14,680.00    | 121.2          | 1.5%       | 436.36    | 41.6%               |\n|                       | Discord Support                    | $ 13,000.00    | 114.0          | 1.4%       | 410.63    | 44.2%               |\n|                       | generalmagic.eth                   | $ 11,563.43    | 107.5          | 1.3%       | 387.28    | 46.9%               |\n|                       | Pugson                             | $ 10,000.00    | 100.0          | 1.2%       | 360.15    | 50.4%               |\n|                       | Juicebox                           | $ 10,000.00    | 100.0          | 1.2%       | 360.15    | 50.4%               |\n|                       | frolic.eth                         | $ 10,000.00    | 100.0          | 1.2%       | 360.15    | 50.4%               |\n|                       | Drips                              | $ 10,000.00    | 100.0          | 1.2%       | 360.15    | 50.4%               |\n|                       | Socket                             | $ 5,000.00     | 70.7           | 0.8%       | 254.66    | 71.3%               |\n|                       | ENS Fairy                          | $ 4,781.34     | 69.1           | 0.8%       | 249.03    | 72.9%               |\n|                       | weird3.eth                         | $ 3,000.00     | 54.8           | 0.7%       | 197.26    | 92.1%               |\n|                       | stephancill.eth                    | $ 2,367.89     | 48.7           | 0.6%       | 175.25    | 103.6%              |\n|                       | Scope.sh                           | $ 2,367.89     | 48.7           | 0.6%       | 175.25    | 103.6%              |\n|                       | Kiwi News                          | $ 2,367.89     | 48.7           | 0.6%       | 175.25    | 103.6%              |\n|                       | aexek.eth                          | $ 1,750.00     | 41.8           | 0.5%       | 150.66    | 120.5%              |\n| Ecosystem Total       |                                    | $ 490,882.44   |                |            |           |                     |\n| Public Goods          | Rotki                              | $ 53,973.38    | 232.3          | 2.8%       | 836.70    | 21.7%               |\n|                       | gashawk.eth                        | $ 40,000.00    | 200.0          | 2.4%       | 720.29    | 25.2%               |\n|                       | buidlguidl.eth                     | $ 35,000.00    | 187.1          | 2.2%       | 673.77    | 27.0%               |\n|                       | borderlessafrica.eth               | $ 30,000.00    | 173.2          | 2.1%       | 623.79    | 29.1%               |\n|                       | Revoke.Cash                        | $ 20,000.00    | 141.4          | 1.7%       | 509.33    | 35.7%               |\n|                       | Firefly                            | $ 20,000.00    | 141.4          | 1.7%       | 509.33    | 35.7%               |\n|                       | EIP-7212                           | $ 20,000.00    | 141.4          | 1.7%       | 509.33    | 35.7%               |\n|                       | ethdaily.eth                       | $ 14,797.60    | 121.6          | 1.5%       | 438.10    | 41.4%               |\n|                       | Dappnode                           | $ 12,500.00    | 111.8          | 1.3%       | 402.66    | 45.1%               |\n|                       | ETHDenver                          | $ 10,000.00    | 100.0          | 1.2%       | 360.15    | 50.4%               |\n|                       | pairwise.eth                       | $ 8,402.18     | 91.7           | 1.1%       | 330.12    | 55.0%               |\n|                       | apoorv.eth                         | $ 7,021.88     | 83.8           | 1.0%       | 301.79    | 60.2%               |\n|                       | leticiaferraz.eth                  | $ 6,949.32     | 83.4           | 1.0%       | 300.23    | 60.5%               |\n|                       | Urbe Campus                        | $ 5,000.00     | 70.7           | 0.8%       | 254.66    | 71.3%               |\n|                       | Latin Hackathon                    | $ 5,000.00     | 70.7           | 0.8%       | 254.66    | 71.3%               |\n|                       | eth-mexico.eth                     | $ 5,000.00     | 70.7           | 0.8%       | 254.66    | 71.3%               |\n|                       | DAOstar                            | $ 5,000.00     | 70.7           | 0.8%       | 254.66    | 71.3%               |\n|                       | aynieducativo.eth                  | $ 5,000.00     | 70.7           | 0.8%       | 254.66    | 71.3%               |\n|                       | glodollar.eth                      | $ 3,762.22     | 61.3           | 0.7%       | 220.90    | 82.2%               |\n|                       | modularcrypto.eth                  | $ 1,818.29     | 42.6           | 0.5%       | 153.57    | 118.2%              |\n|                       | daveytea.eth                       | $ 1,818.29     | 42.6           | 0.5%       | 153.57    | 118.2%              |\n|                       | UPE                                | $ 940.56       | 30.7           | 0.4%       | 110.45    | 164.4%              |\n|                       | illuminated.eth                    | $ 940.56       | 30.7           | 0.4%       | 110.45    | 164.4%              |\n|                       | dhive.eth                          | $ 940.56       | 30.7           | 0.4%       | 110.45    | 164.4%              |\n|                       | bloomnetwork.eth                   | $ 940.56       | 30.7           | 0.4%       | 110.45    | 164.4%              |\n|                       | pabl0cks.eth                       | $ 877.74       | 29.6           | 0.4%       | 106.70    | 170.2%              |\n|                       | iviangita.eth                      | $ 877.74       | 29.6           | 0.4%       | 106.70    | 170.2%              |\n|                       | easlabs.eth                        | $ 877.74       | 29.6           | 0.4%       | 106.70    | 170.2%              |\n|                       | 2118.eth                           | $ 877.74       | 29.6           | 0.4%       | 106.70    | 170.2%              |\n| Public Goods Total    |                                    | $ 318,316.31   |                |            |           |                     |\n| Metagov               | Karpatkey                          | $ 187,149.13   | 432.6          | 5.2%       | 1,558.02  | 11.7%               |\n|                       | daemon.eth                         | $ 27,000.00    | 164.3          | 2.0%       | 591.78    | 30.7%               |\n|                       | Lemma                              | $ 9,998.67     | 100.0          | 1.2%       | 360.12    | 50.4%               |\n|                       | Tally                              | $ 8,999.54     | 94.9           | 1.1%       | 341.66    | 53.1%               |\n|                       | Event Support                      | $ 3,000.00     | 54.8           | 0.7%       | 197.26    | 92.1%               |\n|                       | daveytea.eth                       | $ 1,000.00     | 31.6           | 0.4%       | 113.89    | 159.4%              |\n|                       | andrewpage.eth                     | $ 780.00       | 27.9           | 0.3%       | 100.58    | 180.5%              |\n| Metagov Total         |                                    | $ 237,927.35   |                |            |           |                     |\n| Immunefi Bounty       | Immunefi                           | $ 102,000.00   | 319.4          | 3.8%       | 1,150.22  | 15.8%               |\n|                       | @UGWST_COM                         | $ 75,000.00    | 273.9          | 3.3%       | 986.30    | 18.4%               |\n|                       | @navad                             | $ 7,500.00     | 86.6           | 1.0%       | 311.90    | 58.2%               |\n|                       | @Sagamore                          | $ 6,000.00     | 77.5           | 0.9%       | 278.97    | 65.1%               |\n|                       | @adhd                              | $ 5,000.00     | 70.7           | 0.8%       | 254.66    | 71.3%               |\n|                       | @solidityhaxor                     | $ 2,500.00     | 50.0           | 0.6%       | 180.07    | 100.8%              |\n|                       | @haoce505                          | $ 2,500.00     | 50.0           | 0.6%       | 180.07    | 100.8%              |\n|                       | @h4nt3rx                           | $ 2,500.00     | 50.0           | 0.6%       | 180.07    | 100.8%              |\n|                       | @austinoa012                       | $ 1,000.00     | 31.6           | 0.4%       | 113.89    | 159.4%              |\n| Immunefi Bounty Total |                                    | $ 204,000.00   |                |            |           |                     |\n| ETH Global            | TF Guo                             | $ 3,000.00     | 54.8           | 0.7%       | 197.26    | 92.1%               |\n|                       | Nikolas Lionis                     | $ 2,000.00     | 44.7           | 0.5%       | 161.06    | 112.7%              |\n|                       | Arthur Sabirzyanov                 | $ 2,000.00     | 44.7           | 0.5%       | 161.06    | 112.7%              |\n|                       | Stephan Wittig                     | $ 1,500.00     | 38.7           | 0.5%       | 139.48    | 130.2%              |\n|                       | Rashmi Abbigeri                    | $ 1,500.00     | 38.7           | 0.5%       | 139.48    | 130.2%              |\n|                       | Mehran Saliminia                   | $ 1,500.00     | 38.7           | 0.5%       | 139.48    | 130.2%              |\n|                       | Mattis Deisen                      | $ 1,500.00     | 38.7           | 0.5%       | 139.48    | 130.2%              |\n|                       | Ben Levy                           | $ 1,375.00     | 37.1           | 0.4%       | 133.55    | 136.0%              |\n|                       | Aryeh Greenberg                    | $ 1,375.00     | 37.1           | 0.4%       | 133.55    | 136.0%              |\n|                       | Shoma Shiga                        | $ 1,250.00     | 35.4           | 0.4%       | 127.33    | 142.6%              |\n|                       | Rao Araki                          | $ 1,250.00     | 35.4           | 0.4%       | 127.33    | 142.6%              |\n|                       | sudolabel \u200e                        | $ 1,000.00     | 31.6           | 0.4%       | 113.89    | 159.4%              |\n|                       | Simone Staffa                      | $ 1,000.00     | 31.6           | 0.4%       | 113.89    | 159.4%              |\n|                       | Paolo Rollo                        | $ 1,000.00     | 31.6           | 0.4%       | 113.89    | 159.4%              |\n|                       | Francesco Cirulli                  | $ 1,000.00     | 31.6           | 0.4%       | 113.89    | 159.4%              |\n|                       | Yong Feng Ng                       | $ 875.00       | 29.6           | 0.4%       | 106.53    | 170.5%              |\n|                       | Yik Kai Ng                         | $ 875.00       | 29.6           | 0.4%       | 106.53    | 170.5%              |\n|                       | Junyao Chan                        | $ 875.00       | 29.6           | 0.4%       | 106.53    | 170.5%              |\n|                       | Jing Jie Ng                        | $ 875.00       | 29.6           | 0.4%       | 106.53    | 170.5%              |\n|                       | Tom Chauveau                       | $ 750.00       | 27.4           | 0.3%       | 98.63     | 184.1%              |\n|                       | Roman GASCOIN                      | $ 750.00       | 27.4           | 0.3%       | 98.63     | 184.1%              |\n|                       | Coline SEGURET                     | $ 750.00       | 27.4           | 0.3%       | 98.63     | 184.1%              |\n|                       | Wojciech Staniszewski              | $ 500.00       | 22.4           | 0.3%       | 80.53     | 225.5%              |\n|                       | Patrick Fuchs                      | $ 500.00       | 22.4           | 0.3%       | 80.53     | 225.5%              |\n|                       | Pascal R\u00fcger                       | $ 500.00       | 22.4           | 0.3%       | 80.53     | 225.5%              |\n|                       | Luca Orbke                         | $ 500.00       | 22.4           | 0.3%       | 80.53     | 225.5%              |\n|                       | Joanna Daniluk                     | $ 500.00       | 22.4           | 0.3%       | 80.53     | 225.5%              |\n|                       | Eason Chai                         | $ 500.00       | 22.4           | 0.3%       | 80.53     | 225.5%              |\n|                       | Bart\u0142omiej Tarczy\u0144ski              | $ 500.00       | 22.4           | 0.3%       | 80.53     | 225.5%              |\n|                       | Antoni Koszowski                   | $ 500.00       | 22.4           | 0.3%       | 80.53     | 225.5%              |\n|                       | Andrzej Daniel                     | $ 500.00       | 22.4           | 0.3%       | 80.53     | 225.5%              |\n|                       | Yoshiki Takabayashi                | $ 250.00       | 15.8           | 0.2%       | 56.94     | 318.9%              |\n|                       | Shritesh Jamulkar                  | $ 250.00       | 15.8           | 0.2%       | 56.94     | 318.9%              |\n|                       | Rohit Ramesh                       | $ 250.00       | 15.8           | 0.2%       | 56.94     | 318.9%              |\n|                       | Nishen Kaushika Menerapitiyage Don | $ 250.00       | 15.8           | 0.2%       | 56.94     | 318.9%              |\n|                       | Helen Femi Williams                | $ 250.00       | 15.8           | 0.2%       | 56.94     | 318.9%              |\n|                       | Francisco Cordero                  | $ 250.00       | 15.8           | 0.2%       | 56.94     | 318.9%              |\n|                       | Danya Carolina G\u00f3mez Cant\u00fa         | $ 250.00       | 15.8           | 0.2%       | 56.94     | 318.9%              |\n|                       | Bianca Trov\u00f2                       | $ 250.00       | 15.8           | 0.2%       | 56.94     | 318.9%              |\n|                       | Bernardo Vieira                    | $ 250.00       | 15.8           | 0.2%       | 56.94     | 318.9%              |\n|                       | Adaku Agwunobi                     | $ 250.00       | 15.8           | 0.2%       | 56.94     | 318.9%              |\n| ETH Global Total      |                                    | $ 35,000.00    |                |            |           |                     |\n| Grand Total           |                                    | $ 1,286,126.10 | 8329.9         | 100%       | 30,000.00 |                     |\n\n1. Value represents the total received of all transactions\n2. Squared Weight is simply the square root of that value, which is used as a weight\n3. % of total divided that by the total weight\n4. ENS multiplies that percentage to the total budget\n5. % of value received is a comparison of the value received in USDC with the value received in ENS, with ENS at $14", "mimetype": "text/plain", "start_char_idx": 2693, "end_char_idx": 19775, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ea4f4272-86a1-482c-a11f-62f1415977e5": {"__data__": {"id_": "ea4f4272-86a1-482c-a11f-62f1415977e5", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.26.mdx", "file_name": "5.26.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.26.mdx", "header_path": "/[EP 5.26] [Executable] Implementation of EP 5.19\u2019s ENS Governance Distribution Pilot Program/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.26.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["recipients", "transaction", "individual", "group", "handle", "hedgey", "subsequent", "token", "verification", "working", "vesting", "contracts", "contract", "through", "distributions"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "77bef923da6a25731952f8a9c9b9d34897b00118", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.26.mdx", "file_name": "5.26.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.26.mdx"}, "hash": "924c1c2e73e711ccefe1310ab0632fec72af562df4e1e17c167dd9da26671f8d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d34445b3-1b53-4feb-a84e-e53762824ffa", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.26.mdx", "file_name": "5.26.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.26.mdx", "header_path": "/[EP 5.26] [Executable] Implementation of EP 5.19\u2019s ENS Governance Distribution Pilot Program/Specification/"}, "hash": "44baa24a5ae91b91d54bf4897acfd9754c417d2fcafeb3320d2c4bac57806058", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "79fd2361-da11-4749-9569-7858aba8a52e", "node_type": "1", "metadata": {"header_path": "/[EP 5.26] [Executable] Implementation of EP 5.19\u2019s ENS Governance Distribution Pilot Program/"}, "hash": "9040d915ac39abb5aeb24af59b57980c10ac4cad64c88d81112321d937a42932", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Transaction\n\n```json\n{\n  \"target\": \"0xC18360217D8F7Ab5e7c516566761Ea12Ce7F9D72\",\n  \"value\": 0,\n  \"calldata\": \"0xa9059cbb00000000000000000000000091c32893216de3ea0a55abb9851f581d4503d39b00000000000000000000000000000000000000000000065a4da25d3016c00000\"\n}\n``` ## Verification\n\n- Target: ENS token contract (0xC18360217D8F7Ab5e7c516566761Ea12Ce7F9D72)\n- Recipient: main.mg.wg.ens.eth (0x91c32893216dE3eA0a55ABb9851f581d4503d39b)\n- Amount: 30,000 ENS (30000000000000000000000 in wei)\n- Function: transfer(address,uint256)\n\n---\n\nThe Meta-governance working group will handle subsequent distributions to individual recipients through Hedgey vesting contracts following the approved allocation table.\n\nThe transaction will move the 30k $ENS to the main Meta-governance wallet. After the transaction completes, the Meta-governance working group will craft the Hedgey vesting contracts following the above allocation table.", "mimetype": "text/plain", "start_char_idx": 19777, "end_char_idx": 20035, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "73b29236-883d-40a3-a836-31eb491606de": {"__data__": {"id_": "73b29236-883d-40a3-a836-31eb491606de", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.27.mdx", "file_name": "5.27.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.27.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.27.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ability", "upgrade", "wrapper", "passed", "revoke"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f415e41f23a8bc7b2e5dca40d8848ab7b25a5c9e", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.27.mdx", "file_name": "5.27.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.27.mdx"}, "hash": "a208de0b25e710df9f64e14bcddb3800f8e359a81e11211b13d6acb1f1af2d88", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7225ef2d-6bb8-4cad-8ded-efe1a4e9862a", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "76856aa8b5602e096841504d37120a00963d5312b854b6a35c7004c65de316b9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: \"Revokes the DAO's ability to upgrade the name wrapper\"\nauthors: ['nick.eth']\nproposal:\n  tally: '40272043175867710511047990376059633000673751036364092383567949469124429500507'\n  type: 'executable'\n--- # [EP 5.27] [Executable] Revoke the DAO's ability to upgrade the name wrapper\n\n::authors\n\n| **Status**            | Passed                                                                                                                    |\n| --------------------- | ------------------------------------------------------------------------------------------------------------------------- |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/ep-5-27-executable-revoke-the-daos-ability-to-upgrade-the-name-wrapper/19920)       |\n| **Votes**             | [Agora](https://agora.ensdao.org/proposals/40272043175867710511047990376059633000673751036364092383567949469124429500507) |", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 218, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "944b1e81-e556-4171-a50a-e997bbba868d": {"__data__": {"id_": "944b1e81-e556-4171-a50a-e997bbba868d", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.27.mdx", "file_name": "5.27.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.27.mdx", "header_path": "/[EP 5.27] [Executable] Revoke the DAO's ability to upgrade the name wrapper/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.27.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["mechanism", "whereby", "malicious", "upgrade", "abstract", "control", "vulnerability", "wrapped", "could", "contains", "seize", "without", "names"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f415e41f23a8bc7b2e5dca40d8848ab7b25a5c9e", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.27.mdx", "file_name": "5.27.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.27.mdx"}, "hash": "a208de0b25e710df9f64e14bcddb3800f8e359a81e11211b13d6acb1f1af2d88", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7225ef2d-6bb8-4cad-8ded-efe1a4e9862a", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.27.mdx", "file_name": "5.27.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.27.mdx", "header_path": "/"}, "hash": "955fe9aad13d8145429800f9e1fd10ab843837989167f67ab23fa6f48ad22c23", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d11ca0ba-a642-49d8-9ba9-369809081384", "node_type": "1", "metadata": {"header_path": "/[EP 5.27] [Executable] Revoke the DAO's ability to upgrade the name wrapper/"}, "hash": "ae468fb277d34f1460054fee67870aba8cb75d6e23c2ee8a241d10ad7b9bdd32", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Abstract\n\nThe Name Wrapper's upgrade mechanism contains a vulnerability whereby a malicious DAO could use the upgrade mechanism to seize control of wrapped names without the owner's consent, documented [here](https://discuss.ens.domains/t/security-advisory-a-malicious-dao-update-could-reduce-the-registration-duration-of-registered-eth-2lds/17576/1).\n\nSince the v2 migration plan makes the upgrade mechanism obsolete, we now know the mechanism will never be required. This EP proposes to remove the DAO's ability to upgrade the name wrapper.", "mimetype": "text/plain", "start_char_idx": 911, "end_char_idx": 1456, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d11ca0ba-a642-49d8-9ba9-369809081384": {"__data__": {"id_": "d11ca0ba-a642-49d8-9ba9-369809081384", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.27.mdx", "file_name": "5.27.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.27.mdx", "header_path": "/[EP 5.27] [Executable] Revoke the DAO's ability to upgrade the name wrapper/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.27.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["remove", "specify", "ability", "gives", "control", "upgrade", "address", "wrapper", "metadata", "admin", "since", "former", "while", "preserving", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f415e41f23a8bc7b2e5dca40d8848ab7b25a5c9e", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.27.mdx", "file_name": "5.27.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.27.mdx"}, "hash": "a208de0b25e710df9f64e14bcddb3800f8e359a81e11211b13d6acb1f1af2d88", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "944b1e81-e556-4171-a50a-e997bbba868d", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.27.mdx", "file_name": "5.27.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.27.mdx", "header_path": "/[EP 5.27] [Executable] Revoke the DAO's ability to upgrade the name wrapper/"}, "hash": "67c6d73a41c8a9e7b3a95bba6ef94513936dbe6e8b1f2bbc6f32f63b36f44a00", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\nAdmin control over the name wrapper gives the DAO two functions: it can set the upgrade contract, and it can specify the address of the metadata contract. Since we want to remove the former ability while preserving the latter, we propose the following sequence of actions:\n\n1. Deploy a new metadata contract, identical to the current one but using a proxy. The proxy instance should be owned by the DAO to provide for future metadata upgrades.\n2. Update the name wrapper to reference the new metadata contract instead of the old one.\n3. Revoke admin ownership over the name wrapper.\n\nA new metadata service has been deployed at 0x806f84F3789f51352C1B0aB3fFa192665d283808, and a transparent proxy was deployed in transaction 0xd0aca1f2efb2db5e3d494649004e341decb2e94a1f30e94f301b6626702ee4c8, at address 0xabb76d7e79de010117b147761013f11630a6799f, with the initial implementation set to the above address, and the owner set to wallet.ensdao.eth. The admin contract for this proxy is at 0xeae9309ddb1aadb4cf1ebad5e51aef999833a992.\n\nThe executable component of this proposal sets the metadata service address on the name wrapper to the above proxy, then revokes ownership over it.", "mimetype": "text/plain", "start_char_idx": 1458, "end_char_idx": 2653, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "79475dbc-f58f-4122-bb14-a7136b528ebf": {"__data__": {"id_": "79475dbc-f58f-4122-bb14-a7136b528ebf", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.28.mdx", "file_name": "5.28.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.28.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.28.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["passed", "ongoing", "reimbursement", "legal"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "94a06ae0539ae6f5553efe2daa0bfacf52115086", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.28.mdx", "file_name": "5.28.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.28.mdx"}, "hash": "cccaed458061c28c54a2abdefe3de9900c6b20964387c278c15931fc77512325", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bf525ebe-1cc1-4899-a61b-d5ed7ea278c3", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "c72a9f1d3b3054df67731c2b3ee93149249a5defa2f76bd479b030776522fc53", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: 'Reimburse eth.limo for ongoing legal fees.'\nauthors: ['brantly.eth']\nproposal:\n  tally: '15212507956777005315602309329914215169878587763966450377165643673108805753590'\n  type: 'executable'\n--- # [EP 5.28] [Executable] Reimbursement of eth.limo's ongoing legal fees\n\n::authors\n\n| **Status**            | Passed                                                                                                                    |\n| --------------------- | ------------------------------------------------------------------------------------------------------------------------- |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/ep-5-28-executable-reimbursement-of-eth-limo-s-ongoing-legal-fees/20004)            |\n| **Votes**             | [Agora](https://agora.ensdao.org/proposals/15212507956777005315602309329914215169878587763966450377165643673108805753590) |", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 210, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "722d5e1c-e793-4c06-8736-5b29bbaef7ec": {"__data__": {"id_": "722d5e1c-e793-4c06-8736-5b29bbaef7ec", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.28.mdx", "file_name": "5.28.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.28.mdx", "header_path": "/[EP 5.28] [Executable] Reimbursement of eth.limo's ongoing legal fees/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.28.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["description", "reimburse", "legal", "proposal", "continuously", "costs", "public", "ongoing", "related", "operation", "gateway", "background", "summary", "goods", "human"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "94a06ae0539ae6f5553efe2daa0bfacf52115086", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.28.mdx", "file_name": "5.28.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.28.mdx"}, "hash": "cccaed458061c28c54a2abdefe3de9900c6b20964387c278c15931fc77512325", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bf525ebe-1cc1-4899-a61b-d5ed7ea278c3", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.28.mdx", "file_name": "5.28.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.28.mdx", "header_path": "/"}, "hash": "550d27b120eafe2fe9f98c7aa1945bc190213c9e5f283104e8aa1f8f109a2032", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "be9812b7-347f-4820-acd1-b56b2bb1842c", "node_type": "1", "metadata": {"header_path": "/[EP 5.28] [Executable] Reimbursement of eth.limo's ongoing legal fees/Description/"}, "hash": "a094343ae06b0d2d9d76e7644ad07a401e98015fcfee26ed1b91be8f8807d3eb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Description ### Summary\n\nThis proposal aims to reimburse eth.limo for ongoing legal fees related to the operation of the eth.limo/eth.link gateway services. ### Background #### The Human Costs of Public Goods\n\nAt eth.limo we continuously strive to deliver a high quality ENS gateway experience. We understand the critical utility that our service provides and we have dedicated countless hours to developing and maintaining the gateway infrastructure that powers thousands of dApps and dWebsites alike.\n\nSpeaking beyond purely technical requirements, one aspect of operating eth.limo that is often overlooked is the human cost. We are a small team with limited resources who are dedicated 24/7 to ensure that we respond to support requests in a timely fashion, work with other cutting edge ecosystem projects for integrations, and provide on-call availability for any server-side issues that might arise. In addition, we are constantly handling abuse complaints and other matters that often go unmentioned.\n\nWe believe in public goods and the utility they provide, which is why we have sacrificed time with friends and family in order to fulfil our obligations to the ENS and broader Web3 communities by constantly working to ensure a stable and available user experience.", "mimetype": "text/plain", "start_char_idx": 897, "end_char_idx": 911, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c4f1f27b-c322-4022-a971-ed5ae05c2778": {"__data__": {"id_": "c4f1f27b-c322-4022-a971-ed5ae05c2778", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.28.mdx", "file_name": "5.28.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.28.mdx", "header_path": "/[EP 5.28] [Executable] Reimbursement of eth.limo's ongoing legal fees/Description/Background/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.28.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["infrastructure", "bridging", "operating", "frontlines", "being", "legal", "costs", "public", "which", "unique", "enforcement", "goods", "comes"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "94a06ae0539ae6f5553efe2daa0bfacf52115086", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.28.mdx", "file_name": "5.28.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.28.mdx"}, "hash": "cccaed458061c28c54a2abdefe3de9900c6b20964387c278c15931fc77512325", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4a42a0a7-a93c-4bb1-9e2c-9ded39142fdd", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.28.mdx", "file_name": "5.28.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.28.mdx", "header_path": "/[EP 5.28] [Executable] Reimbursement of eth.limo's ongoing legal fees/Description/Background/"}, "hash": "989cdf3ce9ae0812792c3bba97f477f15fbe449cfbd0e0c2a4fca58cecd94916", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "115a57ee-a2b4-4d89-9423-b05de405e7ab", "node_type": "1", "metadata": {"header_path": "/[EP 5.28] [Executable] Reimbursement of eth.limo's ongoing legal fees/"}, "hash": "571357abb6bc906ce5b739e7741554b42bca2039a7e3bf7dcd17421adb3b6fb7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "#### The Legal Costs of Public Goods\n\nOperating public infrastructure comes with a unique set of challenges, many of which we were not expecting, such as enforcement and dispute-related legal fees. Being on the frontlines of bridging Web2 \u2192 Web3 means that we are often the first point of contact for law enforcement, abuse complaints, and legal and regulatory requests. As one can imagine, this quickly begins to take a toll on our financial resources and mental health.\n\nAt present, eth.limo has been labouring under US federal requests, as a third-party, that has dragged on for months and will likely continue to do so well into 2025. We are currently unable to provide further details regarding the nature of this matter, but rest assured, as soon as we are permitted to, we will provide a more fulsome summary to the Web3 community.\n\nAs a US company, we are legally required to cooperate with the US Federal Government in response to certain types of lawful requests. Such required compliance has proven to be an extreme financial burden in the form of fees and expenses from our lawyers and emotional distress not just on us individually, but to our families as well.\n\nWe negotiated significant discounts from our counsel, who are well-versed in Web3, and who recognize the importance of eth.limo and the significant public good service it provides. At present, we have no way to anticipate expected future legal costs associated with this specific set of legal requests, nor are we able to forecast any additional legal matters or proceedings that may arise as a result of maintaining eth.limo as a public good.\n\nThis has the indirect effect of limiting our ability to grow and scale the eth.limo service, as well as to pursue future plans relating to additional integrations and roadmap efforts. To put this into perspective, we have already spent close to $250k USD in legal fees over the past few months. Without additional funding, this very likely could consume our remaining financial resources, leaving us without the ability to continue to operate eth.limo as a public good.", "mimetype": "text/plain", "start_char_idx": 2177, "end_char_idx": 4267, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "115a57ee-a2b4-4d89-9423-b05de405e7ab": {"__data__": {"id_": "115a57ee-a2b4-4d89-9423-b05de405e7ab", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.28.mdx", "file_name": "5.28.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.28.mdx", "header_path": "/[EP 5.28] [Executable] Reimbursement of eth.limo's ongoing legal fees/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.28.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["amount", "transaction", "treasury", "initiate", "proposal", "legal", "transfer", "represents", "ongoing", "executable", "links", "related", "operation", "gateway", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "94a06ae0539ae6f5553efe2daa0bfacf52115086", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.28.mdx", "file_name": "5.28.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.28.mdx"}, "hash": "cccaed458061c28c54a2abdefe3de9900c6b20964387c278c15931fc77512325", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c4f1f27b-c322-4022-a971-ed5ae05c2778", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.28.mdx", "file_name": "5.28.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.28.mdx", "header_path": "/[EP 5.28] [Executable] Reimbursement of eth.limo's ongoing legal fees/Description/Background/"}, "hash": "b8a9bacd8f39bb77b953c13c6f196e86c4c9af9e84e55e568cb46bc000b34534", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1626b782-c673-4bcb-b2ef-e8688f05513a", "node_type": "1", "metadata": {"header_path": "/[EP 5.28] [Executable] Reimbursement of eth.limo's ongoing legal fees/"}, "hash": "6e7098b81abc317255ca6bd049e49dc87591c8f616686b261793d2298d368373", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Links\n\n[Temperature Check](https://discuss.ens.domains/t/temp-check-reimbursement-of-eth-limos-ongoing-legal-fees/19976/1) ## Specification\n\nThis executable proposal will initiate a transfer of 240,632.38 USDC from the ENS DAO treasury to ethdotlimo.eth. This amount represents the ongoing legal fees related to the operation of the eth.limo/eth.link gateway services. ### Transaction Details\n\n- **From**: ENS DAO Treasury (0xFe89cc7aBB2C4183683ab71653C4cdc9B02D44b7)\n- **To**: USDC Token Contract (0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48)\n- **Recipient**: ethdotlimo.eth (0xB352bB4E2A4f27683435f153A259f1B207218b1b)\n- **Amount**: 240,632.38 USDC (240632380000 considering USDC's 6 decimal places)\n- **Purpose**: The reimbursement of eth.limo for ongoing legal fees related to the operation of the eth.limo/eth.link gateway services.\n\nThis transaction calls the `transfer` function of the USDC contract, transferring 240,632.38 USDC to eth.limo's address.", "mimetype": "text/plain", "start_char_idx": 4269, "end_char_idx": 4394, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "51132b34-8edc-4fc0-9584-6bbeaad426d8": {"__data__": {"id_": "51132b34-8edc-4fc0-9584-6bbeaad426d8", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.28.mdx", "file_name": "5.28.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.28.mdx", "header_path": "/[EP 5.28] [Executable] Reimbursement of eth.limo's ongoing legal fees/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.28.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["calldata", "acknowledges", "enables", "providing", "approving", "access", "legal", "public", "rationale", "importance", "reimbursement", "users", "continue", "gateway", "operate"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "94a06ae0539ae6f5553efe2daa0bfacf52115086", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.28.mdx", "file_name": "5.28.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.28.mdx"}, "hash": "cccaed458061c28c54a2abdefe3de9900c6b20964387c278c15931fc77512325", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fe3bc4b7-5f7e-4f97-bbf9-b239a7b4ff6e", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.28.mdx", "file_name": "5.28.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.28.mdx", "header_path": "/[EP 5.28] [Executable] Reimbursement of eth.limo's ongoing legal fees/Specification/"}, "hash": "49df16d81e193a5680217fed02433617e466dccd34c98ee065efcfc3e2e2eb6e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "535295a5-c8ed-486e-a9e8-ff50d00e6ebb", "node_type": "1", "metadata": {"header_path": "/[EP 5.28] [Executable] Reimbursement of eth.limo's ongoing legal fees/Calldata/"}, "hash": "76637ea95bca2696196b36ab4861f9a1c4e4ab111a9aba96187d1ea91ecaae0c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Calldata\n\n```json\n{\n  \"target\": \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\",\n  \"value\": 0,\n  \"calldata\": \"0xa9059cbb000000000000000000000000b352bb4e2a4f27683435f153a259f1b207218b1b0000000000000000000000000000000000000000000000000000003806ceba60\"\n}\n``` ### Rationale\n\nBy approving this compensation, ENS DAO acknowledges the importance of providing eth.limo with reimbursement of its legal fees so it can continue to operate a free and public ENS gateway that enables users to access Ethereum-native dApps and content.", "mimetype": "text/plain", "start_char_idx": 5234, "end_char_idx": 5489, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c4365b99-44f9-419e-aea6-aa56a50c643f": {"__data__": {"id_": "c4365b99-44f9-419e-aea6-aa56a50c643f", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.29.mdx", "file_name": "5.29.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.29.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.29.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["request", "rollout", "network", "ensip", "gateways", "unruggable", "funding", "build", "operate", "supporting"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c8b0560383b2ae5769173676f0c6e4353f4b9bc7", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.29.mdx", "file_name": "5.29.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.29.mdx"}, "hash": "a5353493585497679266c5466be09aa931b92d24a8a77f7141a3c93e25240d4e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9dcd092e-bec4-4c74-afc8-7ae7f2c7178e", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "d2f15ff85a1aac1a49d450376972a495f4d90ec415ac863aba977e09dfd6e637", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: 'Fund Unruggable to build and operate a network of gateways supporting the rollout of ENSIP 19.'\nauthors: ['brantly.eth']\nproposal:\n  tally: '13214174724111749338017943143826453367599509196993220699255450633508989705578'\n  type: 'executable'\n--- # [EP 5.29] Funding request for Unruggable to build and operate a network of gateways supporting the rollout of ENSIP-19: EVM-chain Reverse Resolution\n\n::authors\n\n| **Status**            | Rejected                                                                                                                                                                                                  |\n| --------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/temp-check-ep-5-29-funding-request-for-unruggable-to-build-and-operate-a-network-of-gateways-supporting-the-rollout-of-ensip-19-evm-chain-reverse-resolution/19902) |\n| **Votes**             | [Agora](https://agora.ensdao.org/proposals/13214174724111749338017943143826453367599509196993220699255450633508989705578)                                                                                 |", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 262, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b29aafc9-acb3-4cab-830e-e1f39e4054ac": {"__data__": {"id_": "b29aafc9-acb3-4cab-830e-e1f39e4054ac", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.29.mdx", "file_name": "5.29.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.29.mdx", "header_path": "/[EP 5.29] Funding request for Unruggable to build and operate a network of gateways supporting the rollout of ENSIP-19: EVM-chain Reverse Resolution/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.29.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["development", "research", "rollout", "production", "network", "these", "requesting", "reverse", "resolution", "funding", "gateways", "support", "continue", "summary", "build"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c8b0560383b2ae5769173676f0c6e4353f4b9bc7", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.29.mdx", "file_name": "5.29.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.29.mdx"}, "hash": "a5353493585497679266c5466be09aa931b92d24a8a77f7141a3c93e25240d4e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9dcd092e-bec4-4c74-afc8-7ae7f2c7178e", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.29.mdx", "file_name": "5.29.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.29.mdx", "header_path": "/"}, "hash": "9602f35fde028404a1ad77aad0aad374afda28dd040429e6cb3b46bab8db15ef", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3fea145f-779d-46b7-b1d3-6ae865a5feef", "node_type": "1", "metadata": {"header_path": "/[EP 5.29] Funding request for Unruggable to build and operate a network of gateways supporting the rollout of ENSIP-19: EVM-chain Reverse Resolution/"}, "hash": "8bb2350d502dcc0a8a92ba86d8a924a2ed93c99717016fc81ba1133c2fb0721b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Summary\n\nWe are requesting funding from the ENS DAO to build a production network of gateways. These gateways will support the rollout of reverse resolution for **Arbitrum, Base, Linea, Optimism, and Scroll.** We also plan to continue our research and development on the ENS protocol and actively contribute to the ENS ecosystem with a focus on resolving names from L2s. Our funding request focuses on infrastructure, talent acquisition and retention, and ongoing development to sustain this critical ENS infrastructure.", "mimetype": "text/plain", "start_char_idx": 1348, "end_char_idx": 1871, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3fea145f-779d-46b7-b1d3-6ae865a5feef": {"__data__": {"id_": "3fea145f-779d-46b7-b1d3-6ae865a5feef", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.29.mdx", "file_name": "5.29.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.29.mdx", "header_path": "/[EP 5.29] Funding request for Unruggable to build and operate a network of gateways supporting the rollout of ENSIP-19: EVM-chain Reverse Resolution/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.29.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["feedback", "stream", "tokens", "gives", "request", "consideration", "proposal", "requesting", "annually", "executable", "years", "constitutes"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c8b0560383b2ae5769173676f0c6e4353f4b9bc7", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.29.mdx", "file_name": "5.29.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.29.mdx"}, "hash": "a5353493585497679266c5466be09aa931b92d24a8a77f7141a3c93e25240d4e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b29aafc9-acb3-4cab-830e-e1f39e4054ac", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.29.mdx", "file_name": "5.29.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.29.mdx", "header_path": "/[EP 5.29] Funding request for Unruggable to build and operate a network of gateways supporting the rollout of ENSIP-19: EVM-chain Reverse Resolution/"}, "hash": "f4e4ad588bba9dc7684d1edb993911c837b9770688ea0c4a760b550c9138aee2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "54dbc135-1b4b-4d99-973d-d2bbc2d12918", "node_type": "1", "metadata": {"header_path": "/[EP 5.29] Funding request for Unruggable to build and operate a network of gateways supporting the rollout of ENSIP-19: EVM-chain Reverse Resolution/"}, "hash": "0584a1bd05aa03756d8c0aa121326afe1604f234f07078e2af85a30cf8864603", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Request\n\nWe are requesting **$1,200,000 USDC annually and 24,000 ENS tokens (vested over 2 years with a one year cliff).**\n\nThis request gives consideration to the feedback on our [Temp Check](https://discuss.ens.domains/t/temp-check-ep-x-x-funding-request-for-unruggable-to-build-and-operate-a-network-of-gateways-supporting-the-rollout-of-ensip-19-evm-chain-reverse-resolution/19902) on the ENS DAO forum. ## Executable Code\n\nThis proposal constitutes two streams:\n\n- A stream of **$1,200,000 USDC** **per year** (12 months).\n- A stream of **24,000 ENS** tokens over **2 years** (24 months) with a **1 year cliff** (12 months).\n\n![hedgey-vesting-graph.png](https://raw.githubusercontent.com/unruggable-labs/unruggable-stream/9af745ca74b3daf3b87f55014c7f4e4e307c4ffb/images/hedgey-stream-graph.png)\n\nBoth streams are controlled directly by the ENS DAO Wallet. They can be cancelled at any time with a DAO vote should Unruggable not fulfil their promises.\n\nThis calldata has been generated using thIs codebase: [](https://github.com/unruggable-labs/unruggable-stream/tree/dce44e0fc3a461f4f250c436101231e553829e03)[https://github.com/unruggable-labs/unruggable-stream/tree/3d3c49980defbab315b6e09385b22946dd9729b0](https://github.com/unruggable-labs/unruggable-stream/tree/3d3c49980defbab315b6e09385b22946dd9729b0), which generates and simulates execution of the below listed transactions.\n\nTenderly simulation links are listed below.", "mimetype": "text/plain", "start_char_idx": 1873, "end_char_idx": 2283, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "85d5275b-38c3-452d-b373-dc6e162c4579": {"__data__": {"id_": "85d5275b-38c3-452d-b373-dc6e162c4579", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.29.mdx", "file_name": "5.29.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.29.mdx", "header_path": "/[EP 5.29] Funding request for Unruggable to build and operate a network of gateways supporting the rollout of ENSIP-19: EVM-chain Reverse Resolution/Executable Code/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.29.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["commence", "stream", "nearly", "description", "streams", "platform", "tested", "streaming", "superfluid", "tried", "initialising", "involves", "service"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c8b0560383b2ae5769173676f0c6e4353f4b9bc7", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.29.mdx", "file_name": "5.29.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.29.mdx"}, "hash": "a5353493585497679266c5466be09aa931b92d24a8a77f7141a3c93e25240d4e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "54dbc135-1b4b-4d99-973d-d2bbc2d12918", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.29.mdx", "file_name": "5.29.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.29.mdx", "header_path": "/[EP 5.29] Funding request for Unruggable to build and operate a network of gateways supporting the rollout of ENSIP-19: EVM-chain Reverse Resolution/"}, "hash": "0c78f557df3661261033165163895e76c0eeded99bed56acb9e527590e7c1ecd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6dc6f0fb-1629-4538-a002-5b728d576eae", "node_type": "1", "metadata": {"header_path": "/[EP 5.29] Funding request for Unruggable to build and operate a network of gateways supporting the rollout of ENSIP-19: EVM-chain Reverse Resolution/Executable Code/"}, "hash": "7deb02dc804c75f008cb05b9060f6cca5c9658ab05be34020a1e0d46ed373289", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Stream 1 - $1,200,000 USDC.\n\n**Platform:** [Superfluid](https://www.superfluid.finance/).\n\nSuperfluid is a tried and tested platform for streaming funds. It has been used for nearly a year now for [**[EP5.2] [Executable] Commence Streams for Service Providers.**](https://www.tally.xyz/gov/ens/proposal/63865530602418424570813160277709124551851041237648860550576561576702951975816)\n\nInitialising the Superfluid stream involves **4 transactions**:\n\n| Description                                                                                                                             | Target Name | Target Address                                                                                                        | Function Signature                                                                           | Function Arguments                                                                                                | Calldata [1]                                                                                                                                                                                                 | Simulation                                                                               |\n| --------------------------------------------------------------------------------------------------------------------------------------- | ----------- | --------------------------------------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | ---------------------------------------------------------------------------------------- |\n| This function approves the Super USDCx contract to spend $100,000 of USDC on behalf of the sender, the ENS DAO wallet.                  | USDC        | [0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48](https://etherscan.io/address/0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48) | `function approve(address spender, uint256 amount) external returns (bool)`                  | `[\"0x1BA8603DA702602A8657980e825A6DAa03Dee93a\", 100000000000]`                                                    | `0x095ea7b30000000000000000000000001ba8603da702602a8657980e825a6daa03dee93a000000000000000000000000000000000000000000000000000000174876e800`                                                                 | [Simulation](https://www.tdly.co/shared/simulation/7a33ba80-767d-4764-891f-b93690ad7b25) |\n| This function 'upgrades' $100,000 USDC from the ENS DAO wallet/'Timelock' to USDCx.                                                     | USDCx       | [0x1BA8603DA702602A8657980e825A6DAa03Dee93a](https://etherscan.io/address/0x1BA8603DA702602A8657980e825A6DAa03Dee93a) | `function upgrade(uint256 amount)`                                                           | `[100000000000]`                                                                                                  | `0x45977d03000000000000000000000000000000000000000000000000000000174876e800`                                                                                                                                 | [Simulation](https://www.tdly.co/shared/simulation/d564e4b9-3c5d-4e90-91f7-9ae78e32fbd1) |\n| This function sets up the stream to the Unruggable multisig wallet. [2]                                                                 | Superfluid  | [0xcfA132E353cB4E398080B9700609bb008eceB125](https://etherscan.io/address/0xcfA132E353cB4E398080B9700609bb008eceB125) | `function setFlowrate(address tokenAddress, address receiverAddress, int96 amountPerSecond)` | `[\"0x1BA8603DA702602A8657980e825A6DAa03Dee93a\", \"0x64Ca550F78d6Cc711B247319CC71A04A166707Ab\", 38026517538495352]` | `0x57e6aa360000000000000000000000001ba8603da702602a8657980e825a6daa03dee93a00000000000000000000000064ca550f78d6cc711b247319cc71a04a166707ab000000000000000000000000000000000000000000000000008718ea8ded5b78` | [Simulation](https://www.tdly.co/shared/simulation/725d872b-8174-4fa5-a60b-5d45eea1812f) |\n| This function increases the amount of USDC (owned by the ENS DAO wallet/Timelock) that the Autowrap strategy contract is able to spend. | USDC        | [0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48](https://etherscan.io/address/0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48) | `function increaseAllowance(address spender, uint256 increment)`                             | `[\"0x1D65c6d3AD39d454Ea8F682c49aE7744706eA96d\", 1100000000000]`                                                   | `0x395093510000000000000000000000001d65c6d3ad39d454ea8f682c49ae7744706ea96d000000000000000000000000000000000000000000000000000001001d1bf800`                                                                 | [Simulation](https://www.tdly.co/shared/simulation/d94d705b-0025-4500-b5d0-e4eba5221abe) |", "mimetype": "text/plain", "start_char_idx": 3312, "end_char_idx": 8461, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6dc6f0fb-1629-4538-a002-5b728d576eae": {"__data__": {"id_": "6dc6f0fb-1629-4538-a002-5b728d576eae", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.29.mdx", "file_name": "5.29.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.29.mdx", "header_path": "/[EP 5.29] Funding request for Unruggable to build and operate a network of gateways supporting the rollout of ENSIP-19: EVM-chain Reverse Resolution/Executable Code/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.29.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["stream", "tokens", "ecosystem", "delegateable", "description", "hedgey", "allocating", "utilised", "deserving", "target", "initialising", "involves"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c8b0560383b2ae5769173676f0c6e4353f4b9bc7", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.29.mdx", "file_name": "5.29.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.29.mdx"}, "hash": "a5353493585497679266c5466be09aa931b92d24a8a77f7141a3c93e25240d4e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "85d5275b-38c3-452d-b373-dc6e162c4579", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.29.mdx", "file_name": "5.29.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.29.mdx", "header_path": "/[EP 5.29] Funding request for Unruggable to build and operate a network of gateways supporting the rollout of ENSIP-19: EVM-chain Reverse Resolution/Executable Code/"}, "hash": "c0ac72739465a6183dab45d32af46e9872963bcccccb9fb4098ccd64eaf04c56", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Stream 2 - 24,000 ENS\n\nPlatform: [Hedgey](https://hedgey.finance/)\n\nHedgey has been utilised by the ENS DAO for allocating delegateable ENS tokens to deserving ecosystem participants.\n\nInitialising the Hedgey stream involves **2 transactions**:\n\n| Description                                                                       | Target Name          | Target Address                                                                                                        | Function Signature                                                                                                                                                                                                                              | Function Arguments                                                                                                                                                                                                                                                                                    | Calldata [1]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 | Simulation                                                                               |\n| --------------------------------------------------------------------------------- | -------------------- | --------------------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- || ---------------------------------------------------------------------------------------- |\n| Approve the `BatchPlanner` to spend 24,000 ENS tokens owned by the ENS DAO Wallet | ENS Token            | [0xC18360217D8F7Ab5e7c516566761Ea12Ce7F9D72](https://etherscan.io/address/0xC18360217D8F7Ab5e7c516566761Ea12Ce7F9D72) | `function approve(address spender, uint256 amount) external returns (bool)`                                                                                                                                                                     | `[ \"0x3466EB008EDD8d5052446293D1a7D212cb65C646\", 24000000000000000000000 ]`                                                                                                                                                                                                                           | `0x095ea7b30000000000000000000000003466eb008edd8d5052446293d1a7d212cb65c6460000000000000000000000000000000000000000000005150ae84a8cdf000000`| [Simulation](https://www.tdly.co/shared/simulation/82838efa-2dda-4660-abf7-991f2787388a) |\n| Create the Vesting Plan. Tokens vested over 24 months, with a 12 month cliff. [3] | Hedgey Batch Planner | [0x3466EB008EDD8d5052446293D1a7D212cb65C646](https://etherscan.io/address/0x3466EB008EDD8d5052446293D1a7D212cb65C646) | `function batchVestingPlans(address locker, address token, uint256 totalAmount,(address recipient, uint256 amount, uint256 start, uint256 cliff, uint256 rate)[], uint256 period, address vestingAdmin, bool adminTransferOBO, uint8 mintType)` | `[\"0x1bb64AF7FE05fc69c740609267d2AbE3e119Ef82\", \"0xC18360217D8F7Ab5e7c516566761Ea12Ce7F9D72\", 24000000000000000000000, [[\"0x64Ca550F78d6Cc711B247319CC71A04A166707Ab\", 24000000000000000000000, 1735065935, 1766601935, 380517503805175]], 1, \"0xFe89cc7aBB2C4183683ab71653C4cdc9B02D44b7\", true, 4]` | `0x94d37b5a0000000000000000000000001bb64af7fe05fc69c740609267d2abe3e119ef82000000000000000000000000c18360217d8f7ab5e7c516566761ea12ce7f9d720000000000000000000000000000000000000000000005150ae84a8cdf00000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000fe89cc7abb2c4183683ab71653c4cdc9b02d44b700000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000100000000000000000000000064ca550f78d6cc711b247319cc71a04a166707ab0000000000000000000000000000000000000000000005150ae84a8cdf00000000000000000000000000000000000000000000000000000000000000676b014f00000000000000000000000000000000000000000000000000000000694c34cf00000000000000000000000000000000000000000000000000015a1422a526f7` | [Simulation](https://www.tdly.co/shared/simulation/d33f9323-8ec0-4402-a458-265b7fa546f7) |\n\n[1] You can deep dive into this calldata at the following link: [https://ethtools.com/calldata-collections/unruggable-executable-proposal](https://ethtools.com/calldata-collections/unruggable-executable-proposal)\n\n[2] `38026517538495352` represents $0.038.. USDC per second noting that USDC has 18 decimals and there are `31556926` seconds in a year.\n\n[3] `period`, and `mintType` arguments are taken from the Hedgey documentation: [https://hedgey.gitbook.io/hedgey-community-docs/for-developers/technical-documentation/token-vesting/integration-and-direct-contract-interactions](https://hedgey.gitbook.io/hedgey-community-docs/for-developers/technical-documentation/token-vesting/integration-and-direct-contract-interactions)", "mimetype": "text/plain", "start_char_idx": 8463, "end_char_idx": 16516, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3fbf8dd3-e144-4cbd-a9c4-374fa7342e64": {"__data__": {"id_": "3fbf8dd3-e144-4cbd-a9c4-374fa7342e64", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.3.mdx", "file_name": "5.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.3.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.3.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["consider", "determine", "litigation", "settlement", "legal", "expenses", "reimbursement", "approved", "steps"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "932a996be9338bb545c634b1582f53802d1435d4", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.3.mdx", "file_name": "5.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.3.mdx"}, "hash": "5bd58e406dd032a329aa1f9cf5a28c9c438504bd1879187fb0422275e5f1b027", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bdf98936-b4dd-4d9f-949e-45384fa8a283", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "3438b85db08b80fa725007f153abfb0226f639fa33572259a3342ce240a49574", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: \"Decide ENS Labs' next steps in the eth.link litigation, and consider reimbursement for ENS Labs' legal expenses in this case.\"\nauthors: ['arachnid']\nproposal:\n  snapshot: '0x456ccb438eed5d189cbe51e5e36a88d2bb4dc0c61f12f6d9e310a7ba4798d5fc'\n  type: 'social'\n--- # [EP5.3] [Social] Determine ENS Labs' next steps in eth.link litigation\n\n::authors\n\n| **Status**            | Approved $300k settlement                                                                                                |\n| --------------------- | ------------------------------------------------------------------------------------------------------------------------ |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/ep5-2-social-determine-ens-labs-next-steps-in-eth-link-litigation/18756)           |\n| **Votes**             | [Snapshot](https://snapshot.box/#/s:ens.eth/proposal/0x456ccb438eed5d189cbe51e5e36a88d2bb4dc0c61f12f6d9e310a7ba4798d5fc) |", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 278, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9963b80e-f995-4f7d-b28a-006fdd14b56c": {"__data__": {"id_": "9963b80e-f995-4f7d-b28a-006fdd14b56c", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.3.mdx", "file_name": "5.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.3.mdx", "header_path": "/[EP5.3] [Social] Determine ENS Labs' next steps in eth.link litigation/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.3.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ethereum", "delegated", "purpose", "virgil", "operating", "abstract", "providing", "since", "access", "kindly", "public", "gateway", "including", "largest", "projects"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "932a996be9338bb545c634b1582f53802d1435d4", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.3.mdx", "file_name": "5.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.3.mdx"}, "hash": "5bd58e406dd032a329aa1f9cf5a28c9c438504bd1879187fb0422275e5f1b027", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bdf98936-b4dd-4d9f-949e-45384fa8a283", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.3.mdx", "file_name": "5.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.3.mdx", "header_path": "/"}, "hash": "f04f0cab7e0d6f8f10d359807b6c77c10b1d4aa41e9c08d8cab0d28b3bd6b86e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bb22f620-a201-4c47-9856-300846ef632f", "node_type": "1", "metadata": {"header_path": "/[EP5.3] [Social] Determine ENS Labs' next steps in eth.link litigation/"}, "hash": "237a0298a0752b30152788c45a888410e1428e55bcd713a6da53db201b6c54af", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Abstract\n\nSince 2017, ENS Labs has been operating eth.link as a public gateway for the Ethereum community, providing access to ENS+IPFS sites. Eth.link has been used by some of the largest projects in the space, including Uniswap.\n\nEth.link was kindly delegated to ENS Labs for this purpose by its owner, Virgil Griffith. In August 2022, a dispute arose between ENS Labs, Dynadot, GoDaddy, and Manifold Finance about ownership of eth.link after the transfer and auction of the domain without ENS' consent. The highest bidder for eth.link at the auction was Manifold Finance, who expressed their intention to [operate the service themselves](https://twitter.com/foldfinance/status/1566200320375476225). A full recitation of the facts surrounding the dispute can be found within [the complaint that ENS Labs filed](https://drive.google.com/file/d/1951CeiKQZ4jQvcpjKU53BnugVedIf8go/view?usp=sharing) in September 2022.\n\nBefore the domain could be transferred, ENS Labs and Virgil successfully obtained a preliminary injunction from a federal district court judge in Phoenix, Arizona. The Court ordered that Dynadot had to immediately return eth.link to ENS Labs. Since then, this litigation has been proceeding slowly through the courts. ENS Labs had to enforce the preliminary injunction as to Dynadot and Manifold Finance exited the lawsuit on jurisdictional grounds. Settlement discussions between the parties indicated that Manifold Finance should be included in any global settlement because of its potential claims to eth.link and against Dynadot.\n\nRecently, Manifold Finance has extended a settlement offer. They are demanding $300,000, along with confidentiality and non-disparagement clauses. In return, they are offering an allparties settlement, which would result in the dismissal of the case and ENS Labs retaining the eth.link domain name.\n\nENS Labs believes that this is the appropriate juncture to solicit the DAO's input on how to proceed with the litigation. We are thus asking the DAO to instruct ENS Labs on the next steps to take in this case, whether that be agreeing to the settlement, offering a compromise amount, continuing the lawsuit, or dismissing the matter altogether, which would relinquish ENS Labs' possession of eth.link. Thus far, ENS Labs has been funding this litigation from its own finances. Our expenses so far amount to approximately $750,000. Continuing the case is likely to incur substantial additional costs.\n\nFurther, given the criticality of eth.link to the ENS ecosystem, we would like to request reimbursement from the DAO for the legal fees incurred in protecting possession of eth.link.", "mimetype": "text/plain", "start_char_idx": 962, "end_char_idx": 3600, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bb22f620-a201-4c47-9856-300846ef632f": {"__data__": {"id_": "bb22f620-a201-4c47-9856-300846ef632f", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.3.mdx", "file_name": "5.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.3.mdx", "header_path": "/[EP5.3] [Social] Determine ENS Labs' next steps in eth.link litigation/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.3.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["approval", "independent", "proposed", "legal", "involved", "expenses", "offering", "reimbursing", "specification", "approve", "compromise", "continuing"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "932a996be9338bb545c634b1582f53802d1435d4", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.3.mdx", "file_name": "5.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.3.mdx"}, "hash": "5bd58e406dd032a329aa1f9cf5a28c9c438504bd1879187fb0422275e5f1b027", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9963b80e-f995-4f7d-b28a-006fdd14b56c", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.3.mdx", "file_name": "5.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.3.mdx", "header_path": "/[EP5.3] [Social] Determine ENS Labs' next steps in eth.link litigation/"}, "hash": "28319af985551563e54618f679ea2c840f66fe482cc007b758e00c79937ac083", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\nThis will be an approval vote, with four independent items:\n\n1. Do you approve the proposed settlement?\n2. Do you approve of offering a compromise amount?\n3. Do you approve of continuing the litigation?\n4. Do you approve reimbursing ENS labs for its legal expenses involved in pursuing this case?\n\nYou should vote on each outcome you would be happy with. For example, if you would be happy with either continuation or a compromise settlement, but not the full amount, you would vote for options 2, 3 and 4. If you prefer that the case be dismissed, vote only for option 4, or for no options.\n\nIf the reimbursement is not approved, or none of the options receive a majority (50%) of approving votes, ENS Labs will:\n\n- Promptly post an interstitial on eth.link, warning users of the potential change in ownership and functionality of the domain, and offering alternatives including eth.limo.\n- Dismiss the litigation without delay and without unnecessary further expenditure of funds.\n\nBased on the outcome of the vote, ENS Labs will proceed with the case based on whichever of the courses of action (settlement or continuation) receives the higher proportion of approving votes. Subsequently, ENS Labs will post an executable proposal seeking reimbursement from the DAO for its legal expenses pursuing the case.", "mimetype": "text/plain", "start_char_idx": 3602, "end_char_idx": 4930, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "21e05220-474d-4cc2-b996-a2d0d670e568": {"__data__": {"id_": "21e05220-474d-4cc2-b996-a2d0d670e568", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.4.1.mdx", "file_name": "5.4.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.4.1.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.4.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["amount", "metagov", "september", "group", "treasury", "anticipated", "budgetary", "funding", "working", "multisig", "fulfill", "requested", "needs", "through", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7d6e440c2ed0fa8afb92dd8371a9acdc3a75486b", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.4.1.mdx", "file_name": "5.4.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.4.1.mdx"}, "hash": "290ba5be3f2eccf5d4159c348aa779f0707744e4af8777c7bf623eaf69b9cb21", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3d7b6eb1-896d-4e91-9b9f-ed9971fb777a", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "98f371d8f668c07bdf7ded8eb31cf33bb67b61f88598395423971c0c8868ad83", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: 'This specification is the amount requested from the DAO treasury to the Metagov Multisig to fulfill anticipated budgetary needs through September 2024.'\nauthors:\n  ['5pence.eth', 'avsa.eth', 'alexvansande', 'estmcmxci.eth', 'estmcmxci']\nproposal:\n  snapshot: '0xfa1fdf0cfb94eabecf613ccd6b0c3a9247c21e64047cf330c000760970a02536'\n  type: 'social'\n--- # [5.4.1] [Social] Funding Request: ENS Meta-Governance Working Group Term 5 (Q1/Q2)\n\n::authors\n\n| **Status**            | Passed                                                                                                                   |\n| --------------------- | ------------------------------------------------------------------------------------------------------------------------ |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/5-4-1-social-funding-request-ens-meta-governance-working-group-term-5-q1-q2/18883) |\n| **Votes**             | [Snapshot](https://snapshot.box/#/s:ens.eth/proposal/0xfa1fdf0cfb94eabecf613ccd6b0c3a9247c21e64047cf330c000760970a02536) |", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 366, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b687f76b-85e3-462e-8c4c-d768b3342038": {"__data__": {"id_": "b687f76b-85e3-462e-8c4c-d768b3342038", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.4.1.mdx", "file_name": "5.4.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.4.1.mdx", "header_path": "/[5.4.1] [Social] Funding Request: ENS Meta-Governance Working Group Term 5 (Q1/Q2)/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.4.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["operations", "september", "abstract", "responsible", "group", "providing", "below", "funding", "working", "until", "requests", "governance"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7d6e440c2ed0fa8afb92dd8371a9acdc3a75486b", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.4.1.mdx", "file_name": "5.4.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.4.1.mdx"}, "hash": "290ba5be3f2eccf5d4159c348aa779f0707744e4af8777c7bf623eaf69b9cb21", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3d7b6eb1-896d-4e91-9b9f-ed9971fb777a", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.4.1.mdx", "file_name": "5.4.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.4.1.mdx", "header_path": "/"}, "hash": "613373c51056913d799d053755c1186ba7f42fe0fb33ad2828c8ede00e95f3cb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "56a97a8e-32b1-4d28-9ee7-86e206fbcaf7", "node_type": "1", "metadata": {"header_path": "/[5.4.1] [Social] Funding Request: ENS Meta-Governance Working Group Term 5 (Q1/Q2)/"}, "hash": "0eabe66f29ecbe6ae06965548227fb44019b7b3f2cebd80686a15d0fc305b878", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Abstract\n\nThe ENS Meta-Governance Working Group requests funding of the below to **support operations until the September 2024 funding window**.\n\nThe Meta-Governance Working Group is responsible for providing governance oversight and supporting the management and operation of working groups through DAO tooling and governance initiatives as well as treasury management for the DAO.\n\nThis social proposal is submitted to satisfy the requirements set out in Rule 10.1.1 of the Working Group Rules ([EP 1.8](https://docs.ens.domains/v/governance/governance-proposals/term-1/ep12-working-group-rules)) and further required by [this snapshot proposal in Nov. 2023 modifying steward rules.](https://snapshot.org/#/ens.eth/proposal/0x26a5c8dec547837495707e70446d1e7cd874a91f75753c602998f6e70083a266) If this proposal is passed, the funding request will be included in a collective executable proposal put forward by all three Working Groups.", "mimetype": "text/plain", "start_char_idx": 1062, "end_char_idx": 2000, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "56a97a8e-32b1-4d28-9ee7-86e206fbcaf7": {"__data__": {"id_": "56a97a8e-32b1-4d28-9ee7-86e206fbcaf7", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.4.1.mdx", "file_name": "5.4.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.4.1.mdx", "header_path": "/[5.4.1] [Social] Funding Request: ENS Meta-Governance Working Group Term 5 (Q1/Q2)/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.4.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["amount", "metagov", "september", "description", "treasury", "anticipated", "budgetary", "multisig", "fulfill", "requested", "needs", "through", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7d6e440c2ed0fa8afb92dd8371a9acdc3a75486b", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.4.1.mdx", "file_name": "5.4.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.4.1.mdx"}, "hash": "290ba5be3f2eccf5d4159c348aa779f0707744e4af8777c7bf623eaf69b9cb21", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b687f76b-85e3-462e-8c4c-d768b3342038", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.4.1.mdx", "file_name": "5.4.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.4.1.mdx", "header_path": "/[5.4.1] [Social] Funding Request: ENS Meta-Governance Working Group Term 5 (Q1/Q2)/"}, "hash": "5dcdd2df8aff582dc561f7b666bed737fca557ffbe174ef90658707fb76dce76", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3ec81253-e82e-483c-bbd2-83ddb9785048", "node_type": "1", "metadata": {"header_path": "/[5.4.1] [Social] Funding Request: ENS Meta-Governance Working Group Term 5 (Q1/Q2)/"}, "hash": "ad698bec7f0e16ab888e90fd07b3561a176659e9f2c8f20b3fc2c5144a8a56e1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\nThis specification is the amount requested from the DAO treasury to the Metagov Multisig to fulfill anticipated budgetary needs through September 2024.\n\n|                            | USDC | ETH | $ENS |\n| -------------------------- | :--: | :-: | :--: |\n| ENS Meta-Gov Main Multisig | 374k |  0  | 105k | ## Description ### Current Metagov Wallet Balances\n\n(Values expected as of March 5th, 2024 - Use hyperlinked wallet names to see current balances)\n\n| Address                                                                                              | ETH     | USDC    | $ENS   |\n| ---------------------------------------------------------------------------------------------------- | ------- | ------- | ------ |\n| [ens-metagov.pod.xyz](https://etherscan.io/address/0x91c32893216dE3eA0a55ABb9851f581d4503d39b)       | 85.68\\* | 362,463 | 15,540 |\n| [ens-endowmentfees.pod.xyz](https://etherscan.io/address/0x83DD97A584C4aD50015f7aA6B48bf4970A056d8f) | 0       | 0       | 0      |\n\n\\*_This value includes 22.89 that the metagov safe loaned to the endowment fees payments that will be repaid to the metagov safe with executable that implements the new Endowment fees strategy_", "mimetype": "text/plain", "start_char_idx": 2002, "end_char_idx": 2325, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8ab09f3f-d0aa-4f2e-bee3-15ccdde31d6c": {"__data__": {"id_": "8ab09f3f-d0aa-4f2e-bee3-15ccdde31d6c", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.4.1.mdx", "file_name": "5.4.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.4.1.mdx", "header_path": "/[5.4.1] [Social] Funding Request: ENS Meta-Governance Working Group Term 5 (Q1/Q2)/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.4.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["final", "depends", "funds", "aside", "strive", "coverage", "pending", "anticipate", "ensure", "spending", "while", "estimate", "expenditures"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7d6e440c2ed0fa8afb92dd8371a9acdc3a75486b", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.4.1.mdx", "file_name": "5.4.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.4.1.mdx"}, "hash": "290ba5be3f2eccf5d4159c348aa779f0707744e4af8777c7bf623eaf69b9cb21", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d1f23789-d92b-4bad-a41d-4e4f5299e7d8", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.4.1.mdx", "file_name": "5.4.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.4.1.mdx", "header_path": "/[5.4.1] [Social] Funding Request: ENS Meta-Governance Working Group Term 5 (Q1/Q2)/Description/"}, "hash": "f7745796c449d4673a88b0ee614b3eb51f69ac37d4b924accced69b8842eafdf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "64113f5b-c399-484e-9e89-19fc602c5bfb", "node_type": "1", "metadata": {"header_path": "/[5.4.1] [Social] Funding Request: ENS Meta-Governance Working Group Term 5 (Q1/Q2)/Expenditures/"}, "hash": "a28665831b9e7040c8b2b019c2ad50d708aeeed5604cce9b2a22b5319a81f6d6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Expenditures\n\nMeta-Gov sets aside funds to ensure coverage for mission-critical initiatives. While we strive to estimate term expenditures accurately, the final spending depends on pending initiatives. We anticipate that final expenditures will not surpass the expected expenses allocated for the term. ### Expected Expenses through September 2024\n\n|                                  | USDC        | ETH    | $ENS     |\n| -------------------------------- | ----------- | ------ | -------- |\n| Steward + Secretary Compensation | 294,000     | -      |          |\n| Governance                       | 50,000      | 5      | 105k     |\n| DAO Tooling                      | 140,000     | -      | -        |\n| Discretionary                    | -           | 10     | -        |\n| **Total Balance**                | **484,000** | **15** | **105k** |", "mimetype": "text/plain", "start_char_idx": 3208, "end_char_idx": 3513, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c00070b2-76d7-4f47-b3be-dbc04a3f65d7": {"__data__": {"id_": "c00070b2-76d7-4f47-b3be-dbc04a3f65d7", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.4.1.mdx", "file_name": "5.4.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.4.1.mdx", "header_path": "/[5.4.1] [Social] Funding Request: ENS Meta-Governance Working Group Term 5 (Q1/Q2)/Expenditures/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.4.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["amount", "developers", "category", "method", "stewards", "elected", "contributors", "vesting", "recipient", "contracts", "change", "distributions", "governance"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7d6e440c2ed0fa8afb92dd8371a9acdc3a75486b", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.4.1.mdx", "file_name": "5.4.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.4.1.mdx"}, "hash": "290ba5be3f2eccf5d4159c348aa779f0707744e4af8777c7bf623eaf69b9cb21", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "64113f5b-c399-484e-9e89-19fc602c5bfb", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.4.1.mdx", "file_name": "5.4.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.4.1.mdx", "header_path": "/[5.4.1] [Social] Funding Request: ENS Meta-Governance Working Group Term 5 (Q1/Q2)/Expenditures/"}, "hash": "3b5640f1f7554e3434084728497f0246defe5b9c79f7b4ba73c9af1897d5acf4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7f1e8c35-3c40-48b9-a07f-db556cf6e038", "node_type": "1", "metadata": {"header_path": "/[5.4.1] [Social] Funding Request: ENS Meta-Governance Working Group Term 5 (Q1/Q2)/Expenditures/"}, "hash": "12957d2bd96c17c5a1e615429c0ed6cc216ac7291859557a999f9dda399d821a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Governance Distributions\n\n| Recipient Category          | Amount of $ENS | Method                                                       |\n| --------------------------- | -------------- | ------------------------------------------------------------ |\n| Contributors and Developers | 60k            | Vesting contracts                                            |\n| Elected Stewards            | 45k            | Change to vesting contracts is planned for the 2025 guidance | ### Description of Initiatives/Pods\n\n**Steward + Secretary Compensation**: Working Group Steward and Secretary compensation as required by [revised steard working group rules](https://snapshot.org/#/ens.eth/proposal/0x26a5c8dec547837495707e70446d1e7cd874a91f75753c602998f6e70083a266) and [totaling $294,000 USDC](https://discuss.ens.domains/t/ens-dao-steward-compensation/18063).\n\n**Governance**: Fee reimbursements and initiatives related to reducing friction in the governance process. This can also include $ENS distributed in order to lower barriers to the governance proposal process.\n\n**DAO Tooling**: Developing interfaces and dashboards to improve the governance process and increase transparency across the DAO. An example of DAO tooling spend is our current engagement with Agora as they help build out an enhanced DAO proposal flow to streamline the proposal process.\n\n**Discretionary**: Funds distributed at the discretion of stewards towards new initiatives + governance experiments. In this cycle, we've consolidated the former DAO Sponsorship category into this discretionary category.", "mimetype": "text/plain", "start_char_idx": 4059, "end_char_idx": 4536, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e7bb9a61-b68d-4105-a05d-705a2479cfa6": {"__data__": {"id_": "e7bb9a61-b68d-4105-a05d-705a2479cfa6", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.4.1.mdx", "file_name": "5.4.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.4.1.mdx", "header_path": "/[5.4.1] [Social] Funding Request: ENS Meta-Governance Working Group Term 5 (Q1/Q2)/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.4.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["management", "ensuring", "request", "group", "providing", "allow", "funding", "working", "continue", "essential", "operation", "conclusion", "supporting", "governance"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7d6e440c2ed0fa8afb92dd8371a9acdc3a75486b", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.4.1.mdx", "file_name": "5.4.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.4.1.mdx"}, "hash": "290ba5be3f2eccf5d4159c348aa779f0707744e4af8777c7bf623eaf69b9cb21", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7f1e8c35-3c40-48b9-a07f-db556cf6e038", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.4.1.mdx", "file_name": "5.4.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.4.1.mdx", "header_path": "/[5.4.1] [Social] Funding Request: ENS Meta-Governance Working Group Term 5 (Q1/Q2)/Expenditures/"}, "hash": "9b7a4f936984e15e048e3eb5393eb527db17afb2cded4280a6d6782f994b9032", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Conclusion\n\nThis funding request will allow the ENS Meta-Governance Working Group to continue its essential work in providing governance oversight, supporting the management and operation of working groups, and ensuring effective treasury management for the DAO. The requested funds will enable us to maintain our ongoing initiatives and develop new tools to enhance the governance process. We are grateful for the community's ongoing support and engagement, which is crucial to the success of the ENS DAO. The Meta-Governance Working Group remains committed to serving the ENS community and driving the long-term growth and sustainability of the ecosystem.", "mimetype": "text/plain", "start_char_idx": 5640, "end_char_idx": 6300, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7e92bae9-3e3a-44c5-b72c-2ab1b9be04e2": {"__data__": {"id_": "7e92bae9-3e3a-44c5-b72c-2ab1b9be04e2", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.4.2.mdx", "file_name": "5.4.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.4.2.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.4.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["amount", "september", "requested", "treasury", "anticipated", "public", "budgetary", "funding", "multisig", "fulfill", "goods", "needs", "through", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2b402f836970e8c16ffad1961e90cc039b697d99", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.4.2.mdx", "file_name": "5.4.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.4.2.mdx"}, "hash": "f38a8cbb7d8a8dc5e6a13373680824b2976c5e0249a1ef3cfd778f2aa4c428e7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8b58ba6b-6327-4a57-b316-560f4995c779", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "15f6c69a103ba6910417e853310f4d58faba48daa4ae3e6df835ac92e4248f82", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: 'This specification is the amount requested from the DAO treasury to the Public Goods  Multisig to fulfill anticipated budgetary needs through September 2024.'\nauthors: ['coltron.eth', 'vegayp.eth', 'simona.eth']\nproposal:\n  snapshot: '0xd3437f1c9ece8a309da116be5bffaf31fa40df5361e04e43f9c913970a8746ee'\n  type: 'social'\n--- # [5.4.2] [Social] Funding Request: ENS Public Goods Working Group Term 5 (Q1/Q2)\n\n::authors\n\n| **Status**            | Passed                                                                                                                     |\n| --------------------- | -------------------------------------------------------------------------------------------------------------------------- |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/ep-5-5-executable-funding-request-ens-public-goods-working-group-term-5-q1-q2/18885) |\n| **Votes**             | [Snapshot](https://snapshot.box/#/s:ens.eth/proposal/0xd3437f1c9ece8a309da116be5bffaf31fa40df5361e04e43f9c913970a8746ee)   |", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 341, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d9e1e38b-57b3-4305-bd8a-76ee7a70806e": {"__data__": {"id_": "d9e1e38b-57b3-4305-bd8a-76ee7a70806e", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.4.2.mdx", "file_name": "5.4.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.4.2.mdx", "header_path": "/[5.4.2] [Social] Funding Request: ENS Public Goods Working Group Term 5 (Q1/Q2)/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.4.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["operations", "goods", "september", "abstract", "group", "public", "below", "working", "funding", "until", "requests"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2b402f836970e8c16ffad1961e90cc039b697d99", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.4.2.mdx", "file_name": "5.4.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.4.2.mdx"}, "hash": "f38a8cbb7d8a8dc5e6a13373680824b2976c5e0249a1ef3cfd778f2aa4c428e7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8b58ba6b-6327-4a57-b316-560f4995c779", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.4.2.mdx", "file_name": "5.4.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.4.2.mdx", "header_path": "/"}, "hash": "c6258fee843571124b9b736a9436832091108ea791ca9e8b09b4d0fc2851cdd5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "48f62834-35c9-4d5b-844f-ddbfec4e064f", "node_type": "1", "metadata": {"header_path": "/[5.4.2] [Social] Funding Request: ENS Public Goods Working Group Term 5 (Q1/Q2)/"}, "hash": "21bb55e63ac9c239580c5311ba2f8be9965d1028082a3772117e10e87eda2abc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Abstract\n\nThe ENS Public Goods Working Group requests funding of the below to **support operations until the September 2024 funding window**.\n\nThe Public Goods working group funds projects and builders improving the Web3 ecosystems. This funding stream is authorized in [Article III](https://docs.ens.domains/dao/constitution#iii-income-funds-ens-and-other-public-goods) of the ENS DAO Constitution. This funding supports initiatives related to open-source software, tooling, research and any practical implementations that broadly benefit a wide range of users of Ethereum and Web3.\n\nThis social proposal is submitted to satisfy the requirements set out in Rule 10.1.1 of the Working Group Rules ([EP 1.8](https://docs.ens.domains/v/governance/governance-proposals/term-1/ep12-working-group-rules)) and further required by [this snapshot proposal in Nov. 2023 modifying steward rules.](https://snapshot.org/#/ens.eth/proposal/0x26a5c8dec547837495707e70446d1e7cd874a91f75753c602998f6e70083a266) If this proposal is passed, the funding request will be included in a collective executable proposal put forward by all three Working Groups.", "mimetype": "text/plain", "start_char_idx": 1042, "end_char_idx": 2181, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "48f62834-35c9-4d5b-844f-ddbfec4e064f": {"__data__": {"id_": "48f62834-35c9-4d5b-844f-ddbfec4e064f", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.4.2.mdx", "file_name": "5.4.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.4.2.mdx", "header_path": "/[5.4.2] [Social] Funding Request: ENS Public Goods Working Group Term 5 (Q1/Q2)/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.4.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["additional", "balance", "goods", "group", "accommodate", "proposed", "current", "public", "contains", "working", "balances", "multisig", "requests", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2b402f836970e8c16ffad1961e90cc039b697d99", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.4.2.mdx", "file_name": "5.4.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.4.2.mdx"}, "hash": "f38a8cbb7d8a8dc5e6a13373680824b2976c5e0249a1ef3cfd778f2aa4c428e7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d9e1e38b-57b3-4305-bd8a-76ee7a70806e", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.4.2.mdx", "file_name": "5.4.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.4.2.mdx", "header_path": "/[5.4.2] [Social] Funding Request: ENS Public Goods Working Group Term 5 (Q1/Q2)/"}, "hash": "f5465d2d1ee0eb8b39401d1368e44f19e0d32258de62f1a93ed4f694b7df1d7e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0e76c53b-7e29-4409-823f-0c3648750224", "node_type": "1", "metadata": {"header_path": "/[5.4.2] [Social] Funding Request: ENS Public Goods Working Group Term 5 (Q1/Q2)/"}, "hash": "1fb01b172ef241f504e1d9a7a65e566328d40e4e0ab0a5c890ce11a54c9d595f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\nThe current balance of the Public Goods multisig contains 147.2k USDC and 33.5 ETH.\nThe working group requests an additional 450.3k USDC and 21.5 ETH from the DAO to accommodate this proposed budget. ## Current Balances (March 2024)\n\n| USDC   | ETH  | ENS |\n| ------ | ---- | --- |\n| 147.2k | 33.5 | 200 |\n\n\\*Balance information can be found at [https://enswallets.xyz](https://enswallets.xyz/) ## Expected Spend (Through September 2024)\n\n| Initiative          | USDC   | ETH |\n| ------------------- | ------ | --- |\n| Large Grants        | 387.5k | 0   |\n| Small Grants        | 0      | 50  |\n| Bounties            | 45k    | 0   |\n| Events + Hackathons | 115k   | 0   |\n| Discretionary       | 50k    | 5   |\n| Total               | 597.5k | 55  |\n\n\\*Mult-sig contains 200 ENS that has no planned use. This may be transferred back to the DAO wallet during the term.", "mimetype": "text/plain", "start_char_idx": 2183, "end_char_idx": 2400, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "759386d4-329f-42de-be70-cda07a147ad7": {"__data__": {"id_": "759386d4-329f-42de-be70-cda07a147ad7", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.4.2.mdx", "file_name": "5.4.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.4.2.mdx", "header_path": "/[5.4.2] [Social] Funding Request: ENS Public Goods Working Group Term 5 (Q1/Q2)/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.4.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["completing", "accepted", "basis", "description", "large", "rolling", "applications", "budget", "throughout", "initiatives", "grantees", "resume", "milestones", "grants"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2b402f836970e8c16ffad1961e90cc039b697d99", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.4.2.mdx", "file_name": "5.4.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.4.2.mdx"}, "hash": "f38a8cbb7d8a8dc5e6a13373680824b2976c5e0249a1ef3cfd778f2aa4c428e7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "146f33a7-1cf6-4727-ae86-3df9f3a19843", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.4.2.mdx", "file_name": "5.4.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.4.2.mdx", "header_path": "/[5.4.2] [Social] Funding Request: ENS Public Goods Working Group Term 5 (Q1/Q2)/"}, "hash": "18047fee9b085eadac52f10000e22c1639d3d942e6b4950c8bb568aa33b04c1a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5dacd68f-fc0a-454e-80ee-2e218e0dcd70", "node_type": "1", "metadata": {"header_path": "/[5.4.2] [Social] Funding Request: ENS Public Goods Working Group Term 5 (Q1/Q2)/Description of Initiatives/"}, "hash": "6d61cded108cd1d45be6cc9584d4909c6cae72790cf4c61de973c2439694d8da", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Description of Initiatives ### [Large Grants](https://discuss.ens.domains/t/public-goods-group-budget-h1-2024/18725#large-grants-3)\n\nGrants up to 50k USDC with applications accepted on a rolling basis throughout the year-long term. Large Grants will resume in Q2. With five grantees completing milestones from last term, the budget includes remaining payouts yet to be\ndisbursed. We plan to add at least two more grantees during Q2 while piloting new grants management software. In the second half of the year, we will run another full-size round supporting up to 10 grantees at a time with a 200k USD total prize\npool.", "mimetype": "text/plain", "start_char_idx": 3073, "end_char_idx": 3102, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "353b98fb-826a-4c7f-ba46-f387a2931ba1": {"__data__": {"id_": "353b98fb-826a-4c7f-ba46-f387a2931ba1", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.4.2.mdx", "file_name": "5.4.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.4.2.mdx", "header_path": "/[5.4.2] [Social] Funding Request: ENS Public Goods Working Group Term 5 (Q1/Q2)/Description of Initiatives/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.4.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["amount", "expected", "multiple", "after", "increase", "added", "small", "first", "shortly", "approximately", "resume", "during", "spend", "grants", "through"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2b402f836970e8c16ffad1961e90cc039b697d99", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.4.2.mdx", "file_name": "5.4.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.4.2.mdx"}, "hash": "f38a8cbb7d8a8dc5e6a13373680824b2976c5e0249a1ef3cfd778f2aa4c428e7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5dacd68f-fc0a-454e-80ee-2e218e0dcd70", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.4.2.mdx", "file_name": "5.4.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.4.2.mdx", "header_path": "/[5.4.2] [Social] Funding Request: ENS Public Goods Working Group Term 5 (Q1/Q2)/Description of Initiatives/"}, "hash": "7631d872540822169458d25052713905584f25e0049884fb36b587c2e986b00a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "33da9a19-495e-4dc1-9a26-0f903330e2e7", "node_type": "1", "metadata": {"header_path": "/[5.4.2] [Social] Funding Request: ENS Public Goods Working Group Term 5 (Q1/Q2)/Description of Initiatives/"}, "hash": "f6e68f9af52e70b8d25cd7e8fda75e7021d5c53bd0c116fca89e6a6e541b8736", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### [Small Grants](https://discuss.ens.domains/t/public-goods-group-budget-h1-2024/18725#small-grants-4)\n\nMultiple micro-grantsvoted on by the community. Small Grants will resume during the first half of the year shortly after ETHDenver. We have added the amount expected to spend through the end of the year with no increase from last term. This is\napproximately 12.5 ETH per quarter. With market fluctuations, stewards may right-size and lower the amounts distributed during round ### [Events and Hackathons](https://discuss.ens.domains/t/public-goods-group-budget-h1-2024/18725#events-and-hackathons-5)\n\nThe working group will support Public Goods events and hackathons. Funds have included expenses related to the funding of hackathons, events, and related participation in events (judging, panels, speaking) where necessary.\n\nThe current earmarked events are:\n\n- [ETHGuatemala](https://ethereum.gt/)\n- [EthLatam](https://ethlatam.org/)\n- [ETHGlobal London](https://ethglobal.com/events/london2024)\n- [ETHCanal](https://www.ethcanal.xyz/)\n- [ETHCC](https://ethcc.io/)\n- [ETHGlobal Brussels](https://ethglobal.com/events/brussels)\n- [DAO Tokyo](https://dao-tokyo.xyz/)\n- [ETHGlobal San Francisco](https://ethglobal.com/events/sanfrancisco2024)\n- [ETHGlobal Bangkok](https://ethglobal.com/events/bangkok)\n- [Devcon](https://devcon.org/en/)\n\nThis list is not guaranteed as several events are still in the planning stages.\nThe PG stewards will continuously assess opportunities to expand the public goods conversation and collaborations.", "mimetype": "text/plain", "start_char_idx": 3698, "end_char_idx": 4180, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1cef538b-1c0f-489c-a9f8-b042ebf2e75a": {"__data__": {"id_": "1cef538b-1c0f-489c-a9f8-b042ebf2e75a", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.4.2.mdx", "file_name": "5.4.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.4.2.mdx", "header_path": "/[5.4.2] [Social] Funding Request: ENS Public Goods Working Group Term 5 (Q1/Q2)/Description of Initiatives/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.4.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["additional", "arise", "group", "initiative", "grant", "opportunities", "funds", "reserved", "expenses", "working", "discretion", "during", "spending", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2b402f836970e8c16ffad1961e90cc039b697d99", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.4.2.mdx", "file_name": "5.4.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.4.2.mdx"}, "hash": "f38a8cbb7d8a8dc5e6a13373680824b2976c5e0249a1ef3cfd778f2aa4c428e7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "33da9a19-495e-4dc1-9a26-0f903330e2e7", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.4.2.mdx", "file_name": "5.4.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.4.2.mdx", "header_path": "/[5.4.2] [Social] Funding Request: ENS Public Goods Working Group Term 5 (Q1/Q2)/Description of Initiatives/"}, "hash": "830326c68eebcbaefc631bf0bca22708b67dc0ccc6ec4291b698cf5d69df7faa", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### [Discretionary](https://discuss.ens.domains/t/public-goods-group-budget-h1-2024/18725#discretionary-6)\n\nThe funds in this initiative are reserved for additional grant opportunities and expenses that arise during the term. Spending on this initiative is at the discretion of the working group stewards. ---\ndescription: 'This specification is the amount requested from the DAO treasury to the Public Goods Multisig to fulfill anticipated budgetary needs through September 2024.'\nauthors: ['coltron.eth', 'vegayp.eth', 'simona.eth']\nproposal:\n  tally: '48839151689001950442481252711111182244814765601408465024742109276815020082612'\n  type: 'executable'\n---", "mimetype": "text/plain", "start_char_idx": 5238, "end_char_idx": 5543, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "af63da69-ba0f-4238-86a1-ecf359627f43": {"__data__": {"id_": "af63da69-ba0f-4238-86a1-ecf359627f43", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.5.mdx", "file_name": "5.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.5.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.5.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["group", "public", "passed", "funding", "working", "goods"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "98f7130eb241131f863490012092873a6fd5809d", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.5.mdx", "file_name": "5.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.5.mdx"}, "hash": "3d0d419564cfff050b3c72f1ce7e2c9aca834550678b7e6fdc26b4828c00c044", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "01576023-5801-425e-923f-0e91c6179fcb", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.5.mdx", "file_name": "5.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.5.mdx", "header_path": "/"}, "hash": "048e44a3b8493c64a331dc16fee28cec5c1499afc27ba4d386c2f409afcc58cb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "16e2da20-d643-45c4-b8cf-8d24d93f7544", "node_type": "1", "metadata": {"header_path": "/[EP 5.5] Funding Request: ENS Public Goods Working Group Term 5 (Q1/Q2)/"}, "hash": "3d2250334a513ccd5c707d89effa2588ff434d0543b930560f11bb4a8b8d32b0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# [EP 5.5] Funding Request: ENS Public Goods Working Group Term 5 (Q1/Q2)\n\n::authors\n\n| **Status**            | Passed                                                                                                                     |\n| --------------------- | -------------------------------------------------------------------------------------------------------------------------- |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/ep-5-5-executable-funding-request-ens-public-goods-working-group-term-5-q1-q2/18885) |\n| **Votes**             | [Agora](https://agora.ensdao.org/proposals/48839151689001950442481252711111182244814765601408465024742109276815020082612)  |", "mimetype": "text/plain", "start_char_idx": 354, "end_char_idx": 1043, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "16e2da20-d643-45c4-b8cf-8d24d93f7544": {"__data__": {"id_": "16e2da20-d643-45c4-b8cf-8d24d93f7544", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.5.mdx", "file_name": "5.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.5.mdx", "header_path": "/[EP 5.5] Funding Request: ENS Public Goods Working Group Term 5 (Q1/Q2)/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.5.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["operations", "goods", "september", "abstract", "group", "public", "working", "funding", "until", "requests"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "98f7130eb241131f863490012092873a6fd5809d", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.5.mdx", "file_name": "5.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.5.mdx"}, "hash": "3d0d419564cfff050b3c72f1ce7e2c9aca834550678b7e6fdc26b4828c00c044", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "af63da69-ba0f-4238-86a1-ecf359627f43", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.5.mdx", "file_name": "5.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.5.mdx", "header_path": "/"}, "hash": "b9787a6c52195159aae5dc73783777d213e7ba73a321a1e8d395ae0e85bc8c69", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cfe61197-8863-4e78-9b22-2e82ccc4b974", "node_type": "1", "metadata": {"header_path": "/[EP 5.5] Funding Request: ENS Public Goods Working Group Term 5 (Q1/Q2)/"}, "hash": "4d00adcb135b88bb83d3680e10392a189ce4a77b6bc17489ea87de02866de408", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Abstract\n\nThe ENS Public Goods Working Group requests funding to **support operations until the September 2024 funding window**.\n\nThe Public Goods working group funds projects and builders improving the Web3 ecosystems. This funding stream is authorized in [Article III](https://docs.ens.domains/dao/constitution#iii-income-funds-ens-and-other-public-goods) of the ENS DAO Constitution. This funding supports initiatives related to open-source software, tooling, research, and any practical implementations that broadly benefit a wide range of users of Ethereum and Web3.\n\nThis social proposal is submitted to satisfy the requirements set out in Rule 10.1.1 of the Working Group Rules ([EP 1.8](https://docs.ens.domains/v/governance/governance-proposals/term-1/ep12-working-group-rules)) and further required by [this snapshot proposal in Nov. 2023 modifying steward rules](https://snapshot.org/#/ens.eth/proposal/0x26a5c8dec547837495707e70446d1e7cd874a91f75753c602998f6e70083a266). If this proposal is passed, the funding request will be included in a collective executable proposal put forward by all three Working Groups.", "mimetype": "text/plain", "start_char_idx": 1045, "end_char_idx": 2172, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cfe61197-8863-4e78-9b22-2e82ccc4b974": {"__data__": {"id_": "cfe61197-8863-4e78-9b22-2e82ccc4b974", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.5.mdx", "file_name": "5.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.5.mdx", "header_path": "/[EP 5.5] Funding Request: ENS Public Goods Working Group Term 5 (Q1/Q2)/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.5.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["balance", "contained", "group", "accommodate", "proposal", "public", "transfer", "snapshot", "working", "multisig", "goods", "wallet", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "98f7130eb241131f863490012092873a6fd5809d", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.5.mdx", "file_name": "5.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.5.mdx"}, "hash": "3d0d419564cfff050b3c72f1ce7e2c9aca834550678b7e6fdc26b4828c00c044", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "16e2da20-d643-45c4-b8cf-8d24d93f7544", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.5.mdx", "file_name": "5.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.5.mdx", "header_path": "/[EP 5.5] Funding Request: ENS Public Goods Working Group Term 5 (Q1/Q2)/"}, "hash": "46b10fd6b128cf38aded8f97d65fe22e592db5c51c430861301cace8eff4acda", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d61b491e-0978-4967-88e6-70f7487339ec", "node_type": "1", "metadata": {"header_path": "/[EP 5.5] Funding Request: ENS Public Goods Working Group Term 5 (Q1/Q2)/Specification/"}, "hash": "f011542fbac5c86c71ad86782b30b4106dbceb52ca99278ff0ba859674d318d0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\nThe balance of the Public Goods multisig at the time of Snapshot contained 147.2k USDC and 33.5 ETH.\n\nIf passed, this proposal will transfer 450.3k USDC and 21.5 ETH from the DAO wallet to the Public Goods working group to accommodate the proposed budget below. ### Balances (March 2024)\\*\n\n| **USDC** | **ETH** | **ENS** |\n| :------- | :------ | :------ |\n| 147.2k   | 33.5k   | 200     |\n\n\\*Balances above reflect amounts at time of original proposal at time of Snapshot. Current balance information can be found at [https://enswallets.xyz](https://enswallets.xyz).", "mimetype": "text/plain", "start_char_idx": 2174, "end_char_idx": 2453, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a24cea5b-9af1-49ce-b7a6-77e3afa4802f": {"__data__": {"id_": "a24cea5b-9af1-49ce-b7a6-77e3afa4802f", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.5.mdx", "file_name": "5.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.5.mdx", "header_path": "/[EP 5.5] Funding Request: ENS Public Goods Working Group Term 5 (Q1/Q2)/Specification/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.5.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["discretionary", "events", "expected", "hackathons", "september", "transferred", "bounties", "small", "spend", "contains", "grants", "planned", "wallet", "large"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "98f7130eb241131f863490012092873a6fd5809d", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.5.mdx", "file_name": "5.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.5.mdx"}, "hash": "3d0d419564cfff050b3c72f1ce7e2c9aca834550678b7e6fdc26b4828c00c044", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d61b491e-0978-4967-88e6-70f7487339ec", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.5.mdx", "file_name": "5.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.5.mdx", "header_path": "/[EP 5.5] Funding Request: ENS Public Goods Working Group Term 5 (Q1/Q2)/Specification/"}, "hash": "5f957ffc10cc84bee96d5151ad16c391e27b45282aa173e948f886ff2ce4b6e7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "71eed7d6-85af-4857-bc01-978b6f82434e", "node_type": "1", "metadata": {"header_path": "/[EP 5.5] Funding Request: ENS Public Goods Working Group Term 5 (Q1/Q2)/"}, "hash": "95b945e9145c538dcffbee03a780096cc67c242b2c9b9d20f8d13918ed246a39", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Expected Spend (Through September 2024)\\*\n\n| **Initiative**      | **USDC**   | **ETH** |\n| :------------------ | :--------- | :------ |\n| Large Grants        | 387.5k     | 0       |\n| Small Grants        | 0          | 50      |\n| Bounties            | 45k        | 0       |\n| Events + Hackathons | 115k       | 0       |\n| Discretionary       | 50k        | 5       |\n| **Total**           | **597.5k** | **55**  |\n\n\\*Multisig contains 200 ENS that has no planned use. This may be transferred back to the DAO wallet during the term.\n\n---", "mimetype": "text/plain", "start_char_idx": 2762, "end_char_idx": 3307, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "71eed7d6-85af-4857-bc01-978b6f82434e": {"__data__": {"id_": "71eed7d6-85af-4857-bc01-978b6f82434e", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.5.mdx", "file_name": "5.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.5.mdx", "header_path": "/[EP 5.5] Funding Request: ENS Public Goods Working Group Term 5 (Q1/Q2)/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.5.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["completing", "accepted", "basis", "description", "large", "rolling", "applications", "throughout", "initiatives", "grantees", "resume", "grants"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "98f7130eb241131f863490012092873a6fd5809d", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.5.mdx", "file_name": "5.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.5.mdx"}, "hash": "3d0d419564cfff050b3c72f1ce7e2c9aca834550678b7e6fdc26b4828c00c044", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a24cea5b-9af1-49ce-b7a6-77e3afa4802f", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.5.mdx", "file_name": "5.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.5.mdx", "header_path": "/[EP 5.5] Funding Request: ENS Public Goods Working Group Term 5 (Q1/Q2)/Specification/"}, "hash": "72444c9bd421e2c2817b8b6967a2d21bdd9f65a867e6d94a0d378aca68d12f85", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "26caeec8-955e-4f97-b661-2dffb8122dc1", "node_type": "1", "metadata": {"header_path": "/[EP 5.5] Funding Request: ENS Public Goods Working Group Term 5 (Q1/Q2)/Description of Initiatives/"}, "hash": "18881d0805d3682b86d225567711dc4c3ea25d74537cd0c82032fb8924b0e6b9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Description of Initiatives ### Large Grants\n\nGrants up to 50k USDC with applications accepted on a rolling basis throughout the year-long term. Large Grants will resume in Q2. With five grantees completing milestones from last term, the budget includes remaining payouts yet to be disbursed. We plan to add at least two more grantees during Q2 while piloting new grants management software. In the second half of the year, we will run another full-size round supporting up to 10 grantees at a time with a 200k USD total prize pool.", "mimetype": "text/plain", "start_char_idx": 3309, "end_char_idx": 3338, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6c3f6d53-fa63-45a7-bc00-cccb865d12d2": {"__data__": {"id_": "6c3f6d53-fa63-45a7-bc00-cccb865d12d2", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.5.mdx", "file_name": "5.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.5.mdx", "header_path": "/[EP 5.5] Funding Request: ENS Public Goods Working Group Term 5 (Q1/Q2)/Description of Initiatives/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.5.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["amount", "expected", "multiple", "after", "resume", "added", "small", "first", "shortly", "voted", "during", "spend", "grants"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "98f7130eb241131f863490012092873a6fd5809d", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.5.mdx", "file_name": "5.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.5.mdx"}, "hash": "3d0d419564cfff050b3c72f1ce7e2c9aca834550678b7e6fdc26b4828c00c044", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "26caeec8-955e-4f97-b661-2dffb8122dc1", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.5.mdx", "file_name": "5.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.5.mdx", "header_path": "/[EP 5.5] Funding Request: ENS Public Goods Working Group Term 5 (Q1/Q2)/Description of Initiatives/"}, "hash": "94068fe278ecb15cc6f8d0b3c550dd92b85dc50da7fd379c0c7e7e0ff631af25", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "beb2e68f-3917-4bf6-9a80-5d4e8eb92757", "node_type": "1", "metadata": {"header_path": "/[EP 5.5] Funding Request: ENS Public Goods Working Group Term 5 (Q1/Q2)/Description of Initiatives/"}, "hash": "89df8f902925643a993802118c082f18a3c6e95abb97a5d0bf7485f139708e3b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Small Grants\n\nMultiple micro-grants voted on by the community. Small Grants will resume during the first half of the year shortly after ETHDenver. We have added the amount expected to spend through the end of the year with no increase from last term. This is approximately 12.5 ETH per quarter. With market fluctuations, stewards may right-size and lower the amounts distributed during round. ### Events and Hackathons\n\nThe working group will support Public Goods events and hackathons. Funds have included expenses related to the funding of hackathons, events, and related participation in events (judging, panels, speaking) where necessary.\n\nThe current earmarked events are:\n\n- [ETHGuatemala](https://ethereum.gt/)\n- [EthLatam](https://ethlatam.org/)\n- [ETHGlobal London](https://ethglobal.com/events/london2024)\n- [ETHCanal](https://www.ethcanal.xyz/)\n- [ETHCC](https://ethcc.io/)\n- [ETHGlobal Brussels](https://ethglobal.com/events/brussels)\n- [DAO Tokyo](https://dao-tokyo.xyz/)\n- [ETHGlobal San Francisco](https://ethglobal.com/events/sanfrancisco2024)\n- [ETHGlobal Bangkok](https://ethglobal.com/events/bangkok)\n- [Devcon](https://devcon.org/en/)\n\nThis list is not guaranteed as several events are still in the planning stages. The PG stewards will continuously assess opportunities to expand the public goods conversation and collaborations.", "mimetype": "text/plain", "start_char_idx": 3846, "end_char_idx": 4242, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9b3a0910-987e-429c-9ef1-a5205ea6340a": {"__data__": {"id_": "9b3a0910-987e-429c-9ef1-a5205ea6340a", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.5.mdx", "file_name": "5.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.5.mdx", "header_path": "/[EP 5.5] Funding Request: ENS Public Goods Working Group Term 5 (Q1/Q2)/Description of Initiatives/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.5.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["discretionary", "additional", "group", "initiative", "grant", "opportunities", "funds", "reserved", "expenses", "working", "discretion", "during", "spending", "arise"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "98f7130eb241131f863490012092873a6fd5809d", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.5.mdx", "file_name": "5.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.5.mdx"}, "hash": "3d0d419564cfff050b3c72f1ce7e2c9aca834550678b7e6fdc26b4828c00c044", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "beb2e68f-3917-4bf6-9a80-5d4e8eb92757", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.5.mdx", "file_name": "5.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.5.mdx", "header_path": "/[EP 5.5] Funding Request: ENS Public Goods Working Group Term 5 (Q1/Q2)/Description of Initiatives/"}, "hash": "6c986572d22cfa7ec7fba8821085f77faf5537f4bcc72362612adfb5529854bc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Discretionary\n\nThe funds in this initiative are reserved for additional grant opportunities and expenses that arise during the term. Spending on this initiative is at the discretion of the working group stewards. ---\ndescription: 'This EP authorises metagov to withdraw 30 ETH from the endowment each month for fees, and reimburses metagov for 43.54 ETH in fees already incurred.'\nauthors: ['nick.eth']\nproposal:\n  tally: '45720656345448826187222659689199787286494046921153399380076959662321080408931'\n  type: 'executable'\n---", "mimetype": "text/plain", "start_char_idx": 5203, "end_char_idx": 5419, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "75ca0bb8-beb8-4916-967c-df5b398383bc": {"__data__": {"id_": "75ca0bb8-beb8-4916-967c-df5b398383bc", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.6.mdx", "file_name": "5.6.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.6.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.6.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["authorizes", "metagov", "already", "endowment", "withdraw", "passed", "enable", "reimburses", "month"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "668f40fd40ccb8cb8f52b4dd024537e187d29b58", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.6.mdx", "file_name": "5.6.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.6.mdx"}, "hash": "2460408754d6a2e20b7ff3296518de247586e50164305e80a88775a9f019e9bc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d22c24ef-58b5-4056-9967-4330309781e0", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.6.mdx", "file_name": "5.6.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.6.mdx", "header_path": "/"}, "hash": "3341f36a1c278d8fcb679e2bf4bb6313fac9b7f5a4fcf3a702c37d95616a83aa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7a402500-8e70-48dd-a0e6-c2ec8da6d825", "node_type": "1", "metadata": {"header_path": "/[EP 5.6] [Executable] Enable Self-Funding for the Endowment/"}, "hash": "6312d4c54bcef087c2ec4993eaed5bae0e2b2c98612110e3f564de9f3460965d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# [EP 5.6] [Executable] Enable Self-Funding for the Endowment\n\n::authors\n\n| **Status**            | Passed                                                                                                                    |\n| --------------------- | ------------------------------------------------------------------------------------------------------------------------- |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/ep-5-6-executable-enable-self-funding-for-the-endowment/18998)                      |\n| **Votes**             | [Agora](https://agora.ensdao.org/proposals/45720656345448826187222659689199787286494046921153399380076959662321080408931) |\n\nAuthorizes metagov to withdraw 30 ETH from the endowment each month for fees, and reimburses metagov for 43.54 ETH in fees already incurred.", "mimetype": "text/plain", "start_char_idx": 315, "end_char_idx": 1130, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7a402500-8e70-48dd-a0e6-c2ec8da6d825": {"__data__": {"id_": "7a402500-8e70-48dd-a0e6-c2ec8da6d825", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.6.mdx", "file_name": "5.6.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.6.mdx", "header_path": "/[EP 5.6] [Executable] Enable Self-Funding for the Endowment/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.6.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["finance", "metagov", "monthly", "endowment", "autonomously", "abstract", "proposal", "allowing", "stewards", "authority", "withdraw", "shift", "grants", "outlines", "strategic"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "668f40fd40ccb8cb8f52b4dd024537e187d29b58", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.6.mdx", "file_name": "5.6.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.6.mdx"}, "hash": "2460408754d6a2e20b7ff3296518de247586e50164305e80a88775a9f019e9bc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "75ca0bb8-beb8-4916-967c-df5b398383bc", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.6.mdx", "file_name": "5.6.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.6.mdx", "header_path": "/"}, "hash": "3f1a43b2bc1f0330c8ebf9ffd0de113191b6fad9bcc95ab2c328909b6ff3985e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1524a62d-b301-4fbd-a14b-f5f99865a74b", "node_type": "1", "metadata": {"header_path": "/[EP 5.6] [Executable] Enable Self-Funding for the Endowment/"}, "hash": "41b64c2cafceb98fff6cac3efc8bf5ff2a9fab21e9c579d7d98a214928a8f1bb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Abstract\n\nThis proposal outlines a strategic shift allowing the Endowment to autonomously finance its operations. Specifically, it grants the Metagov stewards the authority to withdraw up to 30 ETH monthly from the Endowment, designated for payments to karpatkey and [@steakhouse](https://discuss.ens.domains/u/steakhouse) for their services in managing the Endowment. This initiative provides the stewards with a direct allowance for these expenses, eliminating the need for these costs to be continually factored into their requests for DAO budget allocations.\n\nAdditionally, this proposal seeks to reimburse the [Metagov Safe](https://etherscan.io/address/0x91c32893216dE3eA0a55ABb9851f581d4503d39b) for the payments made to karpatkey and Steakhouse Financial during 2024, covering the service fees for [January](https://etherscan.io/tx/0x4ef4b34d397e6ce1fbe1fbe3e94340dcf02d590fc9d93c7107a76282beb201c6) and [February](https://etherscan.io/tx/0xdd631a42ccc3762e285276043926c52b86dedbc70fa34dddd611585a38534a89), which total 43.54 ETH.", "mimetype": "text/plain", "start_char_idx": 1132, "end_char_idx": 2173, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1524a62d-b301-4fbd-a14b-f5f99865a74b": {"__data__": {"id_": "1524a62d-b301-4fbd-a14b-f5f99865a74b", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.6.mdx", "file_name": "5.6.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.6.mdx", "header_path": "/[EP 5.6] [Executable] Enable Self-Funding for the Endowment/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.6.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["initiation", "motivation", "endowment", "financial", "services", "since", "execution", "categorized", "these", "through", "operational", "their", "steakhouse", "payments", "karpatkey"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "668f40fd40ccb8cb8f52b4dd024537e187d29b58", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.6.mdx", "file_name": "5.6.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.6.mdx"}, "hash": "2460408754d6a2e20b7ff3296518de247586e50164305e80a88775a9f019e9bc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7a402500-8e70-48dd-a0e6-c2ec8da6d825", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.6.mdx", "file_name": "5.6.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.6.mdx", "header_path": "/[EP 5.6] [Executable] Enable Self-Funding for the Endowment/"}, "hash": "63393cbcdaf37f6c9a1b58557e99cf743f323e5d932e50642687d52cdcb8a4f1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "30f2ef8e-e622-4f8c-95f9-58dbff218928", "node_type": "1", "metadata": {"header_path": "/[EP 5.6] [Executable] Enable Self-Funding for the Endowment/"}, "hash": "3e63d95c4371c57e85ec97c5e8d9e5e67c58fd65c211bc0f41ccd36ee2e132fc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Motivation\n\nSince the initiation of the Endowment through the execution of the [first tranche](https://discuss.ens.domains/t/ep3-4-executable-fund-the-endowment-first-tranche/16277#specification-3), payments to karpatkey and Steakhouse Financial for their services have been categorized as operational expenditures. These costs were funded through the Metagov Safe, necessitating routine funding requests from the Meta-Governance Working Group to the DAO.\n\nTo simplify and enhance the financial autonomy of the Endowment, we propose granting a monthly allowance of up to 30 ETH to the Metagov Safe by leveraging the Spending Limits feature available on Safe.\n\nThis measure allows Metagov stewards to settle Endowment fees directly from funds within the Endowment itself, thus eliminating the regular necessity to refill the Metagov Safe. Should the allowance cap be reached, further withdrawals will be paused until the commencement of the next 30-day cycle. This adjustment eradicates the need for frequent funding operations, paving the way for the Endowment's sustained self-sufficiency.\n\nThe monthly cap of 30 ETH has been carefully chosen to align with the Endowment's scale and historical fee structure, ensuring it suffices to cover monthly expenses. Should there be a need to revise this limit to better suit future requirements, adjustments can be facilitated through the submission of a new proposal.\n\nFinally, to ensure the strategic shift is applied retroactively from the outset of 2024, this proposal requests that the Endowment reimburse the Metagov Safe for expenses incurred through payments to karpatkey and Steakhouse Financial. This reimbursement, aimed at covering the service fees for January and February 2024, amounts to a total of 43.54 ETH.", "mimetype": "text/plain", "start_char_idx": 2175, "end_char_idx": 3944, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "30f2ef8e-e622-4f8c-95f9-58dbff218928": {"__data__": {"id_": "30f2ef8e-e622-4f8c-95f9-58dbff218928", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.6.mdx", "file_name": "5.6.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.6.mdx", "header_path": "/[EP 5.6] [Executable] Enable Self-Funding for the Endowment/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.6.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["payload", "wallet", "allowance", "mentioned", "following", "create", "0x4f2083f5fbede34c2714affb3105539775f7fe64", "executed", "0x6a76120200000000000000000000000040a2accbd92bca938b02010e17a5b8929b49130dc000000000000000000000000000000000000000000000000000000000000002448d80ff0a000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000001eb004f2083f5fbede34c2714affb3105539775f7fe6400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000024610b5925000000000000000000000000cfbfac74c26f8647cbdb8c5caf80bb5b32e4313400cfbfac74c26f8647cbdb8c5caf80bb5b32e4313400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000024e71bdf4100000000000000000000000091c32893216de3ea0a55abb9851f581d4503d39b00cfbfac74c26f8647cbdb8c5caf80bb5b32e43134000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a4beaeb38800000000000000000000000091c32893216de3ea0a55abb9851f581d4503d39b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a8c00000000000000000000000000000000000000000000000000000000001b33acd000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000041000000000000000000000000fe89cc7abb2c4183683ab71653c4cdc9b02d44b700000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000", "0x6a76120200000000000000000000000091c32893216de3ea0a55abb9851f581d4503d39b0000000000000000000000000000000000000000000000025c3d2750b08200000000000000000000000000000000000000000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000041000000000000000000000000fe89cc7abb2c4183683ab71653c4cdc9b02d44b700000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "668f40fd40ccb8cb8f52b4dd024537e187d29b58", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.6.mdx", "file_name": "5.6.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.6.mdx"}, "hash": "2460408754d6a2e20b7ff3296518de247586e50164305e80a88775a9f019e9bc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1524a62d-b301-4fbd-a14b-f5f99865a74b", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.6.mdx", "file_name": "5.6.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.6.mdx", "header_path": "/[EP 5.6] [Executable] Enable Self-Funding for the Endowment/"}, "hash": "0aa9eb2ec898ec4ffc574883bc8bd8e1d19d328428a7bc1926c1c11f3a3fca63", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\nThe following payload will be executed by the DAO Wallet to create the mentioned allowance and refund:\n\n```plaintext\nCalldata:\n0x6a76120200000000000000000000000040a2accbd92bca938b02010e17a5b8929b49130dc000000000000000000000000000000000000000000000000000000000000002448d80ff0a000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000001eb004f2083f5fbede34c2714affb3105539775f7fe6400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000024610b5925000000000000000000000000cfbfac74c26f8647cbdb8c5caf80bb5b32e4313400cfbfac74c26f8647cbdb8c5caf80bb5b32e4313400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000024e71bdf4100000000000000000000000091c32893216de3ea0a55abb9851f581d4503d39b00cfbfac74c26f8647cbdb8c5caf80bb5b32e43134000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a4beaeb38800000000000000000000000091c32893216de3ea0a55abb9851f581d4503d39b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a8c00000000000000000000000000000000000000000000000000000000001b33acd000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000041000000000000000000000000fe89cc7abb2c4183683ab71653c4cdc9b02d44b700000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000\n\nTarget:\n0x4f2083f5fbede34c2714affb3105539775f7fe64\n\nValue:\n0\n\nCalldata:\n0x6a76120200000000000000000000000091c32893216de3ea0a55abb9851f581d4503d39b0000000000000000000000000000000000000000000000025c3d2750bfe89cc7abb2c4183683ab71653c4cdc9b02d44b700000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000\n\nTarget:\n0x4f2083f5fbede34c2714affb3105539775f7fe64\n\nValue:\n0\n```", "mimetype": "text/plain", "start_char_idx": 3946, "end_char_idx": 7327, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3f076fba-0df9-4031-9e1d-30354889f6ac": {"__data__": {"id_": "3f076fba-0df9-4031-9e1d-30354889f6ac", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.7.mdx", "file_name": "5.7.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.7.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.7.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["safeguard", "ensuring", "power", "security", "counter", "malicious", "council", "promoting", "decentralized", "passed", "integrity", "establishing"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8dcf60d2e6d1f70a71948bed9d17b41b268158af", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.7.mdx", "file_name": "5.7.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.7.mdx"}, "hash": "fa584eacc7d076d9b8cb164d2690dc239003ee72884f81662f008b5684a07dcf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f668a0fb-8dbe-4935-8f31-a9c71e4c596d", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "34bb2bf74e5cefae2a484abc9e63afe0b3c01b7216a6de41b728912981cd4dca", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: \"This EP aims to safeguard the DAO by establishing a Security Council with a two-year, time-limited veto power to counter malicious proposals, ensuring the protocol's integrity and promoting decentralized governance.\"\nauthors: ['alextnetto.eth']\nproposal:\n  snapshot: '0xf3a4673fe04a3ecfed4a2f066f6ced1539a5466d61630428333360b843653c54'\n  type: 'social'\n--- # [EP5.7] [Social] Security Council\n\n::authors\n\n| **Status**            | Passed                                                                                                                   |\n| --------------------- | ------------------------------------------------------------------------------------------------------------------------ |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/temp-check-enable-cancel-role-on-the-dao/19090)                                    |\n| **Votes**             | [Snapshot](https://snapshot.box/#/s:ens.eth/proposal/0xf3a4673fe04a3ecfed4a2f066f6ced1539a5466d61630428333360b843653c54) |", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 374, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6e4c799a-4780-47b7-9347-eab1ed871a97": {"__data__": {"id_": "6e4c799a-4780-47b7-9347-eab1ed871a97", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.7.mdx", "file_name": "5.7.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.7.mdx", "header_path": "/[EP5.7] [Social] Security Council/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.7.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["primary", "govern", "economic", "attacks", "protocol", "abstract", "treasury", "changing", "allocate", "vulnerable", "mission", "increasingly", "broader", "constitution", "resources"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8dcf60d2e6d1f70a71948bed9d17b41b268158af", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.7.mdx", "file_name": "5.7.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.7.mdx"}, "hash": "fa584eacc7d076d9b8cb164d2690dc239003ee72884f81662f008b5684a07dcf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f668a0fb-8dbe-4935-8f31-a9c71e4c596d", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.7.mdx", "file_name": "5.7.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.7.mdx", "header_path": "/"}, "hash": "55fc8e144ea2a67077331da33bf10084103991d8575e72c3a2f64fe62cdc27f7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9627830b-cf6a-4fb9-a6b4-e7797a152ef8", "node_type": "1", "metadata": {"header_path": "/[EP5.7] [Social] Security Council/"}, "hash": "da4d12c6ae8e52503f82d3273c235eea8f5811266180754dd80c48e2d0c6b125", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Abstract\n\nThe primary mission of ENS DAO is to govern the protocol and allocate resources from the treasury in line with the DAO's constitution and broader objectives. However, due to changing economic dynamics, the DAO is increasingly vulnerable to attacks aimed at draining its treasury.\n\nTo safeguard the DAO's integrity and longevity, a Security Council with the authority to cancel malicious proposals is needed. To avoid perpetuating centralized power, the Security Council's authority will have a built-in expiration date. After two years, anyone will be able to call a function that revokes the council's power to veto proposals, ensuring a time-limited mechanism to counter malicious attacks while promoting more delegation and governance distribution.", "mimetype": "text/plain", "start_char_idx": 1021, "end_char_idx": 1785, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9627830b-cf6a-4fb9-a6b4-e7797a152ef8": {"__data__": {"id_": "9627830b-cf6a-4fb9-a6b4-e7797a152ef8", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.7.mdx", "file_name": "5.7.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.7.mdx", "header_path": "/[EP5.7] [Social] Security Council/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.7.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["imbalance", "acquire", "delegated", "tokens", "actively", "motivation", "attacker", "treasury", "percentage", "enough", "creates", "always", "could", "where", "continues"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8dcf60d2e6d1f70a71948bed9d17b41b268158af", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.7.mdx", "file_name": "5.7.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.7.mdx"}, "hash": "fa584eacc7d076d9b8cb164d2690dc239003ee72884f81662f008b5684a07dcf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6e4c799a-4780-47b7-9347-eab1ed871a97", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.7.mdx", "file_name": "5.7.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.7.mdx", "header_path": "/[EP5.7] [Social] Security Council/"}, "hash": "25fa9a0e819790837f6968e4d2820fb3692ca372eb1f4ffd479abb21f6e8a43d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3d99ecd1-678e-463a-8c37-656eb7c32fd9", "node_type": "1", "metadata": {"header_path": "/[EP5.7] [Social] Security Council/"}, "hash": "6b9a995e56d6be193dc6f54aaf031a8938fd75498ef3ddfa65b75d95fccd1e3b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Motivation\n\nAs ENS continues to grow, its treasury in ETH is always growing. Simultaneously, the percentage of tokens actively delegated is on the decline.\n\n![Dune.png](https://ipfs.io/ipfs/bafkreifqrdrm5t3qzlbbsssdlebild2azbfovyjixwa5cedlg5f3ijsxuu)\n\nThis imbalance creates a risk where an attacker could acquire enough $ENS to gain control of the DAO at a cost lower than the treasury's total value. This has been a growing concern since March 2023.\n\n![image](https://ipfs.io/ipfs/bafkreicuwrazcaaxvn6ywavjzc2ozutbmnbt5q2pd2lfakb6d7iszfq4q4)\n\nPast attacks on DAOs have exploited similar vulnerabilities, with some [being thwarted](https://twitter.com/AragonProject/status/1656028382939815937) by components with veto power. Currently, the ENS governance process involves a proposal passing through the governor, relying on delegated voting power for approval. If approved, the governor queues the proposal in a timelock contract, delaying execution by two days. While the governor can cancel proposals, it follows the same pathway as a malicious proposal, introducing potential risks.\n\nThe short-term solution was delegating 3.8M $ENS to a contract that can only vote \"Against\"; more details about this can be found in [Nick's forum post](https://discuss.ens.domains/t/introducing-veto-ensdao-eth/19088). The attack is still profitable and, depending on market conditions can be up to a 3x ROI, like in Dec 2023. We need a mid-term solution to cancel the attack, which is this proposal. An article about this research done by the Blockful team will be published [here](https://blockful.io/blog/ens-security-council-snapshot) after the proposal is executed and there is no attack risk.", "mimetype": "text/plain", "start_char_idx": 1787, "end_char_idx": 3476, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3d99ecd1-678e-463a-8c37-656eb7c32fd9": {"__data__": {"id_": "3d99ecd1-678e-463a-8c37-656eb7c32fd9", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.7.mdx", "file_name": "5.7.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.7.mdx", "header_path": "/[EP5.7] [Social] Security Council/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.7.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["power", "modify", "ability", "controlled", "security", "enhance", "proposals", "granting", "initiate", "council", "multisig", "without", "contract", "cancel", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8dcf60d2e6d1f70a71948bed9d17b41b268158af", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.7.mdx", "file_name": "5.7.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.7.mdx"}, "hash": "fa584eacc7d076d9b8cb164d2690dc239003ee72884f81662f008b5684a07dcf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9627830b-cf6a-4fb9-a6b4-e7797a152ef8", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.7.mdx", "file_name": "5.7.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.7.mdx", "header_path": "/[EP5.7] [Social] Security Council/"}, "hash": "494d4c9a1d85277dc2ccf052a7e9654636276262ed43a206fcec50db2dcac588", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8f11e3e7-5da1-428b-be09-b36924d10610", "node_type": "1", "metadata": {"header_path": "/[EP5.7] [Social] Security Council/"}, "hash": "6f7dc4f205704afefca37bd119ac409450bd498ca2a39db6d1cc3141efe477e7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\nTo enhance security, a veto contract will be deployed. Controlled by a Security Council multisig and will have the PROPOSER_ROLE in the timelock, granting it the ability to cancel proposals without the power to initiate or modify other DAO actions. The scope of this proposal is to assign the PROPOSER_ROLE to the veto contract,\n\nTo ensure decentralization, the contract will also feature a time-based expiration mechanism that allows anyone to revoke the PROPOSER_ROLE after two years. This window provides time to strengthen delegation and address current vulnerabilities, facilitating the DAO's transition to a more secure governance model.", "mimetype": "text/plain", "start_char_idx": 3478, "end_char_idx": 4139, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8f11e3e7-5da1-428b-be09-b36924d10610": {"__data__": {"id_": "8f11e3e7-5da1-428b-be09-b36924d10610", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.7.mdx", "file_name": "5.7.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.7.mdx", "header_path": "/[EP5.7] [Social] Security Council/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.7.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["considerations", "allows", "overly", "broad", "directly", "security", "multisig", "address", "proposals", "within", "requirements", "timelock", "assigning", "contract"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8dcf60d2e6d1f70a71948bed9d17b41b268158af", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.7.mdx", "file_name": "5.7.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.7.mdx"}, "hash": "fa584eacc7d076d9b8cb164d2690dc239003ee72884f81662f008b5684a07dcf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3d99ecd1-678e-463a-8c37-656eb7c32fd9", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.7.mdx", "file_name": "5.7.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.7.mdx", "header_path": "/[EP5.7] [Social] Security Council/"}, "hash": "1449cc2858d91ad4da14d99a76d17a5dd6b192bffb6c82ecf3ec18b461be642a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9aed861d-d98a-40f3-b029-f58961a42181", "node_type": "1", "metadata": {"header_path": "/[EP5.7] [Social] Security Council/"}, "hash": "8ac00d6674dc168aa565d5d6c97557eeeede5c738372b82c6fa6decbbeaf7cb4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Security considerations\n\nAssigning the PROPOSER_ROLE to a multisig within the timelock contract is overly broad for our requirements as it allows the address to add proposals directly to the queue. If the multisig signers are compromised, they could potentially propose and execute malicious changes. Therefore our approach would be to deploy a new contract similar to the current veto.ensdao.eth contract, which can only do one action: to CANCEL a transaction in the timelock. That would be a trivially simple contract and it would be hard locked to only accept calls from a newly created SAFE multisig.\n\nThe risk is mitigated but one scenario remains: if the whole multisig is compromised then a malicious entity could kick other signers and effectively stop the DAO from executing proposals by canceling all transactions, including any that would remove this contract from the proposal role. Anyways, after 2 years, anyone can remove the proposal role.\n\nWith that in light. the following considerations are essential for ensuring the Security Council's multisig operates securely:\n\n- Availability of Signers: It is critical to avoid scenarios where signers are unavailable during emergencies. Events like the Shanghai attack, where real-life occurrences prevent signers from accessing their wallets, must be avoided. Council members should ensure wallets and necessary equipment are accessible at all times.\n- Secure Wallet Practices: Security Council addresses should be exclusive to ENS-related operations. Private keys must be stored using best practices to minimize exposure to risks.\n\nFinding the right balance for the multisig threshold is crucial. A higher threshold can complicate coordination but reduces the risk of malicious activity. A lower threshold, while more agile, could make the DAO more susceptible to attacks or unintended consequences if a few signers are compromised. The suggested composition is a 4/8 multisig.", "mimetype": "text/plain", "start_char_idx": 4141, "end_char_idx": 6082, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9aed861d-d98a-40f3-b029-f58961a42181": {"__data__": {"id_": "9aed861d-d98a-40f3-b029-f58961a42181", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.7.mdx", "file_name": "5.7.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.7.mdx", "header_path": "/[EP5.7] [Social] Security Council/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.7.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["operations", "other", "those", "responsibilities", "backed", "clear", "expectations", "security", "interest", "council", "roles", "gains", "might", "everyone"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8dcf60d2e6d1f70a71948bed9d17b41b268158af", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.7.mdx", "file_name": "5.7.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.7.mdx"}, "hash": "fa584eacc7d076d9b8cb164d2690dc239003ee72884f81662f008b5684a07dcf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8f11e3e7-5da1-428b-be09-b36924d10610", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.7.mdx", "file_name": "5.7.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.7.mdx", "header_path": "/[EP5.7] [Social] Security Council/"}, "hash": "1aeede96b2a8c31267f377cbf853f4e4944da863dcc5084c20d7d41a0fab803d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Council Operations\n\nIt is in the best interest of everyone to make clear the expectations and responsibilities ENS DAO put on those members, backed by the reputation, other roles and gains those might have in the organization.\n\nThe security council is expected to act only in emergency, in the given following situations or similar cases:\n\n- If a proposal goes against the ENS constitution\n- If a proposal is approved with malicious intent against the DAO longevity/sustainability\n- If such proposal is approved by any group of voters, but directly financially incentivised to vote against the DAOs interests to preserve their own financial stake.\n- If any approved proposal goes directly against the DAO for the sole benefit of an attacker.\n\nThose definitions are not exhaustive, and the trust deposited in the elected members for the council also encompasses the trust in their capacity to:\n\n- understand ENS DAO thoroughly\n- listening to the community feedback on extreme situations\n- take quick action on behalf of the DAO\n- comprehend the proposals being approved and their repercussions\n\nThe Security Council members will be the same signers for the veto.ensdao.eth, their identities are known, have signed a pledged to uphold the ENS constitution and live in countries with a solid legal system.", "mimetype": "text/plain", "start_char_idx": 6084, "end_char_idx": 7389, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ac36254f-a199-4d58-85dc-9ef7a8bd4384": {"__data__": {"id_": "ac36254f-a199-4d58-85dc-9ef7a8bd4384", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.8.mdx", "file_name": "5.8.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.8.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.8.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["safeguard", "ensuring", "power", "security", "counter", "malicious", "proposal", "council", "promoting", "decentralized", "passed", "integrity", "vesting", "establishing", "steward"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c23329205d3abe0e591c33e5bdf037be100b82f8", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.8.mdx", "file_name": "5.8.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.8.mdx"}, "hash": "d7d03fd10a99e5fe4df62f3d877848846eca93bafe9d5fe71a65c00a8e991f8f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "690157ce-90e2-484b-a190-251539d65ade", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "394b414c4248881ce1860158a7864fd51d2c772a84d50cf543bba9f2597e13c8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: \"This EP aims to safeguard the DAO by establishing a Security Council with a two-year, time-limited veto power to counter malicious proposals, ensuring the protocol's integrity and promoting decentralized governance.\"\nauthors: ['fireeyesdao.eth']\nproposal:\n  snapshot: '0x1f328fd1fda5f3cabfdace3e521403def7ad41b0b0582e27334c135cd23c511d'\n  type: 'social'\n--- # [5.8] [Social] ENS Steward Vesting Proposal\n\n::authors\n\n| **Status**            | Passed                                                                                                                   |\n| --------------------- | ------------------------------------------------------------------------------------------------------------------------ |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/5-8-social-ens-steward-vesting-proposal/19059)                                     |\n| **Votes**             | [Snapshot](https://snapshot.box/#/s:ens.eth/proposal/0x1f328fd1fda5f3cabfdace3e521403def7ad41b0b0582e27334c135cd23c511d) |", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 375, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2c87ceec-bebe-4142-99e9-0059e2b39a71": {"__data__": {"id_": "2c87ceec-bebe-4142-99e9-0059e2b39a71", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.8.mdx", "file_name": "5.8.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.8.mdx", "header_path": "/[5.8] [Social] ENS Steward Vesting Proposal/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.8.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["check", "feedback", "requirement", "metagov", "request", "abstract", "amendment", "proposal", "looks", "following", "funding", "discussion", "together", "which", "thread"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c23329205d3abe0e591c33e5bdf037be100b82f8", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.8.mdx", "file_name": "5.8.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.8.mdx"}, "hash": "d7d03fd10a99e5fe4df62f3d877848846eca93bafe9d5fe71a65c00a8e991f8f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "690157ce-90e2-484b-a190-251539d65ade", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.8.mdx", "file_name": "5.8.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.8.mdx", "header_path": "/"}, "hash": "a065ff5518b8ec73cd289ee553ecf0efc96e3d130e9eca5c4ace0beb5b54e3f8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8a609de4-2b84-4727-8ddb-e729827315ff", "node_type": "1", "metadata": {"header_path": "/[5.8] [Social] ENS Steward Vesting Proposal/"}, "hash": "102eaffdd06fe83b2134fe0f52fc7c25d63a36477491516249c9cc2c5edc206c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Abstract\n\nFollowing discussion in the Metagov funding request thread and feedback on the Temp Check Proposal, we have put together this amendment proposal which looks to add the requirement of vesting to ENS distributions to stewards for the current term.\n\nUnder the current proposal, the MetaGov Working Group will be distributed liquid ENS tokens which will then be distributed individually to stewards. As discussed on the forum and on Meta-Gov calls, these tokens should be vested in order to ensure long-term alignment of stewards with the DAO, whilst ensuring that they are able to use the tokens to particiapte in governance.\n\nThis proposal is only in reference to adding vesting to current term steward allocations. With more discussion and input needed for any other changes to steward compensation going forward.", "mimetype": "text/plain", "start_char_idx": 1032, "end_char_idx": 1857, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8a609de4-2b84-4727-8ddb-e729827315ff": {"__data__": {"id_": "8a609de4-2b84-4727-8ddb-e729827315ff", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.8.mdx", "file_name": "5.8.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.8.mdx", "header_path": "/[5.8] [Social] ENS Steward Vesting Proposal/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.8.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["linear", "additional", "encourage", "months", "disbursements", "serves", "stewards", "schedule", "their", "vesting", "steward", "vested", "specification", "month"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c23329205d3abe0e591c33e5bdf037be100b82f8", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.8.mdx", "file_name": "5.8.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.8.mdx"}, "hash": "d7d03fd10a99e5fe4df62f3d877848846eca93bafe9d5fe71a65c00a8e991f8f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2c87ceec-bebe-4142-99e9-0059e2b39a71", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.8.mdx", "file_name": "5.8.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.8.mdx", "header_path": "/[5.8] [Social] ENS Steward Vesting Proposal/"}, "hash": "6bf3a79052d1e980ec796b18027fe35e9106b2c035ee73a59351ea1e0a7b2cd2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4c498e28-1392-418a-abe9-c63836673bc1", "node_type": "1", "metadata": {"header_path": "/[5.8] [Social] ENS Steward Vesting Proposal/"}, "hash": "79ee8cbeed6409eeba0d1526d427056486c54fa77a56674a9b64f4ac6c33639e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\nAll ENS disbursements to stewards will be vested on a linear 24 month schedule from the time of their appointment. In line with the 12 month term that each steward serves plus an additional 12 months of vesting to encourage longterm DAO alignment.\n\nThis vesting will be implemented by using Hedgey which allows stewards to access the full voting power of their allocated tokens up front, whilst ensuring that the monetary value of these tokens can only be accessed based on the vesting schedule.\n\nAll ENS marked for steward compensation will be transferred via executable proposal to the metagov WG multisig. Term 5 stewards were appointed at the beginning of Q1 2024, and as such are already 4 and a half months into their term.\n\nFor the current term's stewards, ENS vesting will be scaled retroactively based on the time since their appointment. ~37.5% of ENS will be distributed to stewards directly from the multisig, whilst the remaining ENS will then be deposited into each steward's vesting contract. These contracts will be set up by Hedgey.", "mimetype": "text/plain", "start_char_idx": 1859, "end_char_idx": 2926, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4c498e28-1392-418a-abe9-c63836673bc1": {"__data__": {"id_": "4c498e28-1392-418a-abe9-c63836673bc1", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.8.mdx", "file_name": "5.8.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.8.mdx", "header_path": "/[5.8] [Social] ENS Steward Vesting Proposal/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.8.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["structure", "against", "group", "adjusts", "apply", "current", "guidance", "token", "working", "vesting", "abstain", "distributions"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c23329205d3abe0e591c33e5bdf037be100b82f8", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.8.mdx", "file_name": "5.8.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.8.mdx"}, "hash": "d7d03fd10a99e5fe4df62f3d877848846eca93bafe9d5fe71a65c00a8e991f8f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8a609de4-2b84-4727-8ddb-e729827315ff", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.8.mdx", "file_name": "5.8.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.8.mdx", "header_path": "/[5.8] [Social] ENS Steward Vesting Proposal/"}, "hash": "d1231424c7d24b246d07bd29456b3735b9eab60a354732a4eb6382b49a97c89e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Vote\n\n- For - Apply vesting to the current term\n- Against - Do not apply vesting to the current term in line with the 2023/2024 guidance\n- Abstain\n\nThis vote adjusts the structure of ENS token distributions to stewards, and if passed, the Meta-gov working group will implement this vesting schedule (and associated tooling) for all ENS token distributions to stewards. ---\ndescription: 'This proposal seeks to use the June 2024 funding window to request Q1/Q2 funding for the ENS Meta-Governance Working Group, following the failure of the March 2024 funding request, to cover operations until the next window in September 2024.'\nauthors: ['5pence.eth']\nproposal:\n  snapshot: '0x66d355555c24ed0d2fed0aee89e4fe009e2925c84144c4edc707d33e7c19e554'\n  type: 'social'\n---", "mimetype": "text/plain", "start_char_idx": 2928, "end_char_idx": 3299, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cbb3a478-c18d-4cbc-b1ae-fbeb93558a62": {"__data__": {"id_": "cbb3a478-c18d-4cbc-b1ae-fbeb93558a62", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.9.mdx", "file_name": "5.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.9.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.9.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["group", "passed", "funding", "working"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fee24e8db4e27a615822f30ea775a10b2d7b6b3d", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.9.mdx", "file_name": "5.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.9.mdx"}, "hash": "b3642ba65c983a9553d2623ebafeb4f9db1803801857951d03569d9e131a9ceb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c334aef9-8089-4785-92b7-c11429f61ecb", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.9.mdx", "file_name": "5.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.9.mdx", "header_path": "/"}, "hash": "701ccd5da1d02ccdaf153702defe2d931620d6a18bd5feb228fb218eff46a182", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0415416f-84c3-405b-8fb8-5359f8fabb0d", "node_type": "1", "metadata": {"header_path": "/[5.9] [Social] Funding Request: ENS Meta-Governance Working Group Term 5 (Q1/Q2)/"}, "hash": "f866c019f9e9ee43284f6a57f3f7bbc38f3c37c42180104c365b9051e4c24e1e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# [5.9] [Social] Funding Request: ENS Meta-Governance Working Group Term 5 (Q1/Q2)\n\n::authors\n\n| **Status**            | Passed                                                                                                                   |\n| --------------------- | ------------------------------------------------------------------------------------------------------------------------ |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/5-9-1-social-funding-request-ens-meta-governance-working-group-term-5-q1-q2/19223) |\n| **Votes**             | [Snapshot](https://snapshot.box/#/s:ens.eth/proposal/0x66d355555c24ed0d2fed0aee89e4fe009e2925c84144c4edc707d33e7c19e554) |", "mimetype": "text/plain", "start_char_idx": 398, "end_char_idx": 1088, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0415416f-84c3-405b-8fb8-5359f8fabb0d": {"__data__": {"id_": "0415416f-84c3-405b-8fb8-5359f8fabb0d", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.9.mdx", "file_name": "5.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.9.mdx", "header_path": "/[5.9] [Social] Funding Request: ENS Meta-Governance Working Group Term 5 (Q1/Q2)/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.9.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["metagov", "request", "needed", "abstract", "group", "march", "window", "using", "funding", "failed", "support", "working"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fee24e8db4e27a615822f30ea775a10b2d7b6b3d", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.9.mdx", "file_name": "5.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.9.mdx"}, "hash": "b3642ba65c983a9553d2623ebafeb4f9db1803801857951d03569d9e131a9ceb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cbb3a478-c18d-4cbc-b1ae-fbeb93558a62", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.9.mdx", "file_name": "5.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.9.mdx", "header_path": "/"}, "hash": "682bdae1b04510c9289d16c93d051d845feca9201cae8ec6d21680c5805d28c1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "77c0b8e8-4de3-4f11-8594-a5d8729b8d26", "node_type": "1", "metadata": {"header_path": "/[5.9] [Social] Funding Request: ENS Meta-Governance Working Group Term 5 (Q1/Q2)/"}, "hash": "6b529a3e7b52702255e56b866d72fe89fcbee354494d70cacae3118d8143fd66", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Abstract\n\nIn March 2024, The ENS Metagov funding request for Q1/Q2 failed to gain the support needed to pass.  \nThe ENS Meta-Governance Working Group is now using the June 2024 funding window to request the Q1/Q2 funding to cover operations until the next funding window in September 2024.\n\nThe Meta-Governance Working Group is responsible for providing governance oversight and supporting the management and operation of working groups through DAO tooling and governance initiatives as well as treasury management for the DAO.\n\nThis social proposal is submitted to satisfy the requirements set out in Rule 10.1.1 of the Working Group Rules ([EP 1.8](https://docs.ens.domains/v/governance/governance-proposals/term-1/ep12-working-group-rules)) and further required by [this snapshot proposal in Nov. 2023 modifying steward rules.](https://snapshot.org/#/ens.eth/proposal/0x26a5c8dec547837495707e70446d1e7cd874a91f75753c602998f6e70083a266) If this proposal is passed, the funding request will be included in a collective executable proposal put forward by all three Working Groups.", "mimetype": "text/plain", "start_char_idx": 1090, "end_char_idx": 2173, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "77c0b8e8-4de3-4f11-8594-a5d8729b8d26": {"__data__": {"id_": "77c0b8e8-4de3-4f11-8594-a5d8729b8d26", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.9.mdx", "file_name": "5.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.9.mdx", "header_path": "/[5.9] [Social] Funding Request: ENS Meta-Governance Working Group Term 5 (Q1/Q2)/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.9.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["amount", "metagov", "september", "description", "treasury", "anticipated", "budgetary", "multisig", "fulfill", "requested", "needs", "through", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fee24e8db4e27a615822f30ea775a10b2d7b6b3d", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.9.mdx", "file_name": "5.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.9.mdx"}, "hash": "b3642ba65c983a9553d2623ebafeb4f9db1803801857951d03569d9e131a9ceb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0415416f-84c3-405b-8fb8-5359f8fabb0d", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.9.mdx", "file_name": "5.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.9.mdx", "header_path": "/[5.9] [Social] Funding Request: ENS Meta-Governance Working Group Term 5 (Q1/Q2)/"}, "hash": "48b9a3a9c83807551a115073f8bc1060960df66c44ce15c56f42258c07af198c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "065debb9-b3ed-4662-b5dc-eb04c870e703", "node_type": "1", "metadata": {"header_path": "/[5.9] [Social] Funding Request: ENS Meta-Governance Working Group Term 5 (Q1/Q2)/"}, "hash": "f0df5dd863843c510b38b0c8ecd5f7be9b51f8e9a00bde9ac395aa6725d72b46", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\nThis specification is the amount requested from the DAO treasury to the Metagov Multisig to fulfill anticipated budgetary needs through September 2024.\n\n|                            | USDC | ETH | $ENS |\n| -------------------------- | :--: | :-: | :--: |\n| ENS Meta-Gov Main Multisig | 374k |  0  | 150k | ## Description ### Current Metagov Wallet Balances (May 25th, 2024)\n\n|                            | USDC | ETH  | $ENS |\n| -------------------------- | :--: | :--: | :--: |\n| ENS Meta-Gov Main Multisig | 199k | 83.7 | 15k  |\n\n\\*Updated Balance information can be found at https://enswallets.xyz", "mimetype": "text/plain", "start_char_idx": 2175, "end_char_idx": 2498, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ebce57b5-9b0e-4045-8626-0f88300778c2": {"__data__": {"id_": "ebce57b5-9b0e-4045-8626-0f88300778c2", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.9.mdx", "file_name": "5.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.9.mdx", "header_path": "/[5.9] [Social] Funding Request: ENS Meta-Governance Working Group Term 5 (Q1/Q2)/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.9.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["final", "depends", "funds", "aside", "strive", "coverage", "pending", "anticipate", "ensure", "spending", "while", "estimate", "expenditures"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fee24e8db4e27a615822f30ea775a10b2d7b6b3d", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.9.mdx", "file_name": "5.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.9.mdx"}, "hash": "b3642ba65c983a9553d2623ebafeb4f9db1803801857951d03569d9e131a9ceb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "38938c50-03dd-464a-8ef9-f64e716d9598", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.9.mdx", "file_name": "5.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.9.mdx", "header_path": "/[5.9] [Social] Funding Request: ENS Meta-Governance Working Group Term 5 (Q1/Q2)/Description/"}, "hash": "b3e390fa2f0970d65cfbfdbcc2bea3014ef47c2960fd0a98f0d8ba336572a64c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c18b076f-5e71-49ce-8fdd-01d7a3534e0e", "node_type": "1", "metadata": {"header_path": "/[5.9] [Social] Funding Request: ENS Meta-Governance Working Group Term 5 (Q1/Q2)/Expenditures/"}, "hash": "4f3d7dcaf65fc512b5867d7421cd49b4893eeec2cd2cfb9968fa4bfd1ec43e4d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Expenditures\n\nMeta-Gov sets aside funds to ensure coverage for mission-critical initiatives. While we strive to estimate term expenditures accurately, the final spending depends on pending initiatives. We anticipate that final expenditures will not surpass the expected expenses allocated for the term. ### Expected Expenses in Q1/Q2 2024\n\n|                                  | USDC        | ETH    | $ENS     |\n| -------------------------------- | ----------- | ------ | -------- |\n| Steward + Secretary Compensation | 294,000     | -      |          |\n| Governance                       | 50,000      | 5      | 105k     |\n| DAO Tooling                      | 140,000     | -      | -        |\n| Discretionary                    | -           | 10     | -        |\n| **Total Balance**                | **484,000** | **15** | **105k** |", "mimetype": "text/plain", "start_char_idx": 2797, "end_char_idx": 3102, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f7ac6d86-b0f5-4253-bbdc-bc0b43fa3069": {"__data__": {"id_": "f7ac6d86-b0f5-4253-bbdc-bc0b43fa3069", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.9.mdx", "file_name": "5.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.9.mdx", "header_path": "/[5.9] [Social] Funding Request: ENS Meta-Governance Working Group Term 5 (Q1/Q2)/Expenditures/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.9.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["amount", "developers", "category", "method", "stewards", "elected", "contributors", "vesting", "recipient", "contracts", "change", "distributions", "governance"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fee24e8db4e27a615822f30ea775a10b2d7b6b3d", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.9.mdx", "file_name": "5.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.9.mdx"}, "hash": "b3642ba65c983a9553d2623ebafeb4f9db1803801857951d03569d9e131a9ceb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c18b076f-5e71-49ce-8fdd-01d7a3534e0e", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.9.mdx", "file_name": "5.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.9.mdx", "header_path": "/[5.9] [Social] Funding Request: ENS Meta-Governance Working Group Term 5 (Q1/Q2)/Expenditures/"}, "hash": "f3a826e358552580f7bd7227069ee2a26ce44d1e5c39da7a4691dfb65a01d52f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "99ad9764-d836-4813-9dca-22790911bf19", "node_type": "1", "metadata": {"header_path": "/[5.9] [Social] Funding Request: ENS Meta-Governance Working Group Term 5 (Q1/Q2)/Expenditures/"}, "hash": "3edeb80724c2776eb606646708419a4e150da54176ece8eb34e717852c423be9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Governance Distributions\n\n| Recipient Category          | Amount of $ENS | Method                                                                                                                                                                                                                   |\n| --------------------------- | -------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| Contributors and Developers | 60k            | Vesting contracts                                                                                                                                                                                                        |\n| Elected Stewards            | 90k            | A change to 90k and vesting contracts was required to comply with the vesting process described in [[EP5.8](https://snapshot.org/#/ens.eth/proposal/0x1f328fd1fda5f3cabfdace3e521403def7ad41b0b0582e27334c135cd23c511d)] |", "mimetype": "text/plain", "start_char_idx": 3639, "end_char_idx": 4740, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "99ad9764-d836-4813-9dca-22790911bf19": {"__data__": {"id_": "99ad9764-d836-4813-9dca-22790911bf19", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.9.mdx", "file_name": "5.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.9.mdx", "header_path": "/[5.9] [Social] Funding Request: ENS Meta-Governance Working Group Term 5 (Q1/Q2)/Expenditures/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.9.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["group", "description", "stewards", "costs", "required", "working", "secretary", "compensation", "steward", "cover", "supporting"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fee24e8db4e27a615822f30ea775a10b2d7b6b3d", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.9.mdx", "file_name": "5.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.9.mdx"}, "hash": "b3642ba65c983a9553d2623ebafeb4f9db1803801857951d03569d9e131a9ceb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f7ac6d86-b0f5-4253-bbdc-bc0b43fa3069", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.9.mdx", "file_name": "5.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.9.mdx", "header_path": "/[5.9] [Social] Funding Request: ENS Meta-Governance Working Group Term 5 (Q1/Q2)/Expenditures/"}, "hash": "821d660507d4ebe2075da650b1086436507f0a402b03907845a0cb5e9ebf7048", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7bd87e70-9614-4b72-83c8-64832f427e16", "node_type": "1", "metadata": {"header_path": "/[5.9] [Social] Funding Request: ENS Meta-Governance Working Group Term 5 (Q1/Q2)/"}, "hash": "5b4437688f6b6c9258abc92524c73112c7f72dd9d6e47605b1c44b7d6137f46d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Description of Initiatives/Pods\n\n- **Steward + Secretary Compensation**: Working Group Steward and Secretary compensation as required by [revised steward working group rules](https://snapshot.org/#/ens.eth/proposal/0x26a5c8dec547837495707e70446d1e7cd874a91f75753c602998f6e70083a266) and [totaling $294,000 USDC to cover the costs for all 9 stewards and supporting roles for a 6 month period](https://discuss.ens.domains/t/ens-dao-steward-compensation/18063).\n- **Governance**: Fee reimbursements and initiatives related to reducing friction in the governance process. This can also include $ENS distributed in order to lower barriers to the governance proposal process. The $ENS distributions to stewards and service providers falls into this category.\n- **DAO Tooling**: Developing interfaces and dashboards to improve the governance process and increase transparency across the DAO. An example of DAO tooling spend is our current engagement with Agora as they help build out an enhanced DAO proposal flow to streamline the proposal process.\n- **Discretionary**: Funds distributed at the discretion of stewards towards new initiatives + governance experiments. In this cycle, we've consolidated the former DAO Sponsorship category into this discretionary category.", "mimetype": "text/plain", "start_char_idx": 4742, "end_char_idx": 6011, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7bd87e70-9614-4b72-83c8-64832f427e16": {"__data__": {"id_": "7bd87e70-9614-4b72-83c8-64832f427e16", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/5.9.mdx", "file_name": "5.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.9.mdx", "header_path": "/[5.9] [Social] Funding Request: ENS Meta-Governance Working Group Term 5 (Q1/Q2)/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.9.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["management", "ensuring", "request", "group", "providing", "allow", "funding", "working", "continue", "essential", "operation", "conclusion", "supporting", "governance"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fee24e8db4e27a615822f30ea775a10b2d7b6b3d", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/5.9.mdx", "file_name": "5.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.9.mdx"}, "hash": "b3642ba65c983a9553d2623ebafeb4f9db1803801857951d03569d9e131a9ceb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "99ad9764-d836-4813-9dca-22790911bf19", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/5.9.mdx", "file_name": "5.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.9.mdx", "header_path": "/[5.9] [Social] Funding Request: ENS Meta-Governance Working Group Term 5 (Q1/Q2)/Expenditures/"}, "hash": "66182474e4c8674048eef803e5333fee065ebf076a1e60a17f4d0707d1f31a17", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Conclusion\n\nThis funding request will allow the ENS Meta-Governance Working Group to continue its essential work in providing governance oversight, supporting the management and operation of working groups, and ensuring effective treasury management for the DAO. The requested funds will enable us to maintain our ongoing initiatives and develop new tools to enhance the governance process. We are grateful for the community's ongoing support and engagement, which is crucial to the success of the ENS DAO. The Meta-Governance Working Group remains committed to serving the ENS community and driving the long-term growth and sustainability of the ecosystem.", "mimetype": "text/plain", "start_char_idx": 6013, "end_char_idx": 6673, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bd4eec5a-9bfa-4684-87b9-97c789ba1005": {"__data__": {"id_": "bd4eec5a-9bfa-4684-87b9-97c789ba1005", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/6.1.mdx", "file_name": "6.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/6.1.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/6.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["operating", "passed", "convert", "expenses"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "64eb0119282fd09fee22b48cc04566a64f67a96d", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/6.1.mdx", "file_name": "6.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/6.1.mdx"}, "hash": "aa03fdf1882029d7de4584133e9070abc5016472bc2e58dc29ebbf3c6028d37d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1f24fb59-410c-444a-8cdb-25374b848f1c", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "3027e95b40e6ca5b4d061f72e577b6b4acbbcfba46b62b3f3332f5efe5874c70", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: 'Convert 6,000 ETH to USDC for DAO Operating Expenses.'\nauthors: ['nick.eth']\nproposal:\n  tally: '33808096277765934415068056906696425640427679116963285327644834080891069190379'\n  type: 'executable'\n--- # [EP 6.1] [Executable] Convert 6,000 ETH to USDC for DAO Operating Expenses\n\n::authors\n\n| **Status**            | Passed                                                                                                                    |\n| --------------------- | ------------------------------------------------------------------------------------------------------------------------- |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/ep-6-1-executable-convert-6-000-eth-to-usdc-for-dao-operating-expenses/20138)       |\n| **Votes**             | [Agora](https://agora.ensdao.org/proposals/33808096277765934415068056906696425640427679116963285327644834080891069190379) |", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 218, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "068f1a58-5e9b-43a6-9f65-10386d6b9015": {"__data__": {"id_": "068f1a58-5e9b-43a6-9f65-10386d6b9015", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/6.1.mdx", "file_name": "6.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/6.1.mdx", "header_path": "/[EP 6.1] [Executable] Convert 6,000 ETH to USDC for DAO Operating Expenses/", "customer_id": 1, "source_url": "src/pages/dao/proposals/6.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["months", "secure", "motivation", "replenish", "abstract", "convert", "propose", "february", "rationale", "approximately", "reserves", "operational", "executed", "generating"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "64eb0119282fd09fee22b48cc04566a64f67a96d", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/6.1.mdx", "file_name": "6.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/6.1.mdx"}, "hash": "aa03fdf1882029d7de4584133e9070abc5016472bc2e58dc29ebbf3c6028d37d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1f24fb59-410c-444a-8cdb-25374b848f1c", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/6.1.mdx", "file_name": "6.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/6.1.mdx", "header_path": "/"}, "hash": "28db20b4d8a7619d7bfc7231ed10fbf429f6dfeb52d305712ef516640d499915", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e28767dd-1311-4428-978f-f03e1f98ee01", "node_type": "1", "metadata": {"header_path": "/[EP 6.1] [Executable] Convert 6,000 ETH to USDC for DAO Operating Expenses/"}, "hash": "9b3a638694c7d8973670f567b81ec0416eb5dfae53742ba93eb4e46327f80ac3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Abstract\n\nWe propose to convert 6,000 ETH into USDC to replenish the USDC reserves in the [DAO's treasury](https://etherscan.io/address/0xfe89cc7abb2c4183683ab71653c4cdc9b02d44b7). ## Motivation\n\nIn February 2023, the DAO executed a swap of 10,000 ETH into USDC via [EP 3.3](https://www.tally.xyz/gov/ens/proposal/45461903078948131870051132081249892009497709518413744958551889217805827301425), generating approximately $16.2M in USDC. The rationale at the time was to secure 18\u201324 months of operational runway.\n\nOver the past 21 months, the USDC reserves have been effectively utilised to fund ENS DAO's operations. However, these reserves have now been fully depleted. To ensure financial stability and effective liquidity management, it is prudent to secure a 12-month runway in the DAO's wallet to cover operating expenses.\n\nWe propose ENS convert 6,000 ETH (~$20.4M at $3,200/ETH) to replenish the USDC reserves. These funds will be used to meet ongoing commitments, such as payments to [ENS Labs](https://discuss.ens.domains/t/ep-5-22-ensv2-development-funding-request/19762), and [Service Provider streams](https://docs.ens.domains/dao/proposals/5.2) and DAO Working Groups.", "mimetype": "text/plain", "start_char_idx": 910, "end_char_idx": 1093, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1e34eba1-a04d-464c-bf1c-9a7b65037059": {"__data__": {"id_": "1e34eba1-a04d-464c-bf1c-9a7b65037059", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/6.1.mdx", "file_name": "6.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/6.1.mdx", "header_path": "/[EP 6.1] [Executable] Convert 6,000 ETH to USDC for DAO Operating Expenses/", "customer_id": 1, "source_url": "src/pages/dao/proposals/6.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["balance", "controller", "payload", "registrar", "proposal", "sweep", "solely", "transfer", "executable", "multisig", "created", "wallet", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "64eb0119282fd09fee22b48cc04566a64f67a96d", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/6.1.mdx", "file_name": "6.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/6.1.mdx"}, "hash": "aa03fdf1882029d7de4584133e9070abc5016472bc2e58dc29ebbf3c6028d37d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e28767dd-1311-4428-978f-f03e1f98ee01", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/6.1.mdx", "file_name": "6.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/6.1.mdx", "header_path": "/[EP 6.1] [Executable] Convert 6,000 ETH to USDC for DAO Operating Expenses/"}, "hash": "a5ef068932cb8a4a0ef09bd485a0c83572e58c83f29a376c7e1021d19a6e4f28", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\nThe executable proposal will transfer 6,000 ETH from the ENS DAO Wallet to a [new Safe](https://etherscan.io/address/0x02D61347e5c6EA5604f3f814C5b5498421cEBdEB) created solely for the swap of ETH to USDC. The proposal will also sweep the ETH balance in the [Old Registrar Controller ](https://debank.com/profile/0x283af0b28c62c092c9727f1ee09c02ca627eb7f5)to the DAO wallet.\n\nThe payload to transfer 6k ETH from the DAO Multisig is available [here](https://gist.github.com/JeronimoHoulin/5e4728d36bf5d2b7ee08b9382f61bf78). Transaction details:\n\n- From: ENS DAO Wallet ([wallet.ensdao.eth](https://etherscan.io/address/0xFe89cc7aBB2C4183683ab71653C4cdc9B02D44b7#multichain-portfolio))\n- Token: ETH\n- Amount: 6,000\n- Recipient: TWAP Safe ([0x02D6...BdEB](https://app.safe.global/home?safe=eth:0x02D61347e5c6EA5604f3f814C5b5498421cEBdEB))\n\nkarpatkey has deployed a [new Safe](https://app.safe.global/home?safe=eth:0x02D61347e5c6EA5604f3f814C5b5498421cEBdEB) dedicated solely for TWAPs, with karpatkey and ENS representatives as signers. The Safe has a threshold of 3 signatures and the following signers:\n\n1. DAO Wallet ([wallet.ensdao.eth](https://etherscan.io/address/0xfe89cc7abb2c4183683ab71653c4cdc9b02d44b7))\n2. karpatkey's Endowment manager Safe ([0xb423e0f6E7430fa29500c5cC9bd83D28c8BD8978](https://etherscan.io/address/0xb423e0f6E7430fa29500c5cC9bd83D28c8BD8978))\n3. ENS Labs' cold wallet ([coldwallet.ens.eth](https://etherscan.io/address/0x690F0581eCecCf8389c223170778cD9D029606F2))\n4. Metagov Working Group Safe ([main.mg.wg.ens.eth](https://etherscan.io/address/0x91c32893216dE3eA0a55ABb9851f581d4503d39b))\n\nThis allows for the segregation of funds between other ENS-related wallets (e.g. the Endowment Safe). This proposal sends 6,000 ETH to the newly created Safe.\n\nSigners will swap ETH to USDC via Cow's TWAP mechanism.\n\nThe rationale behind this framework is that [Cow's TWAP function](https://docs.cow.fi/cow-protocol/reference/contracts/programmatic/twap) is currently not supported by Tally or the Zodiac Roles Modifier (ZRM) permissions. Once TWAP permissions are integrated, ZRM can be onboarded to this Safe, allowing for the removal of the ENS signers.\n\nSafe keyholders will execute the following swaps:\n\n1. 1,000 ETH swap to meet immediate funding needs by the ENS DAO, executed as soon as funds become available.\n2. 5,000 ETH swap via a 3-month TWAP, conducted in 90 parts (~55.6 ETH sold per part), with wallet.ensdao.eth as recipient.\n\nThe payload to call withdraw() on the Old Registrar Controller, and send the funds to the DAO Multisig, is available [here](https://gist.github.com/JeronimoHoulin/f08e7a5704829df606602e53447569e3).\n\nTransaction details:\n\n- From: Old Registrar Controller (0x283af0b28c62c092c9727f1ee09c02ca627eb7f5)\n- Token: ETH\n- Amount: 4,241.966 (total balance)\n- Recipient: ENS DAO Wallet (wallet.ensdao.eth)", "mimetype": "text/plain", "start_char_idx": 2096, "end_char_idx": 4970, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2487a0c5-1ae7-4fb4-857e-3064199e76b8": {"__data__": {"id_": "2487a0c5-1ae7-4fb4-857e-3064199e76b8", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/6.2.mdx", "file_name": "6.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/6.2.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/6.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["tranche", "endowment", "passed", "funding", "expansion", "third"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8a96e4574aba7eb809847da71dd40c6938cf6f23", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/6.2.mdx", "file_name": "6.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/6.2.mdx"}, "hash": "be021de8d8fa4e5e91768d8abe94b9379a56a944069f0af73463601d60c6190d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4a1aea88-a38e-4601-9851-cfa71dd1e24e", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "c3566fdcecad8d4f9ed1cbb021c1123f724799498e3aa86535e0a6c819bf8ced", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: 'Expand the Endowment by funding a third tranche of 5,000 ETH.'\nauthors: ['5pence.eth']\nproposal:\n  tally: '31309365093913580207991288430108338667724061355449265288906484597789511363394'\n  type: 'executable'\n--- # [EP 6.2] [Executable] Endowment expansion (3rd tranche)\n\n::authors\n\n| **Status**            | Passed                                                                                                                    |\n| --------------------- | ------------------------------------------------------------------------------------------------------------------------- |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/temp-check-endowment-expansion-3rd-tranche/19851)                                   |\n| **Votes**             | [Agora](https://agora.ensdao.org/proposals/31309365093913580207991288430108338667724061355449265288906484597789511363394) |", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 228, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b7fda838-a5cc-4106-9321-2267e217645f": {"__data__": {"id_": "b7fda838-a5cc-4106-9321-2267e217645f", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/6.2.mdx", "file_name": "6.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/6.2.mdx", "header_path": "/[EP 6.2] [Executable] Endowment expansion (3rd tranche)/", "customer_id": 1, "source_url": "src/pages/dao/proposals/6.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["alongside", "expand", "tranche", "endowment", "proposal", "allowance", "update", "funding", "summary", "module", "third", "comprising"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8a96e4574aba7eb809847da71dd40c6938cf6f23", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/6.2.mdx", "file_name": "6.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/6.2.mdx"}, "hash": "be021de8d8fa4e5e91768d8abe94b9379a56a944069f0af73463601d60c6190d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4a1aea88-a38e-4601-9851-cfa71dd1e24e", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/6.2.mdx", "file_name": "6.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/6.2.mdx", "header_path": "/"}, "hash": "7b7a654da7b113703275ffb002d6402724e80923fe01837ea4e43db99c4e890a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e97700a8-760f-4c70-86f0-093ec489018d", "node_type": "1", "metadata": {"header_path": "/[EP 6.2] [Executable] Endowment expansion (3rd tranche)/"}, "hash": "79c4727ff9c3354b8be0ef98fc465a334cdca0fcb5a9c15e30829bea1c1dd01f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Summary\n\nThis proposal aims to expand the Endowment by funding a third tranche, comprising 5,000 ETH, from the ENS DAO to the ENS Endowment.\n\nAlongside the third tranche transfer, an update to the Allowance Module on the ENS Endowment is proposed; _resetTime_ for ETH allowance (for fee payment) is to be changed from the current parameter of 43,200 seconds (30 days) to 36,000 seconds (25 days). The motivation for this is that there has been an accumulation of payment delays, such that current fee payments are delayed.", "mimetype": "text/plain", "start_char_idx": 901, "end_char_idx": 1426, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e97700a8-760f-4c70-86f0-093ec489018d": {"__data__": {"id_": "e97700a8-760f-4c70-86f0-093ec489018d", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/6.2.mdx", "file_name": "6.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/6.2.mdx", "header_path": "/[EP 6.2] [Executable] Endowment expansion (3rd tranche)/", "customer_id": 1, "source_url": "src/pages/dao/proposals/6.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["establishment", "motivation", "endowment", "protocols", "treasury", "since", "march", "majors", "standard", "holdings", "stablecoin", "setting", "holding"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8a96e4574aba7eb809847da71dd40c6938cf6f23", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/6.2.mdx", "file_name": "6.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/6.2.mdx"}, "hash": "be021de8d8fa4e5e91768d8abe94b9379a56a944069f0af73463601d60c6190d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b7fda838-a5cc-4106-9321-2267e217645f", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/6.2.mdx", "file_name": "6.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/6.2.mdx", "header_path": "/[EP 6.2] [Executable] Endowment expansion (3rd tranche)/"}, "hash": "8a4fac9de19cf888625619bc72ddf7683acb29bbd33adc8139677864cfe6058e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4d7a4de1-5cf8-4f2d-930b-25da1db1fa1b", "node_type": "1", "metadata": {"header_path": "/[EP 6.2] [Executable] Endowment expansion (3rd tranche)/"}, "hash": "3dc410e0bde85c480104fdab99655c11555e943abb5f41c60aed24a843cf74ed", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Motivation\n\nSince the establishment of the Endowment on March 7th, 2023, ENS has been setting the gold standard for DAO treasury management:\n\n- **Asset allocation:** ENS has the 6th-largest stablecoin holding and 5th-largest majors (BTC, ETH) holdings of any Protocols ([source](https://defillama.com/treasuries)).\n- **Income generation:** Since its inception, the Endowment has generated $2.92M in DeFi results (net of fees) for ENS. In 2024, DeFi results represented 12% of total revenue for ENS according to [ENS Revenue Report: Q3 2024](https://discuss.ens.domains/t/ens-revenue-report-q3-2024/19718). This is on track towards the core goal of self-sufficiency.\n- **Asset location:** As of October 31, 2024, 71% of the funds were held in the Endowment, while the remaining 25% were held idle across DAO wallet and Registrar Controllers ([source](https://dune.com/karpatkey/ens-dao-fundflow)).\n\nThe original Request for Proposal in [[EP2.2.4]](https://docs.ens.domains/dao/proposals/2.2.4) sets out that the Endowment should be established gradually over time, in response to changing conditions and needs, and to achieve the eventual goal of self-sufficiency. To deliver on this vision for self-sufficiency, a further increase in the Endowment\u2019s returns is needed. As the Endowment is fully utilised within the bounds of the existing mandate, it is clear that those additional returns must come from additional funds.. We think **now** is the right time to implement these increases, given the following developments:\n\n- **Proven track record**: the Endowment has been operating for 1 year and 7 months, with _no funds lost._ During that time, the ENS community has gained familiarity with the Endowment in terms of both operations and infrastructure.\n- **Investment Policy Statement as guardrails**: the [newly-adopted IPS](https://snapshot.org/#/ens.eth/proposal/0x085a1e40c264ffd44567b6dce889f5943e72cfa8442eaeb81819261a38f0bd0a) provides an additional layer of checks and balances, so that the DAO and its Metagov Working Group can hold the Endowment Manager accountable.\n- **Vulnerability fix by @Blockful**: risk of governance takeover by \u201crisk-free value raiders\u201d, who could have taken over the control of the DAO and the Endowment, has been mitigated. The vulnerability has been fixed by the introduction of the [Security Council](https://www.tally.xyz/gov/ens/proposal/42329103797433777309488042029679811802172320979541414683300183273376839219133) and veto.ensdao.eth.\n\nThe proposed third tranche would be sized at 5,000 ETH, representing 42.4% of assets held in the Controller and the DAO Wallets (_per_ the pie chart above) It would raise the capital utilisation rate by 10.5 percentage points from the current 70.8% to 81.3%.", "mimetype": "text/plain", "start_char_idx": 1428, "end_char_idx": 4172, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4d7a4de1-5cf8-4f2d-930b-25da1db1fa1b": {"__data__": {"id_": "4d7a4de1-5cf8-4f2d-930b-25da1db1fa1b", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/6.2.mdx", "file_name": "6.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/6.2.mdx", "header_path": "/[EP 6.2] [Executable] Endowment expansion (3rd tranche)/", "customer_id": 1, "source_url": "src/pages/dao/proposals/6.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["updates", "endowment", "website", "monthly", "policy", "found", "which", "created", "karpatkey", "reports"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8a96e4574aba7eb809847da71dd40c6938cf6f23", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/6.2.mdx", "file_name": "6.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/6.2.mdx"}, "hash": "be021de8d8fa4e5e91768d8abe94b9379a56a944069f0af73463601d60c6190d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e97700a8-760f-4c70-86f0-093ec489018d", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/6.2.mdx", "file_name": "6.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/6.2.mdx", "header_path": "/[EP 6.2] [Executable] Endowment expansion (3rd tranche)/"}, "hash": "ca390e55e6ca36f73d06a03da5078e610a8e645d3fe3584691e9772c6f013ccc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1a4b683a-8b71-4b65-b66a-f0a91ec6eb63", "node_type": "1", "metadata": {"header_path": "/[EP 6.2] [Executable] Endowment expansion (3rd tranche)/Endowment Updates/"}, "hash": "a0f0818dd93ddfcaae32ab22e0035e0e5bf3ad9d36b7f9564138b8be4005a0b7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Endowment Updates ### Updates\n\nKarpatkey\u2019s updates for the Endowment can be seen here: [2023 Review](https://discuss.ens.domains/t/karpatkey-2023-review-for-the-ens-endowment/18656), [1H 2024 Review](https://discuss.ens.domains/t/karpatkey-h1-2024-review-for-the-ens-endowment/19394).\n\nMonthly reports on the Endowment can be found on karpatkey\u2019s website ([here](https://reports.karpatkey.com/ens?month=9&year=2024&currency=USD)). ### What\u2019s been done\n\n- **Investment Policy Statement**: karpatkey has created and [formally introduced](https://snapshot.org/#/ens.eth/proposal/0x085a1e40c264ffd44567b6dce889f5943e72cfa8442eaeb81819261a38f0bd0a) an [Investment Policy Statement](https://drive.google.com/file/d/1zsV0k3J7s2QAJUoWxPnBpF6XAGW1HuD6/view) which defines the key roles, responsibilities and limitations of the Endowment and its Manager.\n- **Risk Management Development**: karpatkey has designed and implemented a robust risk management stack, leveraging on dedicated risk data service providers, including [Hypernative](https://www.hypernative.io/) and [Redefine](https://redefine.net/). Through weekly meetings with Hypernative, karpatkey is continuously fine-tuning risk alerts and management, especially to cover protocol risks. Automatic, real-time risk alerts help mitigate potential risks. Detailed plans for the Endowment\u2019s emergency protocol and war room are in place to assess and react to urgent situations.\n- **Infrastructure Development**: karpatkey has worked very closely with Gnosis Guild to develop [and implement](https://discuss.ens.domains/t/ep-5-12-roles-modifier-v2-migration-updates-to-endowment-permissions/19173), Zodiac Roles Modifier v2. As a design partner, karpatkey provided feedback allowing Zodiac Roles Modifier to become more user-friendly and flexible. One notable improvement is permissions updates user interface, enhancing transparency and simplifying audits for the ENS community. A code review was also conducted for permissions update.\n- **Permissions Updates**: the Endowment has been undergoing continuous permissions updates, allowing it to stay up-to-date with changing market landscape and protocols ([[EP 4.1](https://discuss.ens.domains/t/ep-4-1-executable-approve-further-actions-and-strategies-for-the-endowment/17406)], [[EP 4.2](https://discuss.ens.domains/t/4-2-executable-fund-the-endowment-second-tranche/17743)], [[EP 4.5](https://discuss.ens.domains/t/ep-4-5-executable-endowment-permissions-to-karpatkey-update-3/18036)], [[EP 5.12](https://discuss.ens.domains/t/ep-5-12-roles-modifier-v2-migration-updates-to-endowment-permissions/19173)], [[EP 5.14](https://discuss.ens.domains/t/ep-5-14-executable-endowment-permissions-to-karpatkey-update-4/19503)]). Independent, thirdparty security review of our Permissions Updates has also been conducted by [Third Guard](https://thirdguard.com/), with the cost covered by karpatkey.\n- **Dune Dashboards Development:** a variety of different Dune dashboards have been created to give public visibility over the DAO and the Endowment, and their respective operations. These include: the [DAO governance dashboard](https://dune.com/karpatkey/ens-dao-governance) (by karpatkey), the [fund flow dashboard](https://dune.com/karpatkey/ens-dao-fundflow) (by karpatkey) and the [financial reporting dashboard](https://dune.com/steakhouse/ens-steakhouse) (by Steakhouse)\n- **Reporting:** weekly Endowment updates and monthly financial updates are provided during the DAO\u2019s Metagov meetings. Monthly Endowment updates are also available on the karpatkey [website](https://reports.karpatkey.com/ens?month=9&year=2024&currency=USD). Biannual Endowment updates are provided on ENS forum.\n- **Partnerships:** karpatkey has negotiated and put in place a protocol fees rebate agreement with Stader Labs.", "mimetype": "text/plain", "start_char_idx": 4174, "end_char_idx": 4194, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c5b40e31-af9a-4a17-9467-7833365a11e3": {"__data__": {"id_": "c5b40e31-af9a-4a17-9467-7833365a11e3", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/6.2.mdx", "file_name": "6.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/6.2.mdx", "header_path": "/[EP 6.2] [Executable] Endowment expansion (3rd tranche)/Endowment Updates/", "customer_id": 1, "source_url": "src/pages/dao/proposals/6.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["plans", "future", "against", "endowment", "protocols", "developing", "deploys", "funds", "potential", "further", "protect", "exploits", "karpatkey", "hacks"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8a96e4574aba7eb809847da71dd40c6938cf6f23", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/6.2.mdx", "file_name": "6.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/6.2.mdx"}, "hash": "be021de8d8fa4e5e91768d8abe94b9379a56a944069f0af73463601d60c6190d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5f0d240d-ab99-45e7-ad8c-b8c6af0fd666", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/6.2.mdx", "file_name": "6.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/6.2.mdx", "header_path": "/[EP 6.2] [Executable] Endowment expansion (3rd tranche)/Endowment Updates/"}, "hash": "9d1076a501772d474671dc16b425007dc3fc9fc718f911ae75af8e89e0381500", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "91a198a6-76dc-4d9f-9616-19e067641eed", "node_type": "1", "metadata": {"header_path": "/[EP 6.2] [Executable] Endowment expansion (3rd tranche)/"}, "hash": "d2cba818116adf9f9e93c53e7c73b422b0cd49dea2543afa80d6b753d8ab30db", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Future plans\n\n- **Risk Management**: to further protect the Endowment against potential hacks and exploits in protocols that the Endowment deploys funds in, karpatkey has been developing Guardians and \u2018Agile Execution App\u2019, which automatically detect potential exploit events and exit at-risk positions.\n- **Permissions Updates**: The Endowment will undergo continuous permissions updates. Immediate priorities include introducing other stablecoins and RWAs, onboarding new liquid staking protocols and keeping the permissions updated with protocol/contract upgrades.\n- **Partnerships**: reinforce yields without taking additional risk by formulating partnership deals leveraging karpatkey\u2019s DeFi network.\n- **Analysis on Governance Attack:** karpatkey, together with the ENS community, will conduct further research into potential governance attack vectors that could put the Endowment at risk, and present potential solutions to the DAO.", "mimetype": "text/plain", "start_char_idx": 7974, "end_char_idx": 8917, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "91a198a6-76dc-4d9f-9616-19e067641eed": {"__data__": {"id_": "91a198a6-76dc-4d9f-9616-19e067641eed", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/6.2.mdx", "file_name": "6.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/6.2.mdx", "header_path": "/[EP 6.2] [Executable] Endowment expansion (3rd tranche)/", "customer_id": 1, "source_url": "src/pages/dao/proposals/6.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["resettimemin", "endowment", "5000000000000000000000", "allowance", "update", "transfer", "multisig", "executed", "module", "parameters", "available", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8a96e4574aba7eb809847da71dd40c6938cf6f23", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/6.2.mdx", "file_name": "6.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/6.2.mdx"}, "hash": "be021de8d8fa4e5e91768d8abe94b9379a56a944069f0af73463601d60c6190d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c5b40e31-af9a-4a17-9467-7833365a11e3", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/6.2.mdx", "file_name": "6.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/6.2.mdx", "header_path": "/[EP 6.2] [Executable] Endowment expansion (3rd tranche)/Endowment Updates/"}, "hash": "d732cee3d38148e713402a1046276f696065bb5716847965ed8868e910e52e0f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\n1. Fund Transfer  \n   Executed by the ENS DAO Multisig (payload available [here](https://gist.github.com/JeronimoHoulin/8195478708e88830de9aabfb67bc8710)).\n   Transfer 5,000 ETH to the Endowment (0x4F2083f5fBede34C2714aFfb3105539775f7FE64)\n   Value: 5000000000000000000000\n\n2. Update the [Allowance Module](https://etherscan.io/address/0xCFbFaC74C26F8647cBDb8c5caf80BB5b32E43134)\n   Executed by the ENS Endowment.  \n   Currently, the parameters of Allowance Module are as follows: allowance = 30 ETH, resetTimeMin = 43200 seconds (30 days). Due to payment delays in the past, we would like to propose a change in [resetTimeMin](https://etherscan.io/address/0xCFbFaC74C26F8647cBDb8c5caf80BB5b32E43134#writeContract#F6) parameter, i.e. Change the [resetTimeMin](https://etherscan.io/address/0xCFbFaC74C26F8647cBDb8c5caf80BB5b32E43134#writeContract#F6) for [main.mg.wg.ens.eth](https://etherscan.io/address/0x91c32893216dE3eA0a55ABb9851f581d4503d39b) in the Allowance Module from 30 days to 25 days (i.e. 43200 minutes to 36000).\n\n```\n\"delegate\": \"0x91c32893216dE3eA0a55ABb9851f581d4503d39b\",\n\"token\": \"0x0000000000000000000000000000000000000000\",\n\"allowanceAmount\": \"30000000000000000000\",\n\"resetTimeMin\": \"43200\" \u2192  \"36000\",\n\"resetBaseMin\": \"28825613\"\n```\n\nPayload available [here](https://gist.github.com/JeronimoHoulin/3e10411ac6d40b6e4087fc59df2719d5).\n(Can be downloaded, unzipped, and dropped into [Safe\u2019s transaction builder](https://app.safe.global/apps/open?safe=eth:0x4F2083f5fBede34C2714aFfb3105539775f7FE64&appUrl=https%3A%2F%2Fapps-portal.safe.global%2Ftx-builder)).\n\nTenderly simulation available [here](https://dashboard.tenderly.co/public/safe/safe-apps/simulator/02add7c9-0ffc-49dc-b372-30fce90ccf9d).", "mimetype": "text/plain", "start_char_idx": 8919, "end_char_idx": 10653, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c397213c-9c1a-400d-9c99-4c8e4be38045": {"__data__": {"id_": "c397213c-9c1a-400d-9c99-4c8e4be38045", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/6.3.mdx", "file_name": "6.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/6.3.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/6.3.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["check", "renew", "whether", "budget", "program", "increase", "provider", "under", "service", "intends"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "927f9ada8498522abe51d129ffafab4ac7b77725", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/6.3.mdx", "file_name": "6.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/6.3.mdx"}, "hash": "22aaaf573203091092e5ddd4a922511193d0b10cae921ad059ad90638a1a5262", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bac53667-d572-40fc-ab61-bddf32cd4ea6", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "3bf3768e46ac59058765e9086352a2e710de4bd7885acabfba6d8cc4f48f91fe", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: 'This vote intends to be a DAO check on whether to renew the service provider program and if so, under what budget.'\nauthors: ['avsa.eth']\nproposal:\n  discourse: '20272'\n  snapshot: '0x0cca1cf36731203e235b0e2de9041be3a16d9cdeadff6e15e1f1215c611e12ef'\n  type: 'social'\n--- # [EP 6.3] [Social] Renew Service Provider Budget\n\n::authors\n\n| **Status**            | Passed, increase budget to $4.5M/year                                                                                    |\n| --------------------- | ------------------------------------------------------------------------------------------------------------------------ |\n| **Discussion Thread** | [Forum](https://discuss.ens.domains/t/20272)                                                                             |\n| **Votes**             | [Snapshot](https://snapshot.box/#/s:ens.eth/proposal/0x0cca1cf36731203e235b0e2de9041be3a16d9cdeadff6e15e1f1215c611e12ef) |\n\nThe Service Provider's streams were initiated almost exactly a year ago, and while it's approved for 18 months, it is supposed to be a program reevaluated yearly. Here is the proposed format for this year. This vote intends to be a DAO check on whether to renew the program and if so, under what budget.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 288, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8324debc-29c7-4cb1-ab45-853b0a610db0": {"__data__": {"id_": "8324debc-29c7-4cb1-ab45-853b0a610db0", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/6.3.mdx", "file_name": "6.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/6.3.mdx", "header_path": "/[EP 6.3] [Social] Renew Service Provider Budget/", "customer_id": 1, "source_url": "src/pages/dao/proposals/6.3.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["renew", "reject", "either", "increase", "budget", "million", "options", "choice", "ranked", "maintain", "approve"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "927f9ada8498522abe51d129ffafab4ac7b77725", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/6.3.mdx", "file_name": "6.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/6.3.mdx"}, "hash": "22aaaf573203091092e5ddd4a922511193d0b10cae921ad059ad90638a1a5262", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bac53667-d572-40fc-ab61-bddf32cd4ea6", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/6.3.mdx", "file_name": "6.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/6.3.mdx", "header_path": "/"}, "hash": "e5fcc7ee8285c1272a9cfb48d1b2546cc2bf9f0fc56d65ceae1bfa711d0b50ab", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4ad8fbb5-a558-43a8-a4f6-57aa7db05cd6", "node_type": "1", "metadata": {"header_path": "/[EP 6.3] [Social] Renew Service Provider Budget/"}, "hash": "61ee5daad2bf453bcf5ca33e88f56c481e8b4ff18924ad7ed00dd9af760f143f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Vote\n\nThe vote will be a Ranked Choice Vote on either to approve or reject and budget. Options will be:\n\n- Renew and increase budget to $4.5 Million per year\n- Renew and maintain budget at $3.6 Million per year\n- Renew but reduce budget to $2.7 Million per year\n- Do not renew the program.\n\nThe budget is set per year. However the actual required budget will need to cover 19 months, because as detailed below, 1/3 of the streams will be budgeted for 2 years and we will add another 3 months of runway to make sure the program is not interrupted by eventual delays in the 2026 vote.", "mimetype": "text/plain", "start_char_idx": 1254, "end_char_idx": 1839, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4ad8fbb5-a558-43a8-a4f6-57aa7db05cd6": {"__data__": {"id_": "4ad8fbb5-a558-43a8-a4f6-57aa7db05cd6", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/6.3.mdx", "file_name": "6.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/6.3.mdx", "header_path": "/[EP 6.3] [Social] Renew Service Provider Budget/", "customer_id": 1, "source_url": "src/pages/dao/proposals/6.3.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["viability", "development", "service", "provider", "treasury", "income", "program", "first", "states", "generated", "ensure", "constitution", "improvement", "continuing"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "927f9ada8498522abe51d129ffafab4ac7b77725", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/6.3.mdx", "file_name": "6.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/6.3.mdx"}, "hash": "22aaaf573203091092e5ddd4a922511193d0b10cae921ad059ad90638a1a5262", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8324debc-29c7-4cb1-ab45-853b0a610db0", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/6.3.mdx", "file_name": "6.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/6.3.mdx", "header_path": "/[EP 6.3] [Social] Renew Service Provider Budget/"}, "hash": "a8689c521d04037321704ebd2695680271d52391a3615bf92e020dbb40bcac7b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "58b54d3b-2a0b-43d3-b6dd-62f7acafd328", "node_type": "1", "metadata": {"header_path": "/[EP 6.3] [Social] Renew Service Provider Budget/"}, "hash": "69efb021f12e9259401dcb0af6e726db5d8ca9825040deb1a32988fd65235fd1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## What is the Service Provider Program\n\nThe ENS constitution states that \\\"Any income generated to the ENS treasury is to be used first of all to ensure the long-term viability of ENS, and to fund continuing development and improvement of the ENS system.\\\". The goal of this program is to create a more diverse and decentralized base of developers and companies involved in the improvement of the ENS system, by creating a guaranteed income stream to support their continued work. Streams last at least one year.", "mimetype": "text/plain", "start_char_idx": 1841, "end_char_idx": 2354, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "58b54d3b-2a0b-43d3-b6dd-62f7acafd328": {"__data__": {"id_": "58b54d3b-2a0b-43d3-b6dd-62f7acafd328", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/6.3.mdx", "file_name": "6.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/6.3.mdx", "header_path": "/[EP 6.3] [Social] Renew Service Provider Budget/", "customer_id": 1, "source_url": "src/pages/dao/proposals/6.3.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["company", "ecosystem", "determine", "delegates", "focused", "services", "eligible", "value", "offering", "discretion", "traditionally", "while", "believe", "process"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "927f9ada8498522abe51d129ffafab4ac7b77725", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/6.3.mdx", "file_name": "6.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/6.3.mdx"}, "hash": "22aaaf573203091092e5ddd4a922511193d0b10cae921ad059ad90638a1a5262", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4ad8fbb5-a558-43a8-a4f6-57aa7db05cd6", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/6.3.mdx", "file_name": "6.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/6.3.mdx", "header_path": "/[EP 6.3] [Social] Renew Service Provider Budget/"}, "hash": "ec3500730adc6323b523839c2cfdc0cdfc3e850ecdea08e4f2bac2eb1ed16924", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "315b3d88-7acb-403d-a600-d94d3b9cd567", "node_type": "1", "metadata": {"header_path": "/[EP 6.3] [Social] Renew Service Provider Budget/Who can apply?/"}, "hash": "083227c60dfc444c0f3456b53701206325f6622461a0d70bf6775094bf94e066", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Who can apply?\n\nAny company offering services they believe will add value to the ENS ecosystem is eligible to apply. While this process has traditionally focused on developers, delegates now have discretion to determine what services qualify as beneficial. ### Eligibility Requirements:\n\n- The applicant must be an existing company, over one year old, with an established team and reputation.\n- The company or its team members must have serious prior experience with ENS, blockchain, or internet domain related projects.\n- The company must secure endorsement of at least 50k delegated ENS tokens, either through public backing by a delegate or by demonstrating support via Snapshot.\n- Neither the company nor its team members may reside in OFAC-sanctioned countries.", "mimetype": "text/plain", "start_char_idx": 2356, "end_char_idx": 2615, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "05360090-f326-4e5c-8248-229453889a49": {"__data__": {"id_": "05360090-f326-4e5c-8248-229453889a49", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/6.3.mdx", "file_name": "6.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/6.3.mdx", "header_path": "/[EP 6.3] [Social] Renew Service Provider Budget/", "customer_id": 1, "source_url": "src/pages/dao/proposals/6.3.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["accomplishments", "submit", "demonstrating", "process", "outlining", "proposal", "include", "eligibility", "required", "their", "submission", "blockchain"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "927f9ada8498522abe51d129ffafab4ac7b77725", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/6.3.mdx", "file_name": "6.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/6.3.mdx"}, "hash": "22aaaf573203091092e5ddd4a922511193d0b10cae921ad059ad90638a1a5262", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "315b3d88-7acb-403d-a600-d94d3b9cd567", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/6.3.mdx", "file_name": "6.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/6.3.mdx", "header_path": "/[EP 6.3] [Social] Renew Service Provider Budget/Who can apply?/"}, "hash": "cc2a14dbfd569c3d3afd4b6a98c7e4b71a8ab8128c0a3a8fb9798a0d08f3c0ea", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "23ef7e2f-a189-4d7b-a34f-96f2d627e227", "node_type": "1", "metadata": {"header_path": "/[EP 6.3] [Social] Renew Service Provider Budget/"}, "hash": "8dfbedf73d8736ebacc8103f31f3620b413bcef4eb787943ebc5d76fc1615e51", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Submission Process\n\n**Candidates will be required to submit a proposal demonstrating their eligibility and outlining their plans. The proposal must include the following:**\n\n1. **Past Achievements:**  \n   A list of their accomplishments in ENS, the blockchain space, or domain systems.\n\n2. **Scope of Work and Budgets:**\n\n   - A **basic scope**, which outlines the minimum yearly budget they would accept to perform their work, along with the specific goals and deliverables they aim to accomplish within that budget.\n   - Optionally, they may also provide an **extended scope**, which includes an increased budget and details the additional projects or goals they would pursue if granted this higher budget.\n\n3. **Proposal Format:**  \n   The submission must be provided both as a written document and as a short video (no longer than 5 minutes) where the team discusses the above points.\n\n4. **Quarterly KPIs:**  \n   The proposal must include a set of quarterly Key Performance Indicators (KPIs) to define what \\\"success\\\" looks like for their basic and extended scope. These may include specific targets, such as product releases, user acquisition numbers, or other measurable metrics that can be used to evaluate their progress against their own promises. Althought we encourage developers to explore new areas of research outside these given metrics, considerable thought should be given to these metrics, and every quarter you will be required to post an update on them. Failing targets in two consecutive targets will trigger a Service Assessement (see below) by Metagov stewards.\n\n5. **Budget Guidelines:**\n   - All budgets must be submitted as integer multiples of $100k per year.\n   - The minimum budget request is $300k per year, and the maximum is $1.3M per year.", "mimetype": "text/plain", "start_char_idx": 3128, "end_char_idx": 4905, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "23ef7e2f-a189-4d7b-a34f-96f2d627e227": {"__data__": {"id_": "23ef7e2f-a189-4d7b-a34f-96f2d627e227", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/6.3.mdx", "file_name": "6.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/6.3.mdx", "header_path": "/[EP 6.3] [Social] Renew Service Provider Budget/", "customer_id": 1, "source_url": "src/pages/dao/proposals/6.3.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["included", "votes", "metagov", "selection", "reviews", "quorum", "group", "eligible", "candidates", "working", "proccess", "halts", "option", "process"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "927f9ada8498522abe51d129ffafab4ac7b77725", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/6.3.mdx", "file_name": "6.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/6.3.mdx"}, "hash": "22aaaf573203091092e5ddd4a922511193d0b10cae921ad059ad90638a1a5262", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "05360090-f326-4e5c-8248-229453889a49", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/6.3.mdx", "file_name": "6.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/6.3.mdx", "header_path": "/[EP 6.3] [Social] Renew Service Provider Budget/"}, "hash": "0b3acae8e9d89532e92ff096adc61fbe247d0f10c08f42a51649cf50a44a38da", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4ad5399b-c527-40bd-baec-41c1e57f7a50", "node_type": "1", "metadata": {"header_path": "/[EP 6.3] [Social] Renew Service Provider Budget/"}, "hash": "b708412a5351ce2d4b562803f561865ed3eb6aca76194d321b90a311dc5a3005", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## What will be selection proccess look like?\n\n1. **Eligibility & Voting**\n\n   - The MetaGov Working Group reviews candidates for eligibility.\n   - Eligible candidates are included in a ranked-choice DAO vote with the option **\\\"None Below\\\"**.\n   - A quorum of **1M ENS** votes is required; otherwise, the process halts and a new vote is conducted.\n\n2. **Budget Streams**\n\n   - **Two-Year Stream**: 1/3 of the yearly budget for a two-year duration.\n   - **One-Year Stream**: Remaining 2/3 of the yearly budget for one year.\n\n3. **Evaluation Process**  \n   Projects are assessed in ranked order:\n\n   - If **\\\"None Below\\\"** is reached, evaluation stops.\n   - If the candidate has been part of the Service provider program for at least a year AND if the **extended budget** fits within the remaining two-year stream budget, assign to the **two-year stream** . Subtract the extended budget from the two-year stream budget.\n   - Assign to the **one-year stream** if:\n     1. The **extended budget** fits the one-year budget. Subtract its extended budget from the one-year stream.\n     2. OR if the **basic budget** fits the one-year budget, subtract the its basic budget from the one-year stream.\n   - If none of these conditions are met, the project is eliminated.\n\n4. **Completion**\n   - Evaluation ends when all projects are assessed, the remaining budget on all streams reaches zero or **\\\"None Below\\\"** is selected.", "mimetype": "text/plain", "start_char_idx": 4907, "end_char_idx": 6325, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4ad5399b-c527-40bd-baec-41c1e57f7a50": {"__data__": {"id_": "4ad5399b-c527-40bd-baec-41c1e57f7a50", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/6.3.mdx", "file_name": "6.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/6.3.mdx", "header_path": "/[EP 6.3] [Social] Renew Service Provider Budget/", "customer_id": 1, "source_url": "src/pages/dao/proposals/6.3.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["submission", "stream", "start", "those", "after", "dates", "proposals", "process", "guaranteed", "relevant", "deadline", "selection"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "927f9ada8498522abe51d129ffafab4ac7b77725", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/6.3.mdx", "file_name": "6.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/6.3.mdx"}, "hash": "22aaaf573203091092e5ddd4a922511193d0b10cae921ad059ad90638a1a5262", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "23ef7e2f-a189-4d7b-a34f-96f2d627e227", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/6.3.mdx", "file_name": "6.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/6.3.mdx", "header_path": "/[EP 6.3] [Social] Renew Service Provider Budget/"}, "hash": "5b123dc18495e71e3449e7498603065a99c1baa83606c1bdb3bba51f265a632a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bf705396-e6a8-4f7d-ba0a-336fee36805d", "node_type": "1", "metadata": {"header_path": "/[EP 6.3] [Social] Renew Service Provider Budget/"}, "hash": "ca6f0423ce021c2458e8a5b353d820c7aa4413f25fc092f0073795b8275f904b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Relevant Dates\n\nThe Submission process will start as soon as this vote ends, the deadline for submission of proposals will be \\*March 31st\\*\\* and the vote for the selection will start soon after that. Those with the two year stream will be guaranteed a stream until at least february 2027, while the others will be at least february 2026, when they will need to submit again. ## Resposibilities for selected service providers ### Brand name and association with ENS DAO\n\nSelected providers will be rewarded with the streams, but will also carry the responsibility to represent ENS to the world. They will be granted usage of the ENS brand name (within guidelines).\n\nThe stream will be managed by the Metagovernance Stewards, but they are to enact representing the DAO's intent. They will have access to pause or move streams due to security concerns or upon the request of the service provider. They can only terminate a stream if there is a sucessful DAO vote requesting them to do so (which the DAO is free to do at any point for any reason).", "mimetype": "text/plain", "start_char_idx": 6327, "end_char_idx": 6706, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3096edd0-1321-4094-9e2b-0f17142057ac": {"__data__": {"id_": "3096edd0-1321-4094-9e2b-0f17142057ac", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/6.3.mdx", "file_name": "6.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/6.3.mdx", "header_path": "/[EP 6.3] [Social] Renew Service Provider Budget/Resposibilities for selected service providers/", "customer_id": 1, "source_url": "src/pages/dao/proposals/6.3.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["works", "codebases", "freely", "licensed", "directly", "providers", "establised", "proposals", "program", "funded", "their", "source", "proprietary", "service"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "927f9ada8498522abe51d129ffafab4ac7b77725", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/6.3.mdx", "file_name": "6.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/6.3.mdx"}, "hash": "22aaaf573203091092e5ddd4a922511193d0b10cae921ad059ad90638a1a5262", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "83c5fd7c-90c8-45a5-a274-e457065d8a48", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/6.3.mdx", "file_name": "6.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/6.3.mdx", "header_path": "/[EP 6.3] [Social] Renew Service Provider Budget/Resposibilities for selected service providers/"}, "hash": "040b886bddafda4e0a180b98081f7275729ea25fb6d71c819cab1c561f1c086a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c2039c02-d94d-4cee-867e-182cd4125566", "node_type": "1", "metadata": {"header_path": "/[EP 6.3] [Social] Renew Service Provider Budget/Resposibilities for selected service providers/"}, "hash": "0d779777a3568de165e086628717fcff30a7557c021b83e7122636a91a2608ed", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Open Source\n\nAll work done directly funded by this program must be Open Source and Freely Licensed (MIT). Service Providers are free to also have proprietary codebases but the works establised in their proposals and quarterly reports must also be available on github or other public repositories. ### Quarterly reports\n\nService Providers must provide a detailed written report on their accomplishments every quarter. They are also required to present at working group meetings when requested by stewards and to give at least one presentation at a conference each year (remote attendance is acceptable if necessary). These reports must include any metrics or KPIs promised for the reporting quarter, as well as any new metrics or KPIs proposed for future quarters. Additionally, the report must state the total amount received during the quarter. While Service Providers are encouraged to include financial spending details, this is at their discretion and not a mandatory requirement.", "mimetype": "text/plain", "start_char_idx": 7379, "end_char_idx": 7679, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "eca714af-9a20-4985-af63-858f70092120": {"__data__": {"id_": "eca714af-9a20-4985-af63-858f70092120", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/6.3.mdx", "file_name": "6.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/6.3.mdx", "header_path": "/[EP 6.3] [Social] Renew Service Provider Budget/Resposibilities for selected service providers/", "customer_id": 1, "source_url": "src/pages/dao/proposals/6.3.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["selected", "service", "request", "providers", "usual", "increase", "following", "funding", "ongoing", "their", "increased", "grants", "process", "governance"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "927f9ada8498522abe51d129ffafab4ac7b77725", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/6.3.mdx", "file_name": "6.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/6.3.mdx"}, "hash": "22aaaf573203091092e5ddd4a922511193d0b10cae921ad059ad90638a1a5262", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c2039c02-d94d-4cee-867e-182cd4125566", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/6.3.mdx", "file_name": "6.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/6.3.mdx", "header_path": "/[EP 6.3] [Social] Renew Service Provider Budget/Resposibilities for selected service providers/"}, "hash": "73c5e689256dfce9859e7e9df4d9b07eda5a335727134405841b25531479d09b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "63377d3b-51ec-4975-a3c4-d8e28d4e40b4", "node_type": "1", "metadata": {"header_path": "/[EP 6.3] [Social] Renew Service Provider Budget/"}, "hash": "0155bf7da9a4fb7ae005c64709445a7e48910ea3b27680c951c8030c1b8b75ab", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Increased funding\n\nSelected service providers may request specific, non-recurring grants at any time, following the usual governance process on the forum. However, to request an increase in their ongoing stream budget, they must meet the following conditions:\n\n- They must have been a service provider for at least one year.\n- At least six months must have passed since their most recent stream-related request, whether it was part of a service provider submission or another stream adjustment process, regardless of either it was sucessful or not.\n\nService Providers can terminate their own stream at any time without notice, thus liberating them from any further obligations towards the DAO. (Note: Terminating their stream does not exempt them from potential liability for any misconduct or unresolved issues.)", "mimetype": "text/plain", "start_char_idx": 8370, "end_char_idx": 9187, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "63377d3b-51ec-4975-a3c4-d8e28d4e40b4": {"__data__": {"id_": "63377d3b-51ec-4975-a3c4-d8e28d4e40b4", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/6.3.mdx", "file_name": "6.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/6.3.mdx", "header_path": "/[EP 6.3] [Social] Renew Service Provider Budget/", "customer_id": 1, "source_url": "src/pages/dao/proposals/6.3.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["procedure", "metagov", "ecosystem", "after", "group", "streams", "proper", "stewards", "following", "working", "terminate", "reason", "responsabilities", "governance"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "927f9ada8498522abe51d129ffafab4ac7b77725", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/6.3.mdx", "file_name": "6.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/6.3.mdx"}, "hash": "22aaaf573203091092e5ddd4a922511193d0b10cae921ad059ad90638a1a5262", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "eca714af-9a20-4985-af63-858f70092120", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/6.3.mdx", "file_name": "6.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/6.3.mdx", "header_path": "/[EP 6.3] [Social] Renew Service Provider Budget/Resposibilities for selected service providers/"}, "hash": "cd3f9cc07da5d2e1538327568454a0d29403c46da54577d375ce18947995132f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Responsabilities for Metagov Working Group\n\nThe ENS DAO can terminate streams for any reason following the proper governance procedure and after a DAO vote. Additionally, Metagov or Ecosystem Stewards can and should trigger a Service Assessement if any of these conditions are met:\n\n- A service provider fails to publish their quaterly report twice\n- A service provider falls short of the KPIs on their proposal twice _in a row_.\n- A service provider is unresponsive to attempts to contact them\n- A service provider is believed to be actively participating in a behavior or project that is considered harmful to the ENS system or brand.\n\nThe Metagov Working will then appoint a person that will conduct an investigation on the claims and publish recommendations on how to solve the issue moving forward. Solutions might include (but are not limited to) a reconsideration of new KPIs, a demand of internal reorganization for the service provider, a renegotiation of terms or even the termination from the program. Once the report is published, a DAO wide vote will executed to decide on the proper outcome for the provider.", "mimetype": "text/plain", "start_char_idx": 9189, "end_char_idx": 10314, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "925a6b77-054b-4323-a8f3-760accd1c119": {"__data__": {"id_": "925a6b77-054b-4323-a8f3-760accd1c119", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/submit.mdx", "file_name": "submit.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/submit.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/submit.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["proposals", "types", "proposal", "passing", "submitting", "three", "smart", "there", "series", "process", "governance"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "624a346be5b5ed1033d35b2741eddc3cf2aa5128", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/submit.mdx", "file_name": "submit.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/submit.mdx"}, "hash": "3ced015ab831bda37f7b638a2912eef0bfa4f918e1973a60e11085a6e17ed5b7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1379f1ac-c5fa-4575-9f80-31b892e83a08", "node_type": "1", "metadata": {"header_path": "/Process of Submitting a Proposal/"}, "hash": "213fe758aba9aea3aa79d32f89e11f98d1509c9af4db465860135ffd240670ce", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Process of Submitting a Proposal ## Passing a Proposal ### Types of Proposal\n\nThere are three main types of governance proposals you can make:\n\n1. **[Executable Proposal](https://github.com/ensdomains/docs/tree/master/src/public/governance/executable-proposal-template.md):** This is a proposal for a series of smart contract operations to be executed by accounts the DAO controls. These can include transfers of tokens as well as arbitrary smart contract calls. Examples of this include allocating funding to a workstream multisig wallet, or upgrading an ENS core contract. Executable proposals have a quorum requirement of 1% and require a minimum approval of 50% to pass.\n2. **[Social Proposal](https://github.com/ensdomains/docs/tree/master/src/public/governance/social-proposal-template.md)**: This is a proposal that asks for the agreement of the DAO on something that cannot be enforced onchain. Examples of this include a proposal to change the royalty percentage for the ENS secondary market on OpenSea, or a petition to the root keyholders. Social proposals have a quorum requirement of 1% and require a minimum approval of 50% to pass.\n3. **[Constitutional Amendment](https://github.com/ensdomains/docs/tree/master/src/public/governance/constitutional-amendment-template.md)**: This is a social proposal that asks the DAO to amend the constitution. Your draft proposal should include a [diff](https://en.wikipedia.org/wiki/Diff) showing the exact changes you propose to make to the constitution. Rules for amending the constitution are set in the constitution itself, and currently require a quorum of 1% and a minimum approval of two thirds to pass.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 34, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "88bc1172-2866-428f-bd44-549d4c1289b8": {"__data__": {"id_": "88bc1172-2866-428f-bd44-549d4c1289b8", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/submit.mdx", "file_name": "submit.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/submit.mdx", "header_path": "/Process of Submitting a Proposal/Passing a Proposal/", "customer_id": 1, "source_url": "src/pages/dao/proposals/submit.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["check", "community", "purpose", "determine", "temperature", "question", "about", "create", "sufficient", "there", "status", "changes"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "624a346be5b5ed1033d35b2741eddc3cf2aa5128", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/submit.mdx", "file_name": "submit.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/submit.mdx"}, "hash": "3ced015ab831bda37f7b638a2912eef0bfa4f918e1973a60e11085a6e17ed5b7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3af85b80-bcaf-436c-8091-196906020958", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/submit.mdx", "file_name": "submit.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/submit.mdx", "header_path": "/Process of Submitting a Proposal/Passing a Proposal/"}, "hash": "48061d551dc34e25ffc0603bac7c2d431183041471690dbb2121dc0b87e92566", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f1eee4dd-b3d4-4d79-9ed8-8d37ea062b53", "node_type": "1", "metadata": {"header_path": "/Process of Submitting a Proposal/Passing a Proposal/"}, "hash": "c22e9d1331bdb42bbe64e85f2f1ea01b7e14dd002b50f38a0b71cd17630794fa", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### **Phase 1: Temperature Check \u2014 Discourse**\n\nThe purpose of the Temperature Check is to determine if there is sufficient will to make changes to the status quo.\n\nTo create a Temperature Check, ask a general, non-biased question to the community on [discuss.ens.domains](https://discuss.ens.domains) about a potential change (example: \"Should ENS decrease registration costs for 3-letter domains?\"). Forum posts should be in the \"DAO-wide -> Temperature Check\" category.\n\nTemperature checks are informal and optional; it's up to you to use the feedback to decide if you want to proceed further with your proposal.", "mimetype": "text/plain", "start_char_idx": 1667, "end_char_idx": 2282, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f1eee4dd-b3d4-4d79-9ed8-8d37ea062b53": {"__data__": {"id_": "f1eee4dd-b3d4-4d79-9ed8-8d37ea062b53", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/submit.mdx", "file_name": "submit.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/submit.mdx", "header_path": "/Process of Submitting a Proposal/Passing a Proposal/", "customer_id": 1, "source_url": "src/pages/dao/proposals/submit.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["formal", "purpose", "start", "around", "repository", "proposal", "draft", "establish", "discussion", "potential", "create", "governance"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "624a346be5b5ed1033d35b2741eddc3cf2aa5128", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/submit.mdx", "file_name": "submit.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/submit.mdx"}, "hash": "3ced015ab831bda37f7b638a2912eef0bfa4f918e1973a60e11085a6e17ed5b7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "88bc1172-2866-428f-bd44-549d4c1289b8", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/submit.mdx", "file_name": "submit.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/submit.mdx", "header_path": "/Process of Submitting a Proposal/Passing a Proposal/"}, "hash": "313db34e0a51c09ea0059ea94b3cf4981e98280d24e547abb4d0ffa0a109d57d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "69ca2a5b-623d-472c-8af4-cfa588941b04", "node_type": "1", "metadata": {"header_path": "/Process of Submitting a Proposal/Passing a Proposal/"}, "hash": "e3f197d3310162d753825f02c36431de63adea7648d17aff9335c1a6ffde6f98", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### **Phase 2: Draft Proposal \u2014 GitHub**\n\nThe purpose of the Draft Proposal is to establish formal discussion around a potential proposal.\n\nTo create a Draft Proposal, [create a new governance proposal](https://github.com/ensdomains/governance-docs/new/main/governance-proposals) in the governance-docs repository on GitHub. Start by copying the template for an [executable proposal](https://github.com/ensdomains/docs/tree/master/src/public/governance/executable-proposal-template.md), [social proposal](https://github.com/ensdomains/docs/tree/master/src/public/governance/social-proposal-template.md), or [constitutional amendment](https://github.com/ensdomains/docs/tree/master/src/public/governance/constitutional-amendment-template.md), as appropriate. Once you have written your proposal, create a Draft Pull Request for it. Start a new post in the DAO-wide -> Draft Proposals\" category with a link to the PR for discussion.\n\nReach out to your network to build support for the proposal. Discuss the proposal and solicit delegates to provide feedback on it. Be willing to respond to questions on the Draft Proposal topic and in comments on the pull request. Share your viewpoint, although try to remain as impartial as possible.\n\nIf your proposal is an executable proposal, you will need to specify the actions your proposal will take while it is in draft stage. You may wish to wait until the proposal is stable before doing this. The executable proposal template explains how to do this.\n\nIf your proposal is a constitutional amendment, you will need to produce a diff showing the exact changes you are proposing to make. The easiest way to do this is to go to the [constitution](/dao/constitution), click \"Edit on GitHub\", then click the pencil icon to edit the document in a fork. You can then create a pull request via the GitHub UI and include this in your proposal. You should do this in a separate branch to your draft proposal; while the proposal will be merged as soon as it goes to a vote, the amendment will only be merged if the proposal passes.\n\nOnce you are confident the proposal is in a stable state, you can proceed to phase 3.", "mimetype": "text/plain", "start_char_idx": 2284, "end_char_idx": 4434, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "69ca2a5b-623d-472c-8af4-cfa588941b04": {"__data__": {"id_": "69ca2a5b-623d-472c-8af4-cfa588941b04", "embedding": null, "metadata": {"file_path": "src/pages/dao/proposals/submit.mdx", "file_name": "submit.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/submit.mdx", "header_path": "/Process of Submitting a Proposal/Passing a Proposal/", "customer_id": 1, "source_url": "src/pages/dao/proposals/submit.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["github", "contributor", "proposal", "snapshot", "governance", "schedule", "active", "ready", "number", "merge", "assign", "meets"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "624a346be5b5ed1033d35b2741eddc3cf2aa5128", "node_type": "4", "metadata": {"file_path": "src/pages/dao/proposals/submit.mdx", "file_name": "submit.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/submit.mdx"}, "hash": "3ced015ab831bda37f7b638a2912eef0bfa4f918e1973a60e11085a6e17ed5b7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f1eee4dd-b3d4-4d79-9ed8-8d37ea062b53", "node_type": "1", "metadata": {"file_path": "src/pages/dao/proposals/submit.mdx", "file_name": "submit.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/submit.mdx", "header_path": "/Process of Submitting a Proposal/Passing a Proposal/"}, "hash": "c52c6f5e7e089c1742edcb816367fdab551726e08ffbc0c7586cfa6416e49ace", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### **Phase 3: Active Proposal \u2014 Snapshot / Governance Portal**\n\nUse GitHub to flag your PR as Ready for Review. A contributor will:\n\n1. Merge your PR if it meets the requirements.\n2. Assign your proposal a proposal number in the form EP###.\n3. Schedule the proposal for a snapshot vote.\n\nIf your proposal is a Social Proposal or a Constitutional Amendment, that's it! If the snapshot vote passes, the proposal is passed and you are done.\n\nIf your proposal is an Executable Proposal, you will now need to submit it to the governor contract for voting onchain.\n\nTo enact an Executable Proposal:\n\n1. Ensure at least 100k ENS is delegated to your address in order to submit a proposal, or find a delegate who has enough delegated ENS to meet the proposal threshold to propose on your behalf.\n2. Call the propose() function of the ENS governor (at [governor.ensdao.eth](https://etherscan.io/address/0x323a76393544d5ecca80cd6ef2a560c6a395b7e3)) to deploy your proposal.\n\nOnce the propose() function has been called, a seven day voting period is started. Ongoing discussion can take place on your proposal post. If the proposal passes successfully, a two day timelock will follow before the proposed code is executed.", "mimetype": "text/plain", "start_char_idx": 4436, "end_char_idx": 5647, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cf60f238-226a-4971-b0c9-267b0f4e957f": {"__data__": {"id_": "cf60f238-226a-4971-b0c9-267b0f4e957f", "embedding": null, "metadata": {"file_path": "src/pages/dao/stewards.mdx", "file_name": "stewards.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/stewards.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/stewards.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["those", "matters", "avatar", "stewards", "major", "holders", "which", "import", "democratic", "through", "governed", "decided", "process", "governance"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8d325b2c10b2024113807cfb38e90e87bd385ade", "node_type": "4", "metadata": {"file_path": "src/pages/dao/stewards.mdx", "file_name": "stewards.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/stewards.mdx"}, "hash": "b16f0ffaa11d0776e1f7fdf56aac7bd82a1bdc07c6c0ffa680905eaa83160652", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9f6a58f6-86d6-4d66-b844-b1f141f58736", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "2ed36fd6c883da4359ecbccf48a91b374672c0da0ec58d636611bdd11d85726e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "import { Avatar } from '../../components/Avatar' # ENS DAO Stewards\n\nThe DAO is governed through a democratic process in which all major matters are decided through a vote open to all holders of governance tokens. Those who wish can also delegate their voting power, entrusting somebody else to keep tabs on the latest DAO matters.\n\nDelegates can be chosen or switched at any time, often without cost, via [Tally](https://www.tally.xyz/gov/ens), [Agora](https://agora.ensdao.org/) or other apps.\n\nFor more day-to-day matters, there are Stewards who are elected for a one-year term. The election happens every year on December 10 and lasts for 5 days. Stewards make decisions on governance, hold public meetings, and decide on grants, sponsorships, and other matters. Stewards are divided into different working groups, each reflecting their specific focus.\n\nRead the [full active rules governing the Working Groups](/dao/wg/rules)", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 48, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7bf55822-a527-4d5d-82cc-cdde560dcf5c": {"__data__": {"id_": "7bf55822-a527-4d5d-82cc-cdde560dcf5c", "embedding": null, "metadata": {"file_path": "src/pages/dao/stewards.mdx", "file_name": "stewards.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/stewards.mdx", "header_path": "/ENS DAO Stewards/", "customer_id": 1, "source_url": "src/pages/dao/stewards.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ecosystem", "group", "stewards", "working", "spence", "donnie"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8d325b2c10b2024113807cfb38e90e87bd385ade", "node_type": "4", "metadata": {"file_path": "src/pages/dao/stewards.mdx", "file_name": "stewards.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/stewards.mdx"}, "hash": "b16f0ffaa11d0776e1f7fdf56aac7bd82a1bdc07c6c0ffa680905eaa83160652", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9f6a58f6-86d6-4d66-b844-b1f141f58736", "node_type": "1", "metadata": {"file_path": "src/pages/dao/stewards.mdx", "file_name": "stewards.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/stewards.mdx", "header_path": "/"}, "hash": "57d94191726a1b1e030bfec57eba105129c221b283f7f8a4b291cda45b0ef220", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9c80d671-6b90-4573-ad40-8c356c465805", "node_type": "1", "metadata": {"header_path": "/ENS DAO Stewards/Stewards for 2025 Term/"}, "hash": "5893c37fa3b9a0e6692f19918fd6c4bbc9ce13f5633a305e2b53bb3d06c12c39", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Stewards for 2025 Term #### Meta-Governance Working Group\n\n| <Avatar name=\"5pence.eth\" width={200} /> | <Avatar name=\"netto.eth\" width={200} /> | <Avatar name=\"daostrat.eth\" width={200} /> |\n| ---------------------------------------- | --------------------------------------- | ------------------------------------------ |\n| Spence / 5pence.eth                      | Alex / netto.eth                        | Cam / daostrat.eth                         | #### ENS Ecosystem Working Group\n\n| <Avatar name=\"slobo.eth\" width={200} /> | <Avatar name=\"limes.eth\" width={200} /> | <Avatar name=\"daemon.eth\" width={200} /> |\n| --------------------------------------- | --------------------------------------- | ---------------------------------------- |\n| slobo.eth                               | limes.eth                               | Donnie / daemon.eth                      |", "mimetype": "text/plain", "start_char_idx": 933, "end_char_idx": 958, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "db9900a8-a0dd-4c42-bafe-1e8baef92b13": {"__data__": {"id_": "db9900a8-a0dd-4c42-bafe-1e8baef92b13", "embedding": null, "metadata": {"file_path": "src/pages/dao/stewards.mdx", "file_name": "stewards.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/stewards.mdx", "header_path": "/ENS DAO Stewards/Stewards for 2025 Term/", "customer_id": 1, "source_url": "src/pages/dao/stewards.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["group", "public", "goods", "working"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8d325b2c10b2024113807cfb38e90e87bd385ade", "node_type": "4", "metadata": {"file_path": "src/pages/dao/stewards.mdx", "file_name": "stewards.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/stewards.mdx"}, "hash": "b16f0ffaa11d0776e1f7fdf56aac7bd82a1bdc07c6c0ffa680905eaa83160652", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f5e52886-43ce-4aca-bb78-17828718d3d1", "node_type": "1", "metadata": {"file_path": "src/pages/dao/stewards.mdx", "file_name": "stewards.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/stewards.mdx", "header_path": "/ENS DAO Stewards/Stewards for 2025 Term/"}, "hash": "f77b0323313c90d37cfce68e07b4902c00a81a8814bfbebdb80670216eef4c4a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b564367b-e5c1-40a0-a5a5-8713963dbe7c", "node_type": "1", "metadata": {"header_path": "/ENS DAO Stewards/"}, "hash": "2c31cd1ab239ecb05f2a4f9bb6a09c3211ea445033cd3f4cdf76db0f3172def0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "#### Public Goods Working Group\n\n| <Avatar name=\"coltron.eth\" width={200} /> | <Avatar name=\"simona.eth\" width={200} /> | <Avatar name=\"sovereignsignal.eth\" width={200} /> |\n| ----------------------------------------- | ---------------------------------------- | ------------------------------------------------- |\n| coltron.eth                               | simona.eth                               | sovereignsignal.eth                               |\n|                                           |", "mimetype": "text/plain", "start_char_idx": 1815, "end_char_idx": 2316, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b564367b-e5c1-40a0-a5a5-8713963dbe7c": {"__data__": {"id_": "b564367b-e5c1-40a0-a5a5-8713963dbe7c", "embedding": null, "metadata": {"file_path": "src/pages/dao/stewards.mdx", "file_name": "stewards.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/stewards.mdx", "header_path": "/ENS DAO Stewards/", "customer_id": 1, "source_url": "src/pages/dao/stewards.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ecosystem", "group", "stewards", "marcus", "working", "spence"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8d325b2c10b2024113807cfb38e90e87bd385ade", "node_type": "4", "metadata": {"file_path": "src/pages/dao/stewards.mdx", "file_name": "stewards.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/stewards.mdx"}, "hash": "b16f0ffaa11d0776e1f7fdf56aac7bd82a1bdc07c6c0ffa680905eaa83160652", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "db9900a8-a0dd-4c42-bafe-1e8baef92b13", "node_type": "1", "metadata": {"file_path": "src/pages/dao/stewards.mdx", "file_name": "stewards.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/stewards.mdx", "header_path": "/ENS DAO Stewards/Stewards for 2025 Term/"}, "hash": "6b10104fef93ae09f21da47722ed77f5789d4167e35819e78583b4c38ca95ade", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "92c060d4-d948-49cf-84bb-f27b56981f28", "node_type": "1", "metadata": {"header_path": "/ENS DAO Stewards/Past Stewards/"}, "hash": "3816eeabdf757f4759684e9f7dc092fbdcc38b801221ac7fd60cb81c62064b3b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Past Stewards ### 2024 #### Meta-Governance Working Group\n\n| <Avatar name=\"5pence.eth\" width={200} /> | <Avatar name=\"avsa.eth\" width={200} /> | <Avatar name=\"estmcmxci.eth\" width={200} /> |\n| ---------------------------------------- | -------------------------------------- | ------------------------------------------- |\n| Spence / 5pence.eth                      | Alex / avsa.eth                        | Marcus / estmcmxci.eth                      | #### ENS Ecosystem Working Group\n\n| <Avatar name=\"slobo.eth\" width={200} /> | <Avatar name=\"limes.eth\" width={200} /> | <Avatar name=\"184.eth\" width={200} /> |\n| --------------------------------------- | --------------------------------------- | ------------------------------------- |\n| slobo.eth                               | limes.eth                               | 184.eth                               |", "mimetype": "text/plain", "start_char_idx": 2318, "end_char_idx": 2334, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ee655c63-8c35-43d3-b503-12f3edaf0914": {"__data__": {"id_": "ee655c63-8c35-43d3-b503-12f3edaf0914", "embedding": null, "metadata": {"file_path": "src/pages/dao/stewards.mdx", "file_name": "stewards.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/stewards.mdx", "header_path": "/ENS DAO Stewards/Past Stewards/2024/", "customer_id": 1, "source_url": "src/pages/dao/stewards.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["group", "johnson", "katherine", "public", "working", "spence", "simona", "goods"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8d325b2c10b2024113807cfb38e90e87bd385ade", "node_type": "4", "metadata": {"file_path": "src/pages/dao/stewards.mdx", "file_name": "stewards.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/stewards.mdx"}, "hash": "b16f0ffaa11d0776e1f7fdf56aac7bd82a1bdc07c6c0ffa680905eaa83160652", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c968f08f-d79a-41b3-9f2d-51390f67aae2", "node_type": "1", "metadata": {"file_path": "src/pages/dao/stewards.mdx", "file_name": "stewards.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/stewards.mdx", "header_path": "/ENS DAO Stewards/Past Stewards/2024/"}, "hash": "0f83d8d102a5eb75015441d06e6069f2f9582ee2d4897609516aaa835d6b1c21", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e5473894-11d1-43db-ae68-a350fca274f5", "node_type": "1", "metadata": {"header_path": "/ENS DAO Stewards/Past Stewards/"}, "hash": "8f07201771f5fc1088b278375fcf53b81d2da6e4d641d65ca4233e32d6bc62f4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "#### Public Goods Working Group\n\n| <Avatar name=\"coltron.eth\" width={200} /> | <Avatar name=\"simona.eth\" width={200} /> | <Avatar name=\"vegayp.eth\" width={200} /> |\n| ----------------------------------------- | ---------------------------------------- | ---------------------------------------- |\n| coltron.eth                               | Simona / simona.eth                      | vegayp.eth                               | ### 2023 Q3/Q4 #### Meta-Governance Working Group\n\n| <Avatar name=\"nick.eth\" width={200} /> | <Avatar name=\"5pence.eth\" width={200} /> | <Avatar name=\"katherine.eth\" width={200} /> |\n| -------------------------------------- | ---------------------------------------- | ------------------------------------------- |\n| Nick Johnson / nick.eth                | Spence / 5pence.eth                      | Katherine Wu / katherine.eth                |", "mimetype": "text/plain", "start_char_idx": 3192, "end_char_idx": 3620, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d647976b-6e99-47d8-8021-1bae71dac227": {"__data__": {"id_": "d647976b-6e99-47d8-8021-1bae71dac227", "embedding": null, "metadata": {"file_path": "src/pages/dao/stewards.mdx", "file_name": "stewards.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/stewards.mdx", "header_path": "/ENS DAO Stewards/Past Stewards/2023 Q3/Q4/", "customer_id": 1, "source_url": "src/pages/dao/stewards.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ecosystem", "group", "public", "working", "simona", "goods"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8d325b2c10b2024113807cfb38e90e87bd385ade", "node_type": "4", "metadata": {"file_path": "src/pages/dao/stewards.mdx", "file_name": "stewards.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/stewards.mdx"}, "hash": "b16f0ffaa11d0776e1f7fdf56aac7bd82a1bdc07c6c0ffa680905eaa83160652", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2195e7f8-1b0c-479d-9fb0-e0486c1fd61b", "node_type": "1", "metadata": {"file_path": "src/pages/dao/stewards.mdx", "file_name": "stewards.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/stewards.mdx", "header_path": "/ENS DAO Stewards/Past Stewards/2023 Q3/Q4/"}, "hash": "a91be8546f71f515f3c02e17e975e2f8239813b622ef6efae2a88f8599048619", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7b13c569-c049-4aaa-9cd7-fa44a8b2883a", "node_type": "1", "metadata": {"header_path": "/ENS DAO Stewards/Past Stewards/2023 Q3/Q4/"}, "hash": "0fc62784bc235587c00a36f0e723ba219e384bb10aa641a232054c45eaccd21e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "#### ENS Ecosystem Working Group\n\n| <Avatar name=\"slobo.eth\" width={200} /> | <Avatar name=\"limes.eth\" width={200} /> | <Avatar name=\"184.eth\" width={200} /> |\n| --------------------------------------- | --------------------------------------- | ------------------------------------- |\n| slobo.eth                               | limes.eth                               | 184.eth                               | #### Public Goods Working Group\n\n| <Avatar name=\"coltron.eth\" width={200} /> | <Avatar name=\"simona.eth\" width={200} /> | <Avatar name=\"vegayp.eth\" width={200} /> |\n| ----------------------------------------- | ---------------------------------------- | ---------------------------------------- |\n| coltron.eth                               | Simona / simona.eth                      | vegayp.eth                               |", "mimetype": "text/plain", "start_char_idx": 2779, "end_char_idx": 3190, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5e1d7986-585d-423d-a623-a134c7e5807e": {"__data__": {"id_": "5e1d7986-585d-423d-a623-a134c7e5807e", "embedding": null, "metadata": {"file_path": "src/pages/dao/stewards.mdx", "file_name": "stewards.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/stewards.mdx", "header_path": "/ENS DAO Stewards/Past Stewards/", "customer_id": 1, "source_url": "src/pages/dao/stewards.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["group", "working", "katherine", "ecosystem"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8d325b2c10b2024113807cfb38e90e87bd385ade", "node_type": "4", "metadata": {"file_path": "src/pages/dao/stewards.mdx", "file_name": "stewards.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/stewards.mdx"}, "hash": "b16f0ffaa11d0776e1f7fdf56aac7bd82a1bdc07c6c0ffa680905eaa83160652", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7b13c569-c049-4aaa-9cd7-fa44a8b2883a", "node_type": "1", "metadata": {"file_path": "src/pages/dao/stewards.mdx", "file_name": "stewards.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/stewards.mdx", "header_path": "/ENS DAO Stewards/Past Stewards/2023 Q3/Q4/"}, "hash": "adf55a00663c239efb9295303dfed92560b51216dd4c7e1ed2d95fbf8b5363c9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e597feaa-a5a5-4a8b-84f7-d5c6eaad228a", "node_type": "1", "metadata": {"header_path": "/ENS DAO Stewards/Past Stewards/2023 Q1/Q2/"}, "hash": "52b20474bbaa7ba6a978ede66c58bf4b16821479382e3ea5155be714c63b4f83", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### 2023 Q1/Q2 #### Meta-Governance Working Group\n\n| <Avatar name=\"nick.eth\" width={200} /> | <Avatar name=\"simona.eth\" width={200} /> | <Avatar name=\"katherine.eth\" width={200} /> |\n| -------------------------------------- | ---------------------------------------- | ------------------------------------------- |\n| nick.eth                               | simona.eth                               | Katherine Wu                                | #### ENS Ecosystem Working Group\n\n| <Avatar name=\"slobo.eth\" width={200} /> | <Avatar name=\"limes.eth\" width={200} /> | <Avatar name=\"yambo.eth\" width={200} /> |\n| --------------------------------------- | --------------------------------------- | --------------------------------------- |\n| slobo.eth                               | limes.eth                               | yambo.eth                               |", "mimetype": "text/plain", "start_char_idx": 4914, "end_char_idx": 4928, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b14d460c-8af0-48ad-b044-0d8c71860adf": {"__data__": {"id_": "b14d460c-8af0-48ad-b044-0d8c71860adf", "embedding": null, "metadata": {"file_path": "src/pages/dao/stewards.mdx", "file_name": "stewards.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/stewards.mdx", "header_path": "/ENS DAO Stewards/Past Stewards/2023 Q1/Q2/", "customer_id": 1, "source_url": "src/pages/dao/stewards.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["group", "public", "goods", "working"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8d325b2c10b2024113807cfb38e90e87bd385ade", "node_type": "4", "metadata": {"file_path": "src/pages/dao/stewards.mdx", "file_name": "stewards.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/stewards.mdx"}, "hash": "b16f0ffaa11d0776e1f7fdf56aac7bd82a1bdc07c6c0ffa680905eaa83160652", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "647bba66-62de-48ff-962e-4a4a87a5ea88", "node_type": "1", "metadata": {"file_path": "src/pages/dao/stewards.mdx", "file_name": "stewards.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/stewards.mdx", "header_path": "/ENS DAO Stewards/Past Stewards/2023 Q1/Q2/"}, "hash": "67f2a9d9a64fea80282bbd895656890d853364e22a104303bfb311831fd462dc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "326f1dc8-d33e-4987-906f-0a80331df24a", "node_type": "1", "metadata": {"header_path": "/ENS DAO Stewards/Past Stewards/"}, "hash": "4748be42c325ad4ab0c506689d201e9af1aeb36d3e2402123f47713754b83133", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "#### Public Goods Working Group\n\n| <Avatar name=\"avsa.eth\" width={200} /> | <Avatar name=\"coltron.eth\" width={200} /> | <Avatar name=\"vegayp.eth\" width={200} /> |\n| -------------------------------------- | ----------------------------------------- | ---------------------------------------- |\n| avsa.eth                               | coltron.eth                               | vegayp.eth                               | ### 2022 Q3/Q4 #### Meta-Governance\n\n| <Avatar name=\"coltron.eth\" width={200} /> | <Avatar name=\"simona.eth\" width={200} /> | <Avatar name=\"nick.eth\" width={200} /> |\n| ----------------------------------------- | ---------------------------------------- | -------------------------------------- |\n| coltron.eth                               | simona.eth                               | nick.eth                               |", "mimetype": "text/plain", "start_char_idx": 5782, "end_char_idx": 6204, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9950fcd6-4150-4b7a-9590-5da2c4217ef9": {"__data__": {"id_": "9950fcd6-4150-4b7a-9590-5da2c4217ef9", "embedding": null, "metadata": {"file_path": "src/pages/dao/stewards.mdx", "file_name": "stewards.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/stewards.mdx", "header_path": "/ENS DAO Stewards/Past Stewards/2022 Q3/Q4/", "customer_id": 1, "source_url": "src/pages/dao/stewards.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["community", "ecosystem"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8d325b2c10b2024113807cfb38e90e87bd385ade", "node_type": "4", "metadata": {"file_path": "src/pages/dao/stewards.mdx", "file_name": "stewards.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/stewards.mdx"}, "hash": "b16f0ffaa11d0776e1f7fdf56aac7bd82a1bdc07c6c0ffa680905eaa83160652", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bb1ea4fc-7c9e-4b68-8876-db543c022b78", "node_type": "1", "metadata": {"file_path": "src/pages/dao/stewards.mdx", "file_name": "stewards.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/stewards.mdx", "header_path": "/ENS DAO Stewards/Past Stewards/2022 Q3/Q4/"}, "hash": "38dfab667c207a1984574666ad8f1dfb1540464da3e7ddda9c6f1c1d5b042443", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fe6bd304-73b4-4648-a22e-a6eb5f0d86ea", "node_type": "1", "metadata": {"header_path": "/ENS DAO Stewards/Past Stewards/2022 Q3/Q4/"}, "hash": "567854c3a694f69d9ad7b260bba4fcaee3bb7b1e317f8ea70d613ebe8ac12477", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "#### ENS Ecosystem\n\n| <Avatar name=\"bobjiang.eth\" width={200} /> | <Avatar name=\"validator.eth\" width={200} /> | <Avatar name=\"slobo.eth\" width={200} /> |\n| ------------------------------------------ | ------------------------------------------- | --------------------------------------- |\n| bobjiang.eth                               | validator.eth                               | slobo.eth                               | #### Community\n\n| <Avatar name=\"limes.eth\" width={200} /> | <Avatar name=\"coltron.eth\" width={200} /> | <Avatar name=\"validator.eth\" width={200} /> |\n| --------------------------------------- | ----------------------------------------- | ------------------------------------------- |\n| limes.eth                               | coltron.eth                               | validator.eth                               |", "mimetype": "text/plain", "start_char_idx": 6635, "end_char_idx": 7059, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "341fbfd6-0bee-4999-8e00-27aa46ea4e41": {"__data__": {"id_": "341fbfd6-0bee-4999-8e00-27aa46ea4e41", "embedding": null, "metadata": {"file_path": "src/pages/dao/stewards.mdx", "file_name": "stewards.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/stewards.mdx", "header_path": "/ENS DAO Stewards/Past Stewards/2022 Q3/Q4/", "customer_id": 1, "source_url": "src/pages/dao/stewards.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["public", "goods"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8d325b2c10b2024113807cfb38e90e87bd385ade", "node_type": "4", "metadata": {"file_path": "src/pages/dao/stewards.mdx", "file_name": "stewards.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/stewards.mdx"}, "hash": "b16f0ffaa11d0776e1f7fdf56aac7bd82a1bdc07c6c0ffa680905eaa83160652", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fe6bd304-73b4-4648-a22e-a6eb5f0d86ea", "node_type": "1", "metadata": {"file_path": "src/pages/dao/stewards.mdx", "file_name": "stewards.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/stewards.mdx", "header_path": "/ENS DAO Stewards/Past Stewards/2022 Q3/Q4/"}, "hash": "73ba34604b3194488426f582d36d114725df5f73bcef0f4e44b3cbf2c90fd2a5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "96a91956-fbec-4e1b-871c-08396cf47f4b", "node_type": "1", "metadata": {"header_path": "/ENS DAO Stewards/Past Stewards/"}, "hash": "20cb32430a8afe959c1baeaf63d6850ca64dda236c14d87ba3e142e208714c76", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "#### Public Goods\n\n| <Avatar name=\"anthonyware.eth\" width={200} /> | <Avatar name=\"ceresstation.eth\" width={200} /> | <Avatar name=\"avsa.eth\" width={200} /> |\n| --------------------------------------------- | ---------------------------------------------- | -------------------------------------- |\n| anthonyware.eth                               | ceresstation.eth                               | avsa.eth                               | ### 2022 Q1/Q2 #### Meta-Governance\n\n| <Avatar name=\"jmj.eth\" width={200} />  | <Avatar name=\"simona.eth\" width={200} />      | <Avatar name=\"james.eth\" width={200} /> |\n| -------------------------------------- | --------------------------------------------- | --------------------------------------- |\n| jmj.eth                                | simona.eth                                    | james.eth                               |\n| <Avatar name=\"nick.eth\" width={200} /> | <Avatar name=\"leontalbert.eth\" width={200} /> |                                         |\n| nick.eth                               | leontalbert.eth                               |                                         |", "mimetype": "text/plain", "start_char_idx": 7480, "end_char_idx": 7918, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b35ef148-0321-409e-99c5-9155f15982de": {"__data__": {"id_": "b35ef148-0321-409e-99c5-9155f15982de", "embedding": null, "metadata": {"file_path": "src/pages/dao/stewards.mdx", "file_name": "stewards.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/stewards.mdx", "header_path": "/ENS DAO Stewards/Past Stewards/2022 Q1/Q2/", "customer_id": 1, "source_url": "src/pages/dao/stewards.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ecosystem"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8d325b2c10b2024113807cfb38e90e87bd385ade", "node_type": "4", "metadata": {"file_path": "src/pages/dao/stewards.mdx", "file_name": "stewards.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/stewards.mdx"}, "hash": "b16f0ffaa11d0776e1f7fdf56aac7bd82a1bdc07c6c0ffa680905eaa83160652", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "955f29b9-241b-4d3f-afe4-ae0d5fab9bb9", "node_type": "1", "metadata": {"file_path": "src/pages/dao/stewards.mdx", "file_name": "stewards.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/stewards.mdx", "header_path": "/ENS DAO Stewards/Past Stewards/2022 Q1/Q2/"}, "hash": "593a97414d55b853796e89924fa6770c3e7ec7fcc7b2598d16b5e1e1c19e4022", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "97cba33a-51a9-4833-b9d6-ca810cb21b3c", "node_type": "1", "metadata": {"header_path": "/ENS DAO Stewards/Past Stewards/2022 Q1/Q2/"}, "hash": "bad6b0e4af96a6e58552ac7e4e6f2b3fe7fc10ba625ffa7a9a58cfc015bc3483", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "#### ENS Ecosystem\n\n| <Avatar name=\"ginge.eth\" width={200} /> | <Avatar name=\"slobo.eth\" width={200} />   | <Avatar name=\"bobjiang.eth\" width={200} /> |\n| --------------------------------------- | ----------------------------------------- | ------------------------------------------ |\n| ginge.eth                               | slobo.eth                                 | bobjiang.eth                               |\n| <Avatar name=\"nick.eth\" width={200} />  | <Avatar name=\"jefflau.eth\" width={200} /> |                                            |\n| nick.eth                                | jefflau.eth                               |                                            |", "mimetype": "text/plain", "start_char_idx": 8624, "end_char_idx": 9308, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "97cba33a-51a9-4833-b9d6-ca810cb21b3c": {"__data__": {"id_": "97cba33a-51a9-4833-b9d6-ca810cb21b3c", "embedding": null, "metadata": {"file_path": "src/pages/dao/stewards.mdx", "file_name": "stewards.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/stewards.mdx", "header_path": "/ENS DAO Stewards/Past Stewards/2022 Q1/Q2/", "customer_id": 1, "source_url": "src/pages/dao/stewards.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["community"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8d325b2c10b2024113807cfb38e90e87bd385ade", "node_type": "4", "metadata": {"file_path": "src/pages/dao/stewards.mdx", "file_name": "stewards.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/stewards.mdx"}, "hash": "b16f0ffaa11d0776e1f7fdf56aac7bd82a1bdc07c6c0ffa680905eaa83160652", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b35ef148-0321-409e-99c5-9155f15982de", "node_type": "1", "metadata": {"file_path": "src/pages/dao/stewards.mdx", "file_name": "stewards.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/stewards.mdx", "header_path": "/ENS DAO Stewards/Past Stewards/2022 Q1/Q2/"}, "hash": "ce442ae1e54dc88a7bbf2f52385c317708269e43128c3be8a9b6d42af4de9384", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d71ed047-238b-4b2c-acf4-a8c2aae28dda", "node_type": "1", "metadata": {"header_path": "/ENS DAO Stewards/Past Stewards/2022 Q1/Q2/"}, "hash": "ae159c5f0e3baf4b4d005627719b829811d114b0c52001b9086a1b74d2fb0f4e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "#### Community\n\n| <Avatar name=\"limes.eth\" width={200} />   | <Avatar name=\"coltron.eth\" width={200} />   | <Avatar name=\"spencecoin.eth\" width={200} /> |\n| ----------------------------------------- | ------------------------------------------- | -------------------------------------------- |\n| limes.eth                                 | coltron.eth                                 | spencecoin.eth                               |\n| <Avatar name=\"brantly.eth\" width={200} /> | <Avatar name=\"validator.eth\" width={200} /> |                                              |\n| brantly.eth                               | validator.eth                               |                                              |", "mimetype": "text/plain", "start_char_idx": 9310, "end_char_idx": 10020, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d71ed047-238b-4b2c-acf4-a8c2aae28dda": {"__data__": {"id_": "d71ed047-238b-4b2c-acf4-a8c2aae28dda", "embedding": null, "metadata": {"file_path": "src/pages/dao/stewards.mdx", "file_name": "stewards.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/stewards.mdx", "header_path": "/ENS DAO Stewards/Past Stewards/2022 Q1/Q2/", "customer_id": 1, "source_url": "src/pages/dao/stewards.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["public", "goods"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8d325b2c10b2024113807cfb38e90e87bd385ade", "node_type": "4", "metadata": {"file_path": "src/pages/dao/stewards.mdx", "file_name": "stewards.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/stewards.mdx"}, "hash": "b16f0ffaa11d0776e1f7fdf56aac7bd82a1bdc07c6c0ffa680905eaa83160652", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "97cba33a-51a9-4833-b9d6-ca810cb21b3c", "node_type": "1", "metadata": {"file_path": "src/pages/dao/stewards.mdx", "file_name": "stewards.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/stewards.mdx", "header_path": "/ENS DAO Stewards/Past Stewards/2022 Q1/Q2/"}, "hash": "8b5a73c640678851310a1c06bd262c35df822072a519c847cfd7ea59c1828750", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "#### Public Goods\n\n| <Avatar name=\"sumedha.eth\" width={200} /> | <Avatar name=\"ceresstation.eth\" width={200} /> | <Avatar name=\"avsa.eth\" width={200} /> |\n| ----------------------------------------- | ---------------------------------------------- | -------------------------------------- |\n| sumedha.eth                               | ceresstation.eth                               | avsa.eth                               |\n| <Avatar name=\"matoken.eth\" width={200} /> | <Avatar name=\"ricmoo.eth\" width={200} />       |                                        |\n| matoken.eth                               | ricmoo.eth                                     |                                        |", "mimetype": "text/plain", "start_char_idx": 10022, "end_char_idx": 10720, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e2c23ed4-42d7-4c80-8bfe-0c997478ee76": {"__data__": {"id_": "e2c23ed4-42d7-4c80-8bfe-0c997478ee76", "embedding": null, "metadata": {"file_path": "src/pages/dao/token.mdx", "file_name": "token.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/token.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/token.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["plans", "please", "tokens", "airdropped", "weary", "these", "airdrops", "decisions", "major", "another", "notices", "anyone", "could", "token", "governance"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a331a65c47188836aaa0e5d36408367352f57290", "node_type": "4", "metadata": {"file_path": "src/pages/dao/token.mdx", "file_name": "token.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/token.mdx"}, "hash": "b33d479f7f031ecc6ff1f5f2ef5ba0a5eab3c39f5e4f2760391cd974bf4271c7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fc14ece5-dc61-4cb0-899e-5232f1a64ff1", "node_type": "1", "metadata": {"header_path": "/The ENS Token/"}, "hash": "c9b4626bfd13737f3ac29f80687181983d86d6d9c0ac2fb8778a6b62bc38794a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# The ENS Token\n\n:::info\nENS Airdropped tokens to anyone who held an ENS name on _October 31st, 2021_.\n**THERE ARE NO PLANS FOR ANOTHER AIRDROP**. Please be weary of any notices of\nairdrops as these could turn out fraudulent.\n:::\n\nAll major decisions of the ENS DAO governance rely on the ENS Governance Token, which was distributted to ENS owners in 2021. The token can be found at [token.ensdao.eth](https://etherscan.io/address/token.ensdao.eth) on Ethereum Mainnet and is the only official governance token for ENS DAO.\n\nThe $ENS token allocation can be seen in the pie chart below.\n\n![ENS token distribution](/img/token-distribution.png)", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 642, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fc14ece5-dc61-4cb0-899e-5232f1a64ff1": {"__data__": {"id_": "fc14ece5-dc61-4cb0-899e-5232f1a64ff1", "embedding": null, "metadata": {"file_path": "src/pages/dao/token.mdx", "file_name": "token.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/token.mdx", "header_path": "/The ENS Token/", "customer_id": 1, "source_url": "src/pages/dao/token.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["tokens", "explain", "accidentally", "contact", "answer", "depends", "address", "working", "might", "recover", "wrong", "token"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a331a65c47188836aaa0e5d36408367352f57290", "node_type": "4", "metadata": {"file_path": "src/pages/dao/token.mdx", "file_name": "token.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/token.mdx"}, "hash": "b33d479f7f031ecc6ff1f5f2ef5ba0a5eab3c39f5e4f2760391cd974bf4271c7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e2c23ed4-42d7-4c80-8bfe-0c997478ee76", "node_type": "1", "metadata": {"file_path": "src/pages/dao/token.mdx", "file_name": "token.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/token.mdx", "header_path": "/"}, "hash": "9af16a0e88d63ab8b10667416bd09451d2e54ece147f81e73e491890367ef28f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Can I recover tokens accidentally sent to the wrong address?\n\nThe answer depends on the address the token was sent to.\n\n- If you accidentally sent the token to [token.ensdao.eth](https://etherscan.io/address/token.ensdao.eth) or [wallet.ensdao.eth](https://etherscan.io/address/wallet.ensdao.eth), then it might be recoverable. Contact the [Meta-governance working group](/dao/stewards/) and explain the situation.\n\n- If the tokens were sent to the null address (0x000...0000) or an address with a typo, then the tokens are unrecoverable and there's nothing that anyone can do.\n\n- If the tokens were sent to an exchange or a third party, then contact that third party for help.", "mimetype": "text/plain", "start_char_idx": 644, "end_char_idx": 1324, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8333a992-15f7-4004-9494-7b6347fc0152": {"__data__": {"id_": "8333a992-15f7-4004-9494-7b6347fc0152", "embedding": null, "metadata": {"file_path": "src/pages/dao/wg/rules.mdx", "file_name": "rules.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/wg/rules.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/wg/rules.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["document", "rules", "group", "represent", "amended", "these", "current", "represents", "working", "created", "state", "should"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3e8eae8b276e681c237335f58a222338f667815d", "node_type": "4", "metadata": {"file_path": "src/pages/dao/wg/rules.mdx", "file_name": "rules.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/wg/rules.mdx"}, "hash": "798831554d1683fbfbc5b295044ecff7819bb56849db9b27ba7f33aebf679e96", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0a8274f2-77cf-4d7d-bb8f-64088ad279ba", "node_type": "1", "metadata": {"header_path": "/ENS DAO Working Group Rules/"}, "hash": "120ded4aa6bf72bfb1b310d1dbad76c15a629afbca17f86dee3f7069a1659787", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# ENS DAO Working Group Rules\n\n_This document represents the current state of the Working Group Rules as created by [EP0.4](https://snapshot.box/#/s:ens.eth/proposal/0x899ead1d9b9b98f63f6a60dc0939bef55dbe365e78c6a550f07be969a47f148b), and amended by [EP1.8](https://snapshot.box/#/s:ens.eth/proposal/0xc7186cf8bebe47600f8d847e76f7971ea97b48bc04eda1e07780aff91fb6410d) and [EP4.8](https://snapshot.box/#/s:ens.eth/proposal/0x26a5c8dec547837495707e70446d1e7cd874a91f75753c602998f6e70083a266). These should represent the canonical version of the rules and any social proposal to amend it should include a PR to this document._\n\n:::note\nThe numbering system of EP's was changed after Working Group rules were established, which is why the above proposals have different numbers than Snapshot displays.\n:::", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 801, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0a8274f2-77cf-4d7d-bb8f-64088ad279ba": {"__data__": {"id_": "0a8274f2-77cf-4d7d-bb8f-64088ad279ba", "embedding": null, "metadata": {"file_path": "src/pages/dao/wg/rules.mdx", "file_name": "rules.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/wg/rules.mdx", "header_path": "/ENS DAO Working Group Rules/", "customer_id": 1, "source_url": "src/pages/dao/wg/rules.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["forward", "social", "groups", "formation", "proposal", "documentation", "passed", "create", "working", "defined", "governance"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3e8eae8b276e681c237335f58a222338f667815d", "node_type": "4", "metadata": {"file_path": "src/pages/dao/wg/rules.mdx", "file_name": "rules.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/wg/rules.mdx"}, "hash": "798831554d1683fbfbc5b295044ecff7819bb56849db9b27ba7f33aebf679e96", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8333a992-15f7-4004-9494-7b6347fc0152", "node_type": "1", "metadata": {"file_path": "src/pages/dao/wg/rules.mdx", "file_name": "rules.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/wg/rules.mdx", "header_path": "/"}, "hash": "aaab9bee3f26d70cf70cbcd07e2af0d1b95292011413aec39213f86fcc874f1e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "46f8de9f-567e-4c08-a4ff-bf5c7ce188ec", "node_type": "1", "metadata": {"header_path": "/ENS DAO Working Group Rules/"}, "hash": "1af7da0970547ba32f9d359333b88cdb7650ba941c3e75c02559018ee3257713", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## 1. Formation of Working Groups\n\n1.  To create a new working group, a social proposal, as defined by the ENS governance documentation ('Social Proposal'), must be put forward and passed by the DAO.\n2.  A Social Proposal to create a new working group must demonstrate that the new working group is needed and the work cannot be undertaken within an existing working group. ## 2. Dissolution of Working Groups\n\n1.  A working group can be dissolved by passing a Social Proposal requesting the dissolution of a working group or working groups.\n2.  If an active proposal is put forward to dissolve a working group, all working group funds, including outgoing payments, within that working group, are to be frozen with immediate effect, pending the outcome of that vote.\n3.  Upon the dissolution of a working group, any and all unspent working group funds from that working group, at the time of dissolution, must be immediately returned to the DAO treasury, without delay.", "mimetype": "text/plain", "start_char_idx": 803, "end_char_idx": 1176, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "45364044-6199-4d48-a8b9-2e66d7d449f8": {"__data__": {"id_": "45364044-6199-4d48-a8b9-2e66d7d449f8", "embedding": null, "metadata": {"file_path": "src/pages/dao/wg/rules.mdx", "file_name": "rules.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/wg/rules.mdx", "header_path": "/ENS DAO Working Group Rules/", "customer_id": 1, "source_url": "src/pages/dao/wg/rules.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["groups", "group", "stewards", "within", "elected", "three", "working", "serve", "managed", "shall"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3e8eae8b276e681c237335f58a222338f667815d", "node_type": "4", "metadata": {"file_path": "src/pages/dao/wg/rules.mdx", "file_name": "rules.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/wg/rules.mdx"}, "hash": "798831554d1683fbfbc5b295044ecff7819bb56849db9b27ba7f33aebf679e96", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "46f8de9f-567e-4c08-a4ff-bf5c7ce188ec", "node_type": "1", "metadata": {"file_path": "src/pages/dao/wg/rules.mdx", "file_name": "rules.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/wg/rules.mdx", "header_path": "/ENS DAO Working Group Rules/"}, "hash": "7dd18a85f24c64003c91fe69f85ad394b77048868be6f4785a4cabd1cb53de99", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "78ff5745-6f46-4f62-b214-d2702042e9fa", "node_type": "1", "metadata": {"header_path": "/ENS DAO Working Group Rules/"}, "hash": "1fe036f51a3c055cf5d88c84d0484c7e54f56b8ca5925e70c6dc4b9af8fa18e3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## 3. Working Group Stewards\n\n1.  Each working group shall be managed by three stewards (hereafter a 'Steward' or 'Stewards').\n2.  Stewards will be elected to serve within working groups for a set period of one calendar year (hereafter known as a 'Term').\n3.  The Term for Stewards commences at 9am UTC on January 1 each year and ends immediately prior to the commencement of the Term of the following year.\n4.  Stewards are responsible for overseeing the operation of working groups in accordance with these rules and the ENS DAO constitution.\n5.  The responsibilities of Stewards include, but are not limited to:\n    1. Requesting working group funds from the DAO in accordance with these rules;\n    2. Approving the creation of sub-groups or workstreams within a working group to undertake work and/or carry out specific projects or tasks;\n    3. Dissolving sub-groups or workstreams within a working group;\n    4. Using discretion to make working group funds available to sub-groups, workstreams, or contributors within a working group;\n    5. Using discretion to disburse working group funds to people and/or projects in accordance with the ENS DAO constitution; and\n    6. Acting as keyholders of working group multi-sigs.", "mimetype": "text/plain", "start_char_idx": 1775, "end_char_idx": 3003, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "78ff5745-6f46-4f62-b214-d2702042e9fa": {"__data__": {"id_": "78ff5745-6f46-4f62-b214-d2702042e9fa", "embedding": null, "metadata": {"file_path": "src/pages/dao/wg/rules.mdx", "file_name": "rules.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/wg/rules.mdx", "header_path": "/ENS DAO Working Group Rules/", "customer_id": 1, "source_url": "src/pages/dao/wg/rules.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["nominations", "individual", "nominate", "annual", "group", "eligible", "election", "eligibility", "within", "working", "themselves", "steward"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3e8eae8b276e681c237335f58a222338f667815d", "node_type": "4", "metadata": {"file_path": "src/pages/dao/wg/rules.mdx", "file_name": "rules.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/wg/rules.mdx"}, "hash": "798831554d1683fbfbc5b295044ecff7819bb56849db9b27ba7f33aebf679e96", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "45364044-6199-4d48-a8b9-2e66d7d449f8", "node_type": "1", "metadata": {"file_path": "src/pages/dao/wg/rules.mdx", "file_name": "rules.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/wg/rules.mdx", "header_path": "/ENS DAO Working Group Rules/"}, "hash": "ef459ac996c55c0de31a5d97a8d082bfcda3b16aa6142366bb89318c4a80f4ab", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d468dfc7-1cb3-48b5-9cf7-36135a659db6", "node_type": "1", "metadata": {"header_path": "/ENS DAO Working Group Rules/"}, "hash": "1b86ca044d5ba1639a8a36d8e3f092a0d59cdbccb77bcc435f4d4e504d4442d4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## 4. Steward Eligibility and Nominations\n\n1.  Any individual is eligible to nominate themselves to be a Steward of a working group within the DAO ('Eligible Person').\n2.  To be eligible for the election for the annual Term, Eligible Persons must nominate themselves between 9am UTC on December 6 and 9am UTC on December 9 ('Nomination Window').\n3.  An Eligible Person may nominate themselves to become a Steward of a working group during the Nomination Window, by meeting the requirements set out in a call for nominations posted in the relevant working group category of the ENS governance forum.\n4.  An Eligible Person who completes the steps outlined in rule 4.3 above during the Nomination Window and receives 10,000 signed votes to support their nomination will be included in the ballot as a nominee in the election for Stewards that takes place following that Nomination Window ('Nominee').", "mimetype": "text/plain", "start_char_idx": 3005, "end_char_idx": 3903, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d468dfc7-1cb3-48b5-9cf7-36135a659db6": {"__data__": {"id_": "d468dfc7-1cb3-48b5-9cf7-36135a659db6", "embedding": null, "metadata": {"file_path": "src/pages/dao/wg/rules.mdx", "file_name": "rules.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/wg/rules.mdx", "header_path": "/ENS DAO Working Group Rules/", "customer_id": 1, "source_url": "src/pages/dao/wg/rules.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["upcoming", "group", "signed", "commencing", "stewards", "using", "holders", "messages", "working", "place", "steward", "elections", "token", "governance"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3e8eae8b276e681c237335f58a222338f667815d", "node_type": "4", "metadata": {"file_path": "src/pages/dao/wg/rules.mdx", "file_name": "rules.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/wg/rules.mdx"}, "hash": "798831554d1683fbfbc5b295044ecff7819bb56849db9b27ba7f33aebf679e96", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "78ff5745-6f46-4f62-b214-d2702042e9fa", "node_type": "1", "metadata": {"file_path": "src/pages/dao/wg/rules.mdx", "file_name": "rules.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/wg/rules.mdx", "header_path": "/ENS DAO Working Group Rules/"}, "hash": "9bb179f632a519c8802a02dee7c21d7b277fee4c6652190b5a235a63f9566914", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8923ba87-dd20-46bb-a76d-8fdab4eb822d", "node_type": "1", "metadata": {"header_path": "/ENS DAO Working Group Rules/"}, "hash": "f23be01fcc15ff59065c18502e831a5931dd5139076b7b6e7102bdc361ebbcac", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## 5. Steward Elections\n\n1.  Elections for working group Stewards for the upcoming year will take place by a vote of governance token holders using signed messages and will be open for 120 hours, commencing at 9am UTC on December 10 each year ('Election Window').\n2.  The top-ranked Nominees from the working group vote held during the Election Window will fill any available positions for the role of Steward for those working groups for the upcoming Term, based on the order in which they are ranked in the vote.\n3.  A Nominee elected to serve as a Steward may not take up the role of Steward for more than two working groups during their Term.", "mimetype": "text/plain", "start_char_idx": 3905, "end_char_idx": 4551, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8923ba87-dd20-46bb-a76d-8fdab4eb822d": {"__data__": {"id_": "8923ba87-dd20-46bb-a76d-8fdab4eb822d", "embedding": null, "metadata": {"file_path": "src/pages/dao/wg/rules.mdx", "file_name": "rules.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/wg/rules.mdx", "header_path": "/ENS DAO Working Group Rules/", "customer_id": 1, "source_url": "src/pages/dao/wg/rules.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["delay", "nominations", "nomination", "after", "window", "stewards", "event", "election", "place", "elections", "process"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3e8eae8b276e681c237335f58a222338f667815d", "node_type": "4", "metadata": {"file_path": "src/pages/dao/wg/rules.mdx", "file_name": "rules.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/wg/rules.mdx"}, "hash": "798831554d1683fbfbc5b295044ecff7819bb56849db9b27ba7f33aebf679e96", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d468dfc7-1cb3-48b5-9cf7-36135a659db6", "node_type": "1", "metadata": {"file_path": "src/pages/dao/wg/rules.mdx", "file_name": "rules.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/wg/rules.mdx", "header_path": "/ENS DAO Working Group Rules/"}, "hash": "248eba4b64e7476ad66062bbe31f694120fc4781ea3fd78ebfbb000e05d43ddc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "54cc9583-c314-4ef2-add2-b230255d4fb4", "node_type": "1", "metadata": {"header_path": "/ENS DAO Working Group Rules/"}, "hash": "6c786404b15f17089cba4b292f33017d5d2ac144c082b79d603f4aafe9c62939", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## 6. Delay of Nominations or Elections\n\n1.  In the event that nominations or elections for Stewards take place after a Nomination Window or after an Election Window, the nomination process and/or elections shall take place, as otherwise prescribed in rules 4 and 5 above, as soon as is practicable after the missed Nomination Window or missed Election Window.\n2.  In the event that an election takes place outside of an Election Window and after the commencement date of a new Term, outgoing Stewards from the previous Term shall stay in their positions as working group Stewards until immediately prior to 9am UTC the day following the end of the election, which, for the avoidance of doubt, is 120 hours after voting in those elections commenced.\n3.  In the event that an election takes place outside of an Election Window and after the commencement date of a new Term, newly elected Stewards will assume the responsibilities of stewardship within working groups at 9am UTC the day following the end of the election, as defined in rule 6.2 above, for the remainder of that Term.", "mimetype": "text/plain", "start_char_idx": 4553, "end_char_idx": 5634, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "54cc9583-c314-4ef2-add2-b230255d4fb4": {"__data__": {"id_": "54cc9583-c314-4ef2-add2-b230255d4fb4", "embedding": null, "metadata": {"file_path": "src/pages/dao/wg/rules.mdx", "file_name": "rules.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/wg/rules.mdx", "header_path": "/ENS DAO Working Group Rules/", "customer_id": 1, "source_url": "src/pages/dao/wg/rules.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["removal", "social", "among", "removed", "indicative", "proposal", "stewards", "passed", "majority", "working", "replacement", "outcome", "simple"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3e8eae8b276e681c237335f58a222338f667815d", "node_type": "4", "metadata": {"file_path": "src/pages/dao/wg/rules.mdx", "file_name": "rules.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/wg/rules.mdx"}, "hash": "798831554d1683fbfbc5b295044ecff7819bb56849db9b27ba7f33aebf679e96", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8923ba87-dd20-46bb-a76d-8fdab4eb822d", "node_type": "1", "metadata": {"file_path": "src/pages/dao/wg/rules.mdx", "file_name": "rules.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/wg/rules.mdx", "header_path": "/ENS DAO Working Group Rules/"}, "hash": "b3a0dffec4f7d2cfc11b9a02c309b6c89f61ecac27b62dd947df9dbbfad20d7c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a8ecf130-b38b-4bd4-830a-f969dfa36a62", "node_type": "1", "metadata": {"header_path": "/ENS DAO Working Group Rules/"}, "hash": "8af6abd7dc25bd55685fea0d5e81d1b62c347187e12fc5ac4e726a5dd9e41165", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## 7. Removal and Replacement of Stewards\n\n1.  Stewards may be removed at any time by:\n    1. a Social Proposal passed by the DAO; or\n    2. a simple indicative majority vote among Stewards of all working groups, with the outcome of that vote communicated in the relevant working group category of the ENS governance forum.\n2.  Stewards may step down from their position at any time by communicating their intention to step down in the ENS governance forum.\n3.  In the event that a Steward is removed, steps down, or is unable to continue as a Steward, for whatever reason, prior to the end of a Term, a new election must be held to fill any vacant Steward positions, in accordance with rule 6 above.", "mimetype": "text/plain", "start_char_idx": 5636, "end_char_idx": 6336, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a8ecf130-b38b-4bd4-830a-f969dfa36a62": {"__data__": {"id_": "a8ecf130-b38b-4bd4-830a-f969dfa36a62", "embedding": null, "metadata": {"file_path": "src/pages/dao/wg/rules.mdx", "file_name": "rules.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/wg/rules.mdx", "header_path": "/ENS DAO Working Group Rules/", "customer_id": 1, "source_url": "src/pages/dao/wg/rules.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["group", "eligible", "stewards", "within", "first", "current", "elected", "working", "serve", "steward", "appoint"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3e8eae8b276e681c237335f58a222338f667815d", "node_type": "4", "metadata": {"file_path": "src/pages/dao/wg/rules.mdx", "file_name": "rules.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/wg/rules.mdx"}, "hash": "798831554d1683fbfbc5b295044ecff7819bb56849db9b27ba7f33aebf679e96", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "54cc9583-c314-4ef2-add2-b230255d4fb4", "node_type": "1", "metadata": {"file_path": "src/pages/dao/wg/rules.mdx", "file_name": "rules.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/wg/rules.mdx", "header_path": "/ENS DAO Working Group Rules/"}, "hash": "234de7ef441dbe6bcdd57204dc44475350b6024567ebb223b8b49d36579b2081", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d25b0572-5509-45b7-871e-466d1f949eeb", "node_type": "1", "metadata": {"header_path": "/ENS DAO Working Group Rules/"}, "hash": "0cc0e95a743fdede762dc2af01692a89ca4fac24bc6b99642cbc15483ec28f42", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## 8. Lead Stewards\n\n1.  Each working group must appoint a lead Steward within the first five days of a Term (hereafter a 'Lead Steward' or 'Lead Stewards').\n2.  Only current elected Stewards of a working group are eligible to serve as Lead Stewards within a given working group.\n3.  Lead Stewards may be appointed or removed from that role at any time by a simple indicative majority vote among the Stewards of a working group, with the outcome of that vote communicated in the relevant working group category of the ENS governance forum.\n4.  In the event that a Lead Steward steps down from the position or is removed as a Lead Steward before the end of a Term in accordance with rule 8.3 above, a new Lead Steward must be appointed within five calendar days.\n5.  A Steward who is appointed to serve as a Lead Steward of a working group will remain in that position, as Lead Steward, from the date of appointment until the end of their elected Term as a Steward or until they are removed as a Lead Steward in accordance with rule 8.3 above or until they are removed as a Steward in accordance with rule 7 above.\n6.  Lead Stewards are responsible for the operational management and administration of working groups and are expected to provide regular updates to the DAO in the ENS governance forum related to working group progress, achievements, and challenges.\n7.  The responsibilities of Lead Stewards include, but are not limited to:\n    1. Acting as a representative of a working group;\n    2. Managing resource requests from sub-groups, workstreams, and contributors within a working group;\n    3. Initiating the disbursement of working group funds on an as-needed basis;\n    4. Providing reports of working group spending in the ENS governance forum; and\n    5. Maintaining open communications with DAO participants in the ENS governance forum.", "mimetype": "text/plain", "start_char_idx": 6338, "end_char_idx": 8190, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d25b0572-5509-45b7-871e-466d1f949eeb": {"__data__": {"id_": "d25b0572-5509-45b7-871e-466d1f949eeb", "embedding": null, "metadata": {"file_path": "src/pages/dao/wg/rules.mdx", "file_name": "rules.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/wg/rules.mdx", "header_path": "/ENS DAO Working Group Rules/", "customer_id": 1, "source_url": "src/pages/dao/wg/rules.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["start", "individual", "appointed", "group", "removed", "collaborate", "stewards", "current", "working", "secretary", "serve", "shall", "appoint"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3e8eae8b276e681c237335f58a222338f667815d", "node_type": "4", "metadata": {"file_path": "src/pages/dao/wg/rules.mdx", "file_name": "rules.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/wg/rules.mdx"}, "hash": "798831554d1683fbfbc5b295044ecff7819bb56849db9b27ba7f33aebf679e96", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a8ecf130-b38b-4bd4-830a-f969dfa36a62", "node_type": "1", "metadata": {"file_path": "src/pages/dao/wg/rules.mdx", "file_name": "rules.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/wg/rules.mdx", "header_path": "/ENS DAO Working Group Rules/"}, "hash": "2a76c82d9293b0e063ad6488e0c6301ec9e4796924ac292b5df93a25dfd4a986", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "75aa1581-8bbe-4c1c-8108-8e99b441309b", "node_type": "1", "metadata": {"header_path": "/ENS DAO Working Group Rules/"}, "hash": "83bf8a6e137c0e62e5910a4c91db5cdf1dd5d01a0765ffd0a762cf3dee20f3a0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## 9. DAO Secretary\n\n1.  At the start of each Term, the current Stewards of each working group shall collaborate to appoint an individual who will serve as the secretary of the DAO (hereafter 'Secretary' or 'Secretaries').\n2.  The Secretary may be appointed or removed from that role at any time by a majority vote of all elected Stewards in a given Term with the outcome of that vote communicated in the ENS governance forum.\n3.  The Secretary will remain in that position, as Secretary of the DAO, from the date of appointment until the end of a given Term or until the date at which they are removed from that position in accordance with rule 9.2 above.\n4.  Secretaries are eligible to receive fair compensation for their work as Secretary of the DAO.\n5.  Compensation for the Secretary of the DAO is to be paid by the Meta-Governance Working Group using funds requested in accordance with rule 10 below.\n6.  Any individual is eligible to be appointed as the Secretary of the DAO, including past and present working group Stewards.\n7.  The Secretary is responsible for managing working relationships and communications across working groups as well as performing administrative duties for the DAO.\n8.  The responsibilities of the Secretary include, but are not limited to:\n    1. Managing a DAO-wide calendar;\n    2. Coordinating and attending working group meetings where possible and ensuring meeting summaries are posted in the ENS governance forum;\n    3. Assisting Stewards with coordination challenges within working groups; and\n    4. Acting as a multi-sig keyholder for each working group.", "mimetype": "text/plain", "start_char_idx": 8192, "end_char_idx": 9792, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "75aa1581-8bbe-4c1c-8108-8e99b441309b": {"__data__": {"id_": "75aa1581-8bbe-4c1c-8108-8e99b441309b", "embedding": null, "metadata": {"file_path": "src/pages/dao/wg/rules.mdx", "file_name": "rules.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/wg/rules.mdx", "header_path": "/ENS DAO Working Group Rules/", "customer_id": 1, "source_url": "src/pages/dao/wg/rules.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["submit", "groups", "request", "group", "collaborate", "stewards", "funds", "working", "executable", "active", "defined", "governance"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3e8eae8b276e681c237335f58a222338f667815d", "node_type": "4", "metadata": {"file_path": "src/pages/dao/wg/rules.mdx", "file_name": "rules.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/wg/rules.mdx"}, "hash": "798831554d1683fbfbc5b295044ecff7819bb56849db9b27ba7f33aebf679e96", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d25b0572-5509-45b7-871e-466d1f949eeb", "node_type": "1", "metadata": {"file_path": "src/pages/dao/wg/rules.mdx", "file_name": "rules.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/wg/rules.mdx", "header_path": "/ENS DAO Working Group Rules/"}, "hash": "3ca07fceb694f5011de21608700dfe9311c86223e6318dbef2f1f7568a1a2a16", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6215c304-acf9-4c94-b095-b8f351bf1402", "node_type": "1", "metadata": {"header_path": "/ENS DAO Working Group Rules/"}, "hash": "8cd41bb25199f6756f7726f6a0b65c674d6479edc4bb08479c46db9127c94ad3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## 10. Working Group Funds\n\n1. To request working group funds, Stewards of all working groups will collaborate to submit an active executable proposal, as defined by the ENS governance documentation ('Collective Proposal'), to the DAO during the months of January, April, July, and October each calendar year (each a 'Funding Window').\n   1. In order for a working group to have a funding request included in a Collective Proposal submitted to the DAO during a Funding Window, the funding request must have passed as a Social Proposal in the same Funding Window.\n   2. In the case of an emergency, where working group funds are needed by a working group outside of a Funding Window, an executable proposal, as defined by the ENS governance documentation, may be submitted at any time by a Steward of a working group to request funds from the DAO.\n2. Working group funds requested and approved in accordance with rule 10.1 above are to be paid out into separate working group multi-sigs controlled by the DAO.\n3. Each working group multi-sig must have four keyholders, made up of three current elected Stewards for that working group and the Secretary of the DAO for that Term, with no other keyholders permitted.\n4. Working group funds may be disbursed from working group multi-sigs with three-of-four keyholder signing.\n5. Stewards of a given working group shall have the discretion to reallocate funds approved in a Collective Proposal where appropriate and where it is not in conflict with any rules of the DAO, DAO bylaws, or the ENS DAO constitution.", "mimetype": "text/plain", "start_char_idx": 9794, "end_char_idx": 11349, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6215c304-acf9-4c94-b095-b8f351bf1402": {"__data__": {"id_": "6215c304-acf9-4c94-b095-b8f351bf1402", "embedding": null, "metadata": {"file_path": "src/pages/dao/wg/rules.mdx", "file_name": "rules.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/wg/rules.mdx", "header_path": "/ENS DAO Working Group Rules/", "customer_id": 1, "source_url": "src/pages/dao/wg/rules.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["steward", "eligible", "stewards", "receive", "their", "requests", "compensation", "detailed"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3e8eae8b276e681c237335f58a222338f667815d", "node_type": "4", "metadata": {"file_path": "src/pages/dao/wg/rules.mdx", "file_name": "rules.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/wg/rules.mdx"}, "hash": "798831554d1683fbfbc5b295044ecff7819bb56849db9b27ba7f33aebf679e96", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "75aa1581-8bbe-4c1c-8108-8e99b441309b", "node_type": "1", "metadata": {"file_path": "src/pages/dao/wg/rules.mdx", "file_name": "rules.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/wg/rules.mdx", "header_path": "/ENS DAO Working Group Rules/"}, "hash": "195c84340654731a2ef223343729cb749eafdb0c7f06c76efe371027a1f5176c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8a41e316-598a-415c-ba26-500b3f704312", "node_type": "1", "metadata": {"header_path": "/ENS DAO Working Group Rules/"}, "hash": "38bcdc7eeb38417dc953d9dc6db1ab205743bedf2fcc8e0b6d14ae1abb648f08", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## 11. Compensation for Stewards and Lead Stewards\n\n1. Stewards are eligible to receive fair compensation for their work as a Steward or Lead Steward in the DAO.\n2. All requests for Steward or Lead Steward compensation must be detailed in a Collective Proposal for working group funds submitted to the DAO in accordance with rule 10.1 above.\n3. Stewards may not receive compensation for their role as a Steward or Lead Steward outside of that compensation expressly provided for in a Collective Proposal submitted to the DAO in accordance with rule 10.1 above.\n4. The Meta-Governance working group are responsible for defining standards for fair compensation ('Compensation Guidelines').\n5. The Compensation Guidelines shall be defined prior to the Nomination Window for each term and can only take effect for the following term.", "mimetype": "text/plain", "start_char_idx": 11351, "end_char_idx": 12180, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8a41e316-598a-415c-ba26-500b3f704312": {"__data__": {"id_": "8a41e316-598a-415c-ba26-500b3f704312", "embedding": null, "metadata": {"file_path": "src/pages/dao/wg/rules.mdx", "file_name": "rules.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/wg/rules.mdx", "header_path": "/ENS DAO Working Group Rules/", "customer_id": 1, "source_url": "src/pages/dao/wg/rules.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["alongside", "protocol", "social", "amendments", "level", "amended", "these", "passing", "supported", "supports", "favourite", "rules", "dnssec"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3e8eae8b276e681c237335f58a222338f667815d", "node_type": "4", "metadata": {"file_path": "src/pages/dao/wg/rules.mdx", "file_name": "rules.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/wg/rules.mdx"}, "hash": "798831554d1683fbfbc5b295044ecff7819bb56849db9b27ba7f33aebf679e96", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6215c304-acf9-4c94-b095-b8f351bf1402", "node_type": "1", "metadata": {"file_path": "src/pages/dao/wg/rules.mdx", "file_name": "rules.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/wg/rules.mdx", "header_path": "/ENS DAO Working Group Rules/"}, "hash": "e3653b1006a5be09639b4022e143ed4076564e13b0cb24896f74422b96a058cc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## 12. Amendments\n\n1. These rules may be amended at any time by passing a Social Proposal. # Supported TLD List [Any DNS TLD that supports DNSSEC can be used with ENS]\n\nAlongside the `.eth` Top Level Domain, the ENS Protocol also supports most of your favourite DNS Top Level Domains (such as `.com`, `.cash` or `.domains`).\n\nAll DNS TLDs are owned by the [DNS Registrar](/registry/dns) by default, but TLD operators can claim ownership of their TLD in ENS to implement custom logic.\n\nBelow is a list of all known custom TLD implementations:\n\n{/* TODO: Generate this at build time */}\n\n| TLD     | Registrar                                                                                                             |\n| ------- | --------------------------------------------------------------------------------------------------------------------- |\n| .art    | [0x828D6e836e586B53f1da3403FEda923AEd431019](https://etherscan.io/address/0x828D6e836e586B53f1da3403FEda923AEd431019) |\n| .box    | [0x0b9BB06Ebf35A755998B60353546ae8A055554d2](https://etherscan.io/address/0x0b9BB06Ebf35A755998B60353546ae8A055554d2) |\n| .hiphop | [0x04ebA57401184A97C919b0B6b4e8dDE263BCb920](https://etherscan.io/address/0x04ebA57401184A97C919b0B6b4e8dDE263BCb920) |\n| .club   | [0x1eb4b8506fca65e6B229E346dfBfd349956A66e3](https://etherscan.io/address/0x1eb4b8506fca65e6B229E346dfBfd349956A66e3) |\n| .kred   | [0x56ca9514363F68d622931dce1566070f86Ce5550](https://etherscan.io/address/0x56ca9514363F68d622931dce1566070f86Ce5550) |\n| .luxe   | [0xA86ba3b6d83139a49B649C05DBb69E0726DB69cf](https://etherscan.io/address/0xA86ba3b6d83139a49B649C05DBb69E0726DB69cf) |", "mimetype": "text/plain", "start_char_idx": 12182, "end_char_idx": 12272, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "77229180-75f2-4771-954c-9135d78c9729": {"__data__": {"id_": "77229180-75f2-4771-954c-9135d78c9729", "embedding": null, "metadata": {"file_path": "src/pages/dweb/intro.mdx", "file_name": "intro.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dweb/intro.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dweb/intro.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["component", "website", "hosting", "using", "first", "decentralized", "import", "popular", "badge", "contenthash"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3182e86b97c1203991444533b54ac5fc88a66ed0", "node_type": "4", "metadata": {"file_path": "src/pages/dweb/intro.mdx", "file_name": "intro.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dweb/intro.mdx"}, "hash": "ad021e93e38bbdcc060734a3a3027a27e97822462d231a86c18796f8503fb82b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9a1cebea-5b8f-46f1-9725-8e9522e775e6", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "a1b38f8b00f4b42274f794617798549c5be0a403e9b5646d45ee268854e0e89a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "import { Badge } from '../../components/ui/Badge'\nimport { Card } from '../../components/ui/Card' # Hosting a Decentralized Website [Introduction to hosting a decentralized website using ENS] ## ContentHash\n\nThe ContentHash is a very popular component of an ENS name, first introduced in [ENSIP-7](/ensip/7).\nIt can be queried by hitting the [contenthash(bytes32)](/resolvers/interfaces#0xbc1c58d1) function on a name's resolver.\nYou can also [set the contenthash on a name](/resolvers/interfaces#0x304e6ade) if the resolver supports it.\n\n<Card className=\"flex justify-center gap-4\">\n  {['ipfs://qMhx...', 'bzz:/2477', 'ar://HGa8...'].map((tag) => (\n    <Badge key={tag} variant=\"secondary\">\n      {tag}\n    </Badge>\n  ))}\n</Card>", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 97, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f5b4991f-fec3-484c-8439-28687f42c7b0": {"__data__": {"id_": "f5b4991f-fec3-484c-8439-28687f42c7b0", "embedding": null, "metadata": {"file_path": "src/pages/dweb/intro.mdx", "file_name": "intro.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dweb/intro.mdx", "header_path": "/Hosting a Decentralized Website [Introduction to hosting a decentralized website using ENS]/", "customer_id": 1, "source_url": "src/pages/dweb/intro.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["either", "include", "hosting", "depending", "options", "pinning", "choose", "there", "popular", "files", "comes", "option"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3182e86b97c1203991444533b54ac5fc88a66ed0", "node_type": "4", "metadata": {"file_path": "src/pages/dweb/intro.mdx", "file_name": "intro.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dweb/intro.mdx"}, "hash": "ad021e93e38bbdcc060734a3a3027a27e97822462d231a86c18796f8503fb82b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d32488bf-c58c-4f3c-912e-6a840165012e", "node_type": "1", "metadata": {"file_path": "src/pages/dweb/intro.mdx", "file_name": "intro.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dweb/intro.mdx", "header_path": "/Hosting a Decentralized Website [Introduction to hosting a decentralized website using ENS]/"}, "hash": "29de9365587ef13e198711316fe0c991c6928b3b3cc2c11a142bb3c1293cc149", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e8ecc2c2-b33a-481d-9d14-691183df01e8", "node_type": "1", "metadata": {"header_path": "/Hosting a Decentralized Website [Introduction to hosting a decentralized website using ENS]/Hosting & Pinning/"}, "hash": "2eadd10c1e79eb101d1e2c83648c449b499b7f33150013afad5886f7248c0bb0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Hosting & Pinning\n\nWhen it comes to hosting your files there are many options to choose from.\n\n<Card className=\"flex justify-center gap-4\">\n  {['IPFS / Filecoin', 'Swarm', 'Arweave'].map((tag) => (\n    <Badge key={tag} variant=\"secondary\">\n      {tag}\n    </Badge>\n  ))}\n</Card>\n\nPopular options include [IPFS](https://ipfs.io), [Swarm](https://ethswarm.org), and [Arweave](https://arweave.org).\nDepending on what option you go with your files are either permanently stored on a network,\nor require to be actively stored on at least one machine, also known as \"pinning\".", "mimetype": "text/plain", "start_char_idx": 734, "end_char_idx": 1307, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e8ecc2c2-b33a-481d-9d14-691183df01e8": {"__data__": {"id_": "e8ecc2c2-b33a-481d-9d14-691183df01e8", "embedding": null, "metadata": {"file_path": "src/pages/dweb/intro.mdx", "file_name": "intro.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dweb/intro.mdx", "header_path": "/Hosting a Decentralized Website [Introduction to hosting a decentralized website using ENS]/Hosting & Pinning/", "customer_id": 1, "source_url": "src/pages/dweb/intro.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["helpful", "sites", "notably", "helping", "website", "deploy", "tools", "decentralized", "platforms", "several", "exist", "easily"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3182e86b97c1203991444533b54ac5fc88a66ed0", "node_type": "4", "metadata": {"file_path": "src/pages/dweb/intro.mdx", "file_name": "intro.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dweb/intro.mdx"}, "hash": "ad021e93e38bbdcc060734a3a3027a27e97822462d231a86c18796f8503fb82b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f5b4991f-fec3-484c-8439-28687f42c7b0", "node_type": "1", "metadata": {"file_path": "src/pages/dweb/intro.mdx", "file_name": "intro.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dweb/intro.mdx", "header_path": "/Hosting a Decentralized Website [Introduction to hosting a decentralized website using ENS]/"}, "hash": "b23af71059672b69040103228e260face76342ceda61bb8d9baf29afe1a9ac80", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6a8eeed3-10f3-48e8-ad37-5e3c10206b47", "node_type": "1", "metadata": {"header_path": "/Hosting a Decentralized Website [Introduction to hosting a decentralized website using ENS]/"}, "hash": "094694a055c26eb6fa7b1e41ea82ee84ff1f907a4105a5504a8b72fe69eaec04", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Deploy your sites\n\nSeveral helpful tools and platforms exist that you can use to deploy your website to IPFS, Swarm, or Arweave.\nMost notably [fleek](https://fleek.xyz), [Pinata](https://pinata.cloud), and [Blumen](https://blumen.stauro.dev/).\nHelping you easily deploy your website to a decentralized storage network. ## Setting your ContentHash\n\nIf you are using the public resolver (the default for names registered using the ENS Manager App), you can set the contenthash directly from within the [ENS Manager App](https://app.ens.domains).\n\nIf you are using a custom resolver, or are writing your own resolver you will be able to have more fine grained control over the contenthash field.\nSee [ENSIP-7](/ensip/7) for more information on the contenthash field.", "mimetype": "text/plain", "start_char_idx": 1309, "end_char_idx": 1631, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9ebc6237-6a00-4e19-9091-e54f298f40d1": {"__data__": {"id_": "9ebc6237-6a00-4e19-9091-e54f298f40d1", "embedding": null, "metadata": {"file_path": "src/pages/dweb/intro.mdx", "file_name": "intro.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dweb/intro.mdx", "header_path": "/Hosting a Decentralized Website [Introduction to hosting a decentralized website using ENS]/", "customer_id": 1, "source_url": "src/pages/dweb/intro.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["browser", "world", "already", "browsers", "ideal", "access", "using", "decentralized", "supports", "gateways", "support", "every", "websites"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3182e86b97c1203991444533b54ac5fc88a66ed0", "node_type": "4", "metadata": {"file_path": "src/pages/dweb/intro.mdx", "file_name": "intro.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dweb/intro.mdx"}, "hash": "ad021e93e38bbdcc060734a3a3027a27e97822462d231a86c18796f8503fb82b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6a8eeed3-10f3-48e8-ad37-5e3c10206b47", "node_type": "1", "metadata": {"file_path": "src/pages/dweb/intro.mdx", "file_name": "intro.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dweb/intro.mdx", "header_path": "/Hosting a Decentralized Website [Introduction to hosting a decentralized website using ENS]/"}, "hash": "73dc238c1e6b3f1d91882f9c9be90a58e332d68c48f7dc96bd1c1b32a152b18f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Browser Support & Gateways\n\nIn the ideal world every browser supports decentralized websites out of the box.\nIf you are using [MetaMask](https://metamask.io) or [Brave Browser](https://brave.com) you can already access IPFS websites directly.\nOn non-conforming browsers you can use a gateway such as [eth.link](https://eth.link) or [eth.limo](https://eth.limo) to access your website.\nYou can test if your browser supports decentralized websites by visiting [ens.eth](https://ens.eth) or use a gateway via [ens.eth.link](https://ens.eth.link).", "mimetype": "text/plain", "start_char_idx": 2079, "end_char_idx": 2625, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fe491d36-fb97-497f-b6ae-08d36ca86f17": {"__data__": {"id_": "fe491d36-fb97-497f-b6ae-08d36ca86f17", "embedding": null, "metadata": {"file_path": "src/pages/ensip/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/ensip/index.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/ensip/index.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["included", "table", "proposals", "ensips", "current", "import", "contains", "their", "summary", "improvement"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ef8e6012999a7a6e32e082f29682eda36131faef", "node_type": "4", "metadata": {"file_path": "src/pages/ensip/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/ensip/index.mdx"}, "hash": "1f6f2bc8525cb87bb48ff88c6e6ec8a7d71b0d8894c9cf7d671950b01a9987d5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fcdd5275-a496-4d05-adb2-1f1c505e30ef", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "fe583c7cf4f8cdee1a0ed67a9dc11c46127c9e6cd3bee287193a4a067e1089c9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "import { Table } from '../../components/ui/Table'\nimport ensips from '../../data/generated/ensips.json' # ENS Improvement Proposals\n\nThis page contains a summary of all the ENS Improvement Proposals (ENSIPs) that have been proposed, and their current status.\nImprovement Proposals have included anything from new contract features, to text record standards, protocol features, and more. ## ENSIPs\n\n<Table\n  columns={['Title', 'Status']}\n  rows={ensips.map((ensip) => [ensip.title, ensip.status])}\n/> ## Propose an ENSIP\n\nFeel free to [open a pull request](https://github.com/ensdomains/ensips/pulls) on the `ensdomains/ensips` repository.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 103, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "56777a82-cf61-4fe4-9d48-722af7d6bb4e": {"__data__": {"id_": "56777a82-cf61-4fe4-9d48-722af7d6bb4e", "embedding": null, "metadata": {"file_path": "src/pages/faq.mdx", "file_name": "faq.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/faq.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/faq.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["asked", "ethereum", "frequently", "wallets", "supported", "about", "which", "support", "found", "dapps", "questions", "notable", "range", "service"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6d7e6431e5cddfd6a06ee7e9ab5822c1329b2b0e", "node_type": "4", "metadata": {"file_path": "src/pages/faq.mdx", "file_name": "faq.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/faq.mdx"}, "hash": "f3723df6a4c0a74c064fadaa47ec3753bebabca93286dd633144fc28034f07ee", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6b84e297-c149-4a87-8221-d4616d08efa4", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "fa13db1f58c1ef602e8653060a60ec0df843e9bd95b1e518c49a729bbd638e3a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: Frequently Asked Questions about the Ethereum Name Service\n--- # FAQ ## Which wallets and dApps support ENS?\n\nENS is supported by a wide range of wallets and dApps, some notable ones can be found on the [integrations page](https://ens.domains/).\nThis page is currently under construction however a link to add yourself will be put here soon. ## Can I hold my name with one address, and point it at the other?\n\nYes, you can hold your name with one address and point it at another.\nSimply visit the [ENS Manager App](https://ens.app/) and update the appropriate address record (by chain) for your name to point to the address you wish.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 79, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "054965fb-5679-4fc7-aca5-5d3f11c9c1ad": {"__data__": {"id_": "054965fb-5679-4fc7-aca5-5d3f11c9c1ad", "embedding": null, "metadata": {"file_path": "src/pages/faq.mdx", "file_name": "faq.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/faq.mdx", "header_path": "/FAQ/", "customer_id": 1, "source_url": "src/pages/faq.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["other", "registrar", "ownership", "whatever", "address", "advanced", "people", "create", "resolvers", "might", "subdomains", "change", "assign", "provide"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6d7e6431e5cddfd6a06ee7e9ab5822c1329b2b0e", "node_type": "4", "metadata": {"file_path": "src/pages/faq.mdx", "file_name": "faq.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/faq.mdx"}, "hash": "f3723df6a4c0a74c064fadaa47ec3753bebabca93286dd633144fc28034f07ee", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "020fcc30-f338-434d-b83b-c157ef407d15", "node_type": "1", "metadata": {"file_path": "src/pages/faq.mdx", "file_name": "faq.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/faq.mdx", "header_path": "/FAQ/"}, "hash": "1bbae918a18b1c9f1e22009eca80bad99669cbc5674582f067261c3ebb99fecb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "464b4b3d-c65d-49e2-91bd-2b1f9bd62caf", "node_type": "1", "metadata": {"header_path": "/FAQ/"}, "hash": "63cb385b5ae33ac91b4999d50ee2544ec264fc61a521f06d75f19e9c50b5c15a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Once I own a name, can I create my own subdomains?\n\nYes. You can create whatever subdomains you wish and assign ownership of them to other people if you desire. You can even set up your own registrar for your domain.\n\nSome resolvers might provide even more advanced features, read more [about Resolvers](/resolvers/quickstart). ## Can I change the address my name points to after I've bought it?\n\nYes, you can update the addresses and other resources pointed to by your name at any time.\n\nTo update your name checkout the [ENS Manager App](https://ens.app/).", "mimetype": "text/plain", "start_char_idx": 655, "end_char_idx": 985, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f4d7e9c2-1138-49c1-80e6-5c7df819fe30": {"__data__": {"id_": "f4d7e9c2-1138-49c1-80e6-5c7df819fe30", "embedding": null, "metadata": {"file_path": "src/pages/faq.mdx", "file_name": "faq.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/faq.mdx", "header_path": "/FAQ/", "customer_id": 1, "source_url": "src/pages/faq.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["overhead", "around", "fixed", "hashes", "identifier", "registration", "length", "passed", "registered", "between", "names", "contracts", "easily", "provide"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6d7e6431e5cddfd6a06ee7e9ab5822c1329b2b0e", "node_type": "4", "metadata": {"file_path": "src/pages/faq.mdx", "file_name": "faq.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/faq.mdx"}, "hash": "f3723df6a4c0a74c064fadaa47ec3753bebabca93286dd633144fc28034f07ee", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "464b4b3d-c65d-49e2-91bd-2b1f9bd62caf", "node_type": "1", "metadata": {"file_path": "src/pages/faq.mdx", "file_name": "faq.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/faq.mdx", "header_path": "/FAQ/"}, "hash": "88f5dbe60dea4c6dfda9b1cca497cb5428be6a966842b7cece9ca590a085574b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "488dfeba-e15f-4297-b5de-2ec0d687fd9a", "node_type": "1", "metadata": {"header_path": "/FAQ/ETH Registration/"}, "hash": "ad41570bb6dbad8cc967036454c32960fa152427a7bd3ee5619121c1dac3b4b2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## ETH Registration ### Why are names registered as hashes?\n\nHashes provide a fixed length identifier that can easily be passed around between contracts with fixed overhead and no issues passing around variable-length strings.\n\nRead more about [labelhash, namehash, and encodings](/resolution/names). ### What characters are supported?\n\nENS names are generally encoded using UTS-46.\nThis means there is partial support for Unicode characters, including emoji.\n\nHowever technically possible to register any name, names that are not valid UTS-46 will not be resolvable by most resolvers.\nTherefore it is generally recommended for apps that implement registration to limit the characters that can be registered to ensure a smooth experience.\n\nTo read more about supported characters [name normalization](/resolution/names).", "mimetype": "text/plain", "start_char_idx": 1219, "end_char_idx": 1238, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ff65a235-2ddb-48f0-a3e7-241505cfdb27": {"__data__": {"id_": "ff65a235-2ddb-48f0-a3e7-241505cfdb27", "embedding": null, "metadata": {"file_path": "src/pages/faq.mdx", "file_name": "faq.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/faq.mdx", "header_path": "/FAQ/ETH Registration/", "customer_id": 1, "source_url": "src/pages/faq.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["higher", "reflect", "registration", "pricing", "these", "small", "costs", "following", "character", "number", "register", "names"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6d7e6431e5cddfd6a06ee7e9ab5822c1329b2b0e", "node_type": "4", "metadata": {"file_path": "src/pages/faq.mdx", "file_name": "faq.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/faq.mdx"}, "hash": "f3723df6a4c0a74c064fadaa47ec3753bebabca93286dd633144fc28034f07ee", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "337bbb40-2283-441a-a890-c767fa73b631", "node_type": "1", "metadata": {"file_path": "src/pages/faq.mdx", "file_name": "faq.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/faq.mdx", "header_path": "/FAQ/ETH Registration/"}, "hash": "1a5e8f164c5cd6ef1c1dc0842536c42e67e718e0cd1fafcf5b86229eba7dc432", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fe2a9f02-5105-44ed-a47a-a29d2a3c7ab4", "node_type": "1", "metadata": {"header_path": "/FAQ/ETH Registration/"}, "hash": "4a840f3d2fcb4f9d35e988ecb3ab5f9933e993ca4bf554d5fd94419109406df6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### What does it cost to register a .eth domain?\n\nCurrently, registration costs are set at the following prices:\n\n- 5+ character .eth names: $5 in ETH per year.\n- 4 character .eth names: $160 in ETH per year.\n- 3 character .eth names: $640 in ETH per year.\n\n3 and 4 character names have higher pricing to reflect the small number of these names available.\n\nTo read more about the pricing structure of .eth names [read more about pricing](/registry/eth) ### How long can I register a name for?\n\nYou can register a name for as long as you would like.\nThere is no maximum registration duration.", "mimetype": "text/plain", "start_char_idx": 2043, "end_char_idx": 2495, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "46a88e3a-3e44-4ebd-aebd-dce702abb0dd": {"__data__": {"id_": "46a88e3a-3e44-4ebd-aebd-dce702abb0dd", "embedding": null, "metadata": {"file_path": "src/pages/faq.mdx", "file_name": "faq.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/faq.mdx", "header_path": "/FAQ/ETH Registration/", "customer_id": 1, "source_url": "src/pages/faq.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["renew", "means", "luckily", "expiration", "grace", "original", "expires", "public", "forget", "happens", "available", "released", "process"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6d7e6431e5cddfd6a06ee7e9ab5822c1329b2b0e", "node_type": "4", "metadata": {"file_path": "src/pages/faq.mdx", "file_name": "faq.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/faq.mdx"}, "hash": "f3723df6a4c0a74c064fadaa47ec3753bebabca93286dd633144fc28034f07ee", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fe2a9f02-5105-44ed-a47a-a29d2a3c7ab4", "node_type": "1", "metadata": {"file_path": "src/pages/faq.mdx", "file_name": "faq.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/faq.mdx", "header_path": "/FAQ/ETH Registration/"}, "hash": "aad46028154ad0c153e243a42b40f55bd4ef05717ea3369cce196169c482b7ed", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d582ea00-2bee-4fbb-854c-1a125ae13fee", "node_type": "1", "metadata": {"header_path": "/FAQ/ETH Registration/"}, "hash": "307d57161d64bf971c41b3510930c66c20255a766d0742d30e5fd7d5b04766a5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### What happens if I forget to renew my name?\n\nIf you forget to renew your name, it will be released back to the public pool of available names.\nLuckily the expiration process has a 90 day grace period.\nThis means that once the name expires the original owner has 90 days to renew the name before it is released.\nAfter the grace period, the name is released for registration by anyone with a temporary premium which decreases over a 21 days period.\nThe released name continues to resolve your ETH address until the new owner overwrites it.", "mimetype": "text/plain", "start_char_idx": 2637, "end_char_idx": 3177, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d582ea00-2bee-4fbb-854c-1a125ae13fee": {"__data__": {"id_": "d582ea00-2bee-4fbb-854c-1a125ae13fee", "embedding": null, "metadata": {"file_path": "src/pages/faq.mdx", "file_name": "faq.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/faq.mdx", "header_path": "/FAQ/ETH Registration/", "customer_id": 1, "source_url": "src/pages/faq.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ensure", "taken", "registrar", "occur", "private", "revoked", "access", "loses", "potential", "their", "cannot", "owner", "built", "could"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6d7e6431e5cddfd6a06ee7e9ab5822c1329b2b0e", "node_type": "4", "metadata": {"file_path": "src/pages/faq.mdx", "file_name": "faq.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/faq.mdx"}, "hash": "f3723df6a4c0a74c064fadaa47ec3753bebabca93286dd633144fc28034f07ee", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "46a88e3a-3e44-4ebd-aebd-dce702abb0dd", "node_type": "1", "metadata": {"file_path": "src/pages/faq.mdx", "file_name": "faq.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/faq.mdx", "header_path": "/FAQ/ETH Registration/"}, "hash": "dcf82ad9fc85bc747b09b940d9c2385dcf669e0108a97fc53e88be59f7f17748", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0673cf3e-be79-40fb-8c9e-56e6168d78cc", "node_type": "1", "metadata": {"header_path": "/FAQ/"}, "hash": "f9d0e10614d7cd7f1959c0bec9bf19f30b61a2bf0ebd36129fb4ceeea7925bbf", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### In what way could I lose access to my name?\n\nThe .eth registrar is built to ensure once issued, a name cannot be revoked or taken away from its owner.\nPotential loss can occur if the owner loses access to their private key, or if the owner forgets to renew their name. ## Root Registry ### Who owns the ENS rootnode? What powers does it grant them?\n\nThe ENS rootnode is currently owned by the ENS DAO. It used to be owned by the ENS Multi-sig, a group of keyholders from different parts of the ecosystem, however as of [EP4.10](/dao/proposals/4.10) the ownership has been transferred to the ENS DAO.\n\nOwnership of the rootnode grants the ability to do the following:\n\n- Control allocation and replacement of TLDs other than .eth - this is required to implement DNSSEC integration.\n- Enable and disable controllers for the .eth registrar, which affect registration and renewal policies for .eth names.\n- Update the pricing for .eth names.\n- Receive and manage registration revenue.", "mimetype": "text/plain", "start_char_idx": 3179, "end_char_idx": 3451, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "91713ecd-aefa-42bc-95c6-bd04ea372d96": {"__data__": {"id_": "91713ecd-aefa-42bc-95c6-bd04ea372d96", "embedding": null, "metadata": {"file_path": "src/pages/faq.mdx", "file_name": "faq.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/faq.mdx", "header_path": "/FAQ/Root Registry/", "customer_id": 1, "source_url": "src/pages/faq.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["mainnet", "allows", "consider", "priority", "restricted", "control", "within", "pollute", "default", "their", "users", "register", "existing", "through"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6d7e6431e5cddfd6a06ee7e9ab5822c1329b2b0e", "node_type": "4", "metadata": {"file_path": "src/pages/faq.mdx", "file_name": "faq.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/faq.mdx"}, "hash": "f3723df6a4c0a74c064fadaa47ec3753bebabca93286dd633144fc28034f07ee", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1acd7177-591a-4012-9efd-5fada045a6fb", "node_type": "1", "metadata": {"file_path": "src/pages/faq.mdx", "file_name": "faq.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/faq.mdx", "header_path": "/FAQ/Root Registry/"}, "hash": "b70e6c801d3b7e1d19b5e73a4954ba9496cc3441f15635ee0c84d73f668d76fe", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "954ac9e1-bc4d-490d-ac3d-4b50e793ad83", "node_type": "1", "metadata": {"header_path": "/FAQ/"}, "hash": "38161c20495f11081d4e3f7f960e65ca523951afc6a58a6d00b3f31d02ffd89d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Can I register a TLD of my own within ENS?\n\nYes and No, We consider ENS to be part of the 'global namespace' in co-existence with DNS, and it is our priority to not pollute the namespace.\nENS-specific TLDs are restricted to only '.eth' on Mainnet Ethereum, or .eth and .test on testnets.\n\nBy default ENS allows users to [import their DNS name](/learn/dns) through the use of the [DNS Registrar](/registry/dns).\nExisting DNS TLDs can [reach out to us](mailto:info@ens.domains) to take control of their TLD.", "mimetype": "text/plain", "start_char_idx": 4167, "end_char_idx": 4676, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "954ac9e1-bc4d-490d-ac3d-4b50e793ad83": {"__data__": {"id_": "954ac9e1-bc4d-490d-ac3d-4b50e793ad83", "embedding": null, "metadata": {"file_path": "src/pages/faq.mdx", "file_name": "faq.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/faq.mdx", "header_path": "/FAQ/", "customer_id": 1, "source_url": "src/pages/faq.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["other", "usefulness", "extends", "addresses", "namecoin", "services", "naming", "blockchain", "differences", "trustworthy", "resolution", "between", "complements", "distributed", "resources"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6d7e6431e5cddfd6a06ee7e9ab5822c1329b2b0e", "node_type": "4", "metadata": {"file_path": "src/pages/faq.mdx", "file_name": "faq.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/faq.mdx"}, "hash": "f3723df6a4c0a74c064fadaa47ec3753bebabca93286dd633144fc28034f07ee", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "91713ecd-aefa-42bc-95c6-bd04ea372d96", "node_type": "1", "metadata": {"file_path": "src/pages/faq.mdx", "file_name": "faq.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/faq.mdx", "header_path": "/FAQ/Root Registry/"}, "hash": "b3249b26d37f5e5b61aeaf769575af02df177d11a0443c40201f44f1e7b161dc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8fa912fe-4308-4edd-8a47-025e98ed0846", "node_type": "1", "metadata": {"header_path": "/FAQ/"}, "hash": "6ef00d3a2ff44655cf19b63d730017b671bb5bf83f4d8fb283be7e977b34a6e8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## What are the differences between ENS and other naming services such as Namecoin or Handshake?\n\nENS complements and extends the usefulness of DNS with decentralised, trustworthy name resolution for web3 resources such as blockchain addresses and distributed content, while Namecoin and Handshake are efforts to replace all or part of DNS with a blockchain-based alternative. ## Governance Token ### Can I recover tokens accidentally sent to the wrong address?\n\nThe answer depends on the address the token was sent to. If you accidentally sent the token to the token.ensdao.eth address (0xC18360217D8F7Ab5e7c516566761Ea12Ce7F9D72) or the wallet.ensdao.eth address (0xFe89cc7aBB2C4183683ab71653C4cdc9B02D44b7) then the tokens might be recoverable. Contact the [Meta-governance working group](/dao/stewards/) at the [ENS Forum](https://discuss.ens.domains) and explain the situation. Tokens can only be sent back to the address they were sent from, so if it was sent from an exchange, contact your exchange support to make sure the address can receive tokens.\n\nIf the tokens were sent to the null address (0x000..) or an address with a typo, then the tokens are unrecoverable and there's nothing that anyone can do. If the tokens were sent to an exchange or a third party, then contact that third party for help.", "mimetype": "text/plain", "start_char_idx": 4678, "end_char_idx": 5054, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1d3c9772-f5fb-427f-b7ec-eead6aced26b": {"__data__": {"id_": "1d3c9772-f5fb-427f-b7ec-eead6aced26b", "embedding": null, "metadata": {"file_path": "src/pages/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/index.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/index.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ethereum", "mainnet", "taken", "offchain", "homepage", "layer", "starts", "using", "resolution", "import", "landing", "leveraging"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4f2da080a588c5ea1d8bfe0c9d68d53a356b91fd", "node_type": "4", "metadata": {"file_path": "src/pages/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/index.mdx"}, "hash": "d02041a64b2338cf498564aaa715150dd03fe0cca7be1061ad4e4d135c8dde80", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\nlayout: landing\ncontent:\n  width: 100%\n  horizontalPadding: 0\n  verticalPadding: 0\n---\n\nimport { HomePage } from '../components/HomePage'\n\n<HomePage /> ---\ndescription: Using CCIP Read to take ENS resolution cross-chain, off-chain, and more.\n--- # Layer 2 & Offchain Resolution\n\nAll ENS resolution starts on Ethereum Mainnet (or testnet).\nHowever, by leveraging [CCIP Read](/resolvers/ccip-read) and [Wildcard Resolution](/ensip/10), name resolution can be taken cross-chain, off-chain, and more.\nThis allows for a lot of flexibility in how you can use your ENS and for storage of your ENS records on your favourite Layer 2, or even off-chain.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 155, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "89a00069-0d2d-42c6-8163-567115cfefd2": {"__data__": {"id_": "89a00069-0d2d-42c6-8163-567115cfefd2", "embedding": null, "metadata": {"file_path": "src/pages/learn/ccip-read.mdx", "file_name": "ccip-read.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/learn/ccip-read.mdx", "header_path": "/Layer 2 & Offchain Resolution/", "customer_id": 1, "source_url": "src/pages/learn/ccip-read.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["telling", "responsible", "layer", "resolution", "first", "registry", "associated", "where", "client", "clients", "resolver", "register", "fetch"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "11c7e9d8f282fef7475458c482dec034b4df3874", "node_type": "4", "metadata": {"file_path": "src/pages/learn/ccip-read.mdx", "file_name": "ccip-read.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/learn/ccip-read.mdx"}, "hash": "11888939c857b599d7ecad6f83ec0d3944d3a0575152007be6d3faa6daaec72d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ca76cb62-ac23-45c3-8e6d-2cab9ef94db3", "node_type": "1", "metadata": {"file_path": "src/pages/learn/ccip-read.mdx", "file_name": "ccip-read.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/learn/ccip-read.mdx", "header_path": "/"}, "hash": "a7ff501291716e29c550190377a36299e6ce97a306ffc54da5e4d833a93d86c5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e740b92b-85cc-40ba-be92-7fb64b9dbede", "node_type": "1", "metadata": {"header_path": "/Layer 2 & Offchain Resolution/ENS on Layer 2/"}, "hash": "9872514d3c2d3e57b6f04d76ca4093972f168c4da7cebd97c746452a383952b9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## ENS on Layer 2\n\nIn the resolution process, clients first fetch the resolver associated with the name in the ENS registry on L1. That resolver is responsible for telling the client where to find the data associated with the name such as the addresses, text records, etc.\n\nIf you want to register and resolve (sub)names from L2, you would write a resolver smart contract that defers resolution to the L2 and ideally verifies that data against the L2's storage proofs posted to L1. This process can be done with the [Unruggable Gateway](https://gateway-docs.unruggable.com/).\n\nAn example implementation of Layer 2 resolving is:", "mimetype": "text/plain", "start_char_idx": 494, "end_char_idx": 1121, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e740b92b-85cc-40ba-be92-7fb64b9dbede": {"__data__": {"id_": "e740b92b-85cc-40ba-be92-7fb64b9dbede", "embedding": null, "metadata": {"file_path": "src/pages/learn/ccip-read.mdx", "file_name": "ccip-read.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/learn/ccip-read.mdx", "header_path": "/Layer 2 & Offchain Resolution/ENS on Layer 2/", "customer_id": 1, "source_url": "src/pages/learn/ccip-read.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["stored", "linea", "experience", "security", "verified", "subnames", "first", "subname", "clave", "enhancing", "focused", "names", "build", "through", "function"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "11c7e9d8f282fef7475458c482dec034b4df3874", "node_type": "4", "metadata": {"file_path": "src/pages/learn/ccip-read.mdx", "file_name": "ccip-read.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/learn/ccip-read.mdx"}, "hash": "11888939c857b599d7ecad6f83ec0d3944d3a0575152007be6d3faa6daaec72d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "89a00069-0d2d-42c6-8163-567115cfefd2", "node_type": "1", "metadata": {"file_path": "src/pages/learn/ccip-read.mdx", "file_name": "ccip-read.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/learn/ccip-read.mdx", "header_path": "/Layer 2 & Offchain Resolution/"}, "hash": "dc0fb189a37a37e6c8293e40f59e7f8cdfc11babf03cb6b3eba103eb79bbeddd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b41e2f97-8c88-4549-b207-7e41d7f6b1b9", "node_type": "1", "metadata": {"header_path": "/Layer 2 & Offchain Resolution/ENS on Layer 2/"}, "hash": "ddaa61dd7d9b1fb85a34911044f5f9fde1f00aa9cea4a8a01717f5e316e8dff3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### linea.eth\n\nLinea was the first L2 team to build a trust-minimized ENS subname system. Names are stored on Linea, verified with [storage proofs](https://docs.linea.build/developers/tooling/cross-chain/ccip-read-gateway) on L1, and function as ENS subnames such as [greg.linea.eth](https://app.ens.domains/greg.linea.eth). You can try it out [here](https://names.linea.build/). ### clv.eth\n\nClave is focused on enhancing user experience and security through a mobile wallet that leverages account abstraction and device hardware. Clave accounts come with usernames that are now stored onchain in ZKsync Era, verified with [storage proofs](https://github.com/getclave/zksync-storage-proofs) in L1, and issued as ENS subnames such as [ulas.clv.eth](https://enstate.rs/n/ulas.clv.eth). You can read more about the implementation [here](https://blog.getclave.io/introducing-onchain-clave-usernames-with-ens).", "mimetype": "text/plain", "start_char_idx": 1123, "end_char_idx": 1502, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c6e24368-4347-4e90-a819-d0dd8c223fec": {"__data__": {"id_": "c6e24368-4347-4e90-a819-d0dd8c223fec", "embedding": null, "metadata": {"file_path": "src/pages/learn/ccip-read.mdx", "file_name": "ccip-read.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/learn/ccip-read.mdx", "header_path": "/Layer 2 & Offchain Resolution/", "customer_id": 1, "source_url": "src/pages/learn/ccip-read.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["primary", "offchain", "layer", "resolution", "setting", "names", "active", "updated", "becomes", "information", "under", "moving", "process"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "11c7e9d8f282fef7475458c482dec034b4df3874", "node_type": "4", "metadata": {"file_path": "src/pages/learn/ccip-read.mdx", "file_name": "ccip-read.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/learn/ccip-read.mdx"}, "hash": "11888939c857b599d7ecad6f83ec0d3944d3a0575152007be6d3faa6daaec72d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b41e2f97-8c88-4549-b207-7e41d7f6b1b9", "node_type": "1", "metadata": {"file_path": "src/pages/learn/ccip-read.mdx", "file_name": "ccip-read.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/learn/ccip-read.mdx", "header_path": "/Layer 2 & Offchain Resolution/ENS on Layer 2/"}, "hash": "0df77be045493248bebbc32906e9a2afdc1b9854d97537735e2536494accfdf8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3b1099b0-ba08-4a3c-b8ab-98dc72a5bb9d", "node_type": "1", "metadata": {"header_path": "/Layer 2 & Offchain Resolution/"}, "hash": "23bab5b3eb3d9e7d6df2b102ca77eab5e5a063222f50f6d75c84a8a87afba726", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Primary Names on Layer 2\n\nThe process of setting primary names from L2 is under active development. This doc will be updated as more information becomes available. ## Offchain Resolution\n\nMoving resolution processes off-chain offers numerous advantages, including efficiency gains and reduced congestion on the main blockchain; however, it also introduces trade-offs in terms of trust, as it necessitates reliance on external systems.\nDepending on the implementation, names could be stored in a database or be ephemeral.\nAdvantages of offchain name storage include gaslessness and instant updates.\nIf this sounds appealing consider [writing an Offchain Resolver](/resolvers/ccip-read).\n\nPopular implementations of offchain names include but are not limited to:", "mimetype": "text/plain", "start_char_idx": 2032, "end_char_idx": 2198, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a9bb3361-65ee-4afb-82eb-c1ed17ed3620": {"__data__": {"id_": "a9bb3361-65ee-4afb-82eb-c1ed17ed3620", "embedding": null, "metadata": {"file_path": "src/pages/learn/ccip-read.mdx", "file_name": "ccip-read.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/learn/ccip-read.mdx", "header_path": "/Layer 2 & Offchain Resolution/Offchain Resolution/", "customer_id": 1, "source_url": "src/pages/learn/ccip-read.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["coinbase", "stored", "wallets", "subnames", "mobile", "these", "issuing", "registered", "their", "wallet", "largest", "names"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "11c7e9d8f282fef7475458c482dec034b4df3874", "node_type": "4", "metadata": {"file_path": "src/pages/learn/ccip-read.mdx", "file_name": "ccip-read.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/learn/ccip-read.mdx"}, "hash": "11888939c857b599d7ecad6f83ec0d3944d3a0575152007be6d3faa6daaec72d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3b1099b0-ba08-4a3c-b8ab-98dc72a5bb9d", "node_type": "1", "metadata": {"file_path": "src/pages/learn/ccip-read.mdx", "file_name": "ccip-read.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/learn/ccip-read.mdx", "header_path": "/Layer 2 & Offchain Resolution/"}, "hash": "a82975ddb435691a2f91681def3e3f1e434a869791e4b8f5eb976cb3058475e8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "402c0a26-9dd7-4420-b5c7-42ead0bb0844", "node_type": "1", "metadata": {"header_path": "/Layer 2 & Offchain Resolution/Offchain Resolution/"}, "hash": "38f0a67b3a460a83db6f4f12ade37d6a97a21056a84166defd3cbc65ea15f479", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### cb.id\n\nCoinbase Wallet is one of the largest mobile wallets issuing free ENS subnames to their users.\nThese names are stored off-chain on coinbase servers, and can be registered from the Coinbase Wallet App or Browser Extension.\nAn example of a cb.id is [lucemans.cb.id](https://enstate.rs/n/lucemans.cb.id). ### uni.eth\n\nUniswap Wallet is another popular mobile wallet that issues free ENS subnames to their users.\nYou can read more about the Uniswap Wallet ENS integration [here](https://blog.uniswap.org/introducing-uni-eth-your-unique-web3-username).\nAn example of a uni.eth is [lucemans.uni.eth](https://enstate.rs/n/lucemans.uni.eth).", "mimetype": "text/plain", "start_char_idx": 2798, "end_char_idx": 3110, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "404a6474-69bd-44ab-9646-63c593e6be57": {"__data__": {"id_": "404a6474-69bd-44ab-9646-63c593e6be57", "embedding": null, "metadata": {"file_path": "src/pages/learn/ccip-read.mdx", "file_name": "ccip-read.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/learn/ccip-read.mdx", "header_path": "/Layer 2 & Offchain Resolution/Offchain Resolution/", "customer_id": 1, "source_url": "src/pages/learn/ccip-read.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["readily", "ethereum", "means", "retrieve", "ecosystem", "common", "officially", "accessible", "starts", "contains", "lookup", "favourite", "information", "through", "maintained"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "11c7e9d8f282fef7475458c482dec034b4df3874", "node_type": "4", "metadata": {"file_path": "src/pages/learn/ccip-read.mdx", "file_name": "ccip-read.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/learn/ccip-read.mdx"}, "hash": "11888939c857b599d7ecad6f83ec0d3944d3a0575152007be6d3faa6daaec72d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "402c0a26-9dd7-4420-b5c7-42ead0bb0844", "node_type": "1", "metadata": {"file_path": "src/pages/learn/ccip-read.mdx", "file_name": "ccip-read.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/learn/ccip-read.mdx", "header_path": "/Layer 2 & Offchain Resolution/Offchain Resolution/"}, "hash": "5f9600effb16c16b296edec562d17df0817c48487ae645043036aebf0dbf0887", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### lens.xyz\n\nThe Lens Ecosystem is also readily accessible through the officially maintained `lens.xyz` gateway.\nThis means that you can lookup your favourite lens name such as [lucemans.lens.xyz](https://enstate.rs/n/lucemans.lens.xyz) and retrieve the information seamlessly. ---\ndescription: ENS is multichain, but it all starts with Ethereum Mainnet. This page contains common addresses for ENS contracts.\n---\n\nimport { ContractDeployments } from '../../components/ContractDeployments'\nimport { EmbedLink } from '../../components/EmbedLink'\nimport { Card } from '../../components/ui/Card'", "mimetype": "text/plain", "start_char_idx": 3445, "end_char_idx": 3723, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "11fc1079-3dd2-4ef0-a191-d35de4c9bea9": {"__data__": {"id_": "11fc1079-3dd2-4ef0-a191-d35de4c9bea9", "embedding": null, "metadata": {"file_path": "src/pages/learn/deployments.mdx", "file_name": "deployments.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/learn/deployments.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/learn/deployments.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["multichain", "developers", "libraries", "would", "query", "deployments", "handle", "being", "address", "contains", "interact", "relevant", "information", "contract", "addition"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8b6cac76e24de27aa7e6bc8cbef3c13529b17454", "node_type": "4", "metadata": {"file_path": "src/pages/learn/deployments.mdx", "file_name": "deployments.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/learn/deployments.mdx"}, "hash": "6080a82b77856f5c48d022892aa4591a822f0f40b5f657064ece2df17d5aed7d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "31d06857-9d90-419c-8e9c-5764c6d78550", "node_type": "1", "metadata": {"file_path": "src/pages/learn/deployments.mdx", "file_name": "deployments.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/learn/deployments.mdx", "header_path": "/"}, "hash": "64535f1a7056af6ab4e9b14c78a0dd33ba816ef2925bb27f6852a55defad99a7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "05e785c0-ab29-4bcb-80fb-c06be3ee9ef8", "node_type": "1", "metadata": {"header_path": "/Deployments/"}, "hash": "dcdf5b003a94d349cb70b34adcbbfc706d1efed6df750d51e1c2b9a59afc9169", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Deployments\n\n:::note\nThis page contains information that is only relevant to developers who would\nlike to interact with the contract manually. Most libraries will handle this\nfor you.\n:::\n\nENS is multichain (read more [here](/web/multichain)) and can be used in any application.\nIn addition to being able to query many address formats and record types, data can be stored [practically anywhere](/learn/ccip-read).\nHowever, resolution needs to start somewhere, so the entrypoint for resolution is Ethereum Mainnet, alongside the most popular testnets.\n\n<Card className=\"flex justify-center gap-4\">\n  <span>Ethereum Mainnet</span>\n  <div>\u2192</div>\n  <div className=\"flex flex-col\">\n    <span>Base</span>\n    <span>Arbitrum</span>\n    <span>Offchain</span>\n    <span>...</span>\n  </div>\n</Card>", "mimetype": "text/plain", "start_char_idx": 316, "end_char_idx": 1107, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "05e785c0-ab29-4bcb-80fb-c06be3ee9ef8": {"__data__": {"id_": "05e785c0-ab29-4bcb-80fb-c06be3ee9ef8", "embedding": null, "metadata": {"file_path": "src/pages/learn/deployments.mdx", "file_name": "deployments.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/learn/deployments.mdx", "header_path": "/Deployments/", "customer_id": 1, "source_url": "src/pages/learn/deployments.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["latest", "protocol", "mainnet", "listed", "building", "allows", "sepolia", "deployments", "tools", "holesky", "wagmi", "about", "below", "might"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8b6cac76e24de27aa7e6bc8cbef3c13529b17454", "node_type": "4", "metadata": {"file_path": "src/pages/learn/deployments.mdx", "file_name": "deployments.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/learn/deployments.mdx"}, "hash": "6080a82b77856f5c48d022892aa4591a822f0f40b5f657064ece2df17d5aed7d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "11fc1079-3dd2-4ef0-a191-d35de4c9bea9", "node_type": "1", "metadata": {"file_path": "src/pages/learn/deployments.mdx", "file_name": "deployments.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/learn/deployments.mdx", "header_path": "/"}, "hash": "bf857393ca6c3ebdebf692bdc486c395995ad5bd33a849b54cf3186f76fc2fef", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0e02dbbd-6167-40b7-ba94-cc14d8c80afa", "node_type": "1", "metadata": {"header_path": "/Deployments/Deployments/"}, "hash": "f124c469b396a959ffde892c00a00f61e5aa1cdedfeea31c90584104b99832e5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Deployments\n\nListed below you will find a list of latest deployments of registries, resolvers, and more. ### Mainnet\n\n<ContractDeployments chain=\"mainnet\" /> ### Sepolia\n\n<ContractDeployments chain=\"sepolia\" /> ### Holesky\n\n<ContractDeployments chain=\"holesky\" /> ## But what about multichain?\n\nThe ENS Protocol can be used on/for any chain! If you are building a dApp and want to use ENS you might have to add a [Mainnet RPC to your Wagmi config](/web/libraries).\nThis allows tools like wagmi to access mainnet, and load ENS information!\n\n<EmbedLink\n  title=\"Layer 2 & Offchain\"\n  description=\"Learn more about ENS on Layer 2 and Offchain solutions\"\n  href=\"/learn/ccip-read\"\n/>", "mimetype": "text/plain", "start_char_idx": 1109, "end_char_idx": 1216, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8321f722-120d-4137-a070-d015f646daac": {"__data__": {"id_": "8321f722-120d-4137-a070-d015f646daac", "embedding": null, "metadata": {"file_path": "src/pages/learn/dns.mdx", "file_name": "dns.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/learn/dns.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/learn/dns.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ethereum", "dnsgrid", "dnsusageexamples", "naming", "allowing", "system", "supports", "import", "embedlink", "users", "names", "service"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a1f0d505f567d310aa53ab01a415389cefcf1ec0", "node_type": "4", "metadata": {"file_path": "src/pages/learn/dns.mdx", "file_name": "dns.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/learn/dns.mdx"}, "hash": "2376ddae742fdb8439ff2730fb18a230ff31710e789c5d218c8d5fee7f12842c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "edf422f1-52ed-40ba-ad13-8cc941307c88", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "8e101e62bbfdf0fc1bd831ed9296314d22b0cc029a1a329325ea08a2f43b46d7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "import { DNSGrid } from '../../components/DNSGrid'\nimport { DNSUsageExamples } from '../../components/DNSUsageExamples'\nimport { EmbedLink } from '../../components/EmbedLink' # DNS on ENS [ENS supports DNS names, allowing users to import DNS names into ENS.]\n\nThe Ethereum Name Service is so much more than just `.eth` names. It is a general-purpose naming system that can be used for any kind of name. This includes DNS names.\nDNS functionality was originally introduced in [ENSIP-6](/ensip/6). ## Importing a DNS name\n\nThere are currently two ways of importing a DNS name into ENS. Both methods require you enable DNSSEC on your domain, and setup a TXT record.\nThis record is then verified using smart-contracts on the Ethereum blockchain.\n\nTo import a name, simply visit the [ENS Manager](https://ens.app), type in your name, and click \"Import DNS\". You will walked through setting up your DNS records.\nAdditionally you can read more about the records and specifications here:\n\n<EmbedLink\n  title=\"Importing a DNS name Gaslessly\"\n  href=\"/registry/dns#gasless-import\"\n/>", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 174, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "04e492ba-5ec4-459c-ae43-f514616bb325": {"__data__": {"id_": "04e492ba-5ec4-459c-ae43-f514616bb325", "embedding": null, "metadata": {"file_path": "src/pages/learn/dns.mdx", "file_name": "dns.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/learn/dns.mdx", "header_path": "/DNS on ENS [ENS supports DNS names, allowing users to import DNS names into ENS.]/", "customer_id": 1, "source_url": "src/pages/learn/dns.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["means", "leverage", "extend", "functionality", "already", "widely", "should", "resolution", "users", "existing", "names", "benefits"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a1f0d505f567d310aa53ab01a415389cefcf1ec0", "node_type": "4", "metadata": {"file_path": "src/pages/learn/dns.mdx", "file_name": "dns.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/learn/dns.mdx"}, "hash": "2376ddae742fdb8439ff2730fb18a230ff31710e789c5d218c8d5fee7f12842c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ad9ec530-6e71-40b0-98d7-7b6c97d15a68", "node_type": "1", "metadata": {"file_path": "src/pages/learn/dns.mdx", "file_name": "dns.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/learn/dns.mdx", "header_path": "/DNS on ENS [ENS supports DNS names, allowing users to import DNS names into ENS.]/"}, "hash": "866ec55fa8cf957d9fa85bca45ad4079af609139e17415b35f8a69e649a28d38", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ef12953f-e4bb-4bf0-bd80-4968cac14664", "node_type": "1", "metadata": {"header_path": "/DNS on ENS [ENS supports DNS names, allowing users to import DNS names into ENS.]/"}, "hash": "951aacbedbf0fffce833e01d151e6a19d4e4cf8d61e1f15b91f1d2fd482efe8d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Why DNS on ENS?\n\nENS aims to extend the existing functionality of the DNS system. This also means that existing DNS names (such as `.com`, `.org`, or `.xyz`) should be able to leverage the benefits of the ENS resolution process.\n\n<DNSGrid /> ## DNS Names in the wild\n\nDNS names are widely used and many users may already have one without even realizing it. Some major platforms that issue subdomains of their DNS names include:\n\n<DNSUsageExamples /> ## Top-Level Domains\n\nIn addition to allowing any DNSSEC enabled name to be imported, ENS also allows existing DNS TLDs to take control of their smart-contract resolution process.\nResulting in even more seamless integration with the DNS system.\n\nA list of all supported TLDs can be found [here](/dns/tlds)", "mimetype": "text/plain", "start_char_idx": 1077, "end_char_idx": 1321, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1c2dad3d-55cf-41e7-89f0-29523b35a64b": {"__data__": {"id_": "1c2dad3d-55cf-41e7-89f0-29523b35a64b", "embedding": null, "metadata": {"file_path": "src/pages/learn/protocol.mdx", "file_name": "protocol.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/learn/protocol.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/learn/protocol.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ethereum", "dnsgrid", "protocol", "enables", "naming", "learn", "about", "decentralized", "import", "embedlink", "ensprofile", "service"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6a1aabb923cba74a491fbdfa4c1baa346145c68f", "node_type": "4", "metadata": {"file_path": "src/pages/learn/protocol.mdx", "file_name": "protocol.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/learn/protocol.mdx"}, "hash": "d95af70bd96e739015a86238cf3083679673aabe66d27fe65681911442ca7cfe", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "64c1d314-3202-4ca2-b30e-1de24c33b806", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "5a51425cfe342ebee4c15931e7f1c90a715871d6ee64d3795a831a4c530196b8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: Learn about the Ethereum Name Service (ENS) protocol and how it enables decentralized naming on the Ethereum blockchain.\n---\n\nimport { DNSGrid } from '../../components/DNSGrid'\nimport { EmbedLink } from '../../components/EmbedLink'\nimport { EnsProfile } from '../../components/EnsProfile'\nimport { Card } from '../../components/ui/Card' # What is the Ethereum Name Service?\n\nThe Ethereum Name Service (ENS) is a distributed, open, and extensible naming system based on the Ethereum blockchain.\n\n<Card className=\"flex flex-col items-center justify-center gap-2 sm:flex-row\">\n  <EnsProfile name=\"nick.eth\" />\n  <EnsProfile name=\"jefflau.eth\" />\n</Card>\n\nENS maps human-readable names like 'alice.eth' to machine-readable identifiers such as Ethereum addresses, other cryptocurrency addresses, content hashes, metadata, and more.\nENS also supports 'reverse resolution', making it possible to associate metadata such as primary names or interface descriptions with Ethereum addresses.\n\nTop-Level Domains (TLDs), like `.eth` and `.test`, are owned by smart contracts called [registrars](/registry/eth), which specify rules governing the allocation of their names.\nEnabling seamless interoperability with the DNS (Domain Name System).", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 353, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d696c437-1b5c-4cec-b9e6-8a9da6459a7e": {"__data__": {"id_": "d696c437-1b5c-4cec-b9e6-8a9da6459a7e", "embedding": null, "metadata": {"file_path": "src/pages/learn/protocol.mdx", "file_name": "protocol.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/learn/protocol.mdx", "header_path": "/What is the Ethereum Name Service?/", "customer_id": 1, "source_url": "src/pages/learn/protocol.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["secured", "ethereum", "tokens", "allows", "registrar", "ownership", "registration", "decentralized", "trustless", "issued", "similar", "names", "through"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6a1aabb923cba74a491fbdfa4c1baa346145c68f", "node_type": "4", "metadata": {"file_path": "src/pages/learn/protocol.mdx", "file_name": "protocol.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/learn/protocol.mdx"}, "hash": "d95af70bd96e739015a86238cf3083679673aabe66d27fe65681911442ca7cfe", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "64c1d314-3202-4ca2-b30e-1de24c33b806", "node_type": "1", "metadata": {"file_path": "src/pages/learn/protocol.mdx", "file_name": "protocol.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/learn/protocol.mdx", "header_path": "/"}, "hash": "012bcf2d259555b6311fc689976d2d49e497b14efc61a7ea0d6b33448730997d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "82025441-2080-4f28-9266-ed544c0864f0", "node_type": "1", "metadata": {"header_path": "/What is the Ethereum Name Service?/"}, "hash": "dae5f89189e015f8aaac0464148818ad214d92ae809c9ab72a44892b6059f99e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## ETH Registrar\n\nThe [ETH Registrar](/registry/eth) is the registrar for the `.eth` TLD, it allows for trustless decentralized names to be issued as tokens on the Ethereum Blockchain.\nRegistration is done through smart-contracts, and name ownership is secured by the Ethereum blockchain. ## DNS + ENS\n\nENS has similar goals to DNS, the existing Internet's Domain Name Service, and aims to extend its capability.\nENS also supports importing DNS names through the use of DNSSEC.\nAllowing you to take your `.com`, `.xyz`, or `.art` (and more) into the ENS ecosystem. Read more about DNSSEC names [on this page](/learn/dns).\n\n<DNSGrid />", "mimetype": "text/plain", "start_char_idx": 1248, "end_char_idx": 1536, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "59a8ff39-64f5-4ec7-b73c-c52429c73238": {"__data__": {"id_": "59a8ff39-64f5-4ec7-b73c-c52429c73238", "embedding": null, "metadata": {"file_path": "src/pages/learn/protocol.mdx", "file_name": "protocol.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/learn/protocol.mdx", "header_path": "/What is the Ethereum Name Service?/", "customer_id": 1, "source_url": "src/pages/learn/protocol.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["hands", "matters", "level", "control", "write", "because", "subnames", "domain", "create", "their", "users", "nature", "anyone", "subdomains", "hierarchal"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6a1aabb923cba74a491fbdfa4c1baa346145c68f", "node_type": "4", "metadata": {"file_path": "src/pages/learn/protocol.mdx", "file_name": "protocol.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/learn/protocol.mdx"}, "hash": "d95af70bd96e739015a86238cf3083679673aabe66d27fe65681911442ca7cfe", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "82025441-2080-4f28-9266-ed544c0864f0", "node_type": "1", "metadata": {"file_path": "src/pages/learn/protocol.mdx", "file_name": "protocol.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/learn/protocol.mdx", "header_path": "/What is the Ethereum Name Service?/"}, "hash": "be8c586ee1c2f9b721eff3cf0a446fbbc150b743944816703d8b9fa19815f84e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ba2f601c-49d2-4cdd-955d-437b4a254779", "node_type": "1", "metadata": {"header_path": "/What is the Ethereum Name Service?/"}, "hash": "74ed5fdd3fe095cb62911d0cff24b787507417a71ee652696a9b0b1f0725c82b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Subnames\n\n<Card className=\"flex items-center justify-center text-xl\">\n  <div className=\"text-right font-bold\">\n    {['root', 'registrar', 'controller', 'resolver', 'registry'].map(\n      (subname, i) => (\n        <div\n          className={\n            ['opacity-20', 'opacity-50', '', 'opacity-50', 'opacity-20'][i]\n          }\n          key={subname}\n        >\n          {subname}\n        </div>\n      )\n    )}\n  </div>\n  <div className=\"font-bold text-blue\">.ens.eth</div>\n</Card>\n\nBecause of the hierarchal nature of ENS, anyone who owns a domain at any level can take control of resolution.\nUsers can create subdomains manually, or take matters into their own hands and write their own resolution logic.\n\nFor instance, if Alice owns 'alice.eth', she can create 'pay.alice.eth' and configure it as she wishes.\nOr, use a [Custom Resolver](/resolvers/quickstart), and programmatically issue subdomains, for example in an App, Community, or DAO.\n\n<EmbedLink\n  href=\"/web/subdomains\"\n  title=\"Issuing Subdomains\"\n  description=\"Learn how to issue subdomains on ENS.\"\n/>", "mimetype": "text/plain", "start_char_idx": 1885, "end_char_idx": 2956, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ba2f601c-49d2-4cdd-955d-437b4a254779": {"__data__": {"id_": "ba2f601c-49d2-4cdd-955d-437b4a254779", "embedding": null, "metadata": {"file_path": "src/pages/learn/protocol.mdx", "file_name": "protocol.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/learn/protocol.mdx", "header_path": "/What is the Ethereum Name Service?/", "customer_id": 1, "source_url": "src/pages/learn/protocol.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["applications", "using", "enabled", "resolution", "interface", "import", "ensprofile", "managing", "yourself", "manager"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6a1aabb923cba74a491fbdfa4c1baa346145c68f", "node_type": "4", "metadata": {"file_path": "src/pages/learn/protocol.mdx", "file_name": "protocol.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/learn/protocol.mdx"}, "hash": "d95af70bd96e739015a86238cf3083679673aabe66d27fe65681911442ca7cfe", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "59a8ff39-64f5-4ec7-b73c-c52429c73238", "node_type": "1", "metadata": {"file_path": "src/pages/learn/protocol.mdx", "file_name": "protocol.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/learn/protocol.mdx", "header_path": "/What is the Ethereum Name Service?/"}, "hash": "107e3ec97158be39079b3a3f9006590ae7cfb471092858c9a05c5fc2e6850878", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## ENS Manager App\n\nYou can try ENS out for yourself now by using the [ENS Manager App](https://ens.app/), or by using any of the many ENS enabled applications on [our homepage](https://ens.domains/).\n\n<EmbedLink\n  href=\"https://ens.app\"\n  target=\"_blank\"\n  title=\"ENS Manager App\"\n  description=\"The ENS Manager App is a web-based interface for managing ENS names.\"\n/> import { EnsProfile } from '../../components/EnsProfile'\nimport { Card } from '../../components/ui/Card' # Resolution [The ENS Resolution Process]\n\n:::note\nThis document aims to provide a brief overview of how resolution works, to\nread more about resolution checkout the [dedicated Resolution\nSection](/resolution).\n:::\n\nOne of the major parts of the ENS protocol is the resolution process. The Resolution process at its core is the process of converting a human-readable name to a machine-readable address.\n\nThough there is a lot of smart contract magic under the hood, the ENS system consists of two main paths: [Forward Resolution](#forward-resolution), used to go from name to address (and load other extra data), and [Reverse Resolution](#reverse-resolution), used to go from address to name.", "mimetype": "text/plain", "start_char_idx": 2958, "end_char_idx": 3327, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "978836bc-ab3d-4ae7-b20a-13b4397c2b1c": {"__data__": {"id_": "978836bc-ab3d-4ae7-b20a-13b4397c2b1c", "embedding": null, "metadata": {"file_path": "src/pages/learn/resolution.mdx", "file_name": "resolution.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/learn/resolution.mdx", "header_path": "/Resolution [The ENS Resolution Process]/", "customer_id": 1, "source_url": "src/pages/learn/resolution.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["forward", "limited", "going", "component", "forwards", "these", "include", "resolution", "associated", "records", "hideaddress", "fetch", "process"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b21225042294002d67fe849e6beac725ca866407", "node_type": "4", "metadata": {"file_path": "src/pages/learn/resolution.mdx", "file_name": "resolution.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/learn/resolution.mdx"}, "hash": "dc6c185ffc74c8c393404737f03ea843385fc1040f3ed729660a9e297ae4184b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7f72eda9-9a1c-4aab-9be3-a866f31245c9", "node_type": "1", "metadata": {"file_path": "src/pages/learn/resolution.mdx", "file_name": "resolution.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/learn/resolution.mdx", "header_path": "/"}, "hash": "694bf38557ea9f70ec2aaf2f67743bd614fce0bc1b790b9f36627a288ef4f4c4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d51cd805-0bbc-4437-ba05-d4c2714d38ed", "node_type": "1", "metadata": {"header_path": "/Resolution [The ENS Resolution Process]/"}, "hash": "45a07c1b2c9c9fdcdd7e5cb26a84287d839357ba642fed59aca4640b5e5d934d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Forward Resolution\n\nForwards resolution is the process of going **from name to address**. As well as to load the records associated to a name.\nThese records include but are not limited to **discord**, **twitter**, **github**, **email**, **timezone**, and more.\n\n{/* TODO: Turn this into a component and fetch live data */}\n\n<Card>\n  <div className=\"flex flex-col items-center justify-center gap-2 sm:flex-row sm:gap-6\">\n    <EnsProfile name=\"ricmoo.eth\" hideAddress />\n    <span className=\"hidden sm:block\">\u27a1\ufe0f</span>\n    <span className=\"block sm:hidden\">\u2b07\ufe0f</span>\n    <Card className=\"w-64 rounded-md p-4\">\n      <div>\n        <span className=\"font-extrabold\">ETH Address:</span> 0x5555...3dCa\n      </div>\n      <div>\n        <span className=\"font-extrabold\">BTC Address:</span> 1RicMoo...Jyn\n      </div>\n      <div>\n        <span className=\"font-extrabold\">Twitter:</span> @ricmoo\n      </div>\n      <div>\n        <span className=\"font-extrabold\">Github:</span> @ricmoo\n      </div>\n      <span className=\"font-extrabold\">...</span>\n    </Card>\n  </div>\n</Card>\n\nImplementing forwards resolution in a dApp can be as simple as using a single line of code!\nTo learn more about how to implement forwards resolution, check out the [Address Resolution](/web/resolution) documentation.", "mimetype": "text/plain", "start_char_idx": 800, "end_char_idx": 2086, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d51cd805-0bbc-4437-ba05-d4c2714d38ed": {"__data__": {"id_": "d51cd805-0bbc-4437-ba05-d4c2714d38ed", "embedding": null, "metadata": {"file_path": "src/pages/learn/resolution.mdx", "file_name": "resolution.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/learn/resolution.mdx", "header_path": "/Resolution [The ENS Resolution Process]/", "customer_id": 1, "source_url": "src/pages/learn/resolution.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["pages", "allows", "going", "address", "instead", "process", "reverse", "readable", "resolution", "resolved", "filled", "crucial", "human"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b21225042294002d67fe849e6beac725ca866407", "node_type": "4", "metadata": {"file_path": "src/pages/learn/resolution.mdx", "file_name": "resolution.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/learn/resolution.mdx"}, "hash": "dc6c185ffc74c8c393404737f03ea843385fc1040f3ed729660a9e297ae4184b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "978836bc-ab3d-4ae7-b20a-13b4397c2b1c", "node_type": "1", "metadata": {"file_path": "src/pages/learn/resolution.mdx", "file_name": "resolution.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/learn/resolution.mdx", "header_path": "/Resolution [The ENS Resolution Process]/"}, "hash": "7c69c43884e238cff9ac6834b44c6617e02d5b57acc7e72685f240915c1230ca", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Reverse Resolution\n\nReverse resolution is the process of going **from address to name**. This is a crucial part of the ENS system, as it allows for any address, to be resolved into a human readable name.\nInstead of pages filled with addresses, you can now show the names of the people behind the addresses.\n\n<Card className=\"flex items-center justify-center gap-2\">\n  <span className=\"font-medium\">0x225...c3B5</span>\n  <span>to</span>\n  <EnsProfile name=\"nick.eth\" hideAddress />\n</Card>\n\nImplementing reverse resolution in a dApp can be as simple as using a single line of code!\nTo learn more about how to implement reverse resolution, check out the [Address Resolution](/web/reverse) documentation.", "mimetype": "text/plain", "start_char_idx": 2088, "end_char_idx": 2792, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2baf1dd3-a0f6-45c7-a8c8-1c8ff9c31fd7": {"__data__": {"id_": "2baf1dd3-a0f6-45c7-a8c8-1c8ff9c31fd7", "embedding": null, "metadata": {"file_path": "src/pages/registry/dns.mdx", "file_name": "dns.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/dns.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/registry/dns.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["learned", "functionality", "building", "extend", "registrar", "blocks", "responsible", "gasless", "level", "enabled", "implementation", "explore", "names", "dnssec"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4e20487d32191e476930dc85955953c46a3a1d67", "node_type": "4", "metadata": {"file_path": "src/pages/registry/dns.mdx", "file_name": "dns.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/dns.mdx"}, "hash": "d803376ae6545c2b760cffcbf8c825d2c758a960bef4ed35b807aa7e40421625", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ab694794-e412-4d76-9eb1-5a4a9dab0572", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "d9ce84c0ee8fed9127c0656a3de43b0963d25b9ed0c2e26ba7b4ae8e6479a1c6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: Registrar responsible for all DNSSEC enabled names\n--- # DNS Registrar\n\nIn [DNS on ENS](/learn/dns) we learned how ENS aims to extend the functionality of the DNS.\nOn this page we will explore the implementation of DNSSEC, the DNSRegistrar, and the building blocks for gasless DNSSEC.\n\n:::note\nNot all top level domains support DNSSEC, and some might have custom ENS\nimplementations. Please refer to the [TLD List](/dns/tlds) for TLD-specific\ninformation.\n::: ## DNSSEC\n\nDNSSEC (Domain Name System Security Extensions) is an added layer of security on top of DNS that allows for cryptographic verification of records. It establishes a chain of trust from the root key (which is signed by ICANN) down to each key.\n\nAll ENS-enabled DNS names are required to use DNSSEC, and the [DNSSECOracle](https://github.com/ensdomains/ens-contracts/tree/master/contracts/dnssec-oracle) is responsible for verifying the signatures.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 71, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7419e078-acb1-4ecd-b3a6-340703bada45": {"__data__": {"id_": "7419e078-acb1-4ecd-b3a6-340703bada45", "embedding": null, "metadata": {"file_path": "src/pages/registry/dns.mdx", "file_name": "dns.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/dns.mdx", "header_path": "/DNS Registrar/DNSSEC/", "customer_id": 1, "source_url": "src/pages/registry/dns.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["specific", "since", "process", "record", "proof", "expect", "submitting", "smart", "something", "possible", "claiming", "enabling", "onchain", "involves", "setting"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4e20487d32191e476930dc85955953c46a3a1d67", "node_type": "4", "metadata": {"file_path": "src/pages/registry/dns.mdx", "file_name": "dns.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/dns.mdx"}, "hash": "d803376ae6545c2b760cffcbf8c825d2c758a960bef4ed35b807aa7e40421625", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7e0511e7-79da-4ebd-bc78-57c3b167f2f1", "node_type": "1", "metadata": {"file_path": "src/pages/registry/dns.mdx", "file_name": "dns.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/dns.mdx", "header_path": "/DNS Registrar/"}, "hash": "9f227ae2577bc671a8d6a86d1f410befd02b09f65ddf64dfef06dada102a31c2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c5508b32-c267-45b4-b16e-b20d6df51fda", "node_type": "1", "metadata": {"header_path": "/DNS Registrar/"}, "hash": "9b019e414ae256c22205fe2e4e35f4f2920ff57c1530d3affa16704e974fc563", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Claiming a Name Onchain\n\nSince 2021, it has been possible to [import a DNS name](/learn/dns#importing-a-dns-name) and use that as an ENS name. This process involves enabling DNSSEC, setting a specific TXT record, and submitting a proof to the [DNSRegistrar](https://github.com/ensdomains/ens-contracts/tree/master/contracts/dnsregistrar) smart contract.\n\nExpect your `TXT` record to look something like this:\n\n```\nTXT @ _ens a=&lt;eth-address&gt;\n```\n\nYou can learn more about [how to import a DNS name](/learn/dns#importing-a-dns-name) in the DNS section, or see how to [programmatically complete these steps](#programming-dnssec-proofs).\n\nThere is no ENS protocol fee to import a DNS name, but it requires a large amount of gas (up to a few million) to submit the proof onchain. Continue reading to learn how this has been mitigated.", "mimetype": "text/plain", "start_char_idx": 937, "end_char_idx": 1776, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c5508b32-c267-45b4-b16e-b20d6df51fda": {"__data__": {"id_": "c5508b32-c267-45b4-b16e-b20d6df51fda", "embedding": null, "metadata": {"file_path": "src/pages/registry/dns.mdx", "file_name": "dns.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/dns.mdx", "header_path": "/DNS Registrar/", "customer_id": 1, "source_url": "src/pages/registry/dns.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["dnsregistrar", "offchain", "makes", "truly", "query", "introduced", "perform", "EIP-3668", "verification", "dnssecoracle", "which", "possible", "enabling", "usage", "dnssec"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4e20487d32191e476930dc85955953c46a3a1d67", "node_type": "4", "metadata": {"file_path": "src/pages/registry/dns.mdx", "file_name": "dns.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/dns.mdx"}, "hash": "d803376ae6545c2b760cffcbf8c825d2c758a960bef4ed35b807aa7e40421625", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7419e078-acb1-4ecd-b3a6-340703bada45", "node_type": "1", "metadata": {"file_path": "src/pages/registry/dns.mdx", "file_name": "dns.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/dns.mdx", "header_path": "/DNS Registrar/DNSSEC/"}, "hash": "559284ed29957a72adc8494697ac156f0e352d09281255dd6d41642c560416f7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c2a79b32-ca6e-45dd-be58-8019a110def5", "node_type": "1", "metadata": {"header_path": "/DNS Registrar/Offchain Verification (Gasless)/"}, "hash": "d205028332ed9fe0c7e36e6e3cc3be7352d64ff9fc6634fe3a96f7a04ca62c90", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Offchain Verification (Gasless)\n\n[EP 5.1](/dao/proposals/5.1) introduced a new DNSSECOracle and DNSRegistrar which makes it possible to perform DNSSEC verification at query time, enabling truly free usage of DNS names in ENS. We call this \"gasless DNSSEC\".\n\nIt works by enabling [wildcard resolution](/ensip/10) at the DNS TLD level. During the [name resolution process](/resolution), if a name doesn't already exist onchain but has been configured for usage in ENS, the DNSSEC proof will be fetched offchain via [CCIP Read](https://eips.ethereum.org/EIPS/eip-3668) and then verified onchain with the same DNSSECOracle mentioned above.", "mimetype": "text/plain", "start_char_idx": 1778, "end_char_idx": 2416, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c2a79b32-ca6e-45dd-be58-8019a110def5": {"__data__": {"id_": "c2a79b32-ca6e-45dd-be58-8019a110def5", "embedding": null, "metadata": {"file_path": "src/pages/registry/dns.mdx", "file_name": "dns.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/dns.mdx", "header_path": "/DNS Registrar/Offchain Verification (Gasless)/", "customer_id": 1, "source_url": "src/pages/registry/dns.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["deployed", "other", "special", "simply", "configure", "gaslessly", "extendeddnsresolver", "started", "record", "following", "import", "which", "implementation", "customizable", "usage"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4e20487d32191e476930dc85955953c46a3a1d67", "node_type": "4", "metadata": {"file_path": "src/pages/registry/dns.mdx", "file_name": "dns.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/dns.mdx"}, "hash": "d803376ae6545c2b760cffcbf8c825d2c758a960bef4ed35b807aa7e40421625", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c5508b32-c267-45b4-b16e-b20d6df51fda", "node_type": "1", "metadata": {"file_path": "src/pages/registry/dns.mdx", "file_name": "dns.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/dns.mdx", "header_path": "/DNS Registrar/"}, "hash": "7ad41bd3fb3e9e74a8db4be292d89637a7363bd4a6dac06584ffeabe03266c40", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3358ef0c-fc73-4dd3-b2bb-e9c6375784da", "node_type": "1", "metadata": {"header_path": "/DNS Registrar/"}, "hash": "130c809c6f835642b1ecf06c1bc9b55d87ba1ced7efefb5be29a753178abbe6f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Import a DNS name gaslessly\n\nTo configure a DNS name for usage in ENS, simply add a `TXT` record with the following format:\n\n```\nTXT @ ENS1 &lt;resolver-address&gt;\n```\n\nThe `resolver-address` implementation is customizable just like any other ENS resolver. To get started quickly, a special ExtendedDNSResolver has been deployed which allows users to specify an ETH address that the name should resolve to within the same `TXT` record. To use this setup, simply add a record with the following format:\n\n```\nTXT @ ENS1 &lt;extended-resolver-address&gt; &lt;eth-address&gt;\nTXT @ ENS1 0x238A8F792dFA6033814B18618aD4100654aeef01 0x225f137127d9067788314bc7fcc1f36746a3c3B5\n```", "mimetype": "text/plain", "start_char_idx": 2418, "end_char_idx": 3095, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3358ef0c-fc73-4dd3-b2bb-e9c6375784da": {"__data__": {"id_": "3358ef0c-fc73-4dd3-b2bb-e9c6375784da", "embedding": null, "metadata": {"file_path": "src/pages/registry/dns.mdx", "file_name": "dns.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/dns.mdx", "header_path": "/DNS Registrar/", "customer_id": 1, "source_url": "src/pages/registry/dns.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["calling", "other", "controlled", "ownership", "either", "least", "domain", "smart", "registry", "lookup", "owner", "respective", "onchain", "contract", "imported"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4e20487d32191e476930dc85955953c46a3a1d67", "node_type": "4", "metadata": {"file_path": "src/pages/registry/dns.mdx", "file_name": "dns.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/dns.mdx"}, "hash": "d803376ae6545c2b760cffcbf8c825d2c758a960bef4ed35b807aa7e40421625", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c2a79b32-ca6e-45dd-be58-8019a110def5", "node_type": "1", "metadata": {"file_path": "src/pages/registry/dns.mdx", "file_name": "dns.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/dns.mdx", "header_path": "/DNS Registrar/Offchain Verification (Gasless)/"}, "hash": "27281570019b99600443256a3ed653f7e7cb0abec0e7140aca32b809b26f803f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "92fe4af0-5750-45ed-9a5b-fa544998ce03", "node_type": "1", "metadata": {"header_path": "/DNS Registrar/Other/"}, "hash": "2fa274f62e673686692cb7ec172d0ace446e9ee623d515493ac6b8eb9cd0eb6c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Other ### TLD Ownership\n\nYou can lookup the `owner` of any TLD by calling the `Registry.owner(bytes32 node)` function.\nIf at least one domain has been imported for this TLD (via the onchain method), the owner will be either the `DNSRegistrar` or a smart contract controlled by the respective registry operator.\n\nIf a TLD has not yet been activated, the `owner` will return `0x0` and it may require one user to import a name onchain to activate the TLD. See the [supported TLD list](/dns/tlds) for more info.", "mimetype": "text/plain", "start_char_idx": 3097, "end_char_idx": 3105, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "00c45e54-9445-4e34-9fa8-60cfa851c7f4": {"__data__": {"id_": "00c45e54-9445-4e34-9fa8-60cfa851c7f4", "embedding": null, "metadata": {"file_path": "src/pages/registry/dns.mdx", "file_name": "dns.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/dns.mdx", "header_path": "/DNS Registrar/Other/", "customer_id": 1, "source_url": "src/pages/registry/dns.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["retrieving", "library", "proofs", "interacting", "querying", "smart", "programming", "interact", "contracts", "validating", "provide", "dnssec"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4e20487d32191e476930dc85955953c46a3a1d67", "node_type": "4", "metadata": {"file_path": "src/pages/registry/dns.mdx", "file_name": "dns.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/dns.mdx"}, "hash": "d803376ae6545c2b760cffcbf8c825d2c758a960bef4ed35b807aa7e40421625", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "92fe4af0-5750-45ed-9a5b-fa544998ce03", "node_type": "1", "metadata": {"file_path": "src/pages/registry/dns.mdx", "file_name": "dns.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/dns.mdx", "header_path": "/DNS Registrar/Other/"}, "hash": "b97dff5653ed9d11e793c1a77ce6e9d5d3629de10b47c524607cae576f49894e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e062a5a6-73ea-44e6-b90d-25641cca7b61", "node_type": "1", "metadata": {"header_path": "/DNS Registrar/Other/Programming DNSSEC Proofs/"}, "hash": "74195753b0447baf393f0cdefd5dc28b6a8fc975831e7517b45f1b702c544b9b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Programming DNSSEC Proofs\n\nTo help you interact with DNSSEC data and the DNSRegistrar, we provide a few libraries.\n\n- [DNSProvejs](https://github.com/ensdomains/dnsprovejs) = A library for querying and validating DNSSEC data from DNS\n- [ENSjs](https://github.com/ensdomains/ensjs) = A library for interacting with ENS smart contracts #### Retrieving a proof\n\n```ts\nimport { addEnsContracts } from '@ensdomains/ensjs'\nimport { getDnsImportData } from '@ensdomains/ensjs/dns'\nimport { createPublicClient, http } from 'viem'\nimport { mainnet } from 'viem/chains'\n\nconst client = createPublicClient({\n  chain: addEnsContracts(mainnet),\n  transport: http(),\n})\n\nconst dnsImportData = await getDnsImportData(client, {\n  name: 'example.com',\n})\n```", "mimetype": "text/plain", "start_char_idx": 3610, "end_char_idx": 3947, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b57f7651-1a26-436c-b1b6-c2bc77a50eac": {"__data__": {"id_": "b57f7651-1a26-436c-b1b6-c2bc77a50eac", "embedding": null, "metadata": {"file_path": "src/pages/registry/dns.mdx", "file_name": "dns.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/dns.mdx", "header_path": "/DNS Registrar/Other/Programming DNSSEC Proofs/", "customer_id": 1, "source_url": "src/pages/registry/dns.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["dnsregistrar", "mainnetwithens", "mainnet", "const", "importdnsname", "proof", "submitting", "import", "addenscontracts", "client"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4e20487d32191e476930dc85955953c46a3a1d67", "node_type": "4", "metadata": {"file_path": "src/pages/registry/dns.mdx", "file_name": "dns.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/dns.mdx"}, "hash": "d803376ae6545c2b760cffcbf8c825d2c758a960bef4ed35b807aa7e40421625", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e062a5a6-73ea-44e6-b90d-25641cca7b61", "node_type": "1", "metadata": {"file_path": "src/pages/registry/dns.mdx", "file_name": "dns.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/dns.mdx", "header_path": "/DNS Registrar/Other/Programming DNSSEC Proofs/"}, "hash": "5db28e37770b0a0d91a64392586f447c93a3cba9d9b0c8906e5aeb29dd06eb23", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d88f0fa7-7639-40f2-9acf-522c3ed2955b", "node_type": "1", "metadata": {"header_path": "/DNS Registrar/"}, "hash": "9163ba278e0379d0778c15b4333e664d77478f1c8ace0ceafcbd49cf3c2639f6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "#### Submitting the proof to the DNSRegistrar\n\n```ts\nimport { addEnsContracts } from '@ensdomains/ensjs'\nimport { getDnsImportData, importDnsName } from '@ensdomains/ensjs/dns'\nimport { createPublicClient, createWalletClient, custom, http } from 'viem'\nimport { mainnet } from 'viem/chains'\n\nconst mainnetWithEns = addEnsContracts(mainnet)\n\nconst client = createPublicClient({\n  chain: mainnetWithEns,\n  transport: http(),\n})\n\nconst wallet = createWalletClient({\n  chain: mainnetWithEns,\n  transport: custom(window.ethereum),\n})\n\nconst dnsImportData = await getDnsImportData(client, {\n  name: 'example.com',\n})\n\nawait importDnsName(wallet, {\n  name: 'example.com',\n  dnsImportData,\n})\n```", "mimetype": "text/plain", "start_char_idx": 4358, "end_char_idx": 5046, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d88f0fa7-7639-40f2-9acf-522c3ed2955b": {"__data__": {"id_": "d88f0fa7-7639-40f2-9acf-522c3ed2955b", "embedding": null, "metadata": {"file_path": "src/pages/registry/dns.mdx", "file_name": "dns.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/dns.mdx", "header_path": "/DNS Registrar/", "customer_id": 1, "source_url": "src/pages/registry/dns.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["other", "suffixes", "ethereum", "heart", "address", "registry", "oracle", "EIP-137", "functions", "bytes", "contract"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4e20487d32191e476930dc85955953c46a3a1d67", "node_type": "4", "metadata": {"file_path": "src/pages/registry/dns.mdx", "file_name": "dns.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/dns.mdx"}, "hash": "d803376ae6545c2b760cffcbf8c825d2c758a960bef4ed35b807aa7e40421625", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b57f7651-1a26-436c-b1b6-c2bc77a50eac", "node_type": "1", "metadata": {"file_path": "src/pages/registry/dns.mdx", "file_name": "dns.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/dns.mdx", "header_path": "/DNS Registrar/Other/Programming DNSSEC Proofs/"}, "hash": "95ae0ae645b6fcb06f6c2a374c664c61b85eeb4a91ef646dfae51c774e9815dd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Other functions\n\n```ts\n// Get the list of suffixes\nDNSRegistrar.suffixes\n// Get Oracle\nDNSRegistrar.oracle\n```\n\n```ts\nDNSRegistrar.claim(bytes name, bytes proof)\nDNSRegistrar.proveAndClaim(bytes name, tuple[] input, bytes proof)\nDNSRegistrar.proveAndClaimWithResolver(bytes name, tuple[] input, bytes proof, address resolver, address addr)\n``` # The Registry [Root Registry of the Ethereum Name Service]\n\nThe ENS registry is the core contract that lies at the heart of ENS resolution. All ENS lookups start by querying the registry. The registry maintains a list of domains, recording the owner, resolver, and TTL for each, and allows the owner of a domain to make changes to that data.\n\nThe ENS registry is specified in [EIP 137](https://eips.ethereum.org/EIPS/eip-137).", "mimetype": "text/plain", "start_char_idx": 5048, "end_char_idx": 5394, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2490e403-d24f-4af6-accd-ebda25b9c1f6": {"__data__": {"id_": "2490e403-d24f-4af6-accd-ebda25b9c1f6", "embedding": null, "metadata": {"file_path": "src/pages/registry/ens.mdx", "file_name": "ens.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/ens.mdx", "header_path": "/The Registry [Root Registry of the Ethereum Name Service]/", "customer_id": 1, "source_url": "src/pages/registry/ens.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["domains", "allocation", "specify", "imposed", "governing", "owned", "smart", "called", "which", "following", "their", "anyone", "contracts", "rules"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "50105f402ecbfa26a36820fdcabb328adb1e40ae", "node_type": "4", "metadata": {"file_path": "src/pages/registry/ens.mdx", "file_name": "ens.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/ens.mdx"}, "hash": "0404d57e76039beb3bc4a7961f1444ed5353221a6c82e776cd160b1719782977", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a6e11c5c-2756-4c99-9b7d-c338ae66cc29", "node_type": "1", "metadata": {"file_path": "src/pages/registry/ens.mdx", "file_name": "ens.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/ens.mdx", "header_path": "/"}, "hash": "e63f4314c55d7480c4877335368f1a43baff09d08577c826a6a8114495c215e9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f381ef0c-6bfd-4f4f-b6bb-4b2e7a040fa6", "node_type": "1", "metadata": {"header_path": "/The Registry [Root Registry of the Ethereum Name Service]/"}, "hash": "0c7207d3932d6db95378b1fafdcdef94a68cdf211807524182e01f4a34b46c55", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Why Registries?\n\nTop-Level Domains (TLDs), like `.eth`, `.com`, and `.test`, are owned by smart contracts called <b>registrars</b>, which specify rules governing the allocation of their names.\nAnyone may, by following the rules imposed by these registrar contracts, obtain ownership of a domain for their own use.\n\n| TLD                 | Registrar Contract                     |\n| ------------------- | -------------------------------------- |\n| `[root]`            | [The Registry](/registry/ens)          |\n| `.eth`              | [ETH Registry](/registry/eth)          |\n| `.com`, `.xyz`, etc | [DNS Registrar](/registry/dns)         |\n| `.addr.reverse`     | [Reverse Registrar](/registry/reverse) |", "mimetype": "text/plain", "start_char_idx": 429, "end_char_idx": 1136, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f381ef0c-6bfd-4f4f-b6bb-4b2e7a040fa6": {"__data__": {"id_": "f381ef0c-6bfd-4f4f-b6bb-4b2e7a040fa6", "embedding": null, "metadata": {"file_path": "src/pages/registry/ens.mdx", "file_name": "ens.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/ens.mdx", "header_path": "/The Registry [Root Registry of the Ethereum Name Service]/", "customer_id": 1, "source_url": "src/pages/registry/ens.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["other", "approval", "verify", "address", "returns", "owned", "registry", "which", "functions", "owner", "resolver", "function"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "50105f402ecbfa26a36820fdcabb328adb1e40ae", "node_type": "4", "metadata": {"file_path": "src/pages/registry/ens.mdx", "file_name": "ens.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/ens.mdx"}, "hash": "0404d57e76039beb3bc4a7961f1444ed5353221a6c82e776cd160b1719782977", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2490e403-d24f-4af6-accd-ebda25b9c1f6", "node_type": "1", "metadata": {"file_path": "src/pages/registry/ens.mdx", "file_name": "ens.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/ens.mdx", "header_path": "/The Registry [Root Registry of the Ethereum Name Service]/"}, "hash": "11de7784dfabb91d46225e1f7df67147eecca8b09581aa279631dd7ef66fe5ab", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "27931c27-47b2-4892-826f-96b81f37cfb7", "node_type": "1", "metadata": {"header_path": "/The Registry [Root Registry of the Ethereum Name Service]/"}, "hash": "9e5fa5e481291f392d28e7e270a1e026c9514d09b8fd7d34e5a906d029b17ad4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Who owns the root Registry?\n\nThe [ENS Registry](https://etherscan.io/address/0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e) is owned by the [ENS Root](https://etherscan.io/address/0xaB528d626EC275E3faD363fF1393A41F581c5897) which is owned by the [ENS DAO Wallet](https://etherscan.io/address/0xFe89cc7aBB2C4183683ab71653C4cdc9B02D44b7).\nTo verify this you can run the `owner` function on the registry & root contracts. ## Other Functions\n\n```ts\n// Get Owner\nENS.owner(bytes32 node) view returns (address)\n// Get Resolver\nENS.resolver(bytes32 node) view returns (address)\n// Get TTL\nENS.ttl(bytes32 node) view returns (uint64)\n// Get Approval\nENS.isApprovedForAll(address owner, address operator) view returns (bool)\n// Check Record Existence\nENS.recordExists(bytes32 node) view returns (bool)\n```\n\n```ts\n// Set Owner (only callable by current owner)\nENS.setOwner(bytes32 node, address owner)\n// Set Resolver\nENS.setResolver(bytes32 node, address resolver)\n// Set TTL\nENS.setTTL(bytes32 node, uint64 ttl)\n// Set Subnode Owner\nENS.setSubnodeOwner(bytes32 node, bytes32 label, address owner)\n// Set Multiple (convenience function (setResolver, setTTL, setOwner))\nENS.setRecord(bytes32 node, address owner, address resolver, uint64 ttl)\n// Set Multiple Subnode\nENS.setSubnodeRecord(bytes32 node, bytes32 label, address owner, address resolver, uint64 ttl)\n// Set Approval\nENS.setApprovalForAll(address operator, bool approved)\n```\n\nEvents\n\n```ts\n// Transfer Event\nevent Transfer(bytes32 indexed node, address owner)\n// New Resolver Event\nevent NewResolver(bytes32 indexed node, address resolver)\n// New TTL Event\nevent NewTTL(bytes32 indexed node, uint64 ttl)\n// New Owner Event\nevent NewOwner(bytes32 indexed node, bytes32 indexed label, address owner)\n```", "mimetype": "text/plain", "start_char_idx": 1138, "end_char_idx": 1556, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c9b3e111-8bf9-43fd-96dc-64c5a28b9506": {"__data__": {"id_": "c9b3e111-8bf9-43fd-96dc-64c5a28b9506", "embedding": null, "metadata": {"file_path": "src/pages/registry/eth.mdx", "file_name": "eth.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/eth.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/registry/eth.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["special", "controller", "allows", "registrar", "responsible", "registration", "baseregistrar", "charge", "import", "fihash", "contracts", "trustless"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "143bab71b884e89f36539c349633b05cefb1a21d", "node_type": "4", "metadata": {"file_path": "src/pages/registry/eth.mdx", "file_name": "eth.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/eth.mdx"}, "hash": "729e79b2f6fcd36f0a91823b3d4a8f5e40e15fd35b4f2be548b6e2a780f20ec4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e98a6942-404c-460f-8ebc-98bbdf5d021b", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "db8a3cdbe87bbdaa93b5e3a116a09f6aa4b06c3a1a26316ba9fcd09c49612efe", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "import { FiBookOpen, FiClock, FiHash } from 'react-icons/fi'\n\nimport { Card } from '../../components/ui/Card' # ETH Registrar [Smart contracts responsible for the \".eth\" TLD]\n\nThe ETH Registrar is a special registrar. It allows for trustless on-chain name registration and is in charge of the \".eth\" TLD. ## BaseRegistrar vs Controller\n\nThe ETH Registrar is split into two contracts. The [BaseRegistrar](https://github.com/ensdomains/ens-contracts/blob/staging/contracts/ethregistrar/BaseRegistrarImplementation.sol) and the [ETHRegistrarController](https://github.com/ensdomains/ens-contracts/blob/staging/contracts/ethregistrar/ETHRegistrarController.sol).\n\nThe BaseRegistrar is responsible for name ownership, transfers, etc (ownership related), while the Controller is responsible for registration & renewal (pricing related). This separation is done to reduce the attack surface of the registrar, and provides users with the guarantees of continued ownership of a name so long as the registrar is in place.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 109, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3fc45081-f03c-40dd-8adf-5e209d942c77": {"__data__": {"id_": "3fc45081-f03c-40dd-8adf-5e209d942c77", "embedding": null, "metadata": {"file_path": "src/pages/registry/eth.mdx", "file_name": "eth.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/eth.mdx", "header_path": "/ETH Registrar [Smart contracts responsible for the \".eth\" TLD]/BaseRegistrar vs Controller/", "customer_id": 1, "source_url": "src/pages/registry/eth.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["controllers", "structure", "controller", "spamming", "registrar", "charges", "protocol", "registration", "pricing", "straightforward", "renewal", "provides", "oracle", "prevent"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "143bab71b884e89f36539c349633b05cefb1a21d", "node_type": "4", "metadata": {"file_path": "src/pages/registry/eth.mdx", "file_name": "eth.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/eth.mdx"}, "hash": "729e79b2f6fcd36f0a91823b3d4a8f5e40e15fd35b4f2be548b6e2a780f20ec4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "346d4a70-07c2-4834-bf51-4968fb34ed07", "node_type": "1", "metadata": {"file_path": "src/pages/registry/eth.mdx", "file_name": "eth.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/eth.mdx", "header_path": "/ETH Registrar [Smart contracts responsible for the \".eth\" TLD]/"}, "hash": "af3e828d84492fa3cee65057ec843ab2438a067546db95bbb1d9af7b073ac835", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "41c42a88-7cff-4e01-a642-f1083fc2f7bf", "node_type": "1", "metadata": {"header_path": "/ETH Registrar [Smart contracts responsible for the \".eth\" TLD]/"}, "hash": "b4866664368aeb6232b593e02ded5ee0ffda259933bdef69e8d127243ed9d0c6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Controllers\n\nThe [ETHRegistrarController](https://github.com/ensdomains/ens-contracts/blob/staging/contracts/ethregistrar/ETHRegistrarController.sol) is the main controller for the ETH Registrar, and provides a straightforward registration and renewal mechanism. ## Pricing Structure\n\nThe ETH Registrar charges a fee for registration.\nThis fee is paid in ETH and is set to prevent spamming the registrar.\nAny protocol fees are sent to the ENS Treasury. ### Pricing Oracle\n\nInitially, a single pricing oracle was deployed, the [StablePriceOracle](https://github.com/ensdomains/ens-contracts/blob/master/contracts/ethregistrar/StablePriceOracle.sol).\nThis contract has owner-set prices for each name length (1, 2, 3, 4, 5 or more).\nUsers do not have to interact with this oracle directly, as the controller provides functionality to determine the pricing for a registration or renewal.", "mimetype": "text/plain", "start_char_idx": 1015, "end_char_idx": 1281, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f4d2bef2-ba45-4fe5-a85d-681b3e73d726": {"__data__": {"id_": "f4d2bef2-ba45-4fe5-a85d-681b3e73d726", "embedding": null, "metadata": {"file_path": "src/pages/registry/eth.mdx", "file_name": "eth.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/eth.mdx", "header_path": "/ETH Registrar [Smart contracts responsible for the \".eth\" TLD]/Pricing Structure/", "customer_id": 1, "source_url": "src/pages/registry/eth.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["structure", "special", "registrar", "diversity", "letter", "promote", "pricing", "market", "there", "names"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "143bab71b884e89f36539c349633b05cefb1a21d", "node_type": "4", "metadata": {"file_path": "src/pages/registry/eth.mdx", "file_name": "eth.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/eth.mdx"}, "hash": "729e79b2f6fcd36f0a91823b3d4a8f5e40e15fd35b4f2be548b6e2a780f20ec4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e86bd741-fa1c-4774-9f36-a80798f8d984", "node_type": "1", "metadata": {"file_path": "src/pages/registry/eth.mdx", "file_name": "eth.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/eth.mdx", "header_path": "/ETH Registrar [Smart contracts responsible for the \".eth\" TLD]/Pricing Structure/"}, "hash": "ebc9315afb134ef3c37398c9cdc79226b1ad75f17dd9c99017a7ec05be78db07", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1de5d9ea-aecd-4412-a1e5-c73d972c6002", "node_type": "1", "metadata": {"header_path": "/ETH Registrar [Smart contracts responsible for the \".eth\" TLD]/Pricing Structure/"}, "hash": "d0b0870cc5c88979f11726a2a6caf3b5cf334dd1e43e3d06592855a9008bf4e5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### 3, 4, and 5 Letter Names\n\nThe ETH Registrar has special pricing for 3, 4, and 5 (and more) letter names. At the time of writing, a `5+` letter `.eth` will cost you `5 USD` per year.\nA `4` letter `160 USD` per year, and a `3` letter `640 USD` per year.\nThis pricing structure is done to promote market diversity as there are an exponentially less amount of names the shorter they become.\nThe minimum length of a name is 3 characters.\n\n| Name Length | Price (USD) |\n| ----------- | ----------- |\n| 5+          | 5           |\n| 4           | 160         |\n| 3           | 640         |", "mimetype": "text/plain", "start_char_idx": 1906, "end_char_idx": 2493, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1de5d9ea-aecd-4412-a1e5-c73d972c6002": {"__data__": {"id_": "1de5d9ea-aecd-4412-a1e5-c73d972c6002", "embedding": null, "metadata": {"file_path": "src/pages/registry/eth.mdx", "file_name": "eth.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/eth.mdx", "header_path": "/ETH Registrar [Smart contracts responsible for the \".eth\" TLD]/Pricing Structure/", "customer_id": 1, "source_url": "src/pages/registry/eth.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["temporary", "registrar", "after", "addition", "grace", "pricing", "expires", "auction", "auctions", "premium", "dutch"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "143bab71b884e89f36539c349633b05cefb1a21d", "node_type": "4", "metadata": {"file_path": "src/pages/registry/eth.mdx", "file_name": "eth.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/eth.mdx"}, "hash": "729e79b2f6fcd36f0a91823b3d4a8f5e40e15fd35b4f2be548b6e2a780f20ec4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f4d2bef2-ba45-4fe5-a85d-681b3e73d726", "node_type": "1", "metadata": {"file_path": "src/pages/registry/eth.mdx", "file_name": "eth.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/eth.mdx", "header_path": "/ETH Registrar [Smart contracts responsible for the \".eth\" TLD]/Pricing Structure/"}, "hash": "bf79257c0b29312a15bf94f0d9b531c83091bcdf1b22f7df9c5144dd4582bb86", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "53095d5a-e99b-47e6-bdc3-2b22488d2405", "node_type": "1", "metadata": {"header_path": "/ETH Registrar [Smart contracts responsible for the \".eth\" TLD]/Pricing Structure/"}, "hash": "459200181a15fa08bd1be1743d59b1a84183ba8ae32f7bf485fe36a6c973c57b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Premium & Auctions\n\nIn addition to length-based pricing the ETH Registrar also has a premium pricing structure.\n90 days after a name expires (aka after the grace period), the name will go into a Temporary Premium Auction.\nThe Auction is a 21 day dutch auction, meaning that the price starts high (~100 Million USD) and exponentially decrease till it hits 0 or a bid goes through.\n\nThis is done to prevent sniping of names, and ensures the name goes to the highest bidder fairly.\n\n<Card>\n  <div className=\"mx-auto h-32\">\n    <svg className=\"h-full w-full\" width=\"160\" height=\"90\" viewBox=\"0 0 160 90\">\n      <path d=\"M 10 10 Q 10 80 150 80\" stroke=\"#3889FF\" fill=\"transparent\" />\n    </svg>\n  </div>\n</Card>\n\nYou can read more about the temporary premium in [this article](https://support.ens.domains/en/articles/7900612-temporary-premium).", "mimetype": "text/plain", "start_char_idx": 2495, "end_char_idx": 3338, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "53095d5a-e99b-47e6-bdc3-2b22488d2405": {"__data__": {"id_": "53095d5a-e99b-47e6-bdc3-2b22488d2405", "embedding": null, "metadata": {"file_path": "src/pages/registry/eth.mdx", "file_name": "eth.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/eth.mdx", "header_path": "/ETH Registrar [Smart contracts responsible for the \".eth\" TLD]/Pricing Structure/", "customer_id": 1, "source_url": "src/pages/registry/eth.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["other", "controller", "development", "registrar", "treasury", "income", "registration", "method", "money", "funds", "trigger", "sends", "public", "where"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "143bab71b884e89f36539c349633b05cefb1a21d", "node_type": "4", "metadata": {"file_path": "src/pages/registry/eth.mdx", "file_name": "eth.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/eth.mdx"}, "hash": "729e79b2f6fcd36f0a91823b3d4a8f5e40e15fd35b4f2be548b6e2a780f20ec4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1de5d9ea-aecd-4412-a1e5-c73d972c6002", "node_type": "1", "metadata": {"file_path": "src/pages/registry/eth.mdx", "file_name": "eth.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/eth.mdx", "header_path": "/ETH Registrar [Smart contracts responsible for the \".eth\" TLD]/Pricing Structure/"}, "hash": "c112d4f12e03cf0953588f37a182bd9922606c482c7edd654d554a12415b8207", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cb4edc2e-60cd-4980-add4-6d9c488b4aa0", "node_type": "1", "metadata": {"header_path": "/ETH Registrar [Smart contracts responsible for the \".eth\" TLD]/"}, "hash": "a30d63defe0df4ed5bf0e3ba9fccf741d53f96d7815670b870db58aae86cb4b8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Where does the money go?\n\nUpon registration funds are sent to the ETHRegistrarController. The controller then sends the funds to the ENS Treasury (anyone can call the `withdraw` method to trigger this).\nIncome from the ETH Registrar is used to fund the development of ENS, its ecosystem, and other public goods.\n\nRead more about our spending in [Article III of the Constitution](/dao/constitution#iii-income-funds-ens-and-other-public-goods). ## ERC721 and NFTs\n\nIn the early days of ENS, the ERC721 standard did not exist.\nThe original ETH Registrar formed the pre-cursor to the ERC721 standard.\nAs we witnessed the ERC721 being standardized, support for it was added to the ETH Registrar.\n\nToday, users can interact with the ETH Registrar to transfer their name just like with any other ERC721 token.", "mimetype": "text/plain", "start_char_idx": 3340, "end_char_idx": 3786, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0b236a0a-60d4-4da3-9b08-e666415072f1": {"__data__": {"id_": "0b236a0a-60d4-4da3-9b08-e666415072f1", "embedding": null, "metadata": {"file_path": "src/pages/registry/eth.mdx", "file_name": "eth.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/eth.mdx", "header_path": "/ETH Registrar [Smart contracts responsible for the \".eth\" TLD]/", "customer_id": 1, "source_url": "src/pages/registry/eth.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["frontends", "rainbow", "process", "registering", "trustless", "place", "takes", "source", "onchain", "names", "manager"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "143bab71b884e89f36539c349633b05cefb1a21d", "node_type": "4", "metadata": {"file_path": "src/pages/registry/eth.mdx", "file_name": "eth.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/eth.mdx"}, "hash": "729e79b2f6fcd36f0a91823b3d4a8f5e40e15fd35b4f2be548b6e2a780f20ec4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cb4edc2e-60cd-4980-add4-6d9c488b4aa0", "node_type": "1", "metadata": {"file_path": "src/pages/registry/eth.mdx", "file_name": "eth.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/eth.mdx", "header_path": "/ETH Registrar [Smart contracts responsible for the \".eth\" TLD]/"}, "hash": "7446db1f1092370c22c5193fddc129146f0cce0d8bf065aec645afea681efd30", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d584710b-9372-4116-ace8-7fa80f3cb0a7", "node_type": "1", "metadata": {"header_path": "/ETH Registrar [Smart contracts responsible for the \".eth\" TLD]/Registering a Name/"}, "hash": "4add633a1f2cfb4c7a4fde404a5d1951b241463e8ff312533581348e3aa6de9e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Registering a Name\n\nRegistering a name is a trustless process that takes place onchain (more on this below). Some open source frontends for registering names are the [ENS Manager App](https://app.ens.domains/), [ENS Fairy](https://ensfairy.xyz/), Rainbow Wallet.\n\nThe process of registering a `.eth` name uses a commit-reveal process.\n\n<Card className=\"flex items-center justify-center gap-8\">\n  <div className=\"flex flex-col items-center text-center\">\n    <FiHash className=\"text-2xl\" />\n    <span>Commit</span>\n  </div>\n  <div className=\"flex flex-col items-center text-center\">\n    <FiClock className=\"text-2xl\" />\n    <span>Wait</span>\n  </div>\n  <div className=\"flex flex-col items-center text-center\">\n    <FiBookOpen className=\"text-2xl\" />\n    <span>Reveal</span>\n  </div>\n</Card>", "mimetype": "text/plain", "start_char_idx": 4149, "end_char_idx": 4940, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d584710b-9372-4116-ace8-7fa80f3cb0a7": {"__data__": {"id_": "d584710b-9372-4116-ace8-7fa80f3cb0a7", "embedding": null, "metadata": {"file_path": "src/pages/registry/eth.mdx", "file_name": "eth.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/eth.mdx", "header_path": "/ETH Registrar [Smart contracts responsible for the \".eth\" TLD]/Registering a Name/", "customer_id": 1, "source_url": "src/pages/registry/eth.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["scheme", "contract", "frontrunning", "reveal", "level", "first", "register", "users", "opaque", "commit", "implements", "prevent", "highest", "names", "function"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "143bab71b884e89f36539c349633b05cefb1a21d", "node_type": "4", "metadata": {"file_path": "src/pages/registry/eth.mdx", "file_name": "eth.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/eth.mdx"}, "hash": "729e79b2f6fcd36f0a91823b3d4a8f5e40e15fd35b4f2be548b6e2a780f20ec4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0b236a0a-60d4-4da3-9b08-e666415072f1", "node_type": "1", "metadata": {"file_path": "src/pages/registry/eth.mdx", "file_name": "eth.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/eth.mdx", "header_path": "/ETH Registrar [Smart contracts responsible for the \".eth\" TLD]/"}, "hash": "2dd5cb18adaf9c1feb41a30e972524d8e61081ba7ec08d98a76ff56bcb863f05", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "161e40d2-82bc-455e-8e29-f63c0ed7eeb4", "node_type": "1", "metadata": {"header_path": "/ETH Registrar [Smart contracts responsible for the \".eth\" TLD]/Registering a Name/"}, "hash": "8e56b3bd3db7c6623aabb98a9ae768b3e0b374729134de2a6c89d9b63ae377f3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Commit-Reveal\n\nThe ETHRegistrarController, the highest level contract that users register names through, implements a commit reveal scheme to prevent frontrunning registrations.\n\nWe first call the `commit` function with an opaque bit of data (the `commitmenthash`), wait 60 seconds, and then call the `register` function. The `commit` function takes a commitment hash, which can be generated using the `makeCommitment` function. The commitment hash is opaque and revealed during the `register` function.\n\nThe commit-reveal process is to prevent a malicious actor from seeing your `register` transaction in the public mempool and frontrunning it.\n\n```solidity\nETHRegistrarController.makeCommitment(\n    name string,\n    owner address,\n    duration uint256,\n    secret bytes32,\n    resolver address,\n    data bytes[],\n    reverseRecord bool,\n    ownerControlledFuses uint16\n)\n\n// For example\nmakeCommitment(\n    \"myname\", // \"myname.eth\" but only the label\n    0x1234..., // The address you want to own the name\n    31536000, // 1 year (in seconds)\n    0x1234..., // A randomly generated 32 byte secret you create\n    0x1234..., // The address of the resolver you want to use\n    [0x8b95dd71...], // Encoded function calls you want to pass to the resolver, like `setAddr()`\n    false, // Whether or not to set the new name as your primary name\n    0 // The NameWrapper fuses you want to set\n);\n```\n\nOnce you have calculated the commitment hash, submit the `commit` transaction.\n\n```solidity\nETHRegistrarController.commit(commitment bytes32)\n```\n\nAfter having committed, it is required to wait at least the `MIN_COMMITMENT_AGE` (60 seconds) before making the subsequent `register` transaction.", "mimetype": "text/plain", "start_char_idx": 4942, "end_char_idx": 6636, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "161e40d2-82bc-455e-8e29-f63c0ed7eeb4": {"__data__": {"id_": "161e40d2-82bc-455e-8e29-f63c0ed7eeb4", "embedding": null, "metadata": {"file_path": "src/pages/registry/eth.mdx", "file_name": "eth.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/eth.mdx", "header_path": "/ETH Registrar [Smart contracts responsible for the \".eth\" TLD]/Registering a Name/", "customer_id": 1, "source_url": "src/pages/registry/eth.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["onchain", "waited", "registration", "registering", "initiating", "because", "before", "commitment", "takes", "ensure", "between", "register", "parameters", "where", "function"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "143bab71b884e89f36539c349633b05cefb1a21d", "node_type": "4", "metadata": {"file_path": "src/pages/registry/eth.mdx", "file_name": "eth.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/eth.mdx"}, "hash": "729e79b2f6fcd36f0a91823b3d4a8f5e40e15fd35b4f2be548b6e2a780f20ec4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d584710b-9372-4116-ace8-7fa80f3cb0a7", "node_type": "1", "metadata": {"file_path": "src/pages/registry/eth.mdx", "file_name": "eth.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/eth.mdx", "header_path": "/ETH Registrar [Smart contracts responsible for the \".eth\" TLD]/Registering a Name/"}, "hash": "282a6783066f6c66bae4beee2fd3ea6fd5d010140c719f7daa3e19bb82f59901", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4b6bd2e3-400d-4bde-af07-d63472bef197", "node_type": "1", "metadata": {"header_path": "/ETH Registrar [Smart contracts responsible for the \".eth\" TLD]/"}, "hash": "cb96ff8ceedc00ad4fdf69e8cf8e73d6d3e9ed6cfe0a4c0ec07b415c6c2769c8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Registering\n\nOnce you have made the onchain commitment and waited 60 seconds, you can register your name.\nRegistration takes in the same parameters as the `makeCommitment` function above.\n\nBefore initiating registration, ensure that:\n\n- `available(label)` == `true`, where `label` is \"name\" in \"name.eth\"\n- `duration` >= `MIN_REGISTRATION_DURATION`\n- `commitments[commitment]` is between 1 min and 24 hrs old\n- `msg.value` >= `rentPrice(name, duration)` + `5-10% (slippage)`\n\nBecause the rent price is paid in ETH but denominated in USD, callers are recommended to send slightly more than the value returned by `rentPrice` to avoid issues with fast price changes. A premium of 3-5% will likely be sufficient.\nAny excess funds sent during registration are automatically returned to the caller.\n\n```solidity\nETHRegistrarController.register(\n    name string,\n    owner address,\n    duration uint256,\n    secret bytes32,\n    resolver address,\n    data bytes[],\n    reverseRecord bool,\n    ownerControlledFuses uint16\n)\n\n// For example\nregister(\n    \"myname\", // \"myname.eth\" but only the label\n    0x1234..., // The address you want to own the name\n    31536000, // 1 year (in seconds)\n    0x1234..., // The same secret you used in the `commit` transaction\n    0x1234..., // The address of the resolver you want to use\n    [0x8b95dd71...], // Encoded function calls you want to pass to the resolver, like `setAddr()`\n    false, // Whether or not to set the new name as your primary name\n    0 // The NameWrapper fuses you want to set\n);\n```", "mimetype": "text/plain", "start_char_idx": 6638, "end_char_idx": 8178, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4b6bd2e3-400d-4bde-af07-d63472bef197": {"__data__": {"id_": "4b6bd2e3-400d-4bde-af07-d63472bef197", "embedding": null, "metadata": {"file_path": "src/pages/registry/eth.mdx", "file_name": "eth.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/eth.mdx", "header_path": "/ETH Registrar [Smart contracts responsible for the \".eth\" TLD]/", "customer_id": 1, "source_url": "src/pages/registry/eth.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["renew", "means", "expire", "amount", "renewing", "allowing", "arbitrary", "renewal", "separation", "between", "their", "users", "ensure"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "143bab71b884e89f36539c349633b05cefb1a21d", "node_type": "4", "metadata": {"file_path": "src/pages/registry/eth.mdx", "file_name": "eth.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/eth.mdx"}, "hash": "729e79b2f6fcd36f0a91823b3d4a8f5e40e15fd35b4f2be548b6e2a780f20ec4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "161e40d2-82bc-455e-8e29-f63c0ed7eeb4", "node_type": "1", "metadata": {"file_path": "src/pages/registry/eth.mdx", "file_name": "eth.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/eth.mdx", "header_path": "/ETH Registrar [Smart contracts responsible for the \".eth\" TLD]/Registering a Name/"}, "hash": "2394d133f729a1f18941c907b1446a93f1f11e005ca9ff10a935369b34bbecb0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bd1891fe-fc14-4e28-a65f-bef6a641e986", "node_type": "1", "metadata": {"header_path": "/ETH Registrar [Smart contracts responsible for the \".eth\" TLD]/"}, "hash": "86cb83615587a3e01924ce6f69ade8585af5b7cd2e731307ba0344d13199ae11", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Renewing a Name\n\n```solidity\nETHRegistrarController.renew()\n```\n\nAny user can renew a domain, not just the owner. This means that if you want to ensure a name doesn't expire you can renew it for someone.\n\nBy allowing renewal for any arbitrary amount of time users can ensure their name will not expire.\nAs per the separation between registry and controller, even with upgraded controller your name will still be yours. ## Other features\n\n```solidity\nETHRegistrarController.MIN_COMMITMENT_AGE uint\nETHRegistrarController.MAX_COMMITMENT_AGE uint\nETHRegistrarController.MIN_REGISTRATION_DURATION uint\n// Get Commitment Timestamp\nETHRegistrarController.commitments mapping(bytes32=>uint)\n// Get Rent Price\nETHRegistrarController.rentPrice(string name, uint duration) view returns (uint)\n// Check Name Validity\nETHRegistrarController.valid(string name) view returns (bool)\n// Check Name Availability\n// Returns true if the name is both valid and available for registration by this controller.\nETHRegistrarController.available(string name) view returns (bool)\n// Calculate Commitment Hash\nETHRegistrarController.makeCommitment(string name, address owner, uint256 duration, bytes32 secret, address resolver, bytes[] data, bool reverseRecord, uint16 ownerControlledFuses) view returns (bytes32)\n\n// Get Name Expiry (unix timestamp at which registration expires)\nBaseRegistrar.nameExpires(uint256 label) view returns (uint)\n// Check Name Availability (less specific, use ETHRegistrarController.available instead)\nBaseRegistrar.available(uint256 label) view returns (bool)\n// Get Transfer Period End (unix timestamp at which transfer period (from legacy registrar) ends)\nBaseRegistrar.transferPeriodEnds uint\n// Get Controller Status\nBaseRegistrar.controllers mapping(address=>bool)\n// Check Token Approval\nBaseRegistrar.getApproved(uint256 tokenId) view returns (address operator)\n// Check All Tokens Approval\nBaseRegistrar.isApprovedForAll(address owner, address operator) view returns (bool)\n// Get Token Owner\nBaseRegistrar.ownerOf(uint256 tokenId) view returns (address)\n// Get Token URI\nBaseRegistrar.tokenURI(uint256 tokenId) view returns (string)\n```\n\nWritable\n\n```solidity\n// Transfer a Name\nBaseRegistrar.transferFrom(address from, address to, uint256 tokenId)\nBaseRegistrar.safeTransferFrom(address from, address to, uint256 tokenId)\nBaseRegistrar.safeTransferFrom(address from, address to, uint256 tokenId, bytes _data)\n// Approve Operator\nBaseRegistrar.approve(address to, uint256 tokenId)\n// Set Approval For All\nBaseRegistrar.setApprovalForAll(address operator, bool approved)\n// Reclaim ENS Record\nBaseRegistrar.reclaim(uint256 label)\n```\n\nEvents\n\n```solidity\n// BaseRegistrar\nevent Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\nevent NameMigrated(uint256 indexed hash, address indexed owner, uint expires);\nevent NameRegistered(uint256 indexed hash, address indexed owner, uint expires);\nevent NameRenewed(uint256 indexed hash, uint expires);\n\n// Controller\nevent NameRegistered(string name, bytes32 indexed label, address indexed owner, uint cost, uint expires);\nevent NameRenewed(string name, bytes32 indexed label, uint cost, uint expires);\n```", "mimetype": "text/plain", "start_char_idx": 8180, "end_char_idx": 8601, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d53159c8-1edf-40d9-a35d-9c675283c8b9": {"__data__": {"id_": "d53159c8-1edf-40d9-a35d-9c675283c8b9", "embedding": null, "metadata": {"file_path": "src/pages/registry/reverse.mdx", "file_name": "reverse.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/reverse.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/registry/reverse.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["primary", "special", "ethereum", "registrar", "handled", "controls", "responsible", "address", "reverse", "using", "resolution", "mapping", "process"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8556b4ada63422fb37dc12080942c8249702da36", "node_type": "4", "metadata": {"file_path": "src/pages/registry/reverse.mdx", "file_name": "reverse.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/reverse.mdx"}, "hash": "ea610e21e66fa77de59c14dde0cf7f422414728e6c2722dbee7db16b57f3a2aa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e3ab99ab-cd56-4913-b826-0efd9ba3cd24", "node_type": "1", "metadata": {"header_path": "/Reverse Registrar [Registrar responsible for Primary Names]/"}, "hash": "7e29350d1d4e804e0d26509861099c2401bf706dcda9277e553918ec721122b7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Reverse Registrar [Registrar responsible for Primary Names]\n\nReverse resolution in ENS - the process of mapping from an Ethereum address (eg, 0x1234...) to an ENS name - is handled using a special namespace, .addr.reverse. A special-purpose registrar controls this namespace and allocates subdomains to any caller based on their address. The reverse registrar is specified in EIP 181.\n\nFor example, the account `0x314159265dd8dbb310642f98f50c066173c1259b` can claim `314159265dd8dbb310642f98f50c066173c1259b.addr.reverse`.\nAfter doing so, it can configure a resolver and expose metadata, such as a canonical ENS name for this address.\n\nThe reverse registrar provides functions to `claim` a reverse record,\nas well as a convenience function (`setName`) to configure the record as it's most commonly used, as a way of specifying a canonical name for an address.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 861, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e3ab99ab-cd56-4913-b826-0efd9ba3cd24": {"__data__": {"id_": "e3ab99ab-cd56-4913-b826-0efd9ba3cd24", "embedding": null, "metadata": {"file_path": "src/pages/registry/reverse.mdx", "file_name": "reverse.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/reverse.mdx", "header_path": "/Reverse Registrar [Registrar responsible for Primary Names]/", "customer_id": 1, "source_url": "src/pages/registry/reverse.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["primary", "point", "configures", "reverse", "returns", "record", "provided", "public", "interested", "checkout", "lookup", "memory", "function"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8556b4ada63422fb37dc12080942c8249702da36", "node_type": "4", "metadata": {"file_path": "src/pages/registry/reverse.mdx", "file_name": "reverse.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/reverse.mdx"}, "hash": "ea610e21e66fa77de59c14dde0cf7f422414728e6c2722dbee7db16b57f3a2aa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d53159c8-1edf-40d9-a35d-9c675283c8b9", "node_type": "1", "metadata": {"file_path": "src/pages/registry/reverse.mdx", "file_name": "reverse.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/reverse.mdx", "header_path": "/"}, "hash": "74e04a5a25c309bd44811c7ba642964f8f85e1c18dd64754adddcd24b13e478d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e2005d36-8417-4e1d-82c2-950c7b52d85d", "node_type": "1", "metadata": {"header_path": "/Reverse Registrar [Registrar responsible for Primary Names]/"}, "hash": "045634739509e4ce54430da1a79b5a5bc4678e9109d86334e2b0394765d3ddd8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Lookup Primary Name\n\nIf you are interested in [querying the primary name for an address](/web/reverse) you can checkout the web section. ## Set Primary Name\n\n```solidity\nfunction setName(string memory name) public returns (bytes32)\n```\n\nConfigures the caller's reverse ENS record to point to the provided `name`.\n\nThis convenience function streamlines the process of setting up a reverse record for the common case where a user only wants to configure a reverse name and nothing else. It performs the following steps:\n\n1. Sets the reverse record for the caller to be owned by the ReverseRegistrar.\n2. Sets the reverse record for the caller to have `defaultResolver` as its resolver.\n3. Sets the `name()` field in the `defaultResolver` for the caller's reverse record to `name`.\n\nIn short, after calling this, a user has a fully configured reverse record claiming the provided name as that account's canonical name.\n\nUsers wanting more flexibility will need to use `claim` or `claimWithResolver` and configure records manually on their chosen resolver contract.", "mimetype": "text/plain", "start_char_idx": 863, "end_char_idx": 1002, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c9adf33f-ecc3-42ac-92b9-d5a83389995a": {"__data__": {"id_": "c9adf33f-ecc3-42ac-92b9-d5a83389995a", "embedding": null, "metadata": {"file_path": "src/pages/registry/reverse.mdx", "file_name": "reverse.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/reverse.mdx", "header_path": "/Reverse Registrar [Registrar responsible for Primary Names]/", "customer_id": 1, "source_url": "src/pages/registry/reverse.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["considerations", "primary", "multichain", "other", "infrastructure", "across", "multiple", "address", "being", "current", "chains", "functions", "names", "claim", "worked"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8556b4ada63422fb37dc12080942c8249702da36", "node_type": "4", "metadata": {"file_path": "src/pages/registry/reverse.mdx", "file_name": "reverse.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/reverse.mdx"}, "hash": "ea610e21e66fa77de59c14dde0cf7f422414728e6c2722dbee7db16b57f3a2aa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e2005d36-8417-4e1d-82c2-950c7b52d85d", "node_type": "1", "metadata": {"file_path": "src/pages/registry/reverse.mdx", "file_name": "reverse.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/reverse.mdx", "header_path": "/Reverse Registrar [Registrar responsible for Primary Names]/"}, "hash": "482e15d357bcad15bb53b9b560ebb0f8c27a74d45c07c9a0ad5ff07ec14cbe87", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "772a565a-9857-4e63-b5f5-e7340620a440", "node_type": "1", "metadata": {"header_path": "/Reverse Registrar [Registrar responsible for Primary Names]/"}, "hash": "4e9b801376a2d55bc459b3ed876248485bb70495d00fd984503b1d5b2882c443", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Multichain Considerations\n\nThe current infrastructure for primary names across multiple chains is being worked on. ## Other Functions ### Claim Address\n\n```solidity\nfunction claim(address owner) public returns (bytes32);\n```\n\nClaims the caller's address in the reverse registrar, assigning ownership of the reverse record to `owner`. Equivalent to calling `claimWithResolver(owner, 0)`.\n\n```solidity\nfunction claimWithResolver(address owner, address resolver) public returns (bytes32)\n```\n\nClaims the caller's address in the reverse registrar, assigning `ownership` of the reverse record to owner. If `resolver` is nonzero, also updates the record's resolver.\n\nAfter calling this function:\n\n- The reverse record for the caller (1234....addr.reverse) is owned by `owner`.\n- If `resolver` is nonzero, the reverse record for the caller has its resolver set to `resolver`; otherwise it is left unchanged.", "mimetype": "text/plain", "start_char_idx": 1929, "end_char_idx": 2046, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "38080fe9-697c-4a82-a115-a984296d66f1": {"__data__": {"id_": "38080fe9-697c-4a82-a115-a984296d66f1", "embedding": null, "metadata": {"file_path": "src/pages/registry/reverse.mdx", "file_name": "reverse.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/reverse.mdx", "header_path": "/Reverse Registrar [Registrar responsible for Primary Names]/Other Functions/", "customer_id": 1, "source_url": "src/pages/registry/reverse.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["address", "returns", "resolution", "public", "default", "import", "which", "about", "called", "resolver", "information", "contract", "process"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8556b4ada63422fb37dc12080942c8249702da36", "node_type": "4", "metadata": {"file_path": "src/pages/registry/reverse.mdx", "file_name": "reverse.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/reverse.mdx"}, "hash": "ea610e21e66fa77de59c14dde0cf7f422414728e6c2722dbee7db16b57f3a2aa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a1a47ce6-1ac9-45c6-84c2-23d9fd869371", "node_type": "1", "metadata": {"file_path": "src/pages/registry/reverse.mdx", "file_name": "reverse.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/reverse.mdx", "header_path": "/Reverse Registrar [Registrar responsible for Primary Names]/Other Functions/"}, "hash": "91ea6f7d66c52bc7d14bd119bcb63c670cbef8a49a5c045c28805a3504495a5e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Get Default Resolver\n\n```solidity\nResolver public defaultResolver;\n```\n\nReturns the address of the resolver contract that the `ReverseRegistrar` uses for `setName`. import { Card } from '../../components/ui/Card' # Resolution\n\nThe process by which we load information about a name is called resolution. It's a simple process, but it's important to understand.\nHere is a diagram of some of the contracts involved when resolving a name.\n\n<Card>\n  <img\n    src=\"/img/resolution-diagram-1.png\"\n    alt=\"Diagram of the ENS resolution process\"\n  />\n</Card>\n\nThe resolution process involves multiple parts. Most notably the [Registry](/registry/ens), multiple Registrars ([ETH Registrar](/registry/eth), [DNS Registrar](/registry/dns), [Reverse Registrar](/registry/reverse), etc)\nand the concept of a [Resolver](/resolvers/quickstart).", "mimetype": "text/plain", "start_char_idx": 2836, "end_char_idx": 3004, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "226146c3-4d51-47b8-a1aa-b0c5c93d26d6": {"__data__": {"id_": "226146c3-4d51-47b8-a1aa-b0c5c93d26d6", "embedding": null, "metadata": {"file_path": "src/pages/resolution/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolution/index.mdx", "header_path": "/Resolution/", "customer_id": 1, "source_url": "src/pages/resolution/index.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["library", "little", "simply", "queried", "under", "about", "resolver", "resolve", "happens", "favourite", "every", "implements", "information", "contract"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e60c36d02599c01c70fccd50d0fdec161eba2274", "node_type": "4", "metadata": {"file_path": "src/pages/resolution/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolution/index.mdx"}, "hash": "5a44f64c8b8f7893827820f4f4dd5f02eb146df4b9eb9f75a280a0795fa976f5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f80c2e94-911e-4f21-8156-e612223a363a", "node_type": "1", "metadata": {"file_path": "src/pages/resolution/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolution/index.mdx", "header_path": "/"}, "hash": "e4dab794d1a47749797a64486d1b2e858639f57cd588a6dc5b720ee0357e08f4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1a4e2c17-56f8-40ee-87e8-e5d206412720", "node_type": "1", "metadata": {"header_path": "/Resolution/How to resolve/"}, "hash": "f79fcea167c7126b0e64b0eccca02613db666783a826e7d832a98c79092221d9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## How to resolve\n\nHere is a little peak at what happens under the hood of your favourite library when you do a name lookup. ### 1. Find the Resolver\n\nEvery name has a \"resolver\". A resolver is simply a contract that implements the [resolver specification](/resolvers/quickstart) and can be queried for information about a name.\nTo get the resolver responsible for a name you can query [The Registry](/registry/ens) for the `resolver` of a name.\n\n:::code-group\n\n```solidity [Solidity]\nENS.resolver(bytes32 node) view returns (address)\n```\n\n```tsx [Wagmi]\n// https://wagmi.sh/react/api/hooks/useEnsResolver\nimport { normalize } from 'viem/ens'\nimport { useEnsResolver } from 'wagmi'\n\nexport const MyResolver = () => {\n  const { data: myResolver } = useEnsResolver({\n    name: normalize('luc.eth'), // The name to lookup\n  })\n\n  return <div>{myResolver}</div>\n}\n```\n\n```ts [Ethers]\nconst resolver = await provider.getResolver('luc.eth')\n```\n\n```ts [viem]\n// https://viem.sh/docs/ens/actions/getEnsResolver.html\nimport { normalize } from 'viem/ens'\n\nimport { publicClient } from './client'\n\nconst ensResolver = await publicClient.getEnsResolver({\n  name: normalize('luc.eth'),\n})\n```\n\n```py [Web3.py]\n# https://web3py.readthedocs.io/en/latest/ens_overview.html#working-with-resolvers\nfrom ens.auto import ns\n\nresolver = ns.resolver('alice.eth')\n```\n\n:::\n\nTo verify which specifications are implemented by a resolver you can call the `supportsInterface(bytes4 interfaceID)` on the resolver with the interfaceID you would like to test for.", "mimetype": "text/plain", "start_char_idx": 667, "end_char_idx": 791, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "dfdcd136-cdb2-41d2-80cd-f958076d6dad": {"__data__": {"id_": "dfdcd136-cdb2-41d2-80cd-f958076d6dad", "embedding": null, "metadata": {"file_path": "src/pages/resolution/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolution/index.mdx", "header_path": "/Resolution/How to resolve/", "customer_id": 1, "source_url": "src/pages/resolution/index.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["responsible", "query", "record", "information", "EIP-3668", "found", "supports", "about", "there", "records", "resolver", "interested"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e60c36d02599c01c70fccd50d0fdec161eba2274", "node_type": "4", "metadata": {"file_path": "src/pages/resolution/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolution/index.mdx"}, "hash": "5a44f64c8b8f7893827820f4f4dd5f02eb146df4b9eb9f75a280a0795fa976f5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1a4e2c17-56f8-40ee-87e8-e5d206412720", "node_type": "1", "metadata": {"file_path": "src/pages/resolution/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolution/index.mdx", "header_path": "/Resolution/How to resolve/"}, "hash": "08be8a1effea7a34ca24880499ea32adc9441406ded570bb089dd7114926870b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "41060d77-a1df-4a73-b72d-16357b19913a", "node_type": "1", "metadata": {"header_path": "/Resolution/How to resolve/2. Query the Resolver/"}, "hash": "0d5d724bcef5211cd0de7d44447c1b5061e2abf7b368c4a0db205f4f87926f6e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### 2. Query the Resolver\n\nNow you have found the resolver responsible for the name in question, you can query it for the information you are interested in.\nThere are many ways you can query the resolver, `addr()` `text()` `contenthash()` `abi()` etc.\n\nIf the resolver supports text records you can call `text()` to get that text record for the name.\nMore about loading information from a resolver can be found [here](/resolvers/interacting). #### Wildcard Resolution\n\nIn addition, all of the above functions can be sent to the `resolve()` function, specified in [ENSIP-10](/ensip/10).\nThis allows for not only multicall functionality, but also easier implementation of EIP-3668, and more.\nMost clients & many resolvers utilize wildcard resolution as their primary form of resolution.", "mimetype": "text/plain", "start_char_idx": 2204, "end_char_idx": 2646, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "21fb90d8-ec86-4af3-930c-25db961375af": {"__data__": {"id_": "21fb90d8-ec86-4af3-930c-25db961375af", "embedding": null, "metadata": {"file_path": "src/pages/resolution/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolution/index.mdx", "header_path": "/Resolution/", "customer_id": 1, "source_url": "src/pages/resolution/index.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["forward", "primary", "actually", "reverse", "given", "resolution", "possible", "lookup", "nature", "right", "forwards", "under", "process", "modular"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e60c36d02599c01c70fccd50d0fdec161eba2274", "node_type": "4", "metadata": {"file_path": "src/pages/resolution/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolution/index.mdx"}, "hash": "5a44f64c8b8f7893827820f4f4dd5f02eb146df4b9eb9f75a280a0795fa976f5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "41060d77-a1df-4a73-b72d-16357b19913a", "node_type": "1", "metadata": {"file_path": "src/pages/resolution/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolution/index.mdx", "header_path": "/Resolution/How to resolve/2. Query the Resolver/"}, "hash": "38c5591701caf34b5959208fdd7b17c0c5ceb4f8a452fc8b603b81c778e5dd7d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Reverse Resolution\n\nDue to the modular nature of how ENS is designed, it is also possible to lookup the \"primary name\" of an address.\nThis process actually uses forward resolution under the hood, you read that right - its just forwards resolution.\n\nTo look up the primary name of a given address you must do a resolver lookup for `addr.reverse` and then query the `name()` field on the resolver.\nThis name field returns the \"preferred\" name for the address. You should always follow up a reverse lookup with a forward lookup to verify that the resulting name points back to the original address. If the address doesn't match, display the address rather than the reversed name.\n\n```solidity\n/// @dev The starting point for all ENS resolution is the Registry\nENS ens = 0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e;\n\n/// @dev The node hash for \"addr.reverse\"\nbytes32 ADDR_REVERSE_NODE = 0x91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e2;\n\n/// @dev Returns the node hash for a given account's reverse records, `{address}.addr.reverse`\nfunction reverseNode(address addr) public pure returns (bytes32) {\n  return keccak256(\n      abi.encodePacked(ADDR_REVERSE_NODE, sha3HexAddress(addr))\n    );\n}\n\n/// @dev Get the reverse record for an address\nfunction getReverseRecord(address addr) public view returns (string) {\n    bytes32 reverseNodeHash = reverseNode(addr);\n\n    // Get the resolver for the reverse node\n    Resolver resolver = ens.resolver(reverseNodeHash);\n\n    // Get the address's preferred name\n    return resolver.name(reverseNodeHash);\n}\n```\n\n:::info\n**Important**: The client MUST perform a forward resolution on a user's reverse record to verify the address matches the one you are looking up. The example above does not perform this verification.\n:::\n\nPlease note that many libraries already have functionality to do this, you can read more about it in the [Getting a Primary Name](/web/reverse) section.", "mimetype": "text/plain", "start_char_idx": 2991, "end_char_idx": 4924, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "97d81078-226c-4841-ba5a-753b2457e085": {"__data__": {"id_": "97d81078-226c-4841-ba5a-753b2457e085", "embedding": null, "metadata": {"file_path": "src/pages/resolution/names.mdx", "file_name": "names.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolution/names.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/resolution/names.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["stored", "protocol", "directly", "important", "interacting", "processing", "handle", "readable", "undergoes", "their", "there", "recommendations", "steps", "names", "human"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "159e51777ec2abedc5ccc951ec251d17f7c7cc98", "node_type": "4", "metadata": {"file_path": "src/pages/resolution/names.mdx", "file_name": "names.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolution/names.mdx"}, "hash": "eb9651fb9047a6f61657166fd46fcba2f87cd2f2e0a33f2a9cbb735a0372092f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "079d5c87-1a16-4564-84d9-cd2001110944", "node_type": "1", "metadata": {"header_path": "/Name Processing [Normalization and recommendations for how to handle names]/"}, "hash": "05004b3c45bfebe8bc1bcf772366109d7f4aacf37bf44d5416215a6805d7deb3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Name Processing [Normalization and recommendations for how to handle names]\n\nWhen interacting with the ENS protocol smart-contracts directly it is important to note that names are not stored in their human readable format.\nIn fact there are a few steps a name undergoes before it can be used by a smart-contract.\n\nWhen building a dApp most of the time you don't have to worry about name processing, as most [libraries](/web/libraries) will handle this for you. ## Name Normalization\n\nNormalization is the process of canonicalizing a name before running it through the [Namehash](#namehash) algorithm. It is important to always normalize all input, because even one little difference (like a capital vs lowercase character) will cause the namehash to be completely different.\n\nFor example, `NaMe.EtH` normalizes to `name.eth`. This ensures that the correct Registry node is used, no matter how the user types in the name.\n\nENS names are validated and normalized using the [ENSIP-15](/ensip/15) normalization algorithm.\n\nPreviously, [UTS-46](https://www.unicode.org/reports/tr46/) was used, but that is insufficient for emoji sequences. Correct emoji processing is only possible with [UTS-51](https://www.unicode.org/reports/tr51/). The [ENSIP-15](/ensip/15) normalization algorithm draws from those older Unicode standards, but also adds many other validation rules to prevent common spoofing techniques like inserting zero-width characters, or using confusable (look-alike) characters. See here for additional discussion on this: [Homogylphs](https://support.ens.domains/en/articles/7901658-homoglyphs)\n\nA standard implementation of the algorithm is available at [@adraffy/ens-normalize](https://github.com/adraffy/ens-normalize.js). This library is used under the hood in [viem](https://viem.sh/docs/ens/utilities/normalize), [ENSjs](https://github.com/ensdomains/ensjs/blob/main/packages/ensjs/src/utils/normalise.ts#L27), and others.\n\n```js\nimport { normalize } from 'viem/ens'\n\n// Uses @adraffy/ens-normalize under the hood\n\nconst normalized = normalize('RaFFY\ud83d\udeb4\u200d\u2642\ufe0f.eTh')\n// => \"raffy\ud83d\udeb4\u200d\u2642.eth\"\n```\n\nIf the name was not able to be normalized, then that method will throw an error. A name is valid if it is able to be normalized.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 462, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0fead943-ca0f-4992-9af2-ad059124df07": {"__data__": {"id_": "0fead943-ca0f-4992-9af2-ad059124df07", "embedding": null, "metadata": {"file_path": "src/pages/resolution/names.mdx", "file_name": "names.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolution/names.mdx", "header_path": "/Name Processing [Normalization and recommendations for how to handle names]/", "customer_id": 1, "source_url": "src/pages/resolution/names.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["automatically", "stored", "typically", "string", "libraries", "hashed", "instead", "attempt", "namehash", "create", "optimize", "before", "referred", "value", "names"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "159e51777ec2abedc5ccc951ec251d17f7c7cc98", "node_type": "4", "metadata": {"file_path": "src/pages/resolution/names.mdx", "file_name": "names.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolution/names.mdx"}, "hash": "eb9651fb9047a6f61657166fd46fcba2f87cd2f2e0a33f2a9cbb735a0372092f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "079d5c87-1a16-4564-84d9-cd2001110944", "node_type": "1", "metadata": {"file_path": "src/pages/resolution/names.mdx", "file_name": "names.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolution/names.mdx", "header_path": "/Name Processing [Normalization and recommendations for how to handle names]/"}, "hash": "c806c90f8f4b95a2693273439c90ac2352cffa99dff5cbf1478da622e523bce2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "540e0dec-4b2b-4f83-a399-0612df44d809", "node_type": "1", "metadata": {"header_path": "/Name Processing [Normalization and recommendations for how to handle names]/Namehash/"}, "hash": "27f80d2eb859b56aef24b1ea4e82f20df85b61bef3221bafd5e1029de676ff00", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Namehash\n\n:::note\nYou **MUST** [normalize](#normalize) a name before you attempt to create a namehash! If you don't, then the hash you get may be incorrect. Some libraries like [ensjs](https://github.com/ensdomains/ensjs) will automatically do this for you.\n:::\n\nIn the core ENS registry, names are stored as a hash instead of the raw string to optimize for gas, performance, and more. This hashed value is typically referred to as a `node`. The node is a hex-encoded 32-byte value that is derived from the name using the `namehash` algorithm defined in [ENSIP-1](/ensip/1).\n\nNamehash is a recursive algorithm that hashes each part of the name, then hashes the results together. Because recursive functions aren't very efficient in Solidity, it's usually best to derive the namehash offchain and pass to it a contract. Luckily, there are libraries that do this for us.\n\n:::code-group\n\n```tsx [Viem]\n// https://viem.sh/docs/ens/utilities/namehash\nimport { namehash, normalize } from 'viem/ens'\n\nconst normalizedName = normalize('name.eth')\nconst node = namehash(normalizedName)\n```\n\n```ts [Ethers.js]\n// https://docs.ethers.org/v6/api/hashing/#namehash\nimport { ensNormalize, namehash } from 'ethers/hash'\n\nconst normalizedName = ensNormalize('name.eth')\nconst node = namehash(normalizedName)\n```\n\n```python [ens-namehash-py]\n# https://github.com/ConsenSysMesh/ens-namehash-py\nfrom namehash import namehash\n\nnode = namehash('name.eth')\n```\n\n```rust [namehash-rust]\n// https://github.com/InstateDev/namehash-rust\nfn main() {\n  let node = &namehash(\"name.eth\");\n  let s = hex::encode(&node);\n}\n```\n\n```solidity [Solidity]\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@ensdomains/ens-contracts/contracts/utils/NameEncoder.sol\";\n\ncontract MyContract {\n    function namehash(string calldata name) public pure returns (bytes32) {\n        (, bytes32 node) = NameEncoder.dnsEncodeName(name);\n        return node;\n    }\n}\n```\n\n:::", "mimetype": "text/plain", "start_char_idx": 2234, "end_char_idx": 4178, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "540e0dec-4b2b-4f83-a399-0612df44d809": {"__data__": {"id_": "540e0dec-4b2b-4f83-a399-0612df44d809", "embedding": null, "metadata": {"file_path": "src/pages/resolution/names.mdx", "file_name": "names.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolution/names.mdx", "header_path": "/Name Processing [Normalization and recommendations for how to handle names]/Namehash/", "customer_id": 1, "source_url": "src/pages/resolution/names.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["special", "works", "algorithm", "namehash", "recursive", "originally", "EIP-137", "0x0000000000000000000000000000000000000000000000000000000000000000", "until", "defined", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "159e51777ec2abedc5ccc951ec251d17f7c7cc98", "node_type": "4", "metadata": {"file_path": "src/pages/resolution/names.mdx", "file_name": "names.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolution/names.mdx"}, "hash": "eb9651fb9047a6f61657166fd46fcba2f87cd2f2e0a33f2a9cbb735a0372092f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0fead943-ca0f-4992-9af2-ad059124df07", "node_type": "1", "metadata": {"file_path": "src/pages/resolution/names.mdx", "file_name": "names.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolution/names.mdx", "header_path": "/Name Processing [Normalization and recommendations for how to handle names]/"}, "hash": "a95f0700817e5b9c8597d9ae6a0eb3ad9b13a3604ef4436986f020c9d93017fc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8fe6cac8-dd3a-4087-8fd6-40844b0d3407", "node_type": "1", "metadata": {"header_path": "/Name Processing [Normalization and recommendations for how to handle names]/Namehash/"}, "hash": "dd784a1952f9b94c18da57eb83c9fe2467e40547a01d0c2f00ae3831b5f4b394", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Algorithm\n\nThe specification for the namehash algorithm was originally defined in [EIP-137](https://eips.ethereum.org/EIPS/eip-137#namehash-algorithm) (same as [ENSIP-1](/ensip/1)).\n\nIt's a recursive algorithm that works its way down until you hit the root domain. For `ens.eth`, the algorithm works like so:\n\n```\nnamehash('ens.eth') = keccak256(namehash('eth') + labelhash('ens'))\nnamehash('eth') = keccak256(namehash('') + labelhash('eth'))\nnamehash('') = 0x0000000000000000000000000000000000000000000000000000000000000000\n```\n\nThat last line is a special case: The namehash for an empty string (representing the root domain) is 32 null bytes.\n\nIf you plug everything in above, you'll end up with the final namehash value:\n\n```\nnamehash('') = 0x0000000000000000000000000000000000000000000000000000000000000000\n\nlabelhash('eth') = keccak256('eth') = 0x4f5b812789fc606be1b3b16908db13fc7a9adf7ca72641f84d75b47069d3d7f0\n\nnamehash('eth') = keccak256(namehash('') + labelhash('eth')) = keccak256(0x00000000000000000000000000000000000000000000000000000000000000004f5b812789fc606be1b3b16908db13fc7a9adf7ca72641f84d75b47069d3d7f0) = 0x93cdeb708b7545dc668eb9280176169d1c33cfd8ed6f04690a0bcc88a93fc4ae\n\nlabelhash('ens') = keccak256('ens') = 0x5cee339e13375638553bdf5a6e36ba80fb9f6a4f0783680884d92b558aa471da\n\nnamehash('ens.eth') = keccak256(namehash('eth') + labelhash('ens')) = keccak256(0x93cdeb708b7545dc668eb9280176169d1c33cfd8ed6f04690a0bcc88a93fc4ae5cee339e13375638553bdf5a6e36ba80fb9f6a4f0783680884d92b558aa471da) = 0x4e34d3a81dc3a20f71bbdf2160492ddaa17ee7e5523757d47153379c13cb46df\n\n```\n\nThis brings us to the final node for ens.eth: `0x4e34d3a81dc3a20f71bbdf2160492ddaa17ee7e5523757d47153379c13cb46df`", "mimetype": "text/plain", "start_char_idx": 4180, "end_char_idx": 5885, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8fe6cac8-dd3a-4087-8fd6-40844b0d3407": {"__data__": {"id_": "8fe6cac8-dd3a-4087-8fd6-40844b0d3407", "embedding": null, "metadata": {"file_path": "src/pages/resolution/names.mdx", "file_name": "names.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolution/names.mdx", "header_path": "/Name Processing [Normalization and recommendations for how to handle names]/Namehash/", "customer_id": 1, "source_url": "src/pages/resolution/names.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["typically", "ethereum", "nodes", "address", "reverse", "these", "claimed", "registry", "public", "represents", "without", "where"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "159e51777ec2abedc5ccc951ec251d17f7c7cc98", "node_type": "4", "metadata": {"file_path": "src/pages/resolution/names.mdx", "file_name": "names.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolution/names.mdx"}, "hash": "eb9651fb9047a6f61657166fd46fcba2f87cd2f2e0a33f2a9cbb735a0372092f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "540e0dec-4b2b-4f83-a399-0612df44d809", "node_type": "1", "metadata": {"file_path": "src/pages/resolution/names.mdx", "file_name": "names.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolution/names.mdx", "header_path": "/Name Processing [Normalization and recommendations for how to handle names]/Namehash/"}, "hash": "131dcaf613533a95704f28315ef98458b2b3a8c4bd961ae0527f080b8b7ff763", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "384268df-4581-4f7c-8667-4c349abadec1", "node_type": "1", "metadata": {"header_path": "/Name Processing [Normalization and recommendations for how to handle names]/"}, "hash": "29bd8f4b15010bbe11ffee3d022f2d549f9c47630444c9b4630cb42defab46c7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Reverse Nodes\n\nThe [Reverse Node](/terminology#reverse-node) is a node in the Registry that can be claimed for any Ethereum account. The name this node represents is `[addr].addr.reverse`, where `[addr]` is the Ethereum public address (lowercase, without the \"0x\"). These reverse nodes are typically used to set a [Primary Name](#primary-name) for an account.\n\nTo generate the namehash for a reverse node:\n\n- Take the input address and:\n  - Remove the \"0x\" at the beginning\n  - Convert all characters to lowercase\n- Add `.addr.reverse` to the end\n- Run this result through the namehash algorithm\n\nFor example, for address `0x481f50a5BdcCC0bc4322C4dca04301433dED50f0`, the name for the reverse node is:\n\n- `481f50a5bdccc0bc4322c4dca04301433ded50f0.addr.reverse`\n\nAnd the resulting namehash for the reverse node is:\n\n- `0x58354ffdde6ac279f3a058aafbeeb14059bcb323a248fb338ee41f95fa544c86`", "mimetype": "text/plain", "start_char_idx": 5887, "end_char_idx": 6776, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "384268df-4581-4f7c-8667-4c349abadec1": {"__data__": {"id_": "384268df-4581-4f7c-8667-4c349abadec1", "embedding": null, "metadata": {"file_path": "src/pages/resolution/names.mdx", "file_name": "names.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolution/names.mdx", "header_path": "/Name Processing [Normalization and recommendations for how to handle names]/", "customer_id": 1, "source_url": "src/pages/resolution/names.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["require", "labelhash", "single", "since", "attempt", "registering", "places", "create", "supports", "before", "example", "where", "label"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "159e51777ec2abedc5ccc951ec251d17f7c7cc98", "node_type": "4", "metadata": {"file_path": "src/pages/resolution/names.mdx", "file_name": "names.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolution/names.mdx"}, "hash": "eb9651fb9047a6f61657166fd46fcba2f87cd2f2e0a33f2a9cbb735a0372092f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8fe6cac8-dd3a-4087-8fd6-40844b0d3407", "node_type": "1", "metadata": {"file_path": "src/pages/resolution/names.mdx", "file_name": "names.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolution/names.mdx", "header_path": "/Name Processing [Normalization and recommendations for how to handle names]/Namehash/"}, "hash": "e810ad8afbdc926dee860286f1c2d8718352a86cca708338382d3ab44bae5f7a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "72dfd693-3fe6-47d8-8c29-72b1427c8a1a", "node_type": "1", "metadata": {"header_path": "/Name Processing [Normalization and recommendations for how to handle names]/"}, "hash": "b235668f945a0f736a796a9b47c90834e59c084973f5d935d75fc01f0db86002", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Labelhash\n\n:::note\nYou **MUST** [normalize](#normalize) a name before you attempt to create a labelhash! If you don't, then the hash you get may be incorrect.\n:::\n\nLabelhash is the Keccak-256 hash of a single label (e.g. `name` in `name.eth`), used in places that don't require the full name.\n\nOne example of where labelhash is used is in the [BaseRegistar](/registry/eth), since it only supports registering 2LDs (second-level domains, like `name.eth`) and not 3LDs+ (e.g. `sub.name.eth`). The token ID of a second-level .eth name in the BaseRegistar is the uint256 of the labelhash.\n\n:::code-group\n\n```tsx [Viem]\n// https://viem.sh/docs/ens/utilities/labelhash\nimport { labelhash, normalize } from 'viem/ens'\n\nconst normalizedLabel = normalize('label')\nconst hash = labelhash(normalizedLabel)\n```\n\n```tsx [Ethers]\n// https://docs.ethers.org/v6/api/crypto/#keccak256\nimport { keccak256 } from 'ethers/crypto'\nimport { ensNormalize } from 'ethers/hash'\nimport { toUtf8Bytes } from 'ethers/utils'\n\nconst normalizedLabel = ensNormalize('label')\nconst labelhash = keccak256(toUtf8Bytes(normalizedLabel))\n```\n\n```solidity [Solidity]\nstring constant label = \"label\";\nbytes32 constant labelhash = keccak256(bytes(label));\n```\n\n:::", "mimetype": "text/plain", "start_char_idx": 6778, "end_char_idx": 8005, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "72dfd693-3fe6-47d8-8c29-72b1427c8a1a": {"__data__": {"id_": "72dfd693-3fe6-47d8-8c29-72b1427c8a1a", "embedding": null, "metadata": {"file_path": "src/pages/resolution/names.mdx", "file_name": "names.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolution/names.mdx", "header_path": "/Name Processing [Normalization and recommendations for how to handle names]/", "customer_id": 1, "source_url": "src/pages/resolution/names.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["those", "binary", "incorrect", "domain", "length", "along", "which", "before", "format", "encodes", "encoding", "bytes", "contract", "label"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "159e51777ec2abedc5ccc951ec251d17f7c7cc98", "node_type": "4", "metadata": {"file_path": "src/pages/resolution/names.mdx", "file_name": "names.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolution/names.mdx"}, "hash": "eb9651fb9047a6f61657166fd46fcba2f87cd2f2e0a33f2a9cbb735a0372092f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "384268df-4581-4f7c-8667-4c349abadec1", "node_type": "1", "metadata": {"file_path": "src/pages/resolution/names.mdx", "file_name": "names.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolution/names.mdx", "header_path": "/Name Processing [Normalization and recommendations for how to handle names]/"}, "hash": "3ccfb718f59531ef8a40f8218b56e20b5b3b1457a83b92e0726a4ea71ed4a7e9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3afb3b43-a789-4b38-8111-df7666f22db6", "node_type": "1", "metadata": {"header_path": "/Name Processing [Normalization and recommendations for how to handle names]/DNS Encoding/"}, "hash": "4a53cce77d71df4ab2e153873dde52bb3706a48cefcbc105de79f9223dab8838", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## DNS Encoding\n\n:::note\nYou **MUST** [normalize](#normalize) a name before you DNS-encode it! If you\ndon't, then when you pass those DNS-encoded bytes into a contract method,\nincorrect namehashes/labelhashes may be derived.\n:::\n\nThis is a binary format for domain names, which encodes the length of each label along with the label itself. It is used by some of the ENS contracts, such as when wrapping names in the [Name Wrapper](/wrapper/overview) or resolving data with [ENSIP-10](/ensip/10).\n\n:::code-group\n\n```tsx [Viem]\n// https://viem.sh/docs/ens/utilities/labelhash\nimport { packetToBytes } from 'viem/ens'\nimport { toHex } from 'viem/utils'\n\nconst name = 'name.eth'\nconst dnsEncodedName = toHex(packetToBytes(name))\n```\n\n```tsx [Ethers]\n// https://docs.ethers.org/v6/api/hashing/#dnsEncode\nimport { dnsEncode } from 'ethers/lib/utils'\n\nconst dnsEncodedName = dnsEncode('name.eth')\n```\n\n```solidity [Solidity]\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@ensdomains/ens-contracts/contracts/utils/NameEncoder.sol\";\n\ncontract MyContract {\n    function dnsEncode(string calldata name) public pure returns (bytes memory) {\n        (bytes memory dnsEncodedName,) = NameEncoder.dnsEncodeName(name);\n        return dnsEncodedName;\n    }\n}\n```\n\n:::", "mimetype": "text/plain", "start_char_idx": 8007, "end_char_idx": 9277, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3afb3b43-a789-4b38-8111-df7666f22db6": {"__data__": {"id_": "3afb3b43-a789-4b38-8111-df7666f22db6", "embedding": null, "metadata": {"file_path": "src/pages/resolution/names.mdx", "file_name": "names.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolution/names.mdx", "header_path": "/Name Processing [Normalization and recommendations for how to handle names]/DNS Encoding/", "customer_id": 1, "source_url": "src/pages/resolution/names.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["denote", "final", "split", "algorithm", "length", "first", "encoded", "labels", "bytes", "label"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "159e51777ec2abedc5ccc951ec251d17f7c7cc98", "node_type": "4", "metadata": {"file_path": "src/pages/resolution/names.mdx", "file_name": "names.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolution/names.mdx"}, "hash": "eb9651fb9047a6f61657166fd46fcba2f87cd2f2e0a33f2a9cbb735a0372092f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "72dfd693-3fe6-47d8-8c29-72b1427c8a1a", "node_type": "1", "metadata": {"file_path": "src/pages/resolution/names.mdx", "file_name": "names.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolution/names.mdx", "header_path": "/Name Processing [Normalization and recommendations for how to handle names]/"}, "hash": "7e887e003000fdc6b0d82b0eab6ef5dd2a79bd96d24785169397077bf147441a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Algorithm\n\nTo DNS-encode a name, first split the name into labels (delimited by `.`). Then for each label from left-to-right:\n\n- One byte to denote the length of the label\n- The UTF-8 encoded bytes for the label\n- If this is the last label, then one final NUL (`0x00`) byte.\n\nFor example, to DNS-encode `my.name.eth`:\n\n- `0x02` (length of the label \"my\")\n- `0x6D79` (UTF-8 encoded bytes of \"my\")\n- `0x04` (length of the label \"name\")\n- `0x6E616D65` (UTF-8 encoded bytes of \"name\")\n- `0x03` (length of the label \"eth\")\n- `0x657468` (UTF-8 encoded bytes of \"eth\")\n- `0x00` (end of name marker)\n\nFinal result: `0x026d79046e616d650365746800`\n\n:::note\nSince the length of each label is stored in a single byte, that means that with this DNS-encoding scheme, each label is limited to being 255 UTF-8 encoded bytes in length. Because of this, names with longer labels cannot be wrapped in the [Name Wrapper](/wrapper/overview), as that contract uses the DNS-encoded name.\n:::", "mimetype": "text/plain", "start_char_idx": 9279, "end_char_idx": 10251, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1b1ff46f-680b-4814-b633-d23c1de28e29": {"__data__": {"id_": "1b1ff46f-680b-4814-b633-d23c1de28e29", "embedding": null, "metadata": {"file_path": "src/pages/resolvers/ccip-read.mdx", "file_name": "ccip-read.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/ccip-read.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/resolvers/ccip-read.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["offchain", "enables", "repository", "learn", "EIP-3668", "about", "import", "gateway", "embedlink", "properties", "resolvers", "trust"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b2f0b0b2bb02b617f046ca9b6a6fd877c7fe7ae1", "node_type": "4", "metadata": {"file_path": "src/pages/resolvers/ccip-read.mdx", "file_name": "ccip-read.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/ccip-read.mdx"}, "hash": "39a85c58e76bb61d38af4fc592f0128ee2c21c21da4704055667a94bccaaed49", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1df26b61-62ab-4be4-97f6-769b26028fef", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "2cfdb86582b685cf721ef672062d7a443fcb7ab9ff1ffd882eb075a145a9c719", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: Learn about how CCIP Read enables Offchain ENS Resolvers, how a gateway works, trust assumptions, and more.\n---\n\nimport { EmbedLink } from '../../components/EmbedLink'\nimport { Properties } from '../../components/Properties'\nimport { Repository } from '../../components/Repository'\nimport { Card } from '../../components/ui/Card' # Offchain / L2 Resolvers\n\nThe source of truth for a name and its subdomains does not always have to be onchain or on Ethereum L1 at all. By leveraging [EIP-3668](https://eips.ethereum.org/EIPS/eip-3668) (CCIP Read) in a [Resolver](/resolvers/quickstart), developers can effectively defer resolution to an L2 or offchain API.\n\n<Card className=\"hidden items-center justify-center gap-4 p-4 md:flex\">\n  <div className=\"space-y-1 p-2 text-center leading-none\">\n    <div className=\"font-bold\">Name</div>\n    <div>jesse.cb.id</div>\n  </div>\n  <div>\u27a1\ufe0f</div>\n  <div className=\"space-y-1 p-2 text-center leading-none\">\n    <div className=\"font-bold\">Resolver</div>\n    <div>0x1934...BE56</div>\n  </div>\n  <div>\u27a1\ufe0f</div>\n  <div className=\"space-y-1 p-2 text-center leading-none\">\n    <div className=\"font-bold\">Gateway</div>\n    <div>api.coinbase.com</div>\n  </div>\n  <div>\u27a1\ufe0f</div>\n  <div className=\"space-y-1 p-2 text-center leading-none\">\n    <div className=\"font-bold\">Address</div>\n    <div>0x8491...8bf1</div>\n  </div>\n</Card>", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 346, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "de7224ae-1b0a-4839-811b-4dacfaa8abfb": {"__data__": {"id_": "de7224ae-1b0a-4839-811b-4dacfaa8abfb", "embedding": null, "metadata": {"file_path": "src/pages/resolvers/ccip-read.mdx", "file_name": "ccip-read.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/ccip-read.mdx", "header_path": "/Offchain / L2 Resolvers/", "customer_id": 1, "source_url": "src/pages/resolvers/ccip-read.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["throw", "offchain", "error", "address", "bytes4", "contracts", "defines", "smart", "trigger", "standard", "chain", "interoperability", "bytes", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b2f0b0b2bb02b617f046ca9b6a6fd877c7fe7ae1", "node_type": "4", "metadata": {"file_path": "src/pages/resolvers/ccip-read.mdx", "file_name": "ccip-read.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/ccip-read.mdx"}, "hash": "39a85c58e76bb61d38af4fc592f0128ee2c21c21da4704055667a94bccaaed49", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1df26b61-62ab-4be4-97f6-769b26028fef", "node_type": "1", "metadata": {"file_path": "src/pages/resolvers/ccip-read.mdx", "file_name": "ccip-read.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/ccip-read.mdx", "header_path": "/"}, "hash": "098a28cbbe085aa03156ac0e4574b1bf12b010cf83213189faf5000e0aa21c55", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5dce8023-a5b4-463d-bd84-f5d338bb1456", "node_type": "1", "metadata": {"header_path": "/Offchain / L2 Resolvers/How does CCIP Read work?/"}, "hash": "ab868c6b1e263c623ded38b4e6293030069e220abd03eb3499960aa73abe6115", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## How does CCIP Read work?\n\nCCIP Read (Cross Chain Interoperability Protocol) is a specification that defines a standard error smart contracts can throw if they want to trigger an offchain HTTP request.\n\n```solidity\nerror OffchainLookup(\n    address sender,\n    string[] urls,\n    bytes callData,\n    bytes4 callbackFunction,\n    bytes extraData\n)\n```\n\nWhen a contract reverts with the `OffchainLookup` error, it is up to clients (wagmi, viem, ethers, etc.) to handle it appropriatrely. Thankfully, many clients support CCIP Read out of the box so it's transparent to application developers in most cases.", "mimetype": "text/plain", "start_char_idx": 1371, "end_char_idx": 1977, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5dce8023-a5b4-463d-bd84-f5d338bb1456": {"__data__": {"id_": "5dce8023-a5b4-463d-bd84-f5d338bb1456", "embedding": null, "metadata": {"file_path": "src/pages/resolvers/ccip-read.mdx", "file_name": "ccip-read.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/ccip-read.mdx", "header_path": "/Offchain / L2 Resolvers/How does CCIP Read work?/", "customer_id": 1, "source_url": "src/pages/resolvers/ccip-read.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ethereum", "calls", "offchain", "developers", "storing", "instead", "types", "store", "resolution", "networks", "using", "their", "client", "resolve", "steps"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b2f0b0b2bb02b617f046ca9b6a6fd877c7fe7ae1", "node_type": "4", "metadata": {"file_path": "src/pages/resolvers/ccip-read.mdx", "file_name": "ccip-read.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/ccip-read.mdx"}, "hash": "39a85c58e76bb61d38af4fc592f0128ee2c21c21da4704055667a94bccaaed49", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "de7224ae-1b0a-4839-811b-4dacfaa8abfb", "node_type": "1", "metadata": {"file_path": "src/pages/resolvers/ccip-read.mdx", "file_name": "ccip-read.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/ccip-read.mdx", "header_path": "/Offchain / L2 Resolvers/"}, "hash": "7f7dab0b41fe833af1d0ebc1992e04be8499d186138b6eb8970f5b9ea35d0fec", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d30cbf3d-4dd3-4c58-a6d3-cc82cdb55e8a", "node_type": "1", "metadata": {"header_path": "/Offchain / L2 Resolvers/"}, "hash": "b0c87748f17734071cc21635add74291384ff908918cc26f54f860080eb98b6b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### How does ENS use CCIP Read?\n\nCCIP Read can be used to make ENS name resolution more flexible. Instead of storing all data on Ethereum L1, developers can [implement CCIP Read in a Resolver](/resolvers/writing#offchain-resolvers) to store data (subnames, records, etc.) on L2 networks or even an offchain database.\n\n![](/img/ccip-read-diagram-1.png)\n\nTo resolve an offchain/L2 name using CCIP Read, the steps are as follows:\n\n1. A user types \"example.eth\" into their wallet.\n2. The wallet's client calls `resolve()` on example.eth's Resolver.\n3. The Resolver reverts with an `OffchainLookup` error.\n4. The client makes a request to the gateway URL specified in the error with the calldata from the error.\n5. The gateway processes the request and returns data to the client. This is where the data is fetched from L2 or an offchain database.\n6. The client calls the callback function specified in the error with the data returned from the gateway, which usually performs some sort of validation.\n7. If the callback function validates the data, the client returns the result to the user.\n\nWhile this might sound complex, it all happens under the hood and is completely transparent to application developers.", "mimetype": "text/plain", "start_char_idx": 1979, "end_char_idx": 3186, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d30cbf3d-4dd3-4c58-a6d3-cc82cdb55e8a": {"__data__": {"id_": "d30cbf3d-4dd3-4c58-a6d3-cc82cdb55e8a", "embedding": null, "metadata": {"file_path": "src/pages/resolvers/ccip-read.mdx", "file_name": "ccip-read.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/ccip-read.mdx", "header_path": "/Offchain / L2 Resolvers/", "customer_id": 1, "source_url": "src/pages/resolvers/ccip-read.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["powered", "offchain", "reverts", "returns", "found", "subname", "resolver", "gateway", "client", "example", "directs", "names"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b2f0b0b2bb02b617f046ca9b6a6fd877c7fe7ae1", "node_type": "4", "metadata": {"file_path": "src/pages/resolvers/ccip-read.mdx", "file_name": "ccip-read.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/ccip-read.mdx"}, "hash": "39a85c58e76bb61d38af4fc592f0128ee2c21c21da4704055667a94bccaaed49", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5dce8023-a5b4-463d-bd84-f5d338bb1456", "node_type": "1", "metadata": {"file_path": "src/pages/resolvers/ccip-read.mdx", "file_name": "ccip-read.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/ccip-read.mdx", "header_path": "/Offchain / L2 Resolvers/How does CCIP Read work?/"}, "hash": "e7e81c66fac10d4e34676c44b3abbb303f8ecb64878727cdf72aefe40a41cb3f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6d60dc1b-ace4-4326-8a4e-ae413861a951", "node_type": "1", "metadata": {"header_path": "/Offchain / L2 Resolvers/"}, "hash": "748282a53a9d1447470a0d7dfb37a305aee638b6f71064f8b9c376196ae8c8fb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Offchain Subname Example\n\nAn example of offchain ENS names powered by CCIP Read can be found at [offchain.ens.gregskril.com](https://offchain.ens.gregskril.com/).\nThe name [offchaindemo.eth](https://ens.app/offchaindemo.eth) with Resolver [0x35b9...E237](https://etherscan.io/address/0x35b920d4329C5797727Af8b15358b43509e5E237#code), reverts with `OffchainLookup` and directs the client to a Gateway URL.\n\nThe Gateway returns the relevant information from an offchain database, signed by a trusted private key which the smart contract can verify. This prevents a compromised Gateway from returning false information.\n\n<Repository\n  src=\"gskril/ens-offchain-registrar\"\n  description=\"Offchain ENS Subnames\"\n/>", "mimetype": "text/plain", "start_char_idx": 3188, "end_char_idx": 3899, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6d60dc1b-ace4-4326-8a4e-ae413861a951": {"__data__": {"id_": "6d60dc1b-ace4-4326-8a4e-ae413861a951", "embedding": null, "metadata": {"file_path": "src/pages/resolvers/ccip-read.mdx", "file_name": "ccip-read.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/ccip-read.mdx", "header_path": "/Offchain / L2 Resolvers/", "customer_id": 1, "source_url": "src/pages/resolvers/ccip-read.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["exactly", "stored", "offchain", "process", "perspective", "differences", "callback", "resolvers", "gateway", "implementation", "resolver", "names", "resolving"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b2f0b0b2bb02b617f046ca9b6a6fd877c7fe7ae1", "node_type": "4", "metadata": {"file_path": "src/pages/resolvers/ccip-read.mdx", "file_name": "ccip-read.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/ccip-read.mdx"}, "hash": "39a85c58e76bb61d38af4fc592f0128ee2c21c21da4704055667a94bccaaed49", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d30cbf3d-4dd3-4c58-a6d3-cc82cdb55e8a", "node_type": "1", "metadata": {"file_path": "src/pages/resolvers/ccip-read.mdx", "file_name": "ccip-read.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/ccip-read.mdx", "header_path": "/Offchain / L2 Resolvers/"}, "hash": "a89e9127bc983d5b14aae6c6bc6657a2a2c9c3025ca735fbcf720d1ebfd5b3de", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "90bba9fc-fba7-4d05-96b4-a05c1110ac32", "node_type": "1", "metadata": {"header_path": "/Offchain / L2 Resolvers/"}, "hash": "4e1658f71dc3740bacb84386b977e33906d94bf553999b6de978830b8d395bda", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Offchain vs L2 Resolvers\n\nFrom the perspective of the L1 Resolver contract, the process of resolving an L2 name is exactly the same as resolving on offchain name. The differences come from the Gateway implementation and the Resolver's callback function.\n\nFor names that are stored offchain like the example above, the Gateway would read from a normal web2 database and the Resolver's callback function would simply verify the Gateway operator's signature.\n\nFor names that are stored on L2, the Gateway would make an RPC call to the relevant L2 and the Resolver's callback function would ideally verify the response by using the L2's state roon on L1 (this assumes knowledge of how L2's work).\n\nTo implement trustless L2 resolution, developers should use a solution like [Unruggable Gateways](https://gateway-docs.unruggable.com/).\n\n<Repository\n  src=\"unruggable-labs/unruggable-gateways\"\n  description=\"Solution for fetching proofs of data from rollup chains and verifying that data on Layer 1 Ethereum.\"\n/>", "mimetype": "text/plain", "start_char_idx": 3901, "end_char_idx": 4911, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "90bba9fc-fba7-4d05-96b4-a05c1110ac32": {"__data__": {"id_": "90bba9fc-fba7-4d05-96b4-a05c1110ac32", "embedding": null, "metadata": {"file_path": "src/pages/resolvers/ccip-read.mdx", "file_name": "ccip-read.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/ccip-read.mdx", "header_path": "/Offchain / L2 Resolvers/", "customer_id": 1, "source_url": "src/pages/resolvers/ccip-read.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["implementing", "decoding", "writing", "offchain", "calldata", "specified", "error", "responsible", "EIP-3668", "returning", "gateway", "endpoint", "implements", "relevant"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b2f0b0b2bb02b617f046ca9b6a6fd877c7fe7ae1", "node_type": "4", "metadata": {"file_path": "src/pages/resolvers/ccip-read.mdx", "file_name": "ccip-read.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/ccip-read.mdx"}, "hash": "39a85c58e76bb61d38af4fc592f0128ee2c21c21da4704055667a94bccaaed49", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6d60dc1b-ace4-4326-8a4e-ae413861a951", "node_type": "1", "metadata": {"file_path": "src/pages/resolvers/ccip-read.mdx", "file_name": "ccip-read.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/ccip-read.mdx", "header_path": "/Offchain / L2 Resolvers/"}, "hash": "a2ee4a7d313efc77e1aecdf720032b72d777dfd6abb4fa15cc356a4e654e8ae0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "db8b1377-2a0d-4a1f-915f-a8706dc96ef4", "node_type": "1", "metadata": {"header_path": "/Offchain / L2 Resolvers/Writing a CCIP Read Gateway/"}, "hash": "45e65e824a708298b60b6856b532560df998d0b416df8b224e5847928c270d17", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Writing a CCIP Read Gateway\n\nA gateway is an offchain API endpoint that implements the [Gateway Interface](https://eips.ethereum.org/EIPS/eip-3668#gateway-interface) specified in EIP-3668. It is responsible for decoding the calldata from an `OffchainLookup` error and returning a relevant response. ### Implementing the Endpoint\n\nYour gateway must implement either a `GET` or `POST` endpoint with `{sender}` and `{data}` parameters, and be stored in the implementing smart contract. The `OffchainLookup` error will include this URL, which is how the client knows where to send the request.\n\n:::code-group\n\n```yaml [POST]\n// POST if URL does not include '{data}' parameter\nURL: https://example.com/gateway\nMethod: POST\nBody:\n  sender: \"0x...\"\n  data: \"0x...\"\n```\n\n```yaml [GET]\n// GET if URL includes '{data}' parameter\nURL: https://example.com/gateway/{sender}/{data}.json\nMethod: GET\n```\n\n:::\n\n<Properties>\n  <Properties.Property name=\"sender\" type=\"address\">\n    Lowercased address of the contract reverting with the `OffchainLookup`\n    error.\n  </Properties.Property>\n  <Properties.Property name=\"data\" type=\"bytes\">\n    0x prefixed bytes of the data passed to the `OffchainLookup` error.\n  </Properties.Property>\n</Properties>", "mimetype": "text/plain", "start_char_idx": 4913, "end_char_idx": 5214, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8313bdae-5fc0-4fe7-b332-1b02ea0a18f4": {"__data__": {"id_": "8313bdae-5fc0-4fe7-b332-1b02ea0a18f4", "embedding": null, "metadata": {"file_path": "src/pages/resolvers/ccip-read.mdx", "file_name": "ccip-read.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/ccip-read.mdx", "header_path": "/Offchain / L2 Resolvers/Writing a CCIP Read Gateway/", "customer_id": 1, "source_url": "src/pages/resolvers/ccip-read.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["decoding", "library", "abstract", "static", "return", "gateway", "doing", "implementation", "value", "example", "without", "basic"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b2f0b0b2bb02b617f046ca9b6a6fd877c7fe7ae1", "node_type": "4", "metadata": {"file_path": "src/pages/resolvers/ccip-read.mdx", "file_name": "ccip-read.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/ccip-read.mdx"}, "hash": "39a85c58e76bb61d38af4fc592f0128ee2c21c21da4704055667a94bccaaed49", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "db8b1377-2a0d-4a1f-915f-a8706dc96ef4", "node_type": "1", "metadata": {"file_path": "src/pages/resolvers/ccip-read.mdx", "file_name": "ccip-read.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/ccip-read.mdx", "header_path": "/Offchain / L2 Resolvers/Writing a CCIP Read Gateway/"}, "hash": "0dec36b74a0da114989fe430fedcc045a10804525e98371d2059c525bb08d81c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ca34f62d-ed6f-41df-9b30-b28e3b714740", "node_type": "1", "metadata": {"header_path": "/Offchain / L2 Resolvers/Writing a CCIP Read Gateway/"}, "hash": "4409908de1cdc4e23ba38aaa20b707e4befd7a40445108a818a5c8df83cb7582", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Example Gateway Implementation\n\nThe most basic gateway implementation is to return a static value without doing any signing. We even have a library [@ensdomains/ccip-read-router](http://github.com/ensdomains/ccip-read-router) to abstract decoding the calldata.\n\n<EmbedLink\n  title=\"Basic Gateway Implementation\"\n  href=\"https://github.com/ensdomains/docs/blob/master/functions/api/example/basic-gateway.ts\"\n/> ### Trust Assumptions\n\nAs explained in [Offchain vs L2 Resolvers](#offchain-vs-l2-resolvers), trust assumptions are up to the implementing developer and can range from fully trusted to full trustless.\n\nThe worst case scenario of a trusted implementation is that a malicious actor gains control of the gateway and can return false information.\n\nThe worst case scenario of a trustless implementation is that a malicious actor can take a gateway offline, but it can never return false data.", "mimetype": "text/plain", "start_char_idx": 6150, "end_char_idx": 6563, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "70353792-2001-4e58-9751-99ab517c9f34": {"__data__": {"id_": "70353792-2001-4e58-9751-99ab517c9f34", "embedding": null, "metadata": {"file_path": "src/pages/resolvers/ccip-read.mdx", "file_name": "ccip-read.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/ccip-read.mdx", "header_path": "/Offchain / L2 Resolvers/", "customer_id": 1, "source_url": "src/pages/resolvers/ccip-read.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["result", "writing", "offchain", "common", "testing", "implement", "information", "search", "return", "resolver", "relevant", "names", "manager", "configured"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b2f0b0b2bb02b617f046ca9b6a6fd877c7fe7ae1", "node_type": "4", "metadata": {"file_path": "src/pages/resolvers/ccip-read.mdx", "file_name": "ccip-read.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/ccip-read.mdx"}, "hash": "39a85c58e76bb61d38af4fc592f0128ee2c21c21da4704055667a94bccaaed49", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ca34f62d-ed6f-41df-9b30-b28e3b714740", "node_type": "1", "metadata": {"file_path": "src/pages/resolvers/ccip-read.mdx", "file_name": "ccip-read.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/ccip-read.mdx", "header_path": "/Offchain / L2 Resolvers/Writing a CCIP Read Gateway/"}, "hash": "17e66c797a98a7dfb0fc9e374ca9ff9f5ab9f0151fc8c10cdfe44c0edd28582f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9eab3b07-c4d6-4fd1-af3a-4216f9fb7afb", "node_type": "1", "metadata": {"header_path": "/Offchain / L2 Resolvers/"}, "hash": "4b3950f1883792a2a3ab5561874b67eedd2e43f6364a1f9e0666cf4e1d4229a6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Writing an Offchain/L2 Resolver\n\nSee [Writing a Resolver](/resolvers/writing#offchain-resolvers) for more information on how to implement a Resolver with CCIP Read. ## Testing your offchain names\n\nTo test your implementation, search the relevant name in the [ENS Manager App](https://app.ens.domains). Make sure that you've configured your test name to return a result for common data like an ETH address or common text records like `avatar` or `description`. If you set an arbitrary text record key like `test`, the manager app has no way of knowing that it exists.", "mimetype": "text/plain", "start_char_idx": 7054, "end_char_idx": 7221, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "74c8b1e0-0699-4736-8678-0d77acc01130": {"__data__": {"id_": "74c8b1e0-0699-4736-8678-0d77acc01130", "embedding": null, "metadata": {"file_path": "src/pages/resolvers/interacting.mdx", "file_name": "interacting.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/interacting.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/resolvers/interacting.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["behaviour", "modify", "interacting", "advanced", "allow", "interface", "possible", "their", "users", "support", "checking", "EIP-165", "resolver", "contract"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "161681ebf796409572b5c4eb8c67091275b68e4a", "node_type": "4", "metadata": {"file_path": "src/pages/resolvers/interacting.mdx", "file_name": "interacting.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/interacting.mdx"}, "hash": "2e06e7bac551c2cfc110255f56ebb834429edcbe267f548a0d95867a7291cca2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d4e28816-c81a-438d-bc3d-b90ad1de33e7", "node_type": "1", "metadata": {"header_path": "/Interacting with a Resolver [Set Addresses, Text Records, and more]/"}, "hash": "dd4686c5f6ebbbc4784414aaa51777bfac305d26a41d92d620bef3b1da102fd5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Interacting with a Resolver [Set Addresses, Text Records, and more]\n\nSome apps may want to allow for users to edit, update, or modify their name and its behaviour at a more advanced level.\nThis is possible by interacting with the resolver contract of a name directly. ## Checking Interface Support\n\nBefore you start sending transactions to users resolvers, you should check if they support the interface you want to use. This is done by calling the `supportsInterface` (see [EIP-165](https://eips.ethereum.org/EIPS/eip-165)) function on the resolver contract.\n\n```solidity\nfunction supportsInterface(bytes4 interfaceID) external pure returns (bool)\n```\n\nIn order to ensure that resolvers we interact with are compatible with specific standards you can call the above function on contracts with an interfaceID and then check the boolean it returns.\n\nInterface IDs are calculated according to solidity ABI and stored in a four-byte value.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 269, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8897d239-77d8-4444-89b9-2c95088a1fde": {"__data__": {"id_": "8897d239-77d8-4444-89b9-2c95088a1fde", "embedding": null, "metadata": {"file_path": "src/pages/resolvers/interacting.mdx", "file_name": "interacting.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/interacting.mdx", "header_path": "/Interacting with a Resolver [Set Addresses, Text Records, and more]/", "customer_id": 1, "source_url": "src/pages/resolvers/interacting.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["other", "specific", "specify", "preferred", "afterwhich", "record", "first", "supports", "color", "their", "updating", "resolver", "function"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "161681ebf796409572b5c4eb8c67091275b68e4a", "node_type": "4", "metadata": {"file_path": "src/pages/resolvers/interacting.mdx", "file_name": "interacting.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/interacting.mdx"}, "hash": "2e06e7bac551c2cfc110255f56ebb834429edcbe267f548a0d95867a7291cca2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d4e28816-c81a-438d-bc3d-b90ad1de33e7", "node_type": "1", "metadata": {"file_path": "src/pages/resolvers/interacting.mdx", "file_name": "interacting.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/interacting.mdx", "header_path": "/Interacting with a Resolver [Set Addresses, Text Records, and more]/"}, "hash": "5a36fec647463b9b401d8b9ee1277d3edad0920819de916d004e8015cd73a608", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9c83608f-054e-4dfa-9b81-4628e9ab4736", "node_type": "1", "metadata": {"header_path": "/Interacting with a Resolver [Set Addresses, Text Records, and more]/"}, "hash": "2b60457215e34ffe1c08178d2f42998916ac615b677e8588f7bb7ddb37e636ee", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Updating a user's Record\n\nIf you want to help a user set their avatar, specify a preferred color scheme, or set any other record on their ENS name you can do so in specific cases.\n\nFirst we need to <b>check if the user's resolver supports the interface</b> we want to use (see [setText](/resolvers/interfaces#0x10f13a8c)).\nAfterwhich you can call the `setText()` function on the user's resolver contract.\n\n:::code-group\n\n```solidity [Solidity]\ninterface Resolver {\n    function setText(bytes32 node, string calldata key, string calldata value) external;\n}\n```\n\n```typescript [ENSjs]\n// https://github.com/ensdomains/ensjs/blob/main/docs/wallet/function.setRecords.md\nimport { addEnsContracts } from '@ensdomains/ensjs'\nimport { setRecords } from '@ensdomains/ensjs/wallet'\nimport { createWalletClient, custom } from 'viem'\nimport { mainnet } from 'viem/chains'\n\nconst wallet = createWalletClient({\n  chain: addEnsContracts(mainnet),\n  transport: custom(window.ethereum),\n})\nconst hash = await setRecords(wallet, {\n  name: 'ens.eth',\n  coins: [\n    {\n      coin: 'ETH',\n      value: '0xFe89cc7aBB2C4183683ab71653C4cdc9B02D44b7',\n    },\n  ],\n  texts: [{ key: 'foo', value: 'bar' }],\n  resolverAddress: '0x4976fb03C32e5B8cfe2b6cCB31c09Ba78EBaBa41',\n})\n// 0x...\n```\n\n:::\n\nPlease make it clear to the user what you are doing and why. If possible please also showcase the record you are setting to the user before you do so.", "mimetype": "text/plain", "start_char_idx": 941, "end_char_idx": 2362, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9c83608f-054e-4dfa-9b81-4628e9ab4736": {"__data__": {"id_": "9c83608f-054e-4dfa-9b81-4628e9ab4736", "embedding": null, "metadata": {"file_path": "src/pages/resolvers/interacting.mdx", "file_name": "interacting.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/interacting.mdx", "header_path": "/Interacting with a Resolver [Set Addresses, Text Records, and more]/", "customer_id": 1, "source_url": "src/pages/resolvers/interacting.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["behaviour", "address", "order", "overwriting", "update", "interface", "their", "overwrite", "resolver", "involves", "function"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "161681ebf796409572b5c4eb8c67091275b68e4a", "node_type": "4", "metadata": {"file_path": "src/pages/resolvers/interacting.mdx", "file_name": "interacting.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/interacting.mdx"}, "hash": "2e06e7bac551c2cfc110255f56ebb834429edcbe267f548a0d95867a7291cca2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8897d239-77d8-4444-89b9-2c95088a1fde", "node_type": "1", "metadata": {"file_path": "src/pages/resolvers/interacting.mdx", "file_name": "interacting.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/interacting.mdx", "header_path": "/Interacting with a Resolver [Set Addresses, Text Records, and more]/"}, "hash": "8d79b0e77cd1e21f445a5f71fa51f149fda938d6fdc9b5ac32015b2e95822332", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "080b1b1a-cca3-4d1e-9feb-f5fc446a6e6c", "node_type": "1", "metadata": {"header_path": "/Interacting with a Resolver [Set Addresses, Text Records, and more]/"}, "hash": "bb884fddfb227a4a86a9c656fabd62f4c9a78a7b7e03d919db886c26c7ff72a7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Update a user's Resolver\n\nOverwriting a user's resolver involves overwriting the behaviour of their ENS name.\n\nIn order to overwrite the resolver for a user you need to call the `setResolver` function on the `ENSRegistry` contract.\n\n:::code-group\n\n```solidity [Solidity]\ninterface ENS {\n    function setResolver(bytes32 node, address resolver) external;\n}\n```\n\n```typescript [ENSjs]\n// https://github.com/ensdomains/ensjs/blob/main/docs/wallet/function.setResolver.md\nimport { addEnsContracts } from '@ensdomains/ensjs'\nimport { setResolver } from '@ensdomains/ensjs/wallet'\nimport { createWalletClient, custom } from 'viem'\nimport { mainnet } from 'viem/chains'\n\nconst wallet = createWalletClient({\n  chain: addEnsContracts(mainnet),\n  transport: custom(window.ethereum),\n})\nconst hash = await setResolver(wallet, {\n  name: 'ens.eth',\n  contract: 'registry',\n  resolverAddress: '0x4976fb03C32e5B8cfe2b6cCB31c09Ba78EBaBa41',\n})\n// 0x...\n```\n\n:::\n\nPlease do not change the resolver for a user without their permission. Overwriting the resolver is a destructive action and will overwrite any existing resolution logic.", "mimetype": "text/plain", "start_char_idx": 2364, "end_char_idx": 3483, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "080b1b1a-cca3-4d1e-9feb-f5fc446a6e6c": {"__data__": {"id_": "080b1b1a-cca3-4d1e-9feb-f5fc446a6e6c", "embedding": null, "metadata": {"file_path": "src/pages/resolvers/interacting.mdx", "file_name": "interacting.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/interacting.mdx", "header_path": "/Interacting with a Resolver [Set Addresses, Text Records, and more]/", "customer_id": 1, "source_url": "src/pages/resolvers/interacting.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["multichain", "writing", "around", "offchain", "ecosystem", "please", "layer", "standardized", "resolvers", "active", "still", "under"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "161681ebf796409572b5c4eb8c67091275b68e4a", "node_type": "4", "metadata": {"file_path": "src/pages/resolvers/interacting.mdx", "file_name": "interacting.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/interacting.mdx"}, "hash": "2e06e7bac551c2cfc110255f56ebb834429edcbe267f548a0d95867a7291cca2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9c83608f-054e-4dfa-9b81-4628e9ab4736", "node_type": "1", "metadata": {"file_path": "src/pages/resolvers/interacting.mdx", "file_name": "interacting.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/interacting.mdx", "header_path": "/Interacting with a Resolver [Set Addresses, Text Records, and more]/"}, "hash": "cde17134b3168ffb0122062b52071a548fabd1a6857d035053544b68e2ea4c07", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Layer 2 & Offchain Resolvers\n\nAt the time of writing this the ecosystem around multichain and \"writing\" to layer 2 & offchain resolvers has yet to be standardized and is still under active development.\nPlease check back at a later date. import { InterfaceDetails } from '../../components/InterfaceDetails'\nimport { resolver_methods } from '../../data/resolver' # Resolver Interface Standards\n\nThis page is a collection of methods that a resolver MAY implement.\n\n<InterfaceDetails methods={resolver_methods} />", "mimetype": "text/plain", "start_char_idx": 3485, "end_char_idx": 3724, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a50e8f84-7f16-4821-960a-bdc7bc561855": {"__data__": {"id_": "a50e8f84-7f16-4821-960a-bdc7bc561855", "embedding": null, "metadata": {"file_path": "src/pages/resolvers/public.mdx", "file_name": "public.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/public.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/resolvers/public.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["permits", "purpose", "suitable", "update", "public", "general", "their", "owner", "resolver", "includes", "suits"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "60c2640f348629fc4962c1e10618f2683cd35de2", "node_type": "4", "metadata": {"file_path": "src/pages/resolvers/public.mdx", "file_name": "public.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/public.mdx"}, "hash": "46e1756f73a4e567a47b48644e4bca3a65474f260e1ecec50081b67ea2519e96", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "24579568-feaf-4d99-93c3-2ee1978e7883", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "d654ce9673d1c6ab0d91c383fe7ff362bf33b51bbdf15773c779ecea768a309c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: A general purpose resolver that suits most user needs.\n--- # Public Resolver\n\nThe public resolver is a general-purpose ENS resolver that is suitable for most user needs.\nIt permits the owner of a name to update their records, includes permissions, and stores its data on layer-1 ethereum.\n\nMost ENS names registered through the ENS Manager will use the latest version of the public resolver by default.\nNames that resolve to a supported public resolver are editable from within the ENS Manager.\n\nIf you'd like to take a peek under the hood you can view the [public resolver source code](https://github.com/ensdomains/ens-contracts/blob/staging/contracts/resolvers/PublicResolver.sol) on GitHub.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 75, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7295f6ee-b017-44c7-bfd5-8de903c6df6e": {"__data__": {"id_": "7295f6ee-b017-44c7-bfd5-8de903c6df6e", "embedding": null, "metadata": {"file_path": "src/pages/resolvers/public.mdx", "file_name": "public.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/public.mdx", "header_path": "/Public Resolver/", "customer_id": 1, "source_url": "src/pages/resolvers/public.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["EIP-205", "EIP-181", "supports", "EIP-165", "resolver", "EIP-619", "EIP-2304", "interface", "features", "contract", "address", "EIP-634", "resolution", "EIP-1577", "detection", "secp256k1", "reverse", "public", "following", "EIP-137", "contracts"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "60c2640f348629fc4962c1e10618f2683cd35de2", "node_type": "4", "metadata": {"file_path": "src/pages/resolvers/public.mdx", "file_name": "public.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/public.mdx"}, "hash": "46e1756f73a4e567a47b48644e4bca3a65474f260e1ecec50081b67ea2519e96", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "24579568-feaf-4d99-93c3-2ee1978e7883", "node_type": "1", "metadata": {"file_path": "src/pages/resolvers/public.mdx", "file_name": "public.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/public.mdx", "header_path": "/"}, "hash": "f10843999fce9b4a1dadd3b438038a8b9d5eaad496f5631b23508c46fa3b066e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "55a89d0c-2f43-4f89-8cbe-597d6745b493", "node_type": "1", "metadata": {"header_path": "/Public Resolver/"}, "hash": "3e9d8e52a00e952052c3618f0c834c0d95b3f56cc80845aba92ab3cc34e4966e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Features\n\nThe public resolver supports the following features:\n\n- [EIP-137](https://eips.ethereum.org/EIPS/eip-137) - Contract address interface (`addr()`)\n- [EIP-165](https://eips.ethereum.org/EIPS/eip-165) - Interface Detection (`supportsInterface()`)\n- [EIP-181](https://eips.ethereum.org/EIPS/eip-181) - Reverse Resolution (`name()`)\n- [EIP-205](https://eips.ethereum.org/EIPS/eip-205) - ABI Resolution for contracts (`ABI()`)\n- [EIP-619](https://eips.ethereum.org/EIPS/eip-619) - SECP256k1 public keys (`pubkey()`)\n- [EIP-634](https://eips.ethereum.org/EIPS/eip-634) - Text records (`text()`)\n- [EIP-1577](https://eips.ethereum.org/EIPS/eip-1577) - Content hash resolution (`contenthash()`)\n- [EIP-2304](https://eips.ethereum.org/EIPS/eip-2304) - Multicoin support (`addr()`)\n\n:::note\nWhile the `PublicResolver` provides a convenient default implementation. Many\nversions & variations may exist, and it is therefore not recommended to\nhardcode any addresses. To ensure a safe implementation, always use the\n`supportsInterface()` method to check for the existence of a specific\ninterface. See [Interacting with a Resolver](/resolvers/interacting) for how\nto do this.\n:::", "mimetype": "text/plain", "start_char_idx": 714, "end_char_idx": 1891, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "55a89d0c-2f43-4f89-8cbe-597d6745b493": {"__data__": {"id_": "55a89d0c-2f43-4f89-8cbe-597d6745b493", "embedding": null, "metadata": {"file_path": "src/pages/resolvers/public.mdx", "file_name": "public.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/public.mdx", "header_path": "/Public Resolver/", "customer_id": 1, "source_url": "src/pages/resolvers/public.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["heart", "quickstart", "guide", "everything", "public", "supports", "about", "resolvers", "smart", "every", "notion", "resolver", "permissions"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "60c2640f348629fc4962c1e10618f2683cd35de2", "node_type": "4", "metadata": {"file_path": "src/pages/resolvers/public.mdx", "file_name": "public.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/public.mdx"}, "hash": "46e1756f73a4e567a47b48644e4bca3a65474f260e1ecec50081b67ea2519e96", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7295f6ee-b017-44c7-bfd5-8de903c6df6e", "node_type": "1", "metadata": {"file_path": "src/pages/resolvers/public.mdx", "file_name": "public.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/public.mdx", "header_path": "/Public Resolver/"}, "hash": "4962cb6c51a5b3d7d1019761e2d7a7521074260e08a41108f62e2b6d40c29745", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Permissions\n\nThe public resolver supports the notion of a \"owner\" and \"manager\". ---\ndescription: A quickstart guide to everything about resolvers.\n--- # Resolvers Quickstart\n\nAt the heart of every ENS name is its resolver. A resolver is a smart contract that implements a specific set of Resolver features (see [Resolver Interface](/resolvers/interfaces)).\nThe resolvers smart contract functions have control over the resolution process of a [\"node\"](/resolution/names#namehash) (a name or subdomain) and onwards (subdomains of itself).", "mimetype": "text/plain", "start_char_idx": 1893, "end_char_idx": 1976, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4d146f56-7968-4b84-94c1-92e68a4cb209": {"__data__": {"id_": "4d146f56-7968-4b84-94c1-92e68a4cb209", "embedding": null, "metadata": {"file_path": "src/pages/resolvers/quickstart.mdx", "file_name": "quickstart.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/quickstart.mdx", "header_path": "/Resolvers Quickstart/", "customer_id": 1, "source_url": "src/pages/resolvers/quickstart.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["myresolver", "naive", "bytes4", "external", "returns", "interfaceid", "return", "plausible", "example", "resolver", "contract", "basic", "function"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7a67886d89bb0784e422ee7c927eb51cb1123ca2", "node_type": "4", "metadata": {"file_path": "src/pages/resolvers/quickstart.mdx", "file_name": "quickstart.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/quickstart.mdx"}, "hash": "d6ff5ce09c9e4d5e4987a79ce0ed87765cd97fe9c66ca7804286de59dc8a0edb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c6c438c9-77d5-43f4-8a04-b52a8b863e89", "node_type": "1", "metadata": {"file_path": "src/pages/resolvers/quickstart.mdx", "file_name": "quickstart.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/quickstart.mdx", "header_path": "/"}, "hash": "971341e2e2d147cbcf01a2d4c80d74970d17a3de467d9471e7bbc8fe4064d5d6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "415ad1cd-759d-41e0-a5ef-9d069aecd078", "node_type": "1", "metadata": {"header_path": "/Resolvers Quickstart/"}, "hash": "62924475508753c74d6a0cb1c9de2c37ae9ea5d46b4f8b46ad58c6fc7b1f9303", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Basic Resolver\n\nA naive but very plausible example of a resolver is the following.\n\n```solidity\ncontract MyResolver {\n    function addr(bytes32 node) external pure returns (address) {\n        return 0x225f137127d9067788314bc7fcc1f36746a3c3B5;\n    }\n\n    function supportsInterface(\n        bytes4 interfaceID\n    ) external pure returns (bool) {\n        return\n            interfaceID == this.addr.selector ||\n            interfaceID == this.supportsInterface.selector;\n    }\n}\n```\n\nNotice how the above would always return the same address regardless of the name it is queried for.\n\nIf you want to [write your own resolver resolver](/resolvers/writing), or see the [interface reference](/resolvers/interfaces).", "mimetype": "text/plain", "start_char_idx": 459, "end_char_idx": 1173, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "415ad1cd-759d-41e0-a5ef-9d069aecd078": {"__data__": {"id_": "415ad1cd-759d-41e0-a5ef-9d069aecd078", "embedding": null, "metadata": {"file_path": "src/pages/resolvers/quickstart.mdx", "file_name": "quickstart.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/quickstart.mdx", "header_path": "/Resolvers Quickstart/", "customer_id": 1, "source_url": "src/pages/resolvers/quickstart.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["swiss", "written", "everyday", "knife", "interacting", "everything", "public", "default", "about", "might", "resolver", "names"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7a67886d89bb0784e422ee7c927eb51cb1123ca2", "node_type": "4", "metadata": {"file_path": "src/pages/resolvers/quickstart.mdx", "file_name": "quickstart.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/quickstart.mdx"}, "hash": "d6ff5ce09c9e4d5e4987a79ce0ed87765cd97fe9c66ca7804286de59dc8a0edb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4d146f56-7968-4b84-94c1-92e68a4cb209", "node_type": "1", "metadata": {"file_path": "src/pages/resolvers/quickstart.mdx", "file_name": "quickstart.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/quickstart.mdx", "header_path": "/Resolvers Quickstart/"}, "hash": "83d19dbccf1b1e0266188132eebaca2924ed26e6d96d2e0a7062fd055a0fc94d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6c090df5-e988-493d-af67-6bdf7886e5a3", "node_type": "1", "metadata": {"header_path": "/Resolvers Quickstart/"}, "hash": "9f618ca5e9738ef1632d44ee46907b923282580a61396447ce1a31ab56596d50", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Public Resolver\n\nThe default resolver for all names is the Public Resolver, a swiss army knife of resolvers, written by the ENS Labs team, feature-packed with everything your everyday user might need.\nYou can read more about the [Public Resolver](/resolvers/public). ## Interacting with a resolver\n\nDepending on the resolver in charge of a name, certain frontend apps will be able to interact with them as well.\nThis means you can set your favourite records, upgrade your name to different logic, and more, from your dApp of choice.\n\nAre you writing a dApp and want to build this? Checkout the [Interacting with a Resolver](/resolvers/interacting) section.", "mimetype": "text/plain", "start_char_idx": 1175, "end_char_idx": 1444, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b3e8c75d-c8b7-4100-92ef-f8ae0e4456e0": {"__data__": {"id_": "b3e8c75d-c8b7-4100-92ef-f8ae0e4456e0", "embedding": null, "metadata": {"file_path": "src/pages/resolvers/quickstart.mdx", "file_name": "quickstart.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/quickstart.mdx", "header_path": "/Resolvers Quickstart/", "customer_id": 1, "source_url": "src/pages/resolvers/quickstart.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["leverage", "writing", "offchain", "power", "although", "interfacedetails", "resolution", "about", "default", "import", "redirect", "resolver"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7a67886d89bb0784e422ee7c927eb51cb1123ca2", "node_type": "4", "metadata": {"file_path": "src/pages/resolvers/quickstart.mdx", "file_name": "quickstart.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/quickstart.mdx"}, "hash": "d6ff5ce09c9e4d5e4987a79ce0ed87765cd97fe9c66ca7804286de59dc8a0edb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6c090df5-e988-493d-af67-6bdf7886e5a3", "node_type": "1", "metadata": {"file_path": "src/pages/resolvers/quickstart.mdx", "file_name": "quickstart.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/quickstart.mdx", "header_path": "/Resolvers Quickstart/"}, "hash": "8ef4fc0ed1f5e9a1ea6db890564bb309d28635de0caed91879c3cc404e43c036", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Offchain Resolution\n\nAlthough by default ENS resolution is done on-chain. You can leverage the power of CCIP Read to redirect resolution to an off-chain gateway.\nMore about writing a CCIP Read-enabled resolver [here](/resolvers/ccip-read). import { InterfaceDetails } from '../../components/InterfaceDetails'\nimport { universalresolver_methods } from '../../data/universal-resolver' # Universal Resolver [A swiss army knife for resolution.] ## Overview\n\nThe Universal Resolver is a contract that handles the work of resolving a name entirely onchain, making it possible to make a single smart contract call to resolve an ENS name.\n\nNote that this contract is already built into libraries like [viem](https://viem.sh) and [ENSjs](https://github.com/ensdomains/ensjs), so most developers don't typically need to use it directly.", "mimetype": "text/plain", "start_char_idx": 1837, "end_char_idx": 2079, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8c626164-c4a4-4833-88fc-17a3e73c0775": {"__data__": {"id_": "8c626164-c4a4-4833-88fc-17a3e73c0775", "embedding": null, "metadata": {"file_path": "src/pages/resolvers/universal.mdx", "file_name": "universal.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/universal.mdx", "header_path": "/Universal Resolver [A swiss army knife for resolution.]/Overview/", "customer_id": 1, "source_url": "src/pages/resolvers/universal.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["forward", "version", "these", "argument", "resolution", "given", "bytes", "resolve", "records", "resolver", "methods"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "286e17f1308fb09cfa03975a8ca6a25832790446", "node_type": "4", "metadata": {"file_path": "src/pages/resolvers/universal.mdx", "file_name": "universal.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/universal.mdx"}, "hash": "cd226d1364847a1549627542fabd1a3023329992528d0421dc15ab422f7f07a1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ecd314aa-84b3-4e86-8c13-bf004e251465", "node_type": "1", "metadata": {"file_path": "src/pages/resolvers/universal.mdx", "file_name": "universal.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/universal.mdx", "header_path": "/Universal Resolver [A swiss army knife for resolution.]/"}, "hash": "37fba5177790d29ebe2584e415906459d16112a919bfc7ee3f763e166db29fca", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "58ac15b4-a23e-49a7-b7b7-657e247a85be", "node_type": "1", "metadata": {"header_path": "/Universal Resolver [A swiss army knife for resolution.]/Overview/"}, "hash": "44ec120dd548328f0d6750a775af1978fa56657a19cc9bdda26dd36c2b94e3e6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Forward Resolution\n\nTo resolve one or more records for a name, use one of the `resolve` methods, such as `resolve(bytes name, bytes data)`.\n\nThe `name` argument for these methods will be the [DNS-encoded](/resolution/names#dns) version of the name. Make sure to [normalize](/resolution/names#normalize) the name first, as well! For example, given the name `My.Name.eth`:\n\n1. Normalize:\n   - `My.Name.eth` -> `my.name.eth`\n2. DNS Encode:\n   - `my.name.eth` -> `0x026d79046e616d650365746800`\n\nThe `data` argument for these methods will be an ABI-encoded call to the resolver for that name.\n\nFor example, if you want to resolve the ETH address for `my.name.eth`, using the `addr(bytes32 node)` method, then the corresponding ABI-encoded call would be:\n\n```\n0x3b3b57def61adbd8ee36cf930560efc644af752731733dc6421afe47608f8e2cfeaabe2b\n```\n\nSee here for standard resolver methods: [Resolver Interface Standards](/resolvers/interfaces)", "mimetype": "text/plain", "start_char_idx": 590, "end_char_idx": 1521, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "58ac15b4-a23e-49a7-b7b7-657e247a85be": {"__data__": {"id_": "58ac15b4-a23e-49a7-b7b7-657e247a85be", "embedding": null, "metadata": {"file_path": "src/pages/resolvers/universal.mdx", "file_name": "universal.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/universal.mdx", "header_path": "/Universal Resolver [A swiss army knife for resolution.]/Overview/", "customer_id": 1, "source_url": "src/pages/resolvers/universal.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ethereum", "address", "reverse", "these", "argument", "resolution", "version", "where", "public", "given", "methods", "without", "lowercased"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "286e17f1308fb09cfa03975a8ca6a25832790446", "node_type": "4", "metadata": {"file_path": "src/pages/resolvers/universal.mdx", "file_name": "universal.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/universal.mdx"}, "hash": "cd226d1364847a1549627542fabd1a3023329992528d0421dc15ab422f7f07a1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8c626164-c4a4-4833-88fc-17a3e73c0775", "node_type": "1", "metadata": {"file_path": "src/pages/resolvers/universal.mdx", "file_name": "universal.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/universal.mdx", "header_path": "/Universal Resolver [A swiss army knife for resolution.]/Overview/"}, "hash": "e1341ff21ca01104201bd85e424417c461cf5a544b26c6920a694f4413ae04da", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9bd88261-9519-4468-940d-d782a5e77f54", "node_type": "1", "metadata": {"header_path": "/Universal Resolver [A swiss army knife for resolution.]/"}, "hash": "f7388246cf78e106aa8b4669d2d84deb78de00f16fd1a4700dcdd2edfea1d39e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Reverse Resolution\n\nTo reverse-resolve an address to an ENS name, call one of the `reverse` methods, such as `reverse(bytes reverseName)`.\n\nThe `reverseName` argument for these methods will be the [DNS-encoded](/resolution/names#dns) version of the reverse name. The \"reverse name\" is `[addr].addr.reverse`, where `[addr]` is the lowercased Ethereum public address without the \"0x\". Make sure to [normalize](/resolution/names#normalize) the name as well! For example, given the address `0x231b0Ee14048e9dCcD1d247744d114a4EB5E8E63`:\n\n1. Construct Reverse Name:\n   ```\n   0x231b0Ee14048e9dCcD1d247744d114a4EB5E8E63 ->\n   231b0Ee14048e9dCcD1d247744d114a4EB5E8E63.addr.reverse\n   ```\n2. Normalize:\n   ```\n   231b0Ee14048e9dCcD1d247744d114a4EB5E8E63.addr.reverse ->\n   231b0ee14048e9dccd1d247744d114a4eb5e8e63.addr.reverse\n   ```\n3. DNS Encode:\n   ```\n   231b0ee14048e9dccd1d247744d114a4eb5e8e63.addr.reverse ->\n   0x28323331623065653134303438653964636364316432343737343464313134613465623565386536330461646472077265766572736500\n   ```", "mimetype": "text/plain", "start_char_idx": 1523, "end_char_idx": 2556, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9bd88261-9519-4468-940d-d782a5e77f54": {"__data__": {"id_": "9bd88261-9519-4468-940d-d782a5e77f54", "embedding": null, "metadata": {"file_path": "src/pages/resolvers/universal.mdx", "file_name": "universal.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/universal.mdx", "header_path": "/Universal Resolver [A swiss army knife for resolution.]/", "customer_id": 1, "source_url": "src/pages/resolvers/universal.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["writing", "power", "represented", "responsible", "control", "EIP-2304", "EIP-181", "standards", "about", "which", "interface", "resolvers", "resolution", "resolver", "EIP-137", "every", "information", "resolving"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "286e17f1308fb09cfa03975a8ca6a25832790446", "node_type": "4", "metadata": {"file_path": "src/pages/resolvers/universal.mdx", "file_name": "universal.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/universal.mdx"}, "hash": "cd226d1364847a1549627542fabd1a3023329992528d0421dc15ab422f7f07a1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "58ac15b4-a23e-49a7-b7b7-657e247a85be", "node_type": "1", "metadata": {"file_path": "src/pages/resolvers/universal.mdx", "file_name": "universal.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/universal.mdx", "header_path": "/Universal Resolver [A swiss army knife for resolution.]/Overview/"}, "hash": "2a192e2b0e0d8a865380a6e3c7ae132d53252b6edd25d2aa8b4519cdf47eaa87", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Interface Standards\n\n<InterfaceDetails methods={universalresolver_methods} /> # Writing a Resolver\n\nEvery ENS name has a resolver, which is responsible for resolving information about a name.\n\nResolvers are a core part of the ENS protocol. They give each name, represented as a [\"node\"](/resolution/names#namehash), the power to control the resolution process for itself and all of its subnames. Resolvers were originally standardized in [EIP 137](https://eips.ethereum.org/EIPS/eip-137), but have since received a few updates such as [EIP 181](https://eips.ethereum.org/EIPS/eip-181), [EIP 2304](https://eips.ethereum.org/EIPS/eip-2304), and [ENSIP-10](/ensip/10).\n\nYou can find the latest default resolver implementation, called the Public Resolver, on [GitHub](https://github.com/ensdomains/ens-contracts/blob/mainnet/contracts/resolvers/PublicResolver.sol) and [Etherscan](/learn/deployments).", "mimetype": "text/plain", "start_char_idx": 2558, "end_char_idx": 2638, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fb6f99eb-8eac-45b1-aeea-e7f0db9cf3ec": {"__data__": {"id_": "fb6f99eb-8eac-45b1-aeea-e7f0db9cf3ec", "embedding": null, "metadata": {"file_path": "src/pages/resolvers/writing.mdx", "file_name": "writing.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/writing.mdx", "header_path": "/Writing a Resolver/", "customer_id": 1, "source_url": "src/pages/resolvers/writing.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["imyresolver", "external", "returns", "something", "interface", "might", "however", "extended", "resolver", "methods", "function", "simple"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2377f0e1338c2db7024c66952c1fee0e6170507d", "node_type": "4", "metadata": {"file_path": "src/pages/resolvers/writing.mdx", "file_name": "writing.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/writing.mdx"}, "hash": "4846b63c714953dfe5238863016523bf122ba5b9e93786133a11c59ed6946dbb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b92cabc7-16fe-4d0b-9b4d-7515edd81140", "node_type": "1", "metadata": {"file_path": "src/pages/resolvers/writing.mdx", "file_name": "writing.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/writing.mdx", "header_path": "/"}, "hash": "565649ca4e31c174201848c417811a68d26a7764f2d16156db86efcd7da6a99b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "941de30b-0845-4b20-bffc-b793cad06528", "node_type": "1", "metadata": {"header_path": "/Writing a Resolver/"}, "hash": "1575124608b8bae8544de1b83d8b219890fba2464baa29b40c587a5f559a7532", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Resolver Interface\n\nYou can view an extended list of resolver methods [here](/resolvers/interfaces), however a simple interface might look something like this:\n\n```solidity\ninterface IMyResolver {\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n    function addr(bytes32 node) external view returns (address payable);\n    function addr(bytes32 node, uint256 coinType) external view returns (bytes memory);\n    function contenthash(bytes32 node) external view returns (bytes memory);\n    function text(bytes32 node, string calldata key) external view returns (string memory);\n\n    function setAddr(bytes32 node, address addr) external;\n    function setAddr(bytes32 node, uint256 coinType, bytes calldata a) external;\n    function setContenthash(bytes32 node, bytes calldata hash) external;\n    function setText(bytes32 node, string calldata key, string calldata value) external;\n}\n```", "mimetype": "text/plain", "start_char_idx": 821, "end_char_idx": 1740, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "941de30b-0845-4b20-bffc-b793cad06528": {"__data__": {"id_": "941de30b-0845-4b20-bffc-b793cad06528", "embedding": null, "metadata": {"file_path": "src/pages/resolvers/writing.mdx", "file_name": "writing.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/writing.mdx", "header_path": "/Writing a Resolver/", "customer_id": 1, "source_url": "src/pages/resolvers/writing.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["wildcard", "method", "added", "performs", "resolution", "normalised", "allow", "interface", "iextendedresolver", "EIP-165", "resolver", "supplied"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2377f0e1338c2db7024c66952c1fee0e6170507d", "node_type": "4", "metadata": {"file_path": "src/pages/resolvers/writing.mdx", "file_name": "writing.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/writing.mdx"}, "hash": "4846b63c714953dfe5238863016523bf122ba5b9e93786133a11c59ed6946dbb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fb6f99eb-8eac-45b1-aeea-e7f0db9cf3ec", "node_type": "1", "metadata": {"file_path": "src/pages/resolvers/writing.mdx", "file_name": "writing.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/writing.mdx", "header_path": "/Writing a Resolver/"}, "hash": "20f715d9b7101e93c7a49a3c266a5323b1ba8ddb5949a9e541e09eda80d48295", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ad87286a-4015-42fc-8194-a5888909f0ab", "node_type": "1", "metadata": {"header_path": "/Writing a Resolver/"}, "hash": "da7577b34b6f791cdcf6f4c775fc92147c7706cedc217374c10cf04b134a11c9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Wildcard Resolution\n\nIn [ENSIP-10](/ensip/10) a new `resolve()` method was added to the resolver interface to allow for wildcard resolution.\n\n```solidity\ninterface IExtendedResolver {\n    /**\n     * @dev Performs ENS name resolution for the supplied name and resolution data.\n     * @param name The name to resolve, in normalised and DNS-encoded form.\n     * @param data The resolution data, as specified in ENSIP-10.\n     * @return The result of resolving the name.\n     */\n    function resolve(\n        bytes memory name,\n        bytes memory data\n    ) external view returns (bytes memory);\n}\n```\n\n:::note\nDon't forget to add `0x9061b923` to your [EIP-165](https://eips.ethereum.org/) `supportsInterface()` implementation.\n:::", "mimetype": "text/plain", "start_char_idx": 1742, "end_char_idx": 2474, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ad87286a-4015-42fc-8194-a5888909f0ab": {"__data__": {"id_": "ad87286a-4015-42fc-8194-a5888909f0ab", "embedding": null, "metadata": {"file_path": "src/pages/resolvers/writing.mdx", "file_name": "writing.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/writing.mdx", "header_path": "/Writing a Resolver/", "customer_id": 1, "source_url": "src/pages/resolvers/writing.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["onchain", "addresses", "stores", "extremely", "which", "mapping", "resolvers", "might", "onchainresolver", "names", "resolver", "contract", "basic"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2377f0e1338c2db7024c66952c1fee0e6170507d", "node_type": "4", "metadata": {"file_path": "src/pages/resolvers/writing.mdx", "file_name": "writing.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/writing.mdx"}, "hash": "4846b63c714953dfe5238863016523bf122ba5b9e93786133a11c59ed6946dbb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "941de30b-0845-4b20-bffc-b793cad06528", "node_type": "1", "metadata": {"file_path": "src/pages/resolvers/writing.mdx", "file_name": "writing.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/writing.mdx", "header_path": "/Writing a Resolver/"}, "hash": "ddb0d312cfecf2b46aa70be33f4255326135f8e81503c956f79334f0602780a1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9d6bc837-7e9b-42ae-89d4-3ccddde7fbe4", "node_type": "1", "metadata": {"header_path": "/Writing a Resolver/"}, "hash": "d1b17c041bbdd7059df624e729c4ccffe76171163734dbe5cb40a744b9bc4c10", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Onchain Resolvers\n\nBy default, ENS names use the [Public Resolver](/resolvers/public) which stores all data onchain. An extremely basic resolver that stores a mapping of ENS names to addresses might look like this:\n\n```solidity\ncontract OnchainResolver {\n    mapping(bytes32 node => address addr) public addr;\n\n    function setAddr(bytes32 node, address _addr) external {\n        addr[node] = _addr;\n    }\n\n    function supportsInterface(\n        bytes4 interfaceID\n    ) external pure returns (bool) {\n        return\n            interfaceID == OnchainResolver.supportsInterface.selector ||\n            // function addr(bytes32 node) external view returns (address)\n            interfaceID == 0x3b3b57de;\n    }\n}\n```\n\n:::note\nThis is not secure since it doesn't implement any form of access control for updating a name's address, and is only suitable for demonstration purposes.\n:::\n\nSince the mapping is stored internally, it costs gas for the owner of a name to update their address. This is great for a maximal decentralization, but is not always practical.", "mimetype": "text/plain", "start_char_idx": 2476, "end_char_idx": 3539, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9d6bc837-7e9b-42ae-89d4-3ccddde7fbe4": {"__data__": {"id_": "9d6bc837-7e9b-42ae-89d4-3ccddde7fbe4", "embedding": null, "metadata": {"file_path": "src/pages/resolvers/writing.mdx", "file_name": "writing.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/writing.mdx", "header_path": "/Writing a Resolver/", "customer_id": 1, "source_url": "src/pages/resolvers/writing.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["other", "offchain", "defer", "equivalent", "resolution", "about", "resolver", "resolvers", "including", "source", "implements", "server"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2377f0e1338c2db7024c66952c1fee0e6170507d", "node_type": "4", "metadata": {"file_path": "src/pages/resolvers/writing.mdx", "file_name": "writing.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/writing.mdx"}, "hash": "4846b63c714953dfe5238863016523bf122ba5b9e93786133a11c59ed6946dbb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ad87286a-4015-42fc-8194-a5888909f0ab", "node_type": "1", "metadata": {"file_path": "src/pages/resolvers/writing.mdx", "file_name": "writing.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/writing.mdx", "header_path": "/Writing a Resolver/"}, "hash": "dcc1e49d02207c3d9158de6baf73461475c1ab286ac108fe6e425673eb574c9e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Offchain Resolvers\n\nAn offchain resolver is a resolver that implements CCIP Read to defer a name's resolution to an HTTP server. This server can then load data from any source including offchain databases, APIs, or other blockchains. [Learn more about CCIP Read](/resolvers/ccip-read).\n\nAn equivalent offchain resolver to the above onchain example looks something like this:\n\n```solidity\ncontract OffchainResolver {\n    string public url =\n        \"https://docs.ens.domains/api/example/basic-gateway\";\n\n    error OffchainLookup(\n        address sender,\n        string[] urls,\n        bytes callData,\n        bytes4 callbackFunction,\n        bytes extraData\n    );\n\n    function addr(bytes32 node) external view returns (address) {\n        bytes memory callData = abi.encodeWithSelector(\n            OffchainResolver.addr.selector,\n            node\n        );\n\n        string[] memory urls = new string[](1);\n        urls[0] = url;\n\n        revert OffchainLookup(\n            address(this),\n            urls,\n            callData,\n            OffchainResolver.addrCallback.selector,\n            abi.encode(callData, address(this))\n        );\n    }\n\n    function addrCallback(\n        bytes calldata response,\n        bytes calldata\n    ) external pure returns (address) {\n        address _addr = abi.decode(response, (address));\n        return _addr;\n    }\n\n    function supportsInterface(\n        bytes4 interfaceID\n    ) external pure returns (bool) {\n        return\n            interfaceID == OffchainResolver.supportsInterface.selector ||\n            interfaceID == OffchainResolver.addr.selector;\n    }\n}\n```\n\n:::note\nThis is not secure since it doesn't implement any form of verification in the callback function, and is only suitable for demonstration purposes.\n:::\n\nAny ENS name that sets its resolver to this contract would resolve to whatever address the Gateway returns, which can be changed at any time offchain for free. See the [gateway code here](https://github.com/ensdomains/docs/blob/master/functions/api/example/basic-gateway.ts).\n\nFor the same functionality to work with subnames, you'd need to implement the `resolve()` method from ENSIP-10. A feature-complete example can be found [here](https://github.com/ensdomains/ccip-tools/blob/master/contracts/OffchainResolver.sol), and easily deployed via [ccip.tools](https://ccip.tools/).", "mimetype": "text/plain", "start_char_idx": 3541, "end_char_idx": 5897, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ce2aa491-c90e-4a78-9d70-aa7f51c7f268": {"__data__": {"id_": "ce2aa491-c90e-4a78-9d70-aa7f51c7f268", "embedding": null, "metadata": {"file_path": "src/pages/terminology.mdx", "file_name": "terminology.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/terminology.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/terminology.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["multiple", "identifier", "glossary", "consist", "called", "separated", "terminology", "import", "embedlink", "contains", "overview", "terms", "technical", "names"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7f66dc56567cfb3fa29430626fb4aab5fd255fe4", "node_type": "4", "metadata": {"file_path": "src/pages/terminology.mdx", "file_name": "terminology.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/terminology.mdx"}, "hash": "42f87c36c7cc2a56f60d0961d5cca5d97c1a03079a988dbb2af4c97e9fbb9bcd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a553b53c-3053-493b-b1e8-5463762b1ff8", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "916e739d31a6a6a690bd930c2597edbfa133bd9baa0cb11dde50e62030183f50", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: A technical overview of all the terminology used in the ENS documentation.\n---\n\nimport { EmbedLink } from '../components/EmbedLink' # Terminology\n\nThis page contains a glossary of terms used in the ENS documentation. ## Name\n\nAn ENS identifier such as 'alice.eth'. Names may consist of multiple parts, called labels, separated by dots. This also includes DNS names like `name.xyz`, or subnames like `sub.name.eth`. ## 2LD\n\nSecond-level domain.\nThis refers to a subname/subdomain of a top-level domain.\nFor example, `name.eth` and `name.com` are both second-level names.\nA subname of a 2LD is a third-level domain or 3LD.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 148, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8316821d-1ba6-44e6-9f64-ad786f438683": {"__data__": {"id_": "8316821d-1ba6-44e6-9f64-ad786f438683", "embedding": null, "metadata": {"file_path": "src/pages/terminology.mdx", "file_name": "terminology.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/terminology.mdx", "header_path": "/Terminology/", "customer_id": 1, "source_url": "src/pages/terminology.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["child", "controller", "parent", "every", "naming", "refers", "subname", "subdomain", "referred", "which", "records", "whose", "names", "account"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7f66dc56567cfb3fa29430626fb4aab5fd255fe4", "node_type": "4", "metadata": {"file_path": "src/pages/terminology.mdx", "file_name": "terminology.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/terminology.mdx"}, "hash": "42f87c36c7cc2a56f60d0961d5cca5d97c1a03079a988dbb2af4c97e9fbb9bcd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "53463ec2-b0ac-430c-b209-9993eb9a80f9", "node_type": "1", "metadata": {"file_path": "src/pages/terminology.mdx", "file_name": "terminology.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/terminology.mdx", "header_path": "/Terminology/"}, "hash": "57f83bec97abcf3bbd61393c82848bd4c42a862101c528b870166bb58f1b8588", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "df7061d1-28b9-4fec-83da-1d1bb3f2ba8d", "node_type": "1", "metadata": {"header_path": "/Terminology/"}, "hash": "102906a5b61627120ec08782cdc4d9bd6265c8d035c6fd7249a35a06995cd1ea", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Subname / Subdomain\n\nA child name like `sub.name.eth`, whose parent is `name.eth`. Also referred to as a \"subdomain\". Every name (except for the root node) has a parent. For example, `name.eth` is a subname of `eth`.\n\n```\nvault.luc.eth\n``` ## TLD\n\nTop-level domain. This refers to names like `eth`, `com`, `xyz` which lie at the \"top\" of the naming hierarchy.\n\n```\n.eth .com .xyz\n``` ## Controller\n\nThe account that may edit the records of a name. The Controller may be changed by the Registrant or Controller.", "mimetype": "text/plain", "start_char_idx": 642, "end_char_idx": 884, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2302c724-603c-449d-b856-c08dcdb6a843": {"__data__": {"id_": "2302c724-603c-449d-b856-c08dcdb6a843", "embedding": null, "metadata": {"file_path": "src/pages/terminology.mdx", "file_name": "terminology.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/terminology.mdx", "header_path": "/Terminology/", "customer_id": 1, "source_url": "src/pages/terminology.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["identifying", "labelhash", "algorithm", "individual", "component", "namehash", "uniquely", "keccak256", "return", "takes", "cryptographic", "process", "label"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7f66dc56567cfb3fa29430626fb4aab5fd255fe4", "node_type": "4", "metadata": {"file_path": "src/pages/terminology.mdx", "file_name": "terminology.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/terminology.mdx"}, "hash": "42f87c36c7cc2a56f60d0961d5cca5d97c1a03079a988dbb2af4c97e9fbb9bcd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cb246b82-052f-465d-b9df-cf16ce2602a5", "node_type": "1", "metadata": {"file_path": "src/pages/terminology.mdx", "file_name": "terminology.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/terminology.mdx", "header_path": "/Terminology/"}, "hash": "84d98313562bfd279b8b178f7c0fe8c4aa077d783418d5cd84942856a9d778e3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a92d9750-d317-47c8-88b5-feda8584e073", "node_type": "1", "metadata": {"header_path": "/Terminology/"}, "hash": "107a4d4ccac4fbcb9e98bb9ae0bf39c0e10c6a6feecaece81db0a09b012d9c16", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Label\n\nAn individual component of a name, such as 'alice'. ## Labelhash\n\nThe keccak256 hash of an individual label. ## Namehash\n\nThe algorithm used to process an ENS name and return a cryptographic hash uniquely identifying that name. Namehash takes a name as input and produces a _node_. ## Node\n\nA cryptographic hash uniquely identifying a name. ## Owner\n\nThe owner of a name is the entity referenced in the ENS registry's owner field. An owner may transfer ownership, set a resolver or TTL, and create or reassign subdomains.", "mimetype": "text/plain", "start_char_idx": 1159, "end_char_idx": 1220, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fcbe030f-93cb-4ddd-afd8-73d951c5897b": {"__data__": {"id_": "fcbe030f-93cb-4ddd-afd8-73d951c5897b", "embedding": null, "metadata": {"file_path": "src/pages/terminology.mdx", "file_name": "terminology.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/terminology.mdx", "header_path": "/Terminology/", "customer_id": 1, "source_url": "src/pages/terminology.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["piece", "ownership", "common", "address", "registration", "record", "which", "determines", "points", "distinct", "information"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7f66dc56567cfb3fa29430626fb4aab5fd255fe4", "node_type": "4", "metadata": {"file_path": "src/pages/terminology.mdx", "file_name": "terminology.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/terminology.mdx"}, "hash": "42f87c36c7cc2a56f60d0961d5cca5d97c1a03079a988dbb2af4c97e9fbb9bcd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1fb1743a-8914-415d-857b-a80ad29185eb", "node_type": "1", "metadata": {"file_path": "src/pages/terminology.mdx", "file_name": "terminology.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/terminology.mdx", "header_path": "/Terminology/"}, "hash": "90eb48f49eb4596247a4df55572a81e00cedf26648fa5e7d1df50dbd5b5e442f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c499bc9c-29c3-479b-b460-7cc6aef9a576", "node_type": "1", "metadata": {"header_path": "/Terminology/"}, "hash": "9fc4de8d1695875b466762dc9c066c518f0e9a4f3942c79d39884dc8672c0a79", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Record\n\nA piece of information that an ENS name \"resolves\" to (points to). The most common record is the ETH Address record, which determines what ETH 0x address an ENS name points to. ## Registration\n\nA registration is a registrar's record of a user's ownership of a name. This is distinct from the owner field in the Registry; registrations are maintained in the registrar contract and additionally store information on expiry date, fees paid, etc. ### Registrar\n\nA registrar is a contract responsible for allocating subdomains. Registrars can be configured at any level of ENS, and are pointed to by the owner field of the registry.", "mimetype": "text/plain", "start_char_idx": 1696, "end_char_idx": 1883, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "60146657-9825-4dcb-97e0-d4985eaee3bb": {"__data__": {"id_": "60146657-9825-4dcb-97e0-d4985eaee3bb", "embedding": null, "metadata": {"file_path": "src/pages/terminology.mdx", "file_name": "terminology.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/terminology.mdx", "header_path": "/Terminology/Registration/", "customer_id": 1, "source_url": "src/pages/terminology.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["reclaim", "ownership", "level", "registrant", "maintains", "domain", "lookups", "registry", "transfer", "mapping", "owner", "contract"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7f66dc56567cfb3fa29430626fb4aab5fd255fe4", "node_type": "4", "metadata": {"file_path": "src/pages/terminology.mdx", "file_name": "terminology.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/terminology.mdx"}, "hash": "42f87c36c7cc2a56f60d0961d5cca5d97c1a03079a988dbb2af4c97e9fbb9bcd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "234dbf05-c055-4546-8aa0-22bee2f93e8a", "node_type": "1", "metadata": {"file_path": "src/pages/terminology.mdx", "file_name": "terminology.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/terminology.mdx", "header_path": "/Terminology/Registration/"}, "hash": "37c2d327fe061e17bbd75214be5abb28becb6ab06a2c2c02db2be923e3876e14", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "93405276-987c-4f92-a8bf-e54f7554b7f6", "node_type": "1", "metadata": {"header_path": "/Terminology/Registration/"}, "hash": "d6d79d015828dc5e0268d6e4271ffeb086f8a60bb9b25c7ae37094197c7afc54", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Registrant\n\nThe owner of a registration. The registrant may transfer the registration, set the Controller, and reclaim ownership of the name in the registry if required. ### Registry\n\nThe core contract of ENS, the registry maintains a mapping from domain name (at any level - x, y.x, z.y.x etc) to owner, resolver, and time-to-live. All lookups start with the Registry. ### Expiry\n\nThe date and time at which an ENS name expires.\nThe implications of expiration depend on the type of name it is.\nWhen a .eth 2LD expires (and its grace period elapses), then you lose ownership of the name.\nWhen a wrapped subname expires, you may or may not lose ownership, depending on whether the name was emancipated.", "mimetype": "text/plain", "start_char_idx": 2338, "end_char_idx": 2511, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "28df59b3-1bc8-4f7d-be61-b9556a8ec576": {"__data__": {"id_": "28df59b3-1bc8-4f7d-be61-b9556a8ec576", "embedding": null, "metadata": {"file_path": "src/pages/terminology.mdx", "file_name": "terminology.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/terminology.mdx", "header_path": "/Terminology/Registration/", "customer_id": 1, "source_url": "src/pages/terminology.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["renew", "retain", "after", "grace", "window", "stands", "registry", "currently", "which", "field", "owner", "short", "still", "period"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7f66dc56567cfb3fa29430626fb4aab5fd255fe4", "node_type": "4", "metadata": {"file_path": "src/pages/terminology.mdx", "file_name": "terminology.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/terminology.mdx"}, "hash": "42f87c36c7cc2a56f60d0961d5cca5d97c1a03079a988dbb2af4c97e9fbb9bcd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8e3720a3-2b9a-4d83-8283-b4a3bf11e068", "node_type": "1", "metadata": {"file_path": "src/pages/terminology.mdx", "file_name": "terminology.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/terminology.mdx", "header_path": "/Terminology/Registration/"}, "hash": "fe736cb39202640490706277048d428c1c797255f122e55d10f818f9b1159032", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a008e4a9-a3e1-445b-b692-ba6efbcbc8a3", "node_type": "1", "metadata": {"header_path": "/Terminology/Registration/"}, "hash": "dab1ec7969ae010b58862f36225eed333d187f541b7f0724c1016be23f2fbba9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Grace Period\n\nThis is a short window of time after an ENS .eth name expires, in which the owner can still renew and retain the name. Currently this window is 90 days. ### TTL\n\nStands for \"Time To Live\". This is a field in the core registry that can be set alongside the resolver. It can be used as a hint for clients to decide how long to cache resolved data. ## DNS\n\nThis is the Domain Name Service used by the internet to resolve addresses and other records from human-readable names. ENS aims to be fully complementary and compatible with DNS, and supports easy importing of DNS names via a special [DNSSEC](#dnssec) registrar.", "mimetype": "text/plain", "start_char_idx": 3047, "end_char_idx": 3217, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f6717d28-06d3-4f9c-8b36-72cbf03a3f73": {"__data__": {"id_": "f6717d28-06d3-4f9c-8b36-72cbf03a3f73", "embedding": null, "metadata": {"file_path": "src/pages/terminology.mdx", "file_name": "terminology.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/terminology.mdx", "header_path": "/Terminology/DNS/", "customer_id": 1, "source_url": "src/pages/terminology.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["importing", "allows", "owners", "security", "stands", "domain", "system", "cryptographically", "supports", "support", "owner", "particular", "names", "dnssec"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7f66dc56567cfb3fa29430626fb4aab5fd255fe4", "node_type": "4", "metadata": {"file_path": "src/pages/terminology.mdx", "file_name": "terminology.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/terminology.mdx"}, "hash": "42f87c36c7cc2a56f60d0961d5cca5d97c1a03079a988dbb2af4c97e9fbb9bcd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4bd03b56-84ce-47ee-bef9-600031a7b85d", "node_type": "1", "metadata": {"file_path": "src/pages/terminology.mdx", "file_name": "terminology.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/terminology.mdx", "header_path": "/Terminology/"}, "hash": "2b5d8fda80d0bf4f42444c0aba47ff0062cd06ae6b387784829a559439703909", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0ec3c2d5-a60e-4161-8bb5-b72c3896a3e2", "node_type": "1", "metadata": {"header_path": "/Terminology/"}, "hash": "76b48fd73d24d0fa55fe3de2e061c649f4b658b9c9ee8ba18fc095dfca4b87d2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### DNSSEC\n\nStands for Domain Name System Security Extensions. When a particular DNS TLD supports DNSSEC, then the owners of names can cryptographically sign records. This allows ENS to support easy importing of DNS names into the ENS registry, as the owner of the DNS name can prove ownership with those signed records. ## Resolver\n\nA resolver is a contract that maps from name to the resource (e.g., cryptocurrency addresses, content hash, etc). Resolvers are pointed to by the resolver field of the registry.", "mimetype": "text/plain", "start_char_idx": 3685, "end_char_idx": 4005, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d0304bb5-369a-4cf3-b354-355f97a81f05": {"__data__": {"id_": "d0304bb5-369a-4cf3-b354-355f97a81f05", "embedding": null, "metadata": {"file_path": "src/pages/terminology.mdx", "file_name": "terminology.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/terminology.mdx", "header_path": "/Terminology/Resolver/", "customer_id": 1, "source_url": "src/pages/terminology.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["wildcard", "scheme", "allows", "either", "refers", "subnames", "supports", "resolver", "their", "clients", "resolve", "exist"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7f66dc56567cfb3fa29430626fb4aab5fd255fe4", "node_type": "4", "metadata": {"file_path": "src/pages/terminology.mdx", "file_name": "terminology.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/terminology.mdx"}, "hash": "42f87c36c7cc2a56f60d0961d5cca5d97c1a03079a988dbb2af4c97e9fbb9bcd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0ec3c2d5-a60e-4161-8bb5-b72c3896a3e2", "node_type": "1", "metadata": {"file_path": "src/pages/terminology.mdx", "file_name": "terminology.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/terminology.mdx", "header_path": "/Terminology/"}, "hash": "fcc3d5d7c1ce6ae5092ca24de4acdbd73843251c221a2383a1d5f3dad5d48e3f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "34528f74-22d4-409f-a690-ca4e841ccafa", "node_type": "1", "metadata": {"header_path": "/Terminology/"}, "hash": "05618d9d948572db893aa1e36974e5cc5d83e90a23ab14f73f148f1751fce1c6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Wildcard Resolver\n\nThis refers to a resolver that supports [ENSIP-10](/ensip/10). This scheme allows clients to resolve data for subnames that either don't have a resolver of their own, or subnames that may not even exist on-chain at all. For offchain names, this is typically used in conjunction with [CCIP Read](#ccip-read). ## Public Resolver\n\nThis is a standard resolver contract implementation written by ENS Labs. It supports all record types and anyone can use it. This is the default resolver used when registering a new name via the official manager app.", "mimetype": "text/plain", "start_char_idx": 4199, "end_char_idx": 4529, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d552f198-d6b0-49ac-ba00-e4c968d736da": {"__data__": {"id_": "d552f198-d6b0-49ac-ba00-e4c968d736da", "embedding": null, "metadata": {"file_path": "src/pages/terminology.mdx", "file_name": "terminology.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/terminology.mdx", "header_path": "/Terminology/", "customer_id": 1, "source_url": "src/pages/terminology.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["typically", "special", "ethereum", "mainnet", "offchain", "actual", "EIP-3668", "posted", "chain", "example", "resolver", "respect", "names"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7f66dc56567cfb3fa29430626fb4aab5fd255fe4", "node_type": "4", "metadata": {"file_path": "src/pages/terminology.mdx", "file_name": "terminology.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/terminology.mdx"}, "hash": "42f87c36c7cc2a56f60d0961d5cca5d97c1a03079a988dbb2af4c97e9fbb9bcd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "34528f74-22d4-409f-a690-ca4e841ccafa", "node_type": "1", "metadata": {"file_path": "src/pages/terminology.mdx", "file_name": "terminology.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/terminology.mdx", "header_path": "/Terminology/"}, "hash": "910b794223157128c001b0cf98a88d05860797bc21a7990574ed5b314e141f4c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "76ffd365-1819-4da7-aac3-3005ca3e82fd", "node_type": "1", "metadata": {"header_path": "/Terminology/Offchain/"}, "hash": "009e058322c2f61ca55a20d82d61250c647c791faec0019b1ac63419b7c0b69b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Offchain\n\nThis term is typically used with respect to the Ethereum Mainnet blockchain. If data is not posted to the chain via an actual Ethereum Mainnet transaction, then it is \"offchain\". ENS names can also be offchain. For example names can use a special resolver to resolve records for subnames that don't exist on-chain in the Registry. This is also typically done with [CCIP Read](#ccip-read). ### CCIP Read\n\nThe \"Cross Chain Interoperability Protocol Read\" specification, also known as [EIP-3668](https://eips.ethereum.org/EIPS/eip-3668), authored by Nick Johnson, is a specification that allows for secure and trustless offchain data retrieval.\n\nIt allows for an Ethereum call to defer to an [offchain gateway](/resolvers/ccip-read#writing-a-gateway) and then securely verify the resulting data on-chain.\nWith respect to ENS, this is typically used for offchain subnames that don't exist in the core Registry.\n\n<EmbedLink\n  title=\"Offchain Resolution\"\n  href=\"/learn/ccip-read#offchain-resolution\"\n  description=\"Read more about offchain resolution and CCIP Read here\"\n/>", "mimetype": "text/plain", "start_char_idx": 4769, "end_char_idx": 5170, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2602e596-f107-4add-b35c-c240322816fe": {"__data__": {"id_": "2602e596-f107-4add-b35c-c240322816fe", "embedding": null, "metadata": {"file_path": "src/pages/terminology.mdx", "file_name": "terminology.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/terminology.mdx", "header_path": "/Terminology/", "customer_id": 1, "source_url": "src/pages/terminology.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["primary", "ethereum", "integrating", "address", "instead", "reverse", "often", "claimed", "registry", "referred", "associated", "represents", "displayed", "particular", "account"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7f66dc56567cfb3fa29430626fb4aab5fd255fe4", "node_type": "4", "metadata": {"file_path": "src/pages/terminology.mdx", "file_name": "terminology.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/terminology.mdx"}, "hash": "42f87c36c7cc2a56f60d0961d5cca5d97c1a03079a988dbb2af4c97e9fbb9bcd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "76ffd365-1819-4da7-aac3-3005ca3e82fd", "node_type": "1", "metadata": {"file_path": "src/pages/terminology.mdx", "file_name": "terminology.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/terminology.mdx", "header_path": "/Terminology/Offchain/"}, "hash": "134f8f47572d1d6667a89b7c0bfbfb619d493bac5cdb0e1b4bc1bb899716bf23", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ae64a5ad-8f7d-4c9e-b5bc-06f955cf5250", "node_type": "1", "metadata": {"header_path": "/Terminology/Primary Name/"}, "hash": "f6415aae4b788652cefcaa4ed081542183b36eb7423d2ac31712683dd761f36a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Primary Name\n\nThe ENS name that you want a particular ETH account to be associated with. When set, it will be displayed instead of your 0x address on integrating websites/apps. This is also often referred to as the \"reverse record\". ### Reverse Node\n\nA node in the Registry that can be claimed for any Ethereum account. The name this node represents is `[addr].addr.reverse`, where `[addr]` is the Ethereum public address (lowercase, without the \"0x\"). These reverse nodes are typically used to set a [Primary Name](#primary-name) for an account.", "mimetype": "text/plain", "start_char_idx": 5853, "end_char_idx": 6088, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ed81e182-5cc6-4ff5-843e-95c909104924": {"__data__": {"id_": "ed81e182-5cc6-4ff5-843e-95c909104924", "embedding": null, "metadata": {"file_path": "src/pages/terminology.mdx", "file_name": "terminology.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/terminology.mdx", "header_path": "/Terminology/Primary Name/", "customer_id": 1, "source_url": "src/pages/terminology.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["specific", "contract", "allows", "multiple", "namewrapper", "referring", "record", "reverse", "subnames", "wrapped", "technically", "records", "names", "technical", "includes"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7f66dc56567cfb3fa29430626fb4aab5fd255fe4", "node_type": "4", "metadata": {"file_path": "src/pages/terminology.mdx", "file_name": "terminology.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/terminology.mdx"}, "hash": "42f87c36c7cc2a56f60d0961d5cca5d97c1a03079a988dbb2af4c97e9fbb9bcd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ae64a5ad-8f7d-4c9e-b5bc-06f955cf5250", "node_type": "1", "metadata": {"file_path": "src/pages/terminology.mdx", "file_name": "terminology.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/terminology.mdx", "header_path": "/Terminology/Primary Name/"}, "hash": "c8480d50d0104eb75df42d06454a20731c543421f97e04d1118875685c913c19", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "61983615-3ff4-4ef0-b08e-ebc94e935f38", "node_type": "1", "metadata": {"header_path": "/Terminology/"}, "hash": "4e24cbc2789765e7d05f1b029aee5315049879ced9338f62eb47c096582351d7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Reverse Record\n\nUsually, this is referring to the [Primary Name](#primary-name). Technically speaking, a [Reverse Node](#reverse-node) can have multiple records set on it, the same as any node. ## NameWrapper ### Wrapped Name\n\nThe [ENS Name Wrapper](/wrapper/overview) is a contract for ENS that allows you to \"wrap\" any ENS name into a ERC-1155 NFT. This includes not only .eth 2LDs like `name.eth`, but also DNS names like `name.xyz`, or subnames like `sub.name.eth`. ### Fuse\n\nThe technical term for a specific \"permission\" bit for a wrapped name. As the name implies, once that bit is flipped on, the fuse is burnt and cannot be unburnt (unless the name expires).", "mimetype": "text/plain", "start_char_idx": 6405, "end_char_idx": 6602, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c7ae6db5-b344-45d3-b778-5c942c979970": {"__data__": {"id_": "c7ae6db5-b344-45d3-b778-5c942c979970", "embedding": null, "metadata": {"file_path": "src/pages/terminology.mdx", "file_name": "terminology.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/terminology.mdx", "header_path": "/Terminology/", "customer_id": 1, "source_url": "src/pages/terminology.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["allows", "offchain", "indexed", "usually", "thegraph", "refers", "documentation", "using", "subgraph", "useful", "official", "collection", "service", "maintained"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7f66dc56567cfb3fa29430626fb4aab5fd255fe4", "node_type": "4", "metadata": {"file_path": "src/pages/terminology.mdx", "file_name": "terminology.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/terminology.mdx"}, "hash": "42f87c36c7cc2a56f60d0961d5cca5d97c1a03079a988dbb2af4c97e9fbb9bcd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "23c91cf0-f508-4a80-b7d3-372c40c77db9", "node_type": "1", "metadata": {"file_path": "src/pages/terminology.mdx", "file_name": "terminology.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/terminology.mdx", "header_path": "/Terminology/NameWrapper/"}, "hash": "1f63068e7d331e67aea48260a2063aecccd98361a2411a3db525258ada11427c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Subgraph\n\nAn indexed collection of data using TheGraph protocol.\nIn this documentation portal, \"the subgraph\" usually refers to the official ENS subgraph maintained by ENS Labs.\nThis is a useful offchain service that allows clients to query for information about names or accounts. ---\ndescription: The Avatar record is a special record that allows for user profile pictures to be stored on ENS.\n---\n\nimport { EnsProfile } from '../../components/EnsProfile'\nimport { Card } from '../../components/ui/Card'", "mimetype": "text/plain", "start_char_idx": 7081, "end_char_idx": 7365, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ab31c5c0-e2c6-4cbe-8f24-84c25226b8b6": {"__data__": {"id_": "ab31c5c0-e2c6-4cbe-8f24-84c25226b8b6", "embedding": null, "metadata": {"file_path": "src/pages/web/avatars.mdx", "file_name": "avatars.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/avatars.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/web/avatars.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["special", "across", "enables", "makes", "profiles", "identity", "record", "avatar", "covers", "personalization", "avatars", "users", "getting", "their", "hideaddress"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f3fb6dc2279c705193f531307a22840cd583caff", "node_type": "4", "metadata": {"file_path": "src/pages/web/avatars.mdx", "file_name": "avatars.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/avatars.mdx"}, "hash": "a8ff6933c12d776f36e9243429367cf7563a2af0faada873666b0ead5d071f5d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4f8adfd2-2d89-4a5f-93db-360f28e094bc", "node_type": "1", "metadata": {"file_path": "src/pages/web/avatars.mdx", "file_name": "avatars.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/avatars.mdx", "header_path": "/"}, "hash": "be3f7c7c3a7ca6af565e491fc1018f8ef76a9ed0613c95ba15e910cc58bcca12", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5843b2bd-fbe6-4855-ae0e-0a64f01d8101", "node_type": "1", "metadata": {"header_path": "/Avatars/"}, "hash": "a292b040e0a97114032be60af8b715b31f9c2884e533980ec4aefe56601bd853", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Avatars\n\nPersonalization of profiles is what makes identity great.\nThis page covers the very special **avatar** record that enables users to take their avatar with them across the web.\n\n<Card className=\"flex justify-center\">\n  <EnsProfile name=\"nick.eth\" hideAddress />\n</Card> ## Getting the user's Avatar\n\nAvatars are an awesome way for users to express themselves. To get the user's avatar, all you need is their **name**. If you only have their address, see [primary names](/web/reverse#get).\nThe following code snippets let you get the avatar for a user.\n\n:::code-group\n\n```tsx [Wagmi]\n// https://wagmi.sh/react/hooks/useEnsAvatar\nimport { useEnsAvatar } from 'wagmi'\n\nfunction App() {\n  const { data: ensAvatar } = useEnsAvatar({\n    address: 'nick.eth',\n    chainId: 1, // (1 = Ethereum Mainnet, 11155111 = Sepolia)\n  })\n\n  return (\n    <img\n      src={ensAvatar || 'https://avatars.jakerunzer.com/nick.eth'}\n      alt=\"nick.eth\"\n    />\n  )\n}\n```\n\n```ts [Ethers]\n// https://docs.ethers.org/v5/api/providers/provider/#Provider-getAvatar\nconst ensAvatar = await provider.getAvatar('nick.eth')\n```\n\n```ts [Viem]\n// https://viem.sh/docs/ens/actions/getEnsAvatar.html\nimport { normalize } from 'viem/ens'\n\nimport { publicClient } from './client'\n\nconst ensAvatar = await publicClient.getEnsAvatar({\n  name: normalize('nick.eth'),\n})\n```\n\n```py [Web3.py]\n# https://web3py.readthedocs.io/en/latest/ens_overview.html#read-text-metadata-for-an-ens-record\nfrom ens.auto import ns\n\navatar = ns.get_text('alice.eth', 'avatar')\n```\n\n```go [Go]\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/ethereum/go-ethereum/ethclient\"\n\tens \"github.com/wealdtech/go-ens/v3\"\n)\n\nfunc main() {\n\tclient, _ := ethclient.Dial(\"https://rpc.ankr.com/eth\")\n\n\tdomain, _ := ens.Normalize(\"nick.eth\")\n\tresolver, _ := ens.NewResolver(client, domain)\n\tavatar, _ := resolver.Text(\"avatar\")\n\n\tfmt.Println(\"Avatar: \", avatar)\n}\n```\n\n:::", "mimetype": "text/plain", "start_char_idx": 225, "end_char_idx": 504, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0416dbc0-0794-4ea1-9ee3-76c53a724acd": {"__data__": {"id_": "0416dbc0-0794-4ea1-9ee3-76c53a724acd", "embedding": null, "metadata": {"file_path": "src/pages/web/avatars.mdx", "file_name": "avatars.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/avatars.mdx", "header_path": "/Avatars/Getting the user's Avatar/", "customer_id": 1, "source_url": "src/pages/web/avatars.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["retrieve", "ethereum", "allows", "logic", "opposed", "interacting", "extra", "metadata", "avatar", "application", "adding", "course", "service"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f3fb6dc2279c705193f531307a22840cd583caff", "node_type": "4", "metadata": {"file_path": "src/pages/web/avatars.mdx", "file_name": "avatars.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/avatars.mdx"}, "hash": "a8ff6933c12d776f36e9243429367cf7563a2af0faada873666b0ead5d071f5d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5843b2bd-fbe6-4855-ae0e-0a64f01d8101", "node_type": "1", "metadata": {"file_path": "src/pages/web/avatars.mdx", "file_name": "avatars.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/avatars.mdx", "header_path": "/Avatars/"}, "hash": "22a5e888eb08a18a92e0b6388ac361b2050d4d8958a359ba094b86a53e29f6c4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0060e711-3de9-4d20-b60c-62c1ec441def", "node_type": "1", "metadata": {"header_path": "/Avatars/"}, "hash": "b5905dd9f2ba1b3c24b77e7030e25997ccb05f5a6a0a4841d5b23e03ee73bd8c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### The Metadata Service\n\nThe [metadata service](https://metadata.ens.domains/docs) is run by ENS Labs. It is a free service web service that allows you to retrieve the\navatar of an ENS name via a web request, as opposed to adding extra logic to your application and interacting\nwith an ethereum node. This is of course centralised and should be used if absolutely necessary. ## What exactly is an Avatar Record?\n\nAn avatar record is simply a [text record](/web/records) that has \"avatar\" as its key and a URI as its value,\nwith some rules about what URI schemes are supported and how to process them. For more info, see [ENSIP-11](/ensip/12).", "mimetype": "text/plain", "start_char_idx": 2127, "end_char_idx": 2502, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ccf5c083-dec9-4444-9e66-be0571075a97": {"__data__": {"id_": "ccf5c083-dec9-4444-9e66-be0571075a97", "embedding": null, "metadata": {"file_path": "src/pages/web/avatars.mdx", "file_name": "avatars.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/avatars.mdx", "header_path": "/Avatars/", "customer_id": 1, "source_url": "src/pages/web/avatars.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["final", "result", "library", "expected", "EIP-155", "schemes", "application", "supported", "depending", "which", "support", "using", "number", "always", "clients", "decided"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f3fb6dc2279c705193f531307a22840cd583caff", "node_type": "4", "metadata": {"file_path": "src/pages/web/avatars.mdx", "file_name": "avatars.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/avatars.mdx"}, "hash": "a8ff6933c12d776f36e9243429367cf7563a2af0faada873666b0ead5d071f5d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0060e711-3de9-4d20-b60c-62c1ec441def", "node_type": "1", "metadata": {"file_path": "src/pages/web/avatars.mdx", "file_name": "avatars.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/avatars.mdx", "header_path": "/Avatars/"}, "hash": "43df4b5f4bd08b067424ca57a25710735d10129d431be1d3a476c917bcb05b8e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "18fe7ee9-c80b-4fb3-abda-8eea6606b18a", "node_type": "1", "metadata": {"header_path": "/Avatars/"}, "hash": "487b635f05de8bbedcdb111e424b670bf45d7031e6ea750df59d1123a17841bd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Supported URI schemes\n\nClients are expected to support a number of URI schemas, which aren't always web URIs, so the final result you see in your application\nwill vary depending on how the library you are using has decided to handle avatar records.\n\n- `http(s):` - URI Scheme for HTTP(S) URLs. Libraries will most likely return the result directly.\n- `ipfs:` - URI scheme for [IPFS hashes](). Libraries may decide to fetch the result from a public gateway for you.\n- `data:` - URI Scheme for [data URIs](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URLs).\n  Libraries will most likely return the result directly.\n- `eip155:` - The URI scheme for EIP-155 identifiers for linking to NFTs on Ethereum based chains. A little complicated\n  to resolve manually, most libraries should resolve this for you and return the underlying resource.\n\n:::note\nFor EIP-155 NFT Avatars the nft must be owned by the wallet address the ENS\nname resolves to. This is done by checking the `ownerOf` method on the NFT\ncontract.\n:::", "mimetype": "text/plain", "start_char_idx": 2773, "end_char_idx": 3809, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "18fe7ee9-c80b-4fb3-abda-8eea6606b18a": {"__data__": {"id_": "18fe7ee9-c80b-4fb3-abda-8eea6606b18a", "embedding": null, "metadata": {"file_path": "src/pages/web/avatars.mdx", "file_name": "avatars.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/avatars.mdx", "header_path": "/Avatars/", "customer_id": 1, "source_url": "src/pages/web/avatars.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["scheme", "ethereum", "common", "addresses", "officially", "swarm", "different", "hashes", "above", "schemes", "supported", "avatars", "information", "shapes"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f3fb6dc2279c705193f531307a22840cd583caff", "node_type": "4", "metadata": {"file_path": "src/pages/web/avatars.mdx", "file_name": "avatars.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/avatars.mdx"}, "hash": "a8ff6933c12d776f36e9243429367cf7563a2af0faada873666b0ead5d071f5d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ccf5c083-dec9-4444-9e66-be0571075a97", "node_type": "1", "metadata": {"file_path": "src/pages/web/avatars.mdx", "file_name": "avatars.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/avatars.mdx", "header_path": "/Avatars/"}, "hash": "c0cf04fcbedb4069bd94f784e43a3126c08d0240ec20caf2465dbef0e917689b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fb8dcc3c-920f-45d5-a69d-6a2b164927b2", "node_type": "1", "metadata": {"header_path": "/Avatars/"}, "hash": "2adc54247495970ab4178fdbdea51243b54a4a91a041667f5715847ea0b55890", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Common schemes that aren't officially supported\n\n- `ethereum:` - The URI scheme for Ethereum addresses\n- `bzz:` - The URI scheme for Swarm hashes ## File Information\n\nAvatars come in many different shapes and sizes. Not just the above URI schemas, but also in different file formats, sizes, and more.\nAlthough standards exist for some of these, files are **not required** to follow these standards.\n\nBelow is some information about the avatars your app might be loading.\n\n| FileProperty:  | Info/Recommendation                                                             |\n| -------------- | ------------------------------------------------------------------------------- |\n| File Extension | Mostly `png`, `jpeg`, `jpg`, `webp`, `gif`, `webm`, but could be anything       |\n| File Size      | We recommend having sensible timeouts                                           |\n| Aspect Ratio   | We recommend `object-fit: cover` or setting a background color                  |\n| Transparency   | We recommend setting a background color as some images may contain transparency |\n\nLuckily most browsers and network libraries have default timeouts to start with, we highly recommend that if you are doing any manual avatar downloading or fetching you add a sensible timeout.", "mimetype": "text/plain", "start_char_idx": 3811, "end_char_idx": 3959, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "00f92b9d-9dea-437e-9d09-e44f754bc26b": {"__data__": {"id_": "00f92b9d-9dea-437e-9d09-e44f754bc26b", "embedding": null, "metadata": {"file_path": "src/pages/web/design.mdx", "file_name": "design.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/design.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/web/design.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["interfaces", "guidelines", "experience", "making", "sendtransactiondemo", "addresses", "design", "ensprofile", "import", "users", "simplify", "blockchain", "designing"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "52e19bc7f56ce4e0bedd245c19d616399fffefe6", "node_type": "4", "metadata": {"file_path": "src/pages/web/design.mdx", "file_name": "design.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/design.mdx"}, "hash": "68727a430ea917b4f9ac4c812b2d58633dfe66b0d9a9f86ba69ecadfb0384285", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8849d2b6-b4e6-497b-b238-299bfbd04a23", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "0aa3f7f31bd00c56cfd5c56e0862be38983e9135fa67744f27feac44bd2a2b16", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "import { EnsProfile } from '../../components/EnsProfile'\nimport { SendTransactionDemo } from '../../components/SendTransaction'\nimport { Card } from '../../components/ui/Card' # Design Guidelines [Guidelines for designing interfaces that use ENS names]\n\nENS is a tool to simplify the experience for your users by making blockchain addresses human-readable.\nHere are a series of guidelines and tools that will help you make good design choices and better implement ENS in your product. ## When to show ENS names\n\nIn every instance where a user might otherwise see an Ethereum address, you can instead display an ENS name (with its avatar, if relevant).\nThis is true for both read and write operations.\n\nAn example of read operations where it's appropriate to show an ENS name is the connected wallet status or representing an action from another user like a vote ([Snapshot is a great example](https://snapshot.box/)).\n\n<Card className=\"flex justify-center\">\n  <EnsProfile name=\"nick.eth\" />\n</Card>\n\nAn example of write operations where it's appropriate to show an ENS name is when a user is inputting an address of any kind (token transfer, smart contract interaction, etc.).\n\n<Card>\n  <SendTransactionDemo />\n</Card>\n\n<div id=\"send_transaction\" />\n\nBeyond these use cases, remember that the [ENS Public Resolver](/resolvers/public) allows you to link [different kinds of resources](/web/records) to ENS names.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 175, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a9531166-643d-4fd6-a9b0-519771bd0e37": {"__data__": {"id_": "a9531166-643d-4fd6-a9b0-519771bd0e37", "embedding": null, "metadata": {"file_path": "src/pages/web/design.mdx", "file_name": "design.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/design.mdx", "header_path": "/Design Guidelines [Guidelines for designing interfaces that use ENS names]/", "customer_id": 1, "source_url": "src/pages/web/design.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ethereum", "replacing", "addresses", "matches", "address", "reverse", "record", "should", "place", "their", "names", "shown"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "52e19bc7f56ce4e0bedd245c19d616399fffefe6", "node_type": "4", "metadata": {"file_path": "src/pages/web/design.mdx", "file_name": "design.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/design.mdx"}, "hash": "68727a430ea917b4f9ac4c812b2d58633dfe66b0d9a9f86ba69ecadfb0384285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1ed18e00-9ff7-492f-9a69-59d0a183ef56", "node_type": "1", "metadata": {"file_path": "src/pages/web/design.mdx", "file_name": "design.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/design.mdx", "header_path": "/Design Guidelines [Guidelines for designing interfaces that use ENS names]/"}, "hash": "51f1493101c790a141734bf3c30ccc27fbdabad898a0db94a7993ac62c92f6bd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8bd85dfc-52dc-470f-a860-ad161114d47d", "node_type": "1", "metadata": {"header_path": "/Design Guidelines [Guidelines for designing interfaces that use ENS names]/1. Replacing Ethereum addresses with ENS Names/"}, "hash": "b1461ce810a53281bedfdb907e2c2e6daaa027fd4d54664c13cc878037854f10", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## 1. Replacing Ethereum addresses with ENS Names\n\n:::note\nAn ENS name should only be shown in place of an Ethereum address if the user has set a reverse record for their address, and if the reverse record matches the forward resolution. [Learn more about primary names](/web/reverse).\n::: ### 1.1 - Displaying ENS names instead of Ethereum addresses\n\n{/* TODO: build a sample UI of ENS names in a list, like votes or messages or transfers */}\n\nWhen replacing Ethereum addresses with ENS names you should consider these facts and best practices:\n\n- **Design a truncated version of the ENS name:** ENS names can be very long; besides not being character-limited, users can create an infinite number of nested subdomains.\n  If you do show a truncated version of the name, you should provide a way to view the full name, such as expanding it on hover.\n- **Not all ENS names end with .eth**: ENS supports [.eth](/registry/eth) and most DNS TLDs such as [.com, .xyz, and 1200+ others](/dns/tlds).\n  A correct implementation of ENS treats any dot-separated name as a potential ENS name and will attempt a look-up.", "mimetype": "text/plain", "start_char_idx": 1415, "end_char_idx": 1704, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0913eca2-476a-4980-9ae7-7f6fd51aea3d": {"__data__": {"id_": "0913eca2-476a-4980-9ae7-7f6fd51aea3d", "embedding": null, "metadata": {"file_path": "src/pages/web/design.mdx", "file_name": "design.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/design.mdx", "header_path": "/Design Guidelines [Guidelines for designing interfaces that use ENS names]/1. Replacing Ethereum addresses with ENS Names/", "customer_id": 1, "source_url": "src/pages/web/design.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ethereum", "entirety", "address", "truncated", "display", "resolved", "associated", "notice", "always", "option", "showing", "provide"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "52e19bc7f56ce4e0bedd245c19d616399fffefe6", "node_type": "4", "metadata": {"file_path": "src/pages/web/design.mdx", "file_name": "design.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/design.mdx"}, "hash": "68727a430ea917b4f9ac4c812b2d58633dfe66b0d9a9f86ba69ecadfb0384285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8bd85dfc-52dc-470f-a860-ad161114d47d", "node_type": "1", "metadata": {"file_path": "src/pages/web/design.mdx", "file_name": "design.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/design.mdx", "header_path": "/Design Guidelines [Guidelines for designing interfaces that use ENS names]/1. Replacing Ethereum addresses with ENS Names/"}, "hash": "7804521158cc7547d0eaf5ac1a62d9148cee899f3d44483d49b9744a1b2b2845", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "94e8c25c-faf2-49ab-b641-74135056dd52", "node_type": "1", "metadata": {"header_path": "/Design Guidelines [Guidelines for designing interfaces that use ENS names]/"}, "hash": "6f26936aefe12929c7110a022ef78fa7b0f748218249749b1d11ab5f075603d9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### 1.2 - Always provide an option to see the Ethereum address associated with the ENS name\n\nIf you are showing the ENS name in its entirety or a truncated version, you should:\n\n- **Always provide the user a way to display the full Ethereum address**: Notice how if you type \"ens.eth\" in the [example above](#send_transaction), the resolved ETH address appears under the name.\n  This is especially important in high-risk situations, such as when the user is about to send a transaction or interact with a smart contract.\n- **Allow the user to copy the full Ethereum address**: Allow the user to copy the full address either through a copy button or by selecting it.\n- **Optionally give the user a way to automatically open the Ethereum address in a block explorer** such as Etherscan.\n- **Optionally show the** **balance amount of signed-in users.** User research shows that users tend to recognise their own Ethereum address through their balance, as well as the address itself.\n  This is meant only for the currently \"signed in\" user: only show their own balance and avoid showing the balance of other users.", "mimetype": "text/plain", "start_char_idx": 2525, "end_char_idx": 3635, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "94e8c25c-faf2-49ab-b641-74135056dd52": {"__data__": {"id_": "94e8c25c-faf2-49ab-b641-74135056dd52", "embedding": null, "metadata": {"file_path": "src/pages/web/design.mdx", "file_name": "design.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/design.mdx", "header_path": "/Design Guidelines [Guidelines for designing interfaces that use ENS names]/", "customer_id": 1, "source_url": "src/pages/web/design.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["accept", "ethereum", "addresses", "insert", "these", "input", "inputs", "resolve", "supposed", "where", "resolving", "should", "fields"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "52e19bc7f56ce4e0bedd245c19d616399fffefe6", "node_type": "4", "metadata": {"file_path": "src/pages/web/design.mdx", "file_name": "design.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/design.mdx"}, "hash": "68727a430ea917b4f9ac4c812b2d58633dfe66b0d9a9f86ba69ecadfb0384285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0913eca2-476a-4980-9ae7-7f6fd51aea3d", "node_type": "1", "metadata": {"file_path": "src/pages/web/design.mdx", "file_name": "design.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/design.mdx", "header_path": "/Design Guidelines [Guidelines for designing interfaces that use ENS names]/1. Replacing Ethereum addresses with ENS Names/"}, "hash": "51cfa430ede88f4ebd1b69cc08f86216cb71a7851d50f5caf5f276d814e2a0a0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1b876c94-91dd-484f-839e-1c2326b27aa7", "node_type": "1", "metadata": {"header_path": "/Design Guidelines [Guidelines for designing interfaces that use ENS names]/"}, "hash": "918f105329a91e17a68eee95ae713254af0787ab38c05476a2483706e8831122", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## 2. Resolving input fields\n\n{/* <LiveDemo id=\"send_transaction\" /> */}\n\nInput fields where a user is supposed to insert Ethereum addresses should also accept and resolve ENS names. These inputs indicate that the user wants to interact with another user's Ethereum address or contract.\n\nFollow these guidelines to create the best experience:\n\n- **Wait before resolving the ENS name**: Debounce input fields that accept ENS names to avoid unnecessary network calls. You can also wait for the user to type a minimum of 1 character on both sides of the dot before resolving the name. For example, if the user type \"ens.\", there is no chance of it being a valid ENS name and therefore no need to resolve it. But after the user types \"ens.e\", it should be treated as a potential ENS name.\n- **Don't overwrite the input field with the Ethereum address:** Show the resolved ENS name near the input field instead.\n- **Always display both the ENS name** _**and**_ **the Ethereum address together** : Do this after it has successfully been resolved.", "mimetype": "text/plain", "start_char_idx": 3637, "end_char_idx": 4677, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1b876c94-91dd-484f-839e-1c2326b27aa7": {"__data__": {"id_": "1b876c94-91dd-484f-839e-1c2326b27aa7", "embedding": null, "metadata": {"file_path": "src/pages/web/design.mdx", "file_name": "design.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/design.mdx", "header_path": "/Design Guidelines [Guidelines for designing interfaces that use ENS names]/", "customer_id": 1, "source_url": "src/pages/web/design.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["issue", "guidelines", "other", "usernames", "across", "experience", "ethereum", "accounts", "offer", "would", "improve", "which", "their", "users", "names"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "52e19bc7f56ce4e0bedd245c19d616399fffefe6", "node_type": "4", "metadata": {"file_path": "src/pages/web/design.mdx", "file_name": "design.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/design.mdx"}, "hash": "68727a430ea917b4f9ac4c812b2d58633dfe66b0d9a9f86ba69ecadfb0384285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "94e8c25c-faf2-49ab-b641-74135056dd52", "node_type": "1", "metadata": {"file_path": "src/pages/web/design.mdx", "file_name": "design.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/design.mdx", "header_path": "/Design Guidelines [Guidelines for designing interfaces that use ENS names]/"}, "hash": "66102a663a15fccdc14ac6443cd02d913db66b61ec922b0250ff2fa9e0fef803", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4b5b6e21-19bc-443f-a573-b4618f411871", "node_type": "1", "metadata": {"header_path": "/Design Guidelines [Guidelines for designing interfaces that use ENS names]/Other guidelines and tips/"}, "hash": "f9a9aab33d63e3be985036fc18d8b6fc7cdd579a12f21b9a248865519aaa9639", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Other guidelines and tips ### Usernames for accounts that don't have an ENS name\n\nYou can offer free ENS names to your users which would not only improve their experience in your application, but also across the Ethereum ecosystem.\nSee [how to issue subdomains](/web/subdomains). ### Caching and updating ENS Names\n\nIf your application needs to display many ENS Names in the UI, you can consider **caching** (for a short period of time) the ENS Name after it has been resolved or after the user has added the name in an input field.\n\nYour **optimistic UI** can display the names from cache **in non-risky situations**, in which your user for example is simply browsing, but doesn't need to act or make decisions based on the information displayed.\nHowever, **in all risky situations** \\(eg transferring anything of value or interacting with a smart contract\\), you should **perform a direct live resolution** and get the most up to date information from the ENS Registry.\n\nAlso consider that users can change their information at any time which may not be tracked in the onchain registry, so you should **periodically validate the information you cached**. [Learn more about offchain ENS names](/learn/ccip-read).", "mimetype": "text/plain", "start_char_idx": 4679, "end_char_idx": 4707, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4f8300fe-ee92-446c-b402-9846bd7abf0e": {"__data__": {"id_": "4f8300fe-ee92-446c-b402-9846bd7abf0e", "embedding": null, "metadata": {"file_path": "src/pages/web/design.mdx", "file_name": "design.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/design.mdx", "header_path": "/Design Guidelines [Guidelines for designing interfaces that use ENS names]/Other guidelines and tips/", "customer_id": 1, "source_url": "src/pages/web/design.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["practices", "ethereum", "addresses", "displaying", "notes", "there", "without", "names", "indicate", "initial", "follow"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "52e19bc7f56ce4e0bedd245c19d616399fffefe6", "node_type": "4", "metadata": {"file_path": "src/pages/web/design.mdx", "file_name": "design.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/design.mdx"}, "hash": "68727a430ea917b4f9ac4c812b2d58633dfe66b0d9a9f86ba69ecadfb0384285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0835f289-e9d0-4acf-9afb-b1a325453327", "node_type": "1", "metadata": {"file_path": "src/pages/web/design.mdx", "file_name": "design.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/design.mdx", "header_path": "/Design Guidelines [Guidelines for designing interfaces that use ENS names]/Other guidelines and tips/"}, "hash": "2ca2061d3af20d6a1fa947bdfa4aa2e87b9ae268135ff5be24f05d906f2e45aa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bccc99b5-ed04-4153-a613-7fd6c7838a0f", "node_type": "1", "metadata": {"header_path": "/Design Guidelines [Guidelines for designing interfaces that use ENS names]/"}, "hash": "1254c0d422eee0962fca6bb63859a3c07a30e98736f7f66fe958bdc8791a814e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Notes on displaying Ethereum Addresses (with or without ENS names)\n\nEven when ENS names are not available, [research](https://medium.com/@lyricalpolymath/web3designdecisionframework-e84075816515) [shows](https://medium.com/@lyricalpolymath/web3-design-principles-f21db2f240c1) that there are some good practices to follow when displaying Ethereum addresses in dApps.\n\n- **Always show the initial ' 0x '** to indicate it's an address.\n- When displaying the name in shorthand versions, **show the first 5 and last 4 characters of the address**.\n  This is not a security requirement as vanity addresses can be spoofed relatively simply; this is a good practice because some users check the beginning of the name and others check the end of the name.\n  Also, four is the highest number of elements that our mind can easily chunk, parse and remember well.\n- **Always provide a way to display the full Ethereum address.**", "mimetype": "text/plain", "start_char_idx": 5899, "end_char_idx": 6818, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bccc99b5-ed04-4153-a613-7fd6c7838a0f": {"__data__": {"id_": "bccc99b5-ed04-4153-a613-7fd6c7838a0f", "embedding": null, "metadata": {"file_path": "src/pages/web/design.mdx", "file_name": "design.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/design.mdx", "header_path": "/Design Guidelines [Guidelines for designing interfaces that use ENS names]/", "customer_id": 1, "source_url": "src/pages/web/design.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["easier", "guidelines", "library", "components", "practices", "component", "tools", "access", "design", "react", "provides", "described", "might", "names", "follow"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "52e19bc7f56ce4e0bedd245c19d616399fffefe6", "node_type": "4", "metadata": {"file_path": "src/pages/web/design.mdx", "file_name": "design.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/design.mdx"}, "hash": "68727a430ea917b4f9ac4c812b2d58633dfe66b0d9a9f86ba69ecadfb0384285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4f8300fe-ee92-446c-b402-9846bd7abf0e", "node_type": "1", "metadata": {"file_path": "src/pages/web/design.mdx", "file_name": "design.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/design.mdx", "header_path": "/Design Guidelines [Guidelines for designing interfaces that use ENS names]/Other guidelines and tips/"}, "hash": "5e692a5f9015485502d906b42e2429a002cad9264f723cea756dbd4fa0209ad6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Front-end tools\n\n[Thorin](https://thorin.ens.domains/) is a react component library for the ENS design system.\nIt provides a set of components that make it easier to follow the guidelines and best practices described above. ---\ndescription: List all names a user has, owns, or might have access to.\n--- # Listing a Users Names\n\nIn some cases you might want to show off all names that a user owns. Due to the nature of how the ENS Protocol works under the hood, this might be a slightly more difficult task than expected.\n\nFortunately, tooling has been developed to accommodate for this and to make it easier.", "mimetype": "text/plain", "start_char_idx": 6820, "end_char_idx": 7046, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a0eeff40-0958-4c82-8c7e-cdc3b77e5bf6": {"__data__": {"id_": "a0eeff40-0958-4c82-8c7e-cdc3b77e5bf6", "embedding": null, "metadata": {"file_path": "src/pages/web/enumerate.mdx", "file_name": "enumerate.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/enumerate.mdx", "header_path": "/Listing a Users Names/", "customer_id": 1, "source_url": "src/pages/web/enumerate.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["wildcard", "onchain", "ownership", "these", "about", "which", "always", "exist", "notable", "exception", "meaning", "names"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8bc9342e9ff6bb64558730297314184c1da63565", "node_type": "4", "metadata": {"file_path": "src/pages/web/enumerate.mdx", "file_name": "enumerate.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/enumerate.mdx"}, "hash": "784bbd2bd43228475c6cbb2f17123f98895de46d341e22a376fdefebec769171", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "39dd0e94-782b-47df-9799-ace0a2e0d544", "node_type": "1", "metadata": {"file_path": "src/pages/web/enumerate.mdx", "file_name": "enumerate.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/enumerate.mdx", "header_path": "/"}, "hash": "136715a62cf7b5276e85e23407a3b50da4eefb365c8611fb98ec234599bd9a90", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6ebff1be-dd06-4581-b177-bb5542ba7879", "node_type": "1", "metadata": {"header_path": "/Listing a Users Names/"}, "hash": "09eb685ab175fae24e0e4cb5e55586f483c424160db1797715fe82cf248c041a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Why not all names?\n\nNot all ENS names exist onchain ([learn more about wildcard resolution](/ensip/10)), meaning we don't always know which names a user owns/controls.\n\nThe notable exception is [second-level](/terminology#first-layer) [.eth names](/registry/eth). Ownership of these names are onchain and indexable through scanning events on the appropriate smart contracts. Note that this does not necessarily mean address and text records associated with the name are onchain ([read more about offchain resolvers](/resolvers/ccip-read)).", "mimetype": "text/plain", "start_char_idx": 387, "end_char_idx": 929, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6ebff1be-dd06-4581-b177-bb5542ba7879": {"__data__": {"id_": "6ebff1be-dd06-4581-b177-bb5542ba7879", "embedding": null, "metadata": {"file_path": "src/pages/web/enumerate.mdx", "file_name": "enumerate.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/enumerate.mdx", "header_path": "/Listing a Users Names/", "customer_id": 1, "source_url": "src/pages/web/enumerate.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["guidelines", "enter", "important", "recommended", "using", "generally", "described", "below", "allow", "manually", "always", "methods", "names", "should"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8bc9342e9ff6bb64558730297314184c1da63565", "node_type": "4", "metadata": {"file_path": "src/pages/web/enumerate.mdx", "file_name": "enumerate.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/enumerate.mdx"}, "hash": "784bbd2bd43228475c6cbb2f17123f98895de46d341e22a376fdefebec769171", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a0eeff40-0958-4c82-8c7e-cdc3b77e5bf6", "node_type": "1", "metadata": {"file_path": "src/pages/web/enumerate.mdx", "file_name": "enumerate.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/enumerate.mdx", "header_path": "/Listing a Users Names/"}, "hash": "74feedacb5aca1cc4ed2d75cd331817dbe92e82de90f1f5483e20bc131772559", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a3fbfd85-9ef9-4a01-99d0-5d464d6f8903", "node_type": "1", "metadata": {"header_path": "/Listing a Users Names/"}, "hash": "64f4d1a13defccd957d6077a97128abdc3376192ff47fb74bceaa533820b518d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Guidelines\n\nWhen using one of the methods described below it is important to keep in mind that you should always allow for a user to manually enter a name, as not all names are indexable.\n\nIt is generally recommended to allow users to input a name using an [input box](/web/design#2-resolving-input-fields) and to verify it resolves to the correct address upon user-completion. ## The Graph\n\nThe [ENS subgraph](/web/subgraph) indexes all events from relevant smart contracts and exposes them via a GraphQL endpoint. Note that addresses in filters must be lowercased.\n\nENSjs makes it easy to run common queries on the subgraph with strong type safety. Docs can be found [here](https://github.com/ensdomains/ensjs/tree/main/docs/subgraph).\n\n```graphql\n{\n  domains(where: { owner: \"0x225f137127d9067788314bc7fcc1f36746a3c3b5\" }) {\n    name\n  }\n  wrappedDomains(\n    where: { owner: \"0x225f137127d9067788314bc7fcc1f36746a3c3b5\" }\n  ) {\n    name\n  }\n}\n```", "mimetype": "text/plain", "start_char_idx": 931, "end_char_idx": 1311, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "79c27988-3214-4b16-bffa-e9b236a31c0c": {"__data__": {"id_": "79c27988-3214-4b16-bffa-e9b236a31c0c", "embedding": null, "metadata": {"file_path": "src/pages/web/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/index.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/web/index.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["section", "leverage", "experience", "started", "improve", "standards", "break", "following", "import", "embedlink", "getting", "examples", "through", "walks"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "edc9cabb3ad17e1bddd327b994b4a110d5f3aa89", "node_type": "4", "metadata": {"file_path": "src/pages/web/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/index.mdx"}, "hash": "f695af59a73a786c3d67117007464c8d3c20f75ce4f8633181503becbe2478fe", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a45ba132-8de2-4845-8143-dc956babd87f", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "a3c99d6cec005356e1d83f11ed511f4984b6110a0ce15706c3302ada324ca9a8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "import { EmbedLink } from '../../components/EmbedLink'\nimport { Card } from '../../components/ui/Card' # Getting Started [Integrate ENS into your dApp]\n\nThis section walks you through how to leverage the ENS open standards to improve the user experience of your app.\n\n{/* TODO: Break the following examples into a component to fetch live data */}\n\n<Card className=\"flex items-center justify-center gap-2\">\n  <div className=\"flex flex-col gap-2 rounded-md border p-2 px-3\">\n    <div className=\"flex items-center gap-2\">\n      <object\n        data={'https://ens-api.gregskril.com/avatar/vitalik.eth?width=64'}\n        type=\"image/jpeg\"\n        className=\"aspect-square h-full w-8 rounded\"\n      >\n        <img src=\"https://docs.ens.domains/fallback.svg\" />\n      </object>\n      <span>vitalik.eth</span>\n    </div>\n  </div>\n  <span>\u27a1\ufe0f</span>\n  <div className=\"flex flex-col justify-start gap-1 rounded-md border p-2 px-3\">\n    <span>mi pinxe lo crino tcati</span>\n    <span>0xd8d...6045</span>\n  </div>\n</Card>\n\n<Card>\n  <div className=\"flex items-stretch justify-center gap-2\">\n    <div className=\"flex flex-col justify-between rounded-md border p-2 px-3\">\n      <span>0xb8c...67d5</span>\n      <span>0x866...5eEE</span>\n      <span>0xd8d...6045</span>\n    </div>\n    <span className=\"flex flex-col gap-3 pt-3\">\n      <span>\u27a1\ufe0f</span>\n      <span>\u27a1\ufe0f</span>\n      <span>\u27a1\ufe0f</span>\n    </span>\n    <div className=\"flex flex-col gap-2 rounded-md border p-2 px-3\">\n      {['nick.eth', 'jefflau.eth', 'vitalik.eth'].map((name) => (\n        <div className=\"flex items-center gap-2\" key={name}>\n          <object\n            data={'https://ens-api.gregskril.com/avatar/' + name + '?width=64'}\n            type=\"image/jpeg\"\n            className=\"aspect-square h-full w-8 rounded\"\n          >\n            <img src=\"/img/fallback-avatar.svg\" />\n          </object>\n          <span>{name}</span>\n        </div>\n      ))}\n    </div>\n  </div>\n</Card>", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 102, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b9e6634e-54c3-4a6f-884f-c06ff80db216": {"__data__": {"id_": "b9e6634e-54c3-4a6f-884f-c06ff80db216", "embedding": null, "metadata": {"file_path": "src/pages/web/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/index.mdx", "header_path": "/Getting Started [Integrate ENS into your dApp]/", "customer_id": 1, "source_url": "src/pages/web/index.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["jumpstart", "ethereum", "journey", "looking", "community", "libraries", "quickstart", "quick", "visit", "tools", "integral", "almost"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "edc9cabb3ad17e1bddd327b994b4a110d5f3aa89", "node_type": "4", "metadata": {"file_path": "src/pages/web/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/index.mdx"}, "hash": "f695af59a73a786c3d67117007464c8d3c20f75ce4f8633181503becbe2478fe", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a45ba132-8de2-4845-8143-dc956babd87f", "node_type": "1", "metadata": {"file_path": "src/pages/web/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/index.mdx", "header_path": "/"}, "hash": "598879660703b3a6eac7f8a32bb2c19021f773b488e9ae9d6aa6cb83a2f925cb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6d12f25b-453b-46d8-9d6b-6afa2d5f6019", "node_type": "1", "metadata": {"header_path": "/Getting Started [Integrate ENS into your dApp]/"}, "hash": "c1b60decb6cd3dee93655cbcea1d26146597fdfb85c13519664041874fdab2b8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Quickstart\n\nIf you are looking to jumpstart your journey with ENS, or you are looking for a quick reference, visit the [Quickstart](/web/quickstart) page.\n\n<EmbedLink\n  href=\"/web/quickstart\"\n  title=\"Quickstart\"\n  description=\"To jumpstart your journey with names.\"\n/> ## Tools and Libraries\n\nENS is an integral part of the Ethereum ecosystem.\nFortunately, the open-source community is to the rescue, and almost all of the tools and libraries you use today support ENS.\nTo learn more check out the [tools & libraries section](/web/libraries).\n\n<EmbedLink\n  href=\"/web/libraries\"\n  title=\"Tools & Libraries\"\n  description=\"To learn about the available tools and libraries that interact with ENS\"\n/>", "mimetype": "text/plain", "start_char_idx": 1938, "end_char_idx": 2210, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "edcb2275-1e02-440f-a61e-de412a086980": {"__data__": {"id_": "edcb2275-1e02-440f-a61e-de412a086980", "embedding": null, "metadata": {"file_path": "src/pages/web/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/index.mdx", "header_path": "/Getting Started [Integrate ENS into your dApp]/", "customer_id": 1, "source_url": "src/pages/web/index.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["included", "calling", "addresses", "interacting", "using", "information", "about", "fetched", "resolver", "might", "popular", "records", "features", "contract", "interested"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "edc9cabb3ad17e1bddd327b994b4a110d5f3aa89", "node_type": "4", "metadata": {"file_path": "src/pages/web/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/index.mdx"}, "hash": "f695af59a73a786c3d67117007464c8d3c20f75ce4f8633181503becbe2478fe", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6d12f25b-453b-46d8-9d6b-6afa2d5f6019", "node_type": "1", "metadata": {"file_path": "src/pages/web/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/index.mdx", "header_path": "/Getting Started [Integrate ENS into your dApp]/"}, "hash": "ac286794cfd444b81118c6aecf33a929b8412f92bf6f7a8670a2198ca870e1fb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0d40ea8f-bf2b-4479-9a1c-86141aec2107", "node_type": "1", "metadata": {"header_path": "/Getting Started [Integrate ENS into your dApp]/"}, "hash": "5a45612d17a577161ecd54f21d27f108a658c2008a1f4df2cbf7cd708c3af9ee", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Avatars, Addresses & Records\n\nInformation about a name is fetched from its resolver. This can be done using pre-built features included in popular [web3 libraries](/web/libraries) (recommended), or by calling a resolver contract directly.\nIf you're interested in interacting with ENS resolvers, you might find the [Resolver Reference](/resolvers/interfaces) section helpful.\n\n<EmbedLink\n  href=\"/web/resolution\"\n  title=\"Address Resolution\"\n  description=\"To find guides on the address lookup features of ENS.\"\n/>", "mimetype": "text/plain", "start_char_idx": 2642, "end_char_idx": 3158, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0d40ea8f-bf2b-4479-9a1c-86141aec2107": {"__data__": {"id_": "0d40ea8f-bf2b-4479-9a1c-86141aec2107", "embedding": null, "metadata": {"file_path": "src/pages/web/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/index.mdx", "header_path": "/Getting Started [Integrate ENS into your dApp]/", "customer_id": 1, "source_url": "src/pages/web/index.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["overview", "issue", "subnames", "difference"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "edc9cabb3ad17e1bddd327b994b4a110d5f3aa89", "node_type": "4", "metadata": {"file_path": "src/pages/web/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/index.mdx"}, "hash": "f695af59a73a786c3d67117007464c8d3c20f75ce4f8633181503becbe2478fe", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "edcb2275-1e02-440f-a61e-de412a086980", "node_type": "1", "metadata": {"file_path": "src/pages/web/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/index.mdx", "header_path": "/Getting Started [Integrate ENS into your dApp]/"}, "hash": "f2a32ed6c8563124a500eb5f26783b71393d04d62b0e059be8166b356c2c9f38", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cd9beebb-d4f1-4497-be86-72200520c3f0", "node_type": "1", "metadata": {"header_path": "/Getting Started [Integrate ENS into your dApp]/"}, "hash": "9501533e17197077937ec1f42b29e7d622129d672775173f6e3e68e3ebcebe8f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Subnames\n\n<Card className=\"flex items-center justify-center text-xl\">\n  <div className=\"text-right font-bold\">\n    {['root', 'registrar', 'controller', 'resolver', 'registry'].map(\n      (subname, i) => (\n        <div\n          className={\n            ['opacity-20', 'opacity-50', '', 'opacity-50', 'opacity-20'][i]\n          }\n          key={subname}\n        >\n          {subname}\n        </div>\n      )\n    )}\n  </div>\n  <div className=\"text-blue font-bold\">.ens.eth</div>\n</Card>\n\n<EmbedLink\n  href=\"/web/subdomains\"\n  title=\"Issuing Subnames\"\n  description=\"To an overview of the difference ways to issue subnames.\"\n/>", "mimetype": "text/plain", "start_char_idx": 3160, "end_char_idx": 3785, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cd9beebb-d4f1-4497-be86-72200520c3f0": {"__data__": {"id_": "cd9beebb-d4f1-4497-be86-72200520c3f0", "embedding": null, "metadata": {"file_path": "src/pages/web/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/index.mdx", "header_path": "/Getting Started [Integrate ENS into your dApp]/", "customer_id": 1, "source_url": "src/pages/web/index.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["overview", "smart", "contracts", "registration"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "edc9cabb3ad17e1bddd327b994b4a110d5f3aa89", "node_type": "4", "metadata": {"file_path": "src/pages/web/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/index.mdx"}, "hash": "f695af59a73a786c3d67117007464c8d3c20f75ce4f8633181503becbe2478fe", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0d40ea8f-bf2b-4479-9a1c-86141aec2107", "node_type": "1", "metadata": {"file_path": "src/pages/web/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/index.mdx", "header_path": "/Getting Started [Integrate ENS into your dApp]/"}, "hash": "42fb46561a8a522abc0297d2909df641b315df54d8324a17d4c6cd8572b5b1ba", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Registration\n\n<Card className=\"flex items-center justify-center text-xl\">\n  <div className=\"text-right font-bold\">\n    {['nick', 'vitalik', 'matoken', 'jefflau', 'ens'].map((subname, i) => (\n      <div\n        className={\n          ['opacity-20', 'opacity-50', '', 'opacity-50', 'opacity-20'][i]\n        }\n        key={subname}\n      >\n        {subname}\n      </div>\n    ))}\n  </div>\n  <div className=\"text-blue font-bold\">.eth</div>\n</Card>\n\n<EmbedLink\n  href=\"/registry/eth\"\n  title=\"ETH Registrar\"\n  description=\"To an overview of the two smart contracts that make up the ETH Registrar.\"\n/>", "mimetype": "text/plain", "start_char_idx": 3787, "end_char_idx": 4383, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4d7b38e0-1413-4d47-9ad9-4449b5d20fce": {"__data__": {"id_": "4d7b38e0-1413-4d47-9ad9-4449b5d20fce", "embedding": null, "metadata": {"file_path": "src/pages/web/libraries.mdx", "file_name": "libraries.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/libraries.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/web/libraries.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["there", "connectkits", "jumpstart", "libraries", "quickstart", "tools", "these", "include", "everything", "interface", "import", "users", "connect"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "48f54c1111b3058ec67086b604e9a49784554e7c", "node_type": "4", "metadata": {"file_path": "src/pages/web/libraries.mdx", "file_name": "libraries.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/libraries.mdx"}, "hash": "80187b2be8c17f2956cb4ea837c671f4380d642063643eb4ead505d8a04c1e28", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ba64955e-5ac8-4010-aaa2-e63e276a2704", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "bc0efbeaf785d123f19d9fbe40ab43dd1d21fc05bf0e132dc1d92f5568e0ebae", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "import { ConnectKits } from '../../components/ConnectKits'\nimport { Libraries } from '../../components/Libraries' # Tools & Libraries [Tools to help you interface with the ENS protocol] ## Quickstart Kits\n\nThere are a few plug-and-play kits that you can use to jumpstart your project. These kits will include everything you need to have users connect their wallet, have names showing, avatars, and more, right out of the box!\n\n<ConnectKits /> ## Libraries\n\nThere are many ways to interface with the ENS Ethereum smart contracts, indexers, and metadata services. Whether you're building a dApp, a backend service, or interacting with ENS from your smart contract, there's a library out there to help you get started.\n\n<Libraries />", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 113, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "891059cf-1b48-4415-9a47-28004c07ad6f": {"__data__": {"id_": "891059cf-1b48-4415-9a47-28004c07ad6f", "embedding": null, "metadata": {"file_path": "src/pages/web/multichain.mdx", "file_name": "multichain.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/multichain.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/web/multichain.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["announced", "plans", "multichain", "migrating", "addition", "scaling", "crosschain", "recently", "roadmap", "internet", "entire", "registrations", "involves", "improved"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4bbc298e3bacc512fa4af18cfcd0c9d8bb81d831", "node_type": "4", "metadata": {"file_path": "src/pages/web/multichain.mdx", "file_name": "multichain.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/multichain.mdx"}, "hash": "9df34300df53a87daafce00ff3576bea36819f9301f624c1011e01541a622433", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "806fe1f4-19cf-48db-ac2c-19ddf77f31e5", "node_type": "1", "metadata": {"header_path": "/Multichain [L2 & Crosschain Resolution]/"}, "hash": "d14ce8d7fc428fc3098cd141dce6a34aec1b6be6646c398991cd7c7160bcc83f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Multichain [L2 & Crosschain Resolution] ## ENS L2\n\nThe ENS Labs team recently announced our plans and roadmap for scaling ENS to the entire internet and beyond. You can read more [on our blog](https://blog.ens.domains/post/ensv2), [on X](https://twitter.com/ensdomains/status/1795440186513576318), and [the forums](https://discuss.ens.domains/t/technical-feedback-thread-for-ensv2/19233).\n\nThe roadmap involves migrating .eth registrations to a new system, in addition to improved support for existing L2 solutions.\nYou can find out more on the [changelog](/changelog).", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 41, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e953f380-88f3-4859-aec9-b282c96b9e71": {"__data__": {"id_": "e953f380-88f3-4859-aec9-b282c96b9e71", "embedding": null, "metadata": {"file_path": "src/pages/web/multichain.mdx", "file_name": "multichain.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/multichain.mdx", "header_path": "/Multichain [L2 & Crosschain Resolution]/", "customer_id": 1, "source_url": "src/pages/web/multichain.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["other", "offchain", "after", "branch", "starts", "resolution", "truth", "gateways", "there", "source", "always", "needs", "process"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4bbc298e3bacc512fa4af18cfcd0c9d8bb81d831", "node_type": "4", "metadata": {"file_path": "src/pages/web/multichain.mdx", "file_name": "multichain.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/multichain.mdx"}, "hash": "9df34300df53a87daafce00ff3576bea36819f9301f624c1011e01541a622433", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "806fe1f4-19cf-48db-ac2c-19ddf77f31e5", "node_type": "1", "metadata": {"file_path": "src/pages/web/multichain.mdx", "file_name": "multichain.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/multichain.mdx", "header_path": "/Multichain [L2 & Crosschain Resolution]/"}, "hash": "4d13a43f07230f9c4237526146325fcda47a85c38f3402bfbc6cec61b6d1324e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fe5e608a-8697-4d72-8784-74aae7f86282", "node_type": "1", "metadata": {"header_path": "/Multichain [L2 & Crosschain Resolution]/"}, "hash": "7854274232f2a2b5e10961acfd267a0d43a3047ae65cb318026205f5654190ef", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## But isn't ENS on mainnet?\n\nYes, technically. The resolution process always starts on mainnet. There needs to be, one source of truth after all. However, the name\nresolution process can branch off to other chains, offchain gateways and much more.\n\nTo read a more in-depth explanation of how resolution works, checkout the [section dedicated to the Resolution Process](/resolution/). ## My dapp is on X but I want ENS\n\nThe ENS Protocol can be used on/for any chain!\nIf you are building a non-mainnet dApp and want to use ENS names simply [add a Mainnet RPC to your Wagmi config](/web/libraries) and specify `chainId: 1` in your config like so:\n\n```tsx\nimport { useAccount, useEnsAvatar, useEnsName } from 'wagmi'\n\nconst Name = () => {\n  const { data: ensName } = useEnsAddress({\n    address: 'luc.eth',\n    chainId: 1, // (1 = Ethereum, 11155111 = Sepolia) // [!code hl]\n  })\n\n  return <div>{ensName || address}</div>\n}\n```\n\nAnd voila! You can now resolve ENS names anywhere! \ud83c\udf89", "mimetype": "text/plain", "start_char_idx": 574, "end_char_idx": 958, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7856cb4c-f2f2-49ec-ab9b-feb997ec2db7": {"__data__": {"id_": "7856cb4c-f2f2-49ec-ab9b-feb997ec2db7", "embedding": null, "metadata": {"file_path": "src/pages/web/naming-contracts.mdx", "file_name": "naming-contracts.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/naming-contracts.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/web/naming-contracts.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["primary", "known", "accounts", "naming", "order", "while", "smart", "regular", "manage", "contracts", "commonly"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ff41251c7d67ab93bc7862cdcac037270157e545", "node_type": "4", "metadata": {"file_path": "src/pages/web/naming-contracts.mdx", "file_name": "naming-contracts.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/naming-contracts.mdx"}, "hash": "08677470711239c07da2481a1f38a90f2563a6ead0fd5fb153d485e4ab9b0e5d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d552f1d9-7580-4227-a97b-a27c0f6f9612", "node_type": "1", "metadata": {"header_path": "/Naming Contracts [Learn how to name your smart contracts with ENS]/"}, "hash": "a3cfc6190b3591101159bdcdedac6286cf21a644bdf502b1377a90f575b1ab3a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Naming Contracts [Learn how to name your smart contracts with ENS]\n\nWhile it's commonly known that regular user accounts can have [primary names](/web/reverse), it's less known that smart contracts can also have names.\n\nIn order for you to manage the primary name of your smart contract, you need to own the [reverse node](/terminology#reverse-node) for the contract address. There are several ways of doing this, depending on if you are actively developing your contract or if it is already deployed.\n\n:::note\nReverse names are just half of ENS primary names. Remember that you always must set the ETH address of your name to the address at which your contract was deployed.\n:::", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 681, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d552f1d9-7580-4227-a97b-a27c0f6f9612": {"__data__": {"id_": "d552f1d9-7580-4227-a97b-a27c0f6f9612", "embedding": null, "metadata": {"file_path": "src/pages/web/naming-contracts.mdx", "file_name": "naming-contracts.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/naming-contracts.mdx", "header_path": "/Naming Contracts [Learn how to name your smart contracts with ENS]/", "customer_id": 1, "source_url": "src/pages/web/naming-contracts.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["primary", "approaches", "ownership", "different", "reverse", "depending", "smart", "which", "change", "there", "assume", "contracts", "contract", "setting"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ff41251c7d67ab93bc7862cdcac037270157e545", "node_type": "4", "metadata": {"file_path": "src/pages/web/naming-contracts.mdx", "file_name": "naming-contracts.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/naming-contracts.mdx"}, "hash": "08677470711239c07da2481a1f38a90f2563a6ead0fd5fb153d485e4ab9b0e5d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7856cb4c-f2f2-49ec-ab9b-feb997ec2db7", "node_type": "1", "metadata": {"file_path": "src/pages/web/naming-contracts.mdx", "file_name": "naming-contracts.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/naming-contracts.mdx", "header_path": "/"}, "hash": "d3b94811f1a1bb3abd878537b85fd3f0c66a3135b3323a33dbc60c1242e430e1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fcfc5869-040b-43e7-bd3e-5f9ea39b28c4", "node_type": "1", "metadata": {"header_path": "/Naming Contracts [Learn how to name your smart contracts with ENS]/New Contracts/"}, "hash": "ce8de670643a1d6d8cb15d57a0086018ab30b0a201ebedb85104b00d1ff19c2e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## New Contracts\n\nDepending on your use case, there are a few different approaches to setting the primary name of a new smart contract.\n\nFirst, let's assume you want to be able to change the name in the future. The two ways to do this are:\n\n- Take ownership of the reverse node (`{address}.addr.reverse`) for the contract address.\n- (Recommended) Make the contract [Ownable](https://docs.openzeppelin.com/contracts/5.x/access-control), which is may already be, and set the owner to yourself.\n\nThe Ownable approach is recommended because it's possible that your contract will already have it implemented, and Etherscan will index the events correctly.\n\nIf you are deploying a new contract that does not have any admin permissions, and you don't want to be able to change the name in the future, you can set the reverse name in the constructor of the contract directly.\n\nLet's look at a few examples.", "mimetype": "text/plain", "start_char_idx": 683, "end_char_idx": 1581, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fcfc5869-040b-43e7-bd3e-5f9ea39b28c4": {"__data__": {"id_": "fcfc5869-040b-43e7-bd3e-5f9ea39b28c4", "embedding": null, "metadata": {"file_path": "src/pages/web/naming-contracts.mdx", "file_name": "naming-contracts.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/naming-contracts.mdx", "header_path": "/Naming Contracts [Learn how to name your smart contracts with ENS]/New Contracts/", "customer_id": 1, "source_url": "src/pages/web/naming-contracts.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["events", "appear", "protocol", "works", "etherscan", "correctly", "transfers", "perfectly", "method", "index", "their", "module", "while", "contract", "simple"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ff41251c7d67ab93bc7862cdcac037270157e545", "node_type": "4", "metadata": {"file_path": "src/pages/web/naming-contracts.mdx", "file_name": "naming-contracts.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/naming-contracts.mdx"}, "hash": "08677470711239c07da2481a1f38a90f2563a6ead0fd5fb153d485e4ab9b0e5d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d552f1d9-7580-4227-a97b-a27c0f6f9612", "node_type": "1", "metadata": {"file_path": "src/pages/web/naming-contracts.mdx", "file_name": "naming-contracts.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/naming-contracts.mdx", "header_path": "/Naming Contracts [Learn how to name your smart contracts with ENS]/"}, "hash": "40b2ae54c89e82513d0022b615986ba9604380429645365df5b88b7b8c6317a2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bec0c4a9-3193-4e17-bf96-0c716654f379", "node_type": "1", "metadata": {"header_path": "/Naming Contracts [Learn how to name your smart contracts with ENS]/New Contracts/"}, "hash": "62b68a04b17b8a0d5a50ce719a01b303a29b78f1c1e5b297a6812eaa4b9398b4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### ReverseClaimer.sol\n\n:::note\nWhile this method works perfectly at the ENS protocol level, Etherscan does not index the contract events correctly so it may not appear in their UI.\n:::\n\nThis is a simple drop-in module that transfers ownership of the reverse node to an address of your choice, which can then update the reverse name at any time.\n\n```solidity\nimport \"@ensdomains/ens-contracts/contracts/registry/ENS.sol\";\nimport \"@ensdomains/ens-contracts/contracts/reverseRegistrar/ReverseClaimer.sol\";\n\ncontract MyContract is ReverseClaimer {\n    constructor (\n        ENS ens\n    ) ReverseClaimer(ens, msg.sender) {}\n}\n```\n\nWhen you deploy your contract, the deployer account (`msg.sender`) will be given ownership of the reverse node for that contract address. This gives you authorization to call `setName(node, newName)` on the latest public resolver ([resolver.ens.eth](https://etherscan.io/address/resolver.ens.eth)), where `node` is the reverse node for the contract address and `newName` is the name you want to set it to.\n\nTo find the reverse node for your contract address, you can use the following viem script:\n\n```ts\nimport { Hex, keccak256 } from 'viem'\nimport { namehash } from 'viem/ens'\n\nfunction getNodeFromParentNodeAndLabelhash(parentNode: Hex, labelhash: Hex) {\n  return keccak256((parentNode + labelhash.split('0x')[1]) as Hex)\n}\n\nconst myContractAddress = '0x...' // replace with your contract address\n\nconst node = getNodeFromParentNodeAndLabelhash(\n  namehash('addr.reverse'),\n  labelhash(myContractAddress.slice(2).toLowerCase())\n)\n\nconsole.log(node)\n```", "mimetype": "text/plain", "start_char_idx": 1583, "end_char_idx": 3165, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bec0c4a9-3193-4e17-bf96-0c716654f379": {"__data__": {"id_": "bec0c4a9-3193-4e17-bf96-0c716654f379", "embedding": null, "metadata": {"file_path": "src/pages/web/naming-contracts.mdx", "file_name": "naming-contracts.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/naming-contracts.mdx", "header_path": "/Naming Contracts [Learn how to name your smart contracts with ENS]/New Contracts/", "customer_id": 1, "source_url": "src/pages/web/naming-contracts.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["primary", "contract", "smart", "supports", "import", "ownable", "interface", "example", "without", "change"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ff41251c7d67ab93bc7862cdcac037270157e545", "node_type": "4", "metadata": {"file_path": "src/pages/web/naming-contracts.mdx", "file_name": "naming-contracts.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/naming-contracts.mdx"}, "hash": "08677470711239c07da2481a1f38a90f2563a6ead0fd5fb153d485e4ab9b0e5d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fcfc5869-040b-43e7-bd3e-5f9ea39b28c4", "node_type": "1", "metadata": {"file_path": "src/pages/web/naming-contracts.mdx", "file_name": "naming-contracts.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/naming-contracts.mdx", "header_path": "/Naming Contracts [Learn how to name your smart contracts with ENS]/New Contracts/"}, "hash": "b79c5ce55cc823469132070643fa7c2b748fe0799310b69f8d95d98c60ed32fb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "618edb0d-88e7-46ae-8586-5ccf15072040", "node_type": "1", "metadata": {"header_path": "/Naming Contracts [Learn how to name your smart contracts with ENS]/New Contracts/"}, "hash": "a9f06f43920cd682d3e0679714d5e7b5ffa5f23cae66c40659a60347e892fd6f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Ownable (recommended)\n\n:::note\nAn example of this is [ownable.contract.gtest.eth](https://etherscan.io/address/ownable.contract.gtest.eth#code)\n:::\n\nIf you want to be able to change the name in the future, you can make your smart contract [Ownable](https://docs.openzeppelin.com/contracts/5.x/api/access#Ownable).\n\n```solidity\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract Contract is Ownable {\n    constructor(address initialOwner) Ownable(initialOwner) {}\n}\n```\n\nThe [ReverseRegistrar](/registry/reverse) supports the Ownable interface and will let the `owner` of a contract set its primary name without having to add any ENS-specific code.\n\nOnce this contract is deployed, call `setNameForAddr(address, address, address, string)` on the Reverse Registrar ([reverse.ens.eth](https://etherscan.io/address/reverse.ens.eth)) from your authorized owner account.\n\n- The first address argument is the address of your contract\n- The second address argument is the owner of your smart contract\n- The third address argument is the `defaultResolver()` from the Reverse Registrar\n- The fourth argument is the ENS name to set it to", "mimetype": "text/plain", "start_char_idx": 3167, "end_char_idx": 4324, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "618edb0d-88e7-46ae-8586-5ccf15072040": {"__data__": {"id_": "618edb0d-88e7-46ae-8586-5ccf15072040", "embedding": null, "metadata": {"file_path": "src/pages/web/naming-contracts.mdx", "file_name": "naming-contracts.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/naming-contracts.mdx", "header_path": "/Naming Contracts [Learn how to name your smart contracts with ENS]/New Contracts/", "customer_id": 1, "source_url": "src/pages/web/naming-contracts.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["constructor", "directly", "pragma", "solidity", "external", "returns", "following", "inherit", "interface", "change", "example", "contract", "assign", "function"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ff41251c7d67ab93bc7862cdcac037270157e545", "node_type": "4", "metadata": {"file_path": "src/pages/web/naming-contracts.mdx", "file_name": "naming-contracts.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/naming-contracts.mdx"}, "hash": "08677470711239c07da2481a1f38a90f2563a6ead0fd5fb153d485e4ab9b0e5d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bec0c4a9-3193-4e17-bf96-0c716654f379", "node_type": "1", "metadata": {"file_path": "src/pages/web/naming-contracts.mdx", "file_name": "naming-contracts.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/naming-contracts.mdx", "header_path": "/Naming Contracts [Learn how to name your smart contracts with ENS]/New Contracts/"}, "hash": "200c4ca9484a6ce22d23e42eb8dbc4be0e97ad0c2f389fadf252ece508bd05bc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "40aace77-1f5e-41da-b405-a1003912c4f2", "node_type": "1", "metadata": {"header_path": "/Naming Contracts [Learn how to name your smart contracts with ENS]/"}, "hash": "e63453b69f7acadce86245fd7226e058b1d0b9df6acd1caabc98f5f40964646b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Set a name in the constructor\n\n:::note\nAn example of this [contract.gtest.eth](https://etherscan.io/address/contract.gtest.eth#code)\n:::\n\nIf you don't want to be able to change the name in the future, you can inherit the following contract and assign an ENS name directly in the constructor.\n\n```solidity\n//SPDX-License-Identifier: MIT\npragma solidity ^0.8.21;\n\ninterface ENS {\n    function owner(bytes32 node) external view returns (address);\n}\n\ninterface IReverseRegistrar {\n    function setName(string memory name) external returns (bytes32);\n}\n\n// Variation of ReverseClaimer.sol from @ensdomains/ens-contracts that sets the reverse name directly.\ncontract ReverseSetter {\n    /// @dev The ENS registry\n    ENS private constant ens = ENS(0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e);\n\n    /// @dev Output of namehash(\"addr.reverse\")\n    bytes32 private constant ADDR_REVERSE_NODE =\n        0x91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e2;\n\n    /// @param name The reverse name to set for this contract's address.\n    constructor(string memory name) {\n        IReverseRegistrar reverseRegistrar = IReverseRegistrar(\n            ens.owner(ADDR_REVERSE_NODE)\n        );\n        reverseRegistrar.setName(name);\n    }\n}\n```\n\nUsing this in your contract is as simple as:\n\n```solidity\nimport {ReverseSetter} from \"./ReverseSetter.sol\";\n\ncontract Contract is ReverseSetter {\n    constructor(string memory name) ReverseSetter(name) {}\n}\n```", "mimetype": "text/plain", "start_char_idx": 4326, "end_char_idx": 5783, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "40aace77-1f5e-41da-b405-a1003912c4f2": {"__data__": {"id_": "40aace77-1f5e-41da-b405-a1003912c4f2", "embedding": null, "metadata": {"file_path": "src/pages/web/naming-contracts.mdx", "file_name": "naming-contracts.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/naming-contracts.mdx", "header_path": "/Naming Contracts [Learn how to name your smart contracts with ENS]/", "customer_id": 1, "source_url": "src/pages/web/naming-contracts.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["deployed", "contract", "already", "arbitrary", "supports", "interface", "might", "multisig", "still", "contracts", "existing", "function", "section"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ff41251c7d67ab93bc7862cdcac037270157e545", "node_type": "4", "metadata": {"file_path": "src/pages/web/naming-contracts.mdx", "file_name": "naming-contracts.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/naming-contracts.mdx"}, "hash": "08677470711239c07da2481a1f38a90f2563a6ead0fd5fb153d485e4ab9b0e5d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "618edb0d-88e7-46ae-8586-5ccf15072040", "node_type": "1", "metadata": {"file_path": "src/pages/web/naming-contracts.mdx", "file_name": "naming-contracts.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/naming-contracts.mdx", "header_path": "/Naming Contracts [Learn how to name your smart contracts with ENS]/New Contracts/"}, "hash": "3128301b27cc194b360caebe5aaa5c3a4a1c36d7aae213b5fb0115c30787d42b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "38d7473f-2c22-4eba-895b-0cb6c9c632cb", "node_type": "1", "metadata": {"header_path": "/Naming Contracts [Learn how to name your smart contracts with ENS]/Existing Contracts/"}, "hash": "507c230e19184b5ad726615738df523bb230c7ffb16c415051c92e871937b82e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Existing Contracts\n\nIf your contract is already deployed you might still be able to set a name for it.\nIf your contract supports the [Ownable](https://docs.openzeppelin.com/contracts/5.x/api/access#Ownable) interface from OpenZeppelin, read the section above. ### Safe, Multisig & DAO\n\nIf your contract is a Safe, Multisig, DAO, or has a function that can send arbitrary ETH calls, you can use the [ReverseRegistrar](/registry/reverse) contract directly to set a name for it.\nYou might even be able to use the [ENS Manager App](https://ens.app/) inside of your safe app to set a primary name.", "mimetype": "text/plain", "start_char_idx": 5785, "end_char_idx": 6047, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "579fc2a0-fe5d-4d1e-946e-17d2b73350c0": {"__data__": {"id_": "579fc2a0-fe5d-4d1e-946e-17d2b73350c0", "embedding": null, "metadata": {"file_path": "src/pages/web/quickstart.mdx", "file_name": "quickstart.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/quickstart.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/web/quickstart.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["connectkits", "addressrecords", "quickstart", "learn", "ensprofile", "import", "textrecords", "there", "checkout", "process"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6556be6f2fd8263ac02122f8a4efe7c7fa4ec651", "node_type": "4", "metadata": {"file_path": "src/pages/web/quickstart.mdx", "file_name": "quickstart.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/quickstart.mdx"}, "hash": "81d513f72d1b97bd7fa404fac04aa5bd380d66fa5f14f6effe177386fefe7c5f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f80a32e4-2874-47c2-9727-4df0e84eb11e", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "cb3f4ccdec4e4f808dc8b29d0567e4d9dc1e99c81e8c974510b72631c7931f7b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "import { AddressRecords } from '../../components/AddressRecords'\nimport { ConnectKits } from '../../components/ConnectKits'\nimport { EnsProfile } from '../../components/EnsProfile'\nimport { TextRecords } from '../../components/TextRecords'\nimport { Card } from '../../components/ui/Card' # Quickstart\n\nHey there \ud83d\udc4b, this is the quickstart guide. If you want to learn the process checkout [everything about ENS in dApps](/web/).\nIf you would rather just clone an example repository checkout these: ## Starter Kits\n\n<ConnectKits />", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 287, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "be9ddbaa-954d-4701-8f45-f811ab5edbcc": {"__data__": {"id_": "be9ddbaa-954d-4701-8f45-f811ab5edbcc", "embedding": null, "metadata": {"file_path": "src/pages/web/quickstart.mdx", "file_name": "quickstart.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/quickstart.mdx", "header_path": "/Quickstart/", "customer_id": 1, "source_url": "src/pages/web/quickstart.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["assumes", "profile", "showing", "demonstrates", "quickstart", "guide", "wagmi", "below", "codesnippet", "create", "basic", "installation", "understanding", "install"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6556be6f2fd8263ac02122f8a4efe7c7fa4ec651", "node_type": "4", "metadata": {"file_path": "src/pages/web/quickstart.mdx", "file_name": "quickstart.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/quickstart.mdx"}, "hash": "81d513f72d1b97bd7fa404fac04aa5bd380d66fa5f14f6effe177386fefe7c5f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cbc9fb52-e2ea-43f4-9ded-c4b3b020fcd7", "node_type": "1", "metadata": {"file_path": "src/pages/web/quickstart.mdx", "file_name": "quickstart.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/quickstart.mdx", "header_path": "/Quickstart/"}, "hash": "50fc803bb6671d472d01e6f73ff91ffd48e47da42ff57f75cb38ee5d05f04944", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "09ad77b7-4392-4971-a423-9258b7a3966a", "node_type": "1", "metadata": {"header_path": "/Quickstart/Add to your dApp/"}, "hash": "80bebd51753a64e5d2e3a14d8681784d8d5a545ce7c820be6cf816b1656b6f69", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Add to your dApp\n\nThis quickstart guide assumes you have a basic understanding of React. ### Installation\n\n```bash [Terminal]\nnpm install wagmi viem @tanstack/react-query\n``` ### Showing the User Profile\n\nThe below codesnippet demonstrates how you can create a basic user profile section that shows the users ENS name and avatar.\nThe snippet leverages the [useAccount](https://wagmi.sh/react/hooks/useAccount), [useEnsName](https://wagmi.sh/react/hooks/useEnsName), and [useEnsAvatar](https://wagmi.sh/react/hooks/useEnsAvatar) hooks from wagmi.\n\n<Card className=\"flex flex-col items-center justify-center gap-2 sm:flex-row\">\n  <EnsProfile name=\"nick.eth\" />\n  <EnsProfile name=\"jefflau.eth\" />\n  <EnsProfile name=\"vitalik.eth\" />\n</Card>\n\n```tsx\nimport { useAccount, useEnsAvatar, useEnsName } from 'wagmi'\n\nexport const EnsProfile = () => {\n  const { address } = useAccount()\n  const { data: name } = useEnsName({ address, chainId: 1 })\n  const { data: avatar } = useEnsAvatar({ name, chainId: 1 })\n\n  return (\n    <div className=\"flex items-center gap-2\">\n      <img src={avatar} className=\"h-8 w-8 rounded-full\" />\n      <div className=\"flex flex-col leading-none\">\n        <span className=\"font-semibold\">{name}</span>\n        <span className=\"text-grey text-sm\">{address}</span>\n      </div>\n    </div>\n  )\n}\n```\n\n:::info\nENS resolution always starts from L1 regardless of the chain the user is connected to. This is why we specify `chainId: 1` for Ethereum Mainnet in the wagmi hooks above.\n:::", "mimetype": "text/plain", "start_char_idx": 532, "end_char_idx": 623, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4654ee6c-084f-482d-8ed1-6ef84b3a91cb": {"__data__": {"id_": "4654ee6c-084f-482d-8ed1-6ef84b3a91cb", "embedding": null, "metadata": {"file_path": "src/pages/web/quickstart.mdx", "file_name": "quickstart.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/quickstart.mdx", "header_path": "/Quickstart/Add to your dApp/", "customer_id": 1, "source_url": "src/pages/web/quickstart.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["other", "ethereum", "addresses", "address", "record", "lookups", "starts", "resolution", "store", "chains", "always", "while"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6556be6f2fd8263ac02122f8a4efe7c7fa4ec651", "node_type": "4", "metadata": {"file_path": "src/pages/web/quickstart.mdx", "file_name": "quickstart.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/quickstart.mdx"}, "hash": "81d513f72d1b97bd7fa404fac04aa5bd380d66fa5f14f6effe177386fefe7c5f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "91ad2942-ef0b-4989-b049-137e94702e4a", "node_type": "1", "metadata": {"file_path": "src/pages/web/quickstart.mdx", "file_name": "quickstart.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/quickstart.mdx", "header_path": "/Quickstart/Add to your dApp/"}, "hash": "718a4e27d39637437a897b3a5f8eeb5c26ee147d6df4369b574f7292a961b3db", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ac6b77a1-41bf-45fe-a7ed-4be12e884cfb", "node_type": "1", "metadata": {"header_path": "/Quickstart/Add to your dApp/"}, "hash": "0385f6ce63be12c51c76a7f3f1b94ef9f46131ef440ec70825dea0a88acf85e9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Text Record Lookups\n\n<Card>\n  <TextRecords\n    name=\"nick.eth\"\n    keys={['url', 'com.github', 'com.twitter', 'description']}\n  />\n</Card>\n\n:::code-group\n\n```tsx [TextRecords.tsx]\n// [!include ~/components/TextRecords.tsx]\n```\n\n```ts [useEnsTexts.ts]\n// [!include ~/hooks/useEnsTexts.ts]\n```\n\n::: ### Address Record Lookups\n\nWhile ENS resolution always starts from Ethereum L1, you can store addresses for other chains in ENS records.\n\n<Card>\n  <AddressRecords\n    name=\"gregskril.eth\"\n    coinTypes={[60, 2147483658, 2147492101, 2147525809]}\n  />\n</Card>\n\n:::code-group\n\n```tsx [AddressRecords.tsx]\n// [!include ~/components/AddressRecords.tsx]\n```\n\n```ts [useEnsAddresses.ts]\n// [!include ~/hooks/useEnsAddresses.ts]\n```\n\n:::", "mimetype": "text/plain", "start_char_idx": 2040, "end_char_idx": 2340, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7bb623cb-9a78-4262-bf07-e93270e3367b": {"__data__": {"id_": "7bb623cb-9a78-4262-bf07-e93270e3367b", "embedding": null, "metadata": {"file_path": "src/pages/web/records.mdx", "file_name": "records.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/records.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/web/records.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["retrieve", "records", "profiles", "pairs", "these", "value", "store", "import", "embedlink", "textrecords", "every", "information"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "00d90edc65181cee01ed17b88cb7e6ae5ce91bdd", "node_type": "4", "metadata": {"file_path": "src/pages/web/records.mdx", "file_name": "records.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/records.mdx"}, "hash": "05b3ae86d735ea121e87be80dc686cd15576365fc910bb255dc943a23c8c0b45", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5682a32e-1748-46ee-b2e9-4cfb03edd8e8", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "e036233fbec734914ed532d54d0d9809255dd0dbc237900fa7c13648b7eab559", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: Store & Retrieve information from Profiles\n---\n\nimport { EmbedLink } from '../../components/EmbedLink'\nimport { TextRecords } from '../../components/TextRecords'\nimport { Card } from '../../components/ui/Card' # Text Records\n\nWith every name come a set of records. These records are key value pairs that can be used to store information about the profile.\nThink of this as a user's **digital backpack**. Utalized for storage of preferences, public details, and more.\n\n<Card>\n  <TextRecords name=\"nick.eth\" keys={['description', 'com.twitter']} />\n</Card>\n\nText records allow us to attach and read any key value pair from an ENS name. The most popular records have been standardised.\nOne example of a standardised record is the [avatar record](/web/avatars) which is used to store a user's profile picture.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 226, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e3a27a1d-d923-45df-8785-059ffa33404e": {"__data__": {"id_": "e3a27a1d-d923-45df-8785-059ffa33404e", "embedding": null, "metadata": {"file_path": "src/pages/web/records.mdx", "file_name": "records.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/records.mdx", "header_path": "/Text Records/", "customer_id": 1, "source_url": "src/pages/web/records.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["specific", "string", "useenstext", "export", "const", "record", "following", "import", "return", "getting", "records", "normalize", "fetch"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "00d90edc65181cee01ed17b88cb7e6ae5ce91bdd", "node_type": "4", "metadata": {"file_path": "src/pages/web/records.mdx", "file_name": "records.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/records.mdx"}, "hash": "05b3ae86d735ea121e87be80dc686cd15576365fc910bb255dc943a23c8c0b45", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5682a32e-1748-46ee-b2e9-4cfb03edd8e8", "node_type": "1", "metadata": {"file_path": "src/pages/web/records.mdx", "file_name": "records.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/records.mdx", "header_path": "/"}, "hash": "1895337ec7b330ca750efb99d0123db38cc44702d98a5192a69c520c7cb5f44e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "12f31c50-162e-42f2-b03a-eaeadff8f7af", "node_type": "1", "metadata": {"header_path": "/Text Records/"}, "hash": "c5010eb4ec5c1edfc48a330e98121d55e08d309aa1e1c09262465bf613643b93", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Getting Records\n\nTo fetch the record for a specific name, you can use one of the following methods:\n\n:::code-group\n\n```tsx [Wagmi]\n// https://wagmi.sh/react/api/hooks/useEnsText\nimport { normalize } from 'viem/ens'\nimport { useEnsText } from 'wagmi'\n\nexport const MyProfile: FC<{ name: string }> = ({ name }) => {\n  const { data } = useEnsText({\n    name: normalize('luc.eth'),\n    key: 'com.twitter',\n  })\n\n  return (\n    <div>\n      <span>Twitter: {data}</span>\n    </div>\n  )\n}\n```\n\n```tsx [Ethers]\n// https://docs.ethers.org/v5/api/providers/provider/#EnsResolver\nconst provider = new ethers.providers.JsonRpcProvider()\n\nconst resolver = await provider.getResolver('luc.eth')\nconst twitter = await resolver.getText('com.twitter')\n```\n\n```tsx [Viem]\n// https://viem.sh/docs/ens/actions/getEnsText.html\nimport { createPublicClient, http } from 'viem'\nimport { mainnet } from 'viem/chains'\nimport { normalize } from 'viem/ens'\n\nconst publicClient = createPublicClient({\n  chain: mainnet,\n  transport: http(),\n})\n\nconst ensText = await publicClient.getEnsText({\n  name: normalize('luc.eth'),\n  key: 'com.twitter',\n})\n```\n\n```python [web3.py]\n# https://web3py.readthedocs.io/en/latest/ens_overview.html#text-records\nfrom ens.auto import ns\n\n# set text\nns.set_text('alice.eth', 'url', 'https://example.com')\n\n# get text\nurl = ns.get_text('alice.eth', 'url')\nassert url == 'https://example.com'\n```\n\n```go [Go]\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/ethereum/go-ethereum/ethclient\"\n\tens \"github.com/wealdtech/go-ens/v3\"\n)\n\nfunc main() {\n\tclient, _ := ethclient.Dial(\"https://rpc.ankr.com/eth\")\n\n\tdomain, _ := ens.Normalize(\"luc.eth\")\n\tresolver, _ := ens.NewResolver(client, domain)\n\ttwitter, _ := resolver.Text(\"com.twitter\")\n\n\tfmt.Println(\"Twitter: \", twitter)\n}\n```\n\n:::", "mimetype": "text/plain", "start_char_idx": 825, "end_char_idx": 2602, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "12f31c50-162e-42f2-b03a-eaeadff8f7af": {"__data__": {"id_": "12f31c50-162e-42f2-b03a-eaeadff8f7af", "embedding": null, "metadata": {"file_path": "src/pages/web/records.mdx", "file_name": "records.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/records.mdx", "header_path": "/Text Records/", "customer_id": 1, "source_url": "src/pages/web/records.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["capitalization", "reference", "preferred", "description", "types", "avatar", "display", "keywords", "devrel", "records", "example", "usage", "commonly"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "00d90edc65181cee01ed17b88cb7e6ae5ce91bdd", "node_type": "4", "metadata": {"file_path": "src/pages/web/records.mdx", "file_name": "records.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/records.mdx"}, "hash": "05b3ae86d735ea121e87be80dc686cd15576365fc910bb255dc943a23c8c0b45", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e3a27a1d-d923-45df-8785-059ffa33404e", "node_type": "1", "metadata": {"file_path": "src/pages/web/records.mdx", "file_name": "records.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/records.mdx", "header_path": "/Text Records/"}, "hash": "bc8f7f1b3c9312b642ee35ed98d858eb6dc04668f62b8c172747559ea0c6253b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3bfe1ecb-0e17-46f0-a869-53cc9236dec9", "node_type": "1", "metadata": {"header_path": "/Text Records/Types of Records/"}, "hash": "6596c19819405fb7118e14b0ba6b6599650a63794aa66e9c2db701bf405a68b3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Types of Records\n\nHere are some of the most commonly used records:\n\n| Name        | Usage                                        | Reference             | Example             |\n| ----------- | -------------------------------------------- | --------------------- | ------------------- |\n| display     | Preferred capitalization                     | [ENSIP-5](/ensip/5)   | Luc.eth             |\n| avatar      | Avatar or logo (see [Avatars](/web/avatars)) | [ENSIP-5](/ensip/5)   | ipfs://dQw4w9WgXcQ  |\n| description | Description of the name                      | [ENSIP-5](/ensip/5)   | DevRel @ ENS Labs   |\n| keywords    | List of comma-separated keywords             | [ENSIP-5](/ensip/5)   | person, ens         |\n| email       | Email address                                | [ENSIP-5](/ensip/5)   | luc@ens.domains     |\n| mail        | Physical mailing address                     | [ENSIP-5](/ensip/5)   | V3X HQ              |\n| notice      | Notice regarding this name                   | [ENSIP-5](/ensip/5)   | This is a notice    |\n| location    | Generic location (e.g. \"Toronto, Canada\")    | [ENSIP-5](/ensip/5)   | Breda, NL           |\n| phone       | Phone number as an E.164 string              | [ENSIP-5](/ensip/5)   | +1 234 567 890      |\n| url         | Website URL                                  | [ENSIP-5](/ensip/5)   | https://ens.domains |\n| header      | Image URL to be used as a header/banner      | [ENSIP-18](/ensip/18) | ipfs://dQw4w9WgXcQ  |", "mimetype": "text/plain", "start_char_idx": 2604, "end_char_idx": 4091, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3bfe1ecb-0e17-46f0-a869-53cc9236dec9": {"__data__": {"id_": "3bfe1ecb-0e17-46f0-a869-53cc9236dec9", "embedding": null, "metadata": {"file_path": "src/pages/web/records.mdx", "file_name": "records.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/records.mdx", "header_path": "/Text Records/Types of Records/", "customer_id": 1, "source_url": "src/pages/web/records.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["stick", "other", "protocol", "records", "prefix", "store", "currently", "welcome", "generally", "there", "however", "value", "recommend", "things"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "00d90edc65181cee01ed17b88cb7e6ae5ce91bdd", "node_type": "4", "metadata": {"file_path": "src/pages/web/records.mdx", "file_name": "records.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/records.mdx"}, "hash": "05b3ae86d735ea121e87be80dc686cd15576365fc910bb255dc943a23c8c0b45", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "12f31c50-162e-42f2-b03a-eaeadff8f7af", "node_type": "1", "metadata": {"file_path": "src/pages/web/records.mdx", "file_name": "records.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/records.mdx", "header_path": "/Text Records/"}, "hash": "e3931df941b807a74ff930f4d1c64882959f9c3ebfcc35c07b88c0f686eb3be8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5477001f-16d8-41f8-98f7-5e76c8eb98ff", "node_type": "1", "metadata": {"header_path": "/Text Records/"}, "hash": "8c5deae4e6e0460172e92b5ee09e9a912d2d91dc2a230caf630997bbcfab33a5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Other Records\n\nCurrently there are a few records that have been standardised. However you are welcome to store any key value pair you desire.\nWe generally recommend to stick to a pattern, or prefix things with your app or protocol (eg. `com.discord`, or `org.reddit`), as such to avoid collisions.\n\nOne of the newer standardised records is the \"header\" record. This header record, similar to the avatar record, accepts any IPFS, Arweave, EIP155, or regular URL to an image resource.\nThe image is then displayed as a banner on the profile page and tends to be in a 1:3 aspect ratio.", "mimetype": "text/plain", "start_char_idx": 4093, "end_char_idx": 4678, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5477001f-16d8-41f8-98f7-5e76c8eb98ff": {"__data__": {"id_": "5477001f-16d8-41f8-98f7-5e76c8eb98ff", "embedding": null, "metadata": {"file_path": "src/pages/web/records.mdx", "file_name": "records.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/records.mdx", "header_path": "/Text Records/", "customer_id": 1, "source_url": "src/pages/web/records.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["makes", "responsible", "write", "guarantee", "function", "update", "resolvers", "setting", "cannot", "loaded", "records", "resolver", "process"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "00d90edc65181cee01ed17b88cb7e6ae5ce91bdd", "node_type": "4", "metadata": {"file_path": "src/pages/web/records.mdx", "file_name": "records.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/records.mdx"}, "hash": "05b3ae86d735ea121e87be80dc686cd15576365fc910bb255dc943a23c8c0b45", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3bfe1ecb-0e17-46f0-a869-53cc9236dec9", "node_type": "1", "metadata": {"file_path": "src/pages/web/records.mdx", "file_name": "records.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/records.mdx", "header_path": "/Text Records/Types of Records/"}, "hash": "09c369ccabacecde06e3ec4b41594108ef251f6c87decb23285b19f3b62d92cd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Setting Records\n\nWhen records are loaded they are loaded from the resolver responsible for the name. As resolvers are user controlled, we cannot guarantee a write function is available.\nThis makes it a more in-depth process to update a users records.\n\n<EmbedLink\n  href=\"/resolvers/interacting\"\n  title=\"Interacting with a Resolver\"\n  tag=\"Advanced\"\n  description=\"To learn more about interacting with a resolver.\"\n/> import { EmbedLink } from '../../components/EmbedLink'\nimport { EnsProfile } from '../../components/EnsProfile'\nimport { Card } from '../../components/ui/Card'", "mimetype": "text/plain", "start_char_idx": 4680, "end_char_idx": 5100, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f9f569db-d51a-46c8-af43-ead72df1165d": {"__data__": {"id_": "f9f569db-d51a-46c8-af43-ead72df1165d", "embedding": null, "metadata": {"file_path": "src/pages/web/resolution.mdx", "file_name": "resolution.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/resolution.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/web/resolution.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ethereum", "protocol", "addresses", "providing", "address", "instead", "lookup", "users", "getting", "resolve", "names", "blockchain", "simple"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "492a4e999a1114f68a9abd7be8e4e1d32cae23b5", "node_type": "4", "metadata": {"file_path": "src/pages/web/resolution.mdx", "file_name": "resolution.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/resolution.mdx"}, "hash": "7f4ec8debb95ef9142f983cdc9f7f6b1507b5c100e825e59d8c2b1d3a403712d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "449dc8f3-d441-4c5a-a951-82764c561e66", "node_type": "1", "metadata": {"file_path": "src/pages/web/resolution.mdx", "file_name": "resolution.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/resolution.mdx", "header_path": "/"}, "hash": "79534938d8df97bdd62b66502a5a1529efa6da45c5460f7a25e76446cff6192e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "44587469-4233-42c2-a8ea-f9df4a0eefa6", "node_type": "1", "metadata": {"header_path": "/Address Lookup [Learn how to resolve blockchain addresses from human-readable names with ENS.]/"}, "hash": "a9bc75d8cd2620d4a50a6f14ea9a53e5536b265e6f49a19e23687c1d4ef430b6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Address Lookup [Learn how to resolve blockchain addresses from human-readable names with ENS.]\n\nThe ENS Protocol aims to make it easy to use Ethereum.\nIt does this by providing a simple way to use human-readable names instead of long machine-readable addresses. ## Getting the users Ethereum Address\n\nThe goal here is to take a name, such as `nick.eth`, and convert it to an address, such as `0x225f137127d9067788314bc7fcc1f36746a3c3B5`.\n\n<Card className=\"flex justify-center\">\n  <EnsProfile name=\"nick.eth\" />\n</Card>\n\nThe simplest thing you can do is start with a name, and resolve it to an address.\nWe call this a \"forward lookup\".\nThink of places where users can enter names, such as sending transactions, chatting, etc.\n\nNote that all dot-separated strings should be treated as potential ENS names, since ENS supports [many TLDs](/dns/tlds). A common mistake is to only treat strings that end in `.eth` as ENS names.\n\n:::code-group\n\n```tsx [Wagmi]\nimport { useAccount, useEnsAvatar, useEnsName } from 'wagmi'\n\nexport const Name = () => {\n  const { data: ensName } = useEnsAddress({\n    address: 'luc.eth', // The name to lookup\n    chainId: 1, // The chain to start resolution on (Ethereum mainnet or testnet)\n  })\n\n  return <div>{ensName || address}</div>\n}\n```\n\n```ts [Ethers.js]\nconst address = await provider.lookupAddress('luc.eth')\n```\n\n```ts [Viem]\nimport { normalize } from 'viem/ens'\n\nimport { publicClient } from './client'\n\nconst ensAddress = await publicClient.getEnsAddress({\n  name: normalize('luc.eth'),\n})\n```\n\n```py [web3.py]\nfrom ens.auto import ns\n\naddress = ns.address('alice.eth')\n```\n\n```rust [ethers-rs]\nlet provider = Provider::<Http>::try_from(\"https://mainnet.infura.io/v3/...\")?;\n\nlet address = provider.lookup_address(\"luc.eth\").await?;\n```\n\n```go [go-ens]\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/ethereum/go-ethereum/ethclient\"\n\tens \"github.com/wealdtech/go-ens/v3\"\n)\n\nfunc main() {\n\tclient, _ := ethclient.Dial(\"https://rpc.ankr.com/eth\")\n\n\tdomain, _ := ens.Normalize(\"luc.eth\")\n\tresolver, _ := ens.NewResolver(client, domain)\n\taddress, _ := resolver.Address()\n\n\tfmt.Println(\"Address:\", address.Hex())\n}\n```\n\n```ts [ensjs]\nimport { createEnsPublicClient } from '@ensdomains/ensjs'\nimport { http } from 'viem'\nimport { mainnet } from 'viem/chains'\n\nconst client = createEnsPublicClient({\n  chain: mainnet,\n  transport: http(),\n})\n\nconst subgraphRecords = client.getSubgraphRecords({ name: 'ens.eth' })\n\nconst records = client.getRecords({\n  name: 'ens.eth',\n  records: {\n    coins: [...(subgraphRecords?.coins || []), 'BTC', 'ETH', 'ETC', 'SOL'],\n    texts: [\n      ...(subgraphRecords?.texts || []),\n      'avatar',\n      'email',\n      'description',\n    ],\n    contentHash: true,\n    abi: true,\n  },\n})\n```\n\n```csharp [nethereum]\nvar ensService = new Nethereum.ENS.ENSService(web3)\nvar address = await ensService.ResolveAddressAsync('alice.eth')\n```\n\n:::\n\nTo learn what happens under the hood when you do a forward lookup, read the [resolution](/resolution) section.", "mimetype": "text/plain", "start_char_idx": 161, "end_char_idx": 424, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0610f0fe-d167-43c4-9ed6-28ceb5ac87ce": {"__data__": {"id_": "0610f0fe-d167-43c4-9ed6-28ceb5ac87ce", "embedding": null, "metadata": {"file_path": "src/pages/web/resolution.mdx", "file_name": "resolution.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/resolution.mdx", "header_path": "/Address Lookup [Learn how to resolve blockchain addresses from human-readable names with ENS.]/", "customer_id": 1, "source_url": "src/pages/web/resolution.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["limited", "mainnet", "ethereum", "addresses", "EIP-2304", "storing", "address", "value", "queried", "networks", "derived", "chain", "names", "includes", "blockchain"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "492a4e999a1114f68a9abd7be8e4e1d32cae23b5", "node_type": "4", "metadata": {"file_path": "src/pages/web/resolution.mdx", "file_name": "resolution.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/resolution.mdx"}, "hash": "7f4ec8debb95ef9142f983cdc9f7f6b1507b5c100e825e59d8c2b1d3a403712d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "44587469-4233-42c2-a8ea-f9df4a0eefa6", "node_type": "1", "metadata": {"file_path": "src/pages/web/resolution.mdx", "file_name": "resolution.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/resolution.mdx", "header_path": "/Address Lookup [Learn how to resolve blockchain addresses from human-readable names with ENS.]/"}, "hash": "eef139c5585b3377551935f645a70af19f3a3ac29f2783beead6373942f5b690", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ddaba8b1-bec8-4fa5-94e1-3df252712c41", "node_type": "1", "metadata": {"header_path": "/Address Lookup [Learn how to resolve blockchain addresses from human-readable names with ENS.]/Multi-Chain Addresses (BTC, LTC, etc)/"}, "hash": "0c2304e633423ee1cea3265571f418c0d5c798d1b75ebf1ec7eb2d616f88d1b8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Multi-Chain Addresses (BTC, LTC, etc)\n\nENS Names aren't just limited to storing Ethereum addresses.\nAny blockchain address (BTC, LTC, SOL, etc.) can be queried by [SLIP-0044](https://github.com/satoshilabs/slips/blob/master/slip-0044.md) coin type or a value derived from an EVM Chain ID (specified in [ENSIP-11](/ensip/11)). This includes Ethereum L2 networks such as OP Mainnet and Base.\n\nFor EVM Chains besides Mainnet Ethereum, always use its [ENSIP-11](/ensip/11) coin type, irrespective of being included in SLIP-0044 (like Ether Classic).\n\nThe standardization of multichain addresses was first introduced in [ENSIP-9](/ensip/9), and also [EIP-2304](https://eips.ethereum.org/EIPS/eip-2304).\n\n:::note\nRegardless of the chain you're resolving an address for, ENS resolution always starts from Ethereum L1.\n:::\n\n:::code-group\n\n```tsx [Wagmi]\n// https://wagmi.sh/react/api/hooks/useEnsAddress\nimport { useEnsAddress } from 'wagmi'\nimport { arbitrum, base } from 'wagmi/chains'\n\nconst name = 'gregskril.eth'\n\nconst evmChainIdToCoinType = (chainId: number) => {\n  return (0x80000000 | chainId) >>> 0\n}\n\nexport const MyAddresses = () => {\n  // SLIP-0044 Coin Types (see ENSIP-9)\n  const { data: bitcoinAddr } = useEnsAddress({ name, coinType: 0, chainId: 1 })\n  const { data: solanaAddr } = useEnsAddress({\n    name,\n    coinType: 501,\n    chainId: 1,\n  })\n\n  // EVM Chain IDs (see ENSIP-11)\n  const { data: baseAddr } = useEnsAddress({\n    name,\n    coinType: evmChainIdToCoinType(base.id),\n    chainId: 1,\n  })\n  const { data: arbitrumAddr } = useEnsAddress({\n    name,\n    coinType: evmChainIdToCoinType(arbitrum.id),\n    chainId: 1,\n  })\n\n  return (\n    <div>\n      {JSON.stringify({ bitcoinAddr, solanaAddr, baseAddr, arbitrumAddr })}\n    </div>\n  )\n}\n```\n\n```ts [Viem]\n// https://viem.sh/docs/ens/actions/getEnsAddress.html#cointype-optional\nconst ensName = await publicClient.getEnsAddress({\n  name: normalize('wagmi-dev.eth'),\n  coinType: 0, // BTC\n})\n```\n\n```ts [Ethers.js]\n// https://docs.ethers.org/v5/api/providers/provider/#EnsResolver\nconst resolver = await provider.getResolver('luc.eth')\nconst btcAddress = await resolver?.getAddress(0)\n```\n\n```py [web3.py (Python)]\n# https://web3py.readthedocs.io/en/latest/ens_overview.html#multichain-address-resolution\nfrom ens.auto import ns\n\neth_address = ns.address('alice.eth', coin_type=60)\n```\n\n:::\n\n| Network      | Coin Type  |\n| ------------ | ---------- |\n| Bitcoin      | 0          |\n| Litecoin     | 2          |\n| Dogecoin     | 3          |\n| Ethereum     | 60         |\n| Solana       | 501        |\n| OP Mainnet   | 2147483658 |\n| Polygon      | 2147483785 |\n| Base         | 2147492101 |\n| Arbitrum One | 2147525809 |\n\n... and many many more following [SLIP-0044](https://github.com/satoshilabs/slips/blob/master/slip-0044.md) and [ENSIP-11](/ensip/11)", "mimetype": "text/plain", "start_char_idx": 3173, "end_char_idx": 6000, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ddaba8b1-bec8-4fa5-94e1-3df252712c41": {"__data__": {"id_": "ddaba8b1-bec8-4fa5-94e1-3df252712c41", "embedding": null, "metadata": {"file_path": "src/pages/web/resolution.mdx", "file_name": "resolution.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/resolution.mdx", "header_path": "/Address Lookup [Learn how to resolve blockchain addresses from human-readable names with ENS.]/Multi-Chain Addresses (BTC, LTC, etc)/", "customer_id": 1, "source_url": "src/pages/web/resolution.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["decoding", "addresses", "hashes", "advanced", "address", "learn", "store", "using", "which", "encoded", "resolvers", "their", "respective", "recommend"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "492a4e999a1114f68a9abd7be8e4e1d32cae23b5", "node_type": "4", "metadata": {"file_path": "src/pages/web/resolution.mdx", "file_name": "resolution.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/resolution.mdx"}, "hash": "7f4ec8debb95ef9142f983cdc9f7f6b1507b5c100e825e59d8c2b1d3a403712d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0610f0fe-d167-43c4-9ed6-28ceb5ac87ce", "node_type": "1", "metadata": {"file_path": "src/pages/web/resolution.mdx", "file_name": "resolution.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/resolution.mdx", "header_path": "/Address Lookup [Learn how to resolve blockchain addresses from human-readable names with ENS.]/"}, "hash": "370cbd58cf22fb6b9682973745f20f67e2fc876da4accbe4039af9fd955f201b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c4b9b578-81a9-4d77-add4-658fe4e6cfe1", "node_type": "1", "metadata": {"header_path": "/Address Lookup [Learn how to resolve blockchain addresses from human-readable names with ENS.]/"}, "hash": "e19e279905e8851f46db13e47c562f06a5e7fdc23e4db436a03d605f33923cfb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Decoding Address Hashes\n\nENS resolvers store all addresses in bytes, which may have to be encoded to their respective address formats. To do this, we recommend using the [@ensdomains/address-encoder](https://www.npmjs.com/package/@ensdomains/address-encoder) package. ## Advanced\n\n<EmbedLink\n  href=\"/resolution\"\n  title=\"In-Depth Resolution\"\n  tag=\"Advanced\"\n  description=\"To learn more about the resolution process, please read the Resolution section.\"\n/> ---\ndescription: To lookup the name of an address we use a reverse resolution. This allows users to indicate a primary name.\n---\n\nimport { EnsProfile } from '../../components/EnsProfile'\nimport { Badge } from '../../components/ui/Badge'\nimport { Card } from '../../components/ui/Card'", "mimetype": "text/plain", "start_char_idx": 6002, "end_char_idx": 6273, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8314e5a4-2f5c-4639-a830-de71e3c0e634": {"__data__": {"id_": "8314e5a4-2f5c-4639-a830-de71e3c0e634", "embedding": null, "metadata": {"file_path": "src/pages/web/reverse.mdx", "file_name": "reverse.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/reverse.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/web/reverse.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["primary", "retrieve", "registrar", "aesthetically", "addresses", "preferred", "super", "convert", "agree", "order", "reverse", "smart", "hideaddress", "names"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "dc53721b5061bbc02876a388723694163ab4fa80", "node_type": "4", "metadata": {"file_path": "src/pages/web/reverse.mdx", "file_name": "reverse.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/reverse.mdx"}, "hash": "d32c56c0e1ec1111e13a045b8588b08801cc0bfc9142b010db1dc4113ed2e661", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5f1c5937-6561-4d61-8a8b-62473089c5fc", "node_type": "1", "metadata": {"file_path": "src/pages/web/reverse.mdx", "file_name": "reverse.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/reverse.mdx", "header_path": "/"}, "hash": "18733fc3abb6bec117e8886a5ce8f4ecb15247bb57809b36d442c194603d50eb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d0f065df-6a7f-4c7b-b94e-696818475ce4", "node_type": "1", "metadata": {"header_path": "/Primary Names/"}, "hash": "7ab9ade0bbe0599e50af2b8861fc5db682982d54176fcbd3cb920c25fec0df97", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Primary Names\n\nWe can all agree 42-character long machine-optimized addresses (eg. 0x225...c3b5) are not aesthetically pleasing.\nFortunately, it is super easy to retrieve a user's preferred name, and this page will show you how.\n\n<Card className=\"flex items-center justify-center gap-2\">\n  <span className=\"font-medium\">0xb8c...67d5</span>\n  <span>to</span>\n  <EnsProfile name=\"nick.eth\" hideAddress />\n</Card>\n\nIn order to convert them to human-readable names, we use [the reverse registrar](/registry/reverse).\nThe reverse registrar is a smart contract that allows users to register their preferred name, referred to as their \"primary name\" for simplicity purposes.\n\nThis functionality exists on Mainnet Ethereum today, and is [coming soon to L2s](#l2-primary-names) as well.", "mimetype": "text/plain", "start_char_idx": 286, "end_char_idx": 1065, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d0f065df-6a7f-4c7b-b94e-696818475ce4": {"__data__": {"id_": "d0f065df-6a7f-4c7b-b94e-696818475ce4", "embedding": null, "metadata": {"file_path": "src/pages/web/reverse.mdx", "file_name": "reverse.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/reverse.mdx", "header_path": "/Primary Names/", "customer_id": 1, "source_url": "src/pages/web/reverse.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["primary", "retrieving", "forward", "spoofing", "after", "verify", "resolves", "original", "performing", "reverse", "resolution", "confirm", "getting", "still", "prevents"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "dc53721b5061bbc02876a388723694163ab4fa80", "node_type": "4", "metadata": {"file_path": "src/pages/web/reverse.mdx", "file_name": "reverse.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/reverse.mdx"}, "hash": "d32c56c0e1ec1111e13a045b8588b08801cc0bfc9142b010db1dc4113ed2e661", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8314e5a4-2f5c-4639-a830-de71e3c0e634", "node_type": "1", "metadata": {"file_path": "src/pages/web/reverse.mdx", "file_name": "reverse.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/reverse.mdx", "header_path": "/"}, "hash": "4c59cdf0def2a586d97f96c2defe07b5aa916cd6d719c39efe6734f14df7b677", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "52400e5e-ae46-469b-93b7-1dcc6349ea6b", "node_type": "1", "metadata": {"header_path": "/Primary Names/"}, "hash": "dff36cb46fed5f749cf9c332b7b0a711e054b3a5bafdbce5e6eb282b31ff05f5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Getting a Primary Name\n\n:::info\n**Important**: After retrieving a name from reverse resolution, you **must** verify it by performing a forward resolution on that name to confirm it still resolves to the original address. This prevents spoofing or misconfiguration. If the addresses don't match, display the original address instead of the name.\n:::\n\nLooking up a users primary name is very simple. In most web3 libraries (wagmi, viem, ethers, web3py, etc.), you will find a built-in function to do a lookup by address as shown below. In most cases, the library will handle the verification for you.\n\nNote that all ENS requests are made from Ethereum Mainnet, even if your application is on an L2.\n\n:::code-group\n\n```tsx [Wagmi]\n// https://wagmi.sh/react/hooks/useEnsName\nimport { useEnsName } from 'wagmi'\nimport { mainnet } from 'wagmi/chains'\n\nexport const Name = () => {\n  const { data: name } = useEnsName({\n    address: '0xb8c2C29ee19D8307cb7255e1Cd9CbDE883A267d5',\n    chainId: mainnet.id, // resolution always starts from L1\n  })\n\n  return <div>Name: {name}</div>\n}\n```\n\n```ts [Ethers v5]\nconst address = '0xb8c2C29ee19D8307cb7255e1Cd9CbDE883A267d5';\nconst name = await provider.lookupAddress(address);\n\n// Always verify the forward resolution\nif (name) {\n    const resolvedAddress = await provider.resolveName(name);\n    if (resolvedAddress !== address) {\n        // If verification fails, use the original address\n        return address;\n    }\n}\n```\n\n```ts [Viem]\n// https://viem.sh/docs/ens/actions/getEnsName.html\nimport { publicClient } from './client'\n\nconst ensName = await publicClient.getEnsName({\n  address: '0xb8c2C29ee19D8307cb7255e1Cd9CbDE883A267d5',\n})\n```\n\n```py [Web3.py]\n# https://web3py.readthedocs.io/en/latest/ens_overview.html#get-the-ens-name-for-an-address\nfrom ens.auto import ns\n\nname = ns.name('0xb8c2C29ee19D8307cb7255e1Cd9CbDE883A267d5')\n```\n\n```go [Go]\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/ethereum/go-ethereum/common\"\n\t\"github.com/ethereum/go-ethereum/ethclient\"\n\tens \"github.com/wealdtech/go-ens/v3\"\n)\n\nfunc main() {\n\tclient, _ := ethclient.Dial(\"https://rpc.ankr.com/eth\")\n\n\tname, _ := ens.ReverseResolve(client, common.HexToAddress(\"0xb8c2C29ee19D8307cb7255e1Cd9CbDE883A267d5\"))\n\tfmt.Println(\"Name:\", name)\n\t// Name: nick.eth\n}\n```\n\n:::\n\n\ud83c\udf89 And that's it! Now you can turn all your pages from this, to this:\n\n<Card className=\"flex flex-col items-center gap-2\">\n  <div className=\"flex items-center gap-2\">\n    <Badge>0xb8c2...67d5</Badge>\n    <span>sent 0.1 ETH to</span>\n    <Badge>0xd8dA....6045</Badge>\n  </div>\n  <span className=\"text-grey text-sm\">turns into</span>\n  <div className=\"flex items-center gap-2\">\n    <Badge>nick.eth</Badge>\n    <span>sent 0.1 ETH to</span>\n    <Badge>vitalik.eth</Badge>\n  </div>\n</Card>", "mimetype": "text/plain", "start_char_idx": 1067, "end_char_idx": 3838, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "52400e5e-ae46-469b-93b7-1dcc6349ea6b": {"__data__": {"id_": "52400e5e-ae46-469b-93b7-1dcc6349ea6b", "embedding": null, "metadata": {"file_path": "src/pages/web/reverse.mdx", "file_name": "reverse.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/reverse.mdx", "header_path": "/Primary Names/", "customer_id": 1, "source_url": "src/pages/web/reverse.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["primary", "encourage", "registrar", "event", "cases", "function", "issuing", "setting", "might", "their", "users", "names", "people"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "dc53721b5061bbc02876a388723694163ab4fa80", "node_type": "4", "metadata": {"file_path": "src/pages/web/reverse.mdx", "file_name": "reverse.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/reverse.mdx"}, "hash": "d32c56c0e1ec1111e13a045b8588b08801cc0bfc9142b010db1dc4113ed2e661", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d0f065df-6a7f-4c7b-b94e-696818475ce4", "node_type": "1", "metadata": {"file_path": "src/pages/web/reverse.mdx", "file_name": "reverse.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/reverse.mdx", "header_path": "/Primary Names/"}, "hash": "e2780973994310da37c4cc189cac652a7517c39ee5940c2789e4b51c99f7c1fe", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "061da19f-5d61-483b-adff-e0e9e15d958c", "node_type": "1", "metadata": {"header_path": "/Primary Names/"}, "hash": "c16670ae12c990814fbe4a91437405fc51e3c290377a0fbf73e3ce9ca8a1e8c2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Setting Primary Names\n\nIn some cases you might want to encourage users to set their primary name. This might be in the event you are issuing names, or want people to be part of a community.\n\nTo do so, you can use the `setName()` function on the [reverse registrar contract](/learn/deployments). ## L2 Primary Names\n\n:::warning\nPrimary names are currently only supported on Ethereum Mainnet. Soon, primary names are also coming to L2s and are already available on testnets. This will make it possible for users to have an end-to-end experience with ENS on L2.\n:::\n\nNew contracts will be deployed to popular L2s (starting with Base, OP Mainnet, Arbitrum, Linea, and Scroll) that allow users to declare a name as their primary onchain identity. The contract interface will look something like this (not finalized):\n\n```solidity\n/// @notice Sets the `name()` record for the reverse ENS record associated with the calling account.\n/// @param name The name to set\n/// @return The ENS node hash of the reverse record\nfunction setName(string memory name) external returns (bytes32);\n\n/// @notice Sets the `name()` record for the reverse ENS record associated with the addr provided account.\n///         Can be used if the addr is a contract that is owned by an SCA.\n/// @param addr The address to set the name for\n/// @param name The name to set\n/// @return The ENS node hash of the reverse record\nfunction setNameForAddr(\n    address addr,\n    string memory name\n) external returns (bytes32);\n\n/// @notice Sets the `name()` record for the reverse ENS record associated with the contract provided that is owned with `Ownable`.\n/// @param contractAddr The address of the contract to set the name for (implementing Ownable)\n/// @param owner The owner of the contract (via Ownable)\n/// @param name The name to set\n/// @param coinTypes The coin types to set. Must be inclusive of the coin type for the contract\n/// @param signatureExpiry The expiry of the signature\n/// @param signature The signature of an address that will return true on isValidSignature for the owner\n/// @return The ENS node hash of the reverse record\nfunction setNameForOwnableWithSignature(\n    address contractAddr,\n    address owner,\n    string calldata name,\n    uint256[] memory coinTypes,\n    uint256 signatureExpiry,\n    bytes calldata signature\n) external returns (bytes32);\n\n/// @notice Sets the `name()` record for the reverse ENS record associated with the addr provided account using a signature.\n/// @param addr The address to set the name for\n/// @param name The name of the reverse record\n/// @param coinTypes The coin types to set. Must be inclusive of the coin type for the contract\n/// @param signatureExpiry Date when the signature expires\n/// @param signature The signature from the addr\n/// @return The ENS node hash of the reverse record\nfunction setNameForAddrWithSignature(\n    address addr,\n    string calldata name,\n    uint256[] calldata coinTypes,\n    uint256 signatureExpiry,\n    bytes calldata signature\n) external returns (bytes32);\n```\n\nThis provides multiple ways to set a primary name, usable for EOAs or smart contracts which is a big improvement over the current L1-only implementation.\n\nAfter retrieving a name from L2 reverse resolution, you must verify it by performing a forward resolution for the corresponding cointype on that name to confirm it still resolves to the original address. Let's look at an example:\n\nSay I own gregskril.eth on mainnet. The name resolves to my EOA `0x179A...9285` because I've set the ETH address for that name. I call `setName(\"gregskril.eth\")` on the Base reverse registrar, and I expect that my primary name is now `gregskril.eth` on Base. But that's actually not the case.\n\nENS names can resolve to [different addresses on different chains](/web/resolution), and since gregskril.eth in the example above has only specified an ETH address, the verification process will fail. In order to fix this, I need to set the Base address for gregskril.eth which is on L1 in this case. This is done by calling `setAddr(namehash(\"gregskril.eth\"), 0x179A...9285)` on the resolver for the name.\n\nNow that gregskril.eth resolves to `0x179A...9285` when using the Base cointype, and `name(0x179A...9285)` on the Base reverse registrar returns `gregskril.eth`, my primary name is fully set.", "mimetype": "text/plain", "start_char_idx": 3840, "end_char_idx": 4137, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "115052c5-98f0-4822-bbcb-50c6dd1115b7": {"__data__": {"id_": "115052c5-98f0-4822-bbcb-50c6dd1115b7", "embedding": null, "metadata": {"file_path": "src/pages/web/reverse.mdx", "file_name": "reverse.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/reverse.mdx", "header_path": "/Primary Names/L2 Primary Names/", "customer_id": 1, "source_url": "src/pages/web/reverse.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["final", "registrar", "different", "addresses", "0x00000beef055f7934784d6d81b6bc86665630dba", "sepolia", "address", "deployments", "reverse", "these", "deployment", "chain", "testnet"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "dc53721b5061bbc02876a388723694163ab4fa80", "node_type": "4", "metadata": {"file_path": "src/pages/web/reverse.mdx", "file_name": "reverse.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/reverse.mdx"}, "hash": "d32c56c0e1ec1111e13a045b8588b08801cc0bfc9142b010db1dc4113ed2e661", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "061da19f-5d61-483b-adff-e0e9e15d958c", "node_type": "1", "metadata": {"file_path": "src/pages/web/reverse.mdx", "file_name": "reverse.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/reverse.mdx", "header_path": "/Primary Names/"}, "hash": "bc2af6709656ee3dae01f63d99061d25dfc4178081779606e045d09382beba0a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3eb03534-5c17-49c1-b067-1781a4397b0f", "node_type": "1", "metadata": {"header_path": "/Primary Names/L2 Primary Names/"}, "hash": "aefbeed6742363985db23bd6e8b552daded1f81ac8c222c22e2748760c196081", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### L2 Reverse Registrar Deployments\n\n:::note\nThe final deployment addresses will be different from the ones below. These are only for testnets.\n:::\n\n| L2 Testnet Chain | Address                                    |\n| ---------------- | ------------------------------------------ |\n| Base Sepolia     | 0x00000BeEF055f7934784D6d81b6BC86665630dbA |\n| OP Sepolia       | 0x00000BeEF055f7934784D6d81b6BC86665630dbA |\n| Arbitrum Sepolia | 0x00000BeEF055f7934784D6d81b6BC86665630dbA |\n| Scroll Sepolia   | 0x00000BeEF055f7934784D6d81b6BC86665630dbA |\n| Linea Sepolia    | 0x00000BeEF055f7934784D6d81b6BC86665630dbA |\n\n{/* Slightly rewritten from https://github.com/ensdomains/ens-contracts/tree/feature/simplify-reverse-resolver/contracts/reverseRegistrar */}", "mimetype": "text/plain", "start_char_idx": 8154, "end_char_idx": 8908, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3eb03534-5c17-49c1-b067-1781a4397b0f": {"__data__": {"id_": "3eb03534-5c17-49c1-b067-1781a4397b0f", "embedding": null, "metadata": {"file_path": "src/pages/web/reverse.mdx", "file_name": "reverse.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/reverse.mdx", "header_path": "/Primary Names/L2 Primary Names/", "customer_id": 1, "source_url": "src/pages/web/reverse.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["primary", "implement", "address", "these", "using", "smart", "ownable", "signature", "records", "sender", "contracts", "where", "setting"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "dc53721b5061bbc02876a388723694163ab4fa80", "node_type": "4", "metadata": {"file_path": "src/pages/web/reverse.mdx", "file_name": "reverse.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/reverse.mdx"}, "hash": "d32c56c0e1ec1111e13a045b8588b08801cc0bfc9142b010db1dc4113ed2e661", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "115052c5-98f0-4822-bbcb-50c6dd1115b7", "node_type": "1", "metadata": {"file_path": "src/pages/web/reverse.mdx", "file_name": "reverse.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/reverse.mdx", "header_path": "/Primary Names/L2 Primary Names/"}, "hash": "4ab700ca89aecd7bb0d06bcb88af94c8b017357b274bc29111e31aec9333a50d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "50b4bc0a-4332-4dba-8715-34b3a9e56341", "node_type": "1", "metadata": {"header_path": "/Primary Names/L2 Primary Names/"}, "hash": "ca4023c049a1107947cc396261ba752cc0036023365d6336c052f59a3edd2cdb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Setting Records\n\nOn these chains, you can set a primary name for the sender in a few ways:\n\n- `setName()` most simply, using the `msg.sender`'s address\n- `setNameForAddr()` for smart contracts that implement the Ownable pattern, where `owner() == msg.sender`\n- `setNameForAddrWithSignature()` for EOAs or smart contracts with an ERC-1271 or ERC-6492 signature to set a reverse record on behalf of a user\n- `setNameForOwnableWithSignature()` which combines the functionality of the previous two functions to set the reverse record on behalf of a smart contract that implements `Ownable`", "mimetype": "text/plain", "start_char_idx": 8910, "end_char_idx": 9499, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "50b4bc0a-4332-4dba-8715-34b3a9e56341": {"__data__": {"id_": "50b4bc0a-4332-4dba-8715-34b3a9e56341", "embedding": null, "metadata": {"file_path": "src/pages/web/reverse.mdx", "file_name": "reverse.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/reverse.mdx", "header_path": "/Primary Names/L2 Primary Names/", "customer_id": 1, "source_url": "src/pages/web/reverse.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["wanting", "string", "records", "address", "cointypes", "0xae91c512bc1da8b00cd33dd9d9c734069e6e0fcd", "0x2023a04c", "signatureexpiry", "testnets", "format", "signature", "array", "value", "signatures", "setting"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "dc53721b5061bbc02876a388723694163ab4fa80", "node_type": "4", "metadata": {"file_path": "src/pages/web/reverse.mdx", "file_name": "reverse.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/reverse.mdx"}, "hash": "d32c56c0e1ec1111e13a045b8588b08801cc0bfc9142b010db1dc4113ed2e661", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3eb03534-5c17-49c1-b067-1781a4397b0f", "node_type": "1", "metadata": {"file_path": "src/pages/web/reverse.mdx", "file_name": "reverse.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/reverse.mdx", "header_path": "/Primary Names/L2 Primary Names/"}, "hash": "5e3b266994cc4db401f5fbbe44c69ef3b87fdfc1f3121354bb15eefc4ac8e859", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ff21ac58-0557-4157-ada7-65009e9ac5c7", "node_type": "1", "metadata": {"header_path": "/Primary Names/"}, "hash": "d62a59adbdd1563595a7c1601f2b4af27dc973884b2d48342b138f00d0fd2167", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Signatures for setting records\n\nThe signature format for `setNameForAddrWithSignature` is:\n\n```\nvalidatorAddress, // 0xAe91c512BC1da8B00cd33dd9D9C734069e6E0fcd for testnets\nfunctionSignature, // 0x2023a04c\nname, // string name value\naddr, // address to set name for\ncoinTypes, // array of coinTypes wanting to be set\nsignatureExpiry // expiry of the signature, up to 1 hour in the future\n```\n\nThe signature format for `setNameForOwnableWithSignature` is:\n\n```\nvalidatorAddress, // 0xAe91c512BC1da8B00cd33dd9D9C734069e6E0fcd for testnets\nfunctionSignature, // 0x975713ad\nname, // string name value\ncontractAddr, // contract address to set name for\nowner, // owner address of contract (i.e. the signature being verified)\ncoinTypes, // array of coinTypes wanting to be set\nsignatureExpiry // expiry of the signature, up to 1 hour in the future\n```", "mimetype": "text/plain", "start_char_idx": 9501, "end_char_idx": 10349, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ff21ac58-0557-4157-ada7-65009e9ac5c7": {"__data__": {"id_": "ff21ac58-0557-4157-ada7-65009e9ac5c7", "embedding": null, "metadata": {"file_path": "src/pages/web/reverse.mdx", "file_name": "reverse.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/reverse.mdx", "header_path": "/Primary Names/", "customer_id": 1, "source_url": "src/pages/web/reverse.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["primary", "transaction", "notifying", "recommended", "clearly", "execute", "about", "change", "their", "force", "doing", "without", "could", "under", "situation"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "dc53721b5061bbc02876a388723694163ab4fa80", "node_type": "4", "metadata": {"file_path": "src/pages/web/reverse.mdx", "file_name": "reverse.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/reverse.mdx"}, "hash": "d32c56c0e1ec1111e13a045b8588b08801cc0bfc9142b010db1dc4113ed2e661", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "50b4bc0a-4332-4dba-8715-34b3a9e56341", "node_type": "1", "metadata": {"file_path": "src/pages/web/reverse.mdx", "file_name": "reverse.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/reverse.mdx", "header_path": "/Primary Names/L2 Primary Names/"}, "hash": "7a9664ff90428b89a5f56b66c1b3f23653c3f50a4fda614a38db8461c851a184", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Do's and Dont's\n\nUnder no situation is it recommended to force a user to change their primary name, nor doing so without clearly notifying the user of what the transaction they are about to execute could modify.\n\nDoing so could be seen as hostile or undesired behaviour by end users and might degrade their experience with your app. import { Card } from '../../components/ui/Card' # Sign In With Ethereum (SIWE) [A specification that leverages ethereum signatures to perform authentication] ## Specification ([see spec](todo-link))\n\nThe SIWE Specification is rather simple. It describes a message format that a user ought to sign using their keys to be able to sign-in.\nThe message MUST include [a subject](todo-link), [nonce](todo-link), and a [timestamp](todo-link). These parameters prevent replay-attacks, cross-site usage, and more, all while maintaining a very human readable form.\n\nAn example payload looks like the following:\n\n```\nlocalhost wants you to sign in with your Ethereum account:\n0x225f137127d9067788314bc7fcc1f36746a3c3B5\n\nThis is a test statement.\n\nURI: https://localhost/login\nVersion: 1\nChain ID: 1\nNonce: abcdef1234567890\nIssued At: 2023-01-30T00:00:00.000Z\n```", "mimetype": "text/plain", "start_char_idx": 10351, "end_char_idx": 10686, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4b537fc2-ba1c-4fd7-a583-4862c5bf84ef": {"__data__": {"id_": "4b537fc2-ba1c-4fd7-a583-4862c5bf84ef", "embedding": null, "metadata": {"file_path": "src/pages/web/siwe.mdx", "file_name": "siwe.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/siwe.mdx", "header_path": "/Sign In With Ethereum (SIWE) [A specification that leverages ethereum signatures to perform authentication]/", "customer_id": 1, "source_url": "src/pages/web/siwe.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["issue", "writing", "whether", "authentication", "integrated", "above", "utilities", "program", "implementations", "using", "subdomains", "integrate", "easily", "phenomenal", "addition"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "371a9324af5fb53afa43db1fb8d2a431ae6f5a31", "node_type": "4", "metadata": {"file_path": "src/pages/web/siwe.mdx", "file_name": "siwe.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/siwe.mdx"}, "hash": "999c933661ad0316ec09af9133525439ef140e7f3a52227172b7a6c1a718da05", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8c8c944c-71ca-40d6-8412-ed200267d1c9", "node_type": "1", "metadata": {"file_path": "src/pages/web/siwe.mdx", "file_name": "siwe.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/siwe.mdx", "header_path": "/Sign In With Ethereum (SIWE) [A specification that leverages ethereum signatures to perform authentication]/"}, "hash": "7de97c8a96b2e19dc114e55c4b77b24a30eb9a0cdf6428a90a16fd143654fc6e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Implementations\n\nThe team at [SpruceID](https://login.xyz) has done a phenomenal job writing plug-and-play utilities that let you easily integrate ethereum-based authentication into your project.\nWhether you are using [Next.js](todo-link), [React](todo-link), or [OpenID Connect](todo-link).\n\nIn addition to the above SIWE has been integrated into [connectkit](todo-link) & more. ---\ndescription: Issue subdomains to your users, yourself, or your friends. Program your own resolver, or use one of the many existing ones.\n---\n\nimport { EmbedLink } from '../../components/EmbedLink'\nimport { Card } from '../../components/ui/Card'", "mimetype": "text/plain", "start_char_idx": 855, "end_char_idx": 1237, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5ff76236-e60a-4d4f-ad74-3be5cf7bcd52": {"__data__": {"id_": "5ff76236-e60a-4d4f-ad74-3be5cf7bcd52", "embedding": null, "metadata": {"file_path": "src/pages/web/subdomains.mdx", "file_name": "subdomains.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/subdomains.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/web/subdomains.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["deposit", "address", "subdomains", "subnames", "smart", "believe", "interact", "place", "favorite", "exchange", "contracts", "maybe", "should"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "035b7e9143b00c05382e22591eec57689abe652b", "node_type": "4", "metadata": {"file_path": "src/pages/web/subdomains.mdx", "file_name": "subdomains.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/subdomains.mdx"}, "hash": "0f47aa46fd1869004e961b8e0cf3e7897ab3d15be631dc0a7da5acf660e4d701", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ef9d3a66-53a8-4581-81e8-eca423d744ed", "node_type": "1", "metadata": {"file_path": "src/pages/web/subdomains.mdx", "file_name": "subdomains.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/subdomains.mdx", "header_path": "/"}, "hash": "79e4cb558c34c909d485d298a4be0458d99db5493ba7ee31507f5a5a52c8bf07", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d8636349-b258-4949-bb8e-097951315cef", "node_type": "1", "metadata": {"header_path": "/Subdomains/"}, "hash": "5812c23e26b2e788c257d248048ec287fe4a9de1e16cc47be54b43fb7e23d7fa", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Subdomains\n\nWe believe that any place an address is used, a name should be able to be used instead.\nThe smart contracts you interact with have names, the deposit address for your favorite exchange has a name, your favorite DAO has a name, or maybe you use subnames to keep your wallets organized.\n\n<Card className=\"flex items-center justify-center text-xl\">\n  <div className=\"text-right font-bold\">\n    {['root', 'registrar', 'controller', 'resolver', 'registry'].map(\n      (subname, i) => (\n        <div\n          className={\n            ['opacity-20', 'opacity-50', '', 'opacity-50', 'opacity-20'][i]\n          }\n          key={subname}\n        >\n          {subname}\n        </div>\n      )\n    )}\n  </div>\n  <div className=\"font-bold text-blue\">.ens.eth</div>\n</Card>\n\nLuckily, the ENS Protocol has so much to offer for you to play with. There are a variety of ways you can give out subdomains to your apps users, set them up for yourself, or more.\n\nIf you are interested in naming smart-contracts specifically, check out the [Naming Smart Contracts](/web/naming-contracts) page.", "mimetype": "text/plain", "start_char_idx": 250, "end_char_idx": 1334, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d8636349-b258-4949-bb8e-097951315cef": {"__data__": {"id_": "d8636349-b258-4949-bb8e-097951315cef", "embedding": null, "metadata": {"file_path": "src/pages/web/subdomains.mdx", "file_name": "subdomains.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/subdomains.mdx", "header_path": "/Subdomains/", "customer_id": 1, "source_url": "src/pages/web/subdomains.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["consider", "offchain", "different", "quite", "types", "subnames", "choosing", "variety", "which", "there", "tradeoffs", "technical"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "035b7e9143b00c05382e22591eec57689abe652b", "node_type": "4", "metadata": {"file_path": "src/pages/web/subdomains.mdx", "file_name": "subdomains.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/subdomains.mdx"}, "hash": "0f47aa46fd1869004e961b8e0cf3e7897ab3d15be631dc0a7da5acf660e4d701", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5ff76236-e60a-4d4f-ad74-3be5cf7bcd52", "node_type": "1", "metadata": {"file_path": "src/pages/web/subdomains.mdx", "file_name": "subdomains.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/subdomains.mdx", "header_path": "/"}, "hash": "dc05c0be06a72b8dd1f88cad927b44b525dcb18363a5858d4fdae1a2f9cd49ec", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "853ff28d-fcc2-4579-a16b-93fc8453983b", "node_type": "1", "metadata": {"header_path": "/Subdomains/Different Types of Subnames/"}, "hash": "ea31144db6f0f596940d58e558fc5383ed1786625f6cbf213e41436923d922c3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Different Types of Subnames\n\nENS subnames come in a variety of forms: L1, L2, and offchain. From a technical perspective, L2 and offchain subnames are quite similar, but there are some tradeoffs to consider when choosing which one to use. ### L1 Subnames\n\nIf you own a .eth name like nick.eth and go to create a subname in [the manager app](https://app.ens.domains/nick.eth?tab=subnames), you will be creating a subname on Ethereum Mainnet (L1) by default. This is the simplest way to create a subname with the least amount of moving pieces, but ultimately you are limited by the gas fees of Ethereum Mainnet.\n\nIf you'd like to issue L1 subnames to your users, read our guide on [creating an onchain subname registrar](/wrapper/creating-subname-registrar).\n\n<EmbedLink\n  title=\"Creating an Onchain Subname Registrar\"\n  href=\"/wrapper/creating-subname-registrar\"\n  description=\"Issue NFTs that represent subdomains on Ethereum Mainnet.\"\n/>", "mimetype": "text/plain", "start_char_idx": 1336, "end_char_idx": 1577, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9ec85419-ddf7-41c2-9b50-15e4a17e86a6": {"__data__": {"id_": "9ec85419-ddf7-41c2-9b50-15e4a17e86a6", "embedding": null, "metadata": {"file_path": "src/pages/web/subdomains.mdx", "file_name": "subdomains.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/subdomains.mdx", "header_path": "/Subdomains/Different Types of Subnames/", "customer_id": 1, "source_url": "src/pages/web/subdomains.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["approach", "developers", "fully", "contracts", "reducing", "subnames", "smart", "could", "issuing", "opinionated", "their", "while", "trustless", "significantly", "connect"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "035b7e9143b00c05382e22591eec57689abe652b", "node_type": "4", "metadata": {"file_path": "src/pages/web/subdomains.mdx", "file_name": "subdomains.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/subdomains.mdx"}, "hash": "0f47aa46fd1869004e961b8e0cf3e7897ab3d15be631dc0a7da5acf660e4d701", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "853ff28d-fcc2-4579-a16b-93fc8453983b", "node_type": "1", "metadata": {"file_path": "src/pages/web/subdomains.mdx", "file_name": "subdomains.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/subdomains.mdx", "header_path": "/Subdomains/Different Types of Subnames/"}, "hash": "36475b6c343b070d664872424726cedd33e5f30b03b98e766519135c5ffef726", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cc09cd80-cd20-4a8a-8b82-c333357d8cb5", "node_type": "1", "metadata": {"header_path": "/Subdomains/Different Types of Subnames/"}, "hash": "2e2df0c83162408be8d84226ea658e02add36bfe30bce144776774104702ad29", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### L2 Subnames\n\nDevelopers can connect an ENS name on L1 with their own smart contracts on any L2 network, and [depending on the implementation](/learn/ccip-read), this could be fully trustless while significantly reducing the cost of issuing subnames.\n\n[Durin](https://durin.dev/) is an opinionated approach to issuing ENS subnames on L2. It takes care of the L1 Resolver and offchain gateway parts of the [CCIP Read stack](/resolvers/ccip-read) for you, so you can focus on the business logic of your L2 smart contracts.\n\n<EmbedLink\n  title=\"Durin\"\n  href=\"https://durin.dev/\"\n  description=\"An opinionated approach to issuing ENS subnames on L2.\"\n/>", "mimetype": "text/plain", "start_char_idx": 2280, "end_char_idx": 2933, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cc09cd80-cd20-4a8a-8b82-c333357d8cb5": {"__data__": {"id_": "cc09cd80-cd20-4a8a-8b82-c333357d8cb5", "embedding": null, "metadata": {"file_path": "src/pages/web/subdomains.mdx", "file_name": "subdomains.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/subdomains.mdx", "header_path": "/Subdomains/Different Types of Subnames/", "customer_id": 1, "source_url": "src/pages/web/subdomains.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["exactly", "amount", "offchain", "private", "addresses", "quickly", "sound", "database", "subnames", "centralized", "large", "powered"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "035b7e9143b00c05382e22591eec57689abe652b", "node_type": "4", "metadata": {"file_path": "src/pages/web/subdomains.mdx", "file_name": "subdomains.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/subdomains.mdx"}, "hash": "0f47aa46fd1869004e961b8e0cf3e7897ab3d15be631dc0a7da5acf660e4d701", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9ec85419-ddf7-41c2-9b50-15e4a17e86a6", "node_type": "1", "metadata": {"file_path": "src/pages/web/subdomains.mdx", "file_name": "subdomains.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/subdomains.mdx", "header_path": "/Subdomains/Different Types of Subnames/"}, "hash": "e317e2666c09e583c93e889016c004865ca769221b3f79f1d152bd1aab0c93e9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Offchain Subnames\n\nOffchain subnames are exactly what they sound like - subnames that live in a centralized database on private servers, also powered by [CCIP Read](/resolvers/ccip-read). If your goal is to name a large amount of EVM addresses quickly and cheaply, with a low barrier to entry, offchain subnames might be for you. Often times, managing offchain names is as simple as interacting with a REST API.\n\nFrom a user perspective, offchain subnames are hardly different than onchain subnames. They will not appear in wallet applications as NFTs like the previous two approaches, but they can resolve all the same data (addresses, text records, etc).\n\nThere are multiple API providers that offer programmatic access to offchain subnames such as [NameStone](https://namestone.com/) and [Namespace](https://namespace.ninja/), along with open-source examples like [gskril/ens-offchain-registrar](https://github.com/gskril/ens-offchain-registrar).", "mimetype": "text/plain", "start_char_idx": 2935, "end_char_idx": 3888, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3a812dfc-d6fb-4712-9431-3dd8200d3fd2": {"__data__": {"id_": "3a812dfc-d6fb-4712-9431-3dd8200d3fd2", "embedding": null, "metadata": {"file_path": "src/pages/web/subgraph.mdx", "file_name": "subgraph.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/subgraph.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/web/subgraph.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["events", "covering", "allows", "address", "about", "subgraph", "names", "imported", "approximation", "build", "indexes", "reasonable"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3cea54a8f500385d0fa1e927ebe9d0d40b49fd4f", "node_type": "4", "metadata": {"file_path": "src/pages/web/subgraph.mdx", "file_name": "subgraph.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/subgraph.mdx"}, "hash": "e298e2d0eb6c870d82e99b07d346a4f827397cb20870380eef4796862f8fdbbf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d8f0570e-b3a8-408e-b629-a8da67c964df", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "540825d0452ab903c260ce39d8df274b2f108e3a9979a7d051380ba2ec09f547", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: The ENS subgraph\n--- # Subgraph\n\nThis is a page covering the graph's ENS subgraph. The ENS subgraph indexes on-chain events of second-level .eth names, and DNS imported names.\nIt allows us to build a reasonable approximation of the ENS names an address owns.\n\nTo read more about why not all names (such as Offchain & Gasless Names) show up in the subgraph read the [listing names](/web/enumerate) page. ## The Graph\n\nThe Graph is a protocol for indexing and querying data from blockchains. There are multiple subgraphs that you can use to query information about ENS names.\nThese subgraphs are available for [mainnet](https://api.thegraph.com/subgraphs/name/ensdomains/ens), [sepolia](https://api.studio.thegraph.com/query/49574/enssepolia/version/latest) and [holesky](https://api.studio.thegraph.com/query/49574/ensholesky/version/latest).\n\n:::note\nDevelopers are welcome to use our rate limited API endpoints above for\ntesting, but it is highly encouraged to [sign up for a free account with\nTheGraph](https://thegraph.com/studio/apikeys/) to get your own API key.\n:::", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 37, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "66d5d5a8-3051-4731-8643-0ac144a48cc1": {"__data__": {"id_": "66d5d5a8-3051-4731-8643-0ac144a48cc1", "embedding": null, "metadata": {"file_path": "src/pages/web/subgraph.mdx", "file_name": "subgraph.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/subgraph.mdx", "header_path": "/Subgraph/", "customer_id": 1, "source_url": "src/pages/web/subgraph.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["certain", "specific", "graph", "better", "schema", "graphql", "querying", "cases", "subgraph", "there", "defined", "information", "where"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3cea54a8f500385d0fa1e927ebe9d0d40b49fd4f", "node_type": "4", "metadata": {"file_path": "src/pages/web/subgraph.mdx", "file_name": "subgraph.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/subgraph.mdx"}, "hash": "e298e2d0eb6c870d82e99b07d346a4f827397cb20870380eef4796862f8fdbbf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "10a2bf08-4701-4855-8075-e3d684a6ed9f", "node_type": "1", "metadata": {"file_path": "src/pages/web/subgraph.mdx", "file_name": "subgraph.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/subgraph.mdx", "header_path": "/Subgraph/"}, "hash": "2022dd1a87e63d6edfe263e86d8a30ba9aaca3bfafae4df2e271c25481bcf02d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "44ff5a35-0703-42b2-9394-ba9be6cc1480", "node_type": "1", "metadata": {"header_path": "/Subgraph/"}, "hash": "df82b1971ae6caa830e48731c04e5a9ddc1ec82716bfbfaed5ec24268bd786bc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## GraphQL Schema\n\nThe schema for the ENS subgraph is defined in [/schema.graphql](https://github.com/ensdomains/ens-subgraph/blob/master/schema.graphql). ## Use Cases\n\nThere are certain use cases where the graph is better for querying ENS specific information than through the resolution process.\nOne of such use-cases is querying which NFT names are owned by a specific address. ## Example Queries\n\nOne can explore the following examples interactively via the [Graph Explorer Playground](https://thegraph.com/explorer/subgraphs/5XqPmWe6gjyrJtFn9cLy237i4cWw2j9HcUJEXsP5qGtH?view=Playground&chain=arbitrum-one)", "mimetype": "text/plain", "start_char_idx": 1092, "end_char_idx": 1246, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "99022406-85b3-47b5-9272-37eed43c2724": {"__data__": {"id_": "99022406-85b3-47b5-9272-37eed43c2724", "embedding": null, "metadata": {"file_path": "src/pages/web/subgraph.mdx", "file_name": "subgraph.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/subgraph.mdx", "header_path": "/Subgraph/Example Queries/", "customer_id": 1, "source_url": "src/pages/web/subgraph.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["lowercase", "getting", "query", "address", "longest", "owned", "domain", "registry", "getdomainsforaccount", "ensure", "based", "names", "account"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3cea54a8f500385d0fa1e927ebe9d0d40b49fd4f", "node_type": "4", "metadata": {"file_path": "src/pages/web/subgraph.mdx", "file_name": "subgraph.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/subgraph.mdx"}, "hash": "e298e2d0eb6c870d82e99b07d346a4f827397cb20870380eef4796862f8fdbbf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "48fc8fd9-864e-4480-b1bf-0f4b8ddb5dd1", "node_type": "1", "metadata": {"file_path": "src/pages/web/subgraph.mdx", "file_name": "subgraph.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/subgraph.mdx", "header_path": "/Subgraph/"}, "hash": "7ddd334fa029927da4e32912885d8c0708089a6e475ca300740ce502338f799e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "85627433-eb38-4193-842e-ceaa39ce2bd5", "node_type": "1", "metadata": {"header_path": "/Subgraph/Example Queries/"}, "hash": "a5e05e4a01bcfe248f40b66255e5f0723da986297f9f198f5470af65d39df707", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Getting a list of names owned by an account\n\nEnsure the address is lowercase\n\n```graphql\nquery getDomainsForAccount {\n  domains(where: { owner: \"0xa508c16666c5b8981fa46eb32784fccc01942a71\" }) {\n    name\n  }\n}\n``` ### Getting the top domain for an account based on the longest registry\n\n```graphql\nquery getDomainForAccount {\n  account(id: \"0xa508c16666c5b8981fa46eb32784fccc01942a71\") {\n    registrations(first: 1, orderBy: expiryDate, orderDirection: desc) {\n      domain {\n        name\n      }\n    }\n    id\n  }\n}\n```\n\nreturns\n\n```json\n{\n  \"data\": {\n    \"account\": {\n      \"registrations\": [\n        {\n          \"domain\": {\n            \"name\": \"datanexus.eth\"\n          }\n        }\n      ],\n      \"id\": \"0xa508c16666c5b8981fa46eb32784fccc01942a71\"\n    }\n  }\n}\n```", "mimetype": "text/plain", "start_char_idx": 1706, "end_char_idx": 1922, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "05a0658b-6cb1-4d22-a54b-4559d199f3e4": {"__data__": {"id_": "05a0658b-6cb1-4d22-a54b-4559d199f3e4", "embedding": null, "metadata": {"file_path": "src/pages/web/subgraph.mdx", "file_name": "subgraph.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/subgraph.mdx", "header_path": "/Subgraph/Example Queries/", "customer_id": 1, "source_url": "src/pages/web/subgraph.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["searching", "string", "subdomaincount", "query", "returns", "subdomain"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3cea54a8f500385d0fa1e927ebe9d0d40b49fd4f", "node_type": "4", "metadata": {"file_path": "src/pages/web/subgraph.mdx", "file_name": "subgraph.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/subgraph.mdx"}, "hash": "e298e2d0eb6c870d82e99b07d346a4f827397cb20870380eef4796862f8fdbbf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "85627433-eb38-4193-842e-ceaa39ce2bd5", "node_type": "1", "metadata": {"file_path": "src/pages/web/subgraph.mdx", "file_name": "subgraph.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/subgraph.mdx", "header_path": "/Subgraph/Example Queries/"}, "hash": "7ba21a1ae6f529cda19ae7392e080f1d580fdee42a9ed2d80f8ade42bb6399e6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "47eab606-732e-4c73-a5ec-4c9e900397be", "node_type": "1", "metadata": {"header_path": "/Subgraph/Example Queries/"}, "hash": "21d0c41d21496536a36a22672b40baef923f70cf794821fec5728fef25de4bb8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Searching for a subdomain\n\n```graphql\nquery getSubDomains($Account: String = \"messari.eth\") {\n  domains(where: { name: \"messari.eth\" }) {\n    name\n    id\n    subdomains(first: 10) {\n      name\n    }\n    subdomainCount\n  }\n}\n```\n\nreturns\n\n```json\n{\n  \"data\": {\n    \"domains\": [\n      {\n        \"name\": \"messari.eth\",\n        \"id\": \"0x498ada62251a1227664ace8d97b0de2dcc6652ddf61e6fb5d3150f43ccf599e6\",\n        \"subdomains\": [\n          {\n            \"name\": \"subgraphs.messari.eth\"\n          },\n          {\n            \"name\": \"bd.messari.eth\"\n          }\n        ],\n        \"subdomainCount\": 2\n      }\n    ]\n  }\n}\n```", "mimetype": "text/plain", "start_char_idx": 2477, "end_char_idx": 3097, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "47eab606-732e-4c73-a5ec-4c9e900397be": {"__data__": {"id_": "47eab606-732e-4c73-a5ec-4c9e900397be", "embedding": null, "metadata": {"file_path": "src/pages/web/subgraph.mdx", "file_name": "subgraph.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/subgraph.mdx", "header_path": "/Subgraph/Example Queries/", "customer_id": 1, "source_url": "src/pages/web/subgraph.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["deployed", "expirydate", "string", "query", "expiry", "wrapper", "returns", "domain", "details", "these", "getting", "contract"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3cea54a8f500385d0fa1e927ebe9d0d40b49fd4f", "node_type": "4", "metadata": {"file_path": "src/pages/web/subgraph.mdx", "file_name": "subgraph.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/subgraph.mdx"}, "hash": "e298e2d0eb6c870d82e99b07d346a4f827397cb20870380eef4796862f8fdbbf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "05a0658b-6cb1-4d22-a54b-4559d199f3e4", "node_type": "1", "metadata": {"file_path": "src/pages/web/subgraph.mdx", "file_name": "subgraph.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/subgraph.mdx", "header_path": "/Subgraph/Example Queries/"}, "hash": "b0c60d11c190fec169bda753a9b4af1be0353e895d5363e031ec0edb6a475d0a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Getting the expiry of an ENS domain\n\n```graphql\nquery getDomainExp($Account: String = \"paulieb.eth\") {\n  registrations(\n    where: { domain_: { name: $Account } }\n    first: 1\n    orderBy: expiryDate\n    orderDirection: desc\n  ) {\n    expiryDate\n  }\n}\n```\n\nreturns\n\n```json\n{\n  \"data\": {\n    \"registrations\": [\n      {\n        \"expiryDate\": \"1714752524\"\n      }\n    ]\n  }\n}\n``` # Name Wrapper Contract Details\r\n\r\nThe Name Wrapper contract is deployed on these chains:\r\n\r\n- Mainnet: [wrapper.ens.eth](https://etherscan.io/address/0xD4416b13d2b3a9aBae7AcD5D6C2BbDBE25686401#code) ( `0xD4416b13d2b3a9aBae7AcD5D6C2BbDBE25686401` )\r\n- Sepolia: [wrapper.ens.eth](https://sepolia.etherscan.io/address/0x0635513f179D50A207757E05759CbD106d7dFcE8#code) ( `0x0635513f179D50A207757E05759CbD106d7dFcE8` )", "mimetype": "text/plain", "start_char_idx": 3099, "end_char_idx": 3480, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7c0740f3-b122-4d00-ac90-6bbe4c4fcfcd": {"__data__": {"id_": "7c0740f3-b122-4d00-ac90-6bbe4c4fcfcd", "embedding": null, "metadata": {"file_path": "src/pages/wrapper/contracts.mdx", "file_name": "contracts.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/contracts.mdx", "header_path": "/Name Wrapper Contract Details\r/", "customer_id": 1, "source_url": "src/pages/wrapper/contracts.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["unwrapping", "automatically", "issues", "calling", "directly", "wrapper", "transfer", "owner", "wrapping", "contract", "manager"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "13adf5c8e2b786fbbb46755aa34d17db3c75336a", "node_type": "4", "metadata": {"file_path": "src/pages/wrapper/contracts.mdx", "file_name": "contracts.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/contracts.mdx"}, "hash": "4171aacdfeff361048859a1ff806d55c37cbaea1d8e078a2fe552193ae575952", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3ef84381-10b9-4eba-b028-c97fc9e2e67f", "node_type": "1", "metadata": {"file_path": "src/pages/wrapper/contracts.mdx", "file_name": "contracts.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/contracts.mdx", "header_path": "/"}, "hash": "536b4efccfc27553881a52d4208a1c89fcd682a50e38032e5e7a10f0c8802b2b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5206085b-5118-414c-b212-7ecdcb2eceb6", "node_type": "1", "metadata": {"header_path": "/Name Wrapper Contract Details\r/"}, "hash": "8cf03e55bdb4e7a5f7222f0c80c347c822119550f4f6ad6a3796fc0ce7a56c49", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Wrapping and Unwrapping\r\n\r\nWhen wrapping a .eth 2LD, you transfer the Owner (Registrant) of the ERC-721 NFT to the Name Wrapper contract.\r\n\r\nThe contract will then automatically take over the Manager (Controller) for the name as well.\r\n\r\nYou can do this by calling the <a href=\"https://github.com/ensdomains/ens-contracts/tree/master/contracts/wrapper#wrapeth2ld\">wrapETH2LD</a> method. Or, you can directly transfer the ERC-721 NFT to the Name Wrapper contract. In return, the contract issues you an ERC-1155 NFT.\r\n\r\n```solidity\r\nNameWrapper.wrapETH2LD(string label, address wrappedOwner, uint16 ownerControlledFuses, address resolver)\r\n\r\n// For example\r\nwrapETH2LD(\r\n    \"myname\", // \"myname.eth\" but only the label\r\n    0x1234..., // The address you want to own the wrapped name\r\n    0, // The owner-controlled fuse bits OR'd together, that you want to burn\r\n    0x1234... // The address of the resolver you want to use\r\n)\r\n```\r\n\r\nWhen wrapping any other ENS name, you transfer the Manager (Controller) of the name to the Name Wrapper contract. You can do this by calling the <a href=\"https://github.com/ensdomains/ens-contracts/tree/master/contracts/wrapper#wrap\">wrap</a> method. In return, the contract issues you an ERC-1155 NFT.\r\n\r\n```solidity\r\nNameWrapper.wrap(bytes name, address wrappedOwner, address resolver)\r\n\r\n// For example\r\nwrapETH2LD(\r\n    0x03737562046e616d650365746800, // The DNS-encoded version of \"sub.myname.eth\"\r\n    0x1234..., // The address you want to own the wrapped name\r\n    0x1234... // The address of the resolver you want to use\r\n)\r\n```\r\n\r\nAs the owner of the wrapped name, you can unwrap at any time by calling either <a href=\"https://github.com/ensdomains/ens-contracts/tree/master/contracts/wrapper#unwrapeth2ld\">unwrapETH2LD</a> or <a href=\"https://github.com/ensdomains/ens-contracts/tree/master/contracts/wrapper#unwrap\">unwrap</a>. You can do this as long as the permission to unwrap has not been revoked.\r\n\r\n```solidity\r\nNameWrapper.unwrapETH2LD(bytes32 labelhash, address registrant, address controller)\r\n\r\n// For example\r\nunwrapETH2LD(\r\n    0x952f..., // \"myname.eth\" but only the labelhash: keccak256('myname')\r\n    0x1234..., // The address you want to own the unwrapped name\r\n    0x1234... // The address you want to be the manager of the unwrapped name\r\n)\r\n\r\nNameWrapper.unwrap(bytes32 parentNode, bytes32 labelhash, address controller)\r\n\r\n// For example\r\nunwrap(\r\n    0x6cbc..., // The namehash of the parent node, e.g. \"myname.eth\"\r\n    0xfa1e..., // The labelhash of the child to unwrap, e.g. keccak256('sub')\r\n    0x1234... // The address you want to be the manager of the unwrapped name\r\n)\r\n```", "mimetype": "text/plain", "start_char_idx": 417, "end_char_idx": 3067, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5206085b-5118-414c-b212-7ecdcb2eceb6": {"__data__": {"id_": "5206085b-5118-414c-b212-7ecdcb2eceb6", "embedding": null, "metadata": {"file_path": "src/pages/wrapper/contracts.mdx", "file_name": "contracts.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/contracts.mdx", "header_path": "/Name Wrapper Contract Details\r/", "customer_id": 1, "source_url": "src/pages/wrapper/contracts.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["other", "burning", "above", "creating", "expiry", "fuses", "wrapped", "below", "wrapping", "existing", "setting"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "13adf5c8e2b786fbbb46755aa34d17db3c75336a", "node_type": "4", "metadata": {"file_path": "src/pages/wrapper/contracts.mdx", "file_name": "contracts.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/contracts.mdx"}, "hash": "4171aacdfeff361048859a1ff806d55c37cbaea1d8e078a2fe552193ae575952", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7c0740f3-b122-4d00-ac90-6bbe4c4fcfcd", "node_type": "1", "metadata": {"file_path": "src/pages/wrapper/contracts.mdx", "file_name": "contracts.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/contracts.mdx", "header_path": "/Name Wrapper Contract Details\r/"}, "hash": "e28367ee0e9b42a3991da259fb6e8e8bda47fa028f6f7c7fd51f7c5a7a68bdfc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "77973aca-89a9-45fa-b6af-c56ae534bc36", "node_type": "1", "metadata": {"header_path": "/Name Wrapper Contract Details\r/"}, "hash": "5f13339701f6746f60c664e38abc20b2d0296f9eeb1133dcd18d54c4834bac2c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Burning Fuses / Setting Expiry\r\n\r\nIf you are wrapping an existing .eth 2LD, then you can pass in the owner-controlled fuses at that time, see the above [Wrapping and Unwrapping](#wrapping-and-unwrapping) section. If you are creating a new subname, and you want to burn fuses at the same time, see the below [Creating Subnames](#creating-subnames) section.\r\n\r\nFor other existing wrapped names, you can burn fuses with either the `setFuses` or `setChildFuses` methods.\r\n\r\nThe `setFuses` method is used for a name that you own, but you do not necessarily own the parent of. You have the ability to burn any [Owner-Controlled Fuses](/wrapper/fuses#owner-controlled-fuses) you want. Note that your name must first be [Emancipated](/wrapper/states#emancipated) in order for you to be able to burn any owner-controlled fuses. All .eth 2LDs are automatically emancipated upon wrapping.\r\n\r\nWhen burning owner-controlled fuses, at a minimum you must burn the **`CANNOT_UNWRAP`** fuse (if it has not already been burned).\r\n\r\n```solidity\r\nNameWrapper.setFuses(bytes32 node, uint16 ownerControlledFuses)\r\n\r\n// For example\r\nsetFuses(\r\n    0x6cbc..., // The namehash of the node, e.g. \"myname.eth\"\r\n    1 // The owner-controlled fuse bits OR'd together, that you want to burn\r\n)\r\n```\r\n\r\nThe `setChildFuses` method is used for a subname that you own the parent of. As long as the subname has not yet been [Emancipated](/wrapper/states#emancipated), you can burn whatever [Parent-Controlled Fuses](/wrapper/fuses#parent-controlled-fuses) and [Owner-Controlled Fuses](/wrapper/fuses#owner-controlled-fuses) you want. At the same time, you must set an expiry for those fuses, if one is not already set. Note that your name must first be [Locked](/wrapper/states#locked) in order for you to burn fuses on any subnames.\r\n\r\nIf you are only burning parent-controlled fuses, then there are no further restrictions. However, if you are burning owner-controlled fuses, then you must at a minimum burn both **`PARENT_CANNOT_CONTROL`** and **`CANNOT_UNWRAP`** on the subname to lock it at the same time.\r\n\r\n```solidity\r\nNameWrapper.setChildFuses(bytes32 parentNode, bytes32 labelhash, uint32 fuses, uint64 expiry)\r\n\r\n// For example\r\nsetChildFuses(\r\n    0x6cbc..., // The namehash of the parent node, e.g. \"myname.eth\"\r\n    0xfa1e..., // The labelhash of the child, e.g. keccak256('sub')\r\n    65537, // The fuse bits OR'd together, that you want to burn\r\n    2021232060 // The expiry for the subname\r\n)\r\n```", "mimetype": "text/plain", "start_char_idx": 3071, "end_char_idx": 5552, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "77973aca-89a9-45fa-b6af-c56ae534bc36": {"__data__": {"id_": "77973aca-89a9-45fa-b6af-c56ae534bc36", "embedding": null, "metadata": {"file_path": "src/pages/wrapper/contracts.mdx", "file_name": "contracts.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/contracts.mdx", "header_path": "/Name Wrapper Contract Details\r/", "customer_id": 1, "source_url": "src/pages/wrapper/contracts.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["unwrapped", "creating", "either", "expiry", "wrapper", "subnames", "fuses", "wrapped", "subname", "created", "state", "similarly"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "13adf5c8e2b786fbbb46755aa34d17db3c75336a", "node_type": "4", "metadata": {"file_path": "src/pages/wrapper/contracts.mdx", "file_name": "contracts.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/contracts.mdx"}, "hash": "4171aacdfeff361048859a1ff806d55c37cbaea1d8e078a2fe552193ae575952", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5206085b-5118-414c-b212-7ecdcb2eceb6", "node_type": "1", "metadata": {"file_path": "src/pages/wrapper/contracts.mdx", "file_name": "contracts.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/contracts.mdx", "header_path": "/Name Wrapper Contract Details\r/"}, "hash": "523d1fc22d951bc241ff335677cbeaf801e78fc805cf43d1be8475db144191b8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3d693d25-7f46-4f61-b81c-9c0c6f752ddf", "node_type": "1", "metadata": {"header_path": "/Name Wrapper Contract Details\r/"}, "hash": "c34e990b2317b0b15d81df9ce4a4f4721b89b54a8adfd3e2d897adca9e191f2d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Creating Subnames\r\n\r\nThis is done very similarly to how unwrapped subnames are created. You call either `setSubnodeOwner` or `setSubnodeRecord` on the wrapper contract. When a name is wrapped, all subnames created will also be wrapped by default.\r\n\r\nYou can also pass in the fuses and expiry at the same time, so that the subname will be created in the fuse/permission state that you want, without needing to perform an extra transaction.\r\n\r\n```solidity\r\nNameWrapper.setSubnodeOwner(bytes32 parentNode, string label, address owner, uint32 fuses, uint64 expiry)\r\n\r\n// For example\r\nsetSubnodeOwner(\r\n    0x6cbc..., // The namehash of the parent node, e.g. \"myname.eth\"\r\n    \"sub\", // The label of the subname to create\r\n    0x1234..., // The address you want to be the owner of the new subname\r\n    65536, // The fuse bits OR'd together, that you want to burn\r\n    2021232060 // The expiry for the subname\r\n)\r\n\r\nNameWrapper.setSubnodeRecord(bytes32 parentNode, string label, address owner, address resolver, uint64 ttl, uint32 fuses, uint64 expiry)\r\n\r\n// For example\r\nsetSubnodeRecord(\r\n    0x6cbc..., // The namehash of the parent node, e.g. \"myname.eth\"\r\n    \"sub\", // The label of the subname to create\r\n    0x1234..., // The address you want to be the owner of the new subname\r\n    0x5678..., // The address of the resolver to set for the new subname\r\n    0, // The TTL to set for the new subname\r\n    65536, // The fuse bits OR'd together, that you want to burn\r\n    2021232060 // The expiry for the subname\r\n)\r\n```", "mimetype": "text/plain", "start_char_idx": 5556, "end_char_idx": 7077, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3d693d25-7f46-4f61-b81c-9c0c6f752ddf": {"__data__": {"id_": "3d693d25-7f46-4f61-b81c-9c0c6f752ddf", "embedding": null, "metadata": {"file_path": "src/pages/wrapper/contracts.mdx", "file_name": "contracts.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/contracts.mdx", "header_path": "/Name Wrapper Contract Details\r/", "customer_id": 1, "source_url": "src/pages/wrapper/contracts.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["typically", "operators", "batch", "address", "marketplace", "method", "approvals", "using", "wrapped", "supports", "operator", "approve", "approved", "names"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "13adf5c8e2b786fbbb46755aa34d17db3c75336a", "node_type": "4", "metadata": {"file_path": "src/pages/wrapper/contracts.mdx", "file_name": "contracts.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/contracts.mdx"}, "hash": "4171aacdfeff361048859a1ff806d55c37cbaea1d8e078a2fe552193ae575952", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "77973aca-89a9-45fa-b6af-c56ae534bc36", "node_type": "1", "metadata": {"file_path": "src/pages/wrapper/contracts.mdx", "file_name": "contracts.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/contracts.mdx", "header_path": "/Name Wrapper Contract Details\r/"}, "hash": "4030e3402894cf929df2694723c0c4543837875031b621f9c895da94e7580ed8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1038db4a-dc62-47b3-96e0-07e03a9efcd7", "node_type": "1", "metadata": {"header_path": "/Name Wrapper Contract Details\r/Approved Operators\r/"}, "hash": "c9995caf4d6f23d73a0db1b832fac6a977fef6e8c4f3529fdc46b9bd3d42028f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Approved Operators ### Full-Control Operator Batch Approvals\r\n\r\nYour wrapped name is an ERC-1155 NFT that supports the `setApprovalForAll` method. When you approve an address using this method, it will have **full control** over all wrapped ENS names that you own.\r\n\r\nThis method is typically used by NFT marketplace contracts. ### Name-Specific Subname Renewal Manager Approvals\r\n\r\nThe Name Wrapper also supports the ERC-721 `approve` method. This method is used to approve a single \"Subname Renewal Manager\" for a specific name.\r\n\r\nThe \"Renewal Manager\" does not have full control over your wrapped name, it can only set / extend the expiry on subnames.\r\n\r\nFurther, if you burn the **`CANNOT_APPROVE`** fuse on your name, then the approved renewal manager can no longer be changed. You can use this to \"lock in\" that contract, so that you can guarantee to all subname owners that renewals/extensions can always be done.\r\n\r\nThis approved renewal manager will be reset if the wrapped NFT is burned or re-minted, which happens if you unwrap the name, or if an expired name gets re-registered. It will also be reset if the wrapped NFT is transferred, **unless** the **`CANNOT_APPROVE`** fuse is burned.", "mimetype": "text/plain", "start_char_idx": 7081, "end_char_idx": 7102, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a8fab582-dfe8-4cf4-ad1d-f7a6125f9890": {"__data__": {"id_": "a8fab582-dfe8-4cf4-ad1d-f7a6125f9890", "embedding": null, "metadata": {"file_path": "src/pages/wrapper/contracts.mdx", "file_name": "contracts.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/contracts.mdx", "header_path": "/Name Wrapper Contract Details\r/Approved Operators\r/", "customer_id": 1, "source_url": "src/pages/wrapper/contracts.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["certain", "contract", "approval", "setup", "registrar", "separate", "these", "actions", "subname", "operator", "example", "methods", "setting"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "13adf5c8e2b786fbbb46755aa34d17db3c75336a", "node_type": "4", "metadata": {"file_path": "src/pages/wrapper/contracts.mdx", "file_name": "contracts.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/contracts.mdx"}, "hash": "4171aacdfeff361048859a1ff806d55c37cbaea1d8e078a2fe552193ae575952", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3961ae8b-39af-41e5-8909-1d07137089dd", "node_type": "1", "metadata": {"file_path": "src/pages/wrapper/contracts.mdx", "file_name": "contracts.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/contracts.mdx", "header_path": "/Name Wrapper Contract Details\r/Approved Operators\r/"}, "hash": "d203ef94c00f110bb3062ade7553fe0e609271f4cec75c46dc32f13256a1ae74", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Example - Subname Registrar Contract\r\n\r\nYou can use these operator approval methods to setup a separate contract that can take certain actions on your behalf. One example is setting up a \"subname registrar\" to allow users to register/renew subnames.\r\n\r\nThat subname registrar contract would act on your behalf and allow users to register subnames. To allow this, you would call `setApprovalForAll` to give that contract full control over your name (and thus the ability to create subnames).\r\n\r\nThen, to enable \"unruggable renewals\", you could call `approve` on that same contract (or a separate one specific to renewals if you wish) and burn **`CANNOT_APPROVE`** to lock in subname renewals for that contract.\r\n\r\nIf you need to later on, you would still be able to revoke with `setApprovalForAll`. So the contract would lose full control over your name (and the ability to create new subnames), but it would still be able to perpetually renew/extend existing subnames.\r\n\r\nAnd you can do all of this **without** needing to send your wrapped NFT to that contract.", "mimetype": "text/plain", "start_char_idx": 8294, "end_char_idx": 9359, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cb59b098-cd1f-45b9-993f-b866156a9ac1": {"__data__": {"id_": "cb59b098-cd1f-45b9-993f-b866156a9ac1", "embedding": null, "metadata": {"file_path": "src/pages/wrapper/creating-subname-registrar.mdx", "file_name": "creating-subname-registrar.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/creating-subname-registrar.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/wrapper/creating-subname-registrar.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["other", "ability", "registrar", "creating", "talked", "subnames", "stand", "about", "subname", "allow", "wrapped", "maybe", "people"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8f35585e76a1bc3ffed2cbf731dc1b332f816bbe", "node_type": "4", "metadata": {"file_path": "src/pages/wrapper/creating-subname-registrar.mdx", "file_name": "creating-subname-registrar.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/creating-subname-registrar.mdx"}, "hash": "b60501a22022a87cfab3cc247f375e47c2c8309dd1a2dbad46f1cf777ccc4cdc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c8fd5613-6329-46b3-8e69-a035226343ab", "node_type": "1", "metadata": {"header_path": "/Creating a Subname Registrar\r/"}, "hash": "4ccfb72801070f9f81e6e7af83e76a951d317da7661f83c03f52b4959f5158f5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Creating a Subname Registrar\r\n\r\nIn the [Use Cases](/wrapper/usecases#sell-or-rent-subnames) section, we talked about the ability to stand up your own \"registrar\" to allow other people to register/claim subnames automatically. Maybe you want to give wrapped subnames out for free, or maybe you want to charge for them. Maybe you want to apply specific rules to the subnames, such as only allowing alphanumeric names. All of this is possible, and this article will break down what you need to do. It's recommended to first read the [Use Cases](/wrapper/usecases#sell-or-rent-subnames) section to get an overview of the decisions you'll need to make.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 649, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c8fd5613-6329-46b3-8e69-a035226343ab": {"__data__": {"id_": "c8fd5613-6329-46b3-8e69-a035226343ab", "embedding": null, "metadata": {"file_path": "src/pages/wrapper/creating-subname-registrar.mdx", "file_name": "creating-subname-registrar.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/creating-subname-registrar.mdx", "header_path": "/Creating a Subname Registrar\r/", "customer_id": 1, "source_url": "src/pages/wrapper/creating-subname-registrar.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["assumes", "issue", "other", "whether", "already", "locking", "parent", "guide", "subnames", "first", "prerequisites", "permissions", "manager"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8f35585e76a1bc3ffed2cbf731dc1b332f816bbe", "node_type": "4", "metadata": {"file_path": "src/pages/wrapper/creating-subname-registrar.mdx", "file_name": "creating-subname-registrar.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/creating-subname-registrar.mdx"}, "hash": "b60501a22022a87cfab3cc247f375e47c2c8309dd1a2dbad46f1cf777ccc4cdc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cb59b098-cd1f-45b9-993f-b866156a9ac1", "node_type": "1", "metadata": {"file_path": "src/pages/wrapper/creating-subname-registrar.mdx", "file_name": "creating-subname-registrar.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/creating-subname-registrar.mdx", "header_path": "/"}, "hash": "89195f7699dfa598101f43c456a109b96490af8e99bd68a9107f69c818398fb8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4e784825-1460-43a4-8e44-e0a7411649cc", "node_type": "1", "metadata": {"header_path": "/Creating a Subname Registrar\r/"}, "hash": "85ad43530116919e3567d5df862a2bba730e6fcabe3817a6b769842d1224826c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Prerequisites\r\n\r\nThis guide assumes that your parent name (such as `myname.eth`) is already wrapped. If you're not sure whether your name is wrapped, look at the More tab on the Manager app. If the name is unwrapped, it will say so, and it will show you a \"Wrap Name\" button.\r\n\r\nIf you want to issue [Emancipated](/wrapper/states#emancipated) subnames, or subnames with [any other fuses](/wrapper/fuses) burned, then your parent name must first be [Locked](/wrapper/states#locked). You can do this on the Permissions tab in the ENS manager app.\r\n\r\n:::note\r\nLocking your name (in other words revoking the permission to unwrap) is an **irreversible** change. After you lock the name, you will no longer be able to unwrap it. This is a security guarantee for the holders of all subnames. It ensures that the owner of the parent name cannot get around the security guarantees of the Name Wrapper.\r\n\r\nBest to do this on a testnet (Sepolia/Holesky) name first, for development or testing purposes.\r\n:::", "mimetype": "text/plain", "start_char_idx": 653, "end_char_idx": 1652, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4e784825-1460-43a4-8e44-e0a7411649cc": {"__data__": {"id_": "4e784825-1460-43a4-8e44-e0a7411649cc", "embedding": null, "metadata": {"file_path": "src/pages/wrapper/creating-subname-registrar.mdx", "file_name": "creating-subname-registrar.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/creating-subname-registrar.mdx", "header_path": "/Creating a Subname Registrar\r/", "customer_id": 1, "source_url": "src/pages/wrapper/creating-subname-registrar.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["deploying", "uint64", "string", "registrar", "creating", "either", "expiry", "address", "order", "fuses", "create", "uint32", "contract", "should"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8f35585e76a1bc3ffed2cbf731dc1b332f816bbe", "node_type": "4", "metadata": {"file_path": "src/pages/wrapper/creating-subname-registrar.mdx", "file_name": "creating-subname-registrar.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/creating-subname-registrar.mdx"}, "hash": "b60501a22022a87cfab3cc247f375e47c2c8309dd1a2dbad46f1cf777ccc4cdc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c8fd5613-6329-46b3-8e69-a035226343ab", "node_type": "1", "metadata": {"file_path": "src/pages/wrapper/creating-subname-registrar.mdx", "file_name": "creating-subname-registrar.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/creating-subname-registrar.mdx", "header_path": "/Creating a Subname Registrar\r/"}, "hash": "2906d3999d3862c10b58bfba986c0489d60c9cb53515be86ef41ea714cd6c9fd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fb6e7d93-de54-4a7f-98f7-f55b80e0766f", "node_type": "1", "metadata": {"header_path": "/Creating a Subname Registrar\r/Creating and Deploying your Registrar Contract\r/"}, "hash": "54437dc1ba437f6afed476ab7aa2271d6d87349106515ceae432cec76c65b6c5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Creating and Deploying your Registrar Contract\r\n\r\nIn order to create a new subname, your contract should call call either `setSubnodeOwner` or `setSubnodeRecord` on the [NameWrapper contract](/learn/deployments#deployments). Also pass in the fuses and expiry at the same time, as needed.\r\n\r\n```solidity\r\nNameWrapper.setSubnodeOwner(bytes32 parentNode, string label, address owner, uint32 fuses, uint64 expiry)\r\n\r\n// For example\r\nsetSubnodeOwner(\r\n    0x6cbc..., // The namehash of the parent node, e.g. \"myname.eth\"\r\n    \"sub\", // The label of the subname to create\r\n    0x1234..., // The address you want to be the owner of the new subname\r\n    65536, // The fuse bits OR'd together, that you want to burn\r\n    2021232060 // The expiry for the subname\r\n)\r\n\r\nNameWrapper.setSubnodeRecord(bytes32 parentNode, string label, address owner, address resolver, uint64 ttl, uint32 fuses, uint64 expiry)\r\n\r\n// For example\r\nsetSubnodeRecord(\r\n    0x6cbc..., // The namehash of the parent node, e.g. \"myname.eth\"\r\n    \"sub\", // The label of the subname to create\r\n    0x1234..., // The address you want to be the owner of the new subname\r\n    0x5678..., // The address of the resolver to set for the new subname\r\n    0, // The TTL to set for the new subname\r\n    65536, // The fuse bits OR'd together, that you want to burn\r\n    2021232060 // The expiry for the subname\r\n)\r\n```\r\n\r\nYour public-facing registration function would typically take at _least_ the parent node (namehash) and subname label as inputs, such as:\r\n\r\n```solidity\r\nregister(bytes32 parentNode, string calldata label)\r\n```\r\n\r\nThen under the hood, your contract will call `setSubnodeRecord` and fill in the rest of the parameters on behalf of the user:\r\n\r\n- owner: Typically the caller account, `msg.sender`\r\n- resolver: Typically the default public resolver, `resolver.eth`\r\n- ttl: 0\r\n- fuses: Up to you and your goals. See the [Use Cases](/wrapper/usecases#sell-or-rent-subnames) section for a discussion on this. Typically 65536 for an enamcipated rental subname, or 327680 for an emancipated \"forever\" name.\r\n- expiry: Up to you and your goals. If you are renting subnames for a particular length of time, this expiry would reflect that. If you are allowing registration of \"forever\" names, then you can just set the expiry equal to the parent name's current expiry.\r\n\r\nOf course, if you want to give the registrant more power/convenience, you could allow some of those parameters to be passed in to your public register function as well.", "mimetype": "text/plain", "start_char_idx": 1656, "end_char_idx": 4159, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fb6e7d93-de54-4a7f-98f7-f55b80e0766f": {"__data__": {"id_": "fb6e7d93-de54-4a7f-98f7-f55b80e0766f", "embedding": null, "metadata": {"file_path": "src/pages/wrapper/creating-subname-registrar.mdx", "file_name": "creating-subname-registrar.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/creating-subname-registrar.mdx", "header_path": "/Creating a Subname Registrar\r/Creating and Deploying your Registrar Contract\r/", "customer_id": 1, "source_url": "src/pages/wrapper/creating-subname-registrar.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["records", "registrar", "needed", "registration", "these", "perform", "first", "subname", "owner", "slightly", "EIP-1155", "resolver", "setting"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8f35585e76a1bc3ffed2cbf731dc1b332f816bbe", "node_type": "4", "metadata": {"file_path": "src/pages/wrapper/creating-subname-registrar.mdx", "file_name": "creating-subname-registrar.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/creating-subname-registrar.mdx"}, "hash": "b60501a22022a87cfab3cc247f375e47c2c8309dd1a2dbad46f1cf777ccc4cdc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4e784825-1460-43a4-8e44-e0a7411649cc", "node_type": "1", "metadata": {"file_path": "src/pages/wrapper/creating-subname-registrar.mdx", "file_name": "creating-subname-registrar.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/creating-subname-registrar.mdx", "header_path": "/Creating a Subname Registrar\r/"}, "hash": "dc162074b8e559893cf2d4a7f8d400244f3d1b5069b8738241f76a74dc6022ed", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c1cf4a62-c848-40e4-914b-7298bc440454", "node_type": "1", "metadata": {"header_path": "/Creating a Subname Registrar\r/Creating and Deploying your Registrar Contract\r/"}, "hash": "487023c1d825c924c918f9094491854867e44a4c87c672bb3cbfd879ae67e7e8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Setting Resolver Records\r\n\r\nIf you want your subname registrar to set records on a subname in the same registration transaction, then the flow will be slightly different. In that case, perform these steps:\r\n\r\n- Call `setSubnodeOwner`, setting the _contract itself_ (`address(this)`) as the owner of the subname, temporarily. This first step is needed for the default Public Resolver so that the contract has the authority to set records for the subname.\r\n- Call whatever [resolver methods](/resolvers/interacting) you need to. Perhaps these are records that you want to be pre-set on your subnames (such as an ETH address that the subname points to). Or perhaps these are records that you allow the registrant to pass in, so that they can register their subname and set whatever records they want all in one transaction.\r\n- Call `setSubnodeRecord`, but this time set the owner to the actual intended owner of the subname. This is the point at which you should set the appropriate fuses and expiry you want to, as well.\r\n\r\nIn addition, you will need to make sure your contract follows the [ERC-1155 Token Receiver rules](https://eips.ethereum.org/EIPS/eip-1155#erc-1155-token-receiver). This means implementing the `onERC1155Received` and `onERC1155BatchReceived` methods, and signaling support for them in your ERC-165 `supportsInterface` method. OpenZeppelin has an easy abstract contract you can include for all this: [ERC1155Holder.sol](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/utils/ERC1155Holder.sol)", "mimetype": "text/plain", "start_char_idx": 4163, "end_char_idx": 5722, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c1cf4a62-c848-40e4-914b-7298bc440454": {"__data__": {"id_": "c1cf4a62-c848-40e4-914b-7298bc440454", "embedding": null, "metadata": {"file_path": "src/pages/wrapper/creating-subname-registrar.mdx", "file_name": "creating-subname-registrar.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/creating-subname-registrar.mdx", "header_path": "/Creating a Subname Registrar\r/Creating and Deploying your Registrar Contract\r/", "customer_id": 1, "source_url": "src/pages/wrapper/creating-subname-registrar.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["accomplish", "require", "amount", "certain", "tokens", "registration", "should", "taking", "could", "setting", "allow", "choose", "users", "spend", "function"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8f35585e76a1bc3ffed2cbf731dc1b332f816bbe", "node_type": "4", "metadata": {"file_path": "src/pages/wrapper/creating-subname-registrar.mdx", "file_name": "creating-subname-registrar.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/creating-subname-registrar.mdx"}, "hash": "b60501a22022a87cfab3cc247f375e47c2c8309dd1a2dbad46f1cf777ccc4cdc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fb6e7d93-de54-4a7f-98f7-f55b80e0766f", "node_type": "1", "metadata": {"file_path": "src/pages/wrapper/creating-subname-registrar.mdx", "file_name": "creating-subname-registrar.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/creating-subname-registrar.mdx", "header_path": "/Creating a Subname Registrar\r/Creating and Deploying your Registrar Contract\r/"}, "hash": "36fa212ac564630578294b57992d881222a864ed32149f97ceb94880602b22a8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c3968a55-daad-4c70-b09e-7f4d4b46532c", "node_type": "1", "metadata": {"header_path": "/Creating a Subname Registrar\r/Creating and Deploying your Registrar Contract\r/"}, "hash": "f6e58a389e65fd046cf0ae3ea1081fb5b0eff748a3d4ba618dd18ff84e938770", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Taking fees\r\n\r\nIf you are setting up a \"rental\" registrar, then your registration function should require a certain amount of ETH to be sent in as well.\r\n\r\nAlternatively, you could choose to allow users to spend ERC-20 tokens instead. To accomplish that, you would typically call the ERC-20 method `transferFrom` on the token contract. This also means that the registrant would first need to approve your contract as a spender for that token, meaning they would need to execute a separate approval transaction first (either to approve unlimited spending, or to approve the specific number of tokens needed to register the subname).", "mimetype": "text/plain", "start_char_idx": 5726, "end_char_idx": 6361, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c3968a55-daad-4c70-b09e-7f4d4b46532c": {"__data__": {"id_": "c3968a55-daad-4c70-b09e-7f4d4b46532c", "embedding": null, "metadata": {"file_path": "src/pages/wrapper/creating-subname-registrar.mdx", "file_name": "creating-subname-registrar.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/creating-subname-registrar.mdx", "header_path": "/Creating a Subname Registrar\r/Creating and Deploying your Registrar Contract\r/", "customer_id": 1, "source_url": "src/pages/wrapper/creating-subname-registrar.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["forever", "start", "registrar", "different", "these", "include", "subname", "implementation", "created", "example", "contracts", "basic", "reference"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8f35585e76a1bc3ffed2cbf731dc1b332f816bbe", "node_type": "4", "metadata": {"file_path": "src/pages/wrapper/creating-subname-registrar.mdx", "file_name": "creating-subname-registrar.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/creating-subname-registrar.mdx"}, "hash": "b60501a22022a87cfab3cc247f375e47c2c8309dd1a2dbad46f1cf777ccc4cdc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c1cf4a62-c848-40e4-914b-7298bc440454", "node_type": "1", "metadata": {"file_path": "src/pages/wrapper/creating-subname-registrar.mdx", "file_name": "creating-subname-registrar.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/creating-subname-registrar.mdx", "header_path": "/Creating a Subname Registrar\r/Creating and Deploying your Registrar Contract\r/"}, "hash": "cd50822ffb004b3495d4643bc6147e8a05a0d4361d538da3d2e9af0ca0f233e9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "64a39289-75a2-4640-83ff-0cc586727f81", "node_type": "1", "metadata": {"header_path": "/Creating a Subname Registrar\r/Creating and Deploying your Registrar Contract\r/Reference Implementation\r/"}, "hash": "6bfc9086ae3d41c66b1568d6321cc90c4fad77de9df9176d88a88c62bed380c1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Reference Implementation\r\n\r\nLuckily, you don't need to start from scratch! The ENS Labs devs have created some example contracts you can start from:\r\n\r\nhttps://github.com/ensdomains/ens-contracts/tree/feature/subdomain-registrar/contracts/subdomainregistrar\r\n\r\nThese contracts include two different implementations: #### Forever Subname Registrar\r\n\r\nThis is a basic FIFS (First in first serve) registrar. The registration can take a fixed fee, or this fee can be set to 0 if you wish for subnames to be free. Names automatically are set to the parent's expiry can the fuse for `CAN_EXTEND_EXPIRY` will be burnt on registration so the user can extend their expiry if the parent also extends theirs. For a better UX, it is recommended that the parent sets their expiration as high as possible to allow their users to not have to think about renewing.", "mimetype": "text/plain", "start_char_idx": 6365, "end_char_idx": 6684, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8d4b8d6d-8111-4e70-9924-a95141f2bacd": {"__data__": {"id_": "8d4b8d6d-8111-4e70-9924-a95141f2bacd", "embedding": null, "metadata": {"file_path": "src/pages/wrapper/creating-subname-registrar.mdx", "file_name": "creating-subname-registrar.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/creating-subname-registrar.mdx", "header_path": "/Creating a Subname Registrar\r/Creating and Deploying your Registrar Contract\r/Reference Implementation\r/", "customer_id": 1, "source_url": "src/pages/wrapper/creating-subname-registrar.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["paired", "allows", "registrar", "rental", "instead", "first", "subname", "between", "exposes", "difference", "foreversubdomainregistrar", "needs", "basic", "function"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8f35585e76a1bc3ffed2cbf731dc1b332f816bbe", "node_type": "4", "metadata": {"file_path": "src/pages/wrapper/creating-subname-registrar.mdx", "file_name": "creating-subname-registrar.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/creating-subname-registrar.mdx"}, "hash": "b60501a22022a87cfab3cc247f375e47c2c8309dd1a2dbad46f1cf777ccc4cdc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "64a39289-75a2-4640-83ff-0cc586727f81", "node_type": "1", "metadata": {"file_path": "src/pages/wrapper/creating-subname-registrar.mdx", "file_name": "creating-subname-registrar.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/creating-subname-registrar.mdx", "header_path": "/Creating a Subname Registrar\r/Creating and Deploying your Registrar Contract\r/Reference Implementation\r/"}, "hash": "066d6e9c565447d214a7653434126cbd081581736713214db43ef1e36bedcec7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "59bc2e56-4adf-4b71-9e1b-5fd258994d80", "node_type": "1", "metadata": {"header_path": "/Creating a Subname Registrar\r/"}, "hash": "f124da1f694e9ee02813a80d028377bdcb259aa0014457f833dc6c973088b5d8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "#### Rental Subname Registrar\r\n\r\nThis is a basic FIFS (First in first serve) registrar. The key difference between this and the ForeverSubdomainRegistrar is that it does not auto-burn the `CAN_EXTEND_EXPIRY` fuse and instead exposes a `renew()` function that allows paid renewal. This registrar also needs to be paired with a rental-based pricing contract. For simplicity, the deployer can deploy this pricing contract and the UI can pass this address through to `setupDomain()` when a new user wants to setup a subname.", "mimetype": "text/plain", "start_char_idx": 7224, "end_char_idx": 7744, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "59bc2e56-4adf-4b71-9e1b-5fd258994d80": {"__data__": {"id_": "59bc2e56-4adf-4b71-9e1b-5fd258994d80", "embedding": null, "metadata": {"file_path": "src/pages/wrapper/creating-subname-registrar.mdx", "file_name": "creating-subname-registrar.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/creating-subname-registrar.mdx", "header_path": "/Creating a Subname Registrar\r/", "customer_id": 1, "source_url": "src/pages/wrapper/creating-subname-registrar.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["specific", "contract", "registrar", "parent", "apply", "method", "everything", "subname", "ready", "setupdomain", "steps", "extra", "setting"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8f35585e76a1bc3ffed2cbf731dc1b332f816bbe", "node_type": "4", "metadata": {"file_path": "src/pages/wrapper/creating-subname-registrar.mdx", "file_name": "creating-subname-registrar.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/creating-subname-registrar.mdx"}, "hash": "b60501a22022a87cfab3cc247f375e47c2c8309dd1a2dbad46f1cf777ccc4cdc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8d4b8d6d-8111-4e70-9924-a95141f2bacd", "node_type": "1", "metadata": {"file_path": "src/pages/wrapper/creating-subname-registrar.mdx", "file_name": "creating-subname-registrar.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/creating-subname-registrar.mdx", "header_path": "/Creating a Subname Registrar\r/Creating and Deploying your Registrar Contract\r/Reference Implementation\r/"}, "hash": "1170fe6a2d7793dfd6bb2df1f408e4e77f2c3660526f5d7c93f2ca33badcc40a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c0f832d5-2a08-462c-9c17-352a31cbf4d8", "node_type": "1", "metadata": {"header_path": "/Creating a Subname Registrar\r/Setting Everything Up\r/"}, "hash": "d250c1793aa7224765f20d799b3a6117b084a51a86b4f1d264a0c52d5eaaeb75", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Setting Everything Up\r\n\r\nOnce you have a parent name ready and a subname registrar contract deployed, then you just need a few extra steps to set everything up: ### (If needed) Call setupDomain on your contract\r\n\r\nThis will only apply to you if you have a specific `setupDomain` method or something similar on your contract, such as the [reference implementation](/wrapper/creating-subname-registrar#reference-implementation) contracts do.\r\n\r\nCalling this method will \"enable\" a specific parent name in your subname registrar. It can also allow you to set or update the pricing terms or beneficiary account, if needed.", "mimetype": "text/plain", "start_char_idx": 7748, "end_char_idx": 7911, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "56eaaf2e-09b0-4960-9b83-9135f0f754da": {"__data__": {"id_": "56eaaf2e-09b0-4960-9b83-9135f0f754da", "embedding": null, "metadata": {"file_path": "src/pages/wrapper/creating-subname-registrar.mdx", "file_name": "creating-subname-registrar.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/creating-subname-registrar.mdx", "header_path": "/Creating a Subname Registrar\r/Setting Everything Up\r/", "customer_id": 1, "source_url": "src/pages/wrapper/creating-subname-registrar.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["namewrapper", "allows", "registrar", "ownership", "parent", "creation", "approving", "subname", "delegate", "operator", "approve", "contract", "names"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8f35585e76a1bc3ffed2cbf731dc1b332f816bbe", "node_type": "4", "metadata": {"file_path": "src/pages/wrapper/creating-subname-registrar.mdx", "file_name": "creating-subname-registrar.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/creating-subname-registrar.mdx"}, "hash": "b60501a22022a87cfab3cc247f375e47c2c8309dd1a2dbad46f1cf777ccc4cdc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c0f832d5-2a08-462c-9c17-352a31cbf4d8", "node_type": "1", "metadata": {"file_path": "src/pages/wrapper/creating-subname-registrar.mdx", "file_name": "creating-subname-registrar.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/creating-subname-registrar.mdx", "header_path": "/Creating a Subname Registrar\r/Setting Everything Up\r/"}, "hash": "39a7d6b2ec0c266b0559922f5a9f7381c0fae1c223bb8e6f114b6db19a8e5fed", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b7bd66bf-99bc-422d-b0af-589ddc26f370", "node_type": "1", "metadata": {"header_path": "/Creating a Subname Registrar\r/Setting Everything Up\r/"}, "hash": "ec685afffb87e55de3290421172a1e91ac4e2665aa5c511a9272ed46e5a5c0ab", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Approve your contract\r\n\r\nCall `setApprovalForAll` on the NameWrapper contract, approving your subname registrar contract as an operator for any names you own. This allows you to keep ownership of the parent name, and just delegate subname creation to your contract. ### (If needed) Approve token spending\r\n\r\nIf your registrar contract takes ERC-20 tokens as a registration fee, then a potential registrant will need to approve your contract as a spender first. ### Register a subname\r\n\r\nFinally, the registrant will call your public registration method. Upon transaction success, they will own the wrapped name (ERC-1155 NFT) with whatever fuse/expiry guarantees that you setup in your registrar.\r\n\r\nIf you are allowing \"forever\" subnames to be registered (meaning that you've burned the `CAN_EXTEND_EXPIRY` fuse on the subnames), then the registrant can extend their own expiry at any time. Note that a subname's expiry can be set up to a maximum of whatever the parent name's expiry is.\r\n\r\nAnd that's it!", "mimetype": "text/plain", "start_char_idx": 8376, "end_char_idx": 8645, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "dd8da4a1-3585-4fdf-bf64-7c309f514adf": {"__data__": {"id_": "dd8da4a1-3585-4fdf-bf64-7c309f514adf", "embedding": null, "metadata": {"file_path": "src/pages/wrapper/expiry.mdx", "file_name": "expiry.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/expiry.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/wrapper/expiry.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["automatically", "determine", "whether", "expiry", "wrapper", "order", "fuses", "itself", "determines", "import", "active", "burned"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b7fc36adc8f2d912a33243922309512877129c27", "node_type": "4", "metadata": {"file_path": "src/pages/wrapper/expiry.mdx", "file_name": "expiry.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/expiry.mdx"}, "hash": "ee48b3e6e82c0e5a21a876e861b0ac5224fcbb31cf4cbfc6dc31719f9fe8edfc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b527d212-9799-43ae-9c35-0b3d2420a465", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "c7e7934675c09c41d66a9711022e6c4c9f348f34c077aaddf00a033e6f006661", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "import { Card } from '../../components/ui/Card' # Name Wrapper Expiry\r\n\r\nIn order to burn any fuses on a name, you must also set an **expiry** on it. This expiry determines how long any burned fuses are active for, and may also determine whether the name itself has expired.\r\n\r\nIf the name is a .eth 2LD, then the expiry will automatically be set to the same expiry in the .eth Registrar. But for all other names, the parent can choose what expiry to set for a child name. ## Max Expiry for Subnames\r\n\r\nBy default, the expiry for a name can only be set by the parent, and can only be increased, not decreased. The maximum value for the expiry of a name is the expiry of its parent name.\r\n\r\nFor example, say a name expires in 5 years. The owner of the name can then set the expiry of its subnames to a maximum of 5 years as well. But the parent could also choose to set the expiry to something less. Let's say the parent sets the expiry of one of its subnames to 2 years.\r\n\r\nThen in turn, the owner of the subname can set the expiry of its own subnames up to a maximum of 2 years, but it could also set it to something less, like 1 year.\r\n\r\n<Card>\r\n  <img src=\"/img/namewrapper-expiry-subnames.jpg\" alt=\"Expiry Diagram\" />\r\n</Card>\r\n\r\nThe parent can set a different expiry for different subnames too, just as it can burn different fuses for different subnames.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 47, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "55043b98-3915-4fec-8177-659e8e97039d": {"__data__": {"id_": "55043b98-3915-4fec-8177-659e8e97039d", "embedding": null, "metadata": {"file_path": "src/pages/wrapper/expiry.mdx", "file_name": "expiry.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/expiry.mdx", "header_path": "/Name Wrapper Expiry\r/", "customer_id": 1, "source_url": "src/pages/wrapper/expiry.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["automatically", "other", "extend", "renewals", "parent", "expiry", "wrapper", "wrapped", "extended", "names"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b7fc36adc8f2d912a33243922309512877129c27", "node_type": "4", "metadata": {"file_path": "src/pages/wrapper/expiry.mdx", "file_name": "expiry.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/expiry.mdx"}, "hash": "ee48b3e6e82c0e5a21a876e861b0ac5224fcbb31cf4cbfc6dc31719f9fe8edfc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ba19607e-660f-4c81-8701-8b917333cd57", "node_type": "1", "metadata": {"file_path": "src/pages/wrapper/expiry.mdx", "file_name": "expiry.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/expiry.mdx", "header_path": "/Name Wrapper Expiry\r/"}, "hash": "46f3f3b9857b581cd2aefec4cccef2622db93515a45333e7927aa3db9b228735", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2bf380bb-6fd7-4d56-9db7-8d22e48c2990", "node_type": "1", "metadata": {"header_path": "/Name Wrapper Expiry\r/"}, "hash": "215d5879ce8e229dde2c3e390878a0e8a77216806417eed646d599e4ccdb552a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Renewals\r\n\r\nWhen a wrapped .eth second-level name (like `name.eth`) is renewed, that new expiry is automatically set in the Name Wrapper as well as in the .eth Registrar. However, the expiry for any other .eth names (like `sub.name.eth`) will not be automatically extended when the parent expiry is extended.\r\n\r\nThe parent can extend the expiry for an existing subname at any time, even if the subname has been emancipated.\r\n\r\nThe parent can also choose to approve a separate contract to allow the expiry for subnames to be extended by the subname owner or other accounts.\r\n\r\nThat is basically how .eth second-level names work: Since the `eth` node is locked in the registrar contract and has the Name Wrapper (which exposes a renew method) approved as a controller, .eth second-level names can be directly renewed by their owners.\r\n\r\nThe parent can further lock this approved contract in by burning the **`CANNOT_APPROVE`** fuse.\r\n\r\nThere is also a special parent-controlled fuse called **`CAN_EXTEND_EXPIRY`**. If the parent burns this fuse on a subname, then the owner of that subname (or any approved controller) can also extend the expiry.\r\n\r\nSo, if you are running a subname registrar and you want to enable \"unruggable renewals\", you can use one of the above options (or both).", "mimetype": "text/plain", "start_char_idx": 1369, "end_char_idx": 2656, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2bf380bb-6fd7-4d56-9db7-8d22e48c2990": {"__data__": {"id_": "2bf380bb-6fd7-4d56-9db7-8d22e48c2990", "embedding": null, "metadata": {"file_path": "src/pages/wrapper/expiry.mdx", "file_name": "expiry.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/expiry.mdx", "header_path": "/Name Wrapper Expiry\r/", "customer_id": 1, "source_url": "src/pages/wrapper/expiry.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["special", "registrar", "january", "reflect", "expiry", "grace", "expiration", "wrapper", "cases", "approximately", "inside", "period"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b7fc36adc8f2d912a33243922309512877129c27", "node_type": "4", "metadata": {"file_path": "src/pages/wrapper/expiry.mdx", "file_name": "expiry.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/expiry.mdx"}, "hash": "ee48b3e6e82c0e5a21a876e861b0ac5224fcbb31cf4cbfc6dc31719f9fe8edfc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "55043b98-3915-4fec-8177-659e8e97039d", "node_type": "1", "metadata": {"file_path": "src/pages/wrapper/expiry.mdx", "file_name": "expiry.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/expiry.mdx", "header_path": "/Name Wrapper Expiry\r/"}, "hash": "a7abdb8877be2ede11934b5a6b5c58ba35d863168cefd112da2d4c0859e96056", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b59bb394-9dc5-4ef0-a3ac-f229fb69d10a", "node_type": "1", "metadata": {"header_path": "/Name Wrapper Expiry\r/"}, "hash": "edea19888fecbadc6888ace6e8866b2f1cfda82909bb30a1a2a1575c262ac9b0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Special Cases for .eth 2LDs\r\n\r\nFor .eth second-level names, the end of the name's grace period (from the .eth Registrar) is used for the expiry inside of the Name Wrapper.\r\n\r\nSo if the name's expiration date in the Registrar is January 1st, then the expiry in the Name Wrapper will reflect that date _plus_ the grace period (currently 90 days, so approximately April 1st, depending on the year).\r\n\r\nWhen the name's expiration date (from the .eth Registrar) has been reached, and the name is now in the grace period, all Name Wrapper operations on the name will be restricted.\r\n\r\nThe owner will _not_ yet lose ownership of the name, but they will also not be able to unwrap or update the name until it has been renewed.", "mimetype": "text/plain", "start_char_idx": 2660, "end_char_idx": 3381, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b59bb394-9dc5-4ef0-a3ac-f229fb69d10a": {"__data__": {"id_": "b59bb394-9dc5-4ef0-a3ac-f229fb69d10a", "embedding": null, "metadata": {"file_path": "src/pages/wrapper/expiry.mdx", "file_name": "expiry.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/expiry.mdx", "header_path": "/Name Wrapper Expiry\r/", "customer_id": 1, "source_url": "src/pages/wrapper/expiry.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["means", "limited", "amount", "parent", "expiry", "grace", "fuses", "merely", "custom", "implications", "period", "still", "otherwise"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b7fc36adc8f2d912a33243922309512877129c27", "node_type": "4", "metadata": {"file_path": "src/pages/wrapper/expiry.mdx", "file_name": "expiry.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/expiry.mdx"}, "hash": "ee48b3e6e82c0e5a21a876e861b0ac5224fcbb31cf4cbfc6dc31719f9fe8edfc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2bf380bb-6fd7-4d56-9db7-8d22e48c2990", "node_type": "1", "metadata": {"file_path": "src/pages/wrapper/expiry.mdx", "file_name": "expiry.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/expiry.mdx", "header_path": "/Name Wrapper Expiry\r/"}, "hash": "637bab72dcd10f509c8d2ac71047c96e07db680c58b3be25b8a9b3653352d412", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Expiry Implications\r\n\r\nWhen a name is merely **Wrapped** but not **Emancipated** or **Locked**, parent-controlled fuses can still be burned. This means that the parent can burn a custom fuse for a limited amount of time.\r\n\r\nWhen the expiry (end of grace period for .eth 2LDs) is reached, all fuses will be reset, but the name will otherwise be unaffected.\r\n\r\nWhen a name is **Emancipated** or **Locked**, the expiry has an important additional effect. In this scenario, when the expiry (end of grace period for .eth 2LDs) has been reached, **the name itself will expire**, and the owner **loses ownership** of the name.", "mimetype": "text/plain", "start_char_idx": 3385, "end_char_idx": 4007, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9d70017f-f314-4b1f-86c2-9483bc1df7a4": {"__data__": {"id_": "9d70017f-f314-4b1f-86c2-9483bc1df7a4", "embedding": null, "metadata": {"file_path": "src/pages/wrapper/fuses.mdx", "file_name": "fuses.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/fuses.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/wrapper/fuses.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["other", "truly", "permission", "grace", "reset", "wrapper", "fuses", "which", "cannot", "available", "names", "manager", "section"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "83f04067b575b5e6b8627e7e55029d4e4508a63c", "node_type": "4", "metadata": {"file_path": "src/pages/wrapper/fuses.mdx", "file_name": "fuses.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/fuses.mdx"}, "hash": "60342e9146f508fdf7bbb5300c2d3d92d86abf922a7490b05cc5834c3fddd36f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6473755b-6532-459a-8785-0b4facc6f487", "node_type": "1", "metadata": {"header_path": "/Name Wrapper Fuses\r/"}, "hash": "0a4a8369743e5d0675a7f7e0826e06deecdb367d6813d087afa2d3e54793eedd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Name Wrapper Fuses\r\n\r\nA \"fuse\" is a permission or perk that can be granted/revoked on a name. As the name implies, once the fuse is \"burned\", it cannot be unburned.\r\n\r\nFuses will only reset when the **expiry** is reached. In the ENS Manager UI, this is available in the \"Permissions\" section of the name.\r\n\r\nBy **wrapped expiry**, we mean that for .eth second-level names (like `name.eth`), this is the end of the 90-day grace period, the time at which the .eth 2LD is truly released. For all other names (such as subnames), there is no grace period, so the expiry is just the expiration date for that specific subname.\r\n\r\nFor example, by default when you wrap a name, you can transfer that NFT around freely, just as you can with other NFTs. However, if the **`CANNOT_TRANSFER`** fuse is burned, then the NFT becomes non-transferrable. In the ENS Manager UI, you would do this by revoking the \"Can send this name\" permission.\r\n\r\nIn order to burn fuses on a name, the parent name must be **Locked** (meaning, you cannot unwrap the name). The reason is, if the parent name was not locked, then the owner of the parent name could simply get around the constraints of the Name Wrapper by unwrapping the name, and replacing/revoking subnames against the core ENS Registry.\r\n\r\nThere are parent-controlled and owner-controlled fuses:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1329, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6473755b-6532-459a-8785-0b4facc6f487": {"__data__": {"id_": "6473755b-6532-459a-8785-0b4facc6f487", "embedding": null, "metadata": {"file_path": "src/pages/wrapper/fuses.mdx", "file_name": "fuses.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/fuses.mdx", "header_path": "/Name Wrapper Fuses\r/", "customer_id": 1, "source_url": "src/pages/wrapper/fuses.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["though", "other", "allows", "granted", "parent", "description", "these", "fuses", "generally", "thought", "owner"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "83f04067b575b5e6b8627e7e55029d4e4508a63c", "node_type": "4", "metadata": {"file_path": "src/pages/wrapper/fuses.mdx", "file_name": "fuses.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/fuses.mdx"}, "hash": "60342e9146f508fdf7bbb5300c2d3d92d86abf922a7490b05cc5834c3fddd36f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9d70017f-f314-4b1f-86c2-9483bc1df7a4", "node_type": "1", "metadata": {"file_path": "src/pages/wrapper/fuses.mdx", "file_name": "fuses.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/fuses.mdx", "header_path": "/"}, "hash": "4ab067c041c5a30a78b0e98d2ac94e0f4eb30178205d74ca315a9048062e42b1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ae99e404-a5f7-47bc-b709-3c1a14911534", "node_type": "1", "metadata": {"header_path": "/Name Wrapper Fuses\r/"}, "hash": "dc2ff51fad9d698b59501a54049b97cb459d44a813243dada09ced9869c620ed", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Parent-Controlled Fuses\r\n\r\nOnly the owner of the parent name can burn one of these fuses on a name. These can generally be thought of as \"perks\" that can be granted to a name, though they can be used in other ways.\r\n\r\n| Fuse name                   | Description                                                                                                                                                                                                                                                                                      |\r\n| --------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\r\n| **`PARENT_CANNOT_CONTROL`** | Allows a parent owner to **Emancipate** a child name. After this is burned, the parent will no longer be able to burn any further fuses, and will no longer be able to replace/delete the child name. This fuse must be burned in order for any owner-controlled fuses to be burned on the name. |\r\n| **`IS_DOT_ETH`**            | This fuse cannot be burned by users of the Name Wrapper, it is only set internally when a .eth 2LD is wrapped.                                                                                                                                                                                   |\r\n| **`CAN_EXTEND_EXPIRY`**     | The owner of the child name will be able to extend their own expiry. Normally, only the parent owner can extend the expiry of a child name. See the [Expiry](/wrapper/expiry) section for more information.                                                                                      |\r\n| **Custom Fuses**            | There are 13 other parent-controlled fuses that are not reserved, and can be used in any custom way you want!                                                                                                                                                                                    |", "mimetype": "text/plain", "start_char_idx": 1333, "end_char_idx": 3496, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ae99e404-a5f7-47bc-b709-3c1a14911534": {"__data__": {"id_": "ae99e404-a5f7-47bc-b709-3c1a14911534", "embedding": null, "metadata": {"file_path": "src/pages/wrapper/fuses.mdx", "file_name": "fuses.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/fuses.mdx", "header_path": "/Name Wrapper Fuses\r/", "customer_id": 1, "source_url": "src/pages/wrapper/fuses.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["though", "other", "revoked", "parent", "description", "either", "these", "fuses", "generally", "thought", "owner", "longer", "burned"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "83f04067b575b5e6b8627e7e55029d4e4508a63c", "node_type": "4", "metadata": {"file_path": "src/pages/wrapper/fuses.mdx", "file_name": "fuses.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/fuses.mdx"}, "hash": "60342e9146f508fdf7bbb5300c2d3d92d86abf922a7490b05cc5834c3fddd36f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6473755b-6532-459a-8785-0b4facc6f487", "node_type": "1", "metadata": {"file_path": "src/pages/wrapper/fuses.mdx", "file_name": "fuses.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/fuses.mdx", "header_path": "/Name Wrapper Fuses\r/"}, "hash": "be4631d7a706937bca5821ef135b48717a74ba30973112f3bd74f0ac2219882e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f934e589-bf01-4240-94b7-7f20c9eb41ac", "node_type": "1", "metadata": {"header_path": "/Name Wrapper Fuses\r/"}, "hash": "705dce719a4384c718e9f8b6a4f7af61c94a12ae57b6ab494f192c5fcfcb07af", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Owner-Controlled Fuses\r\n\r\nEither the owner of the name or the owner of the parent name can burn one of these fuses. These can generally be thought of as \"permissions\" that can be revoked on a name, though they can be used in other ways.\r\n\r\n| Fuse name                     | Description                                                                                                                                                       |\r\n| ----------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------- |\r\n| **`CANNOT_UNWRAP`**           | The name will now be **Locked**, and can no longer be unwrapped. This fuse must be burned in order for any other owner-controlled fuses to be burned on the name. |\r\n| **`CANNOT_BURN_FUSES`**       | No further fuses can be burned on the name.                                                                                                                       |\r\n| **`CANNOT_TRANSFER`**         | The name (wrapped NFT) can no longer be transferred.                                                                                                              |\r\n| **`CANNOT_SET_RESOLVER`**     | The resolver contract for the name can no longer be updated.                                                                                                      |\r\n| **`CANNOT_SET_TTL`**          | The TTL for the name can no longer be updated.                                                                                                                    |\r\n| **`CANNOT_CREATE_SUBDOMAIN`** | New subdomains can no longer be created.                                                                                                                          |\r\n| **`CANNOT_APPROVE`**          | The approved \"subname renewal manager\" for the name can no longer be updated. See the [Approved Operators](#approved-operators) section for more information.     |\r\n| **Custom Fuses**              | There are 9 other owner-controlled fuses that are not reserved, and can be used in any custom way you want!                                                       |", "mimetype": "text/plain", "start_char_idx": 3500, "end_char_idx": 5731, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f934e589-bf01-4240-94b7-7f20c9eb41ac": {"__data__": {"id_": "f934e589-bf01-4240-94b7-7f20c9eb41ac", "embedding": null, "metadata": {"file_path": "src/pages/wrapper/fuses.mdx", "file_name": "fuses.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/fuses.mdx", "header_path": "/Name Wrapper Fuses\r/", "customer_id": 1, "source_url": "src/pages/wrapper/fuses.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["automatically", "locked", "means", "covered", "child", "parent", "quick", "control", "emancipated", "states", "placed", "state", "names", "longer"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "83f04067b575b5e6b8627e7e55029d4e4508a63c", "node_type": "4", "metadata": {"file_path": "src/pages/wrapper/fuses.mdx", "file_name": "fuses.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/fuses.mdx"}, "hash": "60342e9146f508fdf7bbb5300c2d3d92d86abf922a7490b05cc5834c3fddd36f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ae99e404-a5f7-47bc-b709-3c1a14911534", "node_type": "1", "metadata": {"file_path": "src/pages/wrapper/fuses.mdx", "file_name": "fuses.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/fuses.mdx", "header_path": "/Name Wrapper Fuses\r/"}, "hash": "81826aa6e5cb87255d443739a3b2dce54ece20dede29a1b153defadedb463196", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "549d76ed-67bf-4ae9-b078-83be4d61a4f7", "node_type": "1", "metadata": {"header_path": "/Name Wrapper Fuses\r/"}, "hash": "3b47f532dbbc80bec88345d80669e77d5c937dd5bc2f360e25a2633570374b5a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## The Emancipated and Locked States\r\n\r\nThis is also covered in the <a href=\"/wrapper/states\">Wrapped States</a> section, but here is a quick recap:\r\n\r\nAll .eth second-level names (like `name.eth`) are automatically placed into the Emancipated state when wrapped.\r\n\r\n**Emancipated** means that the parent no longer has control over the child name. It can no longer burn any fuses or replace the subname, up until the expiry.\r\n\r\nA name is Emancipated when the parent burns the **`PARENT_CANNOT_CONTROL`** (PCC) fuse. The parent must first be in the Locked state to be able to do this.\r\n\r\n**Locked** means that the name cannot be unwrapped. This provides assurance to subnames that the parent owner cannot unwrap and then, for example, start replacing subnames directly against the registry.\r\n\r\nAn Emancipated name is Locked when the **`CANNOT_UNWRAP`** (CU) fuse is burned.\r\n\r\nThink of the special PCC / CU fuses recursively:\r\n\r\n- To burn owner-controlled or subname fuses, CU must be burned.\r\n- To burn CU, PCC must be burned.\r\n- Only the parent can burn PCC on the child name, and only if CU is first burned on the parent.\r\n- Only the grandparent can burn PCC on the parent name, and only if CU is first burned on the grandparent.\r\n- And so on...\r\n\r\nFollow that chain up until you hit a .eth second-level name like `name.eth`, since .eth second-level names will have PCC automatically burned when wrapping. The parent `eth` node is already in the Locked state.\r\n\r\nA parent name can burn all the fuses it needs to on a child name in one transaction. This can be done when the subname is created, or on an existing subname that has not yet been Emancipated.", "mimetype": "text/plain", "start_char_idx": 5735, "end_char_idx": 7391, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "549d76ed-67bf-4ae9-b078-83be4d61a4f7": {"__data__": {"id_": "549d76ed-67bf-4ae9-b078-83be4d61a4f7", "embedding": null, "metadata": {"file_path": "src/pages/wrapper/fuses.mdx", "file_name": "fuses.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/fuses.mdx", "header_path": "/Name Wrapper Fuses\r/", "customer_id": 1, "source_url": "src/pages/wrapper/fuses.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["domains", "locked", "ability", "because", "fuses", "native", "subnames", "support", "technically", "completely", "owner", "beyond", "under", "names"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "83f04067b575b5e6b8627e7e55029d4e4508a63c", "node_type": "4", "metadata": {"file_path": "src/pages/wrapper/fuses.mdx", "file_name": "fuses.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/fuses.mdx"}, "hash": "60342e9146f508fdf7bbb5300c2d3d92d86abf922a7490b05cc5834c3fddd36f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f934e589-bf01-4240-94b7-7f20c9eb41ac", "node_type": "1", "metadata": {"file_path": "src/pages/wrapper/fuses.mdx", "file_name": "fuses.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/fuses.mdx", "header_path": "/Name Wrapper Fuses\r/"}, "hash": "28a34c41d98cd1335ae532ee08bf6c4f17bee37b6f8630c14726a2152a4ad5a2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## DNS Domains and Fuses\r\n\r\nCurrently, only .eth names support fuses, because only the `eth` node is on-chain native and completely locked beyond anyone's control.\r\n\r\nTechnically speaking, the owner of a DNS TLD has the ability to burn fuses on that TLD in the Name Wrapper, and set it to the \"Locked\" state. And then from there, all subnames under that DNS TLD _will_ be able to use fuses.\r\n\r\nThe DNS TLD owner would need to:\r\n\r\n- Request the Controller of that TLD from the ENS DAO\r\n- Wrap the TLD node in the Name Wrapper\r\n- Burn the **`PARENT_CANNOT_CONTROL`** and **`CANNOT_UNWRAP`** fuses on the wrapped TLD to lock it\r\n\r\nHowever, this still does not have all the immutable guarantees that .eth names do. This is because for DNS names, the \"source of truth\" always lies not in the Ethereum network, but in the DNS network, and the DNS root zone governed by ICANN stakeholders.\r\n\r\nSo even if the DNS TLD owner \"Locks\" that TLD in the ENS Name Wrapper, if that TLD were to ever change ownership on the DNS side, then (per the [ENS DAO Constitution](https://docs.ens.domains/v/governance/ens-dao-constitution#iv.-ens-integrates-with-the-global-namespace)) the new owner would be able to override control of that TLD on the ENS side, unwrap it, and replace/revoke all 2LDs. This is just something to keep in mind for wrapped DNS domains.\r\n\r\nEven if wrapped DNS domains do not support fuses, you can still use them as ERC-1155 NFTs. They will still have their own NFT metadata and show up in your wallet, with whatever avatar you have set, etc. They just won't have all the extra functionality that comes with the fuse/permission system.", "mimetype": "text/plain", "start_char_idx": 7395, "end_char_idx": 9033, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1ac6293a-ba6b-4daf-87bf-e3cf7145f87d": {"__data__": {"id_": "1ac6293a-ba6b-4daf-87bf-e3cf7145f87d", "embedding": null, "metadata": {"file_path": "src/pages/wrapper/overview.mdx", "file_name": "overview.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/overview.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/wrapper/overview.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["allows", "looking", "wrapper", "video", "allowfullscreen", "import", "interact", "overview", "guides", "contract", "manager"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "34357061b9d4b5ee5f2bd1ee3627dfe6c1d5d7da", "node_type": "4", "metadata": {"file_path": "src/pages/wrapper/overview.mdx", "file_name": "overview.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/overview.mdx"}, "hash": "3c4f84b60715c730c8382468ae12d916811785f807464949d8c01e0f573d57e6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d1309664-0e14-48fd-94d4-e873aeec1aed", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "8b9f7ed5f4d0999078dae5483c19abee6bb0c5a09a18c12490ad4201ca9e6ed3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "import { Card } from '../../components/ui/Card' # Name Wrapper Overview\r\n\r\n:::note\r\nAre you looking for user-facing guides on how to interact with the Name Wrapper in the ENS Manager App? If so, see here instead: <a href=\"https://support.ens.domains/en/collections/4194784-name-wrapper-guides\">Name Wrapper Guides</a>\r\n:::\r\n\r\n<iframe\r\n  className=\"aspect-video w-full rounded-lg shadow-sm\"\r\n  src=\"https://www.youtube-nocookie.com/embed/njb7jp5_Qoo?si=YyESSjAk4W5btawz\"\r\n  title=\"YouTube video player\"\r\n  frameBorder=\"0\"\r\n  allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\r\n  allowFullScreen\r\n/>\r\n\r\nThe **Name Wrapper** is a contract for ENS that allows you to \"wrap\" any ENS name into a ERC-1155 NFT.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 47, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "639b3e37-a2f1-4b03-a5f5-48161c18cea4": {"__data__": {"id_": "639b3e37-a2f1-4b03-a5f5-48161c18cea4", "embedding": null, "metadata": {"file_path": "src/pages/wrapper/overview.mdx", "file_name": "overview.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/overview.mdx", "header_path": "/Name Wrapper Overview\r/", "customer_id": 1, "source_url": "src/pages/wrapper/overview.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["separate", "parent", "wrapper", "unless", "given", "associated", "before", "custom", "owner", "created", "without"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "34357061b9d4b5ee5f2bd1ee3627dfe6c1d5d7da", "node_type": "4", "metadata": {"file_path": "src/pages/wrapper/overview.mdx", "file_name": "overview.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/overview.mdx"}, "hash": "3c4f84b60715c730c8382468ae12d916811785f807464949d8c01e0f573d57e6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d1309664-0e14-48fd-94d4-e873aeec1aed", "node_type": "1", "metadata": {"file_path": "src/pages/wrapper/overview.mdx", "file_name": "overview.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/overview.mdx", "header_path": "/"}, "hash": "0374488e98ed1ef133969cd9aee96facfd9e8a8865d53235ab740c35ed39b187", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d655dfdd-d2b4-44b7-9212-0572e7bb8761", "node_type": "1", "metadata": {"header_path": "/Name Wrapper Overview\r/"}, "hash": "3210fe74f187af13351d021591955dfc54fd1faa97f855b6d64c17f46a99b140", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Without the Name Wrapper\r\n\r\nBefore the Name Wrapper, only .eth 2LDs (second-level domains, like `ens.eth`) had ERC-721 NFTs associated with them, unless the owner created a separate custom contract.\r\n\r\n<Card>\r\n  <img\r\n    src=\"/img/namewrapper-overview-subnames.jpg\"\r\n    alt=\"Subnames without NFTs\"\r\n  />\r\n</Card> ## With the Name Wrapper\r\n\r\n<img src=\"/img/namewrapper-overview-wrapped.jpg\" alt=\"Name Wrapper Diagram\" />\r\n\r\n**Parent-Controlled Fuses:**\r\n\r\n- [Fuses](/wrapper/fuses) that only the parent owner can burn\r\n- \"Perks\" that can be given to the owner of a name\r\n\r\n**Example:** By burning `CAN_EXTEND_EXPIRY`, you allow the owner to\r\nextend/renew their own subname\r\n\r\n**Owner-Controlled Fuses:**\r\n\r\n- [Fuses](/wrapper/fuses) that either the owner or parent owner can burn\r\n- \"Permissions\" that can be revoked on a name\r\n\r\n**Example:** By burning `CANNOT_TRANSFER`, the wrapped NFT can no longer be\r\ntransferred or sold.\r\n\r\n**Subname Fuses:**\r\n\r\n- The parent owner has the power to burn fuses when creating subnames\r\n- Decides what perks, permissions, or guarantees to give to subname owners\r\n\r\nWith this new contract, you can wrap:\r\n\r\n- Any .eth name or subname (e.g. `name.eth`, `sub.name.eth`)\r\n- Any DNS name or subname (e.g. `name.com`, `sub.name.com`)\r\n\r\nUnwrapped .eth 2LDs have the concept of a separate **Owner** (Registrant) and **Manager** (Controller).\r\n\r\nThis changes after you wrap the name, because there is only a single account that serves as both the **Owner** and **Manager** for the wrapped name.", "mimetype": "text/plain", "start_char_idx": 767, "end_char_idx": 1084, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9e0f872d-1c33-4a14-b31b-e6beb0f544a8": {"__data__": {"id_": "9e0f872d-1c33-4a14-b31b-e6beb0f544a8", "embedding": null, "metadata": {"file_path": "src/pages/wrapper/states.mdx", "file_name": "states.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/states.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/wrapper/states.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["graph", "wrapper", "these", "taking", "wrapped", "states", "possible"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4291c1fc4ab9499cf43018e43448307f7b944a48", "node_type": "4", "metadata": {"file_path": "src/pages/wrapper/states.mdx", "file_name": "states.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/states.mdx"}, "hash": "3230b57b7868d7356c3eb14be4fbd60ebda840ade606601bac6a0b34d2523c1c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9f5286d1-2129-4d21-a610-060453e515e1", "node_type": "1", "metadata": {"header_path": "/Wrapped States\r/"}, "hash": "ed9da785417a7d5a25542f6dcd751089cf4326f8e2db715752ffb9dd20c29904", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Wrapped States\r\n\r\n```mermaid\r\ngraph LR;\r\n  unregistered((Unregistered));\r\n  unwrapped(Unwrapped);\r\n  wrapped(Wrapped);\r\n  emancipated(Emancipated);\r\n  locked(Locked);\r\n  unregistered--->|register|unwrapped;\r\n  unwrapped--->|wrap|wrapped;\r\n  wrapped--->|unwrap|unwrapped;\r\n  wrapped--->|protect|emancipated;\r\n  emancipated--->|lock|locked;\r\n  emancipated--->|unwrap|unwrapped;\r\n  emancipated--->|expire|unregistered;\r\n  locked-->|expire|unregistered;\r\n```\r\n\r\nTaking the Name Wrapper into account, an ENS name can be in one of these possible states:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 549, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9f5286d1-2129-4d21-a610-060453e515e1": {"__data__": {"id_": "9f5286d1-2129-4d21-a610-060453e515e1", "embedding": null, "metadata": {"file_path": "src/pages/wrapper/states.mdx", "file_name": "states.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/states.mdx", "header_path": "/Wrapped States\r/", "customer_id": 1, "source_url": "src/pages/wrapper/states.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["proves", "ownership", "unwrapped", "wrapper", "exists", "registry", "wrapped", "issued", "which", "expired", "unregistered", "contract"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4291c1fc4ab9499cf43018e43448307f7b944a48", "node_type": "4", "metadata": {"file_path": "src/pages/wrapper/states.mdx", "file_name": "states.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/states.mdx"}, "hash": "3230b57b7868d7356c3eb14be4fbd60ebda840ade606601bac6a0b34d2523c1c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9e0f872d-1c33-4a14-b31b-e6beb0f544a8", "node_type": "1", "metadata": {"file_path": "src/pages/wrapper/states.mdx", "file_name": "states.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/states.mdx", "header_path": "/"}, "hash": "965f5bda7a50d42c74a0f1815edd588d1e328418223a665f73791507824639b3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ff0adb11-0f90-49e5-9b4a-dcc3cea00892", "node_type": "1", "metadata": {"header_path": "/Wrapped States\r/"}, "hash": "0448632da19006d46a36cacf7ca702d52a3442bc9e9ed44ce66ea065edf3d65e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Unregistered\r\n\r\nThe name has not even been registered/created yet, or it has expired. ### Unwrapped\r\n\r\nThe name exists and has not expired (in the case of .eth second-level names). The Name Wrapper contract does not have ownership over the name. You own the name in the registry and/or .eth registrar. ### Wrapped\r\n\r\nThe Name Wrapper contract has ownership of the name (in the registry/registrar). You are issued an ERC-1155 NFT in return, which proves that you are the actual owner.\r\n\r\nYou can unwrap the name at any time, which burns the ERC-1155 NFT, and returns ownership in the registry/registrar back to you.\r\n\r\nIf your name is a subname like `sub.name.eth`, then the owner of `name.eth` can technically replace the subname and transfer it to a different owner.\r\n\r\nIn addition, the parent owner can burn parent-controlled fuses on your name.", "mimetype": "text/plain", "start_char_idx": 553, "end_char_idx": 642, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cb60f436-d51a-453f-a980-4e0ceae23d3e": {"__data__": {"id_": "cb60f436-d51a-453f-a980-4e0ceae23d3e", "embedding": null, "metadata": {"file_path": "src/pages/wrapper/states.mdx", "file_name": "states.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/states.mdx", "header_path": "/Wrapped States\r/", "customer_id": 1, "source_url": "src/pages/wrapper/states.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["additional", "automatically", "locked", "unwrapped", "parent", "replace", "fuses", "rewrapped", "emancipated", "owner", "still", "state", "names", "longer"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4291c1fc4ab9499cf43018e43448307f7b944a48", "node_type": "4", "metadata": {"file_path": "src/pages/wrapper/states.mdx", "file_name": "states.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/states.mdx"}, "hash": "3230b57b7868d7356c3eb14be4fbd60ebda840ade606601bac6a0b34d2523c1c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f2acefdf-08c2-430d-9b5d-a1a9d218f00e", "node_type": "1", "metadata": {"file_path": "src/pages/wrapper/states.mdx", "file_name": "states.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/states.mdx", "header_path": "/Wrapped States\r/"}, "hash": "d997906851682909b9de61a7756116ab77d22b785b99b92c4216f6622c44dd92", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ed8d50ec-2010-49aa-ba35-e3c9571917f0", "node_type": "1", "metadata": {"header_path": "/Wrapped States\r/"}, "hash": "f016ebb4ca3a1fdce51a8fa5b37ff1fb8340a84e3bf0d9d5e7c6786425c76815", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Emancipated\r\n\r\nThe owner of the parent name is no longer able to replace this name, or burn any additional fuses on it. All .eth second-level names (like `name.eth`) are automatically put into the Emancipated state when they are wrapped.\r\n\r\nThe name can still be unwrapped and rewrapped by the owner. ### Locked\r\n\r\nThe name can no longer be unwrapped. The owner can now burn owner-controlled fuses on the name. Fuses for subnames of this name can now be burned as well. # Name Wrapper Use-Cases ## Lock the resolved records for a name\r\n\r\nBy default, newly registered names will use the Public Resolver, which just allows the current manager/controller of the name to update any records.\r\n\r\nHowever, in some cases perhaps you want to make sure that a name resolves to specific records and **never** changes. You can accomplish this with the **`CANNOT_SET_RESOLVER`** fuse.\r\n\r\nSay you own `mycoolcontract.eth` representing a smart contract. You can use ENS subnames to refer to specific versions of that contract, like `1.mycoolcontract.eth`. And perhaps you want those versioned subnames to always point to:\r\n\r\n- The ETH address of that immutable contract\r\n- The ABI for that contract\r\n- The contenthash for some versioned documentation page\r\n- etc.\r\n\r\nOne way to do this is just to make sure the name is **Locked**, all the records are set correctly, and then transfer the owner to some burn address so it can never be updated again.\r\n\r\nBut of course this isn't ideal, because maybe there are some records that you _do_ want to update in the future. Or maybe you still want to keep ownership of that subname for other reasons.\r\n\r\nInstead of essentially burning the name, you could create a custom resolver that locks in certain records forever. Then:\r\n\r\n1. Set the resolver of that name to your custom contract\r\n2. Set the records however you want and lock them into the resolver\r\n3. Burn these fuses on the name:\r\n   - `PARENT_CANNOT_CONTROL | CANNOT_UNWRAP | CANNOT_SET_RESOLVER`\r\n\r\nNow you can still keep ownership and even some limited management power over the name, while still guaranteeing that the ETH address, ABI, and whatever other records are completely immutable, as long as the expiry is set appropriately.", "mimetype": "text/plain", "start_char_idx": 1414, "end_char_idx": 1718, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fa8b4974-baf7-4288-9209-f1c26f548bcc": {"__data__": {"id_": "fa8b4974-baf7-4288-9209-f1c26f548bcc", "embedding": null, "metadata": {"file_path": "src/pages/wrapper/usecases.mdx", "file_name": "usecases.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/usecases.mdx", "header_path": "/Name Wrapper Use-Cases\r/", "customer_id": 1, "source_url": "src/pages/wrapper/usecases.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["issue", "tickets", "those", "emancipate", "event", "fuses", "choose", "custom", "still", "subdomains", "indicate", "maybe"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "86a114353b34fd2817fae8c83cf36934ba7397a0", "node_type": "4", "metadata": {"file_path": "src/pages/wrapper/usecases.mdx", "file_name": "usecases.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/usecases.mdx"}, "hash": "a2b02ffd72a40ef1cd3c06c6e5c536b777b38c07e78bbf8395d5043943929743", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3a3ccb52-61cd-4d08-a137-7de3a98a8560", "node_type": "1", "metadata": {"file_path": "src/pages/wrapper/usecases.mdx", "file_name": "usecases.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/usecases.mdx", "header_path": "/Name Wrapper Use-Cases\r/"}, "hash": "407535873fec05f585f503e3600915b2bb16b552453d4fb8a89b7f8f63235293", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1cdf4f5f-88db-430d-81b4-bfcffa2a68a1", "node_type": "1", "metadata": {"header_path": "/Name Wrapper Use-Cases\r/"}, "hash": "445e4435d7048ffbe90d7a8f66e7934977bf932d30bb4959c376a600e9d6b9ba", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Issue subdomains as tickets to an event\r\n\r\nMaybe you have `mycoolevent.eth` and you want to issue tickets like `1.ticket.2023.mycoolevent.eth`.\r\n\r\nIf you want, you can choose to not Emancipate those subnames, but still burn some custom parent-controlled fuses. Those fuses might:\r\n\r\n- Indicate what \"tier\" their event ticket is\r\n  - Maybe they can upgrade their ticket to a higher tier, which would burn some additional fuses\r\n- Allow them access to the express line or some VIP room\r\n  - Maybe even automatically via some smart door\r\n\r\nWhen you burn those fuses, perhaps you also set the expiry to the day after the event ends.\r\n\r\nOr, maybe you want your attendees to be able to keep their subnames as a souvenir or proof-of-attendance!\r\n\r\nIf so, then instead of letting the names expire at the end of the event, you could extend the expiry and burn some additional fuses to allow the attendees to keep them forever! In that case you might want to burn these fuses:\r\n\r\n- `CAN_EXTEND_EXPIRY | PARENT_CANNOT_CONTROL`\r\n\r\nIf you want those tickets to be non-transferrable (soulbound to the address that attended), then burn these fuses:\r\n\r\n- `CAN_EXTEND_EXPIRY | PARENT_CANNOT_CONTROL | CANNOT_UNWRAP | CANNOT_TRANSFER`", "mimetype": "text/plain", "start_char_idx": 1757, "end_char_idx": 2976, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1cdf4f5f-88db-430d-81b4-bfcffa2a68a1": {"__data__": {"id_": "1cdf4f5f-88db-430d-81b4-bfcffa2a68a1", "embedding": null, "metadata": {"file_path": "src/pages/wrapper/usecases.mdx", "file_name": "usecases.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/usecases.mdx", "header_path": "/Name Wrapper Use-Cases\r/", "customer_id": 1, "source_url": "src/pages/wrapper/usecases.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["accomplish", "obviously", "registration", "handle", "subnames", "wrapped", "renewal", "manually", "create", "scale", "users", "contract"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "86a114353b34fd2817fae8c83cf36934ba7397a0", "node_type": "4", "metadata": {"file_path": "src/pages/wrapper/usecases.mdx", "file_name": "usecases.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/usecases.mdx"}, "hash": "a2b02ffd72a40ef1cd3c06c6e5c536b777b38c07e78bbf8395d5043943929743", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fa8b4974-baf7-4288-9209-f1c26f548bcc", "node_type": "1", "metadata": {"file_path": "src/pages/wrapper/usecases.mdx", "file_name": "usecases.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/usecases.mdx", "header_path": "/Name Wrapper Use-Cases\r/"}, "hash": "cc8e7a74bb2fd5ce4e22cc945dc9ac1d54a8cb4463086db769a135219feaf335", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4895acd3-80b3-4f89-9cec-07d4db567fc0", "node_type": "1", "metadata": {"header_path": "/Name Wrapper Use-Cases\r/Sell or rent subnames\r/"}, "hash": "9034633c501e0a4fdebfb81b2d36b5c282f2eb8ea23a4e634b271ff7c3286ee6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Sell or rent subnames ### I want to sell / rent out subnames!\r\n\r\nSay you own the wrapped name `verypopularname.eth`. Obviously you can just manually create wrapped subnames like `my.verypopularname.eth` and then sell them on an NFT marketplace. But that sure doesn't scale well.\r\n\r\nTo accomplish this, you will want to create a **subname registrar**. This is a contract that will handle all the registration / renewal for you, and then users will be able to interact with that contract in order to register their own subnames.\r\n\r\nIn fact, this is exactly how .eth 2LDs are registered. The owner of the `eth` TLD (the NFT contract) delegates registration / renewal to the ETHRegistrarController contract. It is acting as a subname registrar for the name `eth`.\r\n\r\nYour contract would expose a `register` method that anyone can call. Under the hood it will use the [setSubnodeOwner](https://github.com/ensdomains/ens-contracts/tree/master/contracts/wrapper#setsubnodeowner) or [setSubnodeRecord](https://github.com/ensdomains/ens-contracts/tree/master/contracts/wrapper#setsubnoderecord) methods to create subnames, passing in the **fuses** and **expiry** you want to set.", "mimetype": "text/plain", "start_char_idx": 2980, "end_char_idx": 3004, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "302115c9-3411-4926-b574-124515fae95e": {"__data__": {"id_": "302115c9-3411-4926-b574-124515fae95e", "embedding": null, "metadata": {"file_path": "src/pages/wrapper/usecases.mdx", "file_name": "usecases.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/usecases.mdx", "header_path": "/Name Wrapper Use-Cases\r/Sell or rent subnames\r/", "customer_id": 1, "source_url": "src/pages/wrapper/usecases.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["consider", "burning", "replace", "subnames", "fuses", "should", "where", "place", "users", "revoke", "state", "register", "assuming", "cannot"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "86a114353b34fd2817fae8c83cf36934ba7397a0", "node_type": "4", "metadata": {"file_path": "src/pages/wrapper/usecases.mdx", "file_name": "usecases.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/usecases.mdx"}, "hash": "a2b02ffd72a40ef1cd3c06c6e5c536b777b38c07e78bbf8395d5043943929743", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4895acd3-80b3-4f89-9cec-07d4db567fc0", "node_type": "1", "metadata": {"file_path": "src/pages/wrapper/usecases.mdx", "file_name": "usecases.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/usecases.mdx", "header_path": "/Name Wrapper Use-Cases\r/Sell or rent subnames\r/"}, "hash": "b5efac53e531e67091670dffeaf41d6c05112f7c9e79e0895a9bff226a977975", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d402fc3f-f489-409a-9d07-42d09ff29083", "node_type": "1", "metadata": {"header_path": "/Name Wrapper Use-Cases\r/Sell or rent subnames\r/"}, "hash": "cc9d085c49407662fb985a6a62a30a8b7500c7866fcae7783406c91b72efa34f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### What fuses should I burn???\r\n\r\nFirst, note that if you want to burn any fuses on subnames, then your name must be **Locked** (meaning **`CANNOT_UNWRAP`** is burned).\r\n\r\nAssuming that you want your subnames to be \"unruggable\", such that you cannot replace / revoke them, then you will want to burn **`PARENT_CANNOT_CONTROL`** on the subnames. This will place them in the **Emancipated** state upon registration.\r\n\r\nIf you want to sell \"forever\" subnames, where users register once and can then keep them for as long as they wish, then you can consider burning the **`CAN_EXTEND_EXPIRY`** fuse.\r\n\r\nThis will allow the subname owner to extend their own expiry whenever they want. The max expiry is the expiry of the parent name, but the .eth Registrar allows _anyone_ to renew/extend a .eth 2LD as well.\r\n\r\nIf you just want to **rent** subnames, then do not burn **`CAN_EXTEND_EXPIRY`**. Instead, you could include a `renew` method on your contract that users can call for another fee.\r\n\r\nIf you want to enable \"unruggable renewals\" for your registrar, to guarantee that users will always be able to renew, then you can call `approve` on the Name Wrapper and approve your registrar contract as the \"subname renewal manager\" for your name.\r\n\r\nThen, burn the **`CANNOT_APPROVE`** fuse on your name, to guarantee that you can never revoke that contract for subname renewals. See the <a href=\"#approved-operators\">Approved Operators</a> section above for more info.\r\n\r\nIf you want to impose other restrictions on your registered subnames, then you can burn the **`CANNOT_UNWRAP`** fuse to Lock the subname, and also burn whatever other fuses you want.\r\n\r\nFor example, if you want to prevent owners of your subnames (like `my.verypopularname.eth` from creating their own subnames (like `buy.my.verypopularname.eth`), then you would burn **`CANNOT_UNWRAP`** and **`CANNOT_CREATE_SUBDOMAIN`**.\r\n\r\nTo recap on fuses...\r\n\r\n- Sell permanent names:\r\n  - `CAN_EXTEND_EXPIRY | PARENT_CANNOT_CONTROL`\r\n- Sell permanent names, but prevent them from creating their own subnames:\r\n  - `CAN_EXTEND_EXPIRY | PARENT_CANNOT_CONTROL | CANNOT_UNWRAP | CANNOT_CREATE_SUBDOMAIN`\r\n- Rent out names:\r\n  - `PARENT_CANNOT_CONTROL`\r\n- Rent out names, but prevent them from transferring or reselling them:\r\n  - `PARENT_CANNOT_CONTROL | CANNOT_UNWRAP | CANNOT_TRANSFER`\r\n\r\nAnd so on, it's up to you. You can also burn whatever custom parent-controlled or owner-controlled fuses you want to.", "mimetype": "text/plain", "start_char_idx": 4160, "end_char_idx": 6619, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d402fc3f-f489-409a-9d07-42d09ff29083": {"__data__": {"id_": "d402fc3f-f489-409a-9d07-42d09ff29083", "embedding": null, "metadata": {"file_path": "src/pages/wrapper/usecases.mdx", "file_name": "usecases.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/usecases.mdx", "header_path": "/Name Wrapper Use-Cases\r/Sell or rent subnames\r/", "customer_id": 1, "source_url": "src/pages/wrapper/usecases.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["registrar", "whatever", "limit", "minimum", "impose", "default", "customize", "imposes", "there", "character", "contract", "premium", "rules"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "86a114353b34fd2817fae8c83cf36934ba7397a0", "node_type": "4", "metadata": {"file_path": "src/pages/wrapper/usecases.mdx", "file_name": "usecases.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/usecases.mdx"}, "hash": "a2b02ffd72a40ef1cd3c06c6e5c536b777b38c07e78bbf8395d5043943929743", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "302115c9-3411-4926-b574-124515fae95e", "node_type": "1", "metadata": {"file_path": "src/pages/wrapper/usecases.mdx", "file_name": "usecases.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/usecases.mdx", "header_path": "/Name Wrapper Use-Cases\r/Sell or rent subnames\r/"}, "hash": "740547db6713ac27748b49968ede27cfbce67c68dd9be136218b821adba02861", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "456959e6-6174-48f7-962f-44ecd8a2185a", "node_type": "1", "metadata": {"header_path": "/Name Wrapper Use-Cases\r/Sell or rent subnames\r/"}, "hash": "2594ca375a62438a466e1e5fdb6d792969da320e622c1c53b5a2e92bc542321d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Can I customize my own rules and fees?\r\n\r\nYes! It's your registrar contract, so you can impose whatever rules and fees you want.\r\n\r\nFor example, the .eth Registrar imposes a 3-character minimum on all names, as well as a <a href=\"https://support.ens.domains/core/registration/fees\">custom fee structure</a> and a <a href=\"https://support.ens.domains/core/registration/temporary-premium\">temporary premium auction</a> upon expiration.\r\n\r\nBy default there is no character limit on subnames, but your contract could have its own rules and fee structure or whatever you want. For example, you can:\r\n\r\n- Allow or disallow specific addresses from registering / renewing\r\n- Only allow registration based on some custom criteria like holding a specific NFT\r\n- Custom length restrictions like only 3+ characters or < 100 characters\r\n- Only allow names with characters `[a-z0-9]` and nothing else\r\n- Use a custom fee structure based on:\r\n  - The length of the name\r\n  - The specific characters that are in the name, like emojis\r\n  - A pre-curated list of \"good\" names like people's first names\r\n- And whatever other rules you want.", "mimetype": "text/plain", "start_char_idx": 6623, "end_char_idx": 7748, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "456959e6-6174-48f7-962f-44ecd8a2185a": {"__data__": {"id_": "456959e6-6174-48f7-962f-44ecd8a2185a", "embedding": null, "metadata": {"file_path": "src/pages/wrapper/usecases.mdx", "file_name": "usecases.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/usecases.mdx", "header_path": "/Name Wrapper Use-Cases\r/Sell or rent subnames\r/", "customer_id": 1, "source_url": "src/pages/wrapper/usecases.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["there", "creating", "guide", "subnames", "starting", "holders", "wrapped", "subname", "setting", "implementation", "representing", "information", "members"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "86a114353b34fd2817fae8c83cf36934ba7397a0", "node_type": "4", "metadata": {"file_path": "src/pages/wrapper/usecases.mdx", "file_name": "usecases.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/usecases.mdx"}, "hash": "a2b02ffd72a40ef1cd3c06c6e5c536b777b38c07e78bbf8395d5043943929743", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d402fc3f-f489-409a-9d07-42d09ff29083", "node_type": "1", "metadata": {"file_path": "src/pages/wrapper/usecases.mdx", "file_name": "usecases.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/usecases.mdx", "header_path": "/Name Wrapper Use-Cases\r/Sell or rent subnames\r/"}, "hash": "c48ae4c7b64b0c0f3825d27af76171b8de80f6ab0b751717cc51180b329ce22e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "02ac9bf1-95d4-4300-8461-5313fd7b369d", "node_type": "1", "metadata": {"header_path": "/Name Wrapper Use-Cases\r/"}, "hash": "caf4a524f4508f273e05fbb886eb59eae1001cb874015d2509b9eec89a3381a6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### More information\r\n\r\nSee this page for a step-by-step guide on creating and setting up your own subname registrar: <a href=\"/wrapper/creating-subname-registrar\">Creating a Subname Registrar</a>\r\n\r\nThere is even a set of <a href=\"/wrapper/creating-subname-registrar#reference-implementation\">reference implementation contracts</a> you can use as a starting base! ## Give subnames out to NFT holders ### I want to give subnames out to all of my DAO members / NFT holders!\r\n\r\nSay you own the wrapped name `mycoolnft.eth`, representing a popular NFT project you created. You want to distribute subnames like `6529.mycoolnft.eth` to all holders.\r\n\r\nOne option is to just bulk create the subnames and drop the wrapped NFTs into their wallets. This might be good at least as an initial drop, because then the holders don't need to interact with any contract or spend any gas, you're doing that for them!\r\n\r\nTo create the subnames, you'd use the <a href=\"https://github.com/ensdomains/ens-contracts/tree/master/contracts/wrapper#setsubnodeowner\">setSubnodeOwner</a> or <a href=\"https://github.com/ensdomains/ens-contracts/tree/master/contracts/wrapper#setsubnoderecord\">setSubnodeRecord</a> methods.\r\n\r\nYou must also decide:", "mimetype": "text/plain", "start_char_idx": 7752, "end_char_idx": 8116, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "96cc535f-2a72-4bb5-8ce7-ec2d748ffb3b": {"__data__": {"id_": "96cc535f-2a72-4bb5-8ce7-ec2d748ffb3b", "embedding": null, "metadata": {"file_path": "src/pages/wrapper/usecases.mdx", "file_name": "usecases.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/usecases.mdx", "header_path": "/Name Wrapper Use-Cases\r/Give subnames out to NFT holders\r/", "customer_id": 1, "source_url": "src/pages/wrapper/usecases.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["outside", "thing", "other", "those", "consider", "whether", "holder", "control", "emancipate", "subnames", "corresponding", "completely", "revoke", "always"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "86a114353b34fd2817fae8c83cf36934ba7397a0", "node_type": "4", "metadata": {"file_path": "src/pages/wrapper/usecases.mdx", "file_name": "usecases.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/usecases.mdx"}, "hash": "a2b02ffd72a40ef1cd3c06c6e5c536b777b38c07e78bbf8395d5043943929743", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "61087c45-38ea-4d4b-8d7c-4232d4432564", "node_type": "1", "metadata": {"file_path": "src/pages/wrapper/usecases.mdx", "file_name": "usecases.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/usecases.mdx", "header_path": "/Name Wrapper Use-Cases\r/Give subnames out to NFT holders\r/"}, "hash": "380cea493f704d1eec2879e1c899fc7cfadc0204278e3b27b065bd40097f7cd6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "598b2115-2931-4c58-97cd-3cee5a06e2f6", "node_type": "1", "metadata": {"header_path": "/Name Wrapper Use-Cases\r/Give subnames out to NFT holders\r/"}, "hash": "61f922eb3717a8cb0e6a69dbb02886465a37bcd00669010cb81e768cf777ea2c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### How much control over the subnames do you want to relinquish?\r\n\r\nDo you want to be able to revoke subnames? Or do you want them to be completely outside your control?\r\n\r\nOne thing to consider is whether you want the **current** holder of your NFT to always be able to claim/reclaim the corresponding ENS subname. If so, then you will **not** want to Emancipate those subnames (in other words, do not burn **`PARENT_CANNOT_CONTROL`**).\r\n\r\nIf the subname is Emancipated, then the NFT holder could sell/transfer the NFT but keep the subname (up until the expiry).\r\n\r\nTo make it easy for anyone to claim/reclaim a subname after your initial drop, you can set up a contract for this.", "mimetype": "text/plain", "start_char_idx": 8981, "end_char_idx": 9663, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "598b2115-2931-4c58-97cd-3cee5a06e2f6": {"__data__": {"id_": "598b2115-2931-4c58-97cd-3cee5a06e2f6", "embedding": null, "metadata": {"file_path": "src/pages/wrapper/usecases.mdx", "file_name": "usecases.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/usecases.mdx", "header_path": "/Name Wrapper Use-Cases\r/Give subnames out to NFT holders\r/", "customer_id": 1, "source_url": "src/pages/wrapper/usecases.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["verify", "wrapper", "method", "current", "subname", "owner", "claim", "contract", "setting"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "86a114353b34fd2817fae8c83cf36934ba7397a0", "node_type": "4", "metadata": {"file_path": "src/pages/wrapper/usecases.mdx", "file_name": "usecases.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/usecases.mdx"}, "hash": "a2b02ffd72a40ef1cd3c06c6e5c536b777b38c07e78bbf8395d5043943929743", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "96cc535f-2a72-4bb5-8ce7-ec2d748ffb3b", "node_type": "1", "metadata": {"file_path": "src/pages/wrapper/usecases.mdx", "file_name": "usecases.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/usecases.mdx", "header_path": "/Name Wrapper Use-Cases\r/Give subnames out to NFT holders\r/"}, "hash": "40362e4ea673adf5c83abf85f64a0d9287fc502e25954cc80292fe37d994ce1c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7719744b-b314-47a1-9cf3-fadde3a8ce4e", "node_type": "1", "metadata": {"header_path": "/Name Wrapper Use-Cases\r/Give subnames out to NFT holders\r/"}, "hash": "424c6c59785447cbcc7fbfc16b4ebd6abb81f829a4fb47d60fe89e7da40a2009", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Setting up a subname claim contract\r\n\r\nThe claim method of your contract could:\r\n\r\n1. Call `ownerOf` or `balanceOf` on your NFT contract to get or verify the current owner of the NFT\r\n2. Call `ownerOf` or `balanceOf` on the ENS Name Wrapper contract to get or verify the current owner of the wrapped subname\r\n   - If both owner addresses are the same, just return, nothing to do\r\n3. Call `setSubnodeOwner` or `setSubnodeRecord` on the ENS Name Wrapper:\r\n   - **owner:** The current owner of the NFT\r\n   - **fuses:** What fuses you want to burn (if any) on that subname. If you burn any fuses, you must also set an expiry.\r\n   - **expiry:** When the subname will expire.\r\n\r\nThen, to give that contract access to create subnames on your behalf, you would call `setApprovalForAll` on the Name Wrapper to approve your contract as an operator.\r\n\r\nNow, even if the NFT gets sold / transferred, the new owner will be able to claim their `mycoolnft.eth` subname at any time.\r\n\r\nIn addition, if you expand your NFT collection in the future and there are new owners, then those new owners would be able to claim their subnames as well.\r\n\r\nIf you are creating a new NFT contract, you could even bake this functionality **directly into the NFT contract** too, instead of needing a separate contract! By doing this, you wouldn't need a separate `claim` method either, your NFT contract would just **automatically transfer the wrapped ENS subname** whenever the NFT itself gets transferred!", "mimetype": "text/plain", "start_char_idx": 9667, "end_char_idx": 11147, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7719744b-b314-47a1-9cf3-fadde3a8ce4e": {"__data__": {"id_": "7719744b-b314-47a1-9cf3-fadde3a8ce4e", "embedding": null, "metadata": {"file_path": "src/pages/wrapper/usecases.mdx", "file_name": "usecases.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/usecases.mdx", "header_path": "/Name Wrapper Use-Cases\r/Give subnames out to NFT holders\r/", "customer_id": 1, "source_url": "src/pages/wrapper/usecases.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["certain", "owners", "perks", "giving", "emancipate", "grant", "subnames", "decide", "fuses", "perhaps", "subname", "there", "however", "still", "unreserved"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "86a114353b34fd2817fae8c83cf36934ba7397a0", "node_type": "4", "metadata": {"file_path": "src/pages/wrapper/usecases.mdx", "file_name": "usecases.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/usecases.mdx"}, "hash": "a2b02ffd72a40ef1cd3c06c6e5c536b777b38c07e78bbf8395d5043943929743", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "598b2115-2931-4c58-97cd-3cee5a06e2f6", "node_type": "1", "metadata": {"file_path": "src/pages/wrapper/usecases.mdx", "file_name": "usecases.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/usecases.mdx", "header_path": "/Name Wrapper Use-Cases\r/Give subnames out to NFT holders\r/"}, "hash": "dfd96a3b6d229996ad6b1a487810b7b2152ce33c19fd3cf311200b8a727a3e24", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Giving your subname owners perks\r\n\r\nIf you decide to not Emancipate the subnames that you issue, you _will_ still be able to burn any Parent-Controlled Fuses. There are 13 unreserved parent-controlled fuses that you can use however you wish!\r\n\r\nFor example, perhaps you want to grant on-chain \"perks\" or \"roles\" to certain holders. You would call [setChildFuses](https://github.com/ensdomains/ens-contracts/tree/master/contracts/wrapper#setchildfuses) on the Name Wrapper and pass in the fuses you want to burn, and the expiry.\r\n\r\nThis means that those \"perks\" or \"roles\" can also be time-boxed if you want. Maybe a perk expires in 1 week or something, up to you.\r\n\r\nThere is also the reserved **`CAN_EXTEND_EXPIRY`** parent-controlled fuse. If you burn this, then the subname owner will be able to extend their own expiry whenever they want.", "mimetype": "text/plain", "start_char_idx": 11151, "end_char_idx": 11997, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "aa488d7e-a823-4e17-8c42-aecfe530d58c": {"__data__": {"id_": "aa488d7e-a823-4e17-8c42-aecfe530d58c", "embedding": null, "metadata": {"file_path": "src/public/governance/constitutional-amendment-template.md", "file_name": "constitutional-amendment-template.md", "url": "https://api.github.com/ensdomains/docs/blob/master/src/public/governance/constitutional-amendment-template.md", "header_path": "/", "customer_id": 1, "source_url": "src/public/governance/constitutional-amendment-template.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["title", "description", "abstract", "proposal", "version", "someone", "pending", "short", "terse", "should", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "66aa6f8cc678aadc5a969459f6f9eb7a821c3620", "node_type": "4", "metadata": {"file_path": "src/public/governance/constitutional-amendment-template.md", "file_name": "constitutional-amendment-template.md", "url": "https://api.github.com/ensdomains/docs/blob/master/src/public/governance/constitutional-amendment-template.md"}, "hash": "4dffa13acdc474d2a9463648aa7e54e86d896508bd20775f3505fa709652a959", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8b6a2e33-8339-41ea-addd-f83e63d9118a", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "109840a732a1a68f8f5974c3688ea3b55a59c36138c679f742dec4991c3d9a9f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: A short (1-2 sentence) description of the proposal.\n--- # [Amendment] Proposal Title\n\n| **Status**            | Pending                                      |\n| --------------------- | -------------------------------------------- |\n| **Discussion Thread** | [Discuss](https://discuss.ens.domains/t/...) |\n| **Votes**             | Pending                                      | ## Abstract\n\n<!--\n  Abstract is a multi-sentence (short paragraph) summary.\n  This should be a very terse and human-readable version of the specification section. Someone should be able to read only the abstract\n  to get the gist of what this proposal does.\n-->", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 72, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "dfb36cc8-30a6-4178-a45b-1070d7d82a4e": {"__data__": {"id_": "dfb36cc8-30a6-4178-a45b-1070d7d82a4e", "embedding": null, "metadata": {"file_path": "src/public/governance/constitutional-amendment-template.md", "file_name": "constitutional-amendment-template.md", "url": "https://api.github.com/ensdomains/docs/blob/master/src/public/governance/constitutional-amendment-template.md", "header_path": "/[Amendment] Proposal Title/", "customer_id": 1, "source_url": "src/public/governance/constitutional-amendment-template.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["github", "amending", "detailed", "request", "proposal", "details", "enough", "cover", "describe", "should", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "66aa6f8cc678aadc5a969459f6f9eb7a821c3620", "node_type": "4", "metadata": {"file_path": "src/public/governance/constitutional-amendment-template.md", "file_name": "constitutional-amendment-template.md", "url": "https://api.github.com/ensdomains/docs/blob/master/src/public/governance/constitutional-amendment-template.md"}, "hash": "4dffa13acdc474d2a9463648aa7e54e86d896508bd20775f3505fa709652a959", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4966d179-64ec-4994-bbc7-51e839fa04a3", "node_type": "1", "metadata": {"file_path": "src/public/governance/constitutional-amendment-template.md", "file_name": "constitutional-amendment-template.md", "url": "https://api.github.com/ensdomains/docs/blob/master/src/public/governance/constitutional-amendment-template.md", "header_path": "/[Amendment] Proposal Title/"}, "hash": "f6baba05d7b9ece731e15c21d07bae61a7270a441fabb061e691bd1edc9947ee", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f91bb492-1c24-4910-86ba-e4ade2f3065c", "node_type": "1", "metadata": {"header_path": "/[Amendment] Proposal Title/"}, "hash": "60a29e777dab19000fede7f42a39c45af232d57ce6a03fc8b702319319265348", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\n<!--\n  The specification should describe the proposal in detail. The specification should be detailed enough to cover all the details of the proposal.\n--> ## Pull Request\n\n<!--\n  A link a GitHub pull request amending the constitution.\n--> ---\ndescription: A short (1-2 sentence) description of the proposal.\n--- # [Executable] Proposal Title\n\n| **Status**            | Pending                                      |\n| --------------------- | -------------------------------------------- |\n| **Discussion Thread** | [Discuss](https://discuss.ens.domains/t/...) |\n| **Votes**             | Pending                                      |", "mimetype": "text/plain", "start_char_idx": 660, "end_char_idx": 832, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "87dbb29d-0c4d-44ab-840a-3b64042b01ba": {"__data__": {"id_": "87dbb29d-0c4d-44ab-840a-3b64042b01ba", "embedding": null, "metadata": {"file_path": "src/public/governance/executable-proposal-template.md", "file_name": "executable-proposal-template.md", "url": "https://api.github.com/ensdomains/docs/blob/master/src/public/governance/executable-proposal-template.md", "header_path": "/[Executable] Proposal Title/", "customer_id": 1, "source_url": "src/public/governance/executable-proposal-template.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["abstract", "proposal", "version", "someone", "terse", "describe", "should", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "89ceb70807b763bbcfc5fe74ae2e375f4dc2d782", "node_type": "4", "metadata": {"file_path": "src/public/governance/executable-proposal-template.md", "file_name": "executable-proposal-template.md", "url": "https://api.github.com/ensdomains/docs/blob/master/src/public/governance/executable-proposal-template.md"}, "hash": "4231275463b3f0225658b8bc724f358e79d0dbb6f3a40ff04e1ede893490754f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f1c77cb9-c4d5-478e-a53e-7a3073881585", "node_type": "1", "metadata": {"file_path": "src/public/governance/executable-proposal-template.md", "file_name": "executable-proposal-template.md", "url": "https://api.github.com/ensdomains/docs/blob/master/src/public/governance/executable-proposal-template.md", "header_path": "/"}, "hash": "efe2c9e276dd69fecde6270081733333e5871c8e0e2225098ff24f5c36e77cfe", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9b8ccb41-4823-447b-9208-0adaff36c42e", "node_type": "1", "metadata": {"header_path": "/[Executable] Proposal Title/"}, "hash": "e14d7e93e8d8ea42eaf0bce466e2d84a835cebfe253a4b2fd68aed0628371d72", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Abstract\n\n<!--\n  Abstract is a multi-sentence (short paragraph) summary.\n  This should be a very terse and human-readable version of the specification section. Someone should be able to read only the abstract\n  to get the gist of what this proposal does.\n--> ## Specification\n\n<!--\n  The specification should describe the proposal in detail. The specification should be detailed enough to cover all the details of the proposal.\n--> ## Transactions\n\n<!--\n  The transactions section describes all the calls that should be encoded in the onchain version of this proposal. Use the table below as a starting point.\n-->\n\n<table>\n    <tr>\n        <th>Address</th>\n        <th>Value</th>\n        <th>Function</th>\n        <th>Argument</th>\n        <th>Value</th>\n    </tr>\n    <tr>\n        <td rowspan=2>Address or ENS name of target</td>\n        <td rowspan=2>Value to send (ETH)</td>\n        <td rowspan=2>Function identifier</td>\n        <td>First arg</td>\n        <td>First value</td>\n    </tr>\n    <tr>\n        <td>Second arg</td>\n        <td>Second value</td>\n    </tr>\n</table>", "mimetype": "text/plain", "start_char_idx": 398, "end_char_idx": 659, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b769955d-baa0-4fec-b3e5-49eeca7bbf85": {"__data__": {"id_": "b769955d-baa0-4fec-b3e5-49eeca7bbf85", "embedding": null, "metadata": {"file_path": "src/public/governance/rfp-template.md", "file_name": "rfp-template.md", "url": "https://api.github.com/ensdomains/docs/blob/master/src/public/governance/rfp-template.md", "header_path": "/", "customer_id": 1, "source_url": "src/public/governance/rfp-template.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["describing", "detailed", "level", "criteria", "scope", "description", "template", "winning", "include", "place", "overview", "seeks", "submission", "selection"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1581ee7d39bf9661a367ac9d6b3f81d530b34bee", "node_type": "4", "metadata": {"file_path": "src/public/governance/rfp-template.md", "file_name": "rfp-template.md", "url": "https://api.github.com/ensdomains/docs/blob/master/src/public/governance/rfp-template.md"}, "hash": "9882a23a7d818ac701cb4154293363f59435168b4efe1be951377b5ee27d9043", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "62fdd1a0-9d39-4c07-940c-df7aa83f3ff7", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "a0f4e2ff86c5fc9f9527f9cd735e4775034371150e7bbc08dbb1a21f8ff27541", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: >-\n  A template for DAO RFPs.\n--- ## Overview\n\n<!-- A high level overview describing the need for the RFP and what it seeks to accomplish. --> ## Scope of Work\n\n<!-- A detailed description of the work to be done. --> ## Selection Criteria\n\n<!-- What must a winning submission to this RFP contain? This is the place to include details such as information you want to see in all RFP responses, and required qualifications for the winning bidder. --> ## Timeline\n\n| **Submission Period** | <!-- How long submissions will be open for after the RFP is adopted. This can be as short as a week for small jobs, but may be up to a month for large RFPs. --> |\n| **Approval Period** | <!-- How long it will take for the RFP manager to select a winning bid after the submission period ends. This should be kept as short as possible given feedback from the RFP manager. --> |\n| **Expected Delivery** | <!-- A date or duration for the work to be done. Omitted for RFPs for ongoing services. --> |", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 50, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9354e5ff-e987-479c-88f0-7b599bd17ae2": {"__data__": {"id_": "9354e5ff-e987-479c-88f0-7b599bd17ae2", "embedding": null, "metadata": {"file_path": "src/public/governance/rfp-template.md", "file_name": "rfp-template.md", "url": "https://api.github.com/ensdomains/docs/blob/master/src/public/governance/rfp-template.md", "header_path": "/", "customer_id": 1, "source_url": "src/public/governance/rfp-template.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["typically", "nominate", "single", "group", "person", "stewards", "adopt", "working", "shepherd", "manage", "steward", "agrees", "smaller", "through", "manager"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1581ee7d39bf9661a367ac9d6b3f81d530b34bee", "node_type": "4", "metadata": {"file_path": "src/public/governance/rfp-template.md", "file_name": "rfp-template.md", "url": "https://api.github.com/ensdomains/docs/blob/master/src/public/governance/rfp-template.md"}, "hash": "9882a23a7d818ac701cb4154293363f59435168b4efe1be951377b5ee27d9043", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d0df18f7-3f49-4262-8758-c597c010487e", "node_type": "1", "metadata": {"file_path": "src/public/governance/rfp-template.md", "file_name": "rfp-template.md", "url": "https://api.github.com/ensdomains/docs/blob/master/src/public/governance/rfp-template.md", "header_path": "/"}, "hash": "51697c2178da3f676490642b28ea51e1fa5492675bf0b2052f661ac21f9ada73", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b4691fac-f939-409f-9bd6-830120c82f41", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "1893feb7dfcf6b6c78609c481236e6a00604460e72254d2685252e4bf0229565", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## RFP Manager\n\n<!--\n  Nominate a person or team to manage the RFP. Typically this will be the stewards of the working group who agrees to adopt the RFP and shepherd it through the process. For smaller RFPs a single steward may be nominated.\n--> ## Budget\n\n<!--\n  The maximum budget for this RFP. This may be made up of any asset the DAO or a WG holds. Proposals that are self-funded (for example, a swag store) should instead specify the bounds for the share that a winning bidder may retain.\n--> ---\ndescription: A short (1-2 sentence) description of the proposal.\n---", "mimetype": "text/plain", "start_char_idx": 1005, "end_char_idx": 1250, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "86b24062-b744-46e2-96d2-46d9168454db": {"__data__": {"id_": "86b24062-b744-46e2-96d2-46d9168454db", "embedding": null, "metadata": {"file_path": "src/public/governance/social-proposal-template.md", "file_name": "social-proposal-template.md", "url": "https://api.github.com/ensdomains/docs/blob/master/src/public/governance/social-proposal-template.md", "header_path": "/", "customer_id": 1, "source_url": "src/public/governance/social-proposal-template.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["title", "abstract", "version", "proposal", "someone", "pending", "terse", "should", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "10a75d73e5d8d0e9b104683e6d7bfe09293b5023", "node_type": "4", "metadata": {"file_path": "src/public/governance/social-proposal-template.md", "file_name": "social-proposal-template.md", "url": "https://api.github.com/ensdomains/docs/blob/master/src/public/governance/social-proposal-template.md"}, "hash": "2e270f1b176eb2aab0c13449b50bca7071f62c6840b07f4e3bfa0140ea522455", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f844abff-df22-4707-935a-930cb684c210", "node_type": "1", "metadata": {"file_path": "src/public/governance/social-proposal-template.md", "file_name": "social-proposal-template.md", "url": "https://api.github.com/ensdomains/docs/blob/master/src/public/governance/social-proposal-template.md", "header_path": "/"}, "hash": "f73ab9bc191654ff6d9a8819af7ba82b3a2aa146d355ac9f007f76c14bfd8555", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1b4846d4-93be-4497-9fb6-0511d8130063", "node_type": "1", "metadata": {"header_path": "/[Social] Proposal Title/"}, "hash": "e07f71e4cf5ad512dbac83a0d63e556772ac98e1517d747381e6393b7743d7f9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# [Social] Proposal Title\n\n| **Status**            | Pending                                      |\n| --------------------- | -------------------------------------------- |\n| **Discussion Thread** | [Discuss](https://discuss.ens.domains/t/...) |\n| **Votes**             | Pending                                      | ## Abstract\n\n<!--\n  Abstract is a multi-sentence (short paragraph) summary.\n  This should be a very terse and human-readable version of the specification section. Someone should be able to read only the abstract\n  to get the gist of what this proposal does.\n-->", "mimetype": "text/plain", "start_char_idx": 74, "end_char_idx": 392, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a9281b55-cf8f-4b28-ab11-3e323fd16b5a": {"__data__": {"id_": "a9281b55-cf8f-4b28-ab11-3e323fd16b5a", "embedding": null, "metadata": {"file_path": "src/public/governance/social-proposal-template.md", "file_name": "social-proposal-template.md", "url": "https://api.github.com/ensdomains/docs/blob/master/src/public/governance/social-proposal-template.md", "header_path": "/[Social] Proposal Title/", "customer_id": 1, "source_url": "src/public/governance/social-proposal-template.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["detailed", "proposal", "details", "enough", "cover", "describe", "should", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "10a75d73e5d8d0e9b104683e6d7bfe09293b5023", "node_type": "4", "metadata": {"file_path": "src/public/governance/social-proposal-template.md", "file_name": "social-proposal-template.md", "url": "https://api.github.com/ensdomains/docs/blob/master/src/public/governance/social-proposal-template.md"}, "hash": "2e270f1b176eb2aab0c13449b50bca7071f62c6840b07f4e3bfa0140ea522455", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1b4846d4-93be-4497-9fb6-0511d8130063", "node_type": "1", "metadata": {"file_path": "src/public/governance/social-proposal-template.md", "file_name": "social-proposal-template.md", "url": "https://api.github.com/ensdomains/docs/blob/master/src/public/governance/social-proposal-template.md", "header_path": "/[Social] Proposal Title/"}, "hash": "12febf0a8e3aff5778c0dde07314ada56e27918f4c5d0415f62538842c1947a9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\n<!--\n  The specification should describe the proposal in detail. The specification should be detailed enough to cover all the details of the proposal.\n-->", "mimetype": "text/plain", "start_char_idx": 657, "end_char_idx": 829, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e2acdc8e-31bc-4315-86b2-f4afae560b13": {"__data__": {"id_": "e2acdc8e-31bc-4315-86b2-f4afae560b13", "embedding": null, "metadata": {"file_path": "ensips/1.md", "file_name": "1.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/1.md", "header_path": "/", "customer_id": 1, "source_url": "ensips/1.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["final", "ethereum", "protocol", "abstract", "describes", "proposed", "documentation", "details", "ensip", "flexible", "provides", "resolution", "definition", "EIP-137", "basic"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "256586df8a1aa3c09acfa2292c63735dccd854f5", "node_type": "4", "metadata": {"file_path": "ensips/1.md", "file_name": "1.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/1.md"}, "hash": "7ad6b6f91145d2c6ec6f29f5d156de554017a7f4d9f0aad096d9965e80501f64", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "aab558be-df78-4b5f-ab66-edf5245f5c2f", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "390aa4a3b1dfd86012c39e75d661d53f66842d1a7a64d18b6bf857f5ec29fd83", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: Documentation of the basic ENS protocol (formerly EIP-137)\ncontributors:\n  - nick.eth\nensip:\n  created: '2016-04-04'\n  status: final\nignoredRules: [\"missing:copyright\"]\n--- # ENSIP-1: ENS ## Abstract\n\nThis ENSIP describes the details of the Ethereum Name Service, a proposed protocol and ABI definition that provides flexible resolution of short, human-readable names to service and resource identifiers. This permits users and developers to refer to human-readable and easy to remember names, and permits those names to be updated as necessary when the underlying resource (contract, content-addressed data, etc) changes.\n\nThe goal of domain names is to provide stable, human-readable identifiers that can be used to specify network resources. In this way, users can enter a memorable string, such as 'vitalik.wallet' or 'www.mysite.swarm', and be directed to the appropriate resource. The mapping between names and resources may change over time, so a user may change wallets, a website may change hosts, or a swarm document may be updated to a new version, without the domain name changing. Further, a domain need not specify a single resource; different record types allow the same domain to reference different resources. For instance, a browser may resolve 'mysite.swarm' to the IP address of its server by fetching its A (address) record, while a mail client may resolve the same address to a mail server by fetching its MX (mail exchanger) record.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 189, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1ccb54dc-c127-445d-85c4-5c26372b9516": {"__data__": {"id_": "1ccb54dc-c127-445d-85c4-5c26372b9516", "embedding": null, "metadata": {"file_path": "ensips/1.md", "file_name": "1.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/1.md", "header_path": "/ENSIP-1: ENS/", "customer_id": 1, "source_url": "ensips/1.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ethereum", "several", "global", "motivation", "single", "provide", "limit", "suffer", "resolution", "shortcomings", "their", "namespace", "existing", "basic", "significantly"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "256586df8a1aa3c09acfa2292c63735dccd854f5", "node_type": "4", "metadata": {"file_path": "ensips/1.md", "file_name": "1.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/1.md"}, "hash": "7ad6b6f91145d2c6ec6f29f5d156de554017a7f4d9f0aad096d9965e80501f64", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d9b1e518-7c33-46a7-8519-dac61f450076", "node_type": "1", "metadata": {"file_path": "ensips/1.md", "file_name": "1.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/1.md", "header_path": "/ENSIP-1: ENS/"}, "hash": "b38b82bd359dc6f820f198b110159dcbb710bed1d834a9da34d4d568901e8a1e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "310b95e5-24d6-4990-a813-f2e1eee3a750", "node_type": "1", "metadata": {"header_path": "/ENSIP-1: ENS/"}, "hash": "82571aa6118fedc81110701c86fa12d29a64b366490655ac01bc1530f589fe30", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Motivation\n\nExisting [specifications](https://github.com/ethereum/wiki/wiki/Registrar-ABI) and [implementations](https://ethereum.gitbooks.io/frontier-guide/content/registrar\\_services.html) for name resolution in Ethereum provide basic functionality, but suffer several shortcomings that will significantly limit their long-term usefulness:\n\n* A single global namespace for all names with a single 'centralised' resolver.\n* Limited or no support for delegation and sub-names/sub-domains.\n* Only one record type, and no support for associating multiple copies of a record with a domain.\n* Due to a single global implementation, no support for multiple different name allocation systems.\n* Conflation of responsibilities: Name resolution, registration, and whois information.\n\nUse-cases that these features would permit include:\n\n* Support for subnames/sub-domains - eg, live.mysite.tld and forum.mysite.tld.\n* Multiple services under a single name, such as a DApp hosted in Swarm, a Whisper address, and a mail server.\n* Support for DNS record types, allowing blockchain hosting of 'legacy' names. This would permit an Ethereum client such as Mist to resolve the address of a traditional website, or the mail server for an email address, from a blockchain name.\n* DNS gateways, exposing ENS domains via the Domain Name Service, providing easier means for legacy clients to resolve and connect to blockchain services.\n\nThe first two use-cases, in particular, can be observed everywhere on the present-day internet under DNS, and we believe them to be fundamental features of a name service that will continue to be useful as the Ethereum platform develops and matures.\n\nThe normative parts of this document does not specify an implementation of the proposed system; its purpose is to document a protocol that different resolver implementations can adhere to in order to facilitate consistent name resolution. An appendix provides sample implementations of resolver contracts and libraries, which should be treated as illustrative examples only.\n\nLikewise, this document does not attempt to specify how domains should be registered or updated, or how systems can find the owner responsible for a given domain. Registration is the responsibility of registrars, and is a governance matter that will necessarily vary between top-level domains.\n\nUpdating of domain records can also be handled separately from resolution. Some systems, such as swarm, may require a well defined interface for updating domains, in which event we anticipate the development of a standard for this.", "mimetype": "text/plain", "start_char_idx": 1476, "end_char_idx": 4050, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "310b95e5-24d6-4990-a813-f2e1eee3a750": {"__data__": {"id_": "310b95e5-24d6-4990-a813-f2e1eee3a750", "embedding": null, "metadata": {"file_path": "ensips/1.md", "file_name": "1.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/1.md", "header_path": "/ENSIP-1: ENS/", "customer_id": 1, "source_url": "ensips/1.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["comprises", "single", "registry", "three", "system", "provides", "resolvers", "mapping", "registered", "overview", "registrars", "resolver", "contract", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "256586df8a1aa3c09acfa2292c63735dccd854f5", "node_type": "4", "metadata": {"file_path": "ensips/1.md", "file_name": "1.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/1.md"}, "hash": "7ad6b6f91145d2c6ec6f29f5d156de554017a7f4d9f0aad096d9965e80501f64", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1ccb54dc-c127-445d-85c4-5c26372b9516", "node_type": "1", "metadata": {"file_path": "ensips/1.md", "file_name": "1.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/1.md", "header_path": "/ENSIP-1: ENS/"}, "hash": "a7030de631decb5736ea54b74632d8ee2e217d336323c27d4adb7cd2dfcf233d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e2af0382-10b6-4bc3-bd6c-31a95139fc0c", "node_type": "1", "metadata": {"header_path": "/ENSIP-1: ENS/Specification/"}, "hash": "bb38dd6a526d52595e8ee1ade6ae3bb4013552f11177710c80df43a6346fd286", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification ### Overview\n\nThe ENS system comprises three main parts:\n\n* The ENS registry\n* Resolvers\n* Registrars\n\nThe registry is a single contract that provides a mapping from any registered name to the resolver responsible for it, and permits the owner of a name to set the resolver address, and to create subdomains, potentially with different owners to the parent domain.\n\nResolvers are responsible for performing resource lookups for a name - for instance, returning a contract address, a content hash, or IP address(es) as appropriate. The resolver specification, defined here and extended in other ENSIPs, defines what methods a resolver may implement to support resolving different types of records.\n\nRegistrars are responsible for allocating domain names to users of the system, and are the only entities capable of updating the ENS; the owner of a node in the ENS registry is its registrar. Registrars may be contracts or externally owned accounts, though it is expected that the root and top-level registrars, at a minimum, will be implemented as contracts.\n\nResolving a name in ENS is a two-step process. First, the ENS registry is called with the name to resolve, after hashing it using the procedure described below. If the record exists, the registry returns the address of its resolver. Then, the resolver is called, using the method appropriate to the resource being requested. The resolver then returns the desired result.\n\nFor example, suppose you wish to find the address of the token contract associated with 'beercoin.eth'. First, get the resolver:\n\n```javascript\nvar node = namehash(\"beercoin.eth\");\nvar resolver = ens.resolver(node);\n```\n\nThen, ask the resolver for the address for the contract:\n\n```javascript\nvar address = resolver.addr(node);\n```\n\nBecause the `namehash` procedure depends only on the name itself, this can be precomputed and inserted into a contract, removing the need for string manipulation, and permitting O(1) lookup of ENS records regardless of the number of components in the raw name.", "mimetype": "text/plain", "start_char_idx": 4052, "end_char_idx": 4068, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b4e15559-e1cf-4778-a24b-7c5f3ec0caf8": {"__data__": {"id_": "b4e15559-e1cf-4778-a24b-7c5f3ec0caf8", "embedding": null, "metadata": {"file_path": "ensips/1.md", "file_name": "1.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/1.md", "header_path": "/ENSIP-1: ENS/Specification/", "customer_id": 1, "source_url": "ensips/1.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["valid", "string", "syntax", "consist", "normalised", "conform", "following", "described", "names", "series", "label"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "256586df8a1aa3c09acfa2292c63735dccd854f5", "node_type": "4", "metadata": {"file_path": "ensips/1.md", "file_name": "1.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/1.md"}, "hash": "7ad6b6f91145d2c6ec6f29f5d156de554017a7f4d9f0aad096d9965e80501f64", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e2af0382-10b6-4bc3-bd6c-31a95139fc0c", "node_type": "1", "metadata": {"file_path": "ensips/1.md", "file_name": "1.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/1.md", "header_path": "/ENSIP-1: ENS/Specification/"}, "hash": "c2b0faefb85e5f525fec7140d07aba8d261cd665db407367c50e17169980004b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0a661824-ee26-43bb-adf7-8452f63ab67e", "node_type": "1", "metadata": {"header_path": "/ENSIP-1: ENS/Specification/"}, "hash": "9bce4ecc979c74ef18cd3ae2c992ae419a0848dc2bd5f96c2aa10786e45a6840", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Name Syntax\n\nENS names must conform to the following syntax:\n\n```go\n<domain> ::= <label> | <domain> \".\" <label>\n<label> ::= any valid string label per [UTS46](https://unicode.org/reports/tr46/)\n```\n\nIn short, names consist of a series of dot-separated labels. Each label must be a valid normalised label as described in [UTS46](https://unicode.org/reports/tr46/) with the options `transitional=false` and `useSTD3AsciiRules=true`. For Javascript implementations, a [library](https://www.npmjs.com/package/idna-uts46) is available that normalises and checks names.\n\nNote that while upper and lower case letters are allowed in names, the UTS46 normalisation process case-folds labels before hashing them, so two names with different case but identical spelling will produce the same namehash.\n\nLabels and domains may be of any length, but for compatibility with legacy DNS, it is recommended that labels be restricted to no more than 64 characters each, and complete ENS names to no more than 255 characters. For the same reason, it is recommended that labels do not start or end with hyphens, or start with digits.", "mimetype": "text/plain", "start_char_idx": 6096, "end_char_idx": 7213, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0a661824-ee26-43bb-adf7-8452f63ab67e": {"__data__": {"id_": "0a661824-ee26-43bb-adf7-8452f63ab67e", "embedding": null, "metadata": {"file_path": "ensips/1.md", "file_name": "1.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/1.md", "header_path": "/ENSIP-1: ENS/Specification/", "customer_id": 1, "source_url": "ensips/1.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["recursively", "valid", "components", "string", "algorithm", "hashed", "hashes", "namehash", "being", "using", "input", "before", "producing", "names"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "256586df8a1aa3c09acfa2292c63735dccd854f5", "node_type": "4", "metadata": {"file_path": "ensips/1.md", "file_name": "1.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/1.md"}, "hash": "7ad6b6f91145d2c6ec6f29f5d156de554017a7f4d9f0aad096d9965e80501f64", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b4e15559-e1cf-4778-a24b-7c5f3ec0caf8", "node_type": "1", "metadata": {"file_path": "ensips/1.md", "file_name": "1.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/1.md", "header_path": "/ENSIP-1: ENS/Specification/"}, "hash": "b331d5e2a62883040986dce4aaa6a2ea0a12b5f6b5d449fc12cac7a86da24a7c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b957cb39-065b-42a2-b7cd-815b6abda9a7", "node_type": "1", "metadata": {"header_path": "/ENSIP-1: ENS/Specification/"}, "hash": "8291c3ede7494ccbe3aff17d11faf45604a6caf5eefa01a77d6ee29a3b7bcf6d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### namehash algorithm\n\nBefore being used in ENS, names are hashed using the 'namehash' algorithm. This algorithm recursively hashes components of the name, producing a unique, fixed-length string for any valid input domain. The output of namehash is referred to as a 'node'.\n\nPseudocode for the namehash algorithm is as follows:\n\n```go\ndef namehash(name):\n  if name == '':\n    return '\\0' * 32\n  else:\n    label, _, remainder = name.partition('.')\n    return sha3(namehash(remainder) + sha3(label))\n```\n\nInformally, the name is split into labels, each label is hashed. Then, starting with the last component, the previous output is concatenated with the label hash and hashed again. The first component is concatenated with 32 '0' bytes. Thus, 'mysite.swarm' is processed as follows:\n\n```javascript\nnode = '\\0' * 32\nnode = sha3(node + sha3('swarm'))\nnode = sha3(node + sha3('mysite'))\n```\n\nImplementations should conform to the following test vectors for namehash:\n\n```javascript\nnamehash('') = 0x0000000000000000000000000000000000000000000000000000000000000000\nnamehash('eth') = 0x93cdeb708b7545dc668eb9280176169d1c33cfd8ed6f04690a0bcc88a93fc4ae\nnamehash('foo.eth') = 0xde9b09fd7c5f901e23a3f19fecc54828e9c848539801e86591bd9801b019f84f\n```", "mimetype": "text/plain", "start_char_idx": 7215, "end_char_idx": 8455, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b957cb39-065b-42a2-b7cd-815b6abda9a7": {"__data__": {"id_": "b957cb39-065b-42a2-b7cd-815b6abda9a7", "embedding": null, "metadata": {"file_path": "ensips/1.md", "file_name": "1.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/1.md", "header_path": "/ENSIP-1: ENS/Specification/", "customer_id": 1, "source_url": "ensips/1.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["specified", "returns", "registry", "following", "exposes", "owner", "constant", "contract", "function", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "256586df8a1aa3c09acfa2292c63735dccd854f5", "node_type": "4", "metadata": {"file_path": "ensips/1.md", "file_name": "1.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/1.md"}, "hash": "7ad6b6f91145d2c6ec6f29f5d156de554017a7f4d9f0aad096d9965e80501f64", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0a661824-ee26-43bb-adf7-8452f63ab67e", "node_type": "1", "metadata": {"file_path": "ensips/1.md", "file_name": "1.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/1.md", "header_path": "/ENSIP-1: ENS/Specification/"}, "hash": "dacf3eb73a74ee714d3b7c0610c9c98fb833a88b5ef9833b608dbf2dfaf54c9a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5950ef8f-f7b9-48fc-ae1e-c71dcc3a9bfb", "node_type": "1", "metadata": {"header_path": "/ENSIP-1: ENS/Specification/"}, "hash": "771a930a6539ac9bd05754b8884b7ec61ab480b3cb5bc6ef481c6ab97bf9bdf4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Registry specification\n\nThe ENS registry contract exposes the following functions:\n\n```solidity\nfunction owner(bytes32 node) constant returns (address);\n```\n\nReturns the owner (registrar) of the specified node.\n\n```solidity\nfunction resolver(bytes32 node) constant returns (address);\n```\n\nReturns the resolver for the specified node.\n\n```solidity\nfunction ttl(bytes32 node) constant returns (uint64);\n```\n\nReturns the time-to-live (TTL) of the node; that is, the maximum duration for which a node's information may be cached.\n\n```solidity\nfunction setOwner(bytes32 node, address owner);\n```\n\nTransfers ownership of a node to another registrar. This function may only be called by the current owner of `node`. A successful call to this function logs the event `Transfer(bytes32 indexed, address)`.\n\n```solidity\nfunction setSubnodeOwner(bytes32 node, bytes32 label, address owner);\n```\n\nCreates a new node, `sha3(node, label)` and sets its owner to `owner`, or updates the node with a new owner if it already exists. This function may only be called by the current owner of `node`. A successful call to this function logs the event `NewOwner(bytes32 indexed, bytes32 indexed, address)`.\n\n```solidity\nfunction setResolver(bytes32 node, address resolver);\n```\n\nSets the resolver address for `node`. This function may only be called by the owner of `node`. A successful call to this function logs the event `NewResolver(bytes32 indexed, address)`.\n\n```solidity\nfunction setTTL(bytes32 node, uint64 ttl);\n```\n\nSets the TTL for a node. A node's TTL applies to the 'owner' and 'resolver' records in the registry, as well as to any information returned by the associated resolver.", "mimetype": "text/plain", "start_char_idx": 8457, "end_char_idx": 10132, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5950ef8f-f7b9-48fc-ae1e-c71dcc3a9bfb": {"__data__": {"id_": "5950ef8f-f7b9-48fc-ae1e-c71dcc3a9bfb", "embedding": null, "metadata": {"file_path": "ensips/1.md", "file_name": "1.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/1.md", "header_path": "/ENSIP-1: ENS/Specification/", "customer_id": 1, "source_url": "ensips/1.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["requires", "specified", "implement", "types", "record", "subset", "resolvers", "resolver", "where", "provide", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "256586df8a1aa3c09acfa2292c63735dccd854f5", "node_type": "4", "metadata": {"file_path": "ensips/1.md", "file_name": "1.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/1.md"}, "hash": "7ad6b6f91145d2c6ec6f29f5d156de554017a7f4d9f0aad096d9965e80501f64", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b957cb39-065b-42a2-b7cd-815b6abda9a7", "node_type": "1", "metadata": {"file_path": "ensips/1.md", "file_name": "1.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/1.md", "header_path": "/ENSIP-1: ENS/Specification/"}, "hash": "0e85e0a3857e4cd3a0bc4c2af537dc8ffe5985d25a79cb1215bb652be4009af7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c1d53f88-c90a-45b4-9622-50a914687a47", "node_type": "1", "metadata": {"header_path": "/ENSIP-1: ENS/Specification/Resolver specification/"}, "hash": "2aa0b3a4e0713a39a92dd721803887bcb71bae4a7b5bf5a5e19d7fc632ad17b3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Resolver specification\n\nResolvers may implement any subset of the record types specified here. Where a record types specification requires a resolver to provide multiple functions, the resolver MUST implement either all or none of them. Resolvers MUST specify a fallback function that throws.\n\nResolvers have one mandatory function:\n\n```solidity\nfunction supportsInterface(bytes4 interfaceID) constant returns (bool)\n```\n\nThe `supportsInterface` function is documented in ENSIP-165, and returns true if the resolver implements the interface specified by the provided 4 byte identifier. An interface identifier consists of the XOR of the function signature hashes of the functions provided by that interface; in the degenerate case of single-function interfaces, it is simply equal to the signature hash of that function. If a resolver returns `true` for `supportsInterface()`, it must implement the functions specified in that interface.\n\n`supportsInterface` must always return true for `0x01ffc9a7`, which is the interface ID of `supportsInterface` itself.\n\nCurrently standardised resolver interfaces are specified in the table below.\n\nThe following interfaces are defined:\n\n| Interface name        | Interface hash | Specification                                       |\n| --------------------- | -------------- | --------------------------------------------------- |\n| `addr`                | 0x3b3b57de     | Contract address                                    |\n| `name`                | 0x691f3431     | [ENSIP-3](ensip-3-reverse-resolution.md)            |\n| `ABI`                 | 0x2203ab56     | [ENSIP-4](ensip-4-support-for-contract-abis.md)     |\n| text                  | 0x59d1d43c     | [ENSIP-5](ensip-5-text-records.md)                  |\n| contenthash           | 0xbc1c58d1     | [ENSIP-7](ensip-7-contenthash-field.md)             |\n| interfaceImplementer  | 0xb8f2bbb4     | [ENSIP-8](ensip-8-interface-discovery.md)           |\n| addr(bytes32,uint256) | 0xf1cb7e06     | [ENSIP-9](ensip-9-multichain-address-resolution.md) |\n\nENSIPs may define new interfaces to be added to this registry.", "mimetype": "text/plain", "start_char_idx": 10134, "end_char_idx": 12250, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c1d53f88-c90a-45b4-9622-50a914687a47": {"__data__": {"id_": "c1d53f88-c90a-45b4-9622-50a914687a47", "embedding": null, "metadata": {"file_path": "ensips/1.md", "file_name": "1.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/1.md", "header_path": "/ENSIP-1: ENS/Specification/Resolver specification/", "customer_id": 1, "source_url": "ensips/1.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["wishing", "provide", "address", "returns", "following", "interface", "resolvers", "support", "constant", "resolver", "contract", "function", "resources"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "256586df8a1aa3c09acfa2292c63735dccd854f5", "node_type": "4", "metadata": {"file_path": "ensips/1.md", "file_name": "1.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/1.md"}, "hash": "7ad6b6f91145d2c6ec6f29f5d156de554017a7f4d9f0aad096d9965e80501f64", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5950ef8f-f7b9-48fc-ae1e-c71dcc3a9bfb", "node_type": "1", "metadata": {"file_path": "ensips/1.md", "file_name": "1.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/1.md", "header_path": "/ENSIP-1: ENS/Specification/"}, "hash": "4a7e5d75db83f904328342409b03f3c12c722ee3ecea07c66cc0203fe521d83f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "df26ab01-fa26-423c-86c3-5249d1249e88", "node_type": "1", "metadata": {"header_path": "/ENSIP-1: ENS/"}, "hash": "a8c7a2f565c826b2eef2e609f9e692868bb5361eb12da41df17bde98a5d46fb2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "#### Contract Address Interface <a href=\"#addr\" id=\"addr\"></a>\n\nResolvers wishing to support contract address resources must provide the following function:\n\n```solidity\nfunction addr(bytes32 node) constant returns (address);\n```\n\nIf the resolver supports `addr` lookups but the requested node does not have an addr record, the resolver MUST return the zero address.\n\nClients resolving the `addr` record MUST check for a zero return value, and treat this in the same manner as a name that does not have a resolver specified - that is, refuse to send funds to or interact with the address. Failure to do this can result in users accidentally sending funds to the 0 address.\n\nChanges to an address MUST trigger the following event:\n\n```solidity\nevent AddrChanged(bytes32 indexed node, address a);\n```", "mimetype": "text/plain", "start_char_idx": 12252, "end_char_idx": 13050, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "df26ab01-fa26-423c-86c3-5249d1249e88": {"__data__": {"id_": "df26ab01-fa26-423c-86c3-5249d1249e88", "embedding": null, "metadata": {"file_path": "ensips/1.md", "file_name": "1.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/1.md", "header_path": "/ENSIP-1: ENS/", "customer_id": 1, "source_url": "ensips/1.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["uint64", "indexed", "struct", "address", "record", "event", "registry", "appendix", "bytes32", "implementation", "contract"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "256586df8a1aa3c09acfa2292c63735dccd854f5", "node_type": "4", "metadata": {"file_path": "ensips/1.md", "file_name": "1.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/1.md"}, "hash": "7ad6b6f91145d2c6ec6f29f5d156de554017a7f4d9f0aad096d9965e80501f64", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c1d53f88-c90a-45b4-9622-50a914687a47", "node_type": "1", "metadata": {"file_path": "ensips/1.md", "file_name": "1.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/1.md", "header_path": "/ENSIP-1: ENS/Specification/Resolver specification/"}, "hash": "af08e1ecf40e17145e64139313ce6cee259e2c75190d2de6d0721e4386b7273f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8d6ff66b-dc81-4444-90c4-d5380b061d04", "node_type": "1", "metadata": {"header_path": "/ENSIP-1: ENS/"}, "hash": "19f77736b005b4fe7b3a6958946d91226dfccdd16bc2cb1ecdc619215b54b867", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Appendix A: Registry Implementation\n\n```solidity\ncontract ENS {\n    struct Record {\n        address owner;\n        address resolver;\n        uint64 ttl;\n    }\n\n    mapping(bytes32=>Record) records;\n\n    event NewOwner(bytes32 indexed node, bytes32 indexed label, address owner);\n    event Transfer(bytes32 indexed node, address owner);\n    event NewResolver(bytes32 indexed node, address resolver);\n\n    modifier only_owner(bytes32 node) {\n        if(records[node].owner != msg.sender) throw;\n        _\n    }\n\n    function ENS(address owner) {\n        records[0].owner = owner;\n    }\n\n    function owner(bytes32 node) constant returns (address) {\n        return records[node].owner;\n    }\n\n    function resolver(bytes32 node) constant returns (address) {\n        return records[node].resolver;\n    }\n\n    function ttl(bytes32 node) constant returns (uint64) {\n        return records[node].ttl;\n    }\n\n    function setOwner(bytes32 node, address owner) only_owner(node) {\n        Transfer(node, owner);\n        records[node].owner = owner;\n    }\n\n    function setSubnodeOwner(bytes32 node, bytes32 label, address owner) only_owner(node) {\n        var subnode = sha3(node, label);\n        NewOwner(node, label, owner);\n        records[subnode].owner = owner;\n    }\n\n    function setResolver(bytes32 node, address resolver) only_owner(node) {\n        NewResolver(node, resolver);\n        records[node].resolver = resolver;\n    }\n\n    function setTTL(bytes32 node, uint64 ttl) only_owner(node) {\n        NewTTL(node, ttl);\n        records[node].ttl = ttl;\n    }\n}\n```", "mimetype": "text/plain", "start_char_idx": 13052, "end_char_idx": 14618, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8d6ff66b-dc81-4444-90c4-d5380b061d04": {"__data__": {"id_": "8d6ff66b-dc81-4444-90c4-d5380b061d04", "embedding": null, "metadata": {"file_path": "ensips/1.md", "file_name": "1.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/1.md", "header_path": "/ENSIP-1: ENS/", "customer_id": 1, "source_url": "ensips/1.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["implementing", "address", "implementations", "appendix", "possible", "simplest", "resolver", "contract", "resource", "sample"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "256586df8a1aa3c09acfa2292c63735dccd854f5", "node_type": "4", "metadata": {"file_path": "ensips/1.md", "file_name": "1.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/1.md"}, "hash": "7ad6b6f91145d2c6ec6f29f5d156de554017a7f4d9f0aad096d9965e80501f64", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "df26ab01-fa26-423c-86c3-5249d1249e88", "node_type": "1", "metadata": {"file_path": "ensips/1.md", "file_name": "1.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/1.md", "header_path": "/ENSIP-1: ENS/"}, "hash": "69d43777fe25a9ee49d34d96f5eeb70c2f0ffaaf442b495c7444f39491bb686d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "23e5cfa5-a82c-472c-b074-8baa5790fa0c", "node_type": "1", "metadata": {"header_path": "/ENSIP-1: ENS/Appendix B: Sample Resolver Implementations/"}, "hash": "5cecb31aa65d19cccd3faff230016997b98d12fa4632aedf4ab783cad9e97091", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Appendix B: Sample Resolver Implementations #### Built-in resolver\n\nThe simplest possible resolver is a contract that acts as its own name resolver by implementing the contract address resource profile:\n\n```solidity\ncontract DoSomethingUseful {\n    // Other code\n\n    function addr(bytes32 node) constant returns (address) {\n        return this;\n    }\n\n    function supportsInterface(bytes4 interfaceID) constant returns (bool) {\n        return interfaceID == 0x3b3b57de || interfaceID == 0x01ffc9a7;\n    }\n\n    function() {\n        throw;\n    }\n}\n```\n\nSuch a contract can be inserted directly into the ENS registry, eliminating the need for a separate resolver contract in simple use-cases. However, the requirement to 'throw' on unknown function calls may interfere with normal operation of some types of contract.", "mimetype": "text/plain", "start_char_idx": 14620, "end_char_idx": 14666, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f1e811fb-4614-49e1-aed0-868e5c8efc52": {"__data__": {"id_": "f1e811fb-4614-49e1-aed0-868e5c8efc52", "embedding": null, "metadata": {"file_path": "ensips/1.md", "file_name": "1.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/1.md", "header_path": "/ENSIP-1: ENS/Appendix B: Sample Resolver Implementations/", "customer_id": 1, "source_url": "ensips/1.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["allows", "standalone", "indexed", "address", "event", "update", "owner", "implements", "resolver", "contract", "basic"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "256586df8a1aa3c09acfa2292c63735dccd854f5", "node_type": "4", "metadata": {"file_path": "ensips/1.md", "file_name": "1.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/1.md"}, "hash": "7ad6b6f91145d2c6ec6f29f5d156de554017a7f4d9f0aad096d9965e80501f64", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "23e5cfa5-a82c-472c-b074-8baa5790fa0c", "node_type": "1", "metadata": {"file_path": "ensips/1.md", "file_name": "1.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/1.md", "header_path": "/ENSIP-1: ENS/Appendix B: Sample Resolver Implementations/"}, "hash": "f13db644360929e7fabe021b91b6c4183feb1093fcf89b91c9e2cbed8526e410", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9e03292a-1c81-43a8-a3a9-66022aba8b89", "node_type": "1", "metadata": {"header_path": "/ENSIP-1: ENS/Appendix B: Sample Resolver Implementations/"}, "hash": "a7fed1fb2a2822d977aa45e5246895df375b4f382cf920632b78213c5e6c32c4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "#### Standalone resolver\n\nA basic resolver that implements the contract address profile, and allows only its owner to update records:\n\n```solidity\ncontract Resolver {\n    event AddrChanged(bytes32 indexed node, address a);\n\n    address owner;\n    mapping(bytes32=>address) addresses;\n\n    modifier only_owner() {\n        if(msg.sender != owner) throw;\n        _\n    }\n\n    function Resolver() {\n        owner = msg.sender;\n    }\n\n    function addr(bytes32 node) constant returns(address) {\n        return addresses[node];    \n    }\n\n    function setAddr(bytes32 node, address addr) only_owner {\n        addresses[node] = addr;\n        AddrChanged(node, addr);\n    }\n\n    function supportsInterface(bytes4 interfaceID) constant returns (bool) {\n        return interfaceID == 0x3b3b57de || interfaceID == 0x01ffc9a7;\n    }\n\n    function() {\n        throw;\n    }\n}\n```\n\nAfter deploying this contract, use it by updating the ENS registry to reference this contract for a name, then calling `setAddr()` with the same node to set the contract address it will resolve to.", "mimetype": "text/plain", "start_char_idx": 15442, "end_char_idx": 16506, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9e03292a-1c81-43a8-a3a9-66022aba8b89": {"__data__": {"id_": "9e03292a-1c81-43a8-a3a9-66022aba8b89", "embedding": null, "metadata": {"file_path": "ensips/1.md", "file_name": "1.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/1.md", "header_path": "/ENSIP-1: ENS/Appendix B: Sample Resolver Implementations/", "customer_id": 1, "source_url": "ensips/1.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["publicresolver", "determine", "address", "allowed", "registry", "public", "supports", "update", "similar", "resolver", "contract", "should"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "256586df8a1aa3c09acfa2292c63735dccd854f5", "node_type": "4", "metadata": {"file_path": "ensips/1.md", "file_name": "1.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/1.md"}, "hash": "7ad6b6f91145d2c6ec6f29f5d156de554017a7f4d9f0aad096d9965e80501f64", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f1e811fb-4614-49e1-aed0-868e5c8efc52", "node_type": "1", "metadata": {"file_path": "ensips/1.md", "file_name": "1.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/1.md", "header_path": "/ENSIP-1: ENS/Appendix B: Sample Resolver Implementations/"}, "hash": "a72ee0c30917ff47839388fb2bcf38cb372110a0096d8037094d9146b449d84a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3db97770-b3da-4914-8b60-8f388e1ac8ca", "node_type": "1", "metadata": {"header_path": "/ENSIP-1: ENS/"}, "hash": "387cb5208abafe5e4bf5b7e68940a7f121e9a29e38e3839b4d05e85d28249ca7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "#### Public resolver\n\nSimilar to the resolver above, this contract only supports the contract address profile, but uses the ENS registry to determine who should be allowed to update entries:\n\n```solidity\ncontract PublicResolver {\n    event AddrChanged(bytes32 indexed node, address a);\n    event ContentChanged(bytes32 indexed node, bytes32 hash);\n\n    ENS ens;\n    mapping(bytes32=>address) addresses;\n\n    modifier only_owner(bytes32 node) {\n        if(ens.owner(node) != msg.sender) throw;\n        _\n    }\n\n    function PublicResolver(address ensAddr) {\n        ens = ENS(ensAddr);\n    }\n\n    function addr(bytes32 node) constant returns (address ret) {\n        ret = addresses[node];\n    }\n\n    function setAddr(bytes32 node, address addr) only_owner(node) {\n        addresses[node] = addr;\n        AddrChanged(node, addr);\n    }\n\n    function supportsInterface(bytes4 interfaceID) constant returns (bool) {\n        return interfaceID == 0x3b3b57de || interfaceID == 0x01ffc9a7;\n    }\n\n    function() {\n        throw;\n    }\n}\n```", "mimetype": "text/plain", "start_char_idx": 16508, "end_char_idx": 17541, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3db97770-b3da-4914-8b60-8f388e1ac8ca": {"__data__": {"id_": "3db97770-b3da-4914-8b60-8f388e1ac8ca", "embedding": null, "metadata": {"file_path": "ensips/1.md", "file_name": "1.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/1.md", "header_path": "/ENSIP-1: ENS/", "customer_id": 1, "source_url": "ensips/1.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["allows", "registrar", "request", "first", "implementation", "function", "fifsregistrar", "appendix", "register", "users", "bytes32", "contract", "names", "sample"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "256586df8a1aa3c09acfa2292c63735dccd854f5", "node_type": "4", "metadata": {"file_path": "ensips/1.md", "file_name": "1.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/1.md"}, "hash": "7ad6b6f91145d2c6ec6f29f5d156de554017a7f4d9f0aad096d9965e80501f64", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9e03292a-1c81-43a8-a3a9-66022aba8b89", "node_type": "1", "metadata": {"file_path": "ensips/1.md", "file_name": "1.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/1.md", "header_path": "/ENSIP-1: ENS/Appendix B: Sample Resolver Implementations/"}, "hash": "7ba9ce51d442e9796737cb7bc8100e17708ac1d2f6aac050046b2e5cad045b0b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Appendix C: Sample Registrar Implementation\n\nThis registrar allows users to register names at no cost if they are the first to request them.\n\n```solidity\ncontract FIFSRegistrar {\n    ENS ens;\n    bytes32 rootNode;\n\n    function FIFSRegistrar(address ensAddr, bytes32 node) {\n        ens = ENS(ensAddr);\n        rootNode = node;\n    }\n\n    function register(bytes32 subnode, address owner) {\n        var node = sha3(rootNode, subnode);\n        var currentOwner = ens.owner(node);\n        if(currentOwner != 0 && currentOwner != msg.sender)\n            throw;\n\n        ens.setSubnodeOwner(rootNode, subnode, owner);\n    }\n}\n```", "mimetype": "text/plain", "start_char_idx": 17543, "end_char_idx": 18171, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "19af9096-f4bc-4d29-80ea-84e5fff6b530": {"__data__": {"id_": "19af9096-f4bc-4d29-80ea-84e5fff6b530", "embedding": null, "metadata": {"file_path": "ensips/10.md", "file_name": "10.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/10.md", "header_path": "/", "customer_id": 1, "source_url": "ensips/10.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["mechanism", "wildcard", "EIP-2544", "draft", "resolution", "provides", "support", "names"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6f3132a6cece86b6e85dd51fe358d6e6a38d7ee7", "node_type": "4", "metadata": {"file_path": "ensips/10.md", "file_name": "10.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/10.md"}, "hash": "d2461737c2cbaf332aff5cc5f5b400d19f4355bd304e2bea08c926595c467015", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "57564a2e-aa5c-4424-83f8-3cbcd034fbdd", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "55aa05bdf22faae2e6fd8103efa7c458e0afc2d254e823629ff86730aaa7c51a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: Provides a mechanism to support wildcard resolution of ENS names (formerly EIP-2544).\ncontributors:\n  - nick.eth\n  - 0age\nensip:\n  created: 2020-02-28\n  status: draft\n--- # ENSIP-10: Wildcard Resolution\n\nProvides a mechanism to support wildcard resolution of ENS names (formerly [EIP-2544](https://eips.ethereum.org/EIPS/eip-2544)). ## Abstract\n\nThe Ethereum Name Service Specification (ENSIP-1) establishes a two-step name resolution process. First, an ENS client performs the namehash algorithm on the name to determine the associated \"node\", and supplies that node to the ENS Registry contract to determine the resolver. Then, if a resolver has been set on the Registry, the client supplies that same node to the resolver contract, which will return the associated address or other record.\n\nAs currently specified, this process terminates if a resolver is not set on the ENS Registry for a given node. This ENSIP changes the name resolution process by adding an additional step if a resolver is not set for a domain. This step strips out the leftmost label from the name, derives the node of the new fragment, and supplies that node to the ENS Registry. If a resolver is located for that node, the client supplies the original, complete node to that resolver contract to derive the relevant records. This step is repeated until a node with a resolver is found.\n\nFurther, this specification defines a new way for resolvers to resolve names, using a unified `resolve()` method that permits more flexible handling of name resolution.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 187, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f331e0af-1164-4e54-a308-69512875a6f0": {"__data__": {"id_": "f331e0af-1164-4e54-a308-69512875a6f0", "embedding": null, "metadata": {"file_path": "ensips/10.md", "file_name": "10.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/10.md", "header_path": "/ENSIP-10: Wildcard Resolution/", "customer_id": 1, "source_url": "ensips/10.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["issue", "expressed", "motivation", "parent", "subdomains", "applications", "desire", "shared", "dapps", "users", "their", "custom", "doing", "wallet", "names"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6f3132a6cece86b6e85dd51fe358d6e6a38d7ee7", "node_type": "4", "metadata": {"file_path": "ensips/10.md", "file_name": "10.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/10.md"}, "hash": "d2461737c2cbaf332aff5cc5f5b400d19f4355bd304e2bea08c926595c467015", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bb81b7a9-cd4d-41d3-b003-2dcd98fb26de", "node_type": "1", "metadata": {"file_path": "ensips/10.md", "file_name": "10.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/10.md", "header_path": "/ENSIP-10: Wildcard Resolution/"}, "hash": "08c01a3315a5c052ce8d4097abc9f265888972b655ac39a80a6855474a833dd2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "739d7393-1d00-4cae-9437-a9614910e2a8", "node_type": "1", "metadata": {"header_path": "/ENSIP-10: Wildcard Resolution/"}, "hash": "a108e93c2c47b73da5ef047126c0443a630921177c82e14afa29f0d38963049d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Motivation\n\nMany applications such as wallet providers, exchanges, and dapps have expressed a desire to issue ENS names for their users via custom subdomains on a shared parent domain. However, the cost of doing so is currently prohibitive for large user bases, as a distinct record must be set on the ENS Registry for each subdomain.\n\nFurthermore, users cannot immediately utilize these subdomains upon account creation, as the transaction to assign a resolver for the node of the subdomain must first be submitted and mined on-chain. This adds unnecessary friction when onboarding new users, who coincidentally would often benefit greatly from the usability improvements afforded by an ENS name.\n\nEnabling wildcard support allows for the design of more advanced resolvers that deterministically generate addresses and other records for unassigned subdomains. The generated addresses could map to counterfactual contract deployment addresses (i.e. `CREATE2` addresses), to designated \"fallback\" addresses, or other schemes. Additionally, individual resolvers would still be assignable to any given subdomain, which would supersede the wildcard resolution using the parent resolver.\n\nAnother critical motivation with this standard is to enable wildcard resolution in a backwards-compatible fashion. It does not require modifying the current ENS Registry contract or any existing resolvers, and continues to support existing ENS records \u2014 legacy ENS clients would simply fail to resolve wildcard records.", "mimetype": "text/plain", "start_char_idx": 1554, "end_char_idx": 3060, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "739d7393-1d00-4cae-9437-a9614910e2a8": {"__data__": {"id_": "739d7393-1d00-4cae-9437-a9614910e2a8", "embedding": null, "metadata": {"file_path": "ensips/10.md", "file_name": "10.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/10.md", "header_path": "/ENSIP-10: Wildcard Resolution/", "customer_id": 1, "source_url": "ensips/10.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["interpreted", "algorithm", "document", "specified", "limit", "defined", "described", "words", "specification", "there", "encoding", "exception", "names", "process", "section"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6f3132a6cece86b6e85dd51fe358d6e6a38d7ee7", "node_type": "4", "metadata": {"file_path": "ensips/10.md", "file_name": "10.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/10.md"}, "hash": "d2461737c2cbaf332aff5cc5f5b400d19f4355bd304e2bea08c926595c467015", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f331e0af-1164-4e54-a308-69512875a6f0", "node_type": "1", "metadata": {"file_path": "ensips/10.md", "file_name": "10.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/10.md", "header_path": "/ENSIP-10: Wildcard Resolution/"}, "hash": "45b27e60654eb9f4a6247b5fb756c0b9ff71cab13151123d2f889c9b3c9ebf4f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "219871bf-1cf9-4c54-b9ca-472ec7b0c759", "node_type": "1", "metadata": {"header_path": "/ENSIP-10: Wildcard Resolution/Specification/"}, "hash": "fe555f189036bc643215eaa085ae1af47a850ebbeaa9b6344b07ef4f7dbd5164", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\nThe key words \u201cMUST\u201d, \u201cMUST NOT\u201d, \u201cREQUIRED\u201d, \u201cSHALL\u201d, \u201cSHALL NOT\u201d, \u201cSHOULD\u201d, \u201cSHOULD NOT\u201d, \u201cRECOMMENDED\u201d, \u201cMAY\u201d, and \u201cOPTIONAL\u201d in this document are to be interpreted as described in RFC 2119.\n\nLet:\n\n* `namehash` be the algorithm defined in ENSIP-1.\n* `dnsencode` be the process for encoding DNS names specified in section 3.1 of RFC1035, with the exception that there is no limit on the total length of the encoded name. The empty string is encoded identically to the name '.', as a single 0-octet.\n* `parent` be a function that removes the first label from a name (eg, `parent('foo.eth') = 'eth'`). `parent('tld')` is defined as the empty string ''.\n* `ens` is the ENS registry contract for the current network.\n\nENSIP-10-compliant ENS resolvers MAY implement the following function interface:\n\n```\ninterface ExtendedResolver {\n    function resolve(bytes calldata name, bytes calldata data) external view returns(bytes);\n}\n```\n\nIf a resolver implements this function, it MUST return true when `supportsInterface()` is called on it with the interface's ID, `0x9061b923`.\n\nENS clients will call `resolve` with the DNS-encoded name to resolve and the encoded calldata for a resolver function (as specified in ENSIP-1 and elsewhere); the function MUST either return valid return data for that function, or revert if it is not supported.\n\nENSIP-10-compliant ENS clients MUST perform the following procedure when determining the resolver for a given name:\n\n1. Set `currentname = name`\n2. Set `resolver = ens.resolver(namehash(currentname))`\n3. If `resolver` is not the zero address, halt and return `resolver`.\n4. If `currentname` is the empty name ('' or '.'), halt and return null.\n5. Otherwise, set `currentname = parent(currentname)` and go to 2.\n\nIf the procedure above returns null, name resolution MUST terminate unsuccessfully. Otherwise, ENSIP-10-compliant ENS clients MUST perform the following procedure when resolving a record:\n\n1. Set `calldata` to the ABI-encoded call data for the resolution function required - for example, the ABI encoding of `addr(namehash(name))` when resolving the `addr` record.\n2. Set `supportsENSIP10 = resolver.supportsInterface('0x9061b923')`.\n3. If `supportsENSIP10` is true, set `result = resolver.resolve(dnsencode(name), calldata)`\n4. If `supportsENSIP10` is false and `name == currentname`, set `result` to the result of calling `resolver` with `calldata`.\n5. If neither 3 nor 4 are true, terminate unsuccessfully.\n6. Return `result` after decoding it using the return data ABI of the corresponding resolution function (eg, for `addr()`, ABI-decode the result of `resolver.resolve()` as an `address`).\n\nNote that in all cases the resolution function (`addr()` etc) and the `resolve` function are supplied the original `name`, _not_ the `currentname` found in the first stage of resolution.\n\nAlso note that when wildcard resolution is in use (eg, `name != currentname`), clients MUST NOT call legacy methods such as `addr` to resolve the name. These methods may only be called on resolvers set on an exact match for `name`.", "mimetype": "text/plain", "start_char_idx": 3062, "end_char_idx": 6146, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "219871bf-1cf9-4c54-b9ca-472ec7b0c759": {"__data__": {"id_": "219871bf-1cf9-4c54-b9ca-472ec7b0c759", "embedding": null, "metadata": {"file_path": "ensips/10.md", "file_name": "10.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/10.md", "header_path": "/ENSIP-10: Wildcard Resolution/Specification/", "customer_id": 1, "source_url": "ensips/10.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["pseudocode", "supportsensip10", "const", "return", "currentname", "resolver", "function"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6f3132a6cece86b6e85dd51fe358d6e6a38d7ee7", "node_type": "4", "metadata": {"file_path": "ensips/10.md", "file_name": "10.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/10.md"}, "hash": "d2461737c2cbaf332aff5cc5f5b400d19f4355bd304e2bea08c926595c467015", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "739d7393-1d00-4cae-9437-a9614910e2a8", "node_type": "1", "metadata": {"file_path": "ensips/10.md", "file_name": "10.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/10.md", "header_path": "/ENSIP-10: Wildcard Resolution/"}, "hash": "d3ad60bdf16bf58459bea0b70d612588e9085ec02ee4b7378f16e406778e3ad1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5a22ca8d-07f7-4776-844b-e45fc466c183", "node_type": "1", "metadata": {"header_path": "/ENSIP-10: Wildcard Resolution/"}, "hash": "c84b04808505b8e77b7a43a63c6b3bcb3b7695a0ffc3e526ea66991d3b41e220", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Pseudocode\n\n```\nfunction getResolver(name) {\n    for(let currentname = name; currentname !== ''; currentname = parent(currentname)) {\n        const node = namehash(currentname);\n        const resolver = ens.resolver(node);\n        if(resolver != '0x0000000000000000000000000000000000000000') {\n            return [resolver, currentname];\n        }\n    }\n    return [null, ''];\n}\n\nfunction resolve(name, func, ...args) {\n    const [resolver, resolverName] = getResolver(name);\n    if(resolver === null) {\n        return null;\n    }\n    const supportsENSIP10 = resolver.supportsInterface('0x9061b923');\n    if(supportsENSIP10) {\n        const calldata = resolver[func].encodeFunctionCall(namehash(name), ...args);\n        const result = resolver.resolve(dnsencode(name), calldata);\n        return resolver[func].decodeReturnData(result);\n    } else if(name == resolverName) {\n        return resolver[func](...args);\n    } else {\n        return null;\n    }\n}\n```", "mimetype": "text/plain", "start_char_idx": 6148, "end_char_idx": 7111, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5a22ca8d-07f7-4776-844b-e45fc466c183": {"__data__": {"id_": "5a22ca8d-07f7-4776-844b-e45fc466c183", "embedding": null, "metadata": {"file_path": "ensips/10.md", "file_name": "10.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/10.md", "header_path": "/ENSIP-10: Wildcard Resolution/", "customer_id": 1, "source_url": "ensips/10.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["wildcard", "reuses", "proposed", "existing", "manner", "resolution", "greatest", "supports", "rationale", "implementation", "algorithms", "procedures", "impact", "minimizes"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6f3132a6cece86b6e85dd51fe358d6e6a38d7ee7", "node_type": "4", "metadata": {"file_path": "ensips/10.md", "file_name": "10.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/10.md"}, "hash": "d2461737c2cbaf332aff5cc5f5b400d19f4355bd304e2bea08c926595c467015", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "219871bf-1cf9-4c54-b9ca-472ec7b0c759", "node_type": "1", "metadata": {"file_path": "ensips/10.md", "file_name": "10.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/10.md", "header_path": "/ENSIP-10: Wildcard Resolution/Specification/"}, "hash": "040ac9eebbae8e0ac0ffe49a1e67ed6b09e2da21e8f6ae60e6f9d1c2a25ba8e1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3cbf0c56-6dc8-427e-af44-f13729c9e357", "node_type": "1", "metadata": {"header_path": "/ENSIP-10: Wildcard Resolution/"}, "hash": "80267bc86aada6bff79211667897bf816fc9305bc353ec02062776d99fde0680", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Rationale\n\nThe proposed implementation supports wildcard resolution in a manner that minimizes the impact to existing systems. It also reuses existing algorithms and procedures to the greatest possible extent, thereby easing the burden placed on authors and maintainers of various ENS clients.\n\nIt also recognizes an existing consensus concerning the desirability of wildcard resolution for ENS, enabling more widespread adoption of the original specification by solving for a key scalability obstacle.\n\nWhile introducing an optional `resolve` function for resolvers, taking the unhashed name and calldata for a resolution function increases implementation complexity, it provides a means for resolvers to obtain plaintext labels and act accordingly, which enables many wildcard-related use-cases that would otherwise not be possible - for example, a wildcard resolver could resolve `id.nifty.eth` to the owner of the NFT with id `id` in some collection. With only namehashes to work with, this is not possible.\n\nThe DNS wire format is used for encoding names as it permits quick and gas-efficient hashing of names, as well as other common operations such as fetching or removing individual labels; in contrast, dot-separated names require iterating over every character in the name to find the delimiter.", "mimetype": "text/plain", "start_char_idx": 7113, "end_char_idx": 8421, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3cbf0c56-6dc8-427e-af44-f13729c9e357": {"__data__": {"id_": "3cbf0c56-6dc8-427e-af44-f13729c9e357", "embedding": null, "metadata": {"file_path": "ensips/10.md", "file_name": "10.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/10.md", "header_path": "/ENSIP-10: Wildcard Resolution/", "customer_id": 1, "source_url": "ensips/10.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["wildcard", "compliant", "those", "backwards", "correctly", "compatibility", "interact", "refuse", "continue", "resolve", "records", "while", "existing", "clients"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6f3132a6cece86b6e85dd51fe358d6e6a38d7ee7", "node_type": "4", "metadata": {"file_path": "ensips/10.md", "file_name": "10.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/10.md"}, "hash": "d2461737c2cbaf332aff5cc5f5b400d19f4355bd304e2bea08c926595c467015", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5a22ca8d-07f7-4776-844b-e45fc466c183", "node_type": "1", "metadata": {"file_path": "ensips/10.md", "file_name": "10.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/10.md", "header_path": "/ENSIP-10: Wildcard Resolution/"}, "hash": "7e9be739e91d94f63da5172678dae0b06930dab4026c2bb3c505f09c6c7119b2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d5718c2b-aa57-4bf6-8a44-6620e314b894", "node_type": "1", "metadata": {"header_path": "/ENSIP-10: Wildcard Resolution/"}, "hash": "2beb8c49f536c9ba19ae928cc15d48e610cfb925cb8e3c491cce9cf115d84b96", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Backwards Compatibility\n\nExisting ENS clients that are compliant with ENSIP-1 will fail to resolve wildcard records and refuse to interact with them, while those compliant with ENSIP-10 will continue to correctly resolve, or reject, existing ENS records. Resolvers wishing to implement the new `resolve` function for non-wildcard use-cases (eg, where the resolver is set directly on the name being resolved) should consider what to return to legacy clients that call the individual resolution functions for maximum compatibility.\n\nRequiring clients to avoid calling existing resolution functions (eg, `addr` etc) on wildcard resolvers prevents inadvertent backwards compatibility issues with resolvers that answer queries for all names.", "mimetype": "text/plain", "start_char_idx": 8423, "end_char_idx": 9162, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d5718c2b-aa57-4bf6-8a44-6620e314b894": {"__data__": {"id_": "d5718c2b-aa57-4bf6-8a44-6620e314b894", "embedding": null, "metadata": {"file_path": "ensips/10.md", "file_name": "10.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/10.md", "header_path": "/ENSIP-10: Wildcard Resolution/", "customer_id": 1, "source_url": "ensips/10.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["considerations", "compliant", "refer", "security", "still", "incorrect", "while", "continue", "refuse", "there", "clients", "records", "resolve", "without", "client"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6f3132a6cece86b6e85dd51fe358d6e6a38d7ee7", "node_type": "4", "metadata": {"file_path": "ensips/10.md", "file_name": "10.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/10.md"}, "hash": "d2461737c2cbaf332aff5cc5f5b400d19f4355bd304e2bea08c926595c467015", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3cbf0c56-6dc8-427e-af44-f13729c9e357", "node_type": "1", "metadata": {"file_path": "ensips/10.md", "file_name": "10.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/10.md", "header_path": "/ENSIP-10: Wildcard Resolution/"}, "hash": "ec34627d3c659feb190d1a1d4c708c87eab9f8447e520f68026d7159e86edd44", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "28515fe3-24fa-48a6-be43-5043a6ff43ba", "node_type": "1", "metadata": {"header_path": "/ENSIP-10: Wildcard Resolution/"}, "hash": "1b54267217dea9bef3840fe520442a33d6eb6896d902e55f1ee9e2004593e110", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Security Considerations\n\nWhile compliant ENS clients will continue to refuse to resolve records without a resolver, there is still the risk that an improperly-configured client will refer to an incorrect resolver, or will not reject interactions with the null address when a resolver cannot be located.\n\nAdditionally, resolvers supporting completely arbitrary wildcard subdomain resolution will increase the likelihood of funds being sent to unintended recipients as a result of typos. Applications that implement such resolvers should consider making additional name validation available to clients depending on the context, or implementing features that support recoverability of funds.\n\nThere is also the possibility that some applications might require that no resolver be set for certain subdomains. For this to be problematic, the parent domain would need to successfully resolve the given subdomain node \u2014 to the knowledge of the authors, no application currently supports this feature or expects that subdomains should not resolve to a record.", "mimetype": "text/plain", "start_char_idx": 9164, "end_char_idx": 10218, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "28515fe3-24fa-48a6-be43-5043a6ff43ba": {"__data__": {"id_": "28515fe3-24fa-48a6-be43-5043a6ff43ba", "embedding": null, "metadata": {"file_path": "ensips/10.md", "file_name": "10.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/10.md", "header_path": "/ENSIP-10: Wildcard Resolution/", "customer_id": 1, "source_url": "ensips/10.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["introduces", "copyright", "rights", "address", "waived", "draft", "resolution", "related", "chains", "cointype", "chain", "compatible"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6f3132a6cece86b6e85dd51fe358d6e6a38d7ee7", "node_type": "4", "metadata": {"file_path": "ensips/10.md", "file_name": "10.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/10.md"}, "hash": "d2461737c2cbaf332aff5cc5f5b400d19f4355bd304e2bea08c926595c467015", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d5718c2b-aa57-4bf6-8a44-6620e314b894", "node_type": "1", "metadata": {"file_path": "ensips/10.md", "file_name": "10.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/10.md", "header_path": "/ENSIP-10: Wildcard Resolution/"}, "hash": "94ed61a98625e4c42fd6771897d4badb3b14e5701338d43b77656df81b6b79b3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Copyright\n\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/). ---\ndescription: Introduces coinType for EVM compatible chains (amending ENSIP9).\ncontributors:\n  - matoken.eth\nensip:\n  status: draft\n  created: 2022-01-13\n--- # ENSIP-11: EVM compatible Chain Address Resolution\n\nIntroduces coinType for EVM compatible chains (amending [ENSIP-9](./9)). ## Abstract\n\nThis ENSIP extends [ENSIP 9 (multichain address resolution)](./9), dedicates a range of coin types for EVM compatible chains, and specifies a way to derive EVM chain IDs to the designated coin types.\n\nThe dedicated range uses over 0x80000000 (2147483648) which is reserved under ENSIP 9 so there will be no possibility of coin type collision with other non EVM coin types to be added in future. However, some of coin types previously allocated to EVM chain ids will be deprecated.", "mimetype": "text/plain", "start_char_idx": 10220, "end_char_idx": 10332, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "636f2416-da46-4b92-a0d7-b09aa22afa42": {"__data__": {"id_": "636f2416-da46-4b92-a0d7-b09aa22afa42", "embedding": null, "metadata": {"file_path": "ensips/11.md", "file_name": "11.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/11.md", "header_path": "/ENSIP-11: EVM compatible Chain Address Resolution/", "customer_id": 1, "source_url": "ensips/11.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["designed", "motivation", "address", "types", "define", "relies", "ensip", "which", "majority", "chains", "deterministic", "encoding", "compatible", "existing", "existence"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7f6e4c88a484a97feba808522fbaf331f642e5ed", "node_type": "4", "metadata": {"file_path": "ensips/11.md", "file_name": "11.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/11.md"}, "hash": "25835e3053832c4dd24a736e5ba5a2ba8085993c385689158b4e15c39d1b1620", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4a14b36c-b427-4fd3-947e-c2b306a390e3", "node_type": "1", "metadata": {"file_path": "ensips/11.md", "file_name": "11.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/11.md", "header_path": "/ENSIP-11: EVM compatible Chain Address Resolution/"}, "hash": "0cdce4d421f71a72dc8a5b9f9d3327cc9e54b39933f04ee10d40eb7ec78e3a7d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6684388c-61fc-4f4e-b418-7aa4a1ada8f5", "node_type": "1", "metadata": {"header_path": "/ENSIP-11: EVM compatible Chain Address Resolution/"}, "hash": "384f2356733ba1840c6da17ad435cdc3c3b4b732380a88c6a4891fdd63677e53", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Motivation\n\nThe existing ENSIP 9 relies on the existence of coin types on [SLIP44](https://github.com/satoshilabs/slips/blob/master/slip-0044.md) which was designed to define address encoding type for deterministic wallets. As the majority of EVM compatible chains inherit the same encoding type as Ethereum, it is redundant to keep requesting the addition of EVM compatible chains into SLIP 44. This specification standardises a way to derive coinType based on [Chain ID](https://chainlist.org). ## Specification\n\nThis specification amends ENSIP 9 to specify that coin types with the most-significant bit set are to be treated as EVM chain IDs. The MSB is reserved in SLIP44 for other purposes relating to HD wallet key derivation, so no coin types exist in this range.\n\nTo compute the new coin type for EVM chains, bitwise-OR the chain ID with `0x80000000`: `0x80000000 | chainId`.\n\n```typescript\nexport const convertEVMChainIdToCoinType = (chainId: number) =>{\n  return  (0x80000000 | chainId) >>> 0\n}\n```\n\nAnd to reverse the operation, bitwise-AND the coinType with `0x7fffffff`: `0x7fffffff & coinType`.\n\n```typescript\nexport const convertCoinTypeToEVMChainId = (coinType: number) =>{\n  return  (0x7fffffff & coinType) >> 0\n}\n```", "mimetype": "text/plain", "start_char_idx": 784, "end_char_idx": 1283, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1a8c30f8-a42a-4c92-89c1-1ee8f2d84959": {"__data__": {"id_": "1a8c30f8-a42a-4c92-89c1-1ee8f2d84959", "embedding": null, "metadata": {"file_path": "ensips/11.md", "file_name": "11.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/11.md", "header_path": "/ENSIP-11: EVM compatible Chain Address Resolution/Specification/", "customer_id": 1, "source_url": "ensips/11.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["derive", "compute", "const", "these", "provided", "encoder", "implementation", "interface", "2147483709", "formatsbyname", "functions", "formatsbycointype", "example", "existing"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7f6e4c88a484a97feba808522fbaf331f642e5ed", "node_type": "4", "metadata": {"file_path": "ensips/11.md", "file_name": "11.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/11.md"}, "hash": "25835e3053832c4dd24a736e5ba5a2ba8085993c385689158b4e15c39d1b1620", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6684388c-61fc-4f4e-b418-7aa4a1ada8f5", "node_type": "1", "metadata": {"file_path": "ensips/11.md", "file_name": "11.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/11.md", "header_path": "/ENSIP-11: EVM compatible Chain Address Resolution/"}, "hash": "f10d9c6a92201a0dee0bdb911940e2c4c762012fe1a392514cc1d1ba2e8fcd29", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "639231e7-d3b0-43e1-af02-ed08b4334f30", "node_type": "1", "metadata": {"header_path": "/ENSIP-11: EVM compatible Chain Address Resolution/Specification/"}, "hash": "329c075b633cc9e1547e9ff6efe4aa9e18be83fc44a19c5dbbbdc2b756b5f216", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Implementation\n\nAn implementation of this interface is provided in the [ensdomains/address-encoder](https://github.com/ensdomains/address-encoder/) repository. ### Example\n\nTo compute the new coin type for EVM chains, call `convertEVMChainIdToCoinType(chainId)`\n\n```javascript\nconst encoder = require('@ensdomains/address-encoder')\n>  encoder.convertEVMChainIdToCoinType(61)\n2147483709\n> encoder.convertCoinTypeToEVMChainId(2147483709)\n61\n```\n\nYou can also use existing functions formatsByName and formatsByCoinType to derive these chain IDs\n\n```javascript\n> encoder.formatsByName['XDAI']\n{\n coinType: 2147483748,\n decoder: [Function (anonymous)],\n encoder: [Function (anonymous)],\n name: 'XDAI'\n}\n> encoder.formatsByCoinType[2147483748]\n{\n coinType: 2147483748,\n decoder: [Function (anonymous)],\n encoder: [Function (anonymous)],\n name: 'XDAI'\n}\n```", "mimetype": "text/plain", "start_char_idx": 2024, "end_char_idx": 2187, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "48d705bd-af37-44e8-a40f-44ae0a7c8e9a": {"__data__": {"id_": "48d705bd-af37-44e8-a40f-44ae0a7c8e9a", "embedding": null, "metadata": {"file_path": "ensips/11.md", "file_name": "11.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/11.md", "header_path": "/ENSIP-11: EVM compatible Chain Address Resolution/Specification/", "customer_id": 1, "source_url": "ensips/11.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["exception", "additional", "multiple", "address", "using", "following", "validation", "chains", "exceptions", "continue", "chain", "defined", "cointype", "compatible"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7f6e4c88a484a97feba808522fbaf331f642e5ed", "node_type": "4", "metadata": {"file_path": "ensips/11.md", "file_name": "11.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/11.md"}, "hash": "25835e3053832c4dd24a736e5ba5a2ba8085993c385689158b4e15c39d1b1620", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "639231e7-d3b0-43e1-af02-ed08b4334f30", "node_type": "1", "metadata": {"file_path": "ensips/11.md", "file_name": "11.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/11.md", "header_path": "/ENSIP-11: EVM compatible Chain Address Resolution/Specification/"}, "hash": "0d21192b0cda57c5d0d4ddd476d8838c70e2daecb328d5ac205a44afadad8c27", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a1e6d9ba-8f4f-4943-9531-f585ae16c76e", "node_type": "1", "metadata": {"header_path": "/ENSIP-11: EVM compatible Chain Address Resolution/Specification/"}, "hash": "5d7ec91b25349acd347087eb5beee4fbdbaac6029cfd090dc4e65fde3c60b11e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Exceptions\n\nThe following EVM chains are the exception to this standard.\n\n* AVAX = AVAX has multiple chain address formats, and only c chain is EVM compatible\n* RSK = RSK has its own additional validation\n\nThey will continue using coinType defined at SLIP44 ### Backwards Compatibility\n\nThe following EVM compatible cointypes existed before introducing this new standard.\n\n* NRG\n* POA\n* TT\n* CELO\n* CLO\n* TOMO\n* EWT\n* THETA\n* GO\n* FTM\n* XDAI\n* ETC\n\nWhen you display them for backward compatibility purposes, append `_LEGACY` to the cointype and make them read only.", "mimetype": "text/plain", "start_char_idx": 2881, "end_char_idx": 3142, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1eb0f5ca-9ddd-408a-b620-dfc883ae1fde": {"__data__": {"id_": "1eb0f5ca-9ddd-408a-b620-dfc883ae1fde", "embedding": null, "metadata": {"file_path": "ensips/11.md", "file_name": "11.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/11.md", "header_path": "/ENSIP-11: EVM compatible Chain Address Resolution/", "customer_id": 1, "source_url": "ensips/11.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["copyright", "rights", "waived", "record", "avatar", "draft", "standard", "related", "records", "storage"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7f6e4c88a484a97feba808522fbaf331f642e5ed", "node_type": "4", "metadata": {"file_path": "ensips/11.md", "file_name": "11.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/11.md"}, "hash": "25835e3053832c4dd24a736e5ba5a2ba8085993c385689158b4e15c39d1b1620", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a1e6d9ba-8f4f-4943-9531-f585ae16c76e", "node_type": "1", "metadata": {"file_path": "ensips/11.md", "file_name": "11.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/11.md", "header_path": "/ENSIP-11: EVM compatible Chain Address Resolution/Specification/"}, "hash": "069091283fd4e64389f321f8da04687e3b37800422c7c3d945e05c7ce7c12844", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Copyright\n\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/). ---\ndescription: A standard for storage of the avatar text record in ENS.\ncontributors:\n  - nick.eth\n  - matoken.eth\nensip:\n  status: draft\n  created: 2022-01-18\n--- # ENSIP-12: Avatar Text Records\n\nA standard for storage of the avatar text record in ENS. ## Abstract\n\nThis ENSIP defines a process for retrieving avatar URIs from ENS, several [URI](https://datatracker.ietf.org/doc/html/rfc3986) schemes for the ENS 'avatar' text field, and how they should be interpreted by clients wishing to display a user's avatar image.", "mimetype": "text/plain", "start_char_idx": 3453, "end_char_idx": 3565, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ac5d6845-c74a-42f1-9601-9930731ddc36": {"__data__": {"id_": "ac5d6845-c74a-42f1-9601-9930731ddc36", "embedding": null, "metadata": {"file_path": "ensips/12.md", "file_name": "12.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/12.md", "header_path": "/ENSIP-12: Avatar Text Records/", "customer_id": 1, "source_url": "ensips/12.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["primary", "ethereum", "across", "known", "motivation", "integrated", "multiple", "profile", "facto", "widely", "started", "reverse", "avatar", "based", "specifying"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7fb288dc4f96a65f1f48a2bb1d9fd7803341d8ed", "node_type": "4", "metadata": {"file_path": "ensips/12.md", "file_name": "12.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/12.md"}, "hash": "540fad55a04a9038c547bf85d4c04d6e47a5e0bb64320bd08551bfe77e7dc0f0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a5d02dfd-7765-42e2-855f-8861d54981be", "node_type": "1", "metadata": {"file_path": "ensips/12.md", "file_name": "12.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/12.md", "header_path": "/ENSIP-12: Avatar Text Records/"}, "hash": "02cd4501a548cfab456ce750951fe744f5aa8ded61a3b8bac5163b44aaba2d3b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d99346ce-d736-4ad9-8ac2-96caff5a8557", "node_type": "1", "metadata": {"header_path": "/ENSIP-12: Avatar Text Records/"}, "hash": "59328c2017125f5c112d5956fb2f92644bc0e00e8f39a8d3a4ada6ae4fa4b050", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Motivation\n\nENS primary name (formerly known as reverse record) has been widely integrated as a de facto web3 user name across many Ethereum based applications. As multiple apps started specifying avatar profile image as well as let users pick NFT as pfp (profile image), it became obvious to store such information within ENS so that the avatar information can be shared across different applications.\n\nThis specification standardises a way to store and retrieve this information using [ENSIP-5: Text Records](ensip-5-text-records.md)", "mimetype": "text/plain", "start_char_idx": 528, "end_char_idx": 1066, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d99346ce-d736-4ad9-8ac2-96caff5a8557": {"__data__": {"id_": "d99346ce-d736-4ad9-8ac2-96caff5a8557", "embedding": null, "metadata": {"file_path": "ensips/12.md", "file_name": "12.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/12.md", "header_path": "/ENSIP-12: Avatar Text Records/", "customer_id": 1, "source_url": "ensips/12.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["retrieving", "ethereum", "start", "whether", "determine", "depends", "address", "avatar", "client", "process", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7fb288dc4f96a65f1f48a2bb1d9fd7803341d8ed", "node_type": "4", "metadata": {"file_path": "ensips/12.md", "file_name": "12.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/12.md"}, "hash": "540fad55a04a9038c547bf85d4c04d6e47a5e0bb64320bd08551bfe77e7dc0f0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ac5d6845-c74a-42f1-9601-9930731ddc36", "node_type": "1", "metadata": {"file_path": "ensips/12.md", "file_name": "12.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/12.md", "header_path": "/ENSIP-12: Avatar Text Records/"}, "hash": "cf5be0e82911ed7857d3f8273cd3ca30b6a3a3b1aa6bb9191f5c97eb857e7f4c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cb27c181-a8d5-4964-937e-27a19c5a6e9a", "node_type": "1", "metadata": {"header_path": "/ENSIP-12: Avatar Text Records/Specification/"}, "hash": "5f40c8d3d165e01d8da3d2cbc65dc1c18d31a6610d805e622372d7146517041b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification ### Retrieving the avatar URI\n\nThe process for retrieving the avatar URI depends on whether the client has an Ethereum address or an ENS name to start with. ### ENS Name\n\nTo determine the avatar URI for an ENS name, the client MUST first look up the resolver for the name and call `.text(namehash(name), 'avatar')` on it to retrieve the avatar URI for the name.\n\nThe client MUST treat the absence of a resolver, an revert when calling the `addr` method on the resolver, or an empty string returned by the resolver identically, as a failure to find a valid avatar URI.", "mimetype": "text/plain", "start_char_idx": 1068, "end_char_idx": 1084, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a7794d1a-ae8f-40d0-a63a-4509d74e68c3": {"__data__": {"id_": "a7794d1a-ae8f-40d0-a63a-4509d74e68c3", "embedding": null, "metadata": {"file_path": "ensips/12.md", "file_name": "12.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/12.md", "header_path": "/ENSIP-12: Avatar Text Records/Specification/", "customer_id": 1, "source_url": "ensips/12.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ethereum", "determine", "lowercase", "address", "querying", "avatar", "registry", "resolver", "client", "leading", "without", "where"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7fb288dc4f96a65f1f48a2bb1d9fd7803341d8ed", "node_type": "4", "metadata": {"file_path": "ensips/12.md", "file_name": "12.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/12.md"}, "hash": "540fad55a04a9038c547bf85d4c04d6e47a5e0bb64320bd08551bfe77e7dc0f0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "96b40dac-ed35-4ae6-ad35-f608dc23f8ed", "node_type": "1", "metadata": {"file_path": "ensips/12.md", "file_name": "12.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/12.md", "header_path": "/ENSIP-12: Avatar Text Records/Specification/"}, "hash": "36aaff4376fd2931050c08e2f972af7ec0d18836dfcb8fc2a34a035829ceb44d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f6878cba-08da-4d59-a014-221cdef85829", "node_type": "1", "metadata": {"header_path": "/ENSIP-12: Avatar Text Records/Specification/"}, "hash": "eb5de60c87d551fd40e1811074211eaff5e2534c4b9e396dc08c7c83eca1d2e3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Ethereum Address\n\nTo determine the avatar URI for an Ethereum address, the client MUST reverse-resolve the address by querying the ENS registry for the resolver of `&lt;address&gt;.addr.reverse`, where `&lt;address&gt;` is the lowercase hex-encoded Ethereum address, without leading '0x'. Then, the client calls `.text(namehash(&lt;address&gt;.addr.reverse'), 'avatar')` to retrieve the avatar URI for the address.\n\nIf a resolver is returned for the reverse record, but calling `text` causes a revert or returns an empty string, the client MUST call `.name(namehash('&lt;address&gt;.addr.reverse'))`. If this method returns a valid ENS name, the client MUST:\n\n1. Validate that the reverse record is valid, by resolving the returned name and calling `addr` on the resolver, checking it matches the original Ethereum address.\n2. Perform the process described under 'ENS Name' to look for a valid avatar URI on the name.\n\nA failure at any step of this process MUST be treated by the client identically as a failure to find a valid avatar URI.", "mimetype": "text/plain", "start_char_idx": 1656, "end_char_idx": 2699, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f6878cba-08da-4d59-a014-221cdef85829": {"__data__": {"id_": "f6878cba-08da-4d59-a014-221cdef85829", "embedding": null, "metadata": {"file_path": "ensips/12.md", "file_name": "12.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/12.md", "header_path": "/ENSIP-12: Avatar Text Records/Specification/", "customer_id": 1, "source_url": "ensips/12.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["types", "ignore", "support", "format", "general", "field", "formatted", "value", "treating", "image", "images", "clients"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7fb288dc4f96a65f1f48a2bb1d9fd7803341d8ed", "node_type": "4", "metadata": {"file_path": "ensips/12.md", "file_name": "12.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/12.md"}, "hash": "540fad55a04a9038c547bf85d4c04d6e47a5e0bb64320bd08551bfe77e7dc0f0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a7794d1a-ae8f-40d0-a63a-4509d74e68c3", "node_type": "1", "metadata": {"file_path": "ensips/12.md", "file_name": "12.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/12.md", "header_path": "/ENSIP-12: Avatar Text Records/Specification/"}, "hash": "37d0f780c28fccf59f95d176a36f03b9b8313c7dfc12fed396928f23baca83ff", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7e74cbf9-9b2b-47a6-9d5d-ec818b01a200", "node_type": "1", "metadata": {"header_path": "/ENSIP-12: Avatar Text Records/Specification/"}, "hash": "c61e0305fd9074f9c1c2dee251a812d13fca131d05d8cef012d49ee76bafba44", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### General Format\n\nThe 'avatar' text field MUST be formatted as a URI. Clients MUST ignore URI types they do not recognise, treating them the same as if no value was set for the field. ### Image Types\n\nClients MUST support images with mime types of `image/jpeg`, `image/png`, and `image/svg+xml`. Clients MAY support additional image types. ### URI Types\n\nAll clients SHOULD support the URI schemes defined below. They MAY implement additional schemes not defined in this specification.\n\n**`https`**\n\nIf an https URI is provided, it MUST resolve to an avatar image directly. https URLs MUST NOT resolve to HTML pages, metadata, or other content containing the avatar image.\n\n**`ipfs`**\n\nIf an [ipfs URI](https://docs.ipfs.io/how-to/address-ipfs-on-web/#native-urls) is provided, it MUST resolve to an avatar image directly. Clients without built-in IPFS support MAY rewrite the URI to an https URL referencing an IPFS gateway as described in [this document](https://docs.ipfs.io/how-to/address-ipfs-on-web/) before resolving it as an https URL.\n\n**`data`**\n\nIf a [data URL](https://datatracker.ietf.org/doc/html/rfc2397) is provided, it MUST resolve to an avatar image directly.\n\n**NFTs**\n\nA reference to an NFT may be used as an avatar URI, following the standards defined in [CAIP-22](https://github.com/ChainAgnostic/CAIPs/blob/master/CAIPs/caip-22.md) and [CAIP-29](https://github.com/ChainAgnostic/CAIPs/blob/master/CAIPs/caip-29.md).\n\nClients MUST support at least ERC721 and ERC1155 type NFTs, and MAY support additional types of NFT.\n\nTo resolve an NFT URI, a client follows this process:\n\n1. Retrieve the metadata URI for the token specified in the `avatar` field URI.\n2. Resolve the metadata URI, fetching the ERC721 or ERC1155 metadata.\n3. Extract the image URL specified in the NFT metadata.\n4. Resolve the image URL and use it as the avatar.\n\nClients MUST support at least `https` and `ipfs` URIs for resolving the metadata URI and the avatar image, and MAY support additional schemes. Clients MAY implement `ifps` scheme support by rewriting the URI to an HTTPS URL referencing an IPFS gateway as described above.\n\nClients SHOULD additionally take the following verification steps:\n\n1. Where the avatar URI was retrieved via forward resolution (starting from an ENS name), call the `addr` function on the same resolver and for the same name to retrieve the Ethereum address to which the name resolves. Otherwise, if the avatar URI was retrieved via reverse resolution (starting from an Ethereum address), use that address.\n2. Verify that the address from step 1 is an owner of the NFT specified in the URI. If it is not, the client MUST treat the URI as invalid and behave in the same manner as they would if no avatar URI was specified.\n\nClients MAY support NFT URIs by rewriting them to `https` URIs for a service that provides NFT avatar image resolution support.", "mimetype": "text/plain", "start_char_idx": 2701, "end_char_idx": 2886, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d1b8c08a-4fbf-4e2d-9f3e-411309f6c83e": {"__data__": {"id_": "d1b8c08a-4fbf-4e2d-9f3e-411309f6c83e", "embedding": null, "metadata": {"file_path": "ensips/12.md", "file_name": "12.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/12.md", "header_path": "/ENSIP-12: Avatar Text Records/Specification/", "customer_id": 1, "source_url": "ensips/12.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["backwards", "security", "avatar", "https", "compatibility", "following", "gateway", "image", "resolve", "examples", "token"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7fb288dc4f96a65f1f48a2bb1d9fd7803341d8ed", "node_type": "4", "metadata": {"file_path": "ensips/12.md", "file_name": "12.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/12.md"}, "hash": "540fad55a04a9038c547bf85d4c04d6e47a5e0bb64320bd08551bfe77e7dc0f0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fa94ccc8-d8cd-4497-86f6-9e793505d87b", "node_type": "1", "metadata": {"file_path": "ensips/12.md", "file_name": "12.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/12.md", "header_path": "/ENSIP-12: Avatar Text Records/Specification/"}, "hash": "e63129169be392f7b71c6206e737c24db1486866f6c0041fb573263a7f411a47", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "47827237-5ca8-43cb-9f65-a86a7c5fff4e", "node_type": "1", "metadata": {"header_path": "/ENSIP-12: Avatar Text Records/"}, "hash": "efb4eb6cffb2931badb3cfe55ec3a2e9d621f2896574d93018bda8057e3e6593", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Examples\n\nThe following examples all resolve to the same avatar image:\n\n```\neip155:1/erc721:0xbc4ca0eda7647a8ab7c2061c2e118a18a936f13d/0 # BAYC token 0\nipfs://QmRRPWG96cmgTn2qSzjwr2qvfNEuhunv6FNeMFGa9bx6mQ # IPFS hash for BAYC token 0 image\nhttps://ipfs.io/ipfs/QmRRPWG96cmgTn2qSzjwr2qvfNEuhunv6FNeMFGa9bx6mQ # HTTPS URL to IPFS gateway for BAYC token 0 image\n``` ## Backwards Compatibility\n\nNot applicable. ## Security Considerations\n\nNone. ## Copyright\n\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/).", "mimetype": "text/plain", "start_char_idx": 5586, "end_char_idx": 5953, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8c64c0b2-c9d0-4c2b-9f03-857490f13573": {"__data__": {"id_": "8c64c0b2-c9d0-4c2b-9f03-857490f13573", "embedding": null, "metadata": {"file_path": "ensips/13.md", "file_name": "13.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/13.md", "header_path": "/", "customer_id": 1, "source_url": "ensips/13.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["facilitate", "authentication", "safer", "sillytuna", "convenient", "jwahdatehagh", "crydoteth", "draft", "cyberpnkwin", "using", "wwhchung", "signing", "records"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "65198970a9ab108ebd764aff9cb2c57128dbb826", "node_type": "4", "metadata": {"file_path": "ensips/13.md", "file_name": "13.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/13.md"}, "hash": "e6f265e80c7d760b15438c1e66e1830b5d4b9014870f84135abba34341081fa0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4621e831-2558-4176-809c-eb7c71c444c3", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "a9b75f87ee3b5856c9aaa7b26f28c3ef59917c3bd1a6b270241652c102853713", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: Using ENS Text Records to facilitate safer and more convenient signing operations.\ncontributors:\n  - wwhchung\n  - jwahdatehagh\n  - crydoteth\n  - sillytuna\n  - cyberpnkwin\nensip:\n  created: 2021-08-03\n  status: draft\nignoredRules: [\"missing:specification\"]\n--- # ENSIP-13: SAFE Authentication For ENS\n\nUsing ENS Text Records to facilitate safer and more convenient signing operations.                                                                                                           |", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 276, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "26bdd5b3-9b52-4aed-8563-5b725d92d86e": {"__data__": {"id_": "26bdd5b3-9b52-4aed-8563-5b725d92d86e", "embedding": null, "metadata": {"file_path": "ensips/13.md", "file_name": "13.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/13.md", "header_path": "/ENSIP-13: SAFE Authentication For ENS/", "customer_id": 1, "source_url": "ensips/13.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["asset", "ethereum", "motivation", "ownership", "proving", "abstract", "control", "wallets", "prove", "links", "EIP-137", "signing", "service", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "65198970a9ab108ebd764aff9cb2c57128dbb826", "node_type": "4", "metadata": {"file_path": "ensips/13.md", "file_name": "13.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/13.md"}, "hash": "e6f265e80c7d760b15438c1e66e1830b5d4b9014870f84135abba34341081fa0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4621e831-2558-4176-809c-eb7c71c444c3", "node_type": "1", "metadata": {"file_path": "ensips/13.md", "file_name": "13.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/13.md", "header_path": "/"}, "hash": "d09e9c73f343fb42fe088f1471942e0e30075a416c6519b57f483ecfb17bd423", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7f3426ec-f08a-4610-9705-cdaad5b00bf9", "node_type": "1", "metadata": {"header_path": "/ENSIP-13: SAFE Authentication For ENS/"}, "hash": "09f23d412e4f97778844523b417631a234ba3188a88c3243fad48c7c926b6dc3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Abstract\nThis EIP links one or more signing wallets via Ethereum Name Service Specification ([EIP-137](https://eips.ethereum.org/EIPS/eip-137)) to prove control and asset ownership of a main wallet. ## Motivation\nProving ownership of an asset to a third party application in the Ethereum ecosystem is common. Users frequently sign payloads of data to authenticate themselves before gaining access to perform some operation. However, this method--akin to giving the third party root access to one's main wallet--is both insecure and inconvenient.\n\n***Examples:***\n 1. In order for you to edit your profile on OpenSea, you must sign a message with your wallet.\n 2. In order to access NFT gated content, you must sign a message with the wallet containing the NFT in order to prove ownership.\n 3. In order to gain access to an event, you must sign a message with the wallet containing a required NFT in order to prove ownership.\n 4. In order to claim an airdrop, you must interact with the smart contract with the qualifying wallet.\n 5. In order to prove ownership of an NFT, you must sign a payload with the wallet that owns that NFT.\n\nIn all the above examples, one interacts with the dApp or smart contract using the wallet itself, which may be\n - inconvenient (if it is controlled via a hardware wallet or a multi-sig)\n - insecure (since the above operations are read-only, but you are signing/interacting via a wallet that has write access)\n\nInstead, one should be able to approve multiple wallets to authenticate on behalf of a given wallet.", "mimetype": "text/plain", "start_char_idx": 511, "end_char_idx": 712, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7f209dbe-2942-415d-a54f-100d8d397c09": {"__data__": {"id_": "7f209dbe-2942-415d-a54f-100d8d397c09", "embedding": null, "metadata": {"file_path": "ensips/13.md", "file_name": "13.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/13.md", "header_path": "/ENSIP-13: SAFE Authentication For ENS/Motivation/", "customer_id": 1, "source_url": "ensips/13.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["significant", "result", "accidentally", "almost", "signed", "malicious", "assets", "existing", "cases", "problems", "methods", "solutions", "users", "always", "where"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "65198970a9ab108ebd764aff9cb2c57128dbb826", "node_type": "4", "metadata": {"file_path": "ensips/13.md", "file_name": "13.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/13.md"}, "hash": "e6f265e80c7d760b15438c1e66e1830b5d4b9014870f84135abba34341081fa0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7f3426ec-f08a-4610-9705-cdaad5b00bf9", "node_type": "1", "metadata": {"file_path": "ensips/13.md", "file_name": "13.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/13.md", "header_path": "/ENSIP-13: SAFE Authentication For ENS/"}, "hash": "707d6730da316e4981bf9391bb9b0c86182cfd961c8ebe155d662b836899db5d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a420e654-dac2-486b-83c2-20ad3ef4a351", "node_type": "1", "metadata": {"header_path": "/ENSIP-13: SAFE Authentication For ENS/Motivation/"}, "hash": "85fdf4b0a6abe6d5132cfaeb4b674de5295e9b31911a8aa780cdea2203a26dfb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Problems with existing methods and solutions\nUnfortunately, we've seen many cases where users have accidentally signed a malicious payload. The result is almost always a significant loss of assets associated with the signing address.\n\nIn addition to this, many users keep significant portions of their assets in 'cold storage'. With the increased security from 'cold storage' solutions, we usually see decreased accessibility because users naturally increase the barriers required to access these wallets.\n\nSome solutions propose dedicated registry smart contracts to create this link, or new protocols to be supported. This is problematic from an adoption standpoint, and there have not been any standards created for them.", "mimetype": "text/plain", "start_char_idx": 2060, "end_char_idx": 2788, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a420e654-dac2-486b-83c2-20ad3ef4a351": {"__data__": {"id_": "a420e654-dac2-486b-83c2-20ad3ef4a351", "embedding": null, "metadata": {"file_path": "ensips/13.md", "file_name": "13.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/13.md", "header_path": "/ENSIP-13: SAFE Authentication For ENS/Motivation/", "customer_id": 1, "source_url": "ensips/13.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["achieve", "ethereum", "adopted", "safer", "convenient", "feature", "conjunction", "widely", "proposal", "order", "EIP-634", "EIP-137", "records", "rather", "service"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "65198970a9ab108ebd764aff9cb2c57128dbb826", "node_type": "4", "metadata": {"file_path": "ensips/13.md", "file_name": "13.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/13.md"}, "hash": "e6f265e80c7d760b15438c1e66e1830b5d4b9014870f84135abba34341081fa0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7f209dbe-2942-415d-a54f-100d8d397c09", "node_type": "1", "metadata": {"file_path": "ensips/13.md", "file_name": "13.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/13.md", "header_path": "/ENSIP-13: SAFE Authentication For ENS/Motivation/"}, "hash": "b68bd27595e1c6a33f2ecff7c82167b63be43d8091078234de843330cff1a4c7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "aec15d2c-e0a9-4c8f-bfcf-c0860dccff8d", "node_type": "1", "metadata": {"header_path": "/ENSIP-13: SAFE Authentication For ENS/Motivation/Proposal: Use the Ethereum Name Service (EIP-137)/"}, "hash": "d6d26ab33c86c49486558325fd389293bd57e3adf8144dd848f471823cdc8a95", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Proposal: Use the Ethereum Name Service (EIP-137)\nRather than 're-invent the wheel', this proposal aims to use the widely adopted Ethereum Name Service in conjunction with the ENS Text Records feature ([EIP-634](https://eips.ethereum.org/EIPS/eip-634)) in order to achieve a safer and more convenient way to sign and authenticate, and provide 'read only' access to a main wallet via one or more secondary wallets.\n\nFrom there, the benefits are twofold. This EIP gives users increased security via outsourcing potentially malicious signing operations to wallets that are more accessible (hot wallets), while being able to maintain the intended security assumptions of wallets that are not frequently used for signing operations.", "mimetype": "text/plain", "start_char_idx": 2791, "end_char_idx": 3522, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "aec15d2c-e0a9-4c8f-bfcf-c0860dccff8d": {"__data__": {"id_": "aec15d2c-e0a9-4c8f-bfcf-c0860dccff8d", "embedding": null, "metadata": {"file_path": "ensips/13.md", "file_name": "13.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/13.md", "header_path": "/ENSIP-13: SAFE Authentication For ENS/Motivation/Proposal: Use the Ethereum Name Service (EIP-137)/", "customer_id": 1, "source_url": "ensips/13.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["means", "requires", "security", "control", "interaction", "malicious", "using", "improving", "prove", "interact", "dapps", "wallet"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "65198970a9ab108ebd764aff9cb2c57128dbb826", "node_type": "4", "metadata": {"file_path": "ensips/13.md", "file_name": "13.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/13.md"}, "hash": "e6f265e80c7d760b15438c1e66e1830b5d4b9014870f84135abba34341081fa0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a420e654-dac2-486b-83c2-20ad3ef4a351", "node_type": "1", "metadata": {"file_path": "ensips/13.md", "file_name": "13.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/13.md", "header_path": "/ENSIP-13: SAFE Authentication For ENS/Motivation/"}, "hash": "ef4e16e99a92c208dc6cc50e6ca6ceec7bb4ae40b63746fb40c70cc40e994106", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6c393daf-e8f9-4630-a65d-42612db449c6", "node_type": "1", "metadata": {"header_path": "/ENSIP-13: SAFE Authentication For ENS/Motivation/Proposal: Use the Ethereum Name Service (EIP-137)/"}, "hash": "6684369391d790b70bf63019301b006f5ebbd53ab6f581976978c5d6418038f9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "#### Improving dApp Interaction Security\nMany dApps requires one to prove control of a wallet to gain access. At the moment, this means that you must interact with the dApp using the wallet itself. This is a security issue, as malicious dApps or phishing sites can lead to the assets of the wallet being compromised by having them sign malicious payloads.\n\nHowever, this risk would be mitigated if one were to use a secondary wallet for these interactions. Malicious interactions would be isolated to the assets held in the secondary wallet, which can be set up to contain little to nothing of value.", "mimetype": "text/plain", "start_char_idx": 3524, "end_char_idx": 4124, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6c393daf-e8f9-4630-a65d-42612db449c6": {"__data__": {"id_": "6c393daf-e8f9-4630-a65d-42612db449c6", "embedding": null, "metadata": {"file_path": "ensips/13.md", "file_name": "13.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/13.md", "header_path": "/ENSIP-13: SAFE Authentication For ENS/Motivation/Proposal: Use the Ethereum Name Service (EIP-137)/", "customer_id": 1, "source_url": "ensips/13.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["phrase", "multiple", "security", "entered", "access", "order", "being", "device", "improving", "import", "wallet", "compromised"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "65198970a9ab108ebd764aff9cb2c57128dbb826", "node_type": "4", "metadata": {"file_path": "ensips/13.md", "file_name": "13.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/13.md"}, "hash": "e6f265e80c7d760b15438c1e66e1830b5d4b9014870f84135abba34341081fa0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "aec15d2c-e0a9-4c8f-bfcf-c0860dccff8d", "node_type": "1", "metadata": {"file_path": "ensips/13.md", "file_name": "13.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/13.md", "header_path": "/ENSIP-13: SAFE Authentication For ENS/Motivation/Proposal: Use the Ethereum Name Service (EIP-137)/"}, "hash": "7b27ab3aa9c086d6fc0246d77bc4ac08c7ba0df9054597c08a049e58f3881373", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "907cf2c7-9766-4bee-ad25-9c9ac2e490a4", "node_type": "1", "metadata": {"header_path": "/ENSIP-13: SAFE Authentication For ENS/Motivation/"}, "hash": "cbec524af1a7d2dc3c1f7222467d43022b2ffcd73399ae6606dbe07943dd5893", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "#### Improving Multiple Device Access Security\nIn order for a non-hardware wallet to be used on multiple devices, you must import the seed phrase to each device. Each time a seed phrase is entered on a new device, the risk of the wallet being compromised increases as you are increasing the surface area of devices that have knowledge of the seed phrase.\n\nInstead, each device can have its own unique wallet that is an authorized secondary wallet of the main wallet. If a device specific wallet was ever compromised or lost, you could simply remove the authorization to authenticate.\n\nFurther, wallet authentication can be matokenUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC 2119.\n\nLet:\n - `mainAddress` represent the wallet address we are trying to authenticate or prove asset ownership for.\n - `mainENS` represent the reverse lookup ENS string for `mainAddress`.\n - `authAddress` represent the address we want to use for signing in lieu of `mainAddress`.\n - `authENS` represent the reverse lookup ENS string for `authAddress`.\n - `authKey` represents a string in the format `[0-9A-Za-z]+`.\n\nControl of `mainAddress` and ownership of `mainAddress` assets by `authAddress` is proven if all the following conditions are met:\n - `mainAddress` has an ENS resolver record and a reverse record set to `mainENS`.\n - `authAddress` has an ENS resolver record and a reverse record set to `authENS`.\n - `authENS` has an ENS TEXT record `eip5131:vault` in the format `<authKey>:<mainAddress>`.\n - `mainENS` has an ENS TEXT record `eip5131:<authKey>`.", "mimetype": "text/plain", "start_char_idx": 4126, "end_char_idx": 5770, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "907cf2c7-9766-4bee-ad25-9c9ac2e490a4": {"__data__": {"id_": "907cf2c7-9766-4bee-ad25-9c9ac2e490a4", "embedding": null, "metadata": {"file_path": "ensips/13.md", "file_name": "13.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/13.md", "header_path": "/ENSIP-13: SAFE Authentication For ENS/Motivation/", "customer_id": 1, "source_url": "ensips/13.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["automatically", "linked", "single", "record", "domain", "reverse", "order", "setting", "discover", "records", "resolver", "should"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "65198970a9ab108ebd764aff9cb2c57128dbb826", "node_type": "4", "metadata": {"file_path": "ensips/13.md", "file_name": "13.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/13.md"}, "hash": "e6f265e80c7d760b15438c1e66e1830b5d4b9014870f84135abba34341081fa0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6c393daf-e8f9-4630-a65d-42612db449c6", "node_type": "1", "metadata": {"file_path": "ensips/13.md", "file_name": "13.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/13.md", "header_path": "/ENSIP-13: SAFE Authentication For ENS/Motivation/Proposal: Use the Ethereum Name Service (EIP-137)/"}, "hash": "3352a6748bbc5209e612d7164f366bbea778fded4bf0d13002ff56c136c26ac9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "10f6d76f-f546-4d40-9007-9a63bd679499", "node_type": "1", "metadata": {"header_path": "/ENSIP-13: SAFE Authentication For ENS/Motivation/"}, "hash": "12b3ddfb383f61f8e472573047c18e7b002c1d0857104106d53a24a998cd40e3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Setting up one or many `authAddress` records on a single ENS domain\nThe `mainAddress` MUST have an ENS resolver record and reverse record configured.\nIn order to automatically discover the linked account, the `authAddress` SHOULD have an ENS resolver record and reverse record configured.\n\n1. Choose an unused `<authKey>`. This can be any string in the format `[0-0A-Za-z]+`.\n2. Set a TEXT record `eip5131:<authKey>` on `mainENS`, with the value set to the desired `authAddress`.\n3. Set a TEXT record `eip5131:vault` on `authENS`, with the value set to the `<authKey>:mainAddress`.\n\nCurrently this EIP does not enforce an upper-bound on the number of `authAddress` entries you can include. Users can repeat this process with as many address as they like.", "mimetype": "text/plain", "start_char_idx": 5772, "end_char_idx": 6530, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "10f6d76f-f546-4d40-9007-9a63bd679499": {"__data__": {"id_": "10f6d76f-f546-4d40-9007-9a63bd679499", "embedding": null, "metadata": {"file_path": "ensips/13.md", "file_name": "13.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/13.md", "header_path": "/ENSIP-13: SAFE Authentication For ENS/Motivation/", "customer_id": 1, "source_url": "ensips/13.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["determine", "authenticating", "ownership", "signed", "control", "assets", "would", "performing", "record", "reverse", "following", "associated", "parse", "proven", "resolver"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "65198970a9ab108ebd764aff9cb2c57128dbb826", "node_type": "4", "metadata": {"file_path": "ensips/13.md", "file_name": "13.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/13.md"}, "hash": "e6f265e80c7d760b15438c1e66e1830b5d4b9014870f84135abba34341081fa0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "907cf2c7-9766-4bee-ad25-9c9ac2e490a4", "node_type": "1", "metadata": {"file_path": "ensips/13.md", "file_name": "13.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/13.md", "header_path": "/ENSIP-13: SAFE Authentication For ENS/Motivation/"}, "hash": "7d9257c2a5894ba098c365cb1b11932aacb77f99c97f849ba155b35d9e7d45e7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8986a232-8ea8-4a68-bf97-fdf64eecf6e0", "node_type": "1", "metadata": {"header_path": "/ENSIP-13: SAFE Authentication For ENS/Motivation/"}, "hash": "31a3505c9ab0c3eb341013559fe47ca954eaf76910dd16b53fe2d8ab2acba5bc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Authenticating `mainAddress` via `authAddress`\nControl of `mainAddress` and ownership of `mainAddress` assets is proven if any associated `authAddress` is the `msg.sender` or has signed the message.\n\nPractically, this would work by performing the following operations:\n1. Get the resolver for `authENS`\n2. Get the `eip5131:vault` TEXT record of `authENS`\n3. Parse `<authKey>:<mainAddress>` to determine the `authKey` and `mainAddress`.\n4. MUST get the reverse ENS record for `mainAddress` and verify that it matches `<mainENS>`.\n    - Otherwise one could set up other ENS nodes (with auths) that point to `mainAddress` and authenticate via those.\n5. Get the `eip5131:<authKey>` TEXT record of `mainENS` and ensure it matches `authAddress`.\n\nNote that this specification allows for both contract level and client/server side validation of signatures.  It is not limited to smart contracts, which is why there is no proposed external interface definition.", "mimetype": "text/plain", "start_char_idx": 6532, "end_char_idx": 7489, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8986a232-8ea8-4a68-bf97-fdf64eecf6e0": {"__data__": {"id_": "8986a232-8ea8-4a68-bf97-fdf64eecf6e0", "embedding": null, "metadata": {"file_path": "ensips/13.md", "file_name": "13.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/13.md", "header_path": "/ENSIP-13: SAFE Authentication For ENS/Motivation/", "customer_id": 1, "source_url": "ensips/13.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["makes", "revocation", "permission", "point", "proposed", "record", "update", "rationale", "another", "EIP-137", "introduce", "revoke", "usage", "rather", "delete", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "65198970a9ab108ebd764aff9cb2c57128dbb826", "node_type": "4", "metadata": {"file_path": "ensips/13.md", "file_name": "13.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/13.md"}, "hash": "e6f265e80c7d760b15438c1e66e1830b5d4b9014870f84135abba34341081fa0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "10f6d76f-f546-4d40-9007-9a63bd679499", "node_type": "1", "metadata": {"file_path": "ensips/13.md", "file_name": "13.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/13.md", "header_path": "/ENSIP-13: SAFE Authentication For ENS/Motivation/"}, "hash": "c49037a727e81a67ea9883cd72af91f9adf51aec7c5cf3e6bfe79c4d881d5de1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "61751bc0-025a-4f70-961f-e0a720fb7f13", "node_type": "1", "metadata": {"header_path": "/ENSIP-13: SAFE Authentication For ENS/"}, "hash": "0b6a62fcb5937077e63a6df6a4e297bc7c1e19d5ecc2df1f05eaa042b12af5d7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Revocation of `authAddress`\nTo revoke permission of `authAddress`, delete the `eip5131:<authKey>` TEXT record of `mainENS` or update it to point to a new `authAddress`. ## Rationale ### Usage of EIP-137\nThe proposed specification makes use of EIP-137 rather than introduce another registry paradigm. The reason for this is due to the existing wide adoption of EIP-137 and ENS.\n\nHowever, the drawback to EIP-137 is that any linked `authAddress` must contain some ETH in order to set the `authENS` reverse record as well as the `eip5131:vault` TEXT record. This can be solved by a separate reverse lookup registry that enables `mainAddress` to set the reverse record and TEXT record with a message signed by `authAddress`.\n\nWith the advent of L2s and ENS Layer 2 functionalities, off chain verification of linked addresses is possible even with domains managed across different chains.", "mimetype": "text/plain", "start_char_idx": 7491, "end_char_idx": 7663, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6b7bb132-5d5b-4b03-b618-fafdda3b78e8": {"__data__": {"id_": "6b7bb132-5d5b-4b03-b618-fafdda3b78e8", "embedding": null, "metadata": {"file_path": "ensips/13.md", "file_name": "13.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/13.md", "header_path": "/ENSIP-13: SAFE Authentication For ENS/Rationale/", "customer_id": 1, "source_url": "ensips/13.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["authentication", "allows", "single", "proposed", "itself", "design", "relationship", "choice", "allow", "specification", "authorize", "reason", "simplicity", "authenticate"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "65198970a9ab108ebd764aff9cb2c57128dbb826", "node_type": "4", "metadata": {"file_path": "ensips/13.md", "file_name": "13.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/13.md"}, "hash": "e6f265e80c7d760b15438c1e66e1830b5d4b9014870f84135abba34341081fa0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "222c7b37-01fc-4410-911f-33c40b387e36", "node_type": "1", "metadata": {"file_path": "ensips/13.md", "file_name": "13.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/13.md", "header_path": "/ENSIP-13: SAFE Authentication For ENS/Rationale/"}, "hash": "09309c564b93d72e475455f2b09ddc627167b0a6602193576e2447d8d49f1eed", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6ea18a6d-4f47-4aed-800d-6da1ce719ee2", "node_type": "1", "metadata": {"header_path": "/ENSIP-13: SAFE Authentication For ENS/Rationale/"}, "hash": "da19819bf28e983aa8eb9925876604f85afb057979121abaf0187a41d15dbe7b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### One-to-Many Authentication Relationship\n\nThis proposed specification allows for a one (`mainAddress`) to many (`authAddress`) authentication relationship.  i.e. one `mainAddress` can authorize many `authAddress` to authenticate, but an `authAddress` can only authenticate itself or a single `mainAddress`.\n\nThe reason for this design choice is to allow for simplicity of authentication via client and smart contract code. You can determine which `mainAddress` the `authAddress` is signing for without any additional user input.\n\nFurther, you can design UX without any user interaction necessary to 'pick' the interacting address by display assets owned by `authAddress` and `mainAddress` and use the appropriate address dependent on the asset the user is attempting to authenticate with.", "mimetype": "text/plain", "start_char_idx": 8382, "end_char_idx": 9173, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6ea18a6d-4f47-4aed-800d-6da1ce719ee2": {"__data__": {"id_": "6ea18a6d-4f47-4aed-800d-6da1ce719ee2", "embedding": null, "metadata": {"file_path": "ensips/13.md", "file_name": "13.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/13.md", "header_path": "/ENSIP-13: SAFE Authentication For ENS/Rationale/", "customer_id": 1, "source_url": "ensips/13.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["reference", "string", "export", "would", "const", "linkedaddress", "using", "validation", "interface", "await", "implementation", "async", "addressens", "function"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "65198970a9ab108ebd764aff9cb2c57128dbb826", "node_type": "4", "metadata": {"file_path": "ensips/13.md", "file_name": "13.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/13.md"}, "hash": "e6f265e80c7d760b15438c1e66e1830b5d4b9014870f84135abba34341081fa0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6b7bb132-5d5b-4b03-b618-fafdda3b78e8", "node_type": "1", "metadata": {"file_path": "ensips/13.md", "file_name": "13.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/13.md", "header_path": "/ENSIP-13: SAFE Authentication For ENS/Rationale/"}, "hash": "2722cda51dd4481aaed0784b304c5526b69106a55fd06b64096abde4cb013e26", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "da336104-0efc-43a1-b812-2b27b9140e87", "node_type": "1", "metadata": {"header_path": "/ENSIP-13: SAFE Authentication For ENS/Rationale/Reference Implementation/"}, "hash": "e99f897b916ad78e73b06f30ecf3625ad591e450a555789a7fcca0e1723206fa", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Reference Implementation #### Client/Server Side\n\nIn typescript, the validation function, using ethers.js would be as follows:\n\n```solidity\nexport interface LinkedAddress {\n  ens: string,\n  address: string,\n}\n\nexport async function getLinkedAddress(\n  provider: ethers.providers.EnsProvider, address: string\n): Promise<LinkedAddress | null> {\n  const addressENS = await provider.lookupAddress(address);\n  if (!addressENS) return null;\n\n  const vaultInfo = await (await provider.getResolver(addressENS))?.getText('eip5131:vault');\n  if (!vaultInfo) return null;\n\n  const vaultInfoArray = vaultInfo.split(':');\n  if (vaultInfoArray.length !== 2) {\n    throw new Error('EIP5131: Authkey and vault address not configured correctly.');\n  }\n\n  const [ authKey, vaultAddress ] = vaultInfoArray;\n\n  const vaultENS = await provider.lookupAddress(vaultAddress);\n  if (!vaultENS) {\n    throw new Error(`EIP5131: No ENS domain with reverse record set for vault.`);\n  };\n\n  const expectedSigningAddress = await (\n    await provider.getResolver(vaultENS)\n  )?.getText(`eip5131:${authKey}`);\n\n  if (expectedSigningAddress?.toLowerCase() !== address.toLowerCase()) {\n    throw new Error(`EIP5131: Authentication mismatch.`);\n  };\n\n  return {\n    ens: vaultENS,\n    address: vaultAddress\n  };\n}\n```", "mimetype": "text/plain", "start_char_idx": 9175, "end_char_idx": 9203, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "93538ea9-6016-4f34-a0e9-97f71e7d120f": {"__data__": {"id_": "93538ea9-6016-4f34-a0e9-97f71e7d120f", "embedding": null, "metadata": {"file_path": "ensips/13.md", "file_name": "13.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/13.md", "header_path": "/ENSIP-13: SAFE Authentication For ENS/Rationale/Reference Implementation/", "customer_id": 1, "source_url": "ensips/13.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["EIP-1271", "result", "secure", "conjunction", "method", "cheap", "application", "backend", "specs", "validation", "signature", "could", "contract", "operates"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "65198970a9ab108ebd764aff9cb2c57128dbb826", "node_type": "4", "metadata": {"file_path": "ensips/13.md", "file_name": "13.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/13.md"}, "hash": "e6f265e80c7d760b15438c1e66e1830b5d4b9014870f84135abba34341081fa0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "da336104-0efc-43a1-b812-2b27b9140e87", "node_type": "1", "metadata": {"file_path": "ensips/13.md", "file_name": "13.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/13.md", "header_path": "/ENSIP-13: SAFE Authentication For ENS/Rationale/Reference Implementation/"}, "hash": "a550e39e15428ad9a54be61c54179584ac04ef72bae3c0abf6c93f551bb7ed7c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6c8a6e8a-16b9-417c-91fe-08dbd0759852", "node_type": "1", "metadata": {"header_path": "/ENSIP-13: SAFE Authentication For ENS/Rationale/Reference Implementation/Contract side/"}, "hash": "1d22704765be656d17439ea376c5d7c77b5d44a53769008c69b8cd30cacee521", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "#### Contract side ##### With a backend\n\nIf your application operates a secure backend server, you could run the client/server code above, then use the result in conjunction with specs like [EIP-1271](https://eips.ethereum.org/EIPS/eip-1271) : `Standard Signature Validation Method for Contracts` for a cheap and secure way to validate that the the message signer is indeed authenticated for the main address. ##### Without a backend (JavaScript only)\n\nProvided is a reference implementation for an internal function to verify that the message sender has an authentication link to the main address.\n\n```solidity\n// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/// @author: manifold.xyz\n\n/**\n * ENS Registry Interface\n */\ninterface ENS {\n    function resolver(bytes32 node) external view returns (address);\n}\n\n/**\n * ENS Resolver Interface\n */\ninterface Resolver {\n    function addr(bytes32 node) external view returns (address);\n    function name(bytes32 node) external view returns (string memory);\n    function text(bytes32 node, string calldata key) external view returns (string memory);\n}\n\n/**\n * Validate a signing address is associtaed with a linked address\n */\nlibrary LinkedAddress {\n    /**\n     * Validate that the message sender is an authentication address for mainAddress\n     *\n     * @param ensRegistry    Address of ENS registry\n     * @param mainAddress     The main address we want to authenticate for.\n     * @param mainENSNodeHash The main ENS Node Hash\n     * @param authKey         The TEXT record of the authKey we are using for validation\n     * @param authENSNodeHash The auth ENS Node Hash\n     */\n    function validateSender(\n        address ensRegistry,\n        address mainAddress,\n        bytes32 mainENSNodeHash,\n        string calldata authKey,\n        bytes32 authENSNodeHash\n    ) internal view returns (bool) {\n        return validate(ensRegistry, mainAddress, mainENSNodeHash, authKey, msg.sender, authENSNodeHash);\n    }\n\n    /**\n     * Validate that the authAddress is an authentication address for mainAddress\n     *\n     * @param ensRegistry     Address of ENS registry\n     * @param mainAddress     The main address we want to authenticate for.\n     * @param mainENSNodeHash The main ENS Node Hash\n     * @param authAddress     The address of the authentication wallet\n     * @param authENSNodeHash The auth ENS Node Hash\n     */\n    function validate(\n        address ensRegistry,\n        address mainAddress,\n        bytes32 mainENSNodeHash,\n        string calldata authKey,\n        address authAddress,\n        bytes32 authENSNodeHash\n    ) internal view returns (bool) {\n        _verifyMainENS(ensRegistry, mainAddress, mainENSNodeHash, authKey, authAddress);\n        _verifyAuthENS(ensRegistry, mainAddress, authKey, authAddress, authENSNodeHash);\n\n        return true;\n    }\n\n    // *********************\n    //   Helper Functions\n    // *********************\n    function _verifyMainENS(\n        address ensRegistry,\n        address mainAddress,\n        bytes32 mainENSNodeHash,\n        string calldata authKey,\n        address authAddress\n    ) private view {\n        // Check if the ENS nodes resolve correctly to the provided addresses\n        address mainResolver = ENS(ensRegistry).resolver(mainENSNodeHash);\n        require(mainResolver != address(0), \"Main ENS not registered\");\n        require(mainAddress == Resolver(mainResolver).addr(mainENSNodeHash), \"Main address is wrong\");\n\n        // Verify the authKey TEXT record is set to authAddress by mainENS\n        string memory authText = Resolver(mainResolver).text(mainENSNodeHash, string(abi.encodePacked(\"eip5131:\", authKey)));\n        require(\n            keccak256(bytes(authText)) == keccak256(bytes(_addressToString(authAddress))),\n            \"Invalid auth address\"\n        );\n    }\n\n    function _verifyAuthENS(\n        address ensRegistry,\n        address mainAddress,\n        string memory authKey,\n        address authAddress,\n        bytes32 authENSNodeHash\n    ) private view {\n        // Check if the ENS nodes resolve correctly to the provided addresses\n        address authResolver = ENS(ensRegistry).resolver(authENSNodeHash);\n        require(authResolver != address(0), \"Auth ENS not registered\");\n        require(authAddress == Resolver(authResolver).addr(authENSNodeHash), \"Auth address is wrong\");\n\n        // Verify the TEXT record is appropriately set by authENS\n        string memory vaultText = Resolver(authResolver).text(authENSNodeHash, \"eip5131:vault\");\n        require(\n            keccak256(abi.encodePacked(authKey, \":\", _addressToString(mainAddress))) ==\n                keccak256(bytes(vaultText)),\n            \"Invalid auth text record\"\n        );\n    }\n\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n\n    function sha3HexAddress(address addr) private pure returns (bytes32 ret) {\n        uint256 value = uint256(uint160(addr));\n        bytes memory buffer = new bytes(40);\n        for (uint256 i = 39; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        return keccak256(buffer);\n    }\n\n    function _addressToString(address addr) private pure returns (string memory ptr) {\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            ptr := mload(0x40)\n\n            // Adjust mem ptr and keep 32 byte aligned\n            // 32 bytes to store string length; address is 42 bytes long\n            mstore(0x40, add(ptr, 96))\n\n            // Store (string length, '0', 'x') (42, 48, 120)\n            // Single write by offsetting across 32 byte boundary\n            ptr := add(ptr, 2)\n            mstore(ptr, 0x2a3078)\n\n            // Write string backwards\n            for {\n                // end is at 'x', ptr is at lsb char\n                let end := add(ptr, 31)\n                ptr := add(ptr, 71)\n            } gt(ptr, end) {\n                ptr := sub(ptr, 1)\n                addr := shr(4, addr)\n            } {\n                let v := and(addr, 0xf)\n                // if > 9, use ascii 'a-f' (no conditional required)\n                v := add(v, mul(gt(v, 9), 39))\n                // Add ascii for '0'\n                v := add(v, 48)\n                mstore8(ptr, v)\n            }\n\n            // return ptr to point to length (32 + 2 for '0x' - 1)\n            ptr := sub(ptr, 33)\n        }\n\n        return string(ptr);\n    }\n}\n```", "mimetype": "text/plain", "start_char_idx": 10463, "end_char_idx": 10481, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3adc2230-d0ba-46f9-877d-d4feab39e261": {"__data__": {"id_": "3adc2230-d0ba-46f9-877d-d4feab39e261", "embedding": null, "metadata": {"file_path": "ensips/13.md", "file_name": "13.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/13.md", "header_path": "/ENSIP-13: SAFE Authentication For ENS/", "customer_id": 1, "source_url": "ensips/13.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["considerations", "asset", "purpose", "safer", "ownership", "needed", "security", "control", "assets", "promote", "enhance", "wallet", "authenticate"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "65198970a9ab108ebd764aff9cb2c57128dbb826", "node_type": "4", "metadata": {"file_path": "ensips/13.md", "file_name": "13.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/13.md"}, "hash": "e6f265e80c7d760b15438c1e66e1830b5d4b9014870f84135abba34341081fa0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "638993ea-0072-4601-9839-8c92103ad00c", "node_type": "1", "metadata": {"file_path": "ensips/13.md", "file_name": "13.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/13.md", "header_path": "/ENSIP-13: SAFE Authentication For ENS/Rationale/Reference Implementation/Contract side/"}, "hash": "828e7e065eba07225cb534c8445b90eee2d4f85945cc7856296b2d85f7c9f8ba", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b35ede21-4378-449c-a34e-4b9af0dd5b39", "node_type": "1", "metadata": {"header_path": "/ENSIP-13: SAFE Authentication For ENS/"}, "hash": "6d5ca6ae578a1651ad91caf98db938721d1c8d0c3eeb4c935135ca39b739f845", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Security Considerations\nThe core purpose of this EIP is to enhance security and promote a safer way to authenticate wallet control and asset ownership when the main wallet is not needed and assets held by the main wallet do not need to be moved. Consider it a way to do 'read only' authentication. ## Copyright\nCopyright and related rights waived via [CC0](https://eips.ethereum.org/LICENSE). ---\ndescription: Using the reveal secret as a way to have on chain information about the source of the registration\ncontributors:\n  - aslobodnik\n  - alexvandesande\nensip:\n  status: draft\n  created: 2021-02-07\nignoredRules: [\"missing:motivation\", \"missing:copyright\", \"heading:user-referral-data\", \"heading:privacy-concerns\", \"heading:a-reverse-code-registry\"]\n---", "mimetype": "text/plain", "start_char_idx": 16862, "end_char_idx": 17162, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "541b5ef3-fed9-4fa8-9c00-24badea00ca8": {"__data__": {"id_": "541b5ef3-fed9-4fa8-9c00-24badea00ca8", "embedding": null, "metadata": {"file_path": "ensips/14.md", "file_name": "14.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/14.md", "header_path": "/", "customer_id": 1, "source_url": "ensips/14.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["source", "measure", "reveal", "parameter", "knowing", "abstract", "registration", "using", "about", "secret", "chain", "information", "reasons"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fc127981d6650460d981c8b779d20efcb0c8ea02", "node_type": "4", "metadata": {"file_path": "ensips/14.md", "file_name": "14.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/14.md"}, "hash": "9f68e61cb41c4b5ff8fb75d5d385aab0b4ae80d1b00e019f4e9505e87ed41c68", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8fd5f6d5-30d5-44ab-a6a1-e8a928b402de", "node_type": "1", "metadata": {"file_path": "ensips/14.md", "file_name": "14.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/14.md", "header_path": "/"}, "hash": "86f7fac4f08d76fc13cbc8d82d668a16ad6008b7ba92a41b83b1c345f0b7d06a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "91de164d-ccca-4c0a-9fcb-2e591ca050a9", "node_type": "1", "metadata": {"header_path": "/ENSIP-14: On Chain Source Parameter/"}, "hash": "d14678c7f7977e35599cd664225b7821a991b66887c8c1222f73c5d9fca9e78d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# ENSIP-14: On Chain Source Parameter\n\nUsing the reveal secret as a way to have on chain information about the source of the registration. ## Abstract\n\nWe have many reasons to measure user registration names. Knowing our ecosystem and which apps are popular is essential for identifying the creators who contribute. Retroactive funding via grants is often better than proactive funding, as it allows us to detect what has already worked, rather than relying on guesses. This community often sees unexpected successes that we can't predict.\n\nAt the same time, it's important to make the process transparent, open source, and privacy-preserving. Source data would also help create referral programs.", "mimetype": "text/plain", "start_char_idx": 365, "end_char_idx": 503, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "45d9d141-093f-4c2e-be11-d3bbe57d24cf": {"__data__": {"id_": "45d9d141-093f-4c2e-be11-d3bbe57d24cf", "embedding": null, "metadata": {"file_path": "ensips/14.md", "file_name": "14.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/14.md", "header_path": "/ENSIP-14: On Chain Source Parameter/", "customer_id": 1, "source_url": "ensips/14.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["final", "random", "controller", "registrar", "parameter", "registration", "before", "secret", "takes", "obscures", "bytes", "process", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fc127981d6650460d981c8b779d20efcb0c8ea02", "node_type": "4", "metadata": {"file_path": "ensips/14.md", "file_name": "14.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/14.md"}, "hash": "9f68e61cb41c4b5ff8fb75d5d385aab0b4ae80d1b00e019f4e9505e87ed41c68", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "91de164d-ccca-4c0a-9fcb-2e591ca050a9", "node_type": "1", "metadata": {"file_path": "ensips/14.md", "file_name": "14.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/14.md", "header_path": "/ENSIP-14: On Chain Source Parameter/"}, "hash": "8953da56ac21cf20462f05406396dbc66eafef03e51261c7d0beaf8694fd00ca", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d61f1885-e2de-44a9-999e-b91069d8ee09", "node_type": "1", "metadata": {"header_path": "/ENSIP-14: On Chain Source Parameter/"}, "hash": "d38ee6b6442dd4c1a1c3eed350c6b028702d0fc303ec668c4f36aeb9aead53e1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\nThe ETH Registrar Controller takes a random secret as part of its input. This secret parameter is random data that obscures the name before the final step of the registration process is complete. It is 32 bytes of entropy and the ens manager app on app.ens.domains generates it by calling `require('crypto').randomBytes(32)`.\n\nThis proposal suggests a social convention that generates the secret from a combination of the first **4 bytes of the namehash**, plus another **4 bytes for user referrals**, combined with the appropriate number of random bytes.\n\nIn hex formatted string it means that the first 8 chars of the secret would be the platform name and the next 8 would be used as an identifier of the user referral. For example, if the above was registered via ensfairy, the secret would be:\n\n> 0x **1b7f8b3c** **612c63bc** c635528d3b7196bc89d13566c1be2068af0cad6fb3ecebf0\n> \n\nWith this, we can attribute registrations using the first 16 chars of the secret. The loss of entropy of 64 bits is not relevant, since the only goal of the secret is to obscure the details of the bid to avoid front-running during the short period (usually a few minutes, but it could be as long as a week) before the reveal transaction is executed. The secret still retains 192 bits, which is highly secure, especially for such a short time frame.", "mimetype": "text/plain", "start_char_idx": 1065, "end_char_idx": 2414, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d61f1885-e2de-44a9-999e-b91069d8ee09": {"__data__": {"id_": "d61f1885-e2de-44a9-999e-b91069d8ee09", "embedding": null, "metadata": {"file_path": "ensips/14.md", "file_name": "14.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/14.md", "header_path": "/ENSIP-14: On Chain Source Parameter/", "customer_id": 1, "source_url": "ensips/14.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["accept", "scheme", "anyone", "start", "wants", "makers", "registration", "ensip", "empower", "standard", "referral", "conforms", "similar", "should"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fc127981d6650460d981c8b779d20efcb0c8ea02", "node_type": "4", "metadata": {"file_path": "ensips/14.md", "file_name": "14.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/14.md"}, "hash": "9f68e61cb41c4b5ff8fb75d5d385aab0b4ae80d1b00e019f4e9505e87ed41c68", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "45d9d141-093f-4c2e-be11-d3bbe57d24cf", "node_type": "1", "metadata": {"file_path": "ensips/14.md", "file_name": "14.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/14.md", "header_path": "/ENSIP-14: On Chain Source Parameter/"}, "hash": "066a0a04f9fc7e90ebaf805a71f303dad783aebfb97310f46be73515794a9a57", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3dbb9ec6-e3fd-4c2a-96e5-7d5f2b7d1a1e", "node_type": "1", "metadata": {"header_path": "/ENSIP-14: On Chain Source Parameter/"}, "hash": "43d973a4befeeff77c678f1a455655b7643239aa90813f42f34d6ee02c3bcee2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## User Referral Data\n\nThe goal of this ENSIP is to empower app makers and anyone who wants to start a registration campaign. Any app that conforms to this standard should accept a referral link in the form of `?ensref=12345678` (or a similar scheme for mobile apps and other platforms). When a new user arrives at the site via a referral code, the platform should try to remember the user if they later register an ENS name, by appending the code to the platform code, followed by the rest of the secret. Standard cookie and private data regulations apply. While we encourage users to derive their code from a namehash, any random code should be accepted.\n\nThe extra data can be used in this example:\n\n- Alice refers Bob to an ENS registrar app using a custom link like `app.ens.domains/?ensref=deadbeef`\n- If Bob clicks the link, the information is saved on the cookies/local storage (until it's overwritten by another referral code, Bob clears his memory, or the code expires).\n- Later, Bob wants to register a name; the secret will be prepended by the first 8 letters of the platform, followed by the code provided by Alice.\n\nThis allows individuals who don't own a name registrar app, but have their own audience, to have a cross-registrar referral, which registrars can choose to share revenue with.", "mimetype": "text/plain", "start_char_idx": 2416, "end_char_idx": 3721, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3dbb9ec6-e3fd-4c2a-96e5-7d5f2b7d1a1e": {"__data__": {"id_": "3dbb9ec6-e3fd-4c2a-96e5-7d5f2b7d1a1e", "embedding": null, "metadata": {"file_path": "ensips/14.md", "file_name": "14.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/14.md", "header_path": "/ENSIP-14: On Chain Source Parameter/", "customer_id": 1, "source_url": "ensips/14.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["concerns", "reveal", "makes", "action", "using", "could", "public", "which", "privacy", "users", "friends", "information", "register", "demographic"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fc127981d6650460d981c8b779d20efcb0c8ea02", "node_type": "4", "metadata": {"file_path": "ensips/14.md", "file_name": "14.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/14.md"}, "hash": "9f68e61cb41c4b5ff8fb75d5d385aab0b4ae80d1b00e019f4e9505e87ed41c68", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d61f1885-e2de-44a9-999e-b91069d8ee09", "node_type": "1", "metadata": {"file_path": "ensips/14.md", "file_name": "14.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/14.md", "header_path": "/ENSIP-14: On Chain Source Parameter/"}, "hash": "9f3226bb3744f1a125b2933ab51b0318670ed7e3dca22f3a884c7b3fa43e6d06", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "02c074ab-373d-4dcd-9f33-34b08a6732c8", "node_type": "1", "metadata": {"header_path": "/ENSIP-14: On Chain Source Parameter/"}, "hash": "3dd3e041aa41ad63c0f04ff583cea2027dd2d6ba9968ef0bbe86c733fb8b120e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Privacy Concerns\n\nThis action makes it public which apps users are using to register names, and may reveal who they are friends with or who they follow. It could also reveal some demographic information about accounts - if a registrar app is known to be popular in a certain country or to only have a UI in a certain language, it can indicate that a specific Ethereum address might be from that demographic. This is not unlike seeing a user send funds to a known exchange address.\n\nTo address these concerns, we ask app makers to make the process transparent and allow users to opt-out of either the referral code or the whole platform code being added to their secret.\n\nThis would also enable comparison of different clients' usage - again, this is by design. If a given platform doesn't want any of their numbers to be public, they can simply not implement it.", "mimetype": "text/plain", "start_char_idx": 3723, "end_char_idx": 4588, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "02c074ab-373d-4dcd-9f33-34b08a6732c8": {"__data__": {"id_": "02c074ab-373d-4dcd-9f33-34b08a6732c8", "embedding": null, "metadata": {"file_path": "ensips/14.md", "file_name": "14.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/14.md", "header_path": "/ENSIP-14: On Chain Source Parameter/", "customer_id": 1, "source_url": "ensips/14.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["multiple", "simply", "needed", "since", "reverse", "these", "registry", "sense", "derived", "names", "source", "registrars", "could", "forks"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fc127981d6650460d981c8b779d20efcb0c8ea02", "node_type": "4", "metadata": {"file_path": "ensips/14.md", "file_name": "14.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/14.md"}, "hash": "9f68e61cb41c4b5ff8fb75d5d385aab0b4ae80d1b00e019f4e9505e87ed41c68", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3dbb9ec6-e3fd-4c2a-96e5-7d5f2b7d1a1e", "node_type": "1", "metadata": {"file_path": "ensips/14.md", "file_name": "14.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/14.md", "header_path": "/ENSIP-14: On Chain Source Parameter/"}, "hash": "f22dcc29b9face71991b23f7facc9ee1283334d937b43b7fc9778544e113f0d8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## A Reverse Code Registry\n\nSince the source code is derived from the namehash, it's not reversible. Therefore, some sort of registry of names is needed to make sense of these names. Such registrars could be made on-chain or simply be a git text file with multiple forks across many repos. A registrar definition is outside the scope of this ENSIP, as if the ground truth was on-chain it would be relatively easy to game.\n\nWith a purely random number, it would take about 30,000 registrants to create a 10% chance of an accidental collision, and by 77,163 codes that chance increases to 50%. This means it should be quite rare for an accidental collision to happen, but it is still trivial to create such a collision or to spam a registry. Therefore, instead of trying to play the security cat and mouse game, we would rather leave the \"truth\" of the codes to their usage. If someone is using them to create a ranking website or launch a referral program, each should simply exercise common sense to maintain their own copy of the registry for the very top of the ranking, where it should be easier to disambiguate.", "mimetype": "text/plain", "start_char_idx": 4590, "end_char_idx": 5705, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fc521f2f-4b9f-4934-9414-8c63d98e8d16": {"__data__": {"id_": "fc521f2f-4b9f-4934-9414-8c63d98e8d16", "embedding": null, "metadata": {"file_path": "ensips/15.md", "file_name": "15.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/15.md", "header_path": "/", "customer_id": 1, "source_url": "ensips/15.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ethereum", "service", "abstract", "standardizes", "process", "record", "avatar", "draft", "ensip", "standard", "normalization", "adraffy", "storage"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e4e517529d67eefc9e4cd7181dcbed90c43d4cd7", "node_type": "4", "metadata": {"file_path": "ensips/15.md", "file_name": "15.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/15.md"}, "hash": "cec2ff1a7b012f8991e9a6046d0f5d95f75f706c63b0b3a4df64c9bbc6136640", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "330ca95c-38dd-4904-a679-a3ec680c0f9c", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "482b68cb7ae06fb1753b9340e42a9ca6b5a84ae65affcd282f592a32b2ff2856", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: A standard for storage of the avatar text record in ENS.\ncontributors:\n  - adraffy\nensip:\n  status: draft\n  created: 2023-04-03\nignoredRules: [\"heading:description-of-\", \"heading:derivation\", \"heading:appendix:-reference-specifications\", \"heading:appendix:-additional-resources\", \"heading:appendix:-validation-tests\", \"heading:annex:-beautification\"]\n--- # ENSIP-15: ENS Name Normalization Standard ## Abstract\n\nThis ENSIP standardizes Ethereum Name Service (ENS) name normalization process outlined in [ENSIP-1 \u00a7 Name Syntax](./1.md#name-syntax).", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 371, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ce3e5ad8-6134-49d3-a259-c3bfd2c64b7c": {"__data__": {"id_": "ce3e5ad8-6134-49d3-a259-c3bfd2c64b7c", "embedding": null, "metadata": {"file_path": "ensips/15.md", "file_name": "15.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/15.md", "header_path": "/ENSIP-15: ENS Name Normalization Standard/", "customer_id": 1, "source_url": "ensips/15.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["motivation", "finalized", "since", "version", "complex", "emoji", "unicode", "state", "EIP-137", "incorporated", "including", "explicit", "implies", "flavor"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e4e517529d67eefc9e4cd7181dcbed90c43d4cd7", "node_type": "4", "metadata": {"file_path": "ensips/15.md", "file_name": "15.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/15.md"}, "hash": "cec2ff1a7b012f8991e9a6046d0f5d95f75f706c63b0b3a4df64c9bbc6136640", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2efca391-b334-4be3-8492-c7ab228ba58a", "node_type": "1", "metadata": {"file_path": "ensips/15.md", "file_name": "15.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/15.md", "header_path": "/ENSIP-15: ENS Name Normalization Standard/"}, "hash": "d2f7f4becefa32eb1d250670b6c4287b763ea807f21855fbd73b39069a6ce17c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "37a64b8b-4e44-46ae-899b-612137268ddd", "node_type": "1", "metadata": {"header_path": "/ENSIP-15: ENS Name Normalization Standard/"}, "hash": "ee8b28d330bb27e859f3d16cdda9f50227119e646e6c22765b5b0fe6b224d92b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Motivation\n\n* Since [ENSIP-1](./1.md) (originally [EIP-137](https://eips.ethereum.org/EIPS/eip-137)) was finalized in 2016, Unicode has [evolved](https://unicode.org/history/publicationdates.html) from version 8.0.0 to 15.0.0 and incorporated many new characters, including complex emoji sequences. \n* ENSIP-1 does not state the version of Unicode.\n* ENSIP-1 implies but does not state an explicit flavor of IDNA processing. \n* [UTS-46](https://unicode.org/reports/tr46/) is insufficient to normalize emoji sequences. Correct emoji processing is only possible with [UTS-51](https://www.unicode.org/reports/tr51/).\n* Validation tests are needed to ensure implementation compliance.\n* The success of ENS has encouraged spoofing via the following techniques:\n\t1. Insertion of zero-width characters.\n\t1. Using names which normalize differently between algorithms. \n\t1. Using names which appear differently between applications and devices.\n\t1. Substitution of confusable (look-alike) characters.\n\t1. Mixing incompatible scripts.", "mimetype": "text/plain", "start_char_idx": 568, "end_char_idx": 1595, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "37a64b8b-4e44-46ae-899b-612137268ddd": {"__data__": {"id_": "37a64b8b-4e44-46ae-899b-612137268ddd", "embedding": null, "metadata": {"file_path": "ensips/15.md", "file_name": "15.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/15.md", "header_path": "/ENSIP-15: ENS Name Normalization Standard/", "customer_id": 1, "source_url": "ensips/15.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["latest", "living", "stable", "version", "contains", "normalization", "unicode", "should", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e4e517529d67eefc9e4cd7181dcbed90c43d4cd7", "node_type": "4", "metadata": {"file_path": "ensips/15.md", "file_name": "15.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/15.md"}, "hash": "cec2ff1a7b012f8991e9a6046d0f5d95f75f706c63b0b3a4df64c9bbc6136640", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ce3e5ad8-6134-49d3-a259-c3bfd2c64b7c", "node_type": "1", "metadata": {"file_path": "ensips/15.md", "file_name": "15.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/15.md", "header_path": "/ENSIP-15: ENS Name Normalization Standard/"}, "hash": "25faf8b9c9ac904c46d0e4fcaf507b9c0ae0abf90252f8ab5614a5b6e8870a72", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3d9c0da5-cbce-4726-a61e-147e01da4a44", "node_type": "1", "metadata": {"header_path": "/ENSIP-15: ENS Name Normalization Standard/Specification/"}, "hash": "ffd59858490be3985df731f2be1a57a6d3f5e0604818754cdad0354cc6d7033f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\n* Unicode version `16.0.0`\n\t* Normalization is a living specification and should use the latest stable version of Unicode.\n* [`spec.json`](https://github.com/adraffy/ens-normalize.js/blob/main/derive/output/spec.json) contains all [necessary data](#description-of-specjson) for normalization.\n* [`nf.json`](https://github.com/adraffy/ens-normalize.js/blob/main/derive/output/nf.json) contains all [necessary data](#description-of-nfjson) for [Unicode Normalization Forms](https://unicode.org/reports/tr15/) NFC and NFD.", "mimetype": "text/plain", "start_char_idx": 1597, "end_char_idx": 2134, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3d9c0da5-cbce-4726-a61e-147e01da4a44": {"__data__": {"id_": "3d9c0da5-cbce-4726-a61e-147e01da4a44", "embedding": null, "metadata": {"file_path": "ensips/15.md", "file_name": "15.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/15.md", "header_path": "/ENSIP-15: ENS Name Normalization Standard/Specification/", "customer_id": 1, "source_url": "ensips/15.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["complete", "correspond", "string", "sequence", "document", "preferred", "resulting", "defines", "throughout", "input", "composed", "contains", "definitions", "terms", "unicode"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e4e517529d67eefc9e4cd7181dcbed90c43d4cd7", "node_type": "4", "metadata": {"file_path": "ensips/15.md", "file_name": "15.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/15.md"}, "hash": "cec2ff1a7b012f8991e9a6046d0f5d95f75f706c63b0b3a4df64c9bbc6136640", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "37a64b8b-4e44-46ae-899b-612137268ddd", "node_type": "1", "metadata": {"file_path": "ensips/15.md", "file_name": "15.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/15.md", "header_path": "/ENSIP-15: ENS Name Normalization Standard/"}, "hash": "93774c86c939d64d77d3a2559554ceba70b083246edadf590fb2177d40898410", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a3cfe595-bdfb-4819-94ec-f55f25a16f12", "node_type": "1", "metadata": {"header_path": "/ENSIP-15: ENS Name Normalization Standard/Specification/"}, "hash": "81ddd7303fa26f36342ec769d9299058261ef4399dc37ceb22e0a58ed63ef4e5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Definitions\n\n* Terms in **bold** throughout this document correspond with [components of `spec.json`](#description-of-specjson).\n* A string is a sequence of Unicode codepoints.\n\t* Example: `\"abc\"` is `61 62 63`\n* An [Unicode emoji](https://www.unicode.org/reports/tr51/) is a [single entity](https://unicode.org/reports/tr29/#Grapheme_Cluster_Boundaries) composed of one or more codepoints:\n\t* An **Emoji Sequence** is the preferred form of an emoji, resulting from input that [tokenized](#tokenize) into an `Emoji` token.\n\t\t* Example: `\ud83d\udca9\ufe0e\ufe0e [1F4A9]` \u2192 `Emoji[1F4A9 FE0F]`\n\t\t\t* `1F4A9 FE0F` is the **Emoji Sequence**.\n\t* [`spec.json`](#description-of-specjson) contains the complete [list of valid](https://github.com/adraffy/ens-normalize.js/blob/main/tools/ensip/emoji.md) **Emoji Sequences**.\t\t\n\t\t* [Derivation](#derivation) defines which emoji are normalizable.\n\t\t* Not all Unicode emoji are valid.\n\t\t\t* `\u203c [203C] double exclamation mark` \u2192 *error: Disallowed character*\n\t\t\t* `\ud83c\ude01 [1F201] Japanese \u201chere\u201d button` \u2192 `Text[\"\u30b3\u30b3\"]`\n\t* An **Emoji Sequence** may contain characters that are disallowed:\n\t\t* `\ud83d\udc69\u200d\u2764\ufe0f\u200d\ud83d\udc68 [1F469 200D 2764 FE0F 200D 1F468] couple with heart: woman, man` \u2014 contains ZWJ\n\t\t* `#\ufe0f\u20e3 [23 FE0F 20E3] keycap: #` \u2014 contains `23 (#)`\n\t\t* `\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc65\udb40\udc6e\udb40\udc67\udb40\udc7f [1F3F4 E0067 E0062 E0065 E006E E0067 E007F]` \u2014 contains `E00XX`\n\t* An **Emoji Sequence** may contain other emoji:\n\t\t* Example: `\u2764\ufe0f [2764 FE0F] red heart` is a substring of `\u2764\ufe0f\u200d\ud83d\udd25 [2764 FE0F 200D 1F525] heart on fire` \n\t* Single-codepoint emoji may have various [presentation styles](https://www.unicode.org/reports/tr51/#Presentation_Style) on input:\n\t\t* Default: `\u2764 [2764]`\n\t\t* Text: `\u2764\ufe0e [2764 FE0E]`\n\t\t* Emoji: `\u2764\ufe0f [2764 FE0F]`\n\t* However, these all [tokenize](#tokenize) to the same **Emoji Sequence**.\n\t* All **Emoji Sequence** have explicit emoji-presentation.\n\t* The convention of ignoring presentation is difficult to change because:\n\t\t* Presentation characters (`FE0F` and `FE0E`) are **Ignored**\n\t \t* [ENSIP-1](./1.md) did not treat emoji differently from text\n\t\t* Registration hashes are immutable\n\t* [Beautification](#annex-beautification) can be used to restore emoji-presentation in normalized names.", "mimetype": "text/plain", "start_char_idx": 2136, "end_char_idx": 4310, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a3cfe595-bdfb-4819-94ec-f55f25a16f12": {"__data__": {"id_": "a3cfe595-bdfb-4819-94ec-f55f25a16f12", "embedding": null, "metadata": {"file_path": "ensips/15.md", "file_name": "15.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/15.md", "header_path": "/ENSIP-15: ENS Name Normalization Standard/Specification/", "customer_id": 1, "source_url": "ensips/15.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["normalization", "multiple", "algorithm", "produces", "process", "times", "canonicalizing", "trailing", "trimmed", "before", "applying", "leading", "whitespace", "should"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e4e517529d67eefc9e4cd7181dcbed90c43d4cd7", "node_type": "4", "metadata": {"file_path": "ensips/15.md", "file_name": "15.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/15.md"}, "hash": "cec2ff1a7b012f8991e9a6046d0f5d95f75f706c63b0b3a4df64c9bbc6136640", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3d9c0da5-cbce-4726-a61e-147e01da4a44", "node_type": "1", "metadata": {"file_path": "ensips/15.md", "file_name": "15.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/15.md", "header_path": "/ENSIP-15: ENS Name Normalization Standard/Specification/"}, "hash": "8ca3bba4a660bb0d5ec7c844fbc3d6edf666d430b62cff9476190db931d40b0c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c4c1776c-cfe9-41a7-942d-4e2318ca6af5", "node_type": "1", "metadata": {"header_path": "/ENSIP-15: ENS Name Normalization Standard/Specification/"}, "hash": "01eb7d29b128ce697298a24d5c8199f9b8d51f4b965d80b578abe1cac68adcba", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Algorithm\n\n* Normalization is the process of canonicalizing a name before for [hashing](./1.md#namehash-algorithm).\n* It is idempotent: applying normalization multiple times produces the same result.\n* For user convenience, leading and trailing whitespace should be trimmed before normalization, as all whitespace codepoints are disallowed.  Inner characters should remain unmodified.\n* No string transformations (like case-folding) should be applied.\n\n1. [Split](#split) the name into [labels](./1.md#name-syntax).\n1. [Normalize](#normalize) each label.\n1. [Join](#join) the labels together into a name again.", "mimetype": "text/plain", "start_char_idx": 4313, "end_char_idx": 4927, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c4c1776c-cfe9-41a7-942d-4e2318ca6af5": {"__data__": {"id_": "c4c1776c-cfe9-41a7-942d-4e2318ca6af5", "embedding": null, "metadata": {"file_path": "ensips/15.md", "file_name": "15.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/15.md", "header_path": "/ENSIP-15: ENS Name Normalization Standard/Specification/", "customer_id": 1, "source_url": "ensips/15.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["check", "additional", "normalize", "valid", "tokens", "apply", "presented", "state", "transform", "there", "obtain", "strip", "cannot", "label"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e4e517529d67eefc9e4cd7181dcbed90c43d4cd7", "node_type": "4", "metadata": {"file_path": "ensips/15.md", "file_name": "15.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/15.md"}, "hash": "cec2ff1a7b012f8991e9a6046d0f5d95f75f706c63b0b3a4df64c9bbc6136640", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a3cfe595-bdfb-4819-94ec-f55f25a16f12", "node_type": "1", "metadata": {"file_path": "ensips/15.md", "file_name": "15.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/15.md", "header_path": "/ENSIP-15: ENS Name Normalization Standard/Specification/"}, "hash": "9b5c10d4f39d22341815d9826192ab8a6dbc293493fd04dd464cf8581fd041ee", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "36685bb9-75aa-4d89-b540-eed18a172990", "node_type": "1", "metadata": {"header_path": "/ENSIP-15: ENS Name Normalization Standard/Specification/"}, "hash": "6068056af2e5ce0a9114019a812cf7b1d0dc7109d08c56983a75709d957bd027", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Normalize\n\n1. [Tokenize](#tokenize) \u2014 transform the label into `Text` and `Emoji` tokens.\n\t* If there are no tokens, the label cannot be normalized.\n1. Apply [NFC](https://unicode.org/reports/tr15/#Norm_Forms) to each `Text` token.\n\t* Example: `Text[\"a\u0300\"]` \u2192 `[61 300] \u2192 [E0]` \u2192 `Text[\"\u00e0\"]`\n1. Strip `FE0F` from each `Emoji` token.\n1. [Validate](#validate) \u2014 check if the tokens are valid and obtain the **Label Type**.\n\t* The **Label Type** and **Restricted** state may be presented to user for additional security.\n1. Concatenate the tokens together.\n\t* Return the normalized label.\n\nExamples:\n\n1. `\"_$A\" [5F 24 41]` \u2192 `\"_$a\" [5F 24 61]` \u2014 *ASCII*\n1. `\"E\ufe0e\u0303\" [45 FE0E 303]` \u2192 `\"\u1ebd\" [1EBD]` \u2014 *Latin*\n1. `\"\ud80c\udd8f\ud83d\udc38\" [1318F 1F438]` \u2192 `\"\ud80c\udd8f\ud83d\udc38\" [1318F 1F438]` \u2014 *Restricted: Egyp*\n1. `\"n\u0131\u0307ck\" [6E 131 307 63 6B]` \u2192 *error: Disallowed character*", "mimetype": "text/plain", "start_char_idx": 4929, "end_char_idx": 5764, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "36685bb9-75aa-4d89-b540-eed18a172990": {"__data__": {"id_": "36685bb9-75aa-4d89-b540-eed18a172990", "embedding": null, "metadata": {"file_path": "ensips/15.md", "file_name": "15.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/15.md", "header_path": "/ENSIP-15: ENS Name Normalization Standard/Specification/", "customer_id": 1, "source_url": "ensips/15.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["complete", "payload", "remaining", "tokenize", "matches", "types", "convert", "allocate", "longest", "1f3fb", "found", "empty", "codepoint", "character", "label"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e4e517529d67eefc9e4cd7181dcbed90c43d4cd7", "node_type": "4", "metadata": {"file_path": "ensips/15.md", "file_name": "15.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/15.md"}, "hash": "cec2ff1a7b012f8991e9a6046d0f5d95f75f706c63b0b3a4df64c9bbc6136640", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c4c1776c-cfe9-41a7-942d-4e2318ca6af5", "node_type": "1", "metadata": {"file_path": "ensips/15.md", "file_name": "15.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/15.md", "header_path": "/ENSIP-15: ENS Name Normalization Standard/Specification/"}, "hash": "7ccf5caf1e97ab86af88cff091a3ff0c318b261633f1343247d29885ddf5d2d5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "69d132f8-e263-4232-8b75-aac9085676c0", "node_type": "1", "metadata": {"header_path": "/ENSIP-15: ENS Name Normalization Standard/Specification/"}, "hash": "91ee23c66e5c59e66af792e60b20998fbdd9fa201b1678aedc75e87620669637", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Tokenize\n\nConvert a label into a list of `Text` and `Emoji` tokens, each with a payload of codepoints.  The complete list of character types and [emoji sequences](#appendix-additional-resources) can be found in [`spec.json`](#description-of-specjson).  \n\n1. Allocate an empty codepoint buffer.\n1. Find the longest **Emoji Sequence** that matches the remaining input.\n\t* Example: `\ud83d\udc68\ud83c\udffb\u200d\ud83d\udcbb [1F468 1F3FB 200D 1F4BB]`\n\t\t* Match (1): `\ud83d\udc68\ufe0f [1F468] man` \n\t\t* Match (2): `\ud83d\udc68\ud83c\udffb [1F468 1F3FB] man: light skin tone`\n\t\t* Match (4): `\ud83d\udc68\ud83c\udffb\u200d\ud83d\udcbb [1F468 1F3FB 200D 1F4BB] man technologist: light skin tone` \u2014 longest match!\n\t* `FE0F` is optional from the input during matching.\n\t\t* Example: `\ud83d\udc68\u200d\u2764\ufe0f\u200d\ud83d\udc68 [1F468 200D 2764 FE0F 200D 1F468]`\n\t\t\t* Match: `1F468 200D 2764 FE0F 200D 1F468` \u2014 fully-qualified\n\t\t\t* Match: `1F468 200D 2764 200D 1F468` \u2014 missing `FE0F`\n\t\t\t* No match: `1F468 FE0F 200D 2764 FE0F 200D 1F468` \u2014 extra `FE0F`\n\t\t\t* No match: `1F468 200D 2764 FE0F FE0F 200D 1F468` \u2014 has (2) `FE0F`\n\t* This is equivalent to `/^(emoji1|emoji2|...)/` where `\\uFE0F` is replaced with `\\uFE0F?` and `*` is replaced with `\\x2A`.\n1. If an **Emoji Sequence** is found:\n\t* If the buffer is nonempty, emit a `Text` token, and clear the buffer.\n\t* Emit an `Emoji` token with the fully-qualified matching sequence.\n\t* Remove the matched sequence from the input.\n1. Otherwise:\n\t1. Remove the leading codepoint from the input.\n\t1. Determine the character type:\n\t\t* If **Valid**, append the codepoint to the buffer.\n\t\t\t* This set can be precomputed from the union of characters in all groups and their NFD decompositions.\n\t\t* If **Mapped**, append the corresponding mapped codepoint(s) to the buffer.\n\t\t* If **Ignored**, do nothing.\n\t\t* Otherwise, the label cannot be normalized.\n1. Repeat until all the input is consumed.\n1. If the buffer is nonempty, emit a final `Text` token with its contents.\n\t* Return the list of emitted tokens.\n\nExamples:\n\n1. `\"xyz\ud83d\udc68\ud83c\udffb\" [78 79 7A 1F468 1F3FB]` \u2192 `Text[\"xyz\"]` + `Emoji[\"\ud83d\udc68\ud83c\udffb\"]`\n1. `\"A\ud83d\udca9\ufe0e\ufe0eb\" [41 FE0E 1F4A9 FE0E FE0E 62]` \u2192 `Text[\"a\"]` + `Emoji[\"\ud83d\udca9\ufe0f\"]` + `Text[\"b\"]`\n1. `\"a\u2122\ufe0f\" [61 2122 FE0F]` \u2192 `Text[\"atm\"]`", "mimetype": "text/plain", "start_char_idx": 5766, "end_char_idx": 7869, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "69d132f8-e263-4232-8b75-aac9085676c0": {"__data__": {"id_": "69d132f8-e263-4232-8b75-aac9085676c0", "embedding": null, "metadata": {"file_path": "ensips/15.md", "file_name": "15.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/15.md", "header_path": "/ENSIP-15: ENS Name Normalization Standard/Specification/", "customer_id": 1, "source_url": "ensips/15.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["characters", "valid", "determine", "occur", "single", "assertion", "validate", "given", "token", "return", "cannot", "every", "ascii", "label"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e4e517529d67eefc9e4cd7181dcbed90c43d4cd7", "node_type": "4", "metadata": {"file_path": "ensips/15.md", "file_name": "15.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/15.md"}, "hash": "cec2ff1a7b012f8991e9a6046d0f5d95f75f706c63b0b3a4df64c9bbc6136640", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "36685bb9-75aa-4d89-b540-eed18a172990", "node_type": "1", "metadata": {"file_path": "ensips/15.md", "file_name": "15.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/15.md", "header_path": "/ENSIP-15: ENS Name Normalization Standard/Specification/"}, "hash": "acb1bb8413f125dc701fc22543287dd5399f6e7452fe42a3511177cd53b487f1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9dd1b536-345b-4de3-a75d-8e269975beb0", "node_type": "1", "metadata": {"header_path": "/ENSIP-15: ENS Name Normalization Standard/Specification/"}, "hash": "ab617cbcff1c904876cffc59fb00483661859c84c0bbe08be23dbb59aa57bf53", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Validate\n\nGiven a list of `Emoji` and `Text` tokens, determine if the label is valid and return the **Label Type**.  If any assertion fails, the name cannot be normalized.\n\n1. If only `Emoji` tokens:\n\t* Return `\"Emoji\"`\n1. If a single `Text` token and every characters is ASCII (`00..7F`):\n\t* `5F (_) LOW LINE` can only occur at the start.\n\t\t* Must match `/^_*[^_]*$/`\n\t\t* Examples: `\"___\"` and `\"__abc\"` are valid, `\"abc__\"` and `\"_abc_\"` are invalid.\n\t* The 3rd and 4th characters must not both be `2D (-) HYPHEN-MINUS`.\n\t\t* Must not match `/^..--/`\n\t\t* Examples: `\"ab-c\"` and `\"---a\"`are valid, `\"xn--\"` and `----` are invalid.\n\t* Return `\"ASCII\"`\n\t\t* The label is free of **Fenced** and **Combining Mark** characters, and not confusable.\n1. Concatenate all the tokens together.\n\t* `5F (_) LOW LINE` can only occur at the start.\n\t* The first and last characters cannot be **Fenced**.\n\t\t* Examples: `\"a\u2019s\"` and `\"a\u30fba\"` are valid, `\"\u201985\"` and `\"joneses\u2019\"` and `\"\u30fba\u30fb\"` are invalid.\n\t* **Fenced** characters cannot be contiguous.\n\t\t* Examples: `\"a\u30fba\u2019s\"` is valid, `\"6\u20190\u2019\u2019\"` and `\"a\u30fb\u30fba\"` are invalid.\n1. The first character of every `Text` token must not be a **Combining Mark**.\n1. Concatenate the `Text` tokens together.\n1. Find the first **Group** that contain every text character:\n\t* If no group is found, the label cannot be normalized.\n1. If the group is not **CM Whitelisted**:\n\t* Apply NFD to the concatenated text characters.\n\t* For every contiguous sequence of **NSM** characters:\n\t\t* Each character must be unique.\n\t\t\t* Example: `\"x\u0300\u0300\" [78 300 300]` has (2) grave accents.\n\t\t* The number of **NSM** characters cannot exceed **Maximum NSM** (4).\n\t\t\t* Example: ` \"\u0627\u0655\u0610\u0611\u0612\u0613\u0614\"\u200e [625 610 611 612 613 614]` has (6) **NSM**.\n1. [Wholes](#wholes) \u2014 check if text characters form a confusable.\n1. The label is valid.\n\t* Return the name of the group as the **Label Type**.\n\nExamples:\n\n1. `Emoji[\"\ud83d\udca9\ufe0f\"]` + `Emoji[\"\ud83d\udca9\ufe0f\"]` \u2192 `\"Emoji\"`\n1. `Text[\"abc$123\"]` \u2192 `\"ASCII\"`\n1. `Emoji[\"\ud83d\ude80\ufe0f\"]` + `Text[\"\u00e0\"]` \u2192 `\"Latin\"`", "mimetype": "text/plain", "start_char_idx": 7871, "end_char_idx": 9878, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9dd1b536-345b-4de3-a75d-8e269975beb0": {"__data__": {"id_": "9dd1b536-345b-4de3-a75d-8e269975beb0", "embedding": null, "metadata": {"file_path": "ensips/15.md", "file_name": "15.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/15.md", "header_path": "/ENSIP-15: ENS Name Normalization Standard/Specification/", "customer_id": 1, "source_url": "ensips/15.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["complete", "characters", "valid", "alternative", "constructed", "wholes", "different", "using", "found", "character", "confusing", "where", "label"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e4e517529d67eefc9e4cd7181dcbed90c43d4cd7", "node_type": "4", "metadata": {"file_path": "ensips/15.md", "file_name": "15.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/15.md"}, "hash": "cec2ff1a7b012f8991e9a6046d0f5d95f75f706c63b0b3a4df64c9bbc6136640", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "69d132f8-e263-4232-8b75-aac9085676c0", "node_type": "1", "metadata": {"file_path": "ensips/15.md", "file_name": "15.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/15.md", "header_path": "/ENSIP-15: ENS Name Normalization Standard/Specification/"}, "hash": "e55a859209c10b22965fbf66f9c834b66dad25307fd73f26453e677fbb6741ac", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0fba014f-7a15-4dde-8330-57453fc070c7", "node_type": "1", "metadata": {"header_path": "/ENSIP-15: ENS Name Normalization Standard/Specification/"}, "hash": "7e8f7a25fb3a831b7444b31bc8985c8d692724e9b5690a28c9dae304ab3675f4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Wholes\n\nA label is [whole-script confusable](https://unicode.org/reports/tr39/#def_whole_script_confusables) if a similarly-looking valid label can be constructed using one alternative character from a different group.  The complete list of **Whole Confusables** can be found in [`spec.json`](#description-of-specjson).  Each **Whole Confusable** has a set of non-confusing characters (`\"valid\"`) and a set of confusing characters (`\"confused\"`) where each character may be the member of one or more groups.\n\nExample: **Whole Confusable** for `\"g\"`\n\n| Type | Code | Form | Character  | Latn | Hani | Japn | Kore | Armn | Cher | Lisu |\n| :-: | -: | :-: | :- | :-: | :-: | :-: | :-: | :-: | :-: | :-: |\n| valid | `67` | `g` | LATIN SMALL LETTER G | A | A | A | A |\n| confused | `581` | `\u0581` | ARMENIAN SMALL LETTER CO  | | | | | B | \n| confused | `13C0` | `\u13c0` | CHEROKEE LETTER NAH  | | | | | | C | \n| confused | `13F3` | `\u13f3` | CHEROKEE LETTER YU  |\t| | | | | C |\n| confused |  `A4D6` | `\ua4d6` | LISU LETTER GA | | | | | | | D |\n\n1. Allocate an empty character buffer.\n1. Start with the set of **ALL** groups.\n1. For each unique character in the label:\n\t* If the character is **Confused** (a member of a **Whole Confusable**):\n\t\t* Retain groups with **Whole Confusable** characters excluding the **Confusable Extent** of the matching **Confused** character.\n\t\t* If no groups remain, the label is not confusable.\n\t\t* The **Confusable Extent** is the fully-connected graph formed from different groups with the same confusable and different confusables of the same group.\n\t\t\t* The mapping from **Confused** to **Confusable Extent** can be precomputed.\n\t\t* In the table above, **Whole Confusable** for `\"g\"`, the rectangle formed by each capital letter is a **Confusable Extent**:\n\t\t\t* `A` is [`g`] \u2297 [*Latin*, *Han*, *Japanese*, *Korean*]\n\t\t\t* `B` is [`\u0581`] \u2297 [*Armn*]\n\t\t\t* `C` is [`\u13c0`, `\u13f3`] \u2297 [*Cher*]\n\t\t\t* `D` is [`\ua4d6`] \u2297 [*Lisu*]\n\t\t* A **Confusable Extent** can span multiple characters and multiple groups.  Consider the (incomplete) **Whole Confusable** for `\"o\"`:\n\t\t\t* `6F (o) LATIN SMALL LETTER O` \u2192 *Latin*, *Han*, *Japanese*, and *Korean*\n\t\t\t* `3007 (\u3007) IDEOGRAPHIC NUMBER ZERO` \u2192 *Han*, *Japanese*, *Korean*, and *Bopomofo*\n\t\t\t* **Confusable Extent** is [`o`, `\u3007`] \u2297 [*Latin*, *Han*, *Japanese*, *Korean*, *Bopomofo*]\n\t* If the character is **Unique**, the label is not confusable.\n\t\t* This set can be precomputed from characters that appear in exactly one group and are not **Confused**.\n\t* Otherwise:\n\t\t* Append the character to the buffer.\n1. If any **Confused** characters were found:\n\t* If there are no buffered characters, the label is confusable.\n\t* If any of the remaining groups contain all of the buffered characters, the label is confusable.\n\t* Example: `\"0\u0445\" [30 445]`\n\t\t1. `30 (0) DIGIT ZERO`\n\t\t\t* Not **Confused** or **Unique**, add to buffer.\n\t\t1. `445 (\u0445) CYRILLIC SMALL LETTER HA`\n\t\t\t* **Confusable Extent** is [`\u0445`, `4B3 (\u04b3) CYRILLIC SMALL LETTER HA WITH DESCENDER`] \u2297 [*Cyrillic*]\n\t\t\t* **Whole Confusable** excluding the extent is [`78 (x) LATIN SMALL LETTER X`, ...] \u2192 [*Latin*, ...]\n\t\t\t* Remaining groups: **ALL** \u2229 [*Latin*, ...] \u2192 [*Latin*, ...]\n\t\t1. There was (1) buffered character:\n\t\t\t* *Latin* also contains `30` \u2192 `\"0x\" [30 78]`\n\t\t1. The label is confusable.\n1. The label is not confusable.\n\nA label composed of confusable characters isn't necessarily confusable.\n\n* Example: `\"\u0442\u04d5\" [442 4D5]`\n\t1. `442 (\u0442) CYRILLIC SMALL LETTER TE` \n\t\t* **Confusable Extent** is [`\u0442`] \u2297 [*Cyrillic*]\n\t\t* **Whole Confusable** excluding the extent is [`3C4 (\u03c4) GREEK SMALL LETTER TAU`] \u2192 [*Greek*]\n\t\t* Remaining groups: **ALL** \u2229 [*Greek*] \u2192 [*Greek*]\n\t1. `4D5 (\u04d5) CYRILLIC SMALL LIGATURE A IE`\n\t\t* **Confusable Extent** is [`\u04d5`] \u2297 [*Greek*]\n\t\t* **Whole Confusable** excluding the extent is [`E6 (\u00e6) LATIN SMALL LETTER AE`] \u2192 [*Latin*]\n\t\t* Remaining groups: [*Greek*] \u2229 [*Latin*] \u2192 \u2205\n\t1. No groups remain so the label is not confusable.", "mimetype": "text/plain", "start_char_idx": 9880, "end_char_idx": 13829, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0fba014f-7a15-4dde-8330-57453fc070c7": {"__data__": {"id_": "0fba014f-7a15-4dde-8330-57453fc070c7", "embedding": null, "metadata": {"file_path": "ensips/15.md", "file_name": "15.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/15.md", "header_path": "/ENSIP-15: ENS Name Normalization Standard/Specification/", "customer_id": 1, "source_url": "ensips/15.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["split", "string", "assemble", "description", "inserting", "resulting", "partition", "separated", "empty", "return", "array", "between", "labels"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e4e517529d67eefc9e4cd7181dcbed90c43d4cd7", "node_type": "4", "metadata": {"file_path": "ensips/15.md", "file_name": "15.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/15.md"}, "hash": "cec2ff1a7b012f8991e9a6046d0f5d95f75f706c63b0b3a4df64c9bbc6136640", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9dd1b536-345b-4de3-a75d-8e269975beb0", "node_type": "1", "metadata": {"file_path": "ensips/15.md", "file_name": "15.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/15.md", "header_path": "/ENSIP-15: ENS Name Normalization Standard/Specification/"}, "hash": "b2b6635c265e0459ff9c37114503fef75def53f76e0405b1413908ee9ddacdda", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7ef10a7e-e369-4bcd-89a4-82aaf6a3542d", "node_type": "1", "metadata": {"header_path": "/ENSIP-15: ENS Name Normalization Standard/Specification/"}, "hash": "15b01c6e39c655bfd8c3abd0aa30d55705f05e80946f8b5cd3c05af2a9ff028d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Split\n\n* Partition a name into labels, separated by `2D (.) FULL STOP`, and return the resulting array.\n\t* Example: `\"abc.123.eth\"` \u2192 `[\"abc\", \"123\", \"eth\"]`\n* The empty string is 0-labels: `\"\"` \u2192 `[]` ### Join\n\n* Assemble an array of labels into a name, inserting `2D (.) FULL STOP` between each label, and return the resulting string.\n\t* Example: `[\"abc\", \"123\", \"eth\"]` \u2192 `\"abc.123.eth\"` ## Description of `spec.json`\n\n* **Groups** (`\"groups\"`) \u2014 [groups](#appendix-additional-resources) of characters that can constitute a label\n\t* `\"name\"` \u2014 ASCII name of the group (or abbreviation if **Restricted**)\n\t\t* Examples: *Latin*, *Japanese*, *Egyp*\n\t* **Restricted** (`\"restricted\"`) \u2014 **`true`** if [Excluded](https://www.unicode.org/reports/tr31#Table_Candidate_Characters_for_Exclusion_from_Identifiers) or [Limited-Use](https://www.unicode.org/reports/tr31/#Table_Limited_Use_Scripts) script\n\t\t* Examples: *Latin* \u2192 **`false`**, *Egyp* \u2192 **`true`** \n\t* `\"primary\"` \u2014 subset of characters that define the group\n\t\t* Examples: `\"a\"` \u2192 *Latin*, `\"\u3042\"` \u2192 *Japanese*, `\"\ud80c\udc00\"` \u2192 *Egyp*\n\t* `\"secondary\"` \u2014 subset of characters included with the group\n\t\t* Example: `\"0\"` \u2192 *Common* but mixable with *Latin*\n\t* **CM Whitelist(ed)** (`\"cm\"`) \u2014 (optional) set of allowed compound sequences in NFC\n\t\t* Each compound sequence is a character followed by one or more **Combining Marks**.\n\t\t\t* Example: `\u00e0\u0300\u0300` \u2192 `E0 300 300`\n\t\t* Currently, every group that is **CM Whitelist** has zero compound sequences.\n\t\t* **CM Whitelisted** is effectively **`true`** if `[]` otherwise **`false`**\n* **Ignored** (`\"ignored\"`) \u2014 [characters](#appendix-additional-resources) that are ignored during normalization\n\t* Example: `34F (\ufffd) COMBINING GRAPHEME JOINER`\n* **Mapped** (`\"mapped\"`) \u2014 characters that are mapped to a sequence of **valid** characters\n\t* Example: `41 (A) LATIN CAPITAL LETTER A` \u2192 `[61 (a) LATIN SMALL LETTER A]`\n\t* Example: `2165 (\u2165) ROMAN NUMERAL SIX` \u2192 `[76 (v) LATIN SMALL LETTER V, 69 (i) LATIN SMALL LETTER I]`\n* **Whole Confusable** (`\"wholes\"`) \u2014 groups of characters that look similar\n\t* `\"valid\"` \u2014 subset of confusable characters that are allowed\n\t\t* Example: `34 (4) DIGIT FOUR`\n\t* **Confused** (`\"confused\"`) \u2014 subset of confusable characters that confuse\n\t\t* Example: `13CE (\u13ce) CHEROKEE LETTER SE`\n* **Fenced** (`\"fenced\"`) \u2014 [characters](#appendix-additional-resources) that cannot be first, last, or contiguous\n\t* Example: `2044 (\u2044) FRACTION SLASH`\n* **Emoji Sequence(s)** (`\"emoji\"`) \u2014 valid [emoji sequences](#appendix-additional-resources)\n\t* Example: `\ud83d\udc68\u200d\ud83d\udcbb [1F468 200D 1F4BB] man technologist`\n* **Combining Marks / CM** (`\"cm\"`) \u2014 [characters](#appendix-additional-resources) that are [Combining Marks](https://unicode.org/faq/char_combmark.html)\n* **Non-spacing Marks / NSM** (`\"nsm\"`) \u2014 valid [subset](#appendix-additional-resources) of **CM** with general category (`\"Mn\"` or `\"Me\"`)\n* **Maximum NSM** (`\"nsm_max\"`) \u2014 maximum sequence length of unique **NSM**\n* **Should Escape** (`\"escape\"`) \u2014 [characters](#appendix-additional-resources) that shouldn't be printed\n* **NFC Check** (`\"nfc_check\"`) \u2014 valid [subset](#appendix-additional-resources) of characters that [may require NFC](https://unicode.org/reports/tr15/#NFC_QC_Optimization)", "mimetype": "text/plain", "start_char_idx": 13831, "end_char_idx": 14036, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fcecf74e-ea20-46c2-8a99-0cebc05436c9": {"__data__": {"id_": "fcecf74e-ea20-46c2-8a99-0cebc05436c9", "embedding": null, "metadata": {"file_path": "ensips/15.md", "file_name": "15.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/15.md", "header_path": "/ENSIP-15: ENS Name Normalization Standard/", "customer_id": 1, "source_url": "ensips/15.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["characters", "increasing", "sequence", "description", "applied", "forming", "composition", "exists", "composed", "which", "mapping", "character", "where"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e4e517529d67eefc9e4cd7181dcbed90c43d4cd7", "node_type": "4", "metadata": {"file_path": "ensips/15.md", "file_name": "15.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/15.md"}, "hash": "cec2ff1a7b012f8991e9a6046d0f5d95f75f706c63b0b3a4df64c9bbc6136640", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4ac50cb7-df93-4d45-934d-5ef6c6d1cd44", "node_type": "1", "metadata": {"file_path": "ensips/15.md", "file_name": "15.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/15.md", "header_path": "/ENSIP-15: ENS Name Normalization Standard/"}, "hash": "26dfc3966acc30476de5509ee4bc8c3d241800ee892270eccbc261747d61f031", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c106f80d-1b73-4789-aa10-d08cee4fb664", "node_type": "1", "metadata": {"header_path": "/ENSIP-15: ENS Name Normalization Standard/"}, "hash": "e08c37d57e7c888016985444ff62ecab264c994a7e8e9a993cd6383f60406675", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Description of `nf.json`\n\n* `\"decomp\"` \u2014 [mapping](https://www.unicode.org/reports/tr44/tr44-30.html#Character_Decomposition_Mappings) from a composed character to a sequence of (partially)-decomposed characters\n\t* [`UnicodeData.txt`](https://www.unicode.org/reports/tr44/tr44-30.html#UnicodeData.txt) where `Decomposition_Mapping` exists and does not have a [formatting tag](https://www.unicode.org/reports/tr44/tr44-30.html#Formatting_Tags_Table)\n* `\"exclusions\"` \u2014 set of characters for which the `\"decomp\"` mapping is not applied when forming a composition\n\t* [`CompositionExclusions.txt`](https://www.unicode.org/reports/tr44/tr44-30.html#CompositionExclusions.txt)\n* `\"ranks\"` \u2014 sets of characters with increasing [`Canonical_Combining_Class`](https://www.unicode.org/reports/tr44/tr44-30.html#Canonical_Combining_Class_Values)\n\t* [`UnicodeData.txt`](https://www.unicode.org/reports/tr44/tr44-30.html#UnicodeData.txt) grouped by `Canonical_Combining_Class`\n\t* Class `0` is not included\n* `\"qc\"` \u2014 set of characters with property [`NFC_QC`](https://www.unicode.org/reports/tr44/tr44-30.html#Decompositions_and_Normalization) of value `N` or `M`\n\t* [`DerivedNormalizationProps.txt`](https://www.unicode.org/reports/tr44/tr44-30.html#DerivedNormalizationProps.txt)\n\t* **NFC Check** (from [`spec.json`](#description-of-specjson)) is a subset of this set", "mimetype": "text/plain", "start_char_idx": 17087, "end_char_idx": 18445, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c106f80d-1b73-4789-aa10-d08cee4fb664": {"__data__": {"id_": "c106f80d-1b73-4789-aa10-d08cee4fb664", "embedding": null, "metadata": {"file_path": "ensips/15.md", "file_name": "15.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/15.md", "header_path": "/ENSIP-15: ENS Name Normalization Standard/", "customer_id": 1, "source_url": "ensips/15.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["final", "latin", "greek", "sharp", "letter", "middle", "emoji", "small", "following", "derivation", "width"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e4e517529d67eefc9e4cd7181dcbed90c43d4cd7", "node_type": "4", "metadata": {"file_path": "ensips/15.md", "file_name": "15.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/15.md"}, "hash": "cec2ff1a7b012f8991e9a6046d0f5d95f75f706c63b0b3a4df64c9bbc6136640", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fcecf74e-ea20-46c2-8a99-0cebc05436c9", "node_type": "1", "metadata": {"file_path": "ensips/15.md", "file_name": "15.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/15.md", "header_path": "/ENSIP-15: ENS Name Normalization Standard/"}, "hash": "07c200f437913082943990608ffc4c015af69f13f5524ed7bcdf771fea649de9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8aa39170-c67c-4827-8320-24a4fd4e3da3", "node_type": "1", "metadata": {"header_path": "/ENSIP-15: ENS Name Normalization Standard/"}, "hash": "06ce36a002ca46088173d0391cbe85ccb5da273fb1ee798ae3d15cf5bbd0cab0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Derivation\n\n* [IDNA 2003](https://unicode.org/Public/idna/15.1.0/IdnaMappingTable.txt)\n \t* `UseSTD3ASCIIRules` is **`true`**\n\t* `VerifyDnsLength` is **`false`**\n\t* `Transitional_Processing` is **`false`**\n\t* The following [deviations](https://unicode.org/reports/tr46/#Table_Deviation_Characters) are **valid**:\n\t\t* `DF (\u00df) LATIN SMALL LETTER SHARP S`\n\t\t* `3C2 (\u03c2) GREEK SMALL LETTER FINAL SIGMA`\n\t* `CheckHyphens` is **`false`** ([WHATWG URL Spec \u00a7 3.3](https://url.spec.whatwg.org/#idna))\n\t* `CheckBidi` is **`false`**\n\t* [ContextJ](https://datatracker.ietf.org/doc/html/rfc5892#appendix-A.1):\n\t\t* `200C (\ufffd) ZERO WIDTH NON-JOINER` (ZWNJ) is **disallowed everywhere**.\n\t\t* `200D (\ufffd) ZERO WIDTH JOINER` (ZWJ) is **only allowed** in emoji sequences.\t\n\t* [ContextO](https://datatracker.ietf.org/doc/html/rfc5892#appendix-A.3): \n\t\t* `B7 (\u00b7) MIDDLE DOT` is **disallowed**.\n\t\t* `375 (\u0375) GREEK LOWER NUMERAL SIGN` is **disallowed**.\n\t\t* `5F3 (\u05f3) HEBREW PUNCTUATION GERESH` and `5F4 (\u05f4) HEBREW PUNCTUATION GERSHAYIM` are *Greek*.\n\t\t* `30FB (\u30fb) KATAKANA MIDDLE DOT` is **Fenced** and *Han*, *Japanese*, *Korean*, and *Bopomofo*. \n\t\t* Some [Extended Arabic Numerals](https://en.wikipedia.org/wiki/Arabic_numerals) are **mapped**:\n\t\t\t* `6F0 (\u06f0)` \u2192 `660 (\u0660) ARABIC-INDIC DIGIT ZERO`\n\t\t\t* `6F1 (\u06f1)` \u2192 `661 (\u0661) ARABIC-INDIC DIGIT ONE`\n\t\t\t* `6F2 (\u06f2)` \u2192 `662 (\u0662) ARABIC-INDIC DIGIT TWO`\n\t\t\t* `6F3 (\u06f3)` \u2192 `663 (\u0663) ARABIC-INDIC DIGIT THREE`\n\t\t\t* `6F7 (\u06f7)` \u2192 `667 (\u0667) ARABIC-INDIC DIGIT SEVEN`\n\t\t\t* `6F8 (\u06f8)` \u2192 `668 (\u0668) ARABIC-INDIC DIGIT EIGHT`\n\t\t\t* `6F9 (\u06f9)` \u2192 `669 (\u0669) ARABIC-INDIC DIGIT NINE`\n* [Punycode](https://datatracker.ietf.org/doc/html/rfc3492) is not decoded.\n* The following ASCII characters are **valid**:\n\t* `24 ($) DOLLAR SIGN`\n\t* `5F (_) LOW LINE` with [restrictions](#validate)\n* Only label separator is `2E (.) FULL STOP`\n\t* No character maps to this character.\n\t* This simplifies name detection in unstructured text.\n\t* The following alternatives are **disallowed**:\n\t\t* `3002 (\u3002) IDEOGRAPHIC FULL STOP`\n\t\t* `FF0E (\uff0e) FULLWIDTH FULL STOP`\n\t\t* `FF61 (\uff61) HALFWIDTH IDEOGRAPHIC FULL STOP`\n* [Many characters](#appendix-additional-resources) are **disallowed** for various reasons:\n\t* Nearly all punctuation are **disallowed**.\n\t\t* Example: `589 (\u0589) ARMENIAN FULL STOP`\n\t* All parentheses and brackets are **disallowed**.\n\t\t* Example: `2997 (\u2997) LEFT BLACK TORTOISE SHELL BRACKET`\n\t* Nearly all vocalization annotations are **disallowed**.\n\t\t* Example: `294 (\u0294) LATIN LETTER GLOTTAL STOP`\n\t* Obsolete, deprecated, and ancient characters are **disallowed**.\n\t\t* Example: `463 (\u0463) CYRILLIC SMALL LETTER YAT`\n\t* Combining, modifying, reversed, flipped, turned, and partial variations are **disallowed**.\n\t\t* Example: `218A (\u218a) TURNED DIGIT TWO`\n\t* When multiple weights of the same character exist, the variant closest to \"heavy\" is selected and the rest **disallowed**.\n\t\t* Example: `\ud83d\udfa1\ud83d\udfa2\ud83d\udfa3\ud83d\udfa4\u271a\ud83d\udfa5\ud83d\udfa6\ud83d\udfa7` \u2192 `271A (\u271a) HEAVY GREEK CROSS`\n\t\t* This occasionally selects an emoji.\n\t\t\t* Example: \u2714\ufe0f or `2714 (\u2714\ufe0e) HEAVY CHECK MARK` is selected instead of `2713 (\u2713) CHECK MARK`\n\t* Many visually confusable characters are **disallowed**.\n\t\t* Example: `131 (\u0131) LATIN SMALL LETTER DOTLESS I`\n\t* Many ligatures, *n*-graphs, and *n*-grams are **disallowed.**\n\t\t* Example: `A74F (\ua74f) LATIN SMALL LETTER OO`\n\t* Many esoteric characters are **disallowed**.\n\t\t* Example: `2376 (\u2376) APL FUNCTIONAL SYMBOL ALPHA UNDERBAR`\n* Many hyphen-like characters are **mapped** to `2D (-) HYPHEN-MINUS`:\n\t* `2010 (\u2010) HYPHEN`\n\t* `2011 (\u2011) NON-BREAKING HYPHEN`\n\t* `2012 (\u2012) FIGURE DASH`\n\t* `2013 (\u2013) EN DASH`\n\t* `2014 (\u2014) EM DASH`\n\t* `2015 (\u2015) HORIZONTAL BAR`\n\t* `2043 (\u2043) HYPHEN BULLET`\n\t* `2212 (\u2212) MINUS SIGN`\n\t* `23AF (\u23af) HORIZONTAL LINE EXTENSION`\n\t* `23E4 (\u23e4) STRAIGHTNESS`\n\t* `FE58 (\ufe58) SMALL EM DASH`\n\t* `2E3A (\u2e3a) TWO-EM DASH` \u2192 `\"--\"`\n\t* `2E3B (\u2e3b) THREE-EM DASH` \u2192 `\"---\"`\n* Characters are assigned to **Groups** according to [Unicode Script_Extensions](https://www.unicode.org/reports/tr24/#Script_Extensions_Def).\n* **Groups** may contain [multiple scripts](#appendix-additional-resources):\n\t* Only *Latin*, *Greek*, *Cyrillic*, *Han*, *Japanese*, and *Korean* have access to *Common* characters.\n\t* *Latin*, *Greek*, *Cyrillic*, *Han*, *Japanese*, *Korean*, and *Bopomofo* only permit specific **Combining Mark** sequences.\n\t* *Han*, *Japanese*, and *Korean*  have access to `a-z`.\n\t* **Restricted** groups are always single-script.\n\t* [Unicode augmented script sets](https://www.unicode.org/reports/tr39/#Mixed_Script_Detection)\n* Scripts *Braille*, *Linear A*, *Linear B*, and *Signwriting* are **disallowed**.\n* `27 (') APOSTROPHE` is **mapped** to `2019 (\u2019) RIGHT SINGLE QUOTATION MARK` for convenience.\n* Ethereum symbol (`39E (\u039e) GREEK CAPITAL LETTER XI`) is case-folded and *Common*.\n* Emoji:\n\t* All emoji are [fully-qualified](https://www.unicode.org/reports/tr51/#def_fully_qualified_emoji).\n\t* Digits (`0-9`) are [not emoji](#appendix-additional-resources).\n\t* Emoji [mapped to non-emoji by IDNA](#appendix-additional-resources) cannot be used as emoji.\n\t* Emoji [disallowed by IDNA](#appendix-additional-resources) with default text-presentation are **disabled**:\n\t\t* `203C (\u203c\ufe0f) double exclamation mark`\n\t\t* `2049 (\u2049\ufe0f) exclamation question mark `\n\t* Remaining emoji characters are marked as **disallowed** (for text processing).\n\t* All `RGI_Emoji_ZWJ_Sequence` are **enabled**.\n\t* All `Emoji_Keycap_Sequence` are **enabled**.\n\t* All `RGI_Emoji_Tag_Sequence` are **enabled**.\n\t* All `RGI_Emoji_Modifier_Sequence` are **enabled**.\n\t* All `RGI_Emoji_Flag_Sequence` are **enabled**.\n\t* `Basic_Emoji` of the form `[X FE0F]` are **enabled**.\n\t* Emoji with default emoji-presentation are **enabled** as `[X FE0F]`.\n\t* Remaining single-character emoji are **enabled** as `[X FE0F]` (explicit emoji-presentation).\n\t* All singular Skin-color Modifiers are **disabled**.\n\t* All singular Regional Indicators are **disabled**.\n\t* Blacklisted emoji are **disabled**.\n\t* Whitelisted emoji are **enabled**.\n* Confusables:\n\t* Nearly all [Unicode Confusables](https://www.unicode.org/Public/security/15.1.0/confusables.txt)\n\t* Emoji are not confusable.\n\t* ASCII confusables are case-folded.\n\t\t* Example: `61 (a) LATIN SMALL LETTER A` confuses with `13AA (\u13aa) CHEROKEE LETTER GO`", "mimetype": "text/plain", "start_char_idx": 18447, "end_char_idx": 24682, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8aa39170-c67c-4827-8320-24a4fd4e3da3": {"__data__": {"id_": "8aa39170-c67c-4827-8320-24a4fd4e3da3", "embedding": null, "metadata": {"file_path": "ensips/15.md", "file_name": "15.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/15.md", "header_path": "/ENSIP-15: ENS Name Normalization Standard/", "customer_id": 1, "source_url": "ensips/15.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["considerations", "backwards", "security", "applications", "preserves", "emoji", "compatibility", "between", "still", "ultimately", "unicode", "names", "presentation"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e4e517529d67eefc9e4cd7181dcbed90c43d4cd7", "node_type": "4", "metadata": {"file_path": "ensips/15.md", "file_name": "15.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/15.md"}, "hash": "cec2ff1a7b012f8991e9a6046d0f5d95f75f706c63b0b3a4df64c9bbc6136640", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c106f80d-1b73-4789-aa10-d08cee4fb664", "node_type": "1", "metadata": {"file_path": "ensips/15.md", "file_name": "15.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/15.md", "header_path": "/ENSIP-15: ENS Name Normalization Standard/"}, "hash": "a05c51e57723d94754e9557147303e630a38095cd485a205fc2c44aa4d6998c4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1df99214-eeea-4d17-973e-ca69b8af970b", "node_type": "1", "metadata": {"header_path": "/ENSIP-15: ENS Name Normalization Standard/"}, "hash": "e06b59137a147b4e487d744df35abd95e87f853f74c6387aae400a5ea53b8feb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Backwards Compatibility\n\n* 99% of names are still valid.\n* Preserves as much [Unicode IDNA](https://unicode.org/reports/tr46/) and [WHATWG URL](https://url.spec.whatwg.org/#idna) compatibility as possible.\n* Only [valid emoji sequences](#appendix-additional-resources) are permitted. ## Security Considerations\n\n* Unicode presentation may vary between applications and devices.\n\t* Unicode text is ultimately subject to font-styling and display context.\t\t\n\t* Unsupported characters (`\ufffd`) may appear unremarkable.\n\t* Normalized single-character emoji sequences do not retain their explicit emoji-presentation and may display with [text or emoji](https://www.unicode.org/reports/tr51/#Presentation_Style) presentation styling.\n\t\t* `\u2764\ufe0e` \u2014 text-presentation and default-color\n\t\t* <span className=\"text-green-500\">`\u2764\ufe0e`</span> \u2014 text-presentation and <span className=\"text-green-500\">green</span>-color\n\t\t* <span className=\"text-green-500\">`\u2764\ufe0f`</span> \u2014 emoji-presentation and <span className=\"text-green-500\">green</span>-color\n\t* Unsupported emoji sequences with ZWJ may appear indistinguishable from those without ZWJ.\n\t\t* `\ud83d\udca9\ud83d\udca9 [1F4A9 1F4A9]`\n\t\t* `\ud83d\udca9\u200d\ud83d\udca9 [1F4A9 200D 1F4A9]` \u2192 *error: Disallowed character*\n* Names composed of labels with varying bidi properties [may appear differently](https://discuss.ens.domains/t/bidi-label-ordering-spoof/15824) depending on context.\n\t* Normalization does not enforce single-directional names.\n\t* Names may be composed of labels of different directions but normalized labels are never bidirectional.\n\t\t* [LTR].[RTL] `bahrain.\u0645\u0635\u0631`  \n\t\t* [LTR+RTL] `bahrain\u0645\u0635\u0631` \u2192 *error: Illegal mixture: Latin + Arabic*\n* Not all normalized names are visually unambiguous.\n* This ENSIP only addresses **single-character** [confusables](https://www.unicode.org/reports/tr39/).\n\t* There exist confusable **multi-character** sequences:\n\t\t* `\"\u0bb6\u0bcd\u0bb0\u0bc0\" [BB6 BCD BB0 BC0]`\n\t\t* `\"\u0bb8\u0bcd\u0bb0\u0bc0\" [BB8 BCD BB0 BC0]`\n\t* There exist confusable emoji sequences: \n\t\t* `\ud83d\udeb4 [1F6B4]` and `\ud83d\udeb4\ud83c\udffb [1F6B4 1F3FB]`\n\t\t* `\ud83c\uddfa\ud83c\uddf8 [1F1FA 1F1F8]` and `\ud83c\uddfa\ud83c\uddf2 [1F1FA 1F1F2]` \n\t\t* `\u2665 [2665] BLACK HEART SUIT` and `\u2764 [2764] HEAVY BLACK HEART`", "mimetype": "text/plain", "start_char_idx": 24684, "end_char_idx": 24970, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a0a9b1ea-9d22-48e1-839c-160c5a00659d": {"__data__": {"id_": "a0a9b1ea-9d22-48e1-839c-160c5a00659d", "embedding": null, "metadata": {"file_path": "ensips/15.md", "file_name": "15.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/15.md", "header_path": "/ENSIP-15: ENS Name Normalization Standard/", "customer_id": 1, "source_url": "ensips/15.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["specifications", "ethereum", "copyright", "pattern", "security", "rights", "identifier", "waived", "domain", "related", "script", "EIP-137", "normalization", "character", "reference"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e4e517529d67eefc9e4cd7181dcbed90c43d4cd7", "node_type": "4", "metadata": {"file_path": "ensips/15.md", "file_name": "15.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/15.md"}, "hash": "cec2ff1a7b012f8991e9a6046d0f5d95f75f706c63b0b3a4df64c9bbc6136640", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1df99214-eeea-4d17-973e-ca69b8af970b", "node_type": "1", "metadata": {"file_path": "ensips/15.md", "file_name": "15.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/15.md", "header_path": "/ENSIP-15: ENS Name Normalization Standard/"}, "hash": "e1e0064028e67117a055fdd6b73fa146b446b92f9fd4022e0ce46a446af71fbd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "36f83d0d-3c49-468a-8484-907fdb509723", "node_type": "1", "metadata": {"header_path": "/ENSIP-15: ENS Name Normalization Standard/"}, "hash": "58fe6b04845cfc84212aab09ee281f2e99ffbfd5d125ccbabc8dda77e4228570", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Copyright\n\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/). ## Appendix: Reference Specifications\n\n* [EIP-137: Ethereum Domain Name Service](https://eips.ethereum.org/EIPS/eip-137)\n* [ENSIP-1: ENS](./1.md)\n* [UAX-15: Normalization Forms](https://unicode.org/reports/tr15/)\n* [UAX-24: Script Property](https://www.unicode.org/reports/tr24/)\n* [UAX-29: Text Segmentation](https://unicode.org/reports/tr29/)\n* [UAX-31: Identifier and Pattern Syntax](https://www.unicode.org/reports/tr31/)\n* [UTS-39: Security Mechanisms](https://www.unicode.org/reports/tr39/)\n* [UAX-44: Character Database](https://www.unicode.org/reports/tr44/)\n* [UTS-46: IDNA Compatibility Processing](https://unicode.org/reports/tr46/)\n* [UTS-51: Emoji](https://www.unicode.org/reports/tr51)\n* [RFC-3492: Punycode](https://datatracker.ietf.org/doc/html/rfc3492)\n* [RFC-5891: IDNA: Protocol](https://datatracker.ietf.org/doc/html/rfc5891) \n* [RFC-5892: The Unicode Code Points and IDNA](https://datatracker.ietf.org/doc/html/rfc5892)\n* [Unicode CLDR](https://github.com/unicode-org/cldr)\n* [WHATWG URL: IDNA](https://url.spec.whatwg.org/#idna)", "mimetype": "text/plain", "start_char_idx": 26794, "end_char_idx": 26906, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "34e1994e-9e58-429d-b0e4-db103caccc40": {"__data__": {"id_": "34e1994e-9e58-429d-b0e4-db103caccc40", "embedding": null, "metadata": {"file_path": "ensips/15.md", "file_name": "15.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/15.md", "header_path": "/ENSIP-15: ENS Name Normalization Standard/", "customer_id": 1, "source_url": "ensips/15.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["additional", "characters", "escape", "disallowed", "quick", "resources"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e4e517529d67eefc9e4cd7181dcbed90c43d4cd7", "node_type": "4", "metadata": {"file_path": "ensips/15.md", "file_name": "15.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/15.md"}, "hash": "cec2ff1a7b012f8991e9a6046d0f5d95f75f706c63b0b3a4df64c9bbc6136640", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "36f83d0d-3c49-468a-8484-907fdb509723", "node_type": "1", "metadata": {"file_path": "ensips/15.md", "file_name": "15.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/15.md", "header_path": "/ENSIP-15: ENS Name Normalization Standard/"}, "hash": "e141cb70dcd9257cf46571374b7e4739afd9790ecbc1ad798bee16221080aa28", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5039b8f5-fdef-4de8-9e60-bdebd9dd43ea", "node_type": "1", "metadata": {"header_path": "/ENSIP-15: ENS Name Normalization Standard/"}, "hash": "115445c4b0e278fe78cab7866080e2965a5703c51d726e8b72eeadb016f36e77", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Appendix: Additional Resources\n\n* [Supported Groups](https://github.com/adraffy/ens-normalize.js/blob/main/tools/ensip/groups.md)\n* [Supported Emoji](https://github.com/adraffy/ens-normalize.js/blob/main/tools/ensip/emoji.md)\n* [Additional Disallowed Characters](https://github.com/adraffy/ens-normalize.js/blob/main/tools/ensip/disallowed.csv)\n* [Ignored Characters](https://github.com/adraffy/ens-normalize.js/blob/main/tools/ensip/ignored.csv)\n* [Should Escape Characters ](https://github.com/adraffy/ens-normalize.js/blob/main/tools/ensip/escape.csv)\n* [Combining Marks](https://github.com/adraffy/ens-normalize.js/blob/main/tools/ensip/cm.csv)\n* [Non-spacing Marks](https://github.com/adraffy/ens-normalize.js/blob/main/tools/ensip/nsm.csv)\n* [Fenced Characters](https://github.com/adraffy/ens-normalize.js/blob/main/tools/ensip/fenced.csv)\n* [NFC Quick Check](https://github.com/adraffy/ens-normalize.js/blob/main/tools/ensip/nfc_check.csv)", "mimetype": "text/plain", "start_char_idx": 27960, "end_char_idx": 28909, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5039b8f5-fdef-4de8-9e60-bdebd9dd43ea": {"__data__": {"id_": "5039b8f5-fdef-4de8-9e60-bdebd9dd43ea", "embedding": null, "metadata": {"file_path": "ensips/15.md", "file_name": "15.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/15.md", "header_path": "/ENSIP-15: ENS Name Normalization Standard/", "customer_id": 1, "source_url": "ensips/15.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["throws", "already", "greek", "replace", "letter", "expect", "provided", "small", "validation", "following", "tests", "strip", "beautification", "follow"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e4e517529d67eefc9e4cd7181dcbed90c43d4cd7", "node_type": "4", "metadata": {"file_path": "ensips/15.md", "file_name": "15.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/15.md"}, "hash": "cec2ff1a7b012f8991e9a6046d0f5d95f75f706c63b0b3a4df64c9bbc6136640", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "34e1994e-9e58-429d-b0e4-db103caccc40", "node_type": "1", "metadata": {"file_path": "ensips/15.md", "file_name": "15.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/15.md", "header_path": "/ENSIP-15: ENS Name Normalization Standard/"}, "hash": "6f4f58cf6ceae89d886eda7cb77ca279610038ca4ba7c46e8054c54fdcfbbde7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6b98be2f-e2a7-49d5-b10f-14fee98a5ecc", "node_type": "1", "metadata": {"header_path": "/ENSIP-15: ENS Name Normalization Standard/"}, "hash": "25cff922066d5ebfc590d4b4c0417cb9890e0105befd09a10154ea71af62711d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Appendix: Validation Tests\n\nA list of [validation tests](https://github.com/adraffy/ens-normalize.js/blob/main/validate/tests.json) are provided with the following interpretation:\n\n* Already Normalized: `{name: \"a\"}` \u2192 `normalize(\"a\")` is `\"a\"`\n* Need Normalization: `{name: \"A\", norm: \"a\"}` \u2192 `normalize(\"A\")` is `\"a\"`\n* Expect Error: `{name: \"@\", error: true}` \u2192 `normalize(\"@\")` throws ## Annex: Beautification\n\nFollow [algorithm](#algorithm), except:\n\n* Do not strip `FE0F` from `Emoji` tokens.\n* Replace `3BE (\u03be) GREEK SMALL LETTER XI` with `39E (\u039e) GREEK CAPITAL LETTER XI` if the label isn't *Greek*.\n* Example: `normalize(\"\u2010\u039e1\ufe0f\u20e3\") [2010 39E 31 FE0F 20E3]` is `\"-\u03be1\u20e3\" [2D 3BE 31 20E3]`\n* Example: `beautify(\"-\u03be1\u20e3\") [2D 3BE 31 20E3]\"` is `\"-\u039e1\ufe0f\u20e3\" [2D 39E 31 FE0F 20E3]`", "mimetype": "text/plain", "start_char_idx": 28911, "end_char_idx": 29302, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "dea03a73-2622-466f-8208-79524be2dc20": {"__data__": {"id_": "dea03a73-2622-466f-8208-79524be2dc20", "embedding": null, "metadata": {"file_path": "ensips/16.md", "file_name": "16.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/16.md", "header_path": "/", "customer_id": 1, "source_url": "ensips/16.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["offchain", "allows", "abstract", "metadata", "querying", "draft", "queried", "enabled", "ensip", "EIP-3668", "jefflau", "specifies", "makoto", "names"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1f87f18b953f1321696550473dc9105cb8c5343a", "node_type": "4", "metadata": {"file_path": "ensips/16.md", "file_name": "16.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/16.md"}, "hash": "b1bc8d0577bbda09a68678830624de693033c45805678d1329c79e0253df7f2b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e35e8fc4-eb3b-4cd0-894d-e810a1f10cf9", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "50ebb7a91f1c1251689f0788f76641ecd7e70eeafb4b98284ea103ff640b64f2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: Allows metadata to be queried on EIP-3668 enabled names\ncontributors:\n  - jefflau\n  - makoto\nensip:\n  status: draft\n  created: 2022-09-22\nignoredRules: [\"heading:implementation\", \"heading:open-items\"]\n--- # ENSIP-16: Offchain Metadata ## Abstract\n\nThis ENSIP specifies APIs for querying metadata directly on the resolver for EIP-3668 (CCIP Read: Secure offchain data retrieval) enabled names. EIP-3668 will power many of the domains in the future, however since the retrieval mechanism uses wildcard + offchain resolver, there is no standardised way to retrieve important metadata information such as the owner (who can change the records), or which L2/offchain database the records are stored on.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 221, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4e95000a-aa88-4121-a400-44af17cb6a1a": {"__data__": {"id_": "4e95000a-aa88-4121-a400-44af17cb6a1a", "embedding": null, "metadata": {"file_path": "ensips/16.md", "file_name": "16.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/16.md", "header_path": "/ENSIP-16: Offchain Metadata/", "customer_id": 1, "source_url": "ensips/16.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["interfaces", "check", "instance", "already", "motivation", "important", "frontend", "metadata", "starting", "EIP-3668", "allow", "there", "subdomains", "needs", "smooth"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1f87f18b953f1321696550473dc9105cb8c5343a", "node_type": "4", "metadata": {"file_path": "ensips/16.md", "file_name": "16.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/16.md"}, "hash": "b1bc8d0577bbda09a68678830624de693033c45805678d1329c79e0253df7f2b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bc199cce-7ffe-4a76-b4be-81618b4521cd", "node_type": "1", "metadata": {"file_path": "ensips/16.md", "file_name": "16.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/16.md", "header_path": "/ENSIP-16: Offchain Metadata/"}, "hash": "f5cd2c7bed3ba516b323465a36275a51dc4d571d7ce182350a6ee5619630fbe9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "25f40eff-310e-4326-8a10-4cdcf7c2d397", "node_type": "1", "metadata": {"header_path": "/ENSIP-16: Offchain Metadata/"}, "hash": "5e485d9979fac9f9058a4d3dc5985a8f816e5bb471ab4fa65a6c47aef5470955", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Motivation\n\nWith EIP-3668 subdomains already starting to see wide adoption, it is important that there is a way for frontend interfaces to get important metadata to allow a smooth user experience. For instance a UI needs to be able to check if the currently connected user has the right to update an EIP-3668 name.\n\nThis ENSIP addresses this by adding a way of important metadata to be gathered on the offchain resolver, which would likely revert and be also resolved offchain, however there is an option for it to be also left onchain if there value was static and wouldn't need to be changed often.", "mimetype": "text/plain", "start_char_idx": 718, "end_char_idx": 1321, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "25f40eff-310e-4326-8a10-4cdcf7c2d397": {"__data__": {"id_": "25f40eff-310e-4326-8a10-4cdcf7c2d397", "embedding": null, "metadata": {"file_path": "ensips/16.md", "file_name": "16.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/16.md", "header_path": "/ENSIP-16: Offchain Metadata/", "customer_id": 1, "source_url": "ensips/16.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["offchain", "ownership", "different", "metadata", "types", "include", "includes", "defines", "should", "related", "location", "fetch", "storage", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1f87f18b953f1321696550473dc9105cb8c5343a", "node_type": "4", "metadata": {"file_path": "ensips/16.md", "file_name": "16.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/16.md"}, "hash": "b1bc8d0577bbda09a68678830624de693033c45805678d1329c79e0253df7f2b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4e95000a-aa88-4121-a400-44af17cb6a1a", "node_type": "1", "metadata": {"file_path": "ensips/16.md", "file_name": "16.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/16.md", "header_path": "/ENSIP-16: Offchain Metadata/"}, "hash": "465d10a57e0b3d4da580e28e49d5d39c431f2ed44644bd25fe2079bb2b525cf3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8e66fa30-acf5-4a8e-abcb-6816c0cf1cd8", "node_type": "1", "metadata": {"header_path": "/ENSIP-16: Offchain Metadata/Specification/"}, "hash": "0c175e0b6d3cf6c94f43046643fe11ad7ddb9be250a8f35b47026c385df5b77e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\nThe metadata should include 2 different types of info\n\n- Offchain data storage location related info: `graphqlUrl` includes the URL to fetch the metadata.\n\n- Ownership related info: `owner`, `isApprovedForAll` defines who can own or update the given record. ### Context\n\nAn optional field \"context\" is introduced by utilizing an arbitrary bytes string to define the namespace to which a record belongs.\n\nFor example, this \"context\" can refer to the address of the entity that has set a particular record. By associating records with specific addresses, users can confidently manage their records in a trustless manner on Layer 2 without direct access to the ENS Registry contract on the Ethereum mainnet. Please refer to [ENS-Bedrock-Resolver](https://github.com/corpus-io/ENS-Bedrock-Resolver#context) for the reference integration", "mimetype": "text/plain", "start_char_idx": 1323, "end_char_idx": 1598, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8642aa8e-ec01-4de1-841e-5994386f0962": {"__data__": {"id_": "8642aa8e-ec01-4de1-841e-5994386f0962", "embedding": null, "metadata": {"file_path": "ensips/16.md", "file_name": "16.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/16.md", "header_path": "/ENSIP-16: Offchain Metadata/Specification/", "customer_id": 1, "source_url": "ensips/16.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["certain", "specific", "dynamic", "providing", "serves", "metadata", "about", "resolvers", "their", "valuable", "owner", "crucial", "choose", "insights"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1f87f18b953f1321696550473dc9105cb8c5343a", "node_type": "4", "metadata": {"file_path": "ensips/16.md", "file_name": "16.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/16.md"}, "hash": "b1bc8d0577bbda09a68678830624de693033c45805678d1329c79e0253df7f2b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8e66fa30-acf5-4a8e-abcb-6816c0cf1cd8", "node_type": "1", "metadata": {"file_path": "ensips/16.md", "file_name": "16.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/16.md", "header_path": "/ENSIP-16: Offchain Metadata/Specification/"}, "hash": "ad3f3b424a8ee09a8c55c7544f9f5db0cff4402e1c9f9eb0197fd9735b76d3d5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b5206bc0-fbbb-498b-b14f-20a4021dead1", "node_type": "1", "metadata": {"header_path": "/ENSIP-16: Offchain Metadata/"}, "hash": "fd0dc861b15941c6424b9d41bd1fbd66a578fef8e30f87863bb12daed07f3cf5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Dynamic Metadata\n\nMetadata serves a crucial role in providing valuable insights about a node owner and their specific resolver. In certain scenarios, resolvers may choose to adopt diverse approaches to resolve data based on the node. An example of this would be handling subdomains of a particular node differently. For instance, we could resolve \"optimism.foo.eth\" using a contract on optimism and \"gnosis.foo.eth\" using a contract on gnosis.\nBy passing the name through metadata, we empower the resolution process, enabling CcipResolve flows to become remarkably flexible and scalable. This level of adaptability ensures that our system can accommodate a wide array of use cases, making it more user-friendly and accommodating for a diverse range of scenarios.", "mimetype": "text/plain", "start_char_idx": 2176, "end_char_idx": 2942, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b5206bc0-fbbb-498b-b14f-20a4021dead1": {"__data__": {"id_": "b5206bc0-fbbb-498b-b14f-20a4021dead1", "embedding": null, "metadata": {"file_path": "ensips/16.md", "file_name": "16.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/16.md", "header_path": "/ENSIP-16: Offchain Metadata/", "customer_id": 1, "source_url": "ensips/16.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["included", "cater", "ioffchainresolver", "instead", "address", "returns", "EIP-3668", "interface", "bytes32", "resolver", "implementation", "owner", "based", "information"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1f87f18b953f1321696550473dc9105cb8c5343a", "node_type": "4", "metadata": {"file_path": "ensips/16.md", "file_name": "16.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/16.md"}, "hash": "b1bc8d0577bbda09a68678830624de693033c45805678d1329c79e0253df7f2b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8642aa8e-ec01-4de1-841e-5994386f0962", "node_type": "1", "metadata": {"file_path": "ensips/16.md", "file_name": "16.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/16.md", "header_path": "/ENSIP-16: Offchain Metadata/Specification/"}, "hash": "45531a28ba48f37309e5fa0946bf3a7b0f3a264dc430b285b10590194698c64f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2f1490cb-ae7e-49fd-bf89-8b291156d9bb", "node_type": "1", "metadata": {"header_path": "/ENSIP-16: Offchain Metadata/Implementation/"}, "hash": "4c217a5239f31048d305428e6e5539e51c89f1e540bb23ddbc5e9f5736b33483", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Implementation ### L1\n\n```solidity\n// To be included in\n// https://github.com/ensdomains/ens-contracts/blob/staging/contracts/resolvers/Resolver.sol\ninterface IOffChainResolver {\n    /** @dev Returns the owner of the resolver on L2\n     * @param node\n     * @return owner in bytes32 instead of address to cater for non EVM based owner information\n     */\n    owner(bytes32 node) returns (bytes owner);\n\n    // optional.\n    // this returns data via l2 with EIP-3668 so that non EVM chains can also return information of which address can update the record\n    // The same function name exists on L2 where delegate returns address instead of bytes\n    function isApprovedFor(bytes context, bytes32 node, bytes delegate) returns (bool);\n\n    /** @dev Returns the metadata of the resolver on L2\n     * @return graphqlUrl url of graphql endpoint that provides additional information about the offchain name and its subdomains\n     */\n    function metadata(bytes calldata name)\n        external\n        view\n        returns (string memory)\n    {\n        return (graphqlUrl);\n    }\n\n    // Optional. If context is dynamic, the event won't be emitted.\n    event MetadataChanged(\n        string name,\n        string graphqlUrl,\n    );\n}\n```", "mimetype": "text/plain", "start_char_idx": 2944, "end_char_idx": 2961, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b9ff43aa-5678-462d-b9c0-c6bc98c1e836": {"__data__": {"id_": "b9ff43aa-5678-462d-b9c0-c6bc98c1e836", "embedding": null, "metadata": {"file_path": "ensips/16.md", "file_name": "16.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/16.md", "header_path": "/ENSIP-16: Offchain Metadata/Implementation/", "customer_id": 1, "source_url": "ensips/16.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["included", "check", "contract", "il2resolver", "arbitrary", "approved", "interface", "delegate", "returned", "chain", "bytes", "context", "function", "compatible"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1f87f18b953f1321696550473dc9105cb8c5343a", "node_type": "4", "metadata": {"file_path": "ensips/16.md", "file_name": "16.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/16.md"}, "hash": "b1bc8d0577bbda09a68678830624de693033c45805678d1329c79e0253df7f2b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2f1490cb-ae7e-49fd-bf89-8b291156d9bb", "node_type": "1", "metadata": {"file_path": "ensips/16.md", "file_name": "16.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/16.md", "header_path": "/ENSIP-16: Offchain Metadata/Implementation/"}, "hash": "da4e44b9783f43ab32719ed49b05d3c396146b20307f128459f8611392f6e844", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "db87102d-a143-40a3-81da-6923ec440402", "node_type": "1", "metadata": {"header_path": "/ENSIP-16: Offchain Metadata/Implementation/L2 (EVM compatible chain only)/"}, "hash": "4a458a007a51b51309a1e0ceb9239bb760be8038215e8f2c4ecce589e8cdb578", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### L2 (EVM compatible chain only)\n\n```solidity\n// To be included in the contract returned by `metadata` function `storageLocation`\ninterface IL2Resolver {\n    /**\n     * @dev Check to see if the delegate has been approved by the context for the node.\n     *\n     * @param context = an arbitrary bytes string to define the namespace to which a record belongs such as the name owner.\n     * @param node\n     * @param delegate = an address that is allowed to update record under context\n     */\n    function isApprovedFor(bytes context,bytes32 node,address delegate) returns (bool);\n\n    event Approved(\n        bytes context,\n        bytes32 indexed node,\n        address indexed delegate,\n        bool indexed approved\n    );\n}\n```\n\n```javascript\nconst node = namehash('ccipreadsub.example.eth')\nconst resolver = await ens.resolver(node)\nconst owner = await resolver.owner(node)\n// 0x123...\nconst dataLocation = await.resolver.graphqlUrl()\n// {\n//   url: 'http://example.com/ens/graphql',\n// }\n```", "mimetype": "text/plain", "start_char_idx": 4182, "end_char_idx": 5179, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "db87102d-a143-40a3-81da-6923ec440402": {"__data__": {"id_": "db87102d-a143-40a3-81da-6923ec440402", "embedding": null, "metadata": {"file_path": "ensips/16.md", "file_name": "16.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/16.md", "header_path": "/ENSIP-16: Offchain Metadata/Implementation/L2 (EVM compatible chain only)/", "customer_id": 1, "source_url": "ensips/16.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["those", "query", "fulfilling", "graphql", "indexing", "language", "event", "using", "optional", "schema", "queries", "runtime", "onchain", "service"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1f87f18b953f1321696550473dc9105cb8c5343a", "node_type": "4", "metadata": {"file_path": "ensips/16.md", "file_name": "16.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/16.md"}, "hash": "b1bc8d0577bbda09a68678830624de693033c45805678d1329c79e0253df7f2b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b9ff43aa-5678-462d-b9c0-c6bc98c1e836", "node_type": "1", "metadata": {"file_path": "ensips/16.md", "file_name": "16.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/16.md", "header_path": "/ENSIP-16: Offchain Metadata/Implementation/"}, "hash": "a6e58b9fb8aa9671b3a6ddaf5ad699250cc068a12b321ee772211a57dd468134", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ec14e5e0-a533-4867-93d8-13ee3685b1dc", "node_type": "1", "metadata": {"header_path": "/ENSIP-16: Offchain Metadata/Implementation/L2 (EVM compatible chain only)/"}, "hash": "abe0af21b2357e4c23b51fc042aa4d0349f59432c2fe601753672da6d11da462", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "#### GraphQL schema\n\n[GraphQL](https://graphql.org) is a query language for APIs and a runtime for fulfilling those queries with onchain event data. You can use the hosted/decentralised indexing service such as [The Graph](https://thegraph.com), [Goldsky](https://docs.goldsky.com/introduction), [QuickNode](https://marketplace.quicknode.com/add-on/subgraph-hosting) or host your own using The Graph, or [ponder](https://ponder.sh) #### L1\n\n`Metadata` is an optional schema that indexes `MetadataChanged` event.\n\n```graphql\n\ntype Domain @entity{\n  id\n  metadata: Metadata\n}\n\ntype Metadata @entity {\n  \"l1 resolver address\"\n  id: ID!\n  \"Name of the Chain\"\n  name: String\n  \"url of the graphql endpoint\"\n  graphqlUrl: String\n}\n\n```", "mimetype": "text/plain", "start_char_idx": 5181, "end_char_idx": 5612, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3f18374c-682c-4a30-87fa-f31117fb671f": {"__data__": {"id_": "3f18374c-682c-4a30-87fa-f31117fb671f", "embedding": null, "metadata": {"file_path": "ensips/16.md", "file_name": "16.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/16.md", "header_path": "/ENSIP-16: Offchain Metadata/Implementation/L2 (EVM compatible chain only)/", "customer_id": 1, "source_url": "ensips/16.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["namespaced", "multiple", "entities", "ownership", "canonical", "discoverable", "graphql", "because", "querying", "exists", "update", "allow", "function", "choose", "storage"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1f87f18b953f1321696550473dc9105cb8c5343a", "node_type": "4", "metadata": {"file_path": "ensips/16.md", "file_name": "16.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/16.md"}, "hash": "b1bc8d0577bbda09a68678830624de693033c45805678d1329c79e0253df7f2b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ec14e5e0-a533-4867-93d8-13ee3685b1dc", "node_type": "1", "metadata": {"file_path": "ensips/16.md", "file_name": "16.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/16.md", "header_path": "/ENSIP-16: Offchain Metadata/Implementation/L2 (EVM compatible chain only)/"}, "hash": "863c06f9cc37affb29382cb49a0e0b5f97c369e6fec79c6c152b67ae5dea5fb3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a91550df-a634-46f7-a589-3c7df98b9d4b", "node_type": "1", "metadata": {"header_path": "/ENSIP-16: Offchain Metadata/"}, "hash": "7cf2e968d32ba21146c42e22d457d973962e550b530fb7584590b70db0e46951", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "#### L2\n\nL2 graphql URL is discoverable via `metadata` function `graphqlUrl` field.\nBecause the canonical ownership of the name exists on L1, some L2/offchain storage may choose to allow multiple entities to update the same node namespaced by `context`. When querying the domain data, the query should be filtered by `context` that is returned by `metadata`function `context` field\n\n```graphql\ntype Domain {\n  id: ID! # concatenation of context and namehash delimited by `-`\n  context: Bytes\n  name: String\n  namehash: Bytes\n  labelName: String\n  labelhash: Bytes\n  resolvedAddress: Bytes\n  parent: Domain\n  subdomains: [Domain]\n  subdomainCount: Int!\n  resolver: Resolver!\n  expiryDate: BigInt\n}\n\ntype Resolver @entity {\n  id: ID! # concatenation of node, resolver address and context delimited by `-`\n  node: Bytes\n  context: Bytes\n  address: Bytes\n  domain: Domain\n  addr: Bytes\n  contentHash: Bytes\n  texts: [String!]\n  coinTypes: [BigInt!]\n}\n```", "mimetype": "text/plain", "start_char_idx": 5913, "end_char_idx": 6863, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a91550df-a634-46f7-a589-3c7df98b9d4b": {"__data__": {"id_": "a91550df-a634-46f7-a589-3c7df98b9d4b", "embedding": null, "metadata": {"file_path": "ensips/16.md", "file_name": "16.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/16.md", "header_path": "/ENSIP-16: Offchain Metadata/", "customer_id": 1, "source_url": "ensips/16.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["copyright", "backwards", "items", "gasless", "rights", "metadata", "graphql", "waived", "within", "compatibility", "standard", "related", "should"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1f87f18b953f1321696550473dc9105cb8c5343a", "node_type": "4", "metadata": {"file_path": "ensips/16.md", "file_name": "16.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/16.md"}, "hash": "b1bc8d0577bbda09a68678830624de693033c45805678d1329c79e0253df7f2b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3f18374c-682c-4a30-87fa-f31117fb671f", "node_type": "1", "metadata": {"file_path": "ensips/16.md", "file_name": "16.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/16.md", "header_path": "/ENSIP-16: Offchain Metadata/Implementation/L2 (EVM compatible chain only)/"}, "hash": "ae88ea91538f6713fb3756512a26ee8969c4f4ab0322c1415974826e3d0ff98e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "95edec3c-1a08-4719-b7a1-f51ea7b0a9bb", "node_type": "1", "metadata": {"header_path": "/ENSIP-16: Offchain Metadata/"}, "hash": "6c96a8aaf357c8e9ed909dfe30e133d5833ee3a054738dce31d4c8825564132f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Backwards Compatibility\n\nNone ## Open Items\n\n- Should `owner` and `isApprovedForAll` be within graphql or should be own metadata function? ## Copyright\n\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/). ---\ndescription: A standard for gasless DNS resolution in ENS.\ncontributors:\n  - nick.eth\nensip:\n  status: draft\n  created: 2024-02-09\n--- # ENSIP-17: Gasless DNS Resolution ## Abstract\n\nThis standard describes a mechanism by which users can specify ENS resolvers and resolution data as DNS TXT records, resulting in a system where DNS names are resolvable in ENS with no onchain actions required.", "mimetype": "text/plain", "start_char_idx": 6865, "end_char_idx": 6897, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "619eaea8-b2d6-470b-9239-679fff6229f2": {"__data__": {"id_": "619eaea8-b2d6-470b-9239-679fff6229f2", "embedding": null, "metadata": {"file_path": "ensips/17.md", "file_name": "17.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/17.md", "header_path": "/ENSIP-17: Gasless DNS Resolution/", "customer_id": 1, "source_url": "ensips/17.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["transaction", "ability", "motivation", "thereby", "contents", "facilitated", "record", "claim", "EIP-3668", "prove", "which", "integration", "corresponding", "several", "notable", "verifying"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "eaa105e297475f3803a685f817f8c0e24131024a", "node_type": "4", "metadata": {"file_path": "ensips/17.md", "file_name": "17.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/17.md"}, "hash": "f172cc65ce714af02e24367ad661e7405258fd87d22b9246b559499f3d73c0ff", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6e21a502-be30-4277-ba9d-521800418f0c", "node_type": "1", "metadata": {"file_path": "ensips/17.md", "file_name": "17.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/17.md", "header_path": "/ENSIP-17: Gasless DNS Resolution/"}, "hash": "025dd000d59efce82acdbce8cb233740b1c5f75980adabbc1fc4cf1708a9ae25", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9ed8e1dd-8521-4826-bd10-1f1fbacdf0e9", "node_type": "1", "metadata": {"header_path": "/ENSIP-17: Gasless DNS Resolution/"}, "hash": "63f37270d5958024d24705b3ddc7b79d47378500834ad9ddcc0b364063d891a5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Motivation\n\nENS has had DNS integration for some time, facilitated by the ability to prove the contents of a DNS TXT record onchain, and thereby claim the corresponding name in the ENS registry. This has several shortcomings, the most notable of which is the high transaction fees associated, as verifying a DNSSEC proof often costs in excess of 1,000,000 gas.\n\nWildcard resolution (ENSIP-10) and CCIP-Read (EIP-3668) now permit a new approach, by which DNSSEC proofs are fetched and verified at resolution time instead. This permits users to enable ENS resolution of their names simply by setting a TXT record on their DNS name and enabling DNSSEC.", "mimetype": "text/plain", "start_char_idx": 401, "end_char_idx": 1053, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9ed8e1dd-8521-4826-bd10-1f1fbacdf0e9": {"__data__": {"id_": "9ed8e1dd-8521-4826-bd10-1f1fbacdf0e9", "embedding": null, "metadata": {"file_path": "ensips/17.md", "file_name": "17.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/17.md", "header_path": "/ENSIP-17: Gasless DNS Resolution/", "customer_id": 1, "source_url": "ensips/17.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["deployed", "request", "nonexistent", "attempted", "these", "resolution", "whenever", "subdomain", "initiates", "gateway", "resolver", "consulted", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "eaa105e297475f3803a685f817f8c0e24131024a", "node_type": "4", "metadata": {"file_path": "ensips/17.md", "file_name": "17.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/17.md"}, "hash": "f172cc65ce714af02e24367ad661e7405258fd87d22b9246b559499f3d73c0ff", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "619eaea8-b2d6-470b-9239-679fff6229f2", "node_type": "1", "metadata": {"file_path": "ensips/17.md", "file_name": "17.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/17.md", "header_path": "/ENSIP-17: Gasless DNS Resolution/"}, "hash": "ebe3aca7269a5e1aec53f5e5d8573f8eaa3dd545434741e70c9c7a4e3ff1014f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f3b9ec0f-537d-4cb0-a7ad-9acbe09e810f", "node_type": "1", "metadata": {"header_path": "/ENSIP-17: Gasless DNS Resolution/Specification/"}, "hash": "1f6a65db0de8a0cf6cc75b494b8a97cf4fa2f2c0080105360054e0667493ed70", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\nA new resolver, `OffchainDNSResolver`, is deployed and set as the resolver for all DNS TLDs; this resolver will be consulted whenever resolution is attempted for a nonexistent subdomain of these TLDs. The resolver then initiates a CCIP-Read request to a gateway which fetches and returns DNSSEC proofs for TXT records on that name. In the CCIP-Read callback function, the resolver verifies the DNSSEC proofs using an updated version of the DNSSEC oracle, and if they verify correctly, decodes the address of a resolver and optional extra data from the TXT record. The resolution request is then completed by invoking the resolver, optionally passing the extra data contained in the TXT record to enable it to vary its response dynamically.", "mimetype": "text/plain", "start_char_idx": 1055, "end_char_idx": 1812, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f3b9ec0f-537d-4cb0-a7ad-9acbe09e810f": {"__data__": {"id_": "f3b9ec0f-537d-4cb0-a7ad-9acbe09e810f", "embedding": null, "metadata": {"file_path": "ensips/17.md", "file_name": "17.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/17.md", "header_path": "/ENSIP-17: Gasless DNS Resolution/Specification/", "customer_id": 1, "source_url": "ensips/17.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["compliant", "identifying", "records", "fixed", "gasless", "either", "address", "record", "hexadecimal", "format", "queries", "resolve", "resolver", "adhere"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "eaa105e297475f3803a685f817f8c0e24131024a", "node_type": "4", "metadata": {"file_path": "ensips/17.md", "file_name": "17.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/17.md"}, "hash": "f172cc65ce714af02e24367ad661e7405258fd87d22b9246b559499f3d73c0ff", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9ed8e1dd-8521-4826-bd10-1f1fbacdf0e9", "node_type": "1", "metadata": {"file_path": "ensips/17.md", "file_name": "17.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/17.md", "header_path": "/ENSIP-17: Gasless DNS Resolution/"}, "hash": "764ad488b3b38ef457d3b27289ada2a65f98e2512bc3022db6b7b3ab6273891f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9ef1896d-ac99-4913-83f2-872b4e304549", "node_type": "1", "metadata": {"header_path": "/ENSIP-17: Gasless DNS Resolution/Specification/"}, "hash": "6d530d8c57fd2e575d1efe361331859374f1c37d9f89fb21ddf637c5ea356d77", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### TXT record format\n\nCompliant TXT records MUST adhere to this format:\n\n```ts\nENS1 <resolver-name-or-address> [context]\n```\n\nWhere:\n - `ENS1` is a fixed string, identifying this TXT record as a gasless ENS record.\n - `resolver-name-or-address` is either the 0x-prefixed hexadecimal address or the ENS name of the resolver to use to resolve queries for this name. If an ENS name is supplied, the name MUST be resolvable without using ENSIP-10 - meaning that the name MUST have a resolver set in the ENS registry, and the resolver MUST implement the `addr` function, which MUST NOT initiate a CCIP-Read request using `OffchainData`.\n - `context` is arbitrary additional data that may be passed to the resolver to complete the request (see below).", "mimetype": "text/plain", "start_char_idx": 1814, "end_char_idx": 2560, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9ef1896d-ac99-4913-83f2-872b4e304549": {"__data__": {"id_": "9ef1896d-ac99-4913-83f2-872b4e304549", "embedding": null, "metadata": {"file_path": "ensips/17.md", "file_name": "17.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/17.md", "header_path": "/ENSIP-17: Gasless DNS Resolution/Specification/", "customer_id": 1, "source_url": "ensips/17.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["calls", "resolves", "address", "either", "process", "resolution", "function", "first", "summary", "whichever", "resolver", "legacy", "decodes"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "eaa105e297475f3803a685f817f8c0e24131024a", "node_type": "4", "metadata": {"file_path": "ensips/17.md", "file_name": "17.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/17.md"}, "hash": "f172cc65ce714af02e24367ad661e7405258fd87d22b9246b559499f3d73c0ff", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f3b9ec0f-537d-4cb0-a7ad-9acbe09e810f", "node_type": "1", "metadata": {"file_path": "ensips/17.md", "file_name": "17.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/17.md", "header_path": "/ENSIP-17: Gasless DNS Resolution/Specification/"}, "hash": "b3486eaaf38b74e98e1be10d87ee2bd56600ce9ec7d44f35d8c34b5310f73c2b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "37e7e038-5bcb-4031-bc8b-42c2bc09e055", "node_type": "1", "metadata": {"header_path": "/ENSIP-17: Gasless DNS Resolution/Specification/Resolution Process/"}, "hash": "63d4007929069c13b2d10d8a0ca86f22e0087fb70504c8c65afe740a98298839", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Resolution Process #### Summary\n\nThe `OffchainDNSResolver` decodes or resolves the address of the resolver to use from `resolver-name-or-address`, and calls whichever of `IExtendedDNSResolver.resolve`, `IExtendedResolver.resolve` or a legacy resolution function is first supported. If either `resolve` function is invoked, nested CCIP-Read requests are handled correctly. #### Detailed Description\n\n`OffchainDNSResolver` implements `resolve` by initiating a CCIP-Read request, reverting with `OffchainLookup` and specifying the address of a CCIP-Read gateway capable of fetching and returning DNSSEC signed DNS records. The callback function for the CCIP-Read request implements the following logic:\n\n 1. Use the DNSSEC oracle to verify the returned RRSet. If verification fails, revert.\n 2. For each record in the returned RRSet:\n    1. Check if the RR name matches the name being resolved and the record type is TXT. If either check fails, continue to the next record.\n    2. Check if the first field in the TXT record starts with `ENS1 `. If not, continue to the next record.\n    3. Decode `resolver-name-or-address` and `context` from the text record.\n    4. If `resolver-name-or-address` contains a `.` character:\n       1. Compute the namehash of `resolver-name-or-address`.\n       2. Call `resolver(bytes32)` on the registry, passing in the namehash. If the registry returns `0`, continue to the next TXT record.\n       3. Call `addr(bytes32)` on the resolver address returned in step ii. If the resolver returns `0`, continue to the next TXT record.\n       4. Treat the returned address as the resolver address to use in subsequent steps.\n    5. If `resolver-name-or-address` does not contain a '.' character, treat it as a hexadecimal address and decode it. Treat the decoded address as the resolver address to use in subsequent steps.\n    6. Using ERC165, check if the returned resolver supports `IExtendedDNSResolver`. If it does, call `resolve(bytes name, bytes query, bytes context)`, passing `context` from the TXT record as the last argument. The call to `resolve` may use CCIP-Read; if it does, reverts will be handled appropriately. Return the result of this call as the result of the initial resolution request and halt.\n    7. Using ERC165, check if the returned resolver supporst `IExtendedResolver`. If it does, call `resolve(bytes name, bytes query)`. The call to `resolve` may use CCIP-Read; if it does, reverts will be handled appropriately. Return the result of this call as the result of the initial resolution request and halt.\n    8. Otherwise, call the resolver with calldata equal to the `query` originally supplied to `OffchainDNSResolver.resolve` and return its result as the result of the initial resolution request and halt. This resolution path does NOT support nested CCIP-Read requests.\n\nThe `IExtendedDNSResolver` interface is defined as follows:\n\n```go\ninterface IExtendedDNSResolver {\n    function resolve(\n        bytes memory name,\n        bytes memory data,\n        bytes memory context\n    ) external view returns (bytes memory);\n```\n\nThis acts as an extension of `IExtendedResolver` defined in ENSIP-10, providing the additional `context` argument, containing any supplementary data from the TXT record.\n\nNote that a TXT record may contain multiple text fields; in this implementation only the first field of each TXT record is considered. TXT record fields are limited to a maximum of 255 bytes each.", "mimetype": "text/plain", "start_char_idx": 2562, "end_char_idx": 2584, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5db774ac-f6b8-4ab7-9532-1f95a9058c1b": {"__data__": {"id_": "5db774ac-f6b8-4ab7-9532-1f95a9058c1b", "embedding": null, "metadata": {"file_path": "ensips/17.md", "file_name": "17.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/17.md", "header_path": "/ENSIP-17: Gasless DNS Resolution/Specification/", "customer_id": 1, "source_url": "ensips/17.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["idnsgateway", "struct", "rrsetwithsignature", "following", "interface", "gateway", "memory", "implements", "bytes", "function", "dnssec"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "eaa105e297475f3803a685f817f8c0e24131024a", "node_type": "4", "metadata": {"file_path": "ensips/17.md", "file_name": "17.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/17.md"}, "hash": "f172cc65ce714af02e24367ad661e7405258fd87d22b9246b559499f3d73c0ff", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3fe538a6-af85-4047-ab45-dde5aaca9326", "node_type": "1", "metadata": {"file_path": "ensips/17.md", "file_name": "17.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/17.md", "header_path": "/ENSIP-17: Gasless DNS Resolution/Specification/Resolution Process/"}, "hash": "123797d46e2275c93145426f74a05d6a4a89ccd52d4710ba1b0ead2f0ef06856", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b7b43f5a-c95d-46b6-899c-b745cf29fb41", "node_type": "1", "metadata": {"header_path": "/ENSIP-17: Gasless DNS Resolution/"}, "hash": "d0d9d381e6347a64258f6b44cbd8c3aaac5a06f37abd7f37334939b0dd8a7172", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### DNSSEC Gateway API\n\nThe DNSSEC Gateway implements the following API over CCIP-Read:\n\n```go\nstruct RRSetWithSignature {\n    bytes rrset;\n    bytes sig;\n}\n\ninterface IDNSGateway {\n    function resolve(\n        bytes memory name,\n        uint16 qtype\n    ) external returns (RRSetWithSignature[] memory);\n}\n```\n\nWhere:\n - `name` is a DNS-encoded name to query.\n - `qtype` is a DNS QTYPE as defined in RFC1034 - for example, `TXT` = 16.\n\nThe returned `rrset`s are in the format described in section 5.3.2 of RFC4035: The RRDATA section from the RRSIG without the signature data, followed by a series of canonicalised RR records that the signature applies to. One RRSET is returned for each step in the chain of trust, starting with the DNSKEY RRSET for the DNS root `.`, and ending with the requested RRSET, if it exists.\n\nA Solidity DNSSEC implementation for decoding and verifying RRSET data is available at https://github.com/ensdomains/ens-contracts/blob/staging/contracts/dnssec-oracle/.", "mimetype": "text/plain", "start_char_idx": 6016, "end_char_idx": 7008, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b7b43f5a-c95d-46b6-899c-b745cf29fb41": {"__data__": {"id_": "b7b43f5a-c95d-46b6-899c-b745cf29fb41", "embedding": null, "metadata": {"file_path": "ensips/17.md", "file_name": "17.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/17.md", "header_path": "/ENSIP-17: Gasless DNS Resolution/", "customer_id": 1, "source_url": "ensips/17.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["functionality", "backwards", "using", "compatibility", "import", "continue", "imported", "still", "existing", "names", "function"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "eaa105e297475f3803a685f817f8c0e24131024a", "node_type": "4", "metadata": {"file_path": "ensips/17.md", "file_name": "17.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/17.md"}, "hash": "f172cc65ce714af02e24367ad661e7405258fd87d22b9246b559499f3d73c0ff", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5db774ac-f6b8-4ab7-9532-1f95a9058c1b", "node_type": "1", "metadata": {"file_path": "ensips/17.md", "file_name": "17.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/17.md", "header_path": "/ENSIP-17: Gasless DNS Resolution/Specification/"}, "hash": "d10e0327c93d34893c492c7f01c0973653d2c5c72378f976cfd1ad63fd3ec961", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f73f1807-4609-42a8-87fd-5b0f0202c54a", "node_type": "1", "metadata": {"header_path": "/ENSIP-17: Gasless DNS Resolution/"}, "hash": "b3f53ad5fcba0b966cfcc3ccf644f4ab6427f54900e9533c8cce1bc10494111b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Backwards Compatibility\n\nDNS names imported using the existing functionality will continue to function as before, and new names can still be imported using the DNS import functionality. If an imported name exists, it is used to resolve the request, and any TXT records for gasless DNSSEC are ignored. If desired, the owner of the name can set the resolver to `address(0)` to cause resolution to fall back to gasless DNSSEC. ## Security Considerations\n\nGasless DNSSEC relies on a gateway and CCIP-Read to fetch cryptographic proofs of the chain of trust between the DNS root and the desired text record. It uses the same code, and hence has the same trust model, as the DNS import functionality; forging a DNS record would require access to a signing key somewhere in the chain of trust between DNS root and the record in question.\n\nDue to the use of a gateway service to generate responses, there is additional risk of unavailability: the gateway could be out of operation, or could choose to selectively refuse to answer (censor) certain queries.", "mimetype": "text/plain", "start_char_idx": 7010, "end_char_idx": 7436, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "107d3f9f-091c-4d07-86f2-e00c4a039ba8": {"__data__": {"id_": "107d3f9f-091c-4d07-86f2-e00c4a039ba8", "embedding": null, "metadata": {"file_path": "ensips/17.md", "file_name": "17.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/17.md", "header_path": "/ENSIP-17: Gasless DNS Resolution/", "customer_id": 1, "source_url": "ensips/17.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["copyright", "profile", "rights", "waived", "draft", "information", "standard", "related", "records", "galligan", "tateb", "adraffy"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "eaa105e297475f3803a685f817f8c0e24131024a", "node_type": "4", "metadata": {"file_path": "ensips/17.md", "file_name": "17.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/17.md"}, "hash": "f172cc65ce714af02e24367ad661e7405258fd87d22b9246b559499f3d73c0ff", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f73f1807-4609-42a8-87fd-5b0f0202c54a", "node_type": "1", "metadata": {"file_path": "ensips/17.md", "file_name": "17.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/17.md", "header_path": "/ENSIP-17: Gasless DNS Resolution/"}, "hash": "b70b85a7a4506773b42a11851cbf983091dacb929673b44682d6c0d4e1190242", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Copyright\n\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/). ---\ndescription: A standard for profile information as text records in ENS\ncontributors:\n  - TateB\n  - adraffy\n  - galligan\nensip:\n  status: draft\n  created: 2023-08-02\n--- # ENSIP-18: Profile Text Records ## Abstract\n\nThis ENSIP which extends [ENSIP-5: Text Records](ensip-5-text-records.md) defines a set of text records that should be used for profile information, along with the format that each should have.", "mimetype": "text/plain", "start_char_idx": 8063, "end_char_idx": 8175, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "af3fd3ca-cf09-4a15-b63b-87b5dff1008c": {"__data__": {"id_": "af3fd3ca-cf09-4a15-b63b-87b5dff1008c", "embedding": null, "metadata": {"file_path": "ensips/18.md", "file_name": "18.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/18.md", "header_path": "/ENSIP-18: Profile Text Records/", "customer_id": 1, "source_url": "ensips/18.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ethereum", "identifying", "across", "global", "motivation", "profile", "although", "integrating", "started", "record", "become", "increasingly", "popular", "defined", "names"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "989f0088e5fcc9ce25d95b2332c00d2f9c649f02", "node_type": "4", "metadata": {"file_path": "ensips/18.md", "file_name": "18.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/18.md"}, "hash": "53a6a71cdbbae6978ed6a29169c94f6f13981b4d166d931eda5d0a695ccaad30", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "55b2ec8e-601a-4189-98af-7466158b5d5d", "node_type": "1", "metadata": {"file_path": "ensips/18.md", "file_name": "18.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/18.md", "header_path": "/ENSIP-18: Profile Text Records/"}, "hash": "7f408ee3173c4151029a9d2f024b4af6e2ff561d2e41426bd9a4302673b1fadb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "620ae64e-1795-4df4-b32f-37e187784a9b", "node_type": "1", "metadata": {"header_path": "/ENSIP-18: Profile Text Records/"}, "hash": "8af4eebedb12144c9ee53ecf498a66636b988c5d773bba1bf26ff9de0f27c1b0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Motivation\n\nENS names have become increasingly popular to use as an identifying profile across the Ethereum ecosystem. Although many apps have started integrating ENS \"profiles\", the only defined global text record keys are in ENSIP-5. These global keys were defined based on the usecase of ENS names at the time, and were not created with profiles in mind.\n\nThis specification extends the existing set of global keys, as well as creating a new subset within global keys called \"profile keys\". ## Specification\n\nThe Profile Keys are a subset of Global Keys, the newly defined global keys are specified in the \"Global Keys\" section.", "mimetype": "text/plain", "start_char_idx": 416, "end_char_idx": 912, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "588642b5-6ade-4210-8eb4-caeb1dd0a27a": {"__data__": {"id_": "588642b5-6ade-4210-8eb4-caeb1dd0a27a", "embedding": null, "metadata": {"file_path": "ensips/18.md", "file_name": "18.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/18.md", "header_path": "/ENSIP-18: Profile Text Records/Specification/", "customer_id": 1, "source_url": "ensips/18.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["customised", "profile", "theme", "visual", "alias", "display", "below", "replacement", "choose", "displayed", "should"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "989f0088e5fcc9ce25d95b2332c00d2f9c649f02", "node_type": "4", "metadata": {"file_path": "ensips/18.md", "file_name": "18.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/18.md"}, "hash": "53a6a71cdbbae6978ed6a29169c94f6f13981b4d166d931eda5d0a695ccaad30", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "620ae64e-1795-4df4-b32f-37e187784a9b", "node_type": "1", "metadata": {"file_path": "ensips/18.md", "file_name": "18.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/18.md", "header_path": "/ENSIP-18: Profile Text Records/"}, "hash": "bf44dcd3c37c7d28df60a0a0b97c554d16b31572100d3eb3d65abafa5fd37b2a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6c6b958e-72a3-46f5-97e0-ec6b9c34023d", "node_type": "1", "metadata": {"header_path": "/ENSIP-18: Profile Text Records/Specification/Profile Keys/"}, "hash": "189eee5f76578379515e3315d349cbdff443795203326a4265233e213d842a97", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Profile Keys #### `alias`\n\n**Description:** A display alias\n\n**Format:** Any text\n\n**Example:** `ENS`\n\n**Design Considerations:** This should be displayed near the ENS name, but should not be displayed as a replacement for it and should be below it in the visual hierarchy. You can also choose not to show the alias at all. #### `theme`\n\n**Description:** A user customised theme to use\n\n**Format:** An array of comma separated hex colours.\nOrder should be as follows: `<background>,<text>,<accent>,<accentText>,<border>`.\nColours can be full or half length hex codes (e.g. `FFFFFF`, or `FFF`). A colour scheme can be incomplete but still valid by skipping a value similar to CSV (e.g. `000000,,F6F6F6,FFFFFF,FFF700`)\n\n**Example:** `3889FF,000,F6F6F6,FFFFFF,FFF700`\n\n**Design Considerations:** These colours can be used wherever a profile context is used (e.g. more than just the name), but separate colour schemes should never be used together on the same page. The scheme can also be extended to site-wide themability based on the primary name of the connected wallet. Selected accent and text colours should maintain a 4.5:1 contrast ratio against the selected background colour. Contrast ratio should be validated on record submission, as well as retrieval. If on retrieval colours do not meet the required contrast ratio, they should not be used. If the context requires that colours from a specific theme be used (e.g. an app theme), you can use the closest match to a colour in the theme.\n\n**Other Notes:** If allowing a user to select a theme that is specific to one vendor (e.g. `com.example`), you should use a vendor specific version of this record e.g. `com.example.theme`", "mimetype": "text/plain", "start_char_idx": 1053, "end_char_idx": 1069, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "55e8cd01-4487-48b9-b05d-26db3d5d7f48": {"__data__": {"id_": "55e8cd01-4487-48b9-b05d-26db3d5d7f48", "embedding": null, "metadata": {"file_path": "ensips/18.md", "file_name": "18.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/18.md", "header_path": "/ENSIP-18: Profile Text Records/Specification/Profile Keys/", "customer_id": 1, "source_url": "ensips/18.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["aspect", "ratio", "wherever", "avatar", "target", "image", "match", "source", "displayed", "should"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "989f0088e5fcc9ce25d95b2332c00d2f9c649f02", "node_type": "4", "metadata": {"file_path": "ensips/18.md", "file_name": "18.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/18.md"}, "hash": "53a6a71cdbbae6978ed6a29169c94f6f13981b4d166d931eda5d0a695ccaad30", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9ce912d2-62c2-423e-a5b4-cbc71a021777", "node_type": "1", "metadata": {"file_path": "ensips/18.md", "file_name": "18.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/18.md", "header_path": "/ENSIP-18: Profile Text Records/Specification/Profile Keys/"}, "hash": "3ad8e4f099c7a193a8b4c0c780289c589cbd9fd0de1dafd2b4ffa56bb9bb0436", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f6cb0853-50fe-4123-8322-7f70fa9067b4", "node_type": "1", "metadata": {"header_path": "/ENSIP-18: Profile Text Records/Specification/Profile Keys/"}, "hash": "518a5689601139772bb5426a1fe7a76a5fb69fc60132ad3da10b2a156daa9a7b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "#### `avatar`\n\n**Description:** An avatar image\n\n**Format:** See [ENSIP-12: Avatar Text Records](ensip-12-avatar-text-records.md)\n\n**Example:** See [ENSIP-12: Avatar Text Records](ensip-12-avatar-text-records.md)\n\n**Design Considerations:** This should be displayed next to the ENS name wherever possible. The image should be displayed with an aspect ratio of 1:1. If the source doesn't match the target ratio, the image should be cropped from the centre to fill the ratio. The image should not have any visible blank space.", "mimetype": "text/plain", "start_char_idx": 2744, "end_char_idx": 3268, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f6cb0853-50fe-4123-8322-7f70fa9067b4": {"__data__": {"id_": "f6cb0853-50fe-4123-8322-7f70fa9067b4", "embedding": null, "metadata": {"file_path": "ensips/18.md", "file_name": "18.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/18.md", "header_path": "/ENSIP-18: Profile Text Records/Specification/Profile Keys/", "customer_id": 1, "source_url": "ensips/18.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["other", "aspect", "profile", "ratio", "above", "header", "avatar", "between", "image", "displayed", "should"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "989f0088e5fcc9ce25d95b2332c00d2f9c649f02", "node_type": "4", "metadata": {"file_path": "ensips/18.md", "file_name": "18.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/18.md"}, "hash": "53a6a71cdbbae6978ed6a29169c94f6f13981b4d166d931eda5d0a695ccaad30", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "55e8cd01-4487-48b9-b05d-26db3d5d7f48", "node_type": "1", "metadata": {"file_path": "ensips/18.md", "file_name": "18.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/18.md", "header_path": "/ENSIP-18: Profile Text Records/Specification/Profile Keys/"}, "hash": "9c67de40f2dd07dbe4fc66cd21ad7d4632650829b6ecc0e09cc2144326fc222f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "438b3f56-c110-4d65-8118-94f091c71755", "node_type": "1", "metadata": {"header_path": "/ENSIP-18: Profile Text Records/Specification/Profile Keys/"}, "hash": "a60daf197ed291f97c0b535ebf4b0d34f415ea512e328363a9bcf6dbf8ab677b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "#### `header`\n\n**Description:** A header image\n\n**Format:** See [ENSIP-12: Avatar Text Records](ensip-12-avatar-text-records.md)\n\n**Example:** See [ENSIP-12: Avatar Text Records](ensip-12-avatar-text-records.md)\n\n**Design Considerations:** This should be displayed above all other profile content, or not at all. The image should be displayed with an aspect ratio of between 3:1 and 6:1. If the source doesn't match the target ratio, the image should be cropped from the centre to fill the ratio. The image should not have any visible blank space.", "mimetype": "text/plain", "start_char_idx": 3270, "end_char_idx": 3817, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "438b3f56-c110-4d65-8118-94f091c71755": {"__data__": {"id_": "438b3f56-c110-4d65-8118-94f091c71755", "embedding": null, "metadata": {"file_path": "ensips/18.md", "file_name": "18.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/18.md", "header_path": "/ENSIP-18: Profile Text Records/Specification/Profile Keys/", "customer_id": 1, "source_url": "ensips/18.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["characters", "string", "email", "contact", "exceeding", "layered", "address", "readable", "standard", "location", "biography", "names", "should"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "989f0088e5fcc9ce25d95b2332c00d2f9c649f02", "node_type": "4", "metadata": {"file_path": "ensips/18.md", "file_name": "18.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/18.md"}, "hash": "53a6a71cdbbae6978ed6a29169c94f6f13981b4d166d931eda5d0a695ccaad30", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f6cb0853-50fe-4123-8322-7f70fa9067b4", "node_type": "1", "metadata": {"file_path": "ensips/18.md", "file_name": "18.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/18.md", "header_path": "/ENSIP-18: Profile Text Records/Specification/Profile Keys/"}, "hash": "68aa4a6d5dc28bfa23a42e44d8602d1b962682aa6039f218df5f107cbf6571d2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9de5906a-9fd6-453d-81f9-51db3c1e9c08", "node_type": "1", "metadata": {"header_path": "/ENSIP-18: Profile Text Records/Specification/Profile Keys/"}, "hash": "313d9eab7a9627e2e2ccd8c9f6bad83c5ac9ec2c281cc5aa3c880c56ef77f202", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "#### `email`\n\n**Description:** An email that can be used as contact\n\n**Format:** Standard email address\n\n**Example:** `test@example.com`\n\n**Design Considerations:** None. #### `description`\n\n**Description:** A biography\n\n**Format:** Any string not exceeding 160 characters in length.\n\n**Example:** `Human readable names for Ethereum.`\n\n**Design Considerations:** None. #### `location`\n\n**Description:** A location\n\n**Format:** Any location, if location is layered should use `, ` for separation (e.g. `Melbourne, Australia`)\n\n**Example:** `Melbourne, Australia`\n\n**Design Considerations:** This value should not be assumed to be real coordinates or properly formatted place, as it may be a non-existent location", "mimetype": "text/plain", "start_char_idx": 3819, "end_char_idx": 3989, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a2cfa7f1-35d0-4c24-b431-81afa8e3655c": {"__data__": {"id_": "a2cfa7f1-35d0-4c24-b431-81afa8e3655c", "embedding": null, "metadata": {"file_path": "ensips/18.md", "file_name": "18.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/18.md", "header_path": "/ENSIP-18: Profile Text Records/Specification/Profile Keys/", "customer_id": 1, "source_url": "ensips/18.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["valid", "website", "wherever", "letter", "follows", "language", "should", "https", "possible", "timezone", "bottom", "shown"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "989f0088e5fcc9ce25d95b2332c00d2f9c649f02", "node_type": "4", "metadata": {"file_path": "ensips/18.md", "file_name": "18.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/18.md"}, "hash": "53a6a71cdbbae6978ed6a29169c94f6f13981b4d166d931eda5d0a695ccaad30", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "eddf6a2b-e66c-4d9b-80bd-9cb10966d281", "node_type": "1", "metadata": {"file_path": "ensips/18.md", "file_name": "18.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/18.md", "header_path": "/ENSIP-18: Profile Text Records/Specification/Profile Keys/"}, "hash": "c0d6618c95678940c88e7b27da418f69006590a80c4a55af0867387d058a53ae", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "17b5053e-10de-4dd9-b59f-cba56a4e7b39", "node_type": "1", "metadata": {"header_path": "/ENSIP-18: Profile Text Records/Specification/Profile Keys/"}, "hash": "c3d2fb9c11d2fe837ad6488245e52aa4a6d6098d539ed1db8b22757c36c3e6b4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "#### `url`\n\n**Description:** A website URL\n\n**Format:** Any valid HTTP or HTTPS link.\n\n**Example:** `https://ens.domains`\n\n**Design Considerations:** This link should be clickable, and wherever possible shown at the bottom of the profile. #### `timezone`\n\n**Description:** A timezone\n\n**Format:** Any timezone name from the [tz database](https://www.iana.org/time-zones). Follows `<area>/<location>[/<quantifier>]`\n\n**Example:** `Australia/Melbourne`\n\n**Design Considerations:** None. #### `language`\n\n**Description:** A language\n\n**Format:** A two letter language code from [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).\n\n**Example:** `en`\n\n**Design Considerations:** None.", "mimetype": "text/plain", "start_char_idx": 4534, "end_char_idx": 4772, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "281c9da6-1ba7-4d7b-a76b-ac7e3d348515": {"__data__": {"id_": "281c9da6-1ba7-4d7b-a76b-ac7e3d348515", "embedding": null, "metadata": {"file_path": "ensips/18.md", "file_name": "18.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/18.md", "header_path": "/ENSIP-18: Profile Text Records/Specification/Profile Keys/", "customer_id": 1, "source_url": "ensips/18.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["primary", "service", "contact", "profile", "record", "value", "direct", "corresponding", "links", "resolve", "could", "existing", "resolving", "should"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "989f0088e5fcc9ce25d95b2332c00d2f9c649f02", "node_type": "4", "metadata": {"file_path": "ensips/18.md", "file_name": "18.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/18.md"}, "hash": "53a6a71cdbbae6978ed6a29169c94f6f13981b4d166d931eda5d0a695ccaad30", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "06558553-8cd4-40d7-8384-ff1bc2b0c369", "node_type": "1", "metadata": {"file_path": "ensips/18.md", "file_name": "18.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/18.md", "header_path": "/ENSIP-18: Profile Text Records/Specification/Profile Keys/"}, "hash": "a389f688f2edd1656974b367748bc7afa944c000b27b4291382bf9e31d3bbb83", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3f3ce6d8-d939-4717-bbc7-868dc1508c6b", "node_type": "1", "metadata": {"header_path": "/ENSIP-18: Profile Text Records/Specification/"}, "hash": "449fdde5804e0234bf5223840d3eac1f64d0c85246475d8302fe7e768cd5c515", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "#### `primary-contact`\n\n**Description:** The record key for a primary contact\n\n**Format:** `email`, or any existing profile service key\n\n**Example:** `com.github`\n\n**Design Considerations:** When resolving `primary-contact` for a profile, the value should resolve to the service (which could be logo or name) and the corresponding value. Direct links to the service should be supported on a best-effort basis (e.g. `com.github` => `https://github.com/`) ### Global Keys\n\nProfile Keys are a subset of Global Keys, therefore these global keys extend the existing global keys defined in ENSIP-5.\n\n- `alias`\n- `theme`\n- `header`\n- `timezone`\n- `language`\n- `primary-contact`", "mimetype": "text/plain", "start_char_idx": 5233, "end_char_idx": 5686, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b7dd00c2-0372-45e5-ba66-768c16f4b704": {"__data__": {"id_": "b7dd00c2-0372-45e5-ba66-768c16f4b704", "embedding": null, "metadata": {"file_path": "ensips/18.md", "file_name": "18.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/18.md", "header_path": "/ENSIP-18: Profile Text Records/Specification/Global Keys/", "customer_id": 1, "source_url": "ensips/18.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["service", "profile", "creating", "optional", "derived", "value", "always", "prefixes", "should"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "989f0088e5fcc9ce25d95b2332c00d2f9c649f02", "node_type": "4", "metadata": {"file_path": "ensips/18.md", "file_name": "18.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/18.md"}, "hash": "53a6a71cdbbae6978ed6a29169c94f6f13981b4d166d931eda5d0a695ccaad30", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3f3ce6d8-d939-4717-bbc7-868dc1508c6b", "node_type": "1", "metadata": {"file_path": "ensips/18.md", "file_name": "18.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/18.md", "header_path": "/ENSIP-18: Profile Text Records/Specification/"}, "hash": "d5e8ac27836f0174590d045becfdfe4f5a34858617a45476aa03f5f7f6c8c6c4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "02fa54ff-e38f-4cda-b8b7-19324a1d81ee", "node_type": "1", "metadata": {"header_path": "/ENSIP-18: Profile Text Records/Specification/"}, "hash": "2ea15f5193944814e6dbb87e85f80f844940cdf230d4463bac0e64ab7db101df", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "#### Profile Service Keys\n\nA profile service key is a profile key derived from the root of the service's domain. E.g. `com.github`, `org.telegram`, etc.\n\nWhen creating a profile service key record, the value should be **void of optional service-specific formatting** such as prefixes like `/u/` or `@`.\n\nIn the case that the value is always displayed in a certain format, the formatting may be kept. However, any parsing or processing done on said value should attempt to be compatible with values that do not have the formatting applied.", "mimetype": "text/plain", "start_char_idx": 5906, "end_char_idx": 6444, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "02fa54ff-e38f-4cda-b8b7-19324a1d81ee": {"__data__": {"id_": "02fa54ff-e38f-4cda-b8b7-19324a1d81ee", "embedding": null, "metadata": {"file_path": "ensips/18.md", "file_name": "18.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/18.md", "header_path": "/ENSIP-18: Profile Text Records/Specification/", "customer_id": 1, "source_url": "ensips/18.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["whether", "against", "absolute", "creating", "limit", "being", "avatar", "validated", "image", "maximum", "files", "should"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "989f0088e5fcc9ce25d95b2332c00d2f9c649f02", "node_type": "4", "metadata": {"file_path": "ensips/18.md", "file_name": "18.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/18.md"}, "hash": "53a6a71cdbbae6978ed6a29169c94f6f13981b4d166d931eda5d0a695ccaad30", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b7dd00c2-0372-45e5-ba66-768c16f4b704", "node_type": "1", "metadata": {"file_path": "ensips/18.md", "file_name": "18.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/18.md", "header_path": "/ENSIP-18: Profile Text Records/Specification/Global Keys/"}, "hash": "5c4a4e87c5d6217c4197b85394bd26b9e0bb66aaf6e0f35590fca7a161dc65fe", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c38d59bc-e64d-434d-b56b-6d09bc59efbf", "node_type": "1", "metadata": {"header_path": "/ENSIP-18: Profile Text Records/"}, "hash": "065efd8c69a18dce94d8be235b732e3b613996cf0d24f726e7663be461cb918e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Image files\n\nWhen **setting** an image for an avatar or header, it is **strongly recommended** to limit the file size to an absolute maximum of 10MB. The image being set should be validated against this limit, whether it is a URL, or an NFT. Ideally, if creating an image to be set on behalf of the user, the file size should be limited to 2MB. Additionally, maintainers of image endpoints should support dimensions of images to be limited via query string `?width={width}&height={height}` wherever possible.\n\nWhen **retrieving** an image for an avatar or header, images should attempt to be loaded if 10MB or less in file size. Loading images above 10MB is not required, but ideally loading should still be attempted. If retrieving an image via URL, a query string can be optionally appended to the URL to limit the dimensions via `?width={width}&height={height}`. However, the query string may have no effect.", "mimetype": "text/plain", "start_char_idx": 6446, "end_char_idx": 7361, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c38d59bc-e64d-434d-b56b-6d09bc59efbf": {"__data__": {"id_": "c38d59bc-e64d-434d-b56b-6d09bc59efbf", "embedding": null, "metadata": {"file_path": "ensips/18.md", "file_name": "18.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/18.md", "header_path": "/ENSIP-18: Profile Text Records/", "customer_id": 1, "source_url": "ensips/18.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["considerations", "copyright", "consider", "backwards", "security", "rights", "displaying", "waived", "replaces", "should", "compatibility", "related", "resolving"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "989f0088e5fcc9ce25d95b2332c00d2f9c649f02", "node_type": "4", "metadata": {"file_path": "ensips/18.md", "file_name": "18.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/18.md"}, "hash": "53a6a71cdbbae6978ed6a29169c94f6f13981b4d166d931eda5d0a695ccaad30", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "02fa54ff-e38f-4cda-b8b7-19324a1d81ee", "node_type": "1", "metadata": {"file_path": "ensips/18.md", "file_name": "18.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/18.md", "header_path": "/ENSIP-18: Profile Text Records/Specification/"}, "hash": "c5d034143b12e398fbb263c2d46fa612d9aaf17f58f8431c09dc3a61387ffd02", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d4e5a0ed-a349-4bbe-b451-c426af5148b8", "node_type": "1", "metadata": {"header_path": "/ENSIP-18: Profile Text Records/"}, "hash": "916ad8701268cdb9879b4ad02ce4a2f66d7283920f4cde0e04e4e64bd3845865", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Backwards Compatibility\n\nThe `alias` key replaces the pre-existing `name` key. When displaying an alias, you should consider also resolving the `name` key and displaying it, if `alias` is not available. ## Security Considerations\n\nNone. ## Copyright\n\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/). ---\ndescription: Specifies reverse resolution in a cross-chain context\ncontributors:\n  - jefflau.eth\nensip:\n  status: draft\n  created: 2023-03-14\n---", "mimetype": "text/plain", "start_char_idx": 7363, "end_char_idx": 7568, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "19498f37-7df9-4718-8e4d-9916cd9c5435": {"__data__": {"id_": "19498f37-7df9-4718-8e4d-9916cd9c5435", "embedding": null, "metadata": {"file_path": "ensips/19.md", "file_name": "19.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/19.md", "header_path": "/", "customer_id": 1, "source_url": "ensips/19.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["primary", "other", "allows", "EIP-2304", "abstract", "reverse", "resolution", "ensip", "setting", "specifies", "records", "names", "resolving"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "cce0e42feff5749d2720b802910ae0346a10701f", "node_type": "4", "metadata": {"file_path": "ensips/19.md", "file_name": "19.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/19.md"}, "hash": "25641c6316192b54d3e1aa283c3cc098d590fe44c971f38ddff08402017fdbd6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3f2d0a2d-c0f8-48a0-9e92-05aee2800667", "node_type": "1", "metadata": {"file_path": "ensips/19.md", "file_name": "19.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/19.md", "header_path": "/"}, "hash": "553c8638c5a8c16d35c67697bc3a1a53392a9241679e3c1db624714e4b2f6ca6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e00e352e-c164-4f04-b53a-b6dd24abeac1", "node_type": "1", "metadata": {"header_path": "/ENSIP-19: EVM-chain Reverse Resolution/"}, "hash": "504eca743b52b563d62fc00cf8200c7728823ed8d22494b3efe46acbe695a43f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# ENSIP-19: EVM-chain Reverse Resolution ## Abstract\n\nThis ENSIP specifies a way for reverse resolution to be used on other EVM chains. This allows setting primary names on L2s, as well as resolving any other records set on this specific reverse record, such as the avatar. ## Motivation\n\nReverse resolution has been in use since ENS's inception, however at the time Ethereum had no concrete scaling plans. In the past 5 years, we've seen layer 2s and sidechains become more prevalent and we first allowed support for these with ENSIP-9 (formerly EIP-2304) to allow addresses from other chains to be stored on ENS. To complete support for other EVM chains, reverse resolution needs to be expanded to allow reverse resolution to also exist.", "mimetype": "text/plain", "start_char_idx": 151, "end_char_idx": 191, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "16074cfa-e434-40e0-8b29-a018297d9395": {"__data__": {"id_": "16074cfa-e434-40e0-8b29-a018297d9395", "embedding": null, "metadata": {"file_path": "ensips/19.md", "file_name": "19.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/19.md", "header_path": "/ENSIP-19: EVM-chain Reverse Resolution/", "customer_id": 1, "source_url": "ensips/19.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["setup", "registrar", "record", "reverse", "registry", "allow", "corresponding", "overview", "without", "registrars", "resolver", "setting", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "cce0e42feff5749d2720b802910ae0346a10701f", "node_type": "4", "metadata": {"file_path": "ensips/19.md", "file_name": "19.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/19.md"}, "hash": "25641c6316192b54d3e1aa283c3cc098d590fe44c971f38ddff08402017fdbd6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "866b25f0-869c-48ba-811a-76997b3dcb5a", "node_type": "1", "metadata": {"file_path": "ensips/19.md", "file_name": "19.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/19.md", "header_path": "/ENSIP-19: EVM-chain Reverse Resolution/"}, "hash": "379ed2cca55e9164ec4ffbc258e8ed5eee5f265a225d5fcd958b865820ed5760", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f55838cb-66fe-48d6-82d0-70a491f0326a", "node_type": "1", "metadata": {"header_path": "/ENSIP-19: EVM-chain Reverse Resolution/Specification/"}, "hash": "37939df8bdba9f9b3b443f70f20495e889a20b5c7b8c7e8e791c07e49232399e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification ### Overview\n\n* Reverse registrars will be setup on each EVM-chain, with a corresponding registry\n* Reverse registrar will only allow setting the name and text record without resolver customisability.\n  This is to allow a consistent storage slot that can be checked on L1.\n* User can now claim their reverse on this chain and set it to their ENS name\n* Their ENS name will need to set their record for the same EVM-cointype as the network, which is specified in [ENSIP-11](https://docs.ens.domains/ensip/11).\n* A dapp can then detect the chainID that a user is on, convert that into coinType in hexadecimal and resolve their primary ens name by resolving the name record at [userAddress].[coinTypeAsHex].reverse. This will be resolved via a CCIP-read gateway and look up the reverse record on the corresponding EVM-chain. Depending on if the chain is an L2 that has state roots on L1 or sidechain, verification can be done with trusted signatures or trustlessly on Ethereum mainnet.\n* Dapps will then resolve this name via ENS on L1 to check if the forward resolution matches. This forward resolution can be on L1, or the user can set up a CCIP-read resolver and records for each network and put those addresses wherever they want (such as on another L2)\n* Once matched, the dapp can then also resolve any text records on the primary ENS name, such as avatar.\n* Discovery of the reverse registrar on each chain will be done by looking up the `addr()` of [coinTypeAsHex].reverse.\n* coinType in all instances will be the hex representation to reduce the length of the name", "mimetype": "text/plain", "start_char_idx": 894, "end_char_idx": 910, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "454136f5-6d92-4423-9e1f-217f68899dff": {"__data__": {"id_": "454136f5-6d92-4423-9e1f-217f68899dff", "embedding": null, "metadata": {"file_path": "ensips/19.md", "file_name": "19.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/19.md", "header_path": "/ENSIP-19: EVM-chain Reverse Resolution/Specification/", "customer_id": 1, "source_url": "ensips/19.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["offchain", "setup", "registrar", "address", "reverse", "subdomain", "resolver", "deployment", "discovery", "owner", "registrars", "onchain"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "cce0e42feff5749d2720b802910ae0346a10701f", "node_type": "4", "metadata": {"file_path": "ensips/19.md", "file_name": "19.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/19.md"}, "hash": "25641c6316192b54d3e1aa283c3cc098d590fe44c971f38ddff08402017fdbd6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f55838cb-66fe-48d6-82d0-70a491f0326a", "node_type": "1", "metadata": {"file_path": "ensips/19.md", "file_name": "19.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/19.md", "header_path": "/ENSIP-19: EVM-chain Reverse Resolution/Specification/"}, "hash": "9d5f9bd47377837e6044817690371e25978b48a81d423059231b6aefbb207e50", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "64b19fdc-0a95-4391-8891-a2aece609b0f", "node_type": "1", "metadata": {"header_path": "/ENSIP-19: EVM-chain Reverse Resolution/Specification/"}, "hash": "ccdf34bfb48bd2bbbfac845efe698c144b6b4004f601b78cd013705b0cd4235e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Deployment and discovery of EVM Reverse registrars\n\nWhen a new EVM reverse registrar is deployed, it will need to be setup by the owner of the `reverse` node, to setup a subdomain [coinTypeAsHex].reverse. It must then be setup with an Offchain resolver that has an onchain L1 address record that return the contract address of the reverse registrar for that chain. The Offchain resolver will also support wildcard of all the address subdomains with the format [address].[coinTypeAsHex].reverse. Additionally there must be a new EVM gateway setup to handle the CCIP-read revert errors that will go to the corresponding network to gather the chain-specific reverse record and verify this data on L1.", "mimetype": "text/plain", "start_char_idx": 2484, "end_char_idx": 3185, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "64b19fdc-0a95-4391-8891-a2aece609b0f": {"__data__": {"id_": "64b19fdc-0a95-4391-8891-a2aece609b0f", "embedding": null, "metadata": {"file_path": "ensips/19.md", "file_name": "19.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/19.md", "header_path": "/ENSIP-19: EVM-chain Reverse Resolution/Specification/", "customer_id": 1, "source_url": "ensips/19.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["primary", "compliant", "resolving", "rules", "reverse", "these", "resolution", "below", "adhere", "names", "process"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "cce0e42feff5749d2720b802910ae0346a10701f", "node_type": "4", "metadata": {"file_path": "ensips/19.md", "file_name": "19.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/19.md"}, "hash": "25641c6316192b54d3e1aa283c3cc098d590fe44c971f38ddff08402017fdbd6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "454136f5-6d92-4423-9e1f-217f68899dff", "node_type": "1", "metadata": {"file_path": "ensips/19.md", "file_name": "19.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/19.md", "header_path": "/ENSIP-19: EVM-chain Reverse Resolution/Specification/"}, "hash": "1e19b501213a97a2c6bd0b7d881780bcfb3ff544c70860153c2927a83e058a1a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0ee6aa06-6494-4ec0-94b1-8128d3621c2b", "node_type": "1", "metadata": {"header_path": "/ENSIP-19: EVM-chain Reverse Resolution/Specification/Resolving Primary ENS Names by a dapp/"}, "hash": "82a783d4b14e1225fce4ecd884faaa9610bc97feed8016529ddf18e56bdd1adf", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Resolving Primary ENS Names by a dapp\n\nBelow is a step-by-step resolution process of ENS reverse resolution. A dapp must adhere to these rules to be compliant with the reverse resolution process. This reverse resolution process adds on to ENSIP-3's original reverse resolution process and will act as a replacement for applications that support Primary ENS names on multiple chains. #### Glossary of terms\n\n* `[address]` is the lowercase hexadecimal representation of an Ethereum address with prefix `0x` removed.\n\n* `coinType` for chain ids is derived using [ENSIP-11](https://docs.ens.domains/ensip/11) by ORing the chainId with `0x80000000`\n\n* `coinTypeAsHex` is the cointype converted to hexadecimal.\n\n* Registry refers to the ENS registry on Ethereum L1\n\n* Resolver refers to the resolver of the Reverse node whether on L1 or another chain\n\n* Primary Name is the common name use for the reverse node's record `name`", "mimetype": "text/plain", "start_char_idx": 3187, "end_char_idx": 3573, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a9fef430-1e26-48af-ba7b-5bbed3818521": {"__data__": {"id_": "a9fef430-1e26-48af-ba7b-5bbed3818521", "embedding": null, "metadata": {"file_path": "ensips/19.md", "file_name": "19.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/19.md", "header_path": "/ENSIP-19: EVM-chain Reverse Resolution/Specification/Resolving Primary ENS Names by a dapp/", "customer_id": 1, "source_url": "ensips/19.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["primary", "0x80000000", "reverse", "connected", "resolution", "currently", "using", "chain", "resolver", "fetch", "process"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "cce0e42feff5749d2720b802910ae0346a10701f", "node_type": "4", "metadata": {"file_path": "ensips/19.md", "file_name": "19.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/19.md"}, "hash": "25641c6316192b54d3e1aa283c3cc098d590fe44c971f38ddff08402017fdbd6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0ee6aa06-6494-4ec0-94b1-8128d3621c2b", "node_type": "1", "metadata": {"file_path": "ensips/19.md", "file_name": "19.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/19.md", "header_path": "/ENSIP-19: EVM-chain Reverse Resolution/Specification/Resolving Primary ENS Names by a dapp/"}, "hash": "8ecb3c60f9679189be626704998b63c41e3e9df5f7d5f82f92758467acf387df", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "834e2f53-8e93-427e-8012-9105619dd603", "node_type": "1", "metadata": {"header_path": "/ENSIP-19: EVM-chain Reverse Resolution/Specification/"}, "hash": "9702277670d08914d5aeea6c7ae385682d87be3382029be82a7b4eb70aec8fbe", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "#### Primary Name Resolution process\n\n1) Let `chainId` be the chain ID of the DApp's currently connected chain.\n2) If `chainId` is 1, set `reverseName = \"[address].addr.reverse\" and `coinType = 60` and go to step 5.\n3) Otherwise, set `coinType` using ENSIP-11: `coinType = 0x80000000 | chainId`.\n4) Set `reverseName = '[address].[coinTypeAsHex].reverse'`\n5) Set `node = namehash(reverseName)`.\n6) Fetch the resolver for the reverse name: `resolver = registry.resolver(node)`\n7) Fetch the primary name from the reverse record's resolver: `name = resolver.name(node)`\n8) If the primary name is not the empty string, go to step 11.\n9) If `name` is an empty string, and `coinType` is not 0, set `reverseName = '[address].default.reverse'` and `coinType = 0` and go to step 5.\n10) Otherwise, no primary name exists for this account on this chain; halt and display the address instead.\n11) If the dapp finds an ENS name, it MUST then check the forward resolution. This can be done by using the resolution processs in [ENSIP-10](https://docs.ens.domains/ensip/10). When constructing the ENSIP-10 `resolve()` calldata, encode a call to `addr(bytes32 node, uint256 coinType)`. Set `resolvedAddress` to the result of calling `resolve` on the resolver with this calldata.\n12) If `resolvedAddress == address`, the dapp considers the Primary Name valid, and can now show this instead of the address within the application.\n13) If `resolvedAddress != address` the dapp considers the Primary Name invalid and MUST show the address instead.\n    \nNote: The dapp MUST NOT use the reverse record set for Ethereum mainnet ([address].addr.reverse) even if the Primary ENS name has not been set on the target chain, and must treat this identically to an address with no primary name set.", "mimetype": "text/plain", "start_char_idx": 4114, "end_char_idx": 5879, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "834e2f53-8e93-427e-8012-9105619dd603": {"__data__": {"id_": "834e2f53-8e93-427e-8012-9105619dd603", "embedding": null, "metadata": {"file_path": "ensips/19.md", "file_name": "19.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/19.md", "header_path": "/ENSIP-19: EVM-chain Reverse Resolution/Specification/", "customer_id": 1, "source_url": "ensips/19.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["therefore", "reflect", "reverse", "concieved", "avatar", "resolution", "current", "another", "before", "chain", "updated", "state", "resolving", "should", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "cce0e42feff5749d2720b802910ae0346a10701f", "node_type": "4", "metadata": {"file_path": "ensips/19.md", "file_name": "19.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/19.md"}, "hash": "25641c6316192b54d3e1aa283c3cc098d590fe44c971f38ddff08402017fdbd6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a9fef430-1e26-48af-ba7b-5bbed3818521", "node_type": "1", "metadata": {"file_path": "ensips/19.md", "file_name": "19.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/19.md", "header_path": "/ENSIP-19: EVM-chain Reverse Resolution/Specification/Resolving Primary ENS Names by a dapp/"}, "hash": "480c9523bbfa4857b3b990b8f8196e1266166cca9fa830660f84f167a50a1ffc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "834edb49-7119-48e6-bb9e-22fbd4a18b6d", "node_type": "1", "metadata": {"header_path": "/ENSIP-19: EVM-chain Reverse Resolution/Specification/"}, "hash": "80c666c39d01cb36362de6e9a7c9ceccff30128430f50ed0700565ab92d67b4a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Resolving an avatar by a dapp on another EVM chain\n\nENSIP-12 was concieved before the ENS L2 reverse resolution specification and therefore should be updated to reflect the current state of ENS primary name resolution. This means that all avatar records are able to be updated on a per-chain basis by updating the avatar record on their reverse node.\n\nTo determine the avatar URI for a specific EVM chain address, the client can follow the resolution process above until step 6) And then do the following\n\n1. Perform [Ethereum address avatar text record resolution](https://docs.ens.domains/ensip/12#ethereum-address) on the reverse node.\n2. If none is found, proceed to step 7) in the [Primary name resolution process](#primary-name-resolution-process) above, if no primary name is found, consider the avatar resolution a failure.\n3. Perform [ENS name avatar text record resolution](https://docs.ens.domains/ensip/12#ens-name) on the ENS name.", "mimetype": "text/plain", "start_char_idx": 5882, "end_char_idx": 6830, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "834edb49-7119-48e6-bb9e-22fbd4a18b6d": {"__data__": {"id_": "834edb49-7119-48e6-bb9e-22fbd4a18b6d", "embedding": null, "metadata": {"file_path": "ensips/19.md", "file_name": "19.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/19.md", "header_path": "/ENSIP-19: EVM-chain Reverse Resolution/Specification/", "customer_id": 1, "source_url": "ensips/19.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["primary", "other", "valid", "mainnet", "zksync", "polygon", "deprecating", "reverse", "record", "resolution", "about", "chains", "explicit", "examples"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "cce0e42feff5749d2720b802910ae0346a10701f", "node_type": "4", "metadata": {"file_path": "ensips/19.md", "file_name": "19.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/19.md"}, "hash": "25641c6316192b54d3e1aa283c3cc098d590fe44c971f38ddff08402017fdbd6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "834e2f53-8e93-427e-8012-9105619dd603", "node_type": "1", "metadata": {"file_path": "ensips/19.md", "file_name": "19.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/19.md", "header_path": "/ENSIP-19: EVM-chain Reverse Resolution/Specification/"}, "hash": "00f461d86ad211c3fd46a4aab46ccaf7259905d439198a839ce0d4f10b7fab9e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e933458b-5248-48af-8b15-ecf1fc6b9aa6", "node_type": "1", "metadata": {"header_path": "/ENSIP-19: EVM-chain Reverse Resolution/Specification/"}, "hash": "0d136017b47468a8d09b1b7dd8efee31578a33d917d09515aa527660c675cd45", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Examples of valid L2 reverse resolution\n\n* Arbitrum: 0f32b753afc8abad9ca6fe589f707755f4df2353.8000A4B1.reverse\n* Optimism:\n0f32b753afc8abad9ca6fe589f707755f4df2353.8000000A.reverse\n* Base: 0f32b753afc8abad9ca6fe589f707755f4df2353.80002105.reverse\n* Polygon ZKEVM: 0f32b753afc8abad9ca6fe589f707755f4df2353.8000044D.reverse\n* ZKSync Era: 0f32b753afc8abad9ca6fe589f707755f4df2353.80000144.reverse ### Deprecating use of mainnet primary ENS name on other chains\n\nENS has not been explicit about how to use the mainnet `addr()` record and it is often used as a backup to a user not having an address record set. The mainnet reverse record has also historically been used on other EVM chains due to no alternative on that specific chain. There are a few reasons why it would undesirable to encourage use of mainnet primary name and/or `addr(node, 60)` record as a backup for it not being set on another EVM chain.\n\nAn example of why this could be confusing:\n\nDapp is on Arbitrum and uses mainnet primary ENS name. It resolves the ENS name's mainnet address and uses that to verify the reverse record is correct. It also uses the mainnet address to allow in-app transfers.\n\nMainnet primary ENS name that has an `addr(node, 60)` that is a smart contract wallet. The smart contract wallet is only on Ethereum and the user is unable to use `CREATE2` to deploy the same smart contract wallet on arbitrum. User 2 sees this Primary ENS name and wants to send funds to User 1. User 2 resolves the `addr()` of the ENS name and sends the funds to an address that doesn't exist on arbitrum and User 1 has no way to access the counterfactual address on that chain.\n\nIf we mandated that the address cannot use `addr(node, 60)`, but only the address of the chain in question, it would be possible to use mainnet as a backup. However the fact remains that you would still need to claim and set your Primary ENS name on mainnet, and the possibility for confusion seem to outweigh the benefits of using mainnet (high gas) as a catch-all back up for other L2 EVM chains (low gas). Additionally this would only be useful for EVM-compatible chains and would not benefit non-EVM L2s that have a different address format.", "mimetype": "text/plain", "start_char_idx": 6832, "end_char_idx": 7229, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5818986d-269b-4807-9a00-105d9612ad8d": {"__data__": {"id_": "5818986d-269b-4807-9a00-105d9612ad8d", "embedding": null, "metadata": {"file_path": "ensips/19.md", "file_name": "19.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/19.md", "header_path": "/ENSIP-19: EVM-chain Reverse Resolution/", "customer_id": 1, "source_url": "ensips/19.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["domains", "maurelian", "copyright", "registrar", "abstract", "rights", "describes", "waived", "initially", "obsolete", "EIP-162", "related", "register", "initial"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "cce0e42feff5749d2720b802910ae0346a10701f", "node_type": "4", "metadata": {"file_path": "ensips/19.md", "file_name": "19.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/19.md"}, "hash": "25641c6316192b54d3e1aa283c3cc098d590fe44c971f38ddff08402017fdbd6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e933458b-5248-48af-8b15-ecf1fc6b9aa6", "node_type": "1", "metadata": {"file_path": "ensips/19.md", "file_name": "19.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/19.md", "header_path": "/ENSIP-19: EVM-chain Reverse Resolution/Specification/"}, "hash": "9ecce349df01cb5eeff3d6e8da6555b06169f094a4b104db4c4192bf7d8be1d6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Copyright\n\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/). ---\ndescription: Describes the hash registrar initially used to register ENS .eth domains (formerly EIP-162).\ncontributors:\n  - nick.eth\n  - avsa.eth\n  - maurelian\nensip:\n  created: '2016-10-25'\n  status: obsolete\nignoredRules: [\"heading:prior-work\"]\n--- # ENSIP-2: Initial Hash Registrar ## Abstract\n\nThis ERC describes the implementation, as deployed to the main ethereum network on 2017-05-04, of a registrar contract to govern the allocation of names in the Ethereum Name Service (ENS). The corresponding source code is [here](https://github.com/ethereum/ens/blob/mainnet/contracts/HashRegistrarSimplified.sol).\n\nFor more background, refer to ENSIP-1.\n\n> Registrars are responsible for allocating domain names to users of the system, and are the only entities capable of updating the ENS; the owner of a node in the ENS registry is its registrar. Registrars may be contracts or externally owned accounts, though it is expected that the root and top-level registrars, at a minimum, will be implemented as contracts.\n>\n> \\- ENSIP-1\n\nA well designed and governed registrar is essential to the success of the ENS described in ENSIP-1, but is described separately in this document as it is external to the core ENS protocol.\n\nIn order to maximize utility and adoption of a new namespace, the registrar should mitigate speculation and \"name squatting\", however the best approach for mitigation is unclear. Thus an \"initial\" registrar is proposed, which implements a simple approach to name allocation. During the initial period, the available namespace will be significantly restricted to the `.eth` top level domain, and subdomain shorter than 7 characters in length disallowed. This specification largely describes @alexvandesande and @arachnid's [hash registrar implementation](https://github.com/ethereum/ens/blob/mainnet/contracts/HashRegistrarSimplified.sol) in order to facilitate discussion.\n\nThe intent is to replace the Initial Registrar contract with a permanent registrar contract. The Permanent Registrar will increase the available namespace, and incorporate lessons learned from the performance of the Initial Registrar. This upgrade is expected to take place within approximately 2 years of initial deployment.", "mimetype": "text/plain", "start_char_idx": 9033, "end_char_idx": 9145, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "492401d9-48ba-4743-a339-55ed16ef2f97": {"__data__": {"id_": "492401d9-48ba-4743-a339-55ed16ef2f97", "embedding": null, "metadata": {"file_path": "ensips/2.md", "file_name": "2.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/2.md", "header_path": "/ENSIP-2: Initial Hash Registrar/", "customer_id": 1, "source_url": "ensips/2.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["registrar", "motivation", "adoption", "factors", "order", "safely", "following", "optimize", "knowledge", "considered", "initial", "should", "governance"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "014f22fde517f68ec763a546547581c2a18ef0ae", "node_type": "4", "metadata": {"file_path": "ensips/2.md", "file_name": "2.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/2.md"}, "hash": "6c0df0d6e56bef5fae9961bb4e53b43351fa20f90205e4aa45e95b5ab773ce25", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7ad90086-ac40-4e8e-96a8-dfdd46200195", "node_type": "1", "metadata": {"file_path": "ensips/2.md", "file_name": "2.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/2.md", "header_path": "/ENSIP-2: Initial Hash Registrar/"}, "hash": "22d0d31ff215400b3cf10149f9fb6cb7ecb90398c8948f20344bd5fe78d9cb03", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a7cd6097-4784-47bc-a17b-15d135471541", "node_type": "1", "metadata": {"header_path": "/ENSIP-2: Initial Hash Registrar/"}, "hash": "2514d12b846069719efbd90932b0c1c95244be2da80802083256068445c72146", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Motivation\n\nThe following factors should be considered in order to optimize for adoption of the ENS, and good governance of the Initial Registrar's namespace.\n\n**Upgradability:** The Initial Registrar should be safely upgradeable, so that knowledge gained during its deployment can be used to replace it with an improved and permanent registrar.\n\n**Effective allocation:** Newly released namespaces often create a land grab situation, resulting in many potentially valuable names being purchased but unused, with the hope of re-selling at a profit. This reduces the availability of the most useful names, in turn decreasing the utility of the name service to end users.\n\nAchieving an effective allocation may or may not require human intervention for dispute resolution and other forms of curation. The Initial Registrar should not aim to create to most effective possible allocation, but instead limit the cost of misallocation in the long term.\n\n**Security:** The registrar will hold a balance of ether without an explicit limit. It must be designed securely.\n\n**Simplicity:** The ENS specification itself emphasizes a separation of concerns, allowing the most essential element, the registry to be as simple as possible. The interim registrar in turn should be as simple as possible while still meeting its other design goals.\n\n**Adoption:** Successful standards become more successful due to network effects. The registrar should consider what strategies will encourage the adoption of the ENS in general, and the namespace it controls in particular.", "mimetype": "text/plain", "start_char_idx": 2228, "end_char_idx": 3785, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a7cd6097-4784-47bc-a17b-15d135471541": {"__data__": {"id_": "a7cd6097-4784-47bc-a17b-15d135471541", "embedding": null, "metadata": {"file_path": "ensips/2.md", "file_name": "2.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/2.md", "header_path": "/ENSIP-2: Initial Hash Registrar/", "customer_id": 1, "source_url": "ensips/2.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["service", "expected", "registrar", "updated", "restrictions", "design", "sufficient", "approximately", "prior", "during", "initial", "should", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "014f22fde517f68ec763a546547581c2a18ef0ae", "node_type": "4", "metadata": {"file_path": "ensips/2.md", "file_name": "2.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/2.md"}, "hash": "6c0df0d6e56bef5fae9961bb4e53b43351fa20f90205e4aa45e95b5ab773ce25", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "492401d9-48ba-4743-a339-55ed16ef2f97", "node_type": "1", "metadata": {"file_path": "ensips/2.md", "file_name": "2.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/2.md", "header_path": "/ENSIP-2: Initial Hash Registrar/"}, "hash": "50d6cf5e5ba78a07875b6fa9be8313913c4617af1188e096d4d5b5817604b1db", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1209a6a8-a3d2-40aa-993c-9bf0f21cbb4d", "node_type": "1", "metadata": {"header_path": "/ENSIP-2: Initial Hash Registrar/Specification/"}, "hash": "60226f19364d74b27b3cf2e2360f83d1d9e34a10d42740ec7c1d76a1a3efe3f7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification ### Initial restrictions\n\nThe Initial Registrar is expected to be in service for approximately two years, prior to upgrading. This should be sufficient time to learn, observe, and design an updated system.\n\nDuring the initial two year period, the available name space will be restricted to the `.eth` TLD.\n\nThis restriction is enforced by the owner of the ENS root node who should not assign any nodes other than `.eth` to the Initial Registrar. The ENS's root node should be controlled by multiple parties using a multisig contract.\n\nThe Initial Registrar will also prohibit registration of names 6 characters or less in length.", "mimetype": "text/plain", "start_char_idx": 3787, "end_char_idx": 3803, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cee353c2-bc3b-4b4e-abd5-eb8655e5411a": {"__data__": {"id_": "cee353c2-bc3b-4b4e-abd5-eb8655e5411a", "embedding": null, "metadata": {"file_path": "ensips/2.md", "file_name": "2.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/2.md", "header_path": "/ENSIP-2: Initial Hash Registrar/Specification/", "customer_id": 1, "source_url": "ensips/2.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["registrar", "hashed", "hashes", "registration", "being", "namehash", "using", "subdomain", "format", "names", "initial", "submitted", "label"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "014f22fde517f68ec763a546547581c2a18ef0ae", "node_type": "4", "metadata": {"file_path": "ensips/2.md", "file_name": "2.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/2.md"}, "hash": "6c0df0d6e56bef5fae9961bb4e53b43351fa20f90205e4aa45e95b5ab773ce25", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1209a6a8-a3d2-40aa-993c-9bf0f21cbb4d", "node_type": "1", "metadata": {"file_path": "ensips/2.md", "file_name": "2.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/2.md", "header_path": "/ENSIP-2: Initial Hash Registrar/Specification/"}, "hash": "05816e3c27aa802a316fdc2f4bbfc55ff4669b13e693dd36c97d3216b24dc1f7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5893c304-6407-4ea0-80dd-2cb761e2617b", "node_type": "1", "metadata": {"header_path": "/ENSIP-2: Initial Hash Registrar/Specification/"}, "hash": "e9c818e9656b09c4d78f89795871d2217b461c0dd7eede55116c57c65ff1c91f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Name format for hash registration\n\nNames submitted to the initial registrar must be hashed using Ethereum's sha3 function. Note that the hashes submitted to the registrar are the hash of the subdomain label being registered, not the namehash as defined in ENSIP-1.\n\nFor example, in order to register `abcdefg.eth`, one should submit `sha3('abcdefg')`, not `sha3(sha3(0, 'eth'), 'abcdefg')`. ### Auctioning names\n\nThe registrar will allocate the available names through a Vickrey auction:\n\n> A Vickrey auction is a type of sealed-bid auction. Bidders submit written bids without knowing the bid of the other people in the auction. The highest bidder wins but the price paid is the second-highest bid. This type of auction... gives bidders an incentive to bid their true value.\n>\n> \\- [Vickrey Auction, Wikipedia](https://en.wikipedia.org/wiki/Vickrey_auction)\n\nThe auction lifecycle of a name has 5 possible states, or Modes.\n\n1. **Not-yet-available:** The majority of names will be initially unavailable for auction, and will become available some time during the 8 weeks after launch.\n2. **Open:** The earliest availability for a name is determined by the most significant byte of its sha3 hash. `0x00` would become available immediately, `0xFF` would become available after 8 weeks, and the availability of other names is distributed accordingly. Once a name is available, it is possible to start an auction on it.\n3. **Auction:** Once the auction for a name has begun, there is a 72 hour bidding period. Bidders must submit a payment of ether, along with sealed bids as a hash of `sha3(bytes32 hash, address owner, uint value, bytes32 salt)`. The bidder may obfuscate the true bid value by sending a greater amount of ether.\n4. **Reveal:** After the bidding period, a 48 hour reveal period commences. During this time, bidders must reveal the true parameters of their sealed bid. As bids are revealed, ether payments are returned according to the schedule of \"refund ratios\" outlined in the table below. If no bids are revealed, the name will return to the Open state.\n5. **Owned:** After the reveal period has finished, the winning bidder must submit a transaction to finalize the auction, which then calls the ENS's `setSubnodeOwner` function, recording the winning bidder's address as the owner of the hash of the name.\n\nThe following table outlines important parameters which define the Registrar's auction mechanism.\n\n**Registrar Parameters**\n\n| Name               | Description                                                                                         | Value      |\n| ------------------ | --------------------------------------------------------------------------------------------------- | ---------- |\n| totalAuctionLength | The full time period from start of auction to end of the reveal period.                             | 5 days     |\n| revealPeriod       | The length of the time period during which bidding is no longer allowed, and bids must be revealed. | 48 hours   |\n| launchLength       | The time period during which all names will become available for auction.                           | 8 weeks    |\n| minPrice           | The minimum amount of ether which must be locked up in exchange for ownership of a name.            | 0.01 ether |", "mimetype": "text/plain", "start_char_idx": 4436, "end_char_idx": 4830, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e5dc4910-4fbf-4f85-b519-ecf4c2a01eb7": {"__data__": {"id_": "e5dc4910-4fbf-4f85-b519-ecf4c2a01eb7", "embedding": null, "metadata": {"file_path": "ensips/2.md", "file_name": "2.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/2.md", "header_path": "/ENSIP-2: Initial Hash Registrar/Specification/", "customer_id": 1, "source_url": "ensips/2.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["balance", "registrar", "deeds", "after", "separate", "ether", "funded", "first", "auction", "created", "sealed", "contract", "initial"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "014f22fde517f68ec763a546547581c2a18ef0ae", "node_type": "4", "metadata": {"file_path": "ensips/2.md", "file_name": "2.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/2.md"}, "hash": "6c0df0d6e56bef5fae9961bb4e53b43351fa20f90205e4aa45e95b5ab773ce25", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5893c304-6407-4ea0-80dd-2cb761e2617b", "node_type": "1", "metadata": {"file_path": "ensips/2.md", "file_name": "2.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/2.md", "header_path": "/ENSIP-2: Initial Hash Registrar/Specification/"}, "hash": "baafbec08e20fd1843c8d01c529d470b67764f1e6d632a29cbd03bc1c96f50a8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a7cf1caa-1cad-46d7-b455-2acdef19ff05", "node_type": "1", "metadata": {"header_path": "/ENSIP-2: Initial Hash Registrar/Specification/"}, "hash": "a395984fc1b6327f73242e39716851172ca21eab2bec5741621c97e3d528203b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Deeds\n\nThe Initial Registrar contract does not hold a balance itself. All ether sent to the Registrar will be held in a separate `Deed` contracts. A deed contract is first created and funded when a sealed bid is submitted. After an auction is completed and a hash is registered, the deed for the winning bid is held in exchange for ownership of the hash. Non-winning bids are refunded.\n\nA deed for an owned name may be transferred to another account by its owner, thus transferring ownership and control of the name.\n\nAfter 1 year of registration, the owner of a hash may choose to relinquish ownership and have the value of the deed returned to them.\n\nDeeds for non-winning bids can be closed by various methods, at which time any ether held will either be returned to the bidder, burnt, or sent to someone else as a reward for actions which help the registrar.\n\nThe following table outlines what portion of the balance held in a deed contract will be returned upon closure, and to whom. The remaining balance will be burnt.\n\n**Refund schedule**\n\n| Reason for Deed closure                                | Refund Recipient | Refund Percentage |\n| ------------------------------------------------------ | ---------------- | ----------------- |\n| A valid non-winning bid is revealed.                   | Bidder           | 99.5%             |\n| A bid submitted after the auction period is revealed.  | Bidder           | 99.5%             |\n| An otherwise valid bid is revealed on an owned name. 1 | Bidder           | 0.5%              |\n| An expired sealed bid is cancelled. 2                  | Canceler         | 0.5%              |\n| A registered hash is reported as invalid. 3            | Reporter         | 50%               |\n| A registered hash is reported as invalid. 3            | Owner            | 50%               |\n\n**Notes:**\n\n1. This incentivizes all bids to be revealed in time. If bids could be revealed late, an extortion attack on the current highest bidder could be made by threatening to reveal a new second highest bid.\n2. A bid which remains sealed after more than 2 weeks and 5 days may be cancelled by anyone to collect a small reward.\n3. Since names are hashed before auctioning and registration, the Initial Registrar is unable to enforce character length restrictions independently. A reward is therefore provided for reporting invalid names.", "mimetype": "text/plain", "start_char_idx": 7722, "end_char_idx": 10100, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a7cf1caa-1cad-46d7-b455-2acdef19ff05": {"__data__": {"id_": "a7cf1caa-1cad-46d7-b455-2acdef19ff05", "embedding": null, "metadata": {"file_path": "ensips/2.md", "file_name": "2.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/2.md", "header_path": "/ENSIP-2: Initial Hash Registrar/Specification/", "customer_id": 1, "source_url": "ensips/2.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["deployed", "requires", "registrar", "after", "upgrade", "address", "process", "account", "deployment", "multisig", "owning", "initial", "should"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "014f22fde517f68ec763a546547581c2a18ef0ae", "node_type": "4", "metadata": {"file_path": "ensips/2.md", "file_name": "2.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/2.md"}, "hash": "6c0df0d6e56bef5fae9961bb4e53b43351fa20f90205e4aa45e95b5ab773ce25", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e5dc4910-4fbf-4f85-b519-ecf4c2a01eb7", "node_type": "1", "metadata": {"file_path": "ensips/2.md", "file_name": "2.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/2.md", "header_path": "/ENSIP-2: Initial Hash Registrar/Specification/"}, "hash": "bb12e714e7c3828991aefa6495fcf5010c160e10e06406f3cf3b842c0998a0f0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b3acddad-1db6-47d6-9d61-fd710c680352", "node_type": "1", "metadata": {"header_path": "/ENSIP-2: Initial Hash Registrar/Specification/"}, "hash": "62c4b39c9a5b179f4f75cbbbb120f2ac07cbb32fba5e8072d48b6036b3624ec5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Deployment and Upgrade process\n\nThe Initial Registrar requires the ENS's address as a constructor, and should be deployed after the ENS. The multisig account owning the root node in the ENS should then set the Initial Registrar's address as owner of the `eth` node.\n\nThe Initial Registrar is expected to be replaced by a Permanent Registrar approximately 2 years after deployment. The following process should be used for the upgrade:\n\n1. The Permanent Registrar contract will be deployed.\n2. The multisig account owning the root node in the ENS will assign ownership of the `.eth` node to the Permanent Registrar.\n3. Owners of hashes in the Initial Registrar will be responsible for registering their deeds to the Permanent Registrar. A couple options are considered here:\n    1. Require owners to transfer their ownership prior to a cutoff date in order to maintain ownership and/or continue name resolution services.\n    2. Have the Permanent Registrar query the Initial Registrar for ownership if it is lacking an entry.", "mimetype": "text/plain", "start_char_idx": 10102, "end_char_idx": 11130, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b3acddad-1db6-47d6-9d61-fd710c680352": {"__data__": {"id_": "b3acddad-1db6-47d6-9d61-fd710c680352", "embedding": null, "metadata": {"file_path": "ensips/2.md", "file_name": "2.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/2.md", "header_path": "/ENSIP-2: Initial Hash Registrar/Specification/", "customer_id": 1, "source_url": "ensips/2.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["registrar", "deeds", "after", "limit", "ether", "order", "planned", "deactivation", "interface", "become", "dependence", "auctions", "years", "initial"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "014f22fde517f68ec763a546547581c2a18ef0ae", "node_type": "4", "metadata": {"file_path": "ensips/2.md", "file_name": "2.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/2.md"}, "hash": "6c0df0d6e56bef5fae9961bb4e53b43351fa20f90205e4aa45e95b5ab773ce25", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a7cf1caa-1cad-46d7-b455-2acdef19ff05", "node_type": "1", "metadata": {"file_path": "ensips/2.md", "file_name": "2.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/2.md", "header_path": "/ENSIP-2: Initial Hash Registrar/Specification/"}, "hash": "aecb065269d64543a4e1ceed7baee18aa26f12f6c183cedb82bdf21db5faa5b6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c90f0a23-dca5-46ec-9173-c1e30c12fd9d", "node_type": "1", "metadata": {"header_path": "/ENSIP-2: Initial Hash Registrar/Specification/"}, "hash": "c93160cc5dbccd8e4a7ed1ca021e863797a7e79a8ce544f597f8f9c460a224c0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Planned deactivation\n\nIn order to limit dependence on the Initial Registrar, new auctions will stop after 4 years, and all ether held in deeds after 8 years will become unreachable. ### Registrar Interface\n\n`function state(bytes32 _hash) constant returns (Mode)`\n\n-   Implements a state machine returning the current state of a name\n\n`function entries(bytes32 _hash) constant returns (Mode, address, uint, uint, uint)`\n\n-   Returns the following information regarding a registered name:\n    -   state\n    -   deed address\n    -   registration date\n    -   balance of the deed\n    -   highest value bid at auction\n\n`function getAllowedTime(bytes32 _hash) constant returns (uint timestamp)`\n\n-   Returns the time at which the hash will no longer be in the initial `not-yet-available` state.\n\n`function isAllowed(bytes32 _hash, uint _timestamp) constant returns (bool allowed)`\n\n-   Takes a hash and a time, returns true if and only if it has passed the initial `not-yet-available` state.\n\n`function startAuction(bytes32 _hash);`\n\n-   Moves the state of a hash from Open to Auction. Throws if state is not Open.\n\n`function startAuctions(bytes32[] _hashes);`\n\n-   Starts multiple auctions on an array of hashes. This enables someone to open up an auction for a number of dummy hashes when they are only really interested in bidding for one. This will increase the cost for an attacker to simply bid blindly on all new auctions. Dummy auctions that are open but not bid on are closed after a week.\n\n`function shaBid(bytes32 hash, address owner, uint value, bytes32 salt) constant returns (bytes32 sealedBid);`\n\n-   Takes the parameters of a bid, and returns the sealedBid hash value required to participate in the bidding for an auction. This obfuscates the parameters in order to mimic the mechanics of placing a bid in an envelope.\n\n`function newBid(bytes32 sealedBid);`\n\n-   Bids are sent by sending a message to the main contract with a sealedBid hash and an amount of ether. The hash contains information about the bid, including the bidded name hash, the bid value, and a random salt. Bids are not tied to any one auction until they are revealed. The value of the bid itself can be masqueraded by sending more than the value of your actual bid. This is followed by a 48h reveal period. Bids revealed after this period will be burned and the ether unrecoverable. Since this is an auction, it is expected that most public hashes, like known domains and common dictionary words, will have multiple bidders pushing the price up.\n\n`function startAuctionsAndBid(bytes32[] hashes, bytes32 sealedBid)`\n\n-   A utility function allowing a call to `startAuctions` followed by `newBid` in a single transaction.\n\n`function unsealBid(bytes32 _hash, address _owner, uint _value, bytes32 _salt);`\n\n-   Once the bidding period is completed, there is a reveal period during with the properties of a bid are submitted to reveal them. The registrar hashes these properties using the `shaBid()` function above to verify that they match a pre-existing sealed bid. If the unsealedBid is the new best bid, the old best bid is returned to its bidder.\n\n`function cancelBid(bytes32 seal);`\n\n-   Cancels an unrevealed bid according to the rules described in the notes on the refund schedule above.\n\n`function finalizeAuction(bytes32 _hash);`\n\nAfter the registration date has passed, this function can be called to finalize the auction, which then calls the ENS function `setSubnodeOwner()` updating the ENS record to set the winning bidder as owner of the node.\n\n`function transfer(bytes32 _hash, address newOwner);`\n\n-   Update the owner of the ENS node corresponding to the submitted hash to a new owner. This function must be callable only by the current owner.\n\n`function releaseDeed(bytes32 _hash);`\n\n-   After some time, the owner can release the property and get their ether back.\n\n`function invalidateName(string unhashedName);`\n\n-   Since registration is done on the hash of a name, the registrar itself cannot validate names. This function can be used to report a name which is 6 characters long or less. If it has been registered, the submitter will earn 10% of the deed value. We are purposefully handicapping the simplified registrar as a way to force it into being restructured in a few years.\n\n`function eraseNode(bytes32[] labels)`\n\n-   Allows anyone to delete the owner and resolver records for a subdomain of a name that is not currently owned in the registrar. For instance, to zero `foo.bar.eth` on a registrar that owns `.eth`, pass an array containing `[sha3('foo'), sha3('bar')]`.\n\n`function transferRegistrars(bytes32 _hash) onlyOwner(_hash);`\n\n-   Used during the upgrade process to a permanent registrar. If this registrar is no longer the owner of the root node in the ENS, this function will transfer the deed to the current owner, which should be a new registrar. This function throws if this registrar still owns its root node.", "mimetype": "text/plain", "start_char_idx": 11132, "end_char_idx": 11317, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "43c6150a-6b00-4e4d-8a01-2a3585906bef": {"__data__": {"id_": "43c6150a-6b00-4e4d-8a01-2a3585906bef", "embedding": null, "metadata": {"file_path": "ensips/2.md", "file_name": "2.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/2.md", "header_path": "/ENSIP-2: Initial Hash Registrar/", "customer_id": 1, "source_url": "ensips/2.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["issues", "temporary", "approach", "allocation", "registrar", "anticipating", "starting", "rationale", "potential", "chooses", "unlikely", "concerned", "getting", "names", "designing"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "014f22fde517f68ec763a546547581c2a18ef0ae", "node_type": "4", "metadata": {"file_path": "ensips/2.md", "file_name": "2.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/2.md"}, "hash": "6c0df0d6e56bef5fae9961bb4e53b43351fa20f90205e4aa45e95b5ab773ce25", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c90f0a23-dca5-46ec-9173-c1e30c12fd9d", "node_type": "1", "metadata": {"file_path": "ensips/2.md", "file_name": "2.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/2.md", "header_path": "/ENSIP-2: Initial Hash Registrar/Specification/"}, "hash": "ccf8add54ebfc494e1aaef933408f4785f041a5ddcd3fef5ec3f5fb77d52596a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8e245811-e68b-47ab-8d38-82d1962e9467", "node_type": "1", "metadata": {"header_path": "/ENSIP-2: Initial Hash Registrar/Rationale/"}, "hash": "52323ad0fc3c63c278f6489b66058959e5e098744cbc1357f760fbf6e39c447e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Rationale ### Starting with a temporary registrar\n\nAnticipating and designing for all the potential issues of name allocation names is unlikely to succeed. This approach chooses not to be concerned with getting it perfect, but allows us to observe and learn with training wheels on, and implement improvements before expanding the available namespace to shorter names or another TLD. ### Valid names >= 7 characters\n\nPreserving the shortest, and often most valuable, domain names for the upgraded registrar provides the opportunity to implement processes for dispute resolution (assuming they are found to be necessary).", "mimetype": "text/plain", "start_char_idx": 16069, "end_char_idx": 16081, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3ebbd8c1-331f-4f5e-893f-2d96bbcfdedb": {"__data__": {"id_": "3ebbd8c1-331f-4f5e-893f-2d96bbcfdedb", "embedding": null, "metadata": {"file_path": "ensips/2.md", "file_name": "2.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/2.md", "header_path": "/ENSIP-2: Initial Hash Registrar/Rationale/", "customer_id": 1, "source_url": "ensips/2.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["issues", "restricting", "delayed", "allows", "release", "after", "single", "address", "slower", "choosing", "which", "names", "extra", "arise"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "014f22fde517f68ec763a546547581c2a18ef0ae", "node_type": "4", "metadata": {"file_path": "ensips/2.md", "file_name": "2.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/2.md"}, "hash": "6c0df0d6e56bef5fae9961bb4e53b43351fa20f90205e4aa45e95b5ab773ce25", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4ca35274-0406-424e-b0bd-d85bb2f4359b", "node_type": "1", "metadata": {"file_path": "ensips/2.md", "file_name": "2.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/2.md", "header_path": "/ENSIP-2: Initial Hash Registrar/Rationale/"}, "hash": "4efa8f08df5d0d26944114e66988fc9e0603c4da5e9de00678d9850e1cbac458", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7471f92b-a21d-4353-a2b7-8814574093ff", "node_type": "1", "metadata": {"header_path": "/ENSIP-2: Initial Hash Registrar/Rationale/"}, "hash": "35639376da2949c6af5f4195db977bc2cba2a9209261698eb6ca9571723407f1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Delayed release of names\n\nA slower release allows for extra time to identify, and address any issues which may arise after launch. ### Restricting TLD to `.eth`\n\nChoosing a single TLD helps to maximize network effects by focusing on one namespace.\n\nA three letter TLD is a pattern made familiar by it's common usage in internet domain names. This familiarity significantly increases the potential of the ENS to be integrated into pre-existing DNS systems, and reserved as a [special-use domain name](https://www.iana.org/assignments/special-use-domain-names/special-use-domain-names.xhtml#special-use-domain). A recent precedent for this is the [reservation of the `.onion` domain](https://tools.ietf.org/html/rfc7686).", "mimetype": "text/plain", "start_char_idx": 16696, "end_char_idx": 16830, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3b8de6b7-e4a0-44b7-a956-b46ca62d8410": {"__data__": {"id_": "3b8de6b7-e4a0-44b7-a956-b46ca62d8410", "embedding": null, "metadata": {"file_path": "ensips/2.md", "file_name": "2.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/2.md", "header_path": "/ENSIP-2: Initial Hash Registrar/Rationale/", "customer_id": 1, "source_url": "ensips/2.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["retain", "approach", "owners", "model", "ownership", "makes", "ether", "recurring", "domain", "requiring", "collateral", "familiar", "payments", "simpler", "holding"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "014f22fde517f68ec763a546547581c2a18ef0ae", "node_type": "4", "metadata": {"file_path": "ensips/2.md", "file_name": "2.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/2.md"}, "hash": "6c0df0d6e56bef5fae9961bb4e53b43351fa20f90205e4aa45e95b5ab773ce25", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7471f92b-a21d-4353-a2b7-8814574093ff", "node_type": "1", "metadata": {"file_path": "ensips/2.md", "file_name": "2.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/2.md", "header_path": "/ENSIP-2: Initial Hash Registrar/Rationale/"}, "hash": "40e008071318159d473ecd69a71005ac238b3214ee80c101178f8665a524510e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c1b8212d-1d68-41d0-a6f7-c8384b398700", "node_type": "1", "metadata": {"header_path": "/ENSIP-2: Initial Hash Registrar/"}, "hash": "f1b8d47629d046aa9c857a47505f7090c8dfb8c025e83b9acc946ab02041a541", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Holding ether as collateral\n\nThis approach is simpler than the familiar model of requiring owners to make recurring payments to retain ownership of a domain name. It also makes the initial registrar a revenue neutral service. ## Prior work\n\nThis document borrows heavily from several sources:\n\n-   ENSIP-1 outlines the initial implementation of the Registry Contract (ENS.sol) and associated Resolver contracts.\n-   [ERC-26](https://github.com/ethereum/EIPs/issues/26) was the first ERC to propose a name service at the contract layer\n-   @alexvandesande's current implementation of the [HashRegistrar](https://github.com/ethereum/ens/blob/mainnet/contracts/HashRegistrarSimplified.sol)", "mimetype": "text/plain", "start_char_idx": 17422, "end_char_idx": 17651, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d9e10699-7082-468a-b0f5-528fad959a78": {"__data__": {"id_": "d9e10699-7082-468a-b0f5-528fad959a78", "embedding": null, "metadata": {"file_path": "ensips/2.md", "file_name": "2.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/2.md", "header_path": "/ENSIP-2: Initial Hash Registrar/Prior work/", "customer_id": 1, "source_url": "ensips/2.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["copyright", "reveal", "abstract", "rights", "bidding", "waived", "added", "design", "update", "periods", "related", "standardized", "change", "timelines"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "014f22fde517f68ec763a546547581c2a18ef0ae", "node_type": "4", "metadata": {"file_path": "ensips/2.md", "file_name": "2.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/2.md"}, "hash": "6c0df0d6e56bef5fae9961bb4e53b43351fa20f90205e4aa45e95b5ab773ce25", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c1b8212d-1d68-41d0-a6f7-c8384b398700", "node_type": "1", "metadata": {"file_path": "ensips/2.md", "file_name": "2.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/2.md", "header_path": "/ENSIP-2: Initial Hash Registrar/"}, "hash": "e0e54702934dc6026f84aa5957ee70261a080627ef236c5718e248ae8fb21024", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "48bacb6f-3951-4586-bb1e-f7327e5fcc0d", "node_type": "1", "metadata": {"header_path": "/ENSIP-2: Initial Hash Registrar/"}, "hash": "f9b34f59dae44460b871b26d183ad0d36dfc3fa4726342578e04a1623a979efa", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Edits:\n\n-   2016-10-26 Added link Alex's design in abstract\n-   2016-11-01 change 'Planned deactivation' to h3'\n-   2017-03-13 Update timelines for bidding and reveal periods ## Copyright\n\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/). ---\ndescription: A standardized implementation for managing offchain domains using an External Resolver\ncontributors:\n    - netto.eth\n    - pikonha.eth\n    - nick.eth\nensip:\n    created: '2024-08-14'\n    status: draft\n---", "mimetype": "text/plain", "start_char_idx": 18115, "end_char_idx": 18293, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "49864ab2-21b8-4a55-af95-723c06234a7c": {"__data__": {"id_": "49864ab2-21b8-4a55-af95-723c06234a7c", "embedding": null, "metadata": {"file_path": "ensips/20.md", "file_name": "20.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/20.md", "header_path": "/", "customer_id": 1, "source_url": "ensips/20.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["wildcard", "domains", "mechanism", "writing", "offchain", "ethereum", "addresses", "growing", "abstract", "proposes", "within", "ensip", "standardized", "managing", "service"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "69a5301e1b40c30face1b93dd813547f360786c9", "node_type": "4", "metadata": {"file_path": "ensips/20.md", "file_name": "20.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/20.md"}, "hash": "cdab20a5166324bb38fa388746036b8058d1e4a66365a1eb7e2ee8a260d4b9e1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cf93ffc0-be6d-4e68-8791-7b04e9cc89bb", "node_type": "1", "metadata": {"file_path": "ensips/20.md", "file_name": "20.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/20.md", "header_path": "/"}, "hash": "b4aa76887d8f9e852fb88281ef159c97c34f522cbf55e300e6ec8fa19dd420a1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "784413e8-ca0b-4bb2-8246-e39225d723d5", "node_type": "1", "metadata": {"header_path": "/ENSIP-20: Wildcard Writing/"}, "hash": "d87efe0c55dc51a02e2b515d712dff2c6a472cebf7e222c90124bf932a826c90", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# ENSIP-20: Wildcard Writing ## Abstract\n\nThis ENSIP proposes a standardized mechanism for managing offchain domains within the Ethereum Name Service (ENS) ecosystem. It addresses the growing trend of storing domains off the Ethereum blockchain to reduce transaction fees while maintaining compatibility with existing ENS components. The proposal outlines methods for domain registration, transferring, and setting records, ensuring a consistent approach to offchain domain management. ## Motivation\n\nWith the acceptance of CCIP-Read by the Ethereum community, there has been a notable shift towards storing domains in locations other than the Ethereum blockchain to avoid high transaction fees. This shift has revealed a significant gap: the lack of standardized methods for managing offchain domains. By establishing a standardized offchain resolver implementation and user flow, we can ensure a consistent approach enabling applications that support this ENSIP flow to integrate this feature and enhance user experience seamlessly, increasing scalability, providing cost-effective solutions, and reducing client complexity by providing a common way to interact with all the offchain providers.", "mimetype": "text/plain", "start_char_idx": 223, "end_char_idx": 251, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7c26d503-6972-4df3-8628-453f2679ba14": {"__data__": {"id_": "7c26d503-6972-4df3-8628-453f2679ba14", "embedding": null, "metadata": {"file_path": "ensips/20.md", "file_name": "20.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/20.md", "header_path": "/ENSIP-20: Wildcard Writing/", "customer_id": 1, "source_url": "ensips/20.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["wildcard", "router", "writing", "EIP-712", "structured", "relies", "ensip", "following", "operation", "standard", "interface", "EIP-7528", "typed", "EIP-7884", "fungible", "token", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "69a5301e1b40c30face1b93dd813547f360786c9", "node_type": "4", "metadata": {"file_path": "ensips/20.md", "file_name": "20.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/20.md"}, "hash": "cdab20a5166324bb38fa388746036b8058d1e4a66365a1eb7e2ee8a260d4b9e1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "524e49ba-d222-42d8-9d46-4006c3ade16e", "node_type": "1", "metadata": {"file_path": "ensips/20.md", "file_name": "20.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/20.md", "header_path": "/ENSIP-20: Wildcard Writing/"}, "hash": "8baa6ff4e4790bc75646aa7026a8fb4f54db93ea009581c9003849d615bdfa9a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1f2a6ac4-ccc2-4b19-ac12-e2c8d2d33d4f", "node_type": "1", "metadata": {"header_path": "/ENSIP-20: Wildcard Writing/Specification/"}, "hash": "6a4faee6d71437ec7445aa3a0bd0732b8c750de964f47fb3e94cada7c853e81d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\nThis ENSIP relies on the following standards:\n\n- [ERC-712](https://eips.ethereum.org/EIPS/eip-712) Typed structured data\n- [EIP-7884](https://ercs.ethereum.org/ERCS/erc-7884) Operation Router\n- [EIP-7528](https://eips.ethereum.org/EIPS/eip-7528) Token Standard for Fungible Gas ### Wildcard Writing interface\n\nThe Wildcard Writing standard is defined by multiple interfaces, which, except for the OffchainRegister, are optional according to the provider's needs.\n\n```solidity\n/// @notice The details of a registration request.\n/// @param name The DNS-encoded name being registered (e.g. \"alice.eth\", \"alice.bob.eth\")\n/// @param owner The address that will own the registered name\n/// @param duration The length of time in seconds to register the name for\n/// @param secret The secret to be used for the registration based on commit/reveal\n/// @param resolver The address of the resolver used as entrypoint on the L1\n/// @param extraData Additional registration data encoded as bytes\nstruct RegisterRequest {\n    bytes name;\n    address owner;\n    uint256 duration;\n    bytes32 secret;\n    address resolver;\n    bytes extraData;\n}\n\ninterface OffchainRegister {\n\n    /// @notice Struct containing registration parameters for a name\n    /// @param price The total price in wei required to register the name\n    /// @param available Whether the name is available for registration\n    /// @param token Token address (ERC-7528 ether address or ERC-20 contract)\n    /// @param commitTime The commit duration in seconds\n    /// @param extraData Additional registration data encoded as bytes\n    struct RegisterParams {\n        uint256 price;\n        bool available;\n        address token;\n        uint256 commitTime;\n        bytes extraData;\n    }\n\n    /// @notice Returns the registration parameters for a given name and duration\n    /// @dev This function calculates and returns the registration parameters needed to register a name\n    /// @param name The DNS-encoded name to query for registration parameters (e.g. \"alice.eth\", \"alice.bob.eth\")\n    /// @param duration The duration in seconds for which the name should be registered\n    /// @return A struct containing the registration parameters\n    function registerParams(\n        bytes calldata name,\n        uint256 duration\n    )\n        external\n        view\n        returns (RegisterParams memory);\n\n    /// @notice Registers a domain name\n    /// @param request The registration request details\n    /// @dev Forwards the registration request to the L2 contracts for processing\n    function register(RegisterRequest calldata request) external payable;\n\n}\n\ninterface OffchainTransferrable {\n\n    /// @notice Transfers ownership of a name to a new address\n    /// @param name The DNS-encoded name to transfer (e.g. \"alice.eth\", \"alice.bob.eth\")\n    /// @param owner The current owner of the name\n    /// @param newOwner The address to transfer ownership to\n    function transferFrom(\n        bytes calldata name,\n        address owner,\n        address newOwner\n    )\n        external;\n\n}\n\ninterface OffchainCommitable {\n\n    /// @notice Produces the commit hash from the register request\n    /// @param request The registration request details\n    /// @return commitHash The hash that should be committed before registration\n    function makeCommitment(RegisterRequest calldata request)\n        external\n        pure\n        returns (bytes32 commitHash);\n\n    /// @notice Commits a hash of registration data to prevent frontrunning\n    /// @param commitment The hash of the registration request data that will be used in a future register call\n    /// @dev The commitment must be revealed after the minimum commit age and before the maximum commit age\n    function commit(bytes32 commitment) external;\n}\n\n```", "mimetype": "text/plain", "start_char_idx": 1423, "end_char_idx": 1718, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9a943161-ac4a-4d0d-9169-76ebcb5617a3": {"__data__": {"id_": "9a943161-ac4a-4d0d-9169-76ebcb5617a3", "embedding": null, "metadata": {"file_path": "ensips/20.md", "file_name": "20.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/20.md", "header_path": "/ENSIP-20: Wildcard Writing/Specification/", "customer_id": 1, "source_url": "ensips/20.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["transaction", "offchain", "approach", "specified", "directly", "relies", "given", "first", "required", "subsequent", "client", "composite", "EIP-7884", "gather", "onchain", "contract", "EIP-712"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "69a5301e1b40c30face1b93dd813547f360786c9", "node_type": "4", "metadata": {"file_path": "ensips/20.md", "file_name": "20.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/20.md"}, "hash": "cdab20a5166324bb38fa388746036b8058d1e4a66365a1eb7e2ee8a260d4b9e1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1f2a6ac4-ccc2-4b19-ac12-e2c8d2d33d4f", "node_type": "1", "metadata": {"file_path": "ensips/20.md", "file_name": "20.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/20.md", "header_path": "/ENSIP-20: Wildcard Writing/Specification/"}, "hash": "bc9606c575a2da774ec3a6b50f047fa1770e9f8d7066e0cb5c6f101c78f809e3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8bb77451-4e1b-4f6b-804e-1a7fcf8aeb22", "node_type": "1", "metadata": {"header_path": "/ENSIP-20: Wildcard Writing/Specification/"}, "hash": "c9e61fb1ffd5f380314137a9cc6dcfa31ce0698e081f0149d6b84911a768c61e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Client flow\n\nIt relies on the approach specified by the [EIP-7884](https://ethereum-magicians.org/t/operation-router/22633) to first gather the required data for the subsequent transaction to be made directly to the given entity, a contract or an offchain gateway.\n\nThe onchain flow is composite as follows:\n\n```mermaid\nsequenceDiagram\n    Note over Client: calldata = encode(setText(node, key, value))\n    rect rgb(220, 240, 220)\n        Note over Client,L1Resolver: view call\n        Client ->> L1Resolver: getOperationHandler(calldata)\n        L1Resolver -->> Client: revert OperationHandledOnchain(chainId, address)\n    end\n    Client ->> L2Resolver: setText(node, key, value)\n\n```\n\nThe offchain version of this flow looks like the following:\n\n```mermaid\nsequenceDiagram\n    Note over Client: calldata = encode(setText(node, key, value))\n    rect rgb(220, 240, 220)\n        Note over Client,L1 Contract: view call\n        Client ->> L1 Contract: getOperationHandler(calldata)\n        L1 Contract -->> Client: revert OperationHandledOffchain(sender, url, data)\n    end\n    Client ->> Client: EIP-712 signature\n\n    rect rgb(220, 220, 240)\n        Note over Client,Gateway: off-chain\n        Client->>Gateway: POST url {sender, data, signature}\n        Gateway->>Gateway: Verify EIP-712 signature\n        Gateway->>Gateway: Process mutation\n        Gateway -->> Client: response\n    end\n\n```\n\nThese flows can be optimized by relying on the ENS' Universal Resolver ENSIP-10 `resolve` implementation reducing the number of RPC requests.", "mimetype": "text/plain", "start_char_idx": 5204, "end_char_idx": 6744, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8bb77451-4e1b-4f6b-804e-1a7fcf8aeb22": {"__data__": {"id_": "8bb77451-4e1b-4f6b-804e-1a7fcf8aeb22", "embedding": null, "metadata": {"file_path": "ensips/20.md", "file_name": "20.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/20.md", "header_path": "/ENSIP-20: Wildcard Writing/Specification/", "customer_id": 1, "source_url": "ensips/20.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["implemented", "offchain", "creating", "registering", "extensible", "variety", "flexible", "subdomain", "support", "plays", "EIP-7528", "crucial", "EIP-7884", "initial", "function"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "69a5301e1b40c30face1b93dd813547f360786c9", "node_type": "4", "metadata": {"file_path": "ensips/20.md", "file_name": "20.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/20.md"}, "hash": "cdab20a5166324bb38fa388746036b8058d1e4a66365a1eb7e2ee8a260d4b9e1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9a943161-ac4a-4d0d-9169-76ebcb5617a3", "node_type": "1", "metadata": {"file_path": "ensips/20.md", "file_name": "20.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/20.md", "header_path": "/ENSIP-20: Wildcard Writing/Specification/"}, "hash": "90d7ed9d6a1a2e28a999a67be88bc62f266962a12a5b5d97a2a4b48dfee77fac", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "34e1b707-b7a5-4930-a74f-28d44c805f89", "node_type": "1", "metadata": {"header_path": "/ENSIP-20: Wildcard Writing/Specification/"}, "hash": "76a637084084b2896a264ac6048835f8c56b5057ccb0b085fc4ffac9f0828bef", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Subdomain registering\n\nAs the initial step in registering a subdomain, the `registerParams` function has been implemented to support a variety of use cases. This function plays a crucial role in creating a flexible and extensible offchain subdomain registration system.\n\nThe function has the following signature:\n\n```solidity\nstruct RegisterParams {\n    uint256 price;\n    bool available;\n    address token;\n    uint256 commitTime;\n    bytes extraData;\n}\n\nfunction registerParams(\n    bytes memory name,\n    uint256 duration\n)\n    external\n    view\n    returns (RegisterParams memory);\n\n```\n\nParameters:\n\n- `name`: DNS-encoded name to be registered\n- `duration`: The duration in seconds for the registration\n\nReturn:\n\n- `price`: the amount of ETH charged per second\n- `available`: whether the domain is available for registering\n- `token`: ERC-20 token address to be used as payment according to the EIP-7528\n- `commitTime`: the amount of seconds the commit should wait before being revealed. `0` means that the commit/reveal pattern isn't being used\n- `extraData`: any given encoded data\n\nThe register function MUST have the following signature:\n\n```solidity\nstruct RegisterRequest {\n    bytes name;\n    address owner;\n    uint256 duration;\n    bytes32 secret;\n    address resolver;\n    bytes extraData;\n}\n\nfunction register(RegisterRequest calldata request) external payable;\n\n```\n\nParameters:\n\n- `name`: DNS-encoded name to be registered\n- `owner`: subdomain owner's address\n- `duration`: the duration in seconds of the registration\n- `secret`: random seed to be used for commit/reveal\n- `resolver`: the address of the resolver used as entrypoint on the L1\n- `extraData`: any additional data (e.g. signatures from an external source)\n\n**Behavior:**\n\n- **L1 Resolver**: it MUST revert with the respective error specified by the [EIP-7884](https://ethereum-magicians.org/t/operation-router/22633).\n- **L2 contract / Gateway**: it MUST register the subdomain.\n\nAlthough implementing the `register` on the layer 1 contract is OPTIONAL given that it is already handled by the `getOperationHandler`, it is possible for the contract to implement it directly in order to expose it on its ABI. If so, it MUST revert with the same error it would if called through the `getOperationHandler`.", "mimetype": "text/plain", "start_char_idx": 6746, "end_char_idx": 9033, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "34e1b707-b7a5-4930-a74f-28d44c805f89": {"__data__": {"id_": "34e1b707-b7a5-4930-a74f-28d44c805f89", "embedding": null, "metadata": {"file_path": "ensips/20.md", "file_name": "20.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/20.md", "header_path": "/ENSIP-20: Wildcard Writing/Specification/", "customer_id": 1, "source_url": "ensips/20.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["onchain", "architecture", "revert", "offchain", "sequencediagram", "subdomain", "return", "client", "registerparams", "participant", "resolver", "contract", "EIP-712"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "69a5301e1b40c30face1b93dd813547f360786c9", "node_type": "4", "metadata": {"file_path": "ensips/20.md", "file_name": "20.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/20.md"}, "hash": "cdab20a5166324bb38fa388746036b8058d1e4a66365a1eb7e2ee8a260d4b9e1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8bb77451-4e1b-4f6b-804e-1a7fcf8aeb22", "node_type": "1", "metadata": {"file_path": "ensips/20.md", "file_name": "20.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/20.md", "header_path": "/ENSIP-20: Wildcard Writing/Specification/"}, "hash": "7cbbf6afb543de1d088d0a1e97a420f129fc049c5e273832de18ef527754dd30", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d70c1ce8-fbbd-4c16-8c8a-a05e4f863eb7", "node_type": "1", "metadata": {"header_path": "/ENSIP-20: Wildcard Writing/Specification/"}, "hash": "814852d8b6ef8ffd252c897647c246778afcc35c12a48f429574352ec4527624", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Architecture\n\nOnchain subdomain registering:\n\n```mermaid\nsequenceDiagram\n    participant Client\n    participant L1 Resolver\n    participant L2 Contract\n\n    Client->>L1 Resolver: getOperationHandler(encodedFunc)\n    L1 Resolver-->>Client: revert OperationHandledOnchain(chainId, address)\n    Client->>L2 Contract: registerParams(name,duration)\n    L2 Contract-->>Client: return RegisterParams\n    alt RegisterParams.available\n        Client->>L2 Contract: register{value: RegisterParams.price}(RegisterRequest)\n    end\n\n```\n\nOffchain subdomain registering:\n\n```mermaid\nsequenceDiagram\n    participant Client\n    participant L1 Resolver\n    participant Gateway\n    participant Database\n\n    Client->>L1 Resolver: getOperationHandler(encodedFunc)\n    L1 Resolver-->>Client: revert OperationHandledOffchain(domain, url, message)\n    rect rgb(200, 230, 255)\n        note over Client,Database: offchain request\n        Client->>Gateway: registerParams(name,duration)\n        Gateway-->>Client: return RegisterParams\n        alt RegisterParams.available\n            Client->>Client: sign request with EIP-712\n            Client->>Gateway: register(RegisterRequest)\n            Gateway->>Gateway: validate signer ownership\n            Gateway->>Database: DB Insert\n        end\n    end\n\n```", "mimetype": "text/plain", "start_char_idx": 9035, "end_char_idx": 10321, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d70c1ce8-fbbd-4c16-8c8a-a05e4f863eb7": {"__data__": {"id_": "d70c1ce8-fbbd-4c16-8c8a-a05e4f863eb7", "embedding": null, "metadata": {"file_path": "ensips/20.md", "file_name": "20.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/20.md", "header_path": "/ENSIP-20: Wildcard Writing/Specification/", "customer_id": 1, "source_url": "ensips/20.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["implemented", "enables", "measure", "pattern", "security", "providers", "EIP-5559", "optional", "registration", "process", "subdomain", "interface", "their", "prevent", "should"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "69a5301e1b40c30face1b93dd813547f360786c9", "node_type": "4", "metadata": {"file_path": "ensips/20.md", "file_name": "20.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/20.md"}, "hash": "cdab20a5166324bb38fa388746036b8058d1e4a66365a1eb7e2ee8a260d4b9e1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "34e1b707-b7a5-4930-a74f-28d44c805f89", "node_type": "1", "metadata": {"file_path": "ensips/20.md", "file_name": "20.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/20.md", "header_path": "/ENSIP-20: Wildcard Writing/Specification/"}, "hash": "bcb11d6ad30f55df64468625f7fb1cacf24dc5f47d7fc4da29758cae00e3653b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7c01448a-1afb-4841-b845-1142cc2dca33", "node_type": "1", "metadata": {"header_path": "/ENSIP-20: Wildcard Writing/Specification/"}, "hash": "80dbd7a4b9d428b49c9080469f8c8564a2b32d0b867774597a4c4d4929792d21", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Commit/Reveal Process\n\nThe `OffchainCommitable` interface enables a commit-reveal pattern for subdomain registration to prevent front-running attacks. This interface is OPTIONAL and should be implemented by providers who want to add this security measure to their registration process.\n\nThe interface has the following functions:\n\n```solidity\nfunction makeCommitment(RegisterRequest calldata request)\n    external\n    pure\n    returns (bytes32 commitHash);\n\nfunction commit(bytes32 commitment) external;\n```\n\nParameters for `makeCommitment`:\n\n- `request`: The complete registration request containing all parameters needed for registration\n\nParameters for `commit`:\n\n- `commitment`: The hash generated by `makeCommitment` that represents the future registration request\n\n**Behavior:**\n\n- **L1 Resolver**: it MUST revert with the respective error specified by the EIP-5559. the same it would if called through the `getOperationHandler`\n- **L2 contract**: it MUST store the commitment and track when it was made to enforce the commit time specified in `registerParams`.", "mimetype": "text/plain", "start_char_idx": 10323, "end_char_idx": 11394, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7c01448a-1afb-4841-b845-1142cc2dca33": {"__data__": {"id_": "7c01448a-1afb-4841-b845-1142cc2dca33", "embedding": null, "metadata": {"file_path": "ensips/20.md", "file_name": "20.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/20.md", "header_path": "/ENSIP-20: Wildcard Writing/Specification/", "customer_id": 1, "source_url": "ensips/20.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["onchain", "architecture", "revert", "sequencediagram", "would", "return", "client", "registerparams", "commitment", "participant", "resolver", "contract"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "69a5301e1b40c30face1b93dd813547f360786c9", "node_type": "4", "metadata": {"file_path": "ensips/20.md", "file_name": "20.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/20.md"}, "hash": "cdab20a5166324bb38fa388746036b8058d1e4a66365a1eb7e2ee8a260d4b9e1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d70c1ce8-fbbd-4c16-8c8a-a05e4f863eb7", "node_type": "1", "metadata": {"file_path": "ensips/20.md", "file_name": "20.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/20.md", "header_path": "/ENSIP-20: Wildcard Writing/Specification/"}, "hash": "4b6b9c8fc780d1b90dfa74551b655893b70b8871eae9722b1a2e2cd2703711de", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b33e2937-e0da-4049-9924-da49ea4e7a70", "node_type": "1", "metadata": {"header_path": "/ENSIP-20: Wildcard Writing/Specification/"}, "hash": "eb8bd56704071c84f9cf65b9777ea88db13d4b18a0411063b7a5bd86f59c7efb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Architecture\n\nThe onchain flow would look as follows:\n\n```mermaid\nsequenceDiagram\n    participant Client\n    participant L1 Resolver\n    participant L2 Contract\n\n    Client->>L1 Resolver: getOperationHandler(encodedFunc)\n    L1 Resolver-->>Client: revert OperationHandledOnchain(chainId, address)\n    Client->>L2 Contract: registerParams(name,duration)\n    L2 Contract-->>Client: return RegisterParams\n    alt registerParams.available\n        alt registerParams.commitTime > 0\n            Client->>L2 Contract: makeCommitment(RegisterRequest)\n            L2 Contract-->>Client: return commitment\n            Client->>L2 Contract: commit(commitment)\n            Client->>Client: wait for the commit time to be over\n        end\n        Client->>L2 Contract: register{value: registerParams.price}(RegisterRequest)\n    end\n\n```", "mimetype": "text/plain", "start_char_idx": 11396, "end_char_idx": 12223, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b33e2937-e0da-4049-9924-da49ea4e7a70": {"__data__": {"id_": "b33e2937-e0da-4049-9924-da49ea4e7a70", "embedding": null, "metadata": {"file_path": "ensips/20.md", "file_name": "20.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/20.md", "header_path": "/ENSIP-20: Wildcard Writing/Specification/", "customer_id": 1, "source_url": "ensips/20.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["calldata", "responsible", "EIP-5559", "address", "external", "within", "transfer", "interface", "subdomain", "following", "enabling", "function", "EIP-721"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "69a5301e1b40c30face1b93dd813547f360786c9", "node_type": "4", "metadata": {"file_path": "ensips/20.md", "file_name": "20.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/20.md"}, "hash": "cdab20a5166324bb38fa388746036b8058d1e4a66365a1eb7e2ee8a260d4b9e1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7c01448a-1afb-4841-b845-1142cc2dca33", "node_type": "1", "metadata": {"file_path": "ensips/20.md", "file_name": "20.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/20.md", "header_path": "/ENSIP-20: Wildcard Writing/Specification/"}, "hash": "496f8a0208f6dd712bff8475d0256735db72342ba5e1a6b706090fa9d17fa7bb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "be5e8158-dc05-4b57-a6c1-8053a706d906", "node_type": "1", "metadata": {"header_path": "/ENSIP-20: Wildcard Writing/Specification/"}, "hash": "4730e811af4913bdf8878dc5f30231e60c3839cce333b30ce6d6ea86ba0cef39", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Transfer Subdomain\n\nThis interface is responsible for enabling the transfer of the domain's ownership, both the EIP-721 and within the Registry.\n\nThe transfer function MUST have the following signature:\n\n```solidity\nfunction transferFrom(bytes calldata name, address owner, address newOwner) external payable;\n\n```\n\nWith the arguments being:\n\n1. `node`: the ENS name DNS-encoded\n2. `owner`: the address of the domain's current owner\n3. `newOwner`: the Ethereum address to receive the domain\n\nThe interface for enabling domain transfers MUST be implemented by the one deployed to the given L2. The one deployed to L1 is OPTIONAL for the same reason as the `register` function.\n\n**Behavior:**\n\n1. **L1 Resolver**: it MUST revert with the respective error described by EIP-5559.\n2. **L2 contract**: it MUST handle the actual domain transfer operation.", "mimetype": "text/plain", "start_char_idx": 12225, "end_char_idx": 13077, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "be5e8158-dc05-4b57-a6c1-8053a706d906": {"__data__": {"id_": "be5e8158-dc05-4b57-a6c1-8053a706d906", "embedding": null, "metadata": {"file_path": "ensips/20.md", "file_name": "20.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/20.md", "header_path": "/ENSIP-20: Wildcard Writing/Specification/", "customer_id": 1, "source_url": "ensips/20.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["revert", "sequencediagram", "would", "address", "return", "client", "architecture", "participant", "resolver", "contract", "namewrapper"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "69a5301e1b40c30face1b93dd813547f360786c9", "node_type": "4", "metadata": {"file_path": "ensips/20.md", "file_name": "20.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/20.md"}, "hash": "cdab20a5166324bb38fa388746036b8058d1e4a66365a1eb7e2ee8a260d4b9e1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b33e2937-e0da-4049-9924-da49ea4e7a70", "node_type": "1", "metadata": {"file_path": "ensips/20.md", "file_name": "20.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/20.md", "header_path": "/ENSIP-20: Wildcard Writing/Specification/"}, "hash": "0c0666890c91fbd67c52669c4bcc81512ae485424429736ec3e3989e8bc49fcd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a9d138d4-878b-4635-a95a-57688b3096d5", "node_type": "1", "metadata": {"header_path": "/ENSIP-20: Wildcard Writing/"}, "hash": "6a984f73ab4ee7e5fed2ad178a5f315e7f5742e3eb7dbb0e967aedcfdecd52c7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Architecture\n\nThe flow would look as follows:\n\n```mermaid\nsequenceDiagram\n    participant Client\n    participant L1 Resolver\n    participant L2 Contract\n    participant L2 NameWrapper\n\n    Client->>L1 Resolver: getOperationHandler(encodedFunc)\n    L1 Resolver-->>Client: revert OperationHandledOnchain(chainId, address)\n    Client ->>L2 Contract: address(node)\n    L2 Contract-->>Client: return ETH address\n    alt address different from new owner\n        Client->>L2 Contract: setAddress(node, newOwner)\n    end\n    Client->>L2 Contract: transferFrom(name, owner, newOwner)\n    alt signer is the owner\n        L2 Contract->>L2 NameWrapper: safeTransferFrom\n    end\n\n```", "mimetype": "text/plain", "start_char_idx": 13079, "end_char_idx": 13753, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a9d138d4-878b-4635-a95a-57688b3096d5": {"__data__": {"id_": "a9d138d4-878b-4635-a95a-57688b3096d5", "embedding": null, "metadata": {"file_path": "ensips/20.md", "file_name": "20.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/20.md", "header_path": "/ENSIP-20: Wildcard Writing/", "customer_id": 1, "source_url": "ensips/20.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["interfaces", "domains", "standardize", "management", "offchain", "writing", "maintaining", "proposed", "proposal", "within", "compatibility", "rationale", "EIP-7884", "leveraging", "existing"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "69a5301e1b40c30face1b93dd813547f360786c9", "node_type": "4", "metadata": {"file_path": "ensips/20.md", "file_name": "20.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/20.md"}, "hash": "cdab20a5166324bb38fa388746036b8058d1e4a66365a1eb7e2ee8a260d4b9e1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "be5e8158-dc05-4b57-a6c1-8053a706d906", "node_type": "1", "metadata": {"file_path": "ensips/20.md", "file_name": "20.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/20.md", "header_path": "/ENSIP-20: Wildcard Writing/Specification/"}, "hash": "75edfda8b29566d429cf73ac72e8f82fc30978518cffe01175efe30ddcc90d88", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cb34e0a6-b755-4a81-b8e5-4b8e8ef43793", "node_type": "1", "metadata": {"header_path": "/ENSIP-20: Wildcard Writing/"}, "hash": "92d764d429c38abfb2e21a8cc79a98515e7cf232f50d96242b36165569f63343", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Rationale\n\nThe proposed interfaces standardize the management of offchain domains within the ENS ecosystem. By leveraging [EIP-7884](https://ethereum-magicians.org/t/operation-router/22633) for offchain writing and maintaining compatibility with existing ENS components, this proposal ensures a seamless integration of offchain domain management into current ENS workflows. ## Backwards Compatibility\n\nThis ENSIP introduces new functionality relying on an mechanism similar to what is being used on the CCIP-Read standard making it a fully backward compatible standard.\n\nSetting multiple records should still be handled by the Resolver's `multicallWithNodeCheck` function.", "mimetype": "text/plain", "start_char_idx": 13755, "end_char_idx": 14131, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "15e8ac6b-e0ea-4612-ac54-aaa526549c63": {"__data__": {"id_": "15e8ac6b-e0ea-4612-ac54-aaa526549c63", "embedding": null, "metadata": {"file_path": "ensips/20.md", "file_name": "20.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/20.md", "header_path": "/ENSIP-20: Wildcard Writing/", "customer_id": 1, "source_url": "ensips/20.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["considerations", "events", "ensure", "consider", "modify", "controls", "security", "authorized", "access", "include", "parties", "implementations", "current", "appropriate", "emitting"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "69a5301e1b40c30face1b93dd813547f360786c9", "node_type": "4", "metadata": {"file_path": "ensips/20.md", "file_name": "20.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/20.md"}, "hash": "cdab20a5166324bb38fa388746036b8058d1e4a66365a1eb7e2ee8a260d4b9e1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cb34e0a6-b755-4a81-b8e5-4b8e8ef43793", "node_type": "1", "metadata": {"file_path": "ensips/20.md", "file_name": "20.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/20.md", "header_path": "/ENSIP-20: Wildcard Writing/"}, "hash": "31bf951ffb89c827f35fe3bc1fc603f620bb6bbc581dcd40eeb41d2360fe47e0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e0c21ce4-3677-472e-adc9-dc788d2b1a3f", "node_type": "1", "metadata": {"header_path": "/ENSIP-20: Wildcard Writing/Security Considerations/"}, "hash": "5b332bfed9166629b8bb96c249987a026dd2e04b0b8163d446884725dd6ace86", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Security Considerations\n\nAll the implementations MUST include appropriate access controls to ensure only authorized parties (e.g., the current owner) can modify the domains, as well as consider emitting events to log write operations for transparency and off-chain tracking.\n\nThe data related to domains stored in any place other than Ethereum SHOULD be fetch through the [ENSIP-16: Offchain Metadata](https://docs.ens.domains/ensip/16) to optimize queries and provide features that wouldn't be available otherwise.", "mimetype": "text/plain", "start_char_idx": 14433, "end_char_idx": 14951, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e0c21ce4-3677-472e-adc9-dc788d2b1a3f": {"__data__": {"id_": "e0c21ce4-3677-472e-adc9-dc788d2b1a3f", "embedding": null, "metadata": {"file_path": "ensips/20.md", "file_name": "20.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/20.md", "header_path": "/ENSIP-20: Wildcard Writing/Security Considerations/", "customer_id": 1, "source_url": "ensips/20.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["authentication", "offchain", "performed", "ownership", "logic", "robust", "domain", "implementations", "entirely", "verification", "signature", "signing", "ensure", "prevent", "shifted", "EIP-712"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "69a5301e1b40c30face1b93dd813547f360786c9", "node_type": "4", "metadata": {"file_path": "ensips/20.md", "file_name": "20.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/20.md"}, "hash": "cdab20a5166324bb38fa388746036b8058d1e4a66365a1eb7e2ee8a260d4b9e1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "15e8ac6b-e0ea-4612-ac54-aaa526549c63", "node_type": "1", "metadata": {"file_path": "ensips/20.md", "file_name": "20.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/20.md", "header_path": "/ENSIP-20: Wildcard Writing/"}, "hash": "a0c72443b11aa92937bdeede226b5b4c5c6490c1194d9f9d5bedf5bdd80a2d42", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0c55c9ae-a64a-440b-8b3e-ba90b7e96c73", "node_type": "1", "metadata": {"header_path": "/ENSIP-20: Wildcard Writing/"}, "hash": "ff0722b25463c185bcfc3d56ec987c0f1132991ff4905d75edbd2ec54c6dc9e4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Offchain\n\n1. The authentication logic for domain ownership is shifted entirely to the signing step performed by the Client. Implementations MUST ensure robust signature verification to prevent unauthorized access or modifications.\n2. The Gateway that receives redirected calls is responsible for ownership validation. Proper security measures MUST be implemented in the Gateway to prevent unauthorized actions.\n3. The use of EIP-712 signatures for authentication provides a secure method for verifying domain ownership. However, implementers SHOULD be aware of potential signature replay attacks and implement appropriate mitigations.\n4. The offchain storage of domain information introduces potential risks related to data availability and integrity. Implementers SHOULD consider redundancy and data verification mechanisms to mitigate these risks.\n\nFurther security analysis and auditing are RECOMMENDED before deploying this system in a production environment, with special attention given to the unique security considerations of both onchain and offchain implementations.", "mimetype": "text/plain", "start_char_idx": 14953, "end_char_idx": 16033, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0c55c9ae-a64a-440b-8b3e-ba90b7e96c73": {"__data__": {"id_": "0c55c9ae-a64a-440b-8b3e-ba90b7e96c73", "embedding": null, "metadata": {"file_path": "ensips/20.md", "file_name": "20.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/20.md", "header_path": "/ENSIP-20: Wildcard Writing/", "customer_id": 1, "source_url": "ensips/20.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["copyright", "offchain", "protocol", "batch", "abstract", "rights", "waived", "draft", "EIP-3668", "related", "gateway", "lookup"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "69a5301e1b40c30face1b93dd813547f360786c9", "node_type": "4", "metadata": {"file_path": "ensips/20.md", "file_name": "20.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/20.md"}, "hash": "cdab20a5166324bb38fa388746036b8058d1e4a66365a1eb7e2ee8a260d4b9e1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e0c21ce4-3677-472e-adc9-dc788d2b1a3f", "node_type": "1", "metadata": {"file_path": "ensips/20.md", "file_name": "20.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/20.md", "header_path": "/ENSIP-20: Wildcard Writing/Security Considerations/"}, "hash": "8990b69806f7799b0476f57646f2dabd8d0d9a0e44741fa516e58392358dba10", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Copyright\n\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/). ---\ndescription: Batch Gateway Protocol\ncontributors:\n    - raffy.eth\n    - nick.eth\nensip:\n    created: \"2025-03-15\"\n    status: draft\nignoredRules: [\"heading:annex:-fault-tolerance\"]\n--- # ENSIP-21: Batch Gateway Offchain Lookup Protocol ## Abstract\n\nThis standard establishes the Batch Gateway Offchain Lookup Protocol (BGOLP). ## Motivation\n\n[EIP-3668](https://eips.ethereum.org/EIPS/eip-3668) describes a serial `OffchainLookup` mechanism. To perform more than one `OffchainLookup`, lookups can be preformed in sequence using recursive calls.\n\nThis proposal standardizes an existing ENS solution, colloquially called the \"Batch Gateway\", utilized first by the [`UniversalResolver`](https://etherscan.io/address/0xce01f8eee7E479C928F8919abD53E553a36CeF67#code). It is effectively [`Promise.allSettled()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/allSettled) for `OffchainLookup` reverts.", "mimetype": "text/plain", "start_char_idx": 16035, "end_char_idx": 16147, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "07d1ed14-cdcf-4f64-9f88-ff9ac2399f42": {"__data__": {"id_": "07d1ed14-cdcf-4f64-9f88-ff9ac2399f42", "embedding": null, "metadata": {"file_path": "ensips/21.md", "file_name": "21.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/21.md", "header_path": "/ENSIP-21: Batch Gateway Offchain Lookup Protocol/", "customer_id": 1, "source_url": "ensips/21.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ibatchgateway", "string", "error", "request", "struct", "solidity", "EIP-3668", "bgolp", "interface", "following", "extracted", "information", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a22de11d3b13a577bc7b1ecad7d7b88fe4a20f79", "node_type": "4", "metadata": {"file_path": "ensips/21.md", "file_name": "21.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/21.md"}, "hash": "af6b9fc061c5d95428d5fa8da9fc049f8c19439182cc51ac8358eb142aa56dc5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "30764e2f-6d1b-4948-a0f5-6f49ab536647", "node_type": "1", "metadata": {"file_path": "ensips/21.md", "file_name": "21.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/21.md", "header_path": "/ENSIP-21: Batch Gateway Offchain Lookup Protocol/"}, "hash": "8c7c78483980f7cd88dc1560a912c1dd7edbf22685e26bc9427fe563d87b207c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8f2a0c91-f4db-4cf5-a81c-c4c1c172f23d", "node_type": "1", "metadata": {"header_path": "/ENSIP-21: Batch Gateway Offchain Lookup Protocol/Specification/"}, "hash": "dd05ad7b06dd8177bf053db6be11562ca6383a74a8db911e721dada46bd2e515", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\nThe BGOLP has the following Solidity interface:\n\n```solidity\n/// @dev Interface selector: `0xa780bab6`\ninterface IBatchGateway {\n    /// @notice An HTTP error occurred.\n    /// @dev Error selector: `0x01800152`\n    error HttpError(uint16 status, string message);\n\n    /// @dev Information extracted from an `OffchainLookup` revert.\n    struct Request {\n        address sender; // same as `OffchainLookup.sender`\n        string[] urls;  // same as `OffchainLookup.urls`\n        bytes data;     // same as `OffchainLookup.callData`\n    }\n\n    /// @notice Perform multiple `OffchainLookup` in parallel.\n    /// @notice Callers should enable EIP-3668.\n    /// @param requests The array of requests to lookup in parallel.\n    /// @return failures The failure status of the corresponding request.\n    /// @return responses The response or error data of the corresponding request.\n    function query(\n        Request[] memory requests\n    ) external view returns (bool[] memory failures, bytes[] memory responses);\n}\n```\n\n1. Given an array of `OffchainLookup` reverts, transform each error into a `Request`.\n\n1. Revert `OffchainLookup` with `abi.encodeCall(IBatchedGateway.query, (requests))` as the calldata.\n\n\t- The reverter must supply its own BGOLP gateway(s).\n\t- `x-batch-gateway:true` is defined as a special-purpose URL, which indicates an EIP-3668 client may substitute a local BGOLP implementation. If present, the client should always use the local gateway and ignore the other options. All compliant BGOLP gateways are **equivalent**.\n\n1. Upon receiving the callback, decode the response, and propagate the inner callbacks accordingly. It is the developers responsibility to continue the EIP-3668 process.", "mimetype": "text/plain", "start_char_idx": 944, "end_char_idx": 2671, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8f2a0c91-f4db-4cf5-a81c-c4c1c172f23d": {"__data__": {"id_": "8f2a0c91-f4db-4cf5-a81c-c4c1c172f23d", "embedding": null, "metadata": {"file_path": "ensips/21.md", "file_name": "21.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/21.md", "header_path": "/ENSIP-21: Batch Gateway Offchain Lookup Protocol/Specification/", "customer_id": 1, "source_url": "ensips/21.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["equal", "error", "request", "batch", "length", "received", "EIP-3668", "response", "gateway", "number", "could", "encode", "according"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a22de11d3b13a577bc7b1ecad7d7b88fe4a20f79", "node_type": "4", "metadata": {"file_path": "ensips/21.md", "file_name": "21.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/21.md"}, "hash": "af6b9fc061c5d95428d5fa8da9fc049f8c19439182cc51ac8358eb142aa56dc5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "07d1ed14-cdcf-4f64-9f88-ff9ac2399f42", "node_type": "1", "metadata": {"file_path": "ensips/21.md", "file_name": "21.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/21.md", "header_path": "/ENSIP-21: Batch Gateway Offchain Lookup Protocol/"}, "hash": "ed52ce17f737fd7248b72a83491e9192efb87929246a9677d68958038dd5864a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "974b1135-d571-4f30-ba98-dc6891bd7d06", "node_type": "1", "metadata": {"header_path": "/ENSIP-21: Batch Gateway Offchain Lookup Protocol/"}, "hash": "ccca08450ad88e23a04c77898c7a9aabae822acee9757080373278b901d51f37", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Batch Gateway Response\n\n- The length of `failures` and `responses` must equal the number of `requests`.\n- `failures[i]` is `false` if a response was received according to EIP-3668, even if it was error data.\n- `failures[i]` is `true` if the request could not be completed.\n    - If a HTTP error is encountered, encode the response using `HttpError`.\n    - Otherwise, encode the reason with `Error(string)`.\n- `responses[i]` is the response or error data. ## Rationale\n\nThis standard is a prerequisite for local BGOLP implementations in client frameworks.\n\nA local BGOLP gateway is a privacy and latency improvement.", "mimetype": "text/plain", "start_char_idx": 2673, "end_char_idx": 3131, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0aa6559f-9909-44d3-8ceb-fb0c3f78d1f6": {"__data__": {"id_": "0aa6559f-9909-44d3-8ceb-fb0c3f78d1f6", "embedding": null, "metadata": {"file_path": "ensips/21.md", "file_name": "21.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/21.md", "header_path": "/ENSIP-21: Batch Gateway Offchain Lookup Protocol/", "customer_id": 1, "source_url": "ensips/21.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["considerations", "permits", "backwards", "known", "nearly", "security", "external", "using", "design", "compatibility", "bgolp", "local", "gateway", "clients", "contract"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a22de11d3b13a577bc7b1ecad7d7b88fe4a20f79", "node_type": "4", "metadata": {"file_path": "ensips/21.md", "file_name": "21.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/21.md"}, "hash": "af6b9fc061c5d95428d5fa8da9fc049f8c19439182cc51ac8358eb142aa56dc5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "974b1135-d571-4f30-ba98-dc6891bd7d06", "node_type": "1", "metadata": {"file_path": "ensips/21.md", "file_name": "21.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/21.md", "header_path": "/ENSIP-21: Batch Gateway Offchain Lookup Protocol/"}, "hash": "800359d3fe6e55b20b8293a35e4fc2e20924562e5e19a08a137d9af9f3eaad04", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "90ff8c13-5247-4219-a11a-95e6bd3e109b", "node_type": "1", "metadata": {"header_path": "/ENSIP-21: Batch Gateway Offchain Lookup Protocol/"}, "hash": "4a61b6fdb0abc3f16bbb8bdddfbe3ad03db70ee16c8a968343103c637c426f27", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Backwards Compatibility\n\nThe `UniversalResolver` is the only known contract that uses the BGOLP. Its design permits client-supplied gateways. In nearly all implementations, clients are using the default. ## Security Considerations\n\nA local BGOLP gateway is **always preferable** as an external gateway leaks information and adds latency.\n\nBGOLP gateways **should curtail the maximum number of simultaneous requests** in aggregate and per host to avoid DDOS attacks.\n\nBGOLP gateways **should not be trusted**. Each individual `OffchainLookup` must secure its own protocol.", "mimetype": "text/plain", "start_char_idx": 3295, "end_char_idx": 3501, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a81d1d42-c424-4090-903e-19ebfdeddbf4": {"__data__": {"id_": "a81d1d42-c424-4090-903e-19ebfdeddbf4", "embedding": null, "metadata": {"file_path": "ensips/21.md", "file_name": "21.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/21.md", "header_path": "/ENSIP-21: Batch Gateway Offchain Lookup Protocol/", "customer_id": 1, "source_url": "ensips/21.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["transformed", "copyright", "single", "fault", "rights", "waived", "tolerance", "perform", "EIP-181", "leave", "related", "gateways", "lookup", "bgolp", "terminate"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a22de11d3b13a577bc7b1ecad7d7b88fe4a20f79", "node_type": "4", "metadata": {"file_path": "ensips/21.md", "file_name": "21.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/21.md"}, "hash": "af6b9fc061c5d95428d5fa8da9fc049f8c19439182cc51ac8358eb142aa56dc5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "90ff8c13-5247-4219-a11a-95e6bd3e109b", "node_type": "1", "metadata": {"file_path": "ensips/21.md", "file_name": "21.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/21.md", "header_path": "/ENSIP-21: Batch Gateway Offchain Lookup Protocol/"}, "hash": "58833045c43bb5671b35680a2a437d16292fe55c9611050bb351d7b3a99159b3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "90bf9bb0-0e70-48a9-8c42-daa25c53acb0", "node_type": "1", "metadata": {"header_path": "/ENSIP-21: Batch Gateway Offchain Lookup Protocol/"}, "hash": "e24c2031224560c7add343bc89fcc04a2783b0e611ec4b435d62407e3a8ff477", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Copyright\n\n<!-- Just leave this how it is -->\n\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/). ## Annex: Fault Tolerance\n\nTo perform an `OffchainLookup` that does not terminate unexpectedly, a single lookup with `n` gateways can be transformed into a BGOLP lookup with `n` requests, each with a single gateway. In exchange for fault tolerance, the response time will match the slowest gateway and successful responses will be replicated. ---\ndescription: Specifies a TLD, registrar, and resolver interface for reverse resolution of Ethereum addresses using ENS (formerly EIP-181).\ncontributors:\n  - nick.eth\nensip:\n  created: '2016-12-01'\n  status: final\n---", "mimetype": "text/plain", "start_char_idx": 3872, "end_char_idx": 4020, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a10498ad-35bc-403f-8aa6-2d5734d43cb3": {"__data__": {"id_": "a10498ad-35bc-403f-8aa6-2d5734d43cb3", "embedding": null, "metadata": {"file_path": "ensips/3.md", "file_name": "3.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/3.md", "header_path": "/", "customer_id": 1, "source_url": "ensips/3.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ethereum", "addresses", "abstract", "reverse", "using", "resolution", "ensip", "EIP-181", "interface", "specifies", "resolver"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e2591cd379a655b639df11e1714eace4b9151c03", "node_type": "4", "metadata": {"file_path": "ensips/3.md", "file_name": "3.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/3.md"}, "hash": "0b1dc2f9627096250bb624a05ae1a2538205ca2c3fc4d6e959bd8c91da65eb6f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9112b7a6-4d7d-4626-b1ec-b628d83a754e", "node_type": "1", "metadata": {"file_path": "ensips/3.md", "file_name": "3.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/3.md", "header_path": "/"}, "hash": "954b3aaf5f045d626133681c7466e3e71f71903a7deb01f2df625ff4a9433a2c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "57826462-b240-4fd7-be36-bf7e7af12ba4", "node_type": "1", "metadata": {"header_path": "/ENSIP-3: Reverse Resolution/"}, "hash": "835ab6dc1cdc6143834e7498e99645d438bb0ecd090d6eb797154eeea94064be", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# ENSIP-3: Reverse Resolution\n\nSpecifies a TLD, registrar, and resolver interface for reverse resolution of Ethereum addresses using ENS (formerly [EIP-181](https://eips.ethereum.org/EIPS/eip-181)). ## Abstract\n\nThis ENSIP specifies a TLD, registrar, and resolver interface for reverse resolution of Ethereum addresses using ENS. This permits associating a human-readable name with any Ethereum blockchain address. Resolvers can be certain that the reverse record was published by the owner of the Ethereum address in question.", "mimetype": "text/plain", "start_char_idx": 222, "end_char_idx": 420, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e39d4c6f-5d16-487c-8659-ebd044935024": {"__data__": {"id_": "e39d4c6f-5d16-487c-8659-ebd044935024", "embedding": null, "metadata": {"file_path": "ensips/3.md", "file_name": "3.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/3.md", "header_path": "/ENSIP-3: Reverse Resolution/", "customer_id": 1, "source_url": "ensips/3.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["forward", "identifiers", "mostly", "going", "motivation", "services", "applications", "reverse", "resolution", "which", "allow", "there", "useful", "while"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e2591cd379a655b639df11e1714eace4b9151c03", "node_type": "4", "metadata": {"file_path": "ensips/3.md", "file_name": "3.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/3.md"}, "hash": "0b1dc2f9627096250bb624a05ae1a2538205ca2c3fc4d6e959bd8c91da65eb6f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "57826462-b240-4fd7-be36-bf7e7af12ba4", "node_type": "1", "metadata": {"file_path": "ensips/3.md", "file_name": "3.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/3.md", "header_path": "/ENSIP-3: Reverse Resolution/"}, "hash": "1cf71ae53ac0ec70e8eb599b7846afbf725a6a4a8e4776bb4ea7fbb7d59a1270", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a9b1c354-4dad-402c-a09d-1dd7a3075cca", "node_type": "1", "metadata": {"header_path": "/ENSIP-3: Reverse Resolution/"}, "hash": "f542cfa2952a7a28d59ddc61cabd79253d8cbeaab9362c94eede2cf8c79a1306", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Motivation\n\nWhile name services are mostly used for forward resolution - going from human-readable identifiers to machine-readable ones - there are many use-cases in which reverse resolution is useful as well:\n\n* Applications that allow users to monitor accounts benefit from showing the name of an account instead of its address, even if it was originally added by address.\n* Attaching metadata such as descriptive information to an address allows retrieving this information regardless of how the address was originally discovered.\n* Anyone can configure a name to resolve to an address, regardless of ownership of that address. Reverse records allow the owner of an address to claim a name as authoritative for that address.", "mimetype": "text/plain", "start_char_idx": 752, "end_char_idx": 1482, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a9b1c354-4dad-402c-a09d-1dd7a3075cca": {"__data__": {"id_": "a9b1c354-4dad-402c-a09d-1dd7a3075cca", "embedding": null, "metadata": {"file_path": "ensips/3.md", "file_name": "3.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/3.md", "header_path": "/ENSIP-3: Reverse Resolution/", "customer_id": 1, "source_url": "ensips/3.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["generate", "stored", "hierarchy", "fashion", "convert", "reverse", "given", "hexadecimal", "reserved", "regular", "records", "under", "account", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e2591cd379a655b639df11e1714eace4b9151c03", "node_type": "4", "metadata": {"file_path": "ensips/3.md", "file_name": "3.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/3.md"}, "hash": "0b1dc2f9627096250bb624a05ae1a2538205ca2c3fc4d6e959bd8c91da65eb6f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e39d4c6f-5d16-487c-8659-ebd044935024", "node_type": "1", "metadata": {"file_path": "ensips/3.md", "file_name": "3.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/3.md", "header_path": "/ENSIP-3: Reverse Resolution/"}, "hash": "7c6cd3fa1df42c9d094b0193998b959a7a73bc2a4ecad21be2af14f66bd91249", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f3d91f5f-08d1-4607-9eae-880e482dd88f", "node_type": "1", "metadata": {"header_path": "/ENSIP-3: Reverse Resolution/Specification/"}, "hash": "ed37c2e915f32d1535cb21c95db97ba487b498e0e054c5b5bbce36bfeb005602", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\nReverse ENS records are stored in the ENS hierarchy in the same fashion as regular records, under a reserved domain, `addr.reverse`. To generate the ENS name for a given account's reverse records, convert the account to hexadecimal representation in lower-case, and append `addr.reverse`. For instance, the ENS registry's address at `0x112234455c3a32fd11230c42e7bccd4a84e02010` has any reverse records stored at `112234455c3a32fd11230c42e7bccd4a84e02010.addr.reverse`.\n\nNote that this means that contracts wanting to do dynamic reverse resolution of addresses will need to perform hex encoding in the contract.", "mimetype": "text/plain", "start_char_idx": 1484, "end_char_idx": 2112, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f3d91f5f-08d1-4607-9eae-880e482dd88f": {"__data__": {"id_": "f3d91f5f-08d1-4607-9eae-880e482dd88f", "embedding": null, "metadata": {"file_path": "ensips/3.md", "file_name": "3.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/3.md", "header_path": "/ENSIP-3: Reverse Resolution/Specification/", "customer_id": 1, "source_url": "ensips/3.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["permits", "registrar", "ownership", "reverse", "domain", "record", "returns", "called", "provides", "following", "their", "owner", "caller", "function"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e2591cd379a655b639df11e1714eace4b9151c03", "node_type": "4", "metadata": {"file_path": "ensips/3.md", "file_name": "3.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/3.md"}, "hash": "0b1dc2f9627096250bb624a05ae1a2538205ca2c3fc4d6e959bd8c91da65eb6f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a9b1c354-4dad-402c-a09d-1dd7a3075cca", "node_type": "1", "metadata": {"file_path": "ensips/3.md", "file_name": "3.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/3.md", "header_path": "/ENSIP-3: Reverse Resolution/"}, "hash": "6360dfdc29236b9cb2e02240f5c5074ac579107c5afa27dfdbfe8548eb66ee5d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "de2e3098-ad5b-434a-8e0c-a95280c202d8", "node_type": "1", "metadata": {"header_path": "/ENSIP-3: Reverse Resolution/Specification/Registrar/"}, "hash": "ccb3448d72bb9ebbab682a20008ec6d49d580662966a6c566e76ad8eecb45fd5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Registrar\n\nThe owner of the `addr.reverse` domain will be a registrar that permits the caller to take ownership of the reverse record for their own address. It provides the following methods: #### function claim(address owner) returns (bytes32 node)\n\nWhen called by account `x`, instructs the ENS registry to transfer ownership of the name `hex(x) + '.addr.reverse'` to the provided address, and return the namehash of the ENS record thus transferred.\n\nAllowing the caller to specify an owner other than themselves for the relevant node facilitates contracts that need accurate reverse ENS entries delegating this to their creators with a minimum of code inside their constructor:\n\n```\nreverseRegistrar.claim(msg.sender)\n```", "mimetype": "text/plain", "start_char_idx": 2114, "end_char_idx": 2309, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2a267dff-c546-48aa-b403-78a1581794ba": {"__data__": {"id_": "2a267dff-c546-48aa-b403-78a1581794ba", "embedding": null, "metadata": {"file_path": "ensips/3.md", "file_name": "3.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/3.md", "header_path": "/ENSIP-3: Reverse Resolution/Specification/Registrar/", "customer_id": 1, "source_url": "ensips/3.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["specified", "ownership", "address", "instructs", "namehash", "returns", "record", "provided", "called", "registry", "transfer", "return", "account", "resolver", "function"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e2591cd379a655b639df11e1714eace4b9151c03", "node_type": "4", "metadata": {"file_path": "ensips/3.md", "file_name": "3.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/3.md"}, "hash": "0b1dc2f9627096250bb624a05ae1a2538205ca2c3fc4d6e959bd8c91da65eb6f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "de2e3098-ad5b-434a-8e0c-a95280c202d8", "node_type": "1", "metadata": {"file_path": "ensips/3.md", "file_name": "3.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/3.md", "header_path": "/ENSIP-3: Reverse Resolution/Specification/Registrar/"}, "hash": "b1b6b53c239ebf3d1704b280d47f646a98d7a7b7ce0ac735e09d9f6a365fa69c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c10226b0-8326-4108-bd85-9b4d8a6d56c0", "node_type": "1", "metadata": {"header_path": "/ENSIP-3: Reverse Resolution/Specification/Registrar/"}, "hash": "c5ff29505e423ccbf15c2e3133491cd152836e481b54e0a2d6a09d08d52ce286", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "#### function claimWithResolver(address owner, address resolver) returns (bytes32 node)\n\nWhen called by account `x`, instructs the ENS registry to set the resolver of the name `hex(x) + '.addr.reverse'` to the specified resolver, then transfer ownership of the name to the provided address, and return the namehash of the ENS record thus transferred. This method facilitates setting up a custom resolver and owner in fewer transactions than would be required if calling `claim`. #### function setName(string name) returns (bytes32 node)\n\nWhen called by account `x`, sets the resolver for the name `hex(x) + '.addr.reverse'` to a default resolver, and sets the name record on that name to the specified name. This method facilitates setting up simple reverse records for users in a single transaction.", "mimetype": "text/plain", "start_char_idx": 2845, "end_char_idx": 3323, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b8e1ee20-791f-4718-9efa-6c88cc496562": {"__data__": {"id_": "b8e1ee20-791f-4718-9efa-6c88cc496562", "embedding": null, "metadata": {"file_path": "ensips/3.md", "file_name": "3.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/3.md", "header_path": "/ENSIP-3: Reverse Resolution/Specification/", "customer_id": 1, "source_url": "ensips/3.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["valid", "implement", "constant", "returns", "consisting", "following", "interface", "resolvers", "return", "requested", "resolver", "function"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e2591cd379a655b639df11e1714eace4b9151c03", "node_type": "4", "metadata": {"file_path": "ensips/3.md", "file_name": "3.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/3.md"}, "hash": "0b1dc2f9627096250bb624a05ae1a2538205ca2c3fc4d6e959bd8c91da65eb6f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c10226b0-8326-4108-bd85-9b4d8a6d56c0", "node_type": "1", "metadata": {"file_path": "ensips/3.md", "file_name": "3.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/3.md", "header_path": "/ENSIP-3: Reverse Resolution/Specification/Registrar/"}, "hash": "e915d9e7845f8259e47eda4a5877ea89ce5a2841bc28440eb66220e7003a6b69", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d7f08a11-8939-4d4c-add4-8c067608034b", "node_type": "1", "metadata": {"header_path": "/ENSIP-3: Reverse Resolution/"}, "hash": "7a2063400f8e27254d73ef2ea5db237ae2d0a2883dd9a0bf4b752c421cbb92bf", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Resolver interface\n\nA new resolver interface is defined, consisting of the following method:\n\n```\nfunction name(bytes32 node) constant returns (string);\n```\n\nResolvers that implement this interface must return a valid ENS name for the requested node, or the empty string if no name is defined for the requested node.\n\nThe interface ID of this interface is 0x691f3431.\n\nFuture ENSIPs may specify more record types appropriate to reverse ENS records. ## Appendix 1: Registrar implementation\n\nThis registrar, written in Solidity, implements the specifications outlined above.\n\n```\npragma solidity ^0.4.10;\n\nimport \"./AbstractENS.sol\";\n\ncontract Resolver {\n    function setName(bytes32 node, string name) public;\n}\n\n/**\n * @dev Provides a default implementation of a resolver for reverse records,\n * which permits only the owner to update it.\n */\ncontract DefaultReverseResolver is Resolver {\n    AbstractENS public ens;\n    mapping(bytes32=>string) public name;\n\n    /**\n     * @dev Constructor\n     * @param ensAddr The address of the ENS registry.\n     */\n    function DefaultReverseResolver(AbstractENS ensAddr) {\n        ens = ensAddr;\n    }\n\n    /**\n     * @dev Only permits calls by the reverse registrar.\n     * @param node The node permission is required for.\n     */\n    modifier owner_only(bytes32 node) {\n        require(msg.sender == ens.owner(node));\n        _;\n    }\n\n    /**\n     * @dev Sets the name for a node.\n     * @param node The node to update.\n     * @param _name The name to set.\n     */\n    function setName(bytes32 node, string _name) public owner_only(node) {\n        name[node] = _name;\n    }\n}\n\ncontract ReverseRegistrar {\n    // namehash('addr.reverse')\n    bytes32 constant ADDR_REVERSE_NODE = 0x91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e2;\n\n    AbstractENS public ens;\n    Resolver public defaultResolver;\n\n    /**\n     * @dev Constructor\n     * @param ensAddr The address of the ENS registry.\n     * @param resolverAddr The address of the default reverse resolver.\n     */\n    function ReverseRegistrar(AbstractENS ensAddr, Resolver resolverAddr) {\n        ens = ensAddr;\n        defaultResolver = resolverAddr;\n    }\n\n    /**\n     * @dev Transfers ownership of the reverse ENS record associated with the\n     *      calling account.\n     * @param owner The address to set as the owner of the reverse record in ENS.\n     * @return The ENS node hash of the reverse record.\n     */\n    function claim(address owner) returns (bytes32 node) {\n        return claimWithResolver(owner, 0);\n    }\n\n    /**\n     * @dev Transfers ownership of the reverse ENS record associated with the\n     *      calling account.\n     * @param owner The address to set as the owner of the reverse record in ENS.\n     * @param resolver The address of the resolver to set; 0 to leave unchanged.\n     * @return The ENS node hash of the reverse record.\n     */\n    function claimWithResolver(address owner, address resolver) returns (bytes32 node) {\n        var label = sha3HexAddress(msg.sender);\n        node = sha3(ADDR_REVERSE_NODE, label);\n        var currentOwner = ens.owner(node);\n\n        // Update the resolver if required\n        if(resolver != 0 && resolver != ens.resolver(node)) {\n            // Transfer the name to us first if it's not already\n            if(currentOwner != address(this)) {\n                ens.setSubnodeOwner(ADDR_REVERSE_NODE, label, this);\n                currentOwner = address(this);\n            }\n            ens.setResolver(node, resolver);\n        }\n\n        // Update the owner if required\n        if(currentOwner != owner) {\n            ens.setSubnodeOwner(ADDR_REVERSE_NODE, label, owner);\n        }\n\n        return node;\n    }\n\n    /**\n     * @dev Sets the `name()` record for the reverse ENS record associated with\n     * the calling account. First updates the resolver to the default reverse\n     * resolver if necessary.\n     * @param name The name to set for this address.\n     * @return The ENS node hash of the reverse record.\n     */\n    function setName(string name) returns (bytes32 node) {\n        node = claimWithResolver(this, defaultResolver);\n        defaultResolver.setName(node, name);\n        return node;\n    }\n\n    /**\n     * @dev Returns the node hash for a given account's reverse records.\n     * @param addr The address to hash\n     * @return The ENS node hash.\n     */\n    function node(address addr) constant returns (bytes32 ret) {\n        return sha3(ADDR_REVERSE_NODE, sha3HexAddress(addr));\n    }\n\n    /**\n     * @dev An optimised function to compute the sha3 of the lower-case\n     *      hexadecimal representation of an Ethereum address.\n     * @param addr The address to hash\n     * @return The SHA3 hash of the lower-case hexadecimal encoding of the\n     *         input address.\n     */\n    function sha3HexAddress(address addr) private returns (bytes32 ret) {\n        addr; ret; // Stop warning us about unused variables\n        assembly {\n            let lookup := 0x3031323334353637383961626364656600000000000000000000000000000000\n            let i := 40\n        loop:\n            i := sub(i, 1)\n            mstore8(i, byte(and(addr, 0xf), lookup))\n            addr := div(addr, 0x10)\n            i := sub(i, 1)\n            mstore8(i, byte(and(addr, 0xf), lookup))\n            addr := div(addr, 0x10)\n            jumpi(loop, i)\n            ret := sha3(0, 40)\n        }\n    }\n}\n```", "mimetype": "text/plain", "start_char_idx": 3648, "end_char_idx": 4100, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b0727fea-925c-4729-ad88-85556660c83c": {"__data__": {"id_": "b0727fea-925c-4729-ad88-85556660c83c", "embedding": null, "metadata": {"file_path": "ensips/3.md", "file_name": "3.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/3.md", "header_path": "/ENSIP-3: Reverse Resolution/", "customer_id": 1, "source_url": "ensips/3.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["mechanism", "final", "interfaces", "copyright", "callers", "EIP-205", "rights", "storing", "waived", "related", "support", "lookup", "definitions", "contract"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e2591cd379a655b639df11e1714eace4b9151c03", "node_type": "4", "metadata": {"file_path": "ensips/3.md", "file_name": "3.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/3.md"}, "hash": "0b1dc2f9627096250bb624a05ae1a2538205ca2c3fc4d6e959bd8c91da65eb6f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d7f08a11-8939-4d4c-add4-8c067608034b", "node_type": "1", "metadata": {"file_path": "ensips/3.md", "file_name": "3.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/3.md", "header_path": "/ENSIP-3: Reverse Resolution/"}, "hash": "58b4ca36a5676a6bd02f8c76be4bfe7f084456079004a100347f18346ffc8a51", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Copyright\n\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/). ---\ndescription: A mechanism for storing ABI definitions in ENS, for easy lookup of contract interfaces by callers (formerly EIP-205).\ncontributors:\n  - nick.eth\nensip:\n  created: '2017-02-06'\n  status: final\nignoredRules: [\"missing:motivation\"]\n--- # ENSIP-4: Support for contract ABIs\n\nA mechanism for storing ABI definitions in ENS, for easy lookup of contract interfaces by callers (formerly [EIP-205](https://eips.ethereum.org/EIPS/eip-205)).", "mimetype": "text/plain", "start_char_idx": 9040, "end_char_idx": 9152, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "38476f23-98a0-4c24-a2aa-55913c3496c3": {"__data__": {"id_": "38476f23-98a0-4c24-a2aa-55913c3496c3", "embedding": null, "metadata": {"file_path": "ensips/4.md", "file_name": "4.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/4.md", "header_path": "/ENSIP-4: Support for contract ABIs/", "customer_id": 1, "source_url": "ensips/4.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["typically", "particularly", "additional", "basis", "important", "abstract", "interacting", "metadata", "supplied", "required", "which", "burden", "updated", "where"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "149becad4a5a8b66533fa5e62a4c0b8fa3e00613", "node_type": "4", "metadata": {"file_path": "ensips/4.md", "file_name": "4.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/4.md"}, "hash": "fb1b466ef290e11f2d02a1fd027236472e3569cc981fc3a5bbac7cc0e07b3666", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c1f1cfc8-a294-46a6-b38c-c29660dd598c", "node_type": "1", "metadata": {"file_path": "ensips/4.md", "file_name": "4.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/4.md", "header_path": "/"}, "hash": "d2835e8a18035efd77a2db34876d376570002fa3bf49b4d9454c7717165a769d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fd153871-ac2e-41c6-99f3-4eec21071068", "node_type": "1", "metadata": {"header_path": "/ENSIP-4: Support for contract ABIs/"}, "hash": "80976fc7d0d2e63f4bfcfcbe21a5d05f3e8ea319a0e5ef3ae1a18cd176648616", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Abstract\n\nABIs are important metadata required for interacting with most contracts. At present, they are typically supplied out-of-band, which adds an additional burden to interacting with contracts, particularly on a one-off basis or where the ABI may be updated over time. The small size of ABIs permits an alternative solution, storing them in ENS, permitting name lookup and ABI discovery via the same process.\n\nABIs are typically quite compact; the largest in-use ABI we could find, that for the DAO, is 9450 bytes uncompressed JSON, 6920 bytes uncompressed CBOR, and 1128 bytes when the JSON form is compressed with zlib. Further gains on CBOR encoding are possible using a CBOR extension that permits eliminating repeated strings, which feature extensively in ABIs. Most ABIs, however, are far shorter than this, consisting of only a few hundred bytes of uncompressed JSON.\n\nThis ENSIP defines a resolver profile for retrieving contract ABIs, as well as encoding standards for storing ABIs for different applications, allowing the user to select between different representations based on their need for compactness and other considerations such as onchain access.", "mimetype": "text/plain", "start_char_idx": 450, "end_char_idx": 1624, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fd153871-ac2e-41c6-99f3-4eec21071068": {"__data__": {"id_": "fd153871-ac2e-41c6-99f3-4eec21071068", "embedding": null, "metadata": {"file_path": "ensips/4.md", "file_name": "4.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/4.md", "header_path": "/ENSIP-4: Support for contract ABIs/", "customer_id": 1, "source_url": "ensips/4.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["encodings", "several", "different", "single", "defined", "order", "tradeoffs", "allow", "unique", "between", "encoding", "constant", "onchain", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "149becad4a5a8b66533fa5e62a4c0b8fa3e00613", "node_type": "4", "metadata": {"file_path": "ensips/4.md", "file_name": "4.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/4.md"}, "hash": "fb1b466ef290e11f2d02a1fd027236472e3569cc981fc3a5bbac7cc0e07b3666", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "38476f23-98a0-4c24-a2aa-55913c3496c3", "node_type": "1", "metadata": {"file_path": "ensips/4.md", "file_name": "4.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/4.md", "header_path": "/ENSIP-4: Support for contract ABIs/"}, "hash": "de48031b47b61d2ef25fc3069caab1605b4a89545e5c40e8ad90ac1a7354ca5b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c9712a04-c450-4692-8464-7adac22a0199", "node_type": "1", "metadata": {"header_path": "/ENSIP-4: Support for contract ABIs/Specification/"}, "hash": "631657345fd542766995aae828910b1014083b4601cc6ba1e5d0eae3a17652e9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification ### ABI encodings\n\nIn order to allow for different tradeoffs between onchain size and accessibility, several ABI encodings are defined. Each ABI encoding is defined by a unique constant with only a single bit set, allowing for the specification of 256 unique encodings in a single uint.\n\nThe currently recognised encodings are:\n\n| ID | Description          |\n| -- | -------------------- |\n| 1  | JSON                 |\n| 2  | zlib-compressed JSON |\n| 4  | CBOR                 |\n| 8  | URI                  |\n\nThis table may be extended in future through the ENSIP process.\n\nEncoding type 1 specifies plaintext JSON, uncompressed; this is the standard format in which ABIs are typically encoded, but also the bulkiest, and is not easily parseable onchain.\n\nEncoding type 2 specifies zlib-compressed JSON. This is significantly smaller than uncompressed JSON, and is straightforward to decode offchain. However, it is impractical for onchain consumers to use.\n\nEncoding type 4 is [CBOR](https://cbor.io). CBOR is a binary encoding format that is a superset of JSON, and is both more compact and easier to parse in limited environments such as the EVM. Consumers that support CBOR are strongly encouraged to also support the [stringref extension](http://cbor.schmorp.de/stringref) to CBOR, which provides significant additional reduction in encoded size.\n\nEncoding type 8 indicates that the ABI can be found elsewhere, at the specified URI. This is typically the most compact of the supported forms, but also adds external dependencies for implementers. The specified URI may use any schema, but HTTP, IPFS, and Swarm are expected to be the most common.", "mimetype": "text/plain", "start_char_idx": 1626, "end_char_idx": 1642, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f25cfbf5-220f-4ff9-bfd9-04f080023a68": {"__data__": {"id_": "f25cfbf5-220f-4ff9-bfd9-04f080023a68", "embedding": null, "metadata": {"file_path": "ensips/4.md", "file_name": "4.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/4.md", "header_path": "/ENSIP-4: Support for contract ABIs/Specification/", "customer_id": 1, "source_url": "ensips/4.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["uint256", "profile", "returns", "consisting", "contenttype", "following", "interface", "bitwise", "encoding", "constant", "resolver", "function"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "149becad4a5a8b66533fa5e62a4c0b8fa3e00613", "node_type": "4", "metadata": {"file_path": "ensips/4.md", "file_name": "4.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/4.md"}, "hash": "fb1b466ef290e11f2d02a1fd027236472e3569cc981fc3a5bbac7cc0e07b3666", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c9712a04-c450-4692-8464-7adac22a0199", "node_type": "1", "metadata": {"file_path": "ensips/4.md", "file_name": "4.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/4.md", "header_path": "/ENSIP-4: Support for contract ABIs/Specification/"}, "hash": "cbc3fefa87007f4247ec76bb678a5124d6422c4097e503b9d3f13081e56bfd63", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "70dce5fd-bd16-49b5-89fe-f7bf1fc72471", "node_type": "1", "metadata": {"header_path": "/ENSIP-4: Support for contract ABIs/Specification/"}, "hash": "d966753ee457ace0d3ead2ba2fc36c00cadd5bf476426c55b2febfdb0c243ec7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Resolver profile\n\nA new resolver interface is defined, consisting of the following method:\n\n```\nfunction ABI(bytes32 node, uint256 contentType) constant returns (uint256, bytes);\n```\n\nThe interface ID of this interface is 0x2203ab56.\n\ncontentType is a bitfield, and is the bitwise OR of all the encoding types the caller will accept. Resolvers that implement this interface must return an ABI encoded using one of the requested formats, or `(0, \"\")` if they do not have an ABI for this function, or do not support any of the requested formats.\n\nThe `abi` resolver profile is valid on both forward and reverse records.", "mimetype": "text/plain", "start_char_idx": 3297, "end_char_idx": 3918, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "70dce5fd-bd16-49b5-89fe-f7bf1fc72471": {"__data__": {"id_": "70dce5fd-bd16-49b5-89fe-f7bf1fc72471", "embedding": null, "metadata": {"file_path": "ensips/4.md", "file_name": "4.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/4.md", "header_path": "/ENSIP-4: Support for contract ABIs/Specification/", "customer_id": 1, "source_url": "ensips/4.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["process", "attempt", "reverse", "returns", "attempting", "first", "lookup", "based", "implementers", "fetch", "should"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "149becad4a5a8b66533fa5e62a4c0b8fa3e00613", "node_type": "4", "metadata": {"file_path": "ensips/4.md", "file_name": "4.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/4.md"}, "hash": "fb1b466ef290e11f2d02a1fd027236472e3569cc981fc3a5bbac7cc0e07b3666", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f25cfbf5-220f-4ff9-bfd9-04f080023a68", "node_type": "1", "metadata": {"file_path": "ensips/4.md", "file_name": "4.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/4.md", "header_path": "/ENSIP-4: Support for contract ABIs/Specification/"}, "hash": "6823fa7d847e7aa3dfffe89b551c802579b1bc5f804a8f6c4431a2bee052efd0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3e1d8035-d1aa-4f5c-9617-9b5f5b3791ce", "node_type": "1", "metadata": {"header_path": "/ENSIP-4: Support for contract ABIs/"}, "hash": "41401e166981bf4663a7e7d6433f08887b054aa6851d7d4cd8fac4b83bef25f9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### ABI lookup process\n\nWhen attempting to fetch an ABI based on an ENS name, implementers should first attempt an ABI lookup on the name itself. If that lookup returns no results, they should attempt a reverse lookup on the Ethereum address the name resolves to.\n\nImplementers should support as many of the ABI encoding formats as practical. ## Rationale\n\nStoring ABIs onchain avoids the need to introduce additional dependencies for applications wishing to fetch them, such as swarm or HTTP access. Given the typical compactness of ABIs, we believe this is a worthwhile tradeoff in many cases.\n\nThe two-step resolution process permits different names to provide different ABIs for the same contract, such as in the case where it's useful to provide a minimal ABI to some callers, as well as specifying ABIs for contracts that did not specify one of their own. The fallback to looking up an ABI on the reverse record permits contracts to specify their own canonical ABI, and prevents the need for duplication when multiple names reference the same contract without the need for different ABIs.", "mimetype": "text/plain", "start_char_idx": 3920, "end_char_idx": 4262, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "517dad91-7162-4449-bc32-d19c5fbdbdfc": {"__data__": {"id_": "517dad91-7162-4449-bc32-d19c5fbdbdfc", "embedding": null, "metadata": {"file_path": "ensips/4.md", "file_name": "4.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/4.md", "header_path": "/ENSIP-4: Support for contract ABIs/", "customer_id": 1, "source_url": "ensips/4.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["final", "copyright", "abstract", "rights", "waived", "EIP-634", "ensip", "standard", "related", "records", "storage"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "149becad4a5a8b66533fa5e62a4c0b8fa3e00613", "node_type": "4", "metadata": {"file_path": "ensips/4.md", "file_name": "4.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/4.md"}, "hash": "fb1b466ef290e11f2d02a1fd027236472e3569cc981fc3a5bbac7cc0e07b3666", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3e1d8035-d1aa-4f5c-9617-9b5f5b3791ce", "node_type": "1", "metadata": {"file_path": "ensips/4.md", "file_name": "4.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/4.md", "header_path": "/ENSIP-4: Support for contract ABIs/"}, "hash": "d8df0bed40bdbba65c64d30289f4432daaede0f27349ec7528f50a4b921ac92b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Copyright\n\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/). ---\ndescription: A standard for storage of text records in ENS (formerly EIP-634).\ncontributors:\n  - ricmoo.eth\nensip:\n  created: '2017-05-17'\n  status: final\n--- # ENSIP-5: Text Records\n\nA standard for storage of text records in ENS (formerly [EIP-634](https://eips.ethereum.org/EIPS/eip-634)). ## Abstract\n\nThis ENSIP defines a resolver profile for ENS that permits the lookup of arbitrary key-value text data. This allows ENS name holders to associate e-mail addresses, URLs and other informational data with a ENS name.", "mimetype": "text/plain", "start_char_idx": 5017, "end_char_idx": 5129, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9a3e3df2-d615-45cd-b2a3-006d09afed05": {"__data__": {"id_": "9a3e3df2-d615-45cd-b2a3-006d09afed05", "embedding": null, "metadata": {"file_path": "ensips/5.md", "file_name": "5.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/5.md", "header_path": "/ENSIP-5: Text Records/", "customer_id": 1, "source_url": "ensips/5.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["permits", "profile", "motivation", "metadata", "define", "reporting", "often", "ensip", "desire", "associated", "EIP-165", "general", "there", "resolver", "otherwise", "simple"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fd9eafadb2674c69661090ce2357d1f0ebc701af", "node_type": "4", "metadata": {"file_path": "ensips/5.md", "file_name": "5.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/5.md"}, "hash": "8a52e4a7b86e99b757e3217264265f1ba9899a2393b3dc316ddbc500a32847b6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f69c649c-bfea-4592-909f-a2637a47520c", "node_type": "1", "metadata": {"file_path": "ensips/5.md", "file_name": "5.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/5.md", "header_path": "/ENSIP-5: Text Records/"}, "hash": "4406c74197b58ff19638e56d9bd357c7910471e80cee5c5263f08c4b16652a28", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c39f0669-dcc2-4651-8603-7b4b391ebdfc", "node_type": "1", "metadata": {"header_path": "/ENSIP-5: Text Records/"}, "hash": "5cd635d7771f6686b9eac176a048b0a80e6e3a9fbf042d70550a2fac815a81f8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Motivation\n\nThere is often a desire for human-readable metadata to be associated with otherwise machine-driven data; used for debugging, maintenance, reporting and general information.\n\nIn this ENSIP we define a simple resolver profile for ENS that permits ENS names to associate arbitrary key-value text. ## Specification ### Resolver Profile\n\nA new resolver interface is defined, consisting of the following method:\n\n```solidity\ninterface IERC634 {\n  /// @notice Returns the text data associated with a key for an ENS name\n  /// @param node A nodehash for an ENS name\n  /// @param key A key to lookup text data for\n  /// @return The text data\n  function text(bytes32 node, string key) view returns (string text);\n}\n```\n\nThe EIP-165 interface ID of this interface is `0x59d1d43c`.\n\nThe `text` data may be any arbitrary UTF-8 string. If the key is not present, the empty string must be returned.", "mimetype": "text/plain", "start_char_idx": 527, "end_char_idx": 835, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "11af686c-8c2d-4e81-9aae-d5a2265cf8d9": {"__data__": {"id_": "11af686c-8c2d-4e81-9aae-d5a2265cf8d9", "embedding": null, "metadata": {"file_path": "ensips/5.md", "file_name": "5.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/5.md", "header_path": "/ENSIP-5: Text Records/Specification/", "customer_id": 1, "source_url": "ensips/5.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["global", "lowercase", "numbers", "description", "hyphen", "canonical", "avatar", "display", "ignore", "image", "match", "value", "clients", "should"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fd9eafadb2674c69661090ce2357d1f0ebc701af", "node_type": "4", "metadata": {"file_path": "ensips/5.md", "file_name": "5.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/5.md"}, "hash": "8a52e4a7b86e99b757e3217264265f1ba9899a2393b3dc316ddbc500a32847b6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6e10515e-4139-48cf-a665-25716cc9cfc2", "node_type": "1", "metadata": {"file_path": "ensips/5.md", "file_name": "5.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/5.md", "header_path": "/ENSIP-5: Text Records/Specification/"}, "hash": "31b65baacba3f915c8dc1c68787e7ff6cc6cb3c207bdd0cad3a562b35ab97504", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9416a4b8-bc96-4c68-a794-d4b1e8967149", "node_type": "1", "metadata": {"header_path": "/ENSIP-5: Text Records/Specification/"}, "hash": "a2b9b79ceb97cf98adf195047c6efd0dba5b62e26e6fd2fec866d4385fd762d8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Global Keys\n\nGlobal Keys must be made up of lowercase letters, numbers and the hyphen (-).\n\n* **avatar** - a URL to an image used as an avatar or logo\n* **description** - A description of the name\n* **display** - a canonical display name for the ENS name; this MUST match the ENS name when its case is folded, and clients should ignore this value if it does not (e.g. `\"ricmoo.eth\"` could set this to `\"RicMoo.eth\"`)\n* **email** - an e-mail address\n* **keywords** - A list of comma-separated keywords, ordered by most significant first; clients that interpresent this field may choose a threshold beyond which to ignore\n* **mail** - A physical mailing address\n* **notice** - A notice regarding this name\n* **location** - A generic location (e.g. `\"Toronto, Canada\"`)\n* **phone** - A phone number as an E.164 string\n* **url** - a website URL", "mimetype": "text/plain", "start_char_idx": 1429, "end_char_idx": 2273, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9416a4b8-bc96-4c68-a794-d4b1e8967149": {"__data__": {"id_": "9416a4b8-bc96-4c68-a794-d4b1e8967149", "embedding": null, "metadata": {"file_path": "ensips/5.md", "file_name": "5.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/5.md", "header_path": "/ENSIP-5: Text Records/Specification/", "customer_id": 1, "source_url": "ensips/5.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["start", "allows", "services", "least", "using", "which", "contain", "their", "namespace", "without", "names", "service"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fd9eafadb2674c69661090ce2357d1f0ebc701af", "node_type": "4", "metadata": {"file_path": "ensips/5.md", "file_name": "5.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/5.md"}, "hash": "8a52e4a7b86e99b757e3217264265f1ba9899a2393b3dc316ddbc500a32847b6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "11af686c-8c2d-4e81-9aae-d5a2265cf8d9", "node_type": "1", "metadata": {"file_path": "ensips/5.md", "file_name": "5.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/5.md", "header_path": "/ENSIP-5: Text Records/Specification/"}, "hash": "2eb62df2d00803d4171f60d4e7b6f974644c27544e84e6f75f42468eeb979848", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "846d46a3-3076-4489-ad84-eff7eabbff53", "node_type": "1", "metadata": {"header_path": "/ENSIP-5: Text Records/Specification/"}, "hash": "ee1e6576b0b4b31646c81e8fcb7eebf991644a377e5d8347edee0678bd7ea077", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Service Keys\n\nService Keys must be made up of a _reverse dot notation_ for a namespace which the service owns, for example, DNS names (e.g. `.com`, `.io`, etc) or ENS name (i.e. `.eth`). Service Keys must contain at least one dot.\n\nThis allows new services to start using their own keys without worrying about colliding with existing services and also means new services do not need to update this document.\n\nThe following services are common, which is why recommendations are provided here, but ideally a service would declare its own key.\n\n* **com.github** - a GitHub username\n* **com.peepeth** - a Peepeth username\n* **com.linkedin** - a LinkedIn username\n* **com.twitter** - a Twitter username\n* **io.keybase** - a Keybase username\n* **org.telegram** - a Telegram username\n\nThis technique also allows for a service owner to specify a hierarchy for their keys, such as:\n\n* **com.example.users**\n* **com.example.groups**\n* **com.example.groups.public**\n* **com.example.groups.private**", "mimetype": "text/plain", "start_char_idx": 2275, "end_char_idx": 3266, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "846d46a3-3076-4489-ad84-eff7eabbff53": {"__data__": {"id_": "846d46a3-3076-4489-ad84-eff7eabbff53", "embedding": null, "metadata": {"file_path": "ensips/5.md", "file_name": "5.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/5.md", "header_path": "/ENSIP-5: Text Records/Specification/", "customer_id": 1, "source_url": "ensips/5.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["likely", "specified", "above", "versions", "query", "applications", "these", "attempting", "compatibility", "following", "maximal", "their", "fallback", "earlier", "legacy"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fd9eafadb2674c69661090ce2357d1f0ebc701af", "node_type": "4", "metadata": {"file_path": "ensips/5.md", "file_name": "5.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/5.md"}, "hash": "8a52e4a7b86e99b757e3217264265f1ba9899a2393b3dc316ddbc500a32847b6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9416a4b8-bc96-4c68-a794-d4b1e8967149", "node_type": "1", "metadata": {"file_path": "ensips/5.md", "file_name": "5.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/5.md", "header_path": "/ENSIP-5: Text Records/Specification/"}, "hash": "b4f80be8cf18ce4725314f299bc31687eeb43b7d13579f024c93962f53ea3364", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e4027cd5-cc09-4db5-b4c0-b2a123ac1f9b", "node_type": "1", "metadata": {"header_path": "/ENSIP-5: Text Records/"}, "hash": "4f2d3464924a3575c55a464bc2da8c39119d894819da026fdf8efe0487321b3e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Legacy Keys\n\nThe following keys were specified in earlier versions of this ENSIP.\n\nTheir use is not likely very wide, but applications attempting maximal compatibility may wish to query these keys as a fallback if the above replacement keys fail.\n\n* **vnd.github** - a GitHub username (renamed to `com.github`)\n* **vnd.peepeth** - a peepeth username (renamed to `com.peepeth`)\n* **vnd.twitter** - a Twitter username (renamed to `com.twitter`) ## Rationale ### Application-specific vs general-purpose record types\n\nRather than define a large number of specific record types (each for generally human-readable data) such as `url` and `email`, we follow an adapted model of DNS's `TXT` records, which allow for a general keys and values, allowing future extension without adjusting the resolver, while allowing applications to use custom keys for their own purposes.", "mimetype": "text/plain", "start_char_idx": 3268, "end_char_idx": 3714, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e54e6eba-8813-4986-bddd-2c8698a74fd8": {"__data__": {"id_": "e54e6eba-8813-4986-bddd-2c8698a74fd8", "embedding": null, "metadata": {"file_path": "ensips/5.md", "file_name": "5.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/5.md", "header_path": "/ENSIP-5: Text Records/", "customer_id": 1, "source_url": "ensips/5.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["considerations", "EIP-1185", "copyright", "backwards", "profile", "security", "rights", "waived", "defines", "compatibility", "provides", "related", "resolver", "features", "storage"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fd9eafadb2674c69661090ce2357d1f0ebc701af", "node_type": "4", "metadata": {"file_path": "ensips/5.md", "file_name": "5.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/5.md"}, "hash": "8a52e4a7b86e99b757e3217264265f1ba9899a2393b3dc316ddbc500a32847b6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ba6b5625-de9b-42ac-a935-289a75f8b563", "node_type": "1", "metadata": {"file_path": "ensips/5.md", "file_name": "5.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/5.md", "header_path": "/ENSIP-5: Text Records/Rationale/"}, "hash": "28ec03605f0d885edb75cd719a9de5e83cff6dabe33ad17817d9cc2746e9fe95", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0cab34c2-21eb-4298-8069-123a6071c79a", "node_type": "1", "metadata": {"header_path": "/ENSIP-5: Text Records/"}, "hash": "28f2bb18cf2fa86539239d293ccc7e18cb17415e4fbc00e64bf50a4ec5c179f1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Backwards Compatibility\n\nNot applicable. ## Security Considerations\n\nNone. ## Copyright\n\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/). ---\ndescription: Defines a resolver profile for ENS that provides features for storage and lookup of DNS records (formerly EIP-1185).\ncontributors:\n  - mcdee\nensip:\n  created: '2018-06-26'\n  status: obsolete\nignoredRules: [\"heading:implementation\", \"heading:test-cases\"]\n--- # ENSIP-6: DNS-in-ENS\n\nDefines a resolver profile for ENS that provides features for storage and lookup of DNS records (formerly [EIP-1185](https://eips.ethereum.org/EIPS/eip-1185)).", "mimetype": "text/plain", "start_char_idx": 4139, "end_char_idx": 4182, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "48d56e49-87f3-4015-a9c4-8cfeae7fb9f7": {"__data__": {"id_": "48d56e49-87f3-4015-a9c4-8cfeae7fb9f7", "embedding": null, "metadata": {"file_path": "ensips/6.md", "file_name": "6.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/6.md", "header_path": "/ENSIP-6: DNS-in-ENS/", "customer_id": 1, "source_url": "ensips/6.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["desirable", "allows", "motivation", "profile", "abstract", "highly", "defines", "ensip", "store", "provides", "authoritative", "resolver", "lookup", "features", "storage"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2ebbd239bb3e826723ce367562f033a702e1d27b", "node_type": "4", "metadata": {"file_path": "ensips/6.md", "file_name": "6.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/6.md"}, "hash": "dfdf9894568f9b57161eadb6fb99529a8372d8ad324eb79a73026ece4625183e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a4daf2e0-c218-4d27-91a8-6f5f2346d688", "node_type": "1", "metadata": {"file_path": "ensips/6.md", "file_name": "6.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/6.md", "header_path": "/"}, "hash": "4f6237850c8325c8db004266c66ba70381e553604a8df94e45cb6f414fb42fa3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "857eac56-7665-4c13-85ac-0deffe90aca5", "node_type": "1", "metadata": {"header_path": "/ENSIP-6: DNS-in-ENS/"}, "hash": "e404a37ec61f62a686b0445c2ac2027e0ba2a1868749dccf194b1b61c8dfa74b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Abstract\n\nThis ENSIP defines a resolver profile for ENS that provides features for storage and lookup of DNS records. This allows ENS to be used as a store of authoritative DNS information. ## Motivation\n\nENS is a highly desirable store for DNS information. It provides the distributed authority of DNS without conflating ownership and authoritative serving of information. With ENS, the owner of a domain has full control over their own DNS records. Also, ENS has the ability (through smart contracts) for a domain's subdomains to be irrevocably assigned to another entity.", "mimetype": "text/plain", "start_char_idx": 460, "end_char_idx": 652, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b856e896-b66c-4d27-8560-a628a397d44f": {"__data__": {"id_": "b856e896-b66c-4d27-8560-a628a397d44f", "embedding": null, "metadata": {"file_path": "ensips/6.md", "file_name": "6.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/6.md", "header_path": "/ENSIP-6: DNS-in-ENS/", "customer_id": 1, "source_url": "ensips/6.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["benefit", "profile", "transposed", "follows", "system", "together", "support", "atomicity", "records", "defined", "resolver", "simplicity", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2ebbd239bb3e826723ce367562f033a702e1d27b", "node_type": "4", "metadata": {"file_path": "ensips/6.md", "file_name": "6.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/6.md"}, "hash": "dfdf9894568f9b57161eadb6fb99529a8372d8ad324eb79a73026ece4625183e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "857eac56-7665-4c13-85ac-0deffe90aca5", "node_type": "1", "metadata": {"file_path": "ensips/6.md", "file_name": "6.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/6.md", "header_path": "/ENSIP-6: DNS-in-ENS/"}, "hash": "6e908b0af8922d18fc1b8fae76f7798c4c8bccf2cc38c41776ffc8290b4269f6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ebf42227-1075-4948-bb4e-e4530d5b7f37", "node_type": "1", "metadata": {"header_path": "/ENSIP-6: DNS-in-ENS/Specification/"}, "hash": "73f8ae0f8efc75a01c1538b161a17a6574e2518921e836731676f901631a6e01", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\nThe resolver profile to support DNS on ENS follows the resolver specification as defined in #137.\n\nTraditionally, DNS is a zone-based system in that all of the records for a zone are kept together in the same file. This has the benefit of simplicity and atomicity of zone updates, but when transposed to ENS can result in significant gas costs for simple changes. As a result, the resolver works on the basis of record sets. A record set is uniquely defined by the tuple (domain, name, resource record type), for example the tuple (example.com, www.example.com, A) defines the record set of A records for the name www.example.com in the domain example.com. A record set can contain 0 or more values, for example if www.example.com has A records 1.2.3.4 and 5.6.7.8 then the aforementioned tuple will have two values.\n\nThe choice to work at the level of record sets rather than zones means that this specification cannot completely support some features of DNS, such as zone transfers and DNSSEC. It would be possible to build a different resolver profile that works at the zone level, however it would be very expensive to carry out updates and so is not considered further for this ENSIP.\n\nThe DNS resolver interface consists of two functions to set DNS information and two functions to query DNS information.", "mimetype": "text/plain", "start_char_idx": 1040, "end_char_idx": 2368, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ebf42227-1075-4948-bb4e-e4530d5b7f37": {"__data__": {"id_": "ebf42227-1075-4948-bb4e-e4530d5b7f37", "embedding": null, "metadata": {"file_path": "ensips/6.md", "file_name": "6.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/6.md", "header_path": "/ENSIP-6: DNS-in-ENS/Specification/", "customer_id": 1, "source_url": "ensips/6.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["namehashes", "updates", "namehash", "domain", "given", "which", "signature", "clears", "records", "defined", "bytes", "arguments", "function"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2ebbd239bb3e826723ce367562f033a702e1d27b", "node_type": "4", "metadata": {"file_path": "ensips/6.md", "file_name": "6.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/6.md"}, "hash": "dfdf9894568f9b57161eadb6fb99529a8372d8ad324eb79a73026ece4625183e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b856e896-b66c-4d27-8560-a628a397d44f", "node_type": "1", "metadata": {"file_path": "ensips/6.md", "file_name": "6.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/6.md", "header_path": "/ENSIP-6: DNS-in-ENS/"}, "hash": "efb88f1a58b24f2880e1092f69e9b86365df3c35ec321a7dea57f0b4d0cf74ce", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2cac4e1e-8b54-4b31-ad7e-5a87db371d18", "node_type": "1", "metadata": {"header_path": "/ENSIP-6: DNS-in-ENS/Specification/"}, "hash": "9815d3e3b5c33a5f8548b13ab966790e573d26d85a63fcac61a7f2d8fbabe3d5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### setDNSRecords(bytes32 node, bytes data)\n\n`setDNSRecords()` sets, updates or clears 1 or more DNS records for a given node. It has function signature `0x0af179d7`.\n\nThe arguments for the function are as follows:\n\n-   node: the namehash of the fully-qualified domain in ENS for which to set the records. Namehashes are defined in #137\n-   data: 1 or more DNS records in DNS wire format. Any record that is supplied without a value will be cleared. Note that all records in the same RRset should be contiguous within the data; if not then the later RRsets will overwrite the earlier one(s)", "mimetype": "text/plain", "start_char_idx": 2370, "end_char_idx": 2960, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2cac4e1e-8b54-4b31-ad7e-5a87db371d18": {"__data__": {"id_": "2cac4e1e-8b54-4b31-ad7e-5a87db371d18", "embedding": null, "metadata": {"file_path": "ensips/6.md", "file_name": "6.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/6.md", "header_path": "/ENSIP-6: DNS-in-ENS/Specification/", "customer_id": 1, "source_url": "ensips/6.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["individually", "requires", "removes", "clear", "although", "above", "described", "signature", "possible", "owner", "records", "resolver", "function"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2ebbd239bb3e826723ce367562f033a702e1d27b", "node_type": "4", "metadata": {"file_path": "ensips/6.md", "file_name": "6.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/6.md"}, "hash": "dfdf9894568f9b57161eadb6fb99529a8372d8ad324eb79a73026ece4625183e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ebf42227-1075-4948-bb4e-e4530d5b7f37", "node_type": "1", "metadata": {"file_path": "ensips/6.md", "file_name": "6.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/6.md", "header_path": "/ENSIP-6: DNS-in-ENS/Specification/"}, "hash": "ed34abfd31bb7d24463c2ce204cf6ad0de808e0b05721b7515144273edd4f773", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "da3f695c-212e-43c8-99fd-a928ae03b562", "node_type": "1", "metadata": {"header_path": "/ENSIP-6: DNS-in-ENS/Specification/"}, "hash": "5e1771189388165c4d2444e92aa1a61d603fd2146b9e9d981cb4188dd5464756", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### clearDNSZone(bytes32 node)\n\n`clearDNSZone()` removes all DNS records for the domain. It has function signature `0xad5780af`.\n\nAlthough it is possible to clear records individually with `setDNSRecords()` as described above this requires the owner to know all of the records that have been set (as the resolver has no methods to iterate over the records for a given domain), and might require multiple transactions. `clearDNSZone()` removes all zone information in a single operation.\n\nThe arguments for the function is as follows:\n\n-   node: the namehash of the fully-qualified domain in ENS for which to clear the records. Namehashes are defined in #137", "mimetype": "text/plain", "start_char_idx": 2962, "end_char_idx": 3619, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "da3f695c-212e-43c8-99fd-a928ae03b562": {"__data__": {"id_": "da3f695c-212e-43c8-99fd-a928ae03b562", "embedding": null, "metadata": {"file_path": "ensips/6.md", "file_name": "6.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/6.md", "header_path": "/ENSIP-6: DNS-in-ENS/Specification/", "customer_id": 1, "source_url": "ensips/6.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["uint16", "namehashes", "namehash", "returns", "obtains", "given", "domain", "which", "bytes32", "signature", "records", "defined", "arguments", "function"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2ebbd239bb3e826723ce367562f033a702e1d27b", "node_type": "4", "metadata": {"file_path": "ensips/6.md", "file_name": "6.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/6.md"}, "hash": "dfdf9894568f9b57161eadb6fb99529a8372d8ad324eb79a73026ece4625183e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2cac4e1e-8b54-4b31-ad7e-5a87db371d18", "node_type": "1", "metadata": {"file_path": "ensips/6.md", "file_name": "6.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/6.md", "header_path": "/ENSIP-6: DNS-in-ENS/Specification/"}, "hash": "2c29f42d12d1f912f26c11080eb2d7de1a9d9a28cbde0b5dea69c5fff2d6cbba", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a64062b0-4265-46de-a76f-d81f92cb235a", "node_type": "1", "metadata": {"header_path": "/ENSIP-6: DNS-in-ENS/Specification/"}, "hash": "a29491ba64baf9b332824b3093f6c81210b25776c998f83270daa3ec5863879d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### dnsRecords(bytes32 node, bytes32 name, uint16 resource) view returns (bytes)\n\n`dnsRecords()` obtains the DNS records for a given node, name and resource. It has function signature `0x2461e851`.\n\nThe arguments for the function are as follows:\n\n-   node: the namehash of the fully-qualified domain in ENS for which to set the records. Namehashes are defined in #137\n-   name: the `keccak256()` hash of the name of the record in DNS wire format.\n-   resource: the resource record ID. Resource record IDs are defined in https://en.wikipedia.org/wiki/List\\_of\\_DNS\\_record\\_types\n\nThe function returns all matching records in DNS wire format. If there are no records present the function will return nothing.", "mimetype": "text/plain", "start_char_idx": 3621, "end_char_idx": 4328, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a64062b0-4265-46de-a76f-d81f92cb235a": {"__data__": {"id_": "a64062b0-4265-46de-a76f-d81f92cb235a", "embedding": null, "metadata": {"file_path": "ensips/6.md", "file_name": "6.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/6.md", "header_path": "/ENSIP-6: DNS-in-ENS/Specification/", "customer_id": 1, "source_url": "ensips/6.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["wildcard", "needed", "reports", "returns", "provided", "working", "bytes32", "signature", "there", "resolvers", "records", "defined", "function", "resources"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2ebbd239bb3e826723ce367562f033a702e1d27b", "node_type": "4", "metadata": {"file_path": "ensips/6.md", "file_name": "6.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/6.md"}, "hash": "dfdf9894568f9b57161eadb6fb99529a8372d8ad324eb79a73026ece4625183e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "da3f695c-212e-43c8-99fd-a928ae03b562", "node_type": "1", "metadata": {"file_path": "ensips/6.md", "file_name": "6.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/6.md", "header_path": "/ENSIP-6: DNS-in-ENS/Specification/"}, "hash": "bfc2465818affd03df570ce5a268212558c155fc0c7b27cff8a94131a5193973", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d9c71133-9890-4fee-b120-0bc1b02d53b7", "node_type": "1", "metadata": {"header_path": "/ENSIP-6: DNS-in-ENS/"}, "hash": "b3deb224628bcf9dc5f4d760bb81ed672fd4ec2c8f6eeaccd402fc98bccfd727", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### hasDNSRecords(bytes32 node, bytes32 name) view returns (bool)\n\n`hasDNSRecords()` reports if there are any records for the provided name in the domain. It has function signature `0x4cbf6ba4`.\n\nThis function is needed by DNS resolvers when working with wildcard resources as defined in https://tools.ietf.org/html/rfc4592\n\nThe arguments for the function are as follows:\n\n-   node: the namehash of the fully-qualified domain in ENS for which to set the records. Namehashes are defined in #137\n-   name: the `keccak256()` hash of the name of the record in DNS wire format.\n\nThe function returns `true` if there are any records for the provided node and name, otherwise `false`.", "mimetype": "text/plain", "start_char_idx": 4330, "end_char_idx": 5007, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d9c71133-9890-4fee-b120-0bc1b02d53b7": {"__data__": {"id_": "d9c71133-9890-4fee-b120-0bc1b02d53b7", "embedding": null, "metadata": {"file_path": "ensips/6.md", "file_name": "6.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/6.md", "header_path": "/ENSIP-6: DNS-in-ENS/", "customer_id": 1, "source_url": "ensips/6.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["copyright", "functionality", "backwards", "rights", "cases", "compatibility", "related", "implementation", "resolver", "reference"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2ebbd239bb3e826723ce367562f033a702e1d27b", "node_type": "4", "metadata": {"file_path": "ensips/6.md", "file_name": "6.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/6.md"}, "hash": "dfdf9894568f9b57161eadb6fb99529a8372d8ad324eb79a73026ece4625183e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a64062b0-4265-46de-a76f-d81f92cb235a", "node_type": "1", "metadata": {"file_path": "ensips/6.md", "file_name": "6.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/6.md", "header_path": "/ENSIP-6: DNS-in-ENS/Specification/"}, "hash": "d87137d60e51f91bdd6d54aa9050656f6efbeea4d3c1bfc1d16d24c1dff41065", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0a8501a8-f58b-41c4-baee-5bd17b6f95b7", "node_type": "1", "metadata": {"header_path": "/ENSIP-6: DNS-in-ENS/"}, "hash": "c2ad4291c16661588910ca29a0d401a8c17f574ba69959046b475e38b1d8f760", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Backwards Compatibility\n\nNot applicable. ## Implementation\n\nThe reference implementation of the DNS resolver is at https://github.com/wealdtech/wealdtech-solidity/blob/master/contracts/ens/DNSResolver.sol\n\nhttps://github.com/wealdtech/ethereal.git can be used to test the functionality of the resolver with the \"dns set\", \"dns get\" and \"dns clear\" commands. ## Test Cases\n\nTest cases for the DNS resolver are at https://github.com/wealdtech/wealdtech-solidity/blob/master/test/ens/DNSResolver.js ## Copyright\n\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/).", "mimetype": "text/plain", "start_char_idx": 5009, "end_char_idx": 5052, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cda7e477-857f-488f-a971-53a75103a33b": {"__data__": {"id_": "cda7e477-857f-488f-a971-53a75103a33b", "embedding": null, "metadata": {"file_path": "ensips/7.md", "file_name": "7.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/7.md", "header_path": "/", "customer_id": 1, "source_url": "ensips/7.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["content", "final", "introduces", "addresses", "storing", "hashes", "decanus", "field", "EIP-1577", "contenthash"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "40b3a564f767884fbd05bb17f4dca3224b438fe9", "node_type": "4", "metadata": {"file_path": "ensips/7.md", "file_name": "7.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/7.md"}, "hash": "30a175e595cdb72b236e08fd53a85f59af94749a4cc53651bb985748bb0cbd37", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "918c6588-364a-4f2c-95f3-f32f85d42680", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "97cd541db7cb39a10f75ee14595041bc9de4656c98d25a0fc572f940fe2c1d94", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndescription: Introduces a field for storing content addresses and hashes in ENS (formerly EIP-1577).\ncontributors:\n  - nick.eth\n  - decanus\nensip:\n  created: '2018-11-13'\n  status: final\n--- # ENSIP-7: Contenthash field\n\nIntroduces a field for storing content addresses and hashes in ENS (formerly [EIP-1577](https://eips.ethereum.org/EIPS/eip-1577)). ## Abstract\n\nThis ENSIP introduces the new `contenthash` field for ENS resolvers, allowing for a better defined system of mapping names to network and content addresses. Additionally the `content` and `multihash` fields are deprecated.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 194, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c7702d9c-c932-4a00-be0b-712bc568996a": {"__data__": {"id_": "c7702d9c-c932-4a00-be0b-712bc568996a", "embedding": null, "metadata": {"file_path": "ensips/7.md", "file_name": "7.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/7.md", "header_path": "/ENSIP-7: Contenthash field/", "customer_id": 1, "source_url": "ensips/7.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["content", "hosted", "multiple", "motivation", "resolving", "applications", "mobile", "including", "systems", "begun", "clients", "various", "names", "distributed"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "40b3a564f767884fbd05bb17f4dca3224b438fe9", "node_type": "4", "metadata": {"file_path": "ensips/7.md", "file_name": "7.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/7.md"}, "hash": "30a175e595cdb72b236e08fd53a85f59af94749a4cc53651bb985748bb0cbd37", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "00472df9-85b2-4497-ba25-c86f895d4b0f", "node_type": "1", "metadata": {"file_path": "ensips/7.md", "file_name": "7.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/7.md", "header_path": "/ENSIP-7: Contenthash field/"}, "hash": "7312cc7afe15cde6902f450d6c17d2f62c2da76d91008d35aca9ae86dff6fc50", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "eb233699-d1d3-456d-bc8b-3904fab1bef6", "node_type": "1", "metadata": {"header_path": "/ENSIP-7: Contenthash field/"}, "hash": "eb34fe54d2c36c4c690b1aa096b4620a4291794a009fed0b66cd32023f7be746", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Motivation\n\nMultiple applications including [Metamask](https://metamask.io) and mobile clients such as [Status](https://status.im) have begun resolving ENS names to content hosted on distributed systems such as [IPFS](https://ipfs.io) and [Swarm](https://swarm-guide.readthedocs.io). Due to the various ways content can be stored and addressed, a standard is required so these applications know how to resolve names and that domain owners know how their content will be resolved.\n\nThe `contenthash` field allows for easy specification of network and content addresses in ENS.", "mimetype": "text/plain", "start_char_idx": 595, "end_char_idx": 1173, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "eb233699-d1d3-456d-bc8b-3904fab1bef6": {"__data__": {"id_": "eb233699-d1d3-456d-bc8b-3904fab1bef6", "embedding": null, "metadata": {"file_path": "ensips/7.md", "file_name": "7.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/7.md", "header_path": "/ENSIP-7: Contenthash field/", "customer_id": 1, "source_url": "ensips/7.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["permits", "protocols", "argument", "supporting", "supported", "called", "which", "return", "resolvers", "specification", "field", "range", "function", "fields"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "40b3a564f767884fbd05bb17f4dca3224b438fe9", "node_type": "4", "metadata": {"file_path": "ensips/7.md", "file_name": "7.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/7.md"}, "hash": "30a175e595cdb72b236e08fd53a85f59af94749a4cc53651bb985748bb0cbd37", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c7702d9c-c932-4a00-be0b-712bc568996a", "node_type": "1", "metadata": {"file_path": "ensips/7.md", "file_name": "7.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/7.md", "header_path": "/ENSIP-7: Contenthash field/"}, "hash": "870a9f396473a2e70095c494b2473ee629c19df11bbe15996df195021ef5a730", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6065525d-67a3-4be9-bb56-16df5b26e239", "node_type": "1", "metadata": {"header_path": "/ENSIP-7: Contenthash field/Specification/"}, "hash": "5a55d168c3aa8b49a923c7f171247b91cd8c7251a926b265f60219ffbb327baa", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\nThe field `contenthash` is introduced, which permits a wide range of protocols to be supported by ENS names. Resolvers supporting this field MUST return `true` when the `supportsInterface` function is called with argument `0xbc1c58d1`.\n\nThe fields `content` and `multihash` are deprecated.\n\nThe value returned by `contenthash` MUST be represented as a machine-readable [multicodec](https://github.com/multiformats/multicodec). The format is specified as follows:\n\n```go\n<protoCode uvarint><value []byte>\n```\n\nprotoCodes and their meanings are specified in the [multiformats/multicodec](https://github.com/multiformats/multicodec) repository.\n\nThe encoding of the value depends on the content type specified by the protoCode. Values with protocodes of 0xe3 and 0xe4 represent IPFS and Swarm content; these values are encoded as v1 [CIDs](https://github.com/multiformats/cid) without a base prefix, meaning their value is formatted as follows:\n\n```go\n<protoCode uvarint><cid-version><multicodec-content-type><multihash-content-address>\n```\n\nWhen resolving a `contenthash`, applications MUST use the protocol code to determine what type of address is encoded, and resolve the address appropriately for that protocol, if supported.", "mimetype": "text/plain", "start_char_idx": 1175, "end_char_idx": 2420, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6065525d-67a3-4be9-bb56-16df5b26e239": {"__data__": {"id_": "6065525d-67a3-4be9-bb56-16df5b26e239", "embedding": null, "metadata": {"file_path": "ensips/7.md", "file_name": "7.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/7.md", "header_path": "/ENSIP-7: Contenthash field/Specification/", "customer_id": 1, "source_url": "ensips/7.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["content", "0xe3010170122029f2d17be6139079dc48696d1f582a8530eb9805b561eda517e22a892c7e3f1f", "29f2d17be6139079dc48696d1f582a8530eb9805b561eda517e22a892c7e3f1f", "swarm", "binary", "input", "example", "bytes", "storage", "keccak256"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "40b3a564f767884fbd05bb17f4dca3224b438fe9", "node_type": "4", "metadata": {"file_path": "ensips/7.md", "file_name": "7.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/7.md"}, "hash": "30a175e595cdb72b236e08fd53a85f59af94749a4cc53651bb985748bb0cbd37", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "eb233699-d1d3-456d-bc8b-3904fab1bef6", "node_type": "1", "metadata": {"file_path": "ensips/7.md", "file_name": "7.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/7.md", "header_path": "/ENSIP-7: Contenthash field/"}, "hash": "d6a998cea1246038256d0eed1ac73a1bbf565a4cd8150845321e048cfe472cae", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "742c97a1-c3ca-412e-8901-f2c9444a8283", "node_type": "1", "metadata": {"header_path": "/ENSIP-7: Contenthash field/Specification/"}, "hash": "9ddfbf73bdcd603e87eac1b3fc4c38e5bb6c57f98cbc4820dc7cf2346e48b634", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Example\n\n**IPFS**\n\nInput data:\n\n```go\nstorage system: IPFS (0xe3)\nCID version: 1 (0x01)\ncontent type: dag-pb (0x70)\nhash function: sha2-256 (0x12)\nhash length: 32 bytes (0x20)\nhash: 29f2d17be6139079dc48696d1f582a8530eb9805b561eda517e22a892c7e3f1f\n```\n\nBinary format:\n\n```go\n0xe3010170122029f2d17be6139079dc48696d1f582a8530eb9805b561eda517e22a892c7e3f1f\n```\n\nText format:\n\n```txt\nipfs://QmRAQB6YaCyidP37UdDnjFY5vQuiBrcqdyoW1CuDgwxkD4\n``` ### Swarm\n\nInput data:\n\n```go\nstorage system: Swarm (0xe4)\nCID version: 1 (0x01)\ncontent type: swarm-manifest (0xfa)\nhash function: keccak256 (0x1b)\nhash length: 32 bytes (0x20)\nhash: d1de9994b4d039f6548d191eb26786769f580809256b4685ef316805265ea162\n```\n\nBinary format:\n\n```go\n0xe40101fa011b20d1de9994b4d039f6548d191eb26786769f580809256b4685ef316805265ea162\n```\n\nText format:\n\n```go\nbzz://d1de9994b4d039f6548d191eb26786769f580809256b4685ef316805265ea162\n```\n\nExample usage with swarm hash:\n\n```go\n$ swarm hash ens contenthash d1de9994b4d039f6548d191eb26786769f580809256b4685ef316805265ea162                                 \n> e40101fa011b20d1de9994b4d039f6548d191eb26786769f580809256b4685ef316805265ea162\n```", "mimetype": "text/plain", "start_char_idx": 2422, "end_char_idx": 2862, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6af50d14-1367-47de-b490-8b12c0f345bb": {"__data__": {"id_": "6af50d14-1367-47de-b490-8b12c0f345bb", "embedding": null, "metadata": {"file_path": "ensips/7.md", "file_name": "7.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/7.md", "header_path": "/ENSIP-7: Contenthash field/Specification/", "customer_id": 1, "source_url": "ensips/7.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["implemented", "those", "swarm", "grace", "order", "holders", "update", "support", "offering", "their", "fallback", "resolver", "names", "period"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "40b3a564f767884fbd05bb17f4dca3224b438fe9", "node_type": "4", "metadata": {"file_path": "ensips/7.md", "file_name": "7.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/7.md"}, "hash": "30a175e595cdb72b236e08fd53a85f59af94749a4cc53651bb985748bb0cbd37", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "742c97a1-c3ca-412e-8901-f2c9444a8283", "node_type": "1", "metadata": {"file_path": "ensips/7.md", "file_name": "7.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/7.md", "header_path": "/ENSIP-7: Contenthash field/Specification/"}, "hash": "d20628c736d5d3d03f3e593cd23366bbb0b90525d6a4b5bdf844611aa0f8fc87", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ac6b73ea-0532-4f80-a60e-786352066449", "node_type": "1", "metadata": {"header_path": "/ENSIP-7: Contenthash field/Specification/"}, "hash": "75b6bc10c5c4b2a4a3a272dde80dc7252dd3900ca953f8268cf2032562cd69db", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Fallback\n\nIn order to support names that have an IPFS or Swarm hash in their `content` field, a grace period MUST be implemented offering those name holders time to update their names. If a resolver does not support the `multihash` interface, it MUST be checked whether they support the `content` interface. If they do, the value of that field SHOULD be treated in a context dependent fashion and resolved. This condition MUST be enforced until at least March 31st, 2019. ### Implementation\n\nTo support `contenthash`, a new resolver has been developed and can be found [here](https://github.com/ensdomains/resolvers/blob/master/contracts/PublicResolver.sol), you can also find this smart contract deployed on:\n\n* Mainnet : [0xd3ddccdd3b25a8a7423b5bee360a42146eb4baf3](https://etherscan.io/address/0xd3ddccdd3b25a8a7423b5bee360a42146eb4baf3)\n* Ropsten : [0xde469c7106a9fbc3fb98912bb00be983a89bddca](https://ropsten.etherscan.io/address/0xde469c7106a9fbc3fb98912bb00be983a89bddca)\n\nThere are also implementations in multiple languages to encode and decode `contenthash`:\n\n* [JavaScript](https://github.com/pldespaigne/content-hash)\n* [Python](https://github.com/filips123/ContentHashPy)", "mimetype": "text/plain", "start_char_idx": 3573, "end_char_idx": 4048, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9d286f1a-8029-4e6e-9b90-fee29a35ba79": {"__data__": {"id_": "9d286f1a-8029-4e6e-9b90-fee29a35ba79", "embedding": null, "metadata": {"file_path": "ensips/7.md", "file_name": "7.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/7.md", "header_path": "/ENSIP-7: Contenthash field/", "customer_id": 1, "source_url": "ensips/7.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["interfaces", "final", "those", "copyright", "rights", "waived", "method", "defines", "discovering", "related", "associating", "EIP-1844", "contract", "names"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "40b3a564f767884fbd05bb17f4dca3224b438fe9", "node_type": "4", "metadata": {"file_path": "ensips/7.md", "file_name": "7.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/7.md"}, "hash": "30a175e595cdb72b236e08fd53a85f59af94749a4cc53651bb985748bb0cbd37", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ac6b73ea-0532-4f80-a60e-786352066449", "node_type": "1", "metadata": {"file_path": "ensips/7.md", "file_name": "7.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/7.md", "header_path": "/ENSIP-7: Contenthash field/Specification/"}, "hash": "79c7cfa848b02fcf0df125983b93cd20743e27ee85b3855933cfc50359dbc336", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Copyright\n\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/). ---\ndescription: Defines a method of associating contract interfaces with ENS names and addresses, and of discovering those interfaces (formerly EIP-1844).\ncontributors:\n  - nick.eth\nensip:\n  created: '2019-03-05'\n  status: final\nignoredRules: [\"heading:implementation\"]\n--- # ENSIP-8: Interface Discovery\n\nDefines a method of associating contract interfaces with ENS names and addresses, and of discovering those interfaces (formerly [EIP-1844](https://eips.ethereum.org/EIPS/eip-1844)).", "mimetype": "text/plain", "start_char_idx": 4764, "end_char_idx": 4876, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1f30924f-293f-41b5-bb3a-50654ebf7539": {"__data__": {"id_": "1f30924f-293f-41b5-bb3a-50654ebf7539", "embedding": null, "metadata": {"file_path": "ensips/8.md", "file_name": "8.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/8.md", "header_path": "/ENSIP-8: Interface Discovery/", "customer_id": 1, "source_url": "ensips/8.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["interfaces", "those", "exposing", "abstract", "address", "applications", "method", "allowing", "ensip", "associated", "interact", "specifies", "discover", "contract"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f082fb711c93851bc355d199330461957d63441d", "node_type": "4", "metadata": {"file_path": "ensips/8.md", "file_name": "8.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/8.md"}, "hash": "eb475d409f3bb9a710110da1d6902ad9ed9f4e84222769dfda8e078317408720", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0b57d65f-1ac8-47f4-9dd8-b017212443f6", "node_type": "1", "metadata": {"file_path": "ensips/8.md", "file_name": "8.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/8.md", "header_path": "/"}, "hash": "c8b09e94bcd6dc30eb6f3b4f51f35425a54511b089c0c0dd7cda2c331ff7df0e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2c519dbb-2140-4d2a-87e4-0987d977b42a", "node_type": "1", "metadata": {"header_path": "/ENSIP-8: Interface Discovery/"}, "hash": "482d53471a86ccec3533bf1431f8b682c1dc9b7e3bd738ae58a177c541b37155", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Abstract\n\nThis ENSIP specifies a method for exposing interfaces associated with an ENS name or an address (typically a contract address) and allowing applications to discover those interfaces and interact with them. Interfaces can be implemented either by the target contract (if any) or by any other contract. ## Motivation\n\nEIP 165 supports interface discovery - determining if the contract at a given address supports a requested interface. However, in many cases it's useful to be able to discover functionality associated with a name or an address that is implemented by other contracts.\n\nFor example, a token contract may not itself provide any kind of 'atomic swap' functionality, but there may be associated contracts that do. With ENS interface discovery, the token contract can expose this metadata, informing applications where they can find that functionality.", "mimetype": "text/plain", "start_char_idx": 491, "end_char_idx": 804, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "76c07528-fdc2-4545-9da9-be22c68d6d4e": {"__data__": {"id_": "76c07528-fdc2-4545-9da9-be22c68d6d4e", "embedding": null, "metadata": {"file_path": "ensips/8.md", "file_name": "8.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/8.md", "header_path": "/ENSIP-8: Interface Discovery/", "customer_id": 1, "source_url": "ensips/8.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["profile", "address", "bytes4", "external", "returns", "consisting", "given", "following", "interface", "resolvers", "EIP-165", "function", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f082fb711c93851bc355d199330461957d63441d", "node_type": "4", "metadata": {"file_path": "ensips/8.md", "file_name": "8.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/8.md"}, "hash": "eb475d409f3bb9a710110da1d6902ad9ed9f4e84222769dfda8e078317408720", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2c519dbb-2140-4d2a-87e4-0987d977b42a", "node_type": "1", "metadata": {"file_path": "ensips/8.md", "file_name": "8.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/8.md", "header_path": "/ENSIP-8: Interface Discovery/"}, "hash": "6ecf24cf80d3f2db0db06088be7242dc0c824df7fc6d74177d9fe226a6747520", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "07cdc0e8-3cd8-4fd2-be72-bfb67a0eecbf", "node_type": "1", "metadata": {"header_path": "/ENSIP-8: Interface Discovery/"}, "hash": "248de9f79035fe2af8224502134e34e2290a0815eb1ee15471dd76684f34eaba", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\nA new profile for ENS resolvers is defined, consisting of the following method:\n\n```solidity\nfunction interfaceImplementer(bytes32 node, bytes4 interfaceID) external view returns (address);\n```\n\nThe EIP-165 interface ID of this interface is `0xb8f2bbb4`.\n\nGiven an ENS name hash `node` and an EIP-165 `interfaceID`, this function returns the address of an appropriate implementer of that interface. If there is no interface matching that interface ID for that node, 0 is returned.\n\nThe address returned by `interfaceImplementer` MUST refer to a smart contract.\n\nThe smart contract at the returned address SHOULD implement EIP-165.\n\nResolvers implementing this interface MAY utilise a fallback strategy: If no matching interface was explicitly provided by the user, query the contract returned by `addr()`, returning its address if the requested interface is supported by that contract, and 0 otherwise. If they do this, they MUST ensure they return 0, rather than reverting, if the target contract reverts.\n\nThis field may be used with both forward resolution and reverse resolution.", "mimetype": "text/plain", "start_char_idx": 1369, "end_char_idx": 2470, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "07cdc0e8-3cd8-4fd2-be72-bfb67a0eecbf": {"__data__": {"id_": "07cdc0e8-3cd8-4fd2-be72-bfb67a0eecbf", "embedding": null, "metadata": {"file_path": "ensips/8.md", "file_name": "8.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/8.md", "header_path": "/ENSIP-8: Interface Discovery/", "customer_id": 1, "source_url": "ensips/8.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["approach", "directly", "problem", "would", "naive", "method", "target", "rationale", "interface", "doing", "maintain", "adding", "several", "involve", "contract"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f082fb711c93851bc355d199330461957d63441d", "node_type": "4", "metadata": {"file_path": "ensips/8.md", "file_name": "8.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/8.md"}, "hash": "eb475d409f3bb9a710110da1d6902ad9ed9f4e84222769dfda8e078317408720", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "76c07528-fdc2-4545-9da9-be22c68d6d4e", "node_type": "1", "metadata": {"file_path": "ensips/8.md", "file_name": "8.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/8.md", "header_path": "/ENSIP-8: Interface Discovery/"}, "hash": "53f8097c7bd018c2c8c0e9cb082b8d8dc6e3617229dcda9ab64ce90c7fc490c7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "51aa30f1-98c7-434c-ac8e-6fe0827a9982", "node_type": "1", "metadata": {"header_path": "/ENSIP-8: Interface Discovery/"}, "hash": "a2cea027a203a8425b8611d9b89ed2e5c83f4e2ddb1582ea939e1611f3e2d1c7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Rationale\n\nA naive approach to this problem would involve adding this method directly to the target contract. However, doing this has several shortcomings:\n\n1. Each contract must maintain its own list of interface implementations.\n2. Modifying this list requires access controls, which the contract may not have previously required.\n3. Support for this must be designed in when the contract is written, and cannot be retrofitted afterwards.\n4. Only one canonical list of interfaces can be supported.\n\nUsing ENS resolvers instead mitigates these shortcomings, making it possible for anyone to associate interfaces with a name, even for contracts not previously built with this in mind.", "mimetype": "text/plain", "start_char_idx": 2472, "end_char_idx": 3159, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "51aa30f1-98c7-434c-ac8e-6fe0827a9982": {"__data__": {"id_": "51aa30f1-98c7-434c-ac8e-6fe0827a9982", "embedding": null, "metadata": {"file_path": "ensips/8.md", "file_name": "8.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/8.md", "header_path": "/ENSIP-8: Interface Discovery/", "customer_id": 1, "source_url": "ensips/8.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["introduces", "publicresolver", "copyright", "backwards", "EIP-2304", "rights", "repository", "waived", "compatibility", "implementation", "related", "there", "implements"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f082fb711c93851bc355d199330461957d63441d", "node_type": "4", "metadata": {"file_path": "ensips/8.md", "file_name": "8.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/8.md"}, "hash": "eb475d409f3bb9a710110da1d6902ad9ed9f4e84222769dfda8e078317408720", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "07cdc0e8-3cd8-4fd2-be72-bfb67a0eecbf", "node_type": "1", "metadata": {"file_path": "ensips/8.md", "file_name": "8.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/8.md", "header_path": "/ENSIP-8: Interface Discovery/"}, "hash": "977c00cab52077d01e7783f0cb17c56a88a389c2aaf62bf2a744794c45011d8c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bf2731d3-69d3-4053-ad61-14393082bc7c", "node_type": "1", "metadata": {"header_path": "/ENSIP-8: Interface Discovery/"}, "hash": "35f906259fdb61756be13b75e7043107720f49c611c509cb36c85b4274e987cf", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Backwards Compatibility\n\nThere are no backwards compatibility issues. ## Implementation\n\nThe PublicResolver in the [ensdomains/resolvers](https://github.com/ensdomains/resolvers/) repository implements this interface. ## Copyright\n\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/). ---\ndescription: Introduces new overloads for the addr field for ENS resolvers, which permit resolution of addresses for other blockchains via ENS (formerly EIP-2304).\ncontributors:\n  - nick.eth\nensip:\n  created: 2019-09-09\n  status: final\nignoredRules: [\"missing:abstract\", \"heading:tests\"]\n---", "mimetype": "text/plain", "start_char_idx": 3161, "end_char_idx": 3233, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8016ae4c-25dc-420e-888f-0ade9c221184": {"__data__": {"id_": "8016ae4c-25dc-420e-888f-0ade9c221184", "embedding": null, "metadata": {"file_path": "ensips/9.md", "file_name": "9.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/9.md", "header_path": "/", "customer_id": 1, "source_url": "ensips/9.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["other", "multichain", "increasing", "introduces", "motivation", "addresses", "EIP-2304", "address", "resolution", "uptake", "which", "overloads", "blockchains", "field", "permit"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "25a20d5437e310362add9f625f65c5d689a8a191", "node_type": "4", "metadata": {"file_path": "ensips/9.md", "file_name": "9.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/9.md"}, "hash": "7a24ce43ed6b2e34d7dc9b7bfdf911ad98f1df1928f00cc4d8954a768948de3d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "165b4e17-760e-4481-975c-15618639ba71", "node_type": "1", "metadata": {"file_path": "ensips/9.md", "file_name": "9.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/9.md", "header_path": "/"}, "hash": "6520977441e1bfc555a826d7f47c942e243fb86e2c171828a897492c40ad7a8b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4c5fdbe4-9936-4be1-94d3-595a744c7fc7", "node_type": "1", "metadata": {"header_path": "/ENSIP-9: Multichain Address resolution/"}, "hash": "04a43c96a98e1266df782f93687309b2062197eb42673bbc42d3bf5a466b2c7e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# ENSIP-9: Multichain Address resolution\n\nIntroduces new overloads for the `addr` field for ENS resolvers, which permit resolution of addresses for other blockchains via ENS (formerly [EIP-2304](https://eips.ethereum.org/EIPS/eip-2304)). ## Motivation\n\nWith the increasing uptake of ENS by multi-coin wallets, wallet authors have requested the ability to resolve addresses for non-Ethereum chains inside ENS. This specification standardises a way to enter and retrieve these addresses in a cross-client fashion.", "mimetype": "text/plain", "start_char_idx": 297, "end_char_idx": 534, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "73e78321-82bb-426b-9118-29a95ab8d78c": {"__data__": {"id_": "73e78321-82bb-426b-9118-29a95ab8d78c", "embedding": null, "metadata": {"file_path": "ensips/9.md", "file_name": "9.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/9.md", "header_path": "/ENSIP-9: Multichain Address resolution/", "customer_id": 1, "source_url": "ensips/9.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["specified", "cryptocurrency", "address", "external", "called", "eip165", "interface", "resolvers", "return", "accessor", "function", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "25a20d5437e310362add9f625f65c5d689a8a191", "node_type": "4", "metadata": {"file_path": "ensips/9.md", "file_name": "9.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/9.md"}, "hash": "7a24ce43ed6b2e34d7dc9b7bfdf911ad98f1df1928f00cc4d8954a768948de3d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4c5fdbe4-9936-4be1-94d3-595a744c7fc7", "node_type": "1", "metadata": {"file_path": "ensips/9.md", "file_name": "9.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/9.md", "header_path": "/ENSIP-9: Multichain Address resolution/"}, "hash": "c5eb7e709a54e4ba06e4e9c93cddb4fbde3512007735eeddfdb42ecb6b8b174a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "84e5ec93-fdc6-4d2e-9bef-1b2a03212954", "node_type": "1", "metadata": {"header_path": "/ENSIP-9: Multichain Address resolution/Specification/"}, "hash": "a2173ee27f5ccbcb860f4166ebc2e72c998dad3c621e9df17ed531ae07d189c5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Specification\n\nA new accessor function for resolvers is specified:\n\n```solidity\nfunction addr(bytes32 node, uint coinType) external view returns(bytes memory);\n```\n\nThe EIP165 interface ID for this function is 0xf1cb7e06.\n\nWhen called on a resolver, this function must return the cryptocurrency address for the specified namehash and coin type. A zero-length string must be returned if the specified coin ID does not exist on the specified node.\n\n`coinType` is the cryptocurrency coin type index from [SLIP44](https://github.com/satoshilabs/slips/blob/master/slip-0044.md).\n\nThe return value is the cryptocurrency address in its native binary format. Detailed descriptions of the binary encodings for several popular chains are provided in the Address Encoding section below.\n\nA new event for resolvers is defined:\n\n```solidity\nevent AddressChanged(bytes32 indexed node, uint coinType, bytes newAddress);\n```\n\nResolvers MUST emit this event on each change to the address for a name and coin type.", "mimetype": "text/plain", "start_char_idx": 811, "end_char_idx": 1810, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "84e5ec93-fdc6-4d2e-9bef-1b2a03212954": {"__data__": {"id_": "84e5ec93-fdc6-4d2e-9bef-1b2a03212954", "embedding": null, "metadata": {"file_path": "ensips/9.md", "file_name": "9.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/9.md", "header_path": "/ENSIP-9: Multichain Address resolution/Specification/", "customer_id": 1, "source_url": "ensips/9.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["stored", "implement", "addresses", "recommended", "changing", "function", "following", "provides", "interface", "resolvers", "functions", "accessor", "should"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "25a20d5437e310362add9f625f65c5d689a8a191", "node_type": "4", "metadata": {"file_path": "ensips/9.md", "file_name": "9.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/9.md"}, "hash": "7a24ce43ed6b2e34d7dc9b7bfdf911ad98f1df1928f00cc4d8954a768948de3d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "73e78321-82bb-426b-9118-29a95ab8d78c", "node_type": "1", "metadata": {"file_path": "ensips/9.md", "file_name": "9.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/9.md", "header_path": "/ENSIP-9: Multichain Address resolution/"}, "hash": "ca56967fb75ee1df53453679dc8c84429427e8034e840277d598061664ec770a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "39afa38e-4f04-4fd0-bd2a-6490343ac3e5", "node_type": "1", "metadata": {"header_path": "/ENSIP-9: Multichain Address resolution/Specification/"}, "hash": "865eaec3f02750cd7c92e55ad8ac8b22020b6a51c7dd7c6bf74e2c202fdf9225", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Recommended accessor functions\n\nThe following function provides the recommended interface for changing the addresses stored for a node. Resolvers SHOULD implement this interface for setting addresses unless their needs dictate a different interface.\n\n```solidity\nfunction setAddr(bytes32 node, uint coinType, bytes calldata addr);\n```\n\n`setAddr` adds or replaces the address for the given node and coin type. The parameters for this function are as per those described in `addr()` above.\n\nThis function emits an `AddressChanged` event with the new address; see also the backwards compatibility section below for resolvers that also support `addr(bytes32)`.", "mimetype": "text/plain", "start_char_idx": 1812, "end_char_idx": 2472, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "39afa38e-4f04-4fd0-bd2a-6490343ac3e5": {"__data__": {"id_": "39afa38e-4f04-4fd0-bd2a-6490343ac3e5", "embedding": null, "metadata": {"file_path": "ensips/9.md", "file_name": "9.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/9.md", "header_path": "/ENSIP-9: Multichain Address resolution/Specification/", "customer_id": 1, "source_url": "ensips/9.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["EIP-55", "encodings", "common", "followed", "table", "representation", "address", "binary", "native", "should", "blockchains", "encoding", "without", "commonly", "checksum"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "25a20d5437e310362add9f625f65c5d689a8a191", "node_type": "4", "metadata": {"file_path": "ensips/9.md", "file_name": "9.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/9.md"}, "hash": "7a24ce43ed6b2e34d7dc9b7bfdf911ad98f1df1928f00cc4d8954a768948de3d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "84e5ec93-fdc6-4d2e-9bef-1b2a03212954", "node_type": "1", "metadata": {"file_path": "ensips/9.md", "file_name": "9.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/9.md", "header_path": "/ENSIP-9: Multichain Address resolution/Specification/"}, "hash": "f693845ed3a54e9de24ca45d18cc3e6552c152d4bf7f110bb75c0d36efeea889", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dfdd63e6-55c3-4f88-a3d2-f3908ee3d675", "node_type": "1", "metadata": {"header_path": "/ENSIP-9: Multichain Address resolution/Specification/"}, "hash": "ce37ca8cbf6ab8bff368e2eff78bd678ac343d03aca6dcb0826ed459bcca040d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Address Encoding\n\nIn general, the native binary representation of the address should be used, without any checksum commonly used in the text representation.\n\nA table of encodings for common blockchains is provided, followed by a more detailed description of each format. In the table, 'encodings' lists the address encodings supported by that chain, along with any relevant parameters. Details of those address encodings are described in the following sections.\n\n| Cryptocurrency   | Coin Type | Encoding                                           |\n| ---------------- | --------- | -------------------------------------------------- |\n| Bitcoin          | 0         | P2PKH(0x00), P2SH(0x05), SegWit('bc')              |\n| Litecoin         | 2         | P2PKH(0x30), P2SH(0x32), P2SH(0x05), SegWit('ltc') |\n| Dogecoin         | 3         | P2PKH(0x1e), P2SH(0x16)                            |\n| Monacoin         | 22        | P2PKH(0x32), P2SH(0x05)                            |\n| Ethereum         | 60        | ChecksummedHex                                     |\n| Ethereum Classic | 61        | ChecksummedHex                                     |\n| Rootstock        | 137       | ChecksummedHex(30)                                 |\n| Ripple           | 144       | Ripple                                             |\n| Bitcoin Cash     | 145       | P2PKH(0x00), P2SH(0x05), CashAddr                  |\n| Binance          | 714       | Bech32('bnb')                                      |\n\n**P2PKH(version)**\n\nPay to Public Key Hash addresses are [base58check](https://en.bitcoin.it/wiki/Base58Check\\_encoding) encoded. After decoding, the first byte is a version byte. For example, the Bitcoin address `1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa` base58check decodes to the 21 bytes `0062e907b15cbf27d5425399ebf6f0fb50ebb88f18`.\n\nP2PKH addresses have a version byte, followed by a 20 byte pubkey hash. Their canonical encoding is their scriptPubkey encoding (specified [here](https://en.bitcoin.it/wiki/Transaction#Types\\_of\\_Transaction)) is `OP_DUP OP_HASH160 <pubKeyHash> OP_EQUALVERIFY OP_CHECKSIG`.\n\nThe above example address is thus encoded as the 25 bytes `76a91462e907b15cbf27d5425399ebf6f0fb50ebb88f1888ac`.\n\n**P2SH(version)**\n\nP2SH addresses are base58check encoded in the same manner as P2PKH addresses. P2SH addresses have a version, followed by a 20 byte script hash. Their scriptPubkey encoding (specified [here](https://en.bitcoin.it/wiki/Transaction#Pay-to-Script-Hash)) is `OP_HASH160 <scriptHash> OP_EQUAL`. A Bitcoin address of `3Ai1JZ8pdJb2ksieUV8FsxSNVJCpoPi8W6` decodes to the 21 bytes `0562e907b15cbf27d5425399ebf6f0fb50ebb88f18` and is encoded as the 23 bytes `a91462e907b15cbf27d5425399ebf6f0fb50ebb88f1887`.\n\n**SegWit(hrp)**\n\nSegWit addresses are encoded with [bech32](https://github.com/bitcoin/bips/blob/master/bip-0173.mediawiki). Bech32 addresses consist of a human-readable part - 'bc' for Bitcoin mainnet - and a machine readable part. For SegWit addresses, this decodes to a 'witness version', between 0 and 15, and a 'witness program', as defined in [BIP141](https://github.com/bitcoin/bips/blob/master/bip-0173.mediawiki).\n\nThe scriptPubkey encoding for a bech32 address, as defined in BIP141, is `OP_n`, where `n` is the witness version, followed by a push of the witness program. Note this warning from BIP173:\n\n> Implementations should take special care when converting the address to a scriptPubkey, where witness version n is stored as OP\\_n. OP\\_0 is encoded as 0x00, but OP\\_1 through OP\\_16 are encoded as 0x51 though 0x60 (81 to 96 in decimal). If a bech32 address is converted to an incorrect scriptPubKey the result will likely be either unspendable or insecure.\n\nFor example, the Bitcoin SegWit address `BC1QW508D6QEJXTDG4Y5R3ZARVARY0C5XW7KV8F3T4` decodes to a version of `0` and a witness script of `751e76e8199196d454941c45d1b3a323f1433bd6`, and then encodes to a scriptPubkey of `0014751e76e8199196d454941c45d1b3a323f1433bd6`.\n\n**ChecksummedHex(chainId?)**\n\nTo translate a text format checksummed hex address into binary format, simply remove the '0x' prefix and hex decode it. `0x314159265dD8dbb310642f98f50C066173C1259b` is hex-decoded and stored as the 20 bytes `314159265dd8dbb310642f98f50c066173c1259b`.\n\nA checksum format is specified by EIP-55, and extended by [RSKIP60](https://github.com/rsksmart/RSKIPs/blob/master/IPs/RSKIP60.md), which specifies a means of including the chain ID in the checksum. The checksum on a text format address must be checked. Addresses with invalid checksums that are not all uppercase or all lowercase MUST be rejected with an error. Implementations may choose whether to accept non-checksummed addresses, but the authors recommend at least providing a warning to users in this situation.\n\nWhen encoding an address from binary to text, an EIP55/RSKIP60 checksum MUST be used - so the correct encoding of the above address for Ethereum is `0x314159265dD8dbb310642f98f50C066173C1259b`.\n\n**Ripple**\n\nRipple addresses are encoded using a version of base58check with an alternative alphabet, described [here](https://xrpl.org/base58-encodings.html). Two types of ripple addresses are supported, 'r-addresses', and 'X-addresss'. r-addresses consist of a version byte followed by a 20 byte hash, while X-addresses consist of a version byte, a 20 byte hash, and a tag, specified [here](https://github.com/xrp-community/standards-drafts/issues/6).\n\nBoth address types should be stored in ENS by performing ripple's version of base58check decoding and storing them directly (including version byte). For example, the ripple address `rf1BiGeXwwQoi8Z2ueFYTEXSwuJYfV2Jpn` decodes to and is stored as `004b4e9c06f24296074f7bc48f92a97916c6dc5ea9`, while the address `X7qvLs7gSnNoKvZzNWUT2e8st17QPY64PPe7zriLNuJszeg` decodes to and is stored as `05444b4e9c06f24296074f7bc48f92a97916c6dc5ea9000000000000000000`.\n\n**CashAddr**\n\nBitcoin Cash defines a new address format called 'CashAddr', specified [here](https://github.com/bitcoincashorg/bitcoincash.org/blob/master/spec/cashaddr.md). This uses a variant of bech32 encoding to encode and decode (non-segwit) Bitcoin Cash addresses, using a prefix of 'bitcoincash:'. A CashAddr should be decoded using this bech32 variant, then converted and stored based on its type (P2PKH or P2SH) as described in the relevant sections above.\n\n**Bech32**\n\n[Bech32](https://github.com/bitcoin/bips/blob/master/bip-0173.mediawiki) addresses consist of a human-readable part - for example, 'bnb' for Binance - and a machine readable part. The encoded data is simply the address, which can be converted to binary and stored directly.\n\nFor example, the BNB address `bnb1grpf0955h0ykzq3ar5nmum7y6gdfl6lxfn46h2` decodes to the binary representation `40c2979694bbc961023d1d27be6fc4d21a9febe6`, which is stored directly in ENS.", "mimetype": "text/plain", "start_char_idx": 2474, "end_char_idx": 9302, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "dfdd63e6-55c3-4f88-a3d2-f3908ee3d675": {"__data__": {"id_": "dfdd63e6-55c3-4f88-a3d2-f3908ee3d675", "embedding": null, "metadata": {"file_path": "ensips/9.md", "file_name": "9.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/9.md", "header_path": "/ENSIP-9: Multichain Address resolution/Specification/", "customer_id": 1, "source_url": "ensips/9.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["contract", "resolverbase", "private", "pragma", "solidity", "bytes4", "provided", "ensip", "example", "supports", "implementation", "constant", "resolver", "addrresolver"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "25a20d5437e310362add9f625f65c5d689a8a191", "node_type": "4", "metadata": {"file_path": "ensips/9.md", "file_name": "9.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/9.md"}, "hash": "7a24ce43ed6b2e34d7dc9b7bfdf911ad98f1df1928f00cc4d8954a768948de3d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "39afa38e-4f04-4fd0-bd2a-6490343ac3e5", "node_type": "1", "metadata": {"file_path": "ensips/9.md", "file_name": "9.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/9.md", "header_path": "/ENSIP-9: Multichain Address resolution/Specification/"}, "hash": "a6bb7d9eecbe3baec716ed614e41649504109c76ea9d12097be4b0e07729964e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f8d21455-0502-497c-b44c-df4ca2e43c15", "node_type": "1", "metadata": {"header_path": "/ENSIP-9: Multichain Address resolution/Specification/"}, "hash": "a9411ebb36c4ad685d93bb04e4c1f0238a101dd5a233157f7ee5ad7c6c7d0e4b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Example\n\nAn example implementation of a resolver that supports this ENSIP is provided here:\n\n```solidity\npragma solidity ^0.5.8;\n\ncontract AddrResolver is ResolverBase {\n    bytes4 constant private ADDR_INTERFACE_ID = 0x3b3b57de;\n    bytes4 constant private ADDRESS_INTERFACE_ID = 0xf1cb7e06;\n    uint constant private COIN_TYPE_ETH = 60;\n\n    event AddrChanged(bytes32 indexed node, address a);\n    event AddressChanged(bytes32 indexed node, uint coinType, bytes newAddress);\n\n    mapping(bytes32=>mapping(uint=>bytes)) _addresses;\n\n    /**\n     * Sets the address associated with an ENS node.\n     * May only be called by the owner of that node in the ENS registry.\n     * @param node The node to update.\n     * @param a The address to set.\n     */\n    function setAddr(bytes32 node, address a) external authorised(node) {\n        setAddr(node, COIN_TYPE_ETH, addressToBytes(a));\n    }\n\n    /**\n     * Returns the address associated with an ENS node.\n     * @param node The ENS node to query.\n     * @return The associated address.\n     */\n    function addr(bytes32 node) public view returns (address) {\n        bytes memory a = addr(node, COIN_TYPE_ETH);\n        if(a.length == 0) {\n            return address(0);\n        }\n        return bytesToAddress(a);\n    }\n\n    function setAddr(bytes32 node, uint coinType, bytes memory a) public authorised(node) {\n        emit AddressChanged(node, coinType, a);\n        if(coinType == COIN_TYPE_ETH) {\n            emit AddrChanged(node, bytesToAddress(a));\n        }\n        _addresses[node][coinType] = a;\n    }\n\n    function addr(bytes32 node, uint coinType) public view returns(bytes memory) {\n        return _addresses[node][coinType];\n    }\n\n    function supportsInterface(bytes4 interfaceID) public pure returns(bool) {\n        return interfaceID == ADDR_INTERFACE_ID || interfaceID == ADDRESS_INTERFACE_ID || super.supportsInterface(interfaceID);\n    }\n}\n```", "mimetype": "text/plain", "start_char_idx": 9304, "end_char_idx": 11219, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f8d21455-0502-497c-b44c-df4ca2e43c15": {"__data__": {"id_": "f8d21455-0502-497c-b44c-df4ca2e43c15", "embedding": null, "metadata": {"file_path": "ensips/9.md", "file_name": "9.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/9.md", "header_path": "/ENSIP-9: Multichain Address resolution/Specification/", "customer_id": 1, "source_url": "ensips/9.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["special", "backwards", "provided", "compatibility", "supports", "interface", "following", "implementation", "treat", "defined", "resolver", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "25a20d5437e310362add9f625f65c5d689a8a191", "node_type": "4", "metadata": {"file_path": "ensips/9.md", "file_name": "9.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/9.md"}, "hash": "7a24ce43ed6b2e34d7dc9b7bfdf911ad98f1df1928f00cc4d8954a768948de3d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dfdd63e6-55c3-4f88-a3d2-f3908ee3d675", "node_type": "1", "metadata": {"file_path": "ensips/9.md", "file_name": "9.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/9.md", "header_path": "/ENSIP-9: Multichain Address resolution/Specification/"}, "hash": "ab05d8852a89b8d21072359e7783b27e50d49f070fe6b108534da8bbd152ab26", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "16945666-0080-41d6-95e7-46f959a2341b", "node_type": "1", "metadata": {"header_path": "/ENSIP-9: Multichain Address resolution/"}, "hash": "b695cc5b173ab2bc748d65b14b798fab433ff8194b9710fc9e93371a407de4cd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Implementation\n\nAn implementation of this interface is provided in the [ensdomains/resolvers](https://github.com/ensdomains/resolvers/) repository. ## Backwards Compatibility\n\nIf the resolver supports the `addr(bytes32)` interface defined in ENSIP-1, the resolver MUST treat this as a special case of this new specification in the following ways:\n\n1. The value returned by `addr(node)` from ENSIP-1 should always match the value returned by `addr(node, 60)` (60 is the coin type ID for Ethereum).\n2. Anything that causes the `AddrChanged` event from ENSIP-1 to be emitted must also emit an `AddressChanged` event from this ENSIP, with the `coinType` specified as 60, and vice-versa.", "mimetype": "text/plain", "start_char_idx": 11221, "end_char_idx": 11372, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6752a6e4-5fef-472e-8e5f-07266d74fd3a": {"__data__": {"id_": "6752a6e4-5fef-472e-8e5f-07266d74fd3a", "embedding": null, "metadata": {"file_path": "ensips/9.md", "file_name": "9.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/9.md", "header_path": "/ENSIP-9: Multichain Address resolution/", "customer_id": 1, "source_url": "ensips/9.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["valid", "encodings", "table", "cryptocurrency", "dogecoin", "address", "vectors", "below", "described", "litecoin", "specifies", "tests", "onchain", "bitcoin"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "25a20d5437e310362add9f625f65c5d689a8a191", "node_type": "4", "metadata": {"file_path": "ensips/9.md", "file_name": "9.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/9.md"}, "hash": "7a24ce43ed6b2e34d7dc9b7bfdf911ad98f1df1928f00cc4d8954a768948de3d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "16945666-0080-41d6-95e7-46f959a2341b", "node_type": "1", "metadata": {"file_path": "ensips/9.md", "file_name": "9.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/9.md", "header_path": "/ENSIP-9: Multichain Address resolution/"}, "hash": "386bf3c5051c67b3af14cfcc4b364d98ac10bbabc1b11f1e86484cdf8443078f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b5dec119-2479-44f5-8688-91a688a8c222", "node_type": "1", "metadata": {"header_path": "/ENSIP-9: Multichain Address resolution/"}, "hash": "a77a5a25d30ee647b96aa2803f3be8e455ce8f6af77880f9297369a3476f4628", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Tests\n\nThe table below specifies test vectors for valid address encodings for each cryptocurrency described above.\n\n| Cryptocurrency | Coin Type | Text                                                     | Onchain (hex)                                                    |\n| -------------- | --------- | -------------------------------------------------------- | ---------------------------------------------------------------- |\n| Bitcoin        | 0         | `1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa`                     | `76a91462e907b15cbf27d5425399ebf6f0fb50ebb88f1888ac`             |\n|                |           | `3Ai1JZ8pdJb2ksieUV8FsxSNVJCpoPi8W6`                     | `a91462e907b15cbf27d5425399ebf6f0fb50ebb88f1887`                 |\n|                |           | `BC1QW508D6QEJXTDG4Y5R3ZARVARY0C5XW7KV8F3T4`             | `0014751e76e8199196d454941c45d1b3a323f1433bd6`                   |\n| Litecoin       | 2         | `LaMT348PWRnrqeeWArpwQPbuanpXDZGEUz`                     | `76a914a5f4d12ce3685781b227c1f39548ddef429e978388ac`             |\n|                |           | `MQMcJhpWHYVeQArcZR3sBgyPZxxRtnH441`                     | `a914b48297bff5dadecc5f36145cec6a5f20d57c8f9b87`                 |\n|                |           | `ltc1qdp7p2rpx4a2f80h7a4crvppczgg4egmv5c78w8`            | `0014687c150c26af5493befeed7036043812115ca36c`                   |\n| Dogecoin       | 3         | `DBXu2kgc3xtvCUWFcxFE3r9hEYgmuaaCyD`                     | `76a9144620b70031f0e9437e374a2100934fba4911046088ac`             |\n|                |           | `AF8ekvSf6eiSBRspJjnfzK6d1EM6pnPq3G`                     | `a914f8f5d99a9fc21aa676e74d15e7b8134557615bda87`                 |\n| Monacoin       | 22        | `MHxgS2XMXjeJ4if2PRRbWYcdwZPWfdwaDT`                     | `76a9146e5bb7226a337fe8307b4192ae5c3fab9fa9edf588ac`             |\n| Ethereum       | 60        | `0x314159265dD8dbb310642f98f50C066173C1259b`             | `314159265dd8dbb310642f98f50c066173c1259b`                       |\n| Rootstock      | 137       | `0x5aaEB6053f3e94c9b9a09f33669435E7ef1bEAeD`             | `5aaeb6053f3e94c9b9a09f33669435e7ef1beaed`                       |\n| Ripple         | 144       | `rf1BiGeXwwQoi8Z2ueFYTEXSwuJYfV2Jpn`                     | `004b4e9c06f24296074f7bc48f92a97916c6dc5ea9`                     |\n|                |           | `X7qvLs7gSnNoKvZzNWUT2e8st17QPY64PPe7zriLNuJszeg`        | `05444b4e9c06f24296074f7bc48f92a97916c6dc5ea9000000000000000000` |\n| Bitcoin Cash   | 145       | `1BpEi6DfDAUFd7GtittLSdBeYJvcoaVggu`                     | `76a91476a04053bda0a88bda5177b86a15c3b29f55987388ac`             |\n|                |           | `bitcoincash:qpm2qsznhks23z7629mms6s4cwef74vcwvy22gdx6a` | `76a91476a04053bda0a88bda5177b86a15c3b29f55987388ac`             |\n|                |           | `3CWFddi6m4ndiGyKqzYvsFYagqDLPVMTzC`                     | `a91476a04053bda0a88bda5177b86a15c3b29f55987387`                 |\n|                |           | `bitcoincash:ppm2qsznhks23z7629mms6s4cwef74vcwvn0h829pq` | `a91476a04053bda0a88bda5177b86a15c3b29f55987387`                 |\n| Binance        | 714       | `bnb1grpf0955h0ykzq3ar5nmum7y6gdfl6lxfn46h2`             | `40c2979694bbc961023d1d27be6fc4d21a9febe6`                       |", "mimetype": "text/plain", "start_char_idx": 11910, "end_char_idx": 15168, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b5dec119-2479-44f5-8688-91a688a8c222": {"__data__": {"id_": "b5dec119-2479-44f5-8688-91a688a8c222", "embedding": null, "metadata": {"file_path": "ensips/9.md", "file_name": "9.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/9.md", "header_path": "/ENSIP-9: Multichain Address resolution/", "customer_id": 1, "source_url": "ensips/9.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["rights", "copyright", "related", "waived"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "25a20d5437e310362add9f625f65c5d689a8a191", "node_type": "4", "metadata": {"file_path": "ensips/9.md", "file_name": "9.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/9.md"}, "hash": "7a24ce43ed6b2e34d7dc9b7bfdf911ad98f1df1928f00cc4d8954a768948de3d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6752a6e4-5fef-472e-8e5f-07266d74fd3a", "node_type": "1", "metadata": {"file_path": "ensips/9.md", "file_name": "9.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/9.md", "header_path": "/ENSIP-9: Multichain Address resolution/"}, "hash": "32376e545b2fd355cd499e06738c821cf268eefca5080810b5cdee1ccfe12595", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Copyright\n\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/).", "mimetype": "text/plain", "start_char_idx": 15170, "end_char_idx": 15282, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "48283220-9879-4b22-b302-967f8070ce5b": {"__data__": {"id_": "48283220-9879-4b22-b302-967f8070ce5b", "embedding": null, "metadata": {"file_path": "docs/core/design/how-ens-works.mdx", "file_name": "how-ens-works.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/design/how-ens-works.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/core/design/how-ens-works.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["explained", "protocol", "works", "heart", "lookups", "registry", "smart", "which", "where", "contract", "serenae"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7f472b17e7351aecf059b72f4c3a7a336f79e844", "node_type": "4", "metadata": {"file_path": "docs/core/design/how-ens-works.mdx", "file_name": "how-ens-works.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/design/how-ens-works.mdx"}, "hash": "09e05720bc6170f5aa82f98e624ba52b06e043b21377a44371f15141f77c2adc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5dbe7268-ed96-4f9c-9977-981b01b024d8", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "e045588f072ee27431b4b03456b63157fa66e634597cccfa165130a09d7da152", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\nlast_update:\n  author: serenae\ntags:\n  - registry\n  - how does ens work\n  - how ens works\n  - ens explained\nkeywords: [registry, how does ens work, how ens works, ens explained]\ndescription: The Registry, where all ENS lookups start.\n--- # How does ENS work? ## The ENS Registry\nAt the heart of the ENS protocol lies the Registry, which is where all ENS lookups start.\n\nThe Registry is a smart contract on Ethereum which keeps track of the `Manager` and the Resolver for all names.\n\n<p align=\"center\">\n  <div style={{'width': '600px'}}>\n\n![Docusaurus themed image](/img/how-ens-works-light-1.jpg#gh-light-mode-only)![Docusaurus themed image](/img/how-ens-works-dark-1.jpg#gh-dark-mode-only)\n\n  </div>\n</p>\n\nAs you can see, the Registry can have entries not just for .eth names, but all DNS names (like domain.com or domain.xyz) and subnames too (like sub.name.eth or sub.domain.xyz).\n\nThe ``Manager``, as the name implies, is the account that controls that name. By interacting with the Registry contract, the `Manager` can update the Resolver, create or update subnames, or transfer the `Manager` to a new account.\n\nThe first step in making an ENS lookup is to retrieve the resolver from the Registry.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 241, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d86d6cdf-6579-42f8-86ed-594be7e85c5f": {"__data__": {"id_": "d86d6cdf-6579-42f8-86ed-594be7e85c5f", "embedding": null, "metadata": {"file_path": "docs/core/design/how-ens-works.mdx", "file_name": "how-ens-works.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/design/how-ens-works.mdx", "header_path": "/How does ENS work?/", "customer_id": 1, "source_url": "docs/core/design/how-ens-works.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["themed", "other", "contract", "addresses", "articles", "these", "include", "smart", "resolver", "resolvers", "records", "information", "various"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7f472b17e7351aecf059b72f4c3a7a336f79e844", "node_type": "4", "metadata": {"file_path": "docs/core/design/how-ens-works.mdx", "file_name": "how-ens-works.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/design/how-ens-works.mdx"}, "hash": "09e05720bc6170f5aa82f98e624ba52b06e043b21377a44371f15141f77c2adc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f3d5ef5c-03aa-4ade-b087-660eb2e39457", "node_type": "1", "metadata": {"file_path": "docs/core/design/how-ens-works.mdx", "file_name": "how-ens-works.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/design/how-ens-works.mdx", "header_path": "/How does ENS work?/"}, "hash": "bcf71144bafc69d75566af68ecf51cfa9eea4b1726e0c2dfdcca16f000138f44", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a6460a7e-634c-4286-9c4f-4ab8c7ec191e", "node_type": "1", "metadata": {"header_path": "/How does ENS work?/"}, "hash": "7cdff9e38c5d6e89ea10aa9a18212649988abe9b596af07bcd46031a2c003e7b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Resolvers\nA Resolver is a smart contract that \u201cresolves\u201d or \u201cpoints\u201d an ENS name to records. These records can include an ETH address, other coin addresses like BTC/LTC/etc., text records, and more. \n\n:::info Articles\nFor more information on the various records that can be set, see:\n - <Link to=\"/core/records/\"><b>Core Concepts:</b> Records</Link>\n:::\n\n<br/>\n\n![Docusaurus themed image](/img/how-ens-works-light-2.jpg#gh-light-mode-only)![Docusaurus themed image](/img/how-ens-works-dark-2.jpg#gh-dark-mode-only)\n\nSo together, the Registry and the Resolver allow records to be looked up for an ENS name. It is a two-step process. For example, to look up the ETH address for \u201cname.eth\u201d:\n\n<p align='center'>\n\n```mermaid\nsequenceDiagram\n    rect rgba(0,255,0,0.1)\n    activate User Code\n    User Code->>+ENS Registry: resolver('foo.eth')\n    ENS Registry->>User Code: 0x12342...\n    deactivate ENS Registry\n    note over User Code,ENS Registry: 1. Retrieve the Resolver from<br>the Registry for node \"name.eth\"\n    end\n\n    rect rgba(0,255,255,0.1)\n    User Code->>+Resolver @ 0x1234...: addr('foo.eth)\n    Resolver @ 0x1234...->>User Code: 0x2345...\n    deactivate User Code\n    deactivate Resolver @ 0x1234...\n    note over User Code,Resolver @ 0x1234...: 2. Call the Resolver contract to retrieve<br>the ETH address record for node \u201cname.eth\u201d\n    end\n```\n\n</p>\n\nIf no Resolver is set in the Registry for the name, then it does not resolve or point to any records.", "mimetype": "text/plain", "start_char_idx": 1209, "end_char_idx": 2677, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a6460a7e-634c-4286-9c4f-4ab8c7ec191e": {"__data__": {"id_": "a6460a7e-634c-4286-9c4f-4ab8c7ec191e", "embedding": null, "metadata": {"file_path": "docs/core/design/how-ens-works.mdx", "file_name": "how-ens-works.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/design/how-ens-works.mdx", "header_path": "/How does ENS work?/", "customer_id": 1, "source_url": "docs/core/design/how-ens-works.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["issues", "characters", "around", "registrar", "control", "subnames", "given", "smart", "charge", "subname", "custom", "created", "contract", "rules"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7f472b17e7351aecf059b72f4c3a7a336f79e844", "node_type": "4", "metadata": {"file_path": "docs/core/design/how-ens-works.mdx", "file_name": "how-ens-works.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/design/how-ens-works.mdx"}, "hash": "09e05720bc6170f5aa82f98e624ba52b06e043b21377a44371f15141f77c2adc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d86d6cdf-6579-42f8-86ed-594be7e85c5f", "node_type": "1", "metadata": {"file_path": "docs/core/design/how-ens-works.mdx", "file_name": "how-ens-works.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/design/how-ens-works.mdx", "header_path": "/How does ENS work?/"}, "hash": "16dd3a31170219e323a27f476d51fa291e1d9b1ae2eb2e803c8f7db57fa27e0a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## The .eth Registrar\nA `Registrar` is a smart contract that is given control of a name and issues subnames for it. A registrar can be created with custom rules around registration, like what fees to charge or how many characters a subname is limited to.\n\nThe `.eth Registrar` owns the \u201ceth\u201d node and issues subnames such as \u201cname.eth\u201d. This is also commonly referred to as the \u201cNFT contract\u201d for ENS names, because when a .eth name is registered, the contract will issue an NFT to the `Owner`.\n\n![Docusaurus themed image](/img/how-ens-works-light-4.jpg#gh-light-mode-only)![Docusaurus themed image](/img/how-ens-works-dark-4.jpg#gh-dark-mode-only)\n\nThe ``Owner`` is the owner of the .eth name, and the owner of the issued NFT.\n\nThe `Expiry` or `Expiration Date` is the date and time at which the .eth name will expire.\n\nWhen a new .eth name is registered, the Registrar will also set the `Manager` in the Registry to the desired address. Usually this is the same address as the `Owner` (the owner of the NFT). However, the `Manager` may be set to a different address, or perhaps the NFT is later transferred to a different address. If the `Owner` of a .eth name is different from the `Manager`, then the .eth Registrar allows the `Owner` to reclaim (in other words, overwrite) the `Manager` in the Registry.\n\nThe .eth Registrar currently allows names of at least 3 characters to be registered, and has a custom fee structure based on the length of the name. It also allows names to be renewed (in other words, extending the expiration date).\n\n:::info Articles\nFor more information on registering .eth names, fees, and renewals, see:\n - <Link to=\"/core/registration/\"><b>Core Concepts: </b>Registration</Link>\n:::", "mimetype": "text/plain", "start_char_idx": 2679, "end_char_idx": 4392, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "13b614f5-4798-4a0b-8ccf-19a5c59e6e49": {"__data__": {"id_": "13b614f5-4798-4a0b-8ccf-19a5c59e6e49", "embedding": null, "metadata": {"file_path": "docs/core/design/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/design/index.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/core/design/index.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["start", "heart", "description", "these", "doccardlist", "lookups", "throughout", "design", "terminology", "import", "terms", "contract", "serenae"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f673d123bf102db8a480f02babcde22ea573abf2", "node_type": "4", "metadata": {"file_path": "docs/core/design/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/design/index.mdx"}, "hash": "5a0f64fb2f2643eb3a67ecab2b4f7b3646f0ce26bae83e5191515c5f0511caa3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Design\n\n```mdx-code-block\nimport DocCardList from '@theme/DocCardList';\n\n<DocCardList />\n``` ---\nlast_update:\n  author: serenae\ntags:\n  - terminology\n  - terms\nkeywords: [terminology, terms]\ndescription: Terms used throughout these documents.\n--- # Terminology\n\n| Term | Description |\n|-|-|\n| [**Registry**](/core/design/how-ens-works#the-ens-registry) | The core contract at the heart of ENS that all lookups start from. |\n| **Registrar** | A contract that owns a name and issues subnames for it. |\n| **.eth Registrar:** | The owner of the `eth` name. This contract issues .eth second-level names (like `name.eth`) in the form of an ERC-721 NFT. |\n| **Owner** | The owner of a .eth second-level name. If the Owner is transferred to another account, then you lose ownership of the name. |\n| **Manager** | The account that can edit records for an ENS name. |\n| [**Resolver**](/core/records/resolver) | A contract that determines how your ENS name \"resolves\" or \"points to\" records such as an ETH address. Usually this is done by storing the records on-chain. |\n| [**Expiration Date**](/core/registration/name-lifecycle#expired) | The date and time at which a .eth ENS name expires. If you want to keep the name, then renew it before it expires. |\n| [**Grace Period**](/core/registration/name-lifecycle#grace-period) | This is a short window of time after an ENS name expires, in which the owner can still renew and retain the name. Currently this window is 90 days. |\n| [**Temporary Premium Auction**](/core/registration/name-lifecycle#temporary-premium-auction) | After a name's grace period ends, it gets automatically released into a public [Dutch auction](https://en.wikipedia.org/wiki/Dutch_auction) where a temporary premium is applied. |\n| [**Primary Name**](/core/records/primary-name) | The ENS name that you want a particular ETH account to be associated with. When set, it will be displayed instead of your 0x address on integrating websites/apps. |\n| **Name** | This is a generic term for any individual ENS name. This can include a .eth second-level name like `name.eth`, DNS names like `name.xyz`, or even subnames like `sub.name.eth`. |\n| **Subname** | A child name like `sub.name.eth`, whose parent is `name.eth`. Also referred to as a \"subdomain\". Every name (except for the root node) has a parent. For example, `name.eth` is a subname of `eth`. |\n| **TLD** | Top-level domain. This refers to names like `eth`, `com`, `xyz` which lie at the \"top\" of the naming hierarchy. |\n| **2LD** | Second-level domain. This refers to a subname/subdomain of a top-level domain. For example, `name.eth` and `name.com` are both second-level names. |\n| [**Record**](/core/records/) | A piece of information that an ENS name \"resolves\" to (points to). The most common record is the ETH Address record, which determines what ETH 0x address an ENS name points to. |\n| [**Text Record**](/core/records/custom-records) | This is a record that maps an ENS name to a particular text value. For example, you can use the `description` text record to set a description for your ENS name that can be displayed to the world (like a profile bio). |\n| [**Avatar**](/core/records/avatar) | This is a text record that sets an image or \"avatar\" for your ENS name. |\n| [**Content hash**](/core/records/content-hash) | This record links your ENS name to a decentralized website. Supporting browsers can then resolve and load that website directly from your ENS name. |", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 94, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a418b110-eb44-4491-af4d-5431bfcbd175": {"__data__": {"id_": "a418b110-eb44-4491-af4d-5431bfcbd175", "embedding": null, "metadata": {"file_path": "docs/core/design/where-are-names-stored.mdx", "file_name": "where-are-names-stored.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/design/where-are-names-stored.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/core/design/where-are-names-stored.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["stored", "where", "names", "serenae"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ad7fd21594c7fcbaa7fd48ab99c748c2e6138c48", "node_type": "4", "metadata": {"file_path": "docs/core/design/where-are-names-stored.mdx", "file_name": "where-are-names-stored.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/design/where-are-names-stored.mdx"}, "hash": "2b24b6411ed2b38bb1acd3e2e2e68b1dffa01b6b7bda1327c86ab6fddf099f94", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "73f22538-acb7-4992-8234-05d03937053b", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "d0df6584b3b053aeae54c93cffdf72f374faec295867b597770e6376aac9708e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\nlast_update:\n  author: serenae\ntags:\n  - where are ens names stored\n  - where are names stored\n  - names stored\n  - stored\nkeywords: [where are ens names stored, where are names stored, names stored, stored]\ndescription: Find out how and where ENS names are stored.\n--- # Where are ENS names stored?\nAs explained in <Link to=\"how-ens-works\"><b>Design & Implementation: How Does ENS Work</b></Link>, the `ENS Registry`, `.eth Registrar`, and `Resolvers` are all smart contracts on the Ethereum network.\n\nEvery account in Ethereum has a persistent memory area called storage, and this is where the entries and records in ENS are stored. The ENS contracts will expose various methods to read that storage, and that is how lookups are made possible.\n\nLet\u2019s go through an example with the name `ens.eth`. You can follow along here on Etherscan: https://etherscan.io/address/0x00000000000c2e074ec69a0dfb2997ba6c7d2e1e#readContract\n\nThe node (or namehash) for ens.eth is `0x4e34d3a81dc3a20f71bbdf2160492ddaa17ee7e5523757d47153379c13cb46df`.\n\nIf you enter that node into the owner method and click on Query, it should return the Manager for that name:\n\n<BrowserWindow url=\"etherscan.io\">\n  <Image img=\"/img/where-are-ens-names-stored-1.png\"/>\n</BrowserWindow>\n\nSimilarly, if you enter that node into the resolver method and click on Query, it should return the Resolver for that name:\n\n<BrowserWindow url=\"etherscan.io\">\n  <Image img=\"/img/where-are-ens-names-stored-2.png\"/>\n</BrowserWindow>\n\nNext, we can go to that resolver contract and look up records for the name: https://etherscan.io/address/0x4976fb03c32e5b8cfe2b6ccb31c09ba78ebaba41#readContract\n\nIf you enter the node into the first addr method and click on Query, it should return the ETH address that the name resolves to:\n\n<BrowserWindow url=\"etherscan.io\">\n  <Image img=\"/img/where-are-ens-names-stored-3.png\"/>\n</BrowserWindow>\n\nFinally, we can try looking up a text record from the resolver.\n\nIf you enter the node into the text method (use \u201curl\u201d for the key) and click on Query, it should return the URL text record that the name resolves to:\n\n<BrowserWindow url=\"etherscan.io\">\n  <Image img=\"/img/where-are-ens-names-stored-4.png\"/>\n</BrowserWindow>\n\nAs you can see, methods like these can be exposed by smart contracts to allow users or other smart contracts to read / write data from its internal storage.\n\nWhen a website/app/wallet needs to look up your ETH address or other records for your ENS name, it is following the same steps we just went through above.\n\nThe ENS Manager App performs these same steps to return records:\n\n\n<BrowserWindow url=\"app.ens.domains\">\n  <p align={\"center\"}>\n    <div style={{'background-color': \"#f2f4f7\", 'padding': \"25px\"}}>\n        <Image img=\"/img/where-are-ens-names-stored-5.png\"/>\n    </div>\n  </p>\n</BrowserWindow>", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 273, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "73a41840-dfe4-4f74-8f3a-2403bfcba90b": {"__data__": {"id_": "73a41840-dfe4-4f74-8f3a-2403bfcba90b", "embedding": null, "metadata": {"file_path": "docs/core/ens-use-cases.mdx", "file_name": "ens-use-cases.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/ens-use-cases.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/core/ens-use-cases.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["usecases", "cases", "everything", "cthulu", "things", "article"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8a35cef8d35872816a3069afec8f20edc9bb1ae6", "node_type": "4", "metadata": {"file_path": "docs/core/ens-use-cases.mdx", "file_name": "ens-use-cases.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/ens-use-cases.mdx"}, "hash": "8ea91c89e7f4dd9f4fd203236af658f9d88ddb5f16b7170c05df2c59d419ccc9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6f00ef92-407c-4df4-a5aa-ad484adad8e9", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "45a64bd55197d5d6b1f6f3b88d325cf5b5d7fead76ade2f850fb03f302028c08", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ntitle: ENS Use-Cases\nlast_update:\n  author: cthulu\ntags:\n - Everything you can do with your ENS Name\n - What can I use ENS for\n - how to use ENS\n - ENS use cases\n - use cases\n - usecases\n - use-cases\nkeywords: [how to use ens, ens use cases, ens use-cases, ens usecases, use cases, use-cases, usecases, things to do with your ens, things to do with your ens name, everything you can do with your ens, everything you can do with your ens name, what can i use ens for]\n--- # Things you can do with your ENS name\nThis article is a list of things you can use your ENS name for.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 474, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1d4a1dbd-bf20-4b02-86b1-db59816c45da": {"__data__": {"id_": "1d4a1dbd-bf20-4b02-86b1-db59816c45da", "embedding": null, "metadata": {"file_path": "docs/core/ens-use-cases.mdx", "file_name": "ens-use-cases.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/ens-use-cases.mdx", "header_path": "/Things you can do with your ENS name/", "customer_id": 1, "source_url": "docs/core/ens-use-cases.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["common", "different", "cryptocurrency", "cryptocurrencies", "wallets", "added", "allowing", "first", "receive", "supports", "which", "remember", "payments", "manager"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8a35cef8d35872816a3069afec8f20edc9bb1ae6", "node_type": "4", "metadata": {"file_path": "docs/core/ens-use-cases.mdx", "file_name": "ens-use-cases.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/ens-use-cases.mdx"}, "hash": "8ea91c89e7f4dd9f4fd203236af658f9d88ddb5f16b7170c05df2c59d419ccc9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6f00ef92-407c-4df4-a5aa-ad484adad8e9", "node_type": "1", "metadata": {"file_path": "docs/core/ens-use-cases.mdx", "file_name": "ens-use-cases.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/ens-use-cases.mdx", "header_path": "/"}, "hash": "2043be0eef211d7e62db3bbd5305b96a4235bad25121a9af66cfd5b3476c6079", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "92510c83-f484-4fcb-a99e-f2aa48679ca9", "node_type": "1", "metadata": {"header_path": "/Things you can do with your ENS name/An easy to remember name for your wallets/"}, "hash": "46b288d9ab24919ee290c80803085a3611eca33160eaf5bcc4be83eb7b804230", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## An easy to remember name for your wallets\nThe first and most common use case for an ENS name is to use it as an easy-to-remember name for your cryptocurrency addresses.\nENS supports many different cryptocurrencies which can be added from the [ENS Manager App](https://app.ens.domains), allowing you to receive payments in more cryptocurrencies than just Ethereum.\n\n![Docusaurus themed image](/img/ens-map-medium.png#gh-light-mode-only)![Docusaurus themed image](/img/ens-map-medium-dark.png#gh-dark-mode-only)\n\nThis alleviates the confusion associated with remembering your hexadecimal wallet address and provides easy payment options.\n\n:::info\nIf you'd like to add wallet addresses to your ENS name you can follow our guide here:\n - [**How-To:** Add a Wallet Address](/howto/add-wallet-address)\n:::\n\n<br/>", "mimetype": "text/plain", "start_char_idx": 580, "end_char_idx": 1389, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "92510c83-f484-4fcb-a99e-f2aa48679ca9": {"__data__": {"id_": "92510c83-f484-4fcb-a99e-f2aa48679ca9", "embedding": null, "metadata": {"file_path": "docs/core/ens-use-cases.mdx", "file_name": "ens-use-cases.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/ens-use-cases.mdx", "header_path": "/Things you can do with your ENS name/An easy to remember name for your wallets/", "customer_id": 1, "source_url": "docs/core/ens-use-cases.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["complete", "social", "gives", "profile", "media", "allowing", "everything", "decentralized", "kinds", "custom", "serve", "records", "beyond", "names", "connect"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8a35cef8d35872816a3069afec8f20edc9bb1ae6", "node_type": "4", "metadata": {"file_path": "docs/core/ens-use-cases.mdx", "file_name": "ens-use-cases.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/ens-use-cases.mdx"}, "hash": "8ea91c89e7f4dd9f4fd203236af658f9d88ddb5f16b7170c05df2c59d419ccc9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1d4a1dbd-bf20-4b02-86b1-db59816c45da", "node_type": "1", "metadata": {"file_path": "docs/core/ens-use-cases.mdx", "file_name": "ens-use-cases.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/ens-use-cases.mdx", "header_path": "/Things you can do with your ENS name/"}, "hash": "37654440566f93e0190ad45462c92a6951e84e8016580941b26b09307a69a145", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "74d134b8-6d42-4b41-9dc9-dc89a953d055", "node_type": "1", "metadata": {"header_path": "/Things you can do with your ENS name/"}, "hash": "0863f8fb2921bcf8ea3624525c898df8417180f4d72ebe49f5ddf8e7d9887081", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### And also for everything else\nENS names go far beyond that, however, allowing you to add all kinds of records to it from social media links, to profile pictures, custom records, and decentralized websites.\nThis gives you a name that can serve as your complete Web3 identity.\n\n<br/> ## Connect metadata to your Web3 identity\nYour ENS name can store metadata like your e-mail address, website and social media usernames so people can easily find them.\n\n![Docusaurus themed image](/img/ens-map-social.png#gh-light-mode-only)![Docusaurus themed image](/img/ens-map-social-dark.png#gh-dark-mode-only)", "mimetype": "text/plain", "start_char_idx": 1391, "end_char_idx": 1675, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "59d6db8e-299d-4e58-83ab-1d63fb463eda": {"__data__": {"id_": "59d6db8e-299d-4e58-83ab-1d63fb463eda", "embedding": null, "metadata": {"file_path": "docs/core/ens-use-cases.mdx", "file_name": "ens-use-cases.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/ens-use-cases.mdx", "header_path": "/Things you can do with your ENS name/Connect metadata to your Web3 identity/", "customer_id": 1, "source_url": "docs/core/ens-use-cases.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["other", "individual", "profiles", "services", "metadata", "numerous", "display", "which", "support", "fetch", "maintain", "records", "websites", "names", "provide"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8a35cef8d35872816a3069afec8f20edc9bb1ae6", "node_type": "4", "metadata": {"file_path": "docs/core/ens-use-cases.mdx", "file_name": "ens-use-cases.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/ens-use-cases.mdx"}, "hash": "8ea91c89e7f4dd9f4fd203236af658f9d88ddb5f16b7170c05df2c59d419ccc9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "74d134b8-6d42-4b41-9dc9-dc89a953d055", "node_type": "1", "metadata": {"file_path": "docs/core/ens-use-cases.mdx", "file_name": "ens-use-cases.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/ens-use-cases.mdx", "header_path": "/Things you can do with your ENS name/"}, "hash": "19b382587f54cd7f965d5fc994e90176cbcff9cad719ef3b7736e64b00382c44", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b8f0b631-2214-4db8-a32d-aced4191f256", "node_type": "1", "metadata": {"header_path": "/Things you can do with your ENS name/Connect metadata to your Web3 identity/"}, "hash": "9710ede14c588f423cc37baa8eacdc45adfa88f5992543556233b7997bb649c6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### And provide it to apps and services!\nServices like games, apps and other websites can then fetch the metadata and display it so you don't have to maintain individual profiles on each service!\n\n<BrowserWindow url=\"https://nick.eth.xyz\" img=\"/img/ethxyz-nick.png\"/>\n\n<!--\nENS Names support numerous text records which can be used to provide on-chain metadata to connect to your social media accounts. For example, you can add your Twitter or Discord handles to your ENS records.\n--> ### Social media identity\nA popular use-case for ENS names is to use them as your online identity on social media:\n\n<p align=\"center\">\n  <div class=\"container row twitter-bubbles\">\n    <div class=\"col-sm-4\"><Image img=\"/img/twitter-nick.png\"/></div>\n    <div class=\"col-sm-4\"><Image img=\"/img/twitter-alisha.png\"/></div>\n    <div class=\"col-sm-4\"><Image img=\"/img/twitter-jeff.png\"/></div>\n    <div class=\"col-sm-4\"><Image img=\"/img/twitter-khori.png\"/></div>\n  </div>\n</p>\n\n:::info\nIf you'd like to add social media links to your ENS name you can follow our guide here:\n - [**How-To:** Set a Twitter name](/howto/set-twitter-name)\n:::\n\n<br/>\n\n<!--", "mimetype": "text/plain", "start_char_idx": 1992, "end_char_idx": 2476, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cd5a4783-e1ba-41fe-b73d-2f98b6760f3d": {"__data__": {"id_": "cd5a4783-e1ba-41fe-b73d-2f98b6760f3d", "embedding": null, "metadata": {"file_path": "docs/core/ens-use-cases.mdx", "file_name": "ens-use-cases.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/ens-use-cases.mdx", "header_path": "/Things you can do with your ENS name/Connect metadata to your Web3 identity/", "customer_id": 1, "source_url": "docs/core/ens-use-cases.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["easily", "around", "works", "addresses", "website", "people", "cannot", "store", "which", "names", "there", "several", "while", "projects", "legacy"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8a35cef8d35872816a3069afec8f20edc9bb1ae6", "node_type": "4", "metadata": {"file_path": "docs/core/ens-use-cases.mdx", "file_name": "ens-use-cases.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/ens-use-cases.mdx"}, "hash": "8ea91c89e7f4dd9f4fd203236af658f9d88ddb5f16b7170c05df2c59d419ccc9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b8f0b631-2214-4db8-a32d-aced4191f256", "node_type": "1", "metadata": {"file_path": "docs/core/ens-use-cases.mdx", "file_name": "ens-use-cases.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/ens-use-cases.mdx", "header_path": "/Things you can do with your ENS name/Connect metadata to your Web3 identity/"}, "hash": "f3ac891e0708942e26778ff1781d0264a7465fffd21d622de1a000ee036681c7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0c22bd0e-1a5d-4f1a-bc84-48a358788a0b", "node_type": "1", "metadata": {"header_path": "/Things you can do with your ENS name/Connect metadata to your Web3 identity/"}, "hash": "9df23c6e3013f3818aa6fccb06ef6db741b90981abe704a4ab7a09783c743524", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### URLs and E-Mail  \n *Your ENS name can store your e-mail and website addresses so people can easily find them.*\n\n--> ### E-Mail\nWhile ENS names cannot be used in legacy DNS-based e-mail systems, there are several projects which works around that to enable you to use your ENS name to send and receive e-mail!\n\n - [ETHMail](https://ethmail.cc/)\n - [EtherMail](https://ethermail.io/)\n - [Skiff Mail](https://skiff.com/mail) ### Custom Service Keys \nYour ENS name is also capable of storing custom records that can contain nearly anything you want to display or integrate into your services.\n\n:::info\nIf you'd like to add a custom service key to your ENS name you can follow our guide here:\n - [**How-To:** Add a Custom Service Key](/howto/add-custom-record)\n:::\n\n<br/>", "mimetype": "text/plain", "start_char_idx": 3128, "end_char_idx": 3247, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4cda5db1-bc4a-4f33-a2f5-fbdb67cf9d04": {"__data__": {"id_": "4cda5db1-bc4a-4f33-a2f5-fbdb67cf9d04", "embedding": null, "metadata": {"file_path": "docs/core/ens-use-cases.mdx", "file_name": "ens-use-cases.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/ens-use-cases.mdx", "header_path": "/Things you can do with your ENS name/", "customer_id": 1, "source_url": "docs/core/ens-use-cases.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["hosted", "ability", "powerful", "website", "interesting", "point", "creating", "webpages", "decentralized", "create", "features", "where", "names"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8a35cef8d35872816a3069afec8f20edc9bb1ae6", "node_type": "4", "metadata": {"file_path": "docs/core/ens-use-cases.mdx", "file_name": "ens-use-cases.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/ens-use-cases.mdx"}, "hash": "8ea91c89e7f4dd9f4fd203236af658f9d88ddb5f16b7170c05df2c59d419ccc9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c9b1f0f9-236b-4aa8-be1a-7f76a7cdfbb0", "node_type": "1", "metadata": {"file_path": "docs/core/ens-use-cases.mdx", "file_name": "ens-use-cases.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/ens-use-cases.mdx", "header_path": "/Things you can do with your ENS name/Connect metadata to your Web3 identity/"}, "hash": "6d64280bb1e7b3574558ab0a8d753f950ae119503b02d20e151806643bdd5821", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4313985b-2da9-4892-b005-43ed48181410", "node_type": "1", "metadata": {"header_path": "/Things you can do with your ENS name/Create a Decentralized Website/"}, "hash": "2cd0441ee10a6317158ff19a2fbb0286ac4349b14cb5cd4eb3de15d4dc226bd3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Create a Decentralized Website\nOne of the most interesting and powerful features of ENS names is the ability to point them to webpages hosted on the decentralized web, creating a website where both the hosting and the domain name is *entirely* decentralized. ### Supported protocols\n\n<div class=\"container protocol-items\">\n  <div class=\"row row-no-gutters\" style={{'padding':'1rem 1rem 1rem 1rem','columnGap':'1rem'}}>\n    <div class=\"col-sm-4\" style={{'width':'10%'}}><img src=\"/img/logos/ipfs-logo.png\"/></div>\n    <div class=\"col-sm-8\" style={{'maxWidth':'88%','position':'relative'}}><a href=\"https://ipfs.tech\" alt=\"IPFS Link\" class=\"card-link\"><span></span></a>IPFS (the InterPlanetary File System) is a peer-to-peer network and protocol designed to make the web faster, safer, and more open.</div>\n  </div>\n</div>\n<br/>\n<div class=\"container protocol-items\">\n  <div class=\"row row-no-gutters\" style={{'padding':'1rem 1rem 1rem 1rem','columnGap':'1rem'}}>\n    <div class=\"col-sm-4\" style={{'padding':'0','width':'10%'}}><ThemedImage alt=\"Arweave themed image\" sources={{ light: '/img/logos/arweave-logo.svg', dark: '/img/logos/arweave-logo-dark.svg',}}/></div>\n    <div class=\"col-sm-8\" style={{'maxWidth':'88%','position':'relative'}}><a href=\"https://www.arweave.org\" alt=\"Arweave Link\" class=\"card-link\"><span></span></a>The Arweave network is like Bitcoin, but for data: A permanent and decentralized web inside an open ledger.</div>\n  </div>\n</div>\n<br/>\n<div class=\"container protocol-items\">\n  <div class=\"row row-no-gutters\" style={{'padding':'1rem 1rem 1rem 1rem','columnGap':'1rem'}}>\n    <div class=\"col-sm-4\" style={{'width':'10%'}}><img src=\"/img/logos/tor-logo.svg\"/></div>\n    <div class=\"col-sm-8\" style={{'maxWidth':'88%','position':'relative'}}><a href=\"https://torproject.org\" alt=\"Tor project Link\" class=\"card-link\"><span></span></a>Tor, short for \"The Onion Router,\" is free and open-source software for enabling anonymous communication.</div>\n  </div>\n</div>\n<br/>\n<div class=\"container protocol-items\">\n  <div class=\"row row-no-gutters\" style={{'padding':'1rem 1rem 1rem 1rem','columnGap':'1rem'}}>\n    <div class=\"col-sm-4\" style={{'width':'10%'}}><ThemedImage alt=\"Swarm themed image\" sources={{ light: '/img/logos/swarm-logo.png', dark: '/img/logos/swarm-logo-dark.png',}}/></div>\n    <div class=\"col-sm-8\" style={{'maxWidth':'88%','position':'relative'}}><a href=\"https://www.ethswarm.org/\" alt=\"Swarm link\" class=\"card-link\"><span></span></a>Swarm is a decentralised data storage and distribution technology. Ready to power the next generation of censorship-resistant, unstoppable, serverless dapps.</div>\n  </div>\n</div>\n<br/>\n\n:::info\n  If you'd like to set up your own decentralized website, you can follow our guide here:\n  - [**How-To:** Create a Decentralized Website](/howto/decentralized-website)\n:::", "mimetype": "text/plain", "start_char_idx": 3901, "end_char_idx": 4162, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "48ff6118-6f22-4ff3-934b-5a575cc44abe": {"__data__": {"id_": "48ff6118-6f22-4ff3-934b-5a575cc44abe", "embedding": null, "metadata": {"file_path": "docs/core/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/index.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/core/index.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["profile", "picture", "record", "avatar", "doccardlist", "update", "cthulu", "import", "concepts", "background", "upload"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2f1ad0d97bcddef3edc50a5d3149cfa91c9b8c09", "node_type": "4", "metadata": {"file_path": "docs/core/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/index.mdx"}, "hash": "2a5de3072e64ab7dc6fbc65fbf4af7dfa93a444563b0b100750ccb8a317e494a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Core Concepts\n```mdx-code-block\nimport DocCardList from '@theme/DocCardList';\n\n<DocCardList />\n``` ---\ntitle: Avatar\nlast_update:\n  author: cthulu\ntags:\n  - avatar record\n  - avatar\n  - profile picture\n  - background\nkeywords: [ens avatar, set avatar, set ens avatar, avatar, update avatar, upload avatar, avatar on ens name, ens profile picture, profile picture, ens name background, background]\ndescription: Information about the Avatar record.\n--- # The Avatar Record\n\nThe avatar record allows you to select a custom background image for your ENS name `metadata` to display in services that support it.  \n\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col\">\n      <div style={{'margin': \"auto\", 'padding': \"25px 0px 0px 0px\"}}>\n      <p align=\"center\"><b>Without the Avatar set</b></p>\n      </div>\n    </div>\n    <div class=\"col\">\n      <div style={{'margin': \"auto\", 'padding': \"25px 0px 0px 0px\"}}>\n      <p align=\"center\"><b>With the Avatar set</b></p>\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col\">\n      <div style={{'margin': \"auto\", 'padding': \"0px 12.5px 25px 25px\"}}>\n        <Image img=\"/img/avatar_notset.webp\"/>\n      </div>\n    </div>\n    <div class=\"col\">\n      <div style={{'margin': \"auto\", 'padding': \"0px 25px 25px 12.5px\"}}>\n        <Image img=\"/img/avatar_set.webp\"/>\n      </div>\n    </div>\n  </div>\n</div>", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 100, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "96b193c0-4265-4dc8-9dc5-e352bd9ce975": {"__data__": {"id_": "96b193c0-4265-4dc8-9dc5-e352bd9ce975", "embedding": null, "metadata": {"file_path": "docs/core/records/avatar.mdx", "file_name": "avatar.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/records/avatar.mdx", "header_path": "/The Avatar Record/", "customer_id": 1, "source_url": "docs/core/records/avatar.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["other", "wallet", "looks", "avatar", "corner", "along", "which", "click", "shows", "popular", "information", "where", "manager"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fb70d4c67d684aab5c530314642f9f3b7537cb11", "node_type": "4", "metadata": {"file_path": "docs/core/records/avatar.mdx", "file_name": "avatar.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/records/avatar.mdx"}, "hash": "7e10c18dd0ee7f3f0e3ba6ec3171e1a1a43f159d508840283cf5c796211f7807", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "53a26bdd-835f-4168-b5bf-45e5d512063f", "node_type": "1", "metadata": {"file_path": "docs/core/records/avatar.mdx", "file_name": "avatar.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/records/avatar.mdx", "header_path": "/"}, "hash": "c4586672e8576864616a34fcaa1f7594cccde920837270bcb65f1afd6ac77b07", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "501ec811-5095-4a1f-9e6c-4dd8a39dd701", "node_type": "1", "metadata": {"header_path": "/The Avatar Record/"}, "hash": "0566129fd3bcc9ad89175b796622ede0492cb7834d26c95ffe0522bbefaba063", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## What does it look like?\n\nHere's how it looks in some popular services:\n<Tabs>\n<TabItem value=\"ENS Manager\" default>\n\nThe `ENS Manager App/Site` will show your Avatar in the top-right corner, along with your wallet address.\n\n<BrowserWindow url=\"https://app.ens.domains\">\n<Image img=\"/img/howto/v3-set-avatar-services-ens.png\"/>\n</BrowserWindow>\n\nIf you click it, you'll get a sub-menu where you can go to your `Profile` which shows your avatar as well as\nother information set on your ENS name.\n\n<ImageWindow title=\"Go to your profile\">\n<p align={\"center\"}>\n<Image img=\"/img/howto/v3-set-avatar-services-ens-2.png\"/>\n</p>\n</ImageWindow>\n\n<BrowserWindow url=\"https://app.ens.domains\">\n<p align={\"center\"}>\n<div style={{'background-color': \"#f2f4f7\", 'padding': \"25px\"}}>\n<Image img=\"/img/howto/v3-set-avatar-services-ens-3.png\"/>\n</div>\n</p>\n</BrowserWindow>\n\n</TabItem>\n<TabItem value=\"Uniswap\">\n\nUniswap's App will show your Avatar in the top-right corner as well!\n\n<BrowserWindow url=\"https://app.uniswap.org\">\n<Image img=\"/img/howto/v3-set-avatar-services-uniswap.png\"/>\n</BrowserWindow>\n</TabItem>\n<TabItem value=\"OpenSea\">\n\nOpenSea does _not_ show your avatar the same way other sites do, because they have their own profile picture-settings,\n_but_ they do show avatars set on ENS names if you go to the ENS name itself.\n\nThis is useful if you want to make your ENS name stand out on OpenSea.\n\n<BrowserWindow url=\"https://opensea.io\">\n<Image img=\"/img/howto/v3-set-avatar-services-opensea.png\"/>\n</BrowserWindow>\n</TabItem>\n</Tabs>", "mimetype": "text/plain", "start_char_idx": 1277, "end_char_idx": 2815, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "501ec811-5095-4a1f-9e6c-4dd8a39dd701": {"__data__": {"id_": "501ec811-5095-4a1f-9e6c-4dd8a39dd701", "embedding": null, "metadata": {"file_path": "docs/core/records/avatar.mdx", "file_name": "avatar.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/records/avatar.mdx", "header_path": "/The Avatar Record/", "customer_id": 1, "source_url": "docs/core/records/avatar.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["address", "cointypes", "avatar", "information", "supported", "cthulu", "cointype", "wallet", "token"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fb70d4c67d684aab5c530314642f9f3b7537cb11", "node_type": "4", "metadata": {"file_path": "docs/core/records/avatar.mdx", "file_name": "avatar.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/records/avatar.mdx"}, "hash": "7e10c18dd0ee7f3f0e3ba6ec3171e1a1a43f159d508840283cf5c796211f7807", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "96b193c0-4265-4dc8-9dc5-e352bd9ce975", "node_type": "1", "metadata": {"file_path": "docs/core/records/avatar.mdx", "file_name": "avatar.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/records/avatar.mdx", "header_path": "/The Avatar Record/"}, "hash": "13938e737908936f069e3fc93d0f7779c14503593245610ba7de3373b1a4b739", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## How to set it\n:::info how-to\nFor more information on how to set an Avatar on your ENS name, see:\n- <Link to=\"/howto/set-avatar\"><b>How-To: Set an Avatar</b></Link>\n::: ---\nlast_update:\n  author: cthulu\ntags:\n  - coin\n  - coin type\n  - cointype\n  - cointypes\n  - token\n  - token address\n  - wallet address\nkeywords: [coin, token, token address, wallet address, coin types, cointypes, wallet types, supported wallets, wallet support, supported blockchains, blockchain support, supported chains, chain support]\n---", "mimetype": "text/plain", "start_char_idx": 2818, "end_char_idx": 2988, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "79fdf51c-d696-4f74-a1c7-fdc56e19aae6": {"__data__": {"id_": "79fdf51c-d696-4f74-a1c7-fdc56e19aae6", "embedding": null, "metadata": {"file_path": "docs/core/records/coin-types.mdx", "file_name": "coin-types.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/records/coin-types.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/core/records/coin-types.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["integrated", "missing", "cryptocurrency", "coins", "services", "types", "added", "supports", "which", "support", "custom", "number", "names", "service"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1a38c8d2ea0470e33c5d60b8b96bbde29f8c8ca7", "node_type": "4", "metadata": {"file_path": "docs/core/records/coin-types.mdx", "file_name": "coin-types.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/records/coin-types.mdx"}, "hash": "824afa0ac541935de1642af6a405cedf73b2e23ede35732d2fb275055674d9d8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "88e22271-4974-42d6-a600-53a30565177e", "node_type": "1", "metadata": {"file_path": "docs/core/records/coin-types.mdx", "file_name": "coin-types.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/records/coin-types.mdx", "header_path": "/"}, "hash": "77571c9cba6ed508b350892c9dbfe27200a4f3157f64d770467e6599075aae36", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "878121c0-a736-4a7f-bb8c-1f8ddf98b569", "node_type": "1", "metadata": {"header_path": "/Coin Types/"}, "hash": "030b6af2bc9556354bc5675e0cacfcd70cdde3329a15b5e312dc82a23f92b737", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Coin Types\nENS supports any number of cryptocurrency addresses, all of which can be added to your ENS name\u2019s records.[^1]\nCustom coins can be added as well.\n\n:::info\n - For ENS names to work they must be integrated into the service you use. Support can be missing for services on other blockchains.\n:::\n\n<BrowserWindow url=\"app.ens.domains\">\n  <p align=\"center\">\n    <div style={{'background-color': \"#f5f6f7\", 'padding': \"25px\"}}>\n      <Image img=\"/img/coin-types-1.png\"/>\n    </div>\n  </p>\n</BrowserWindow>", "mimetype": "text/plain", "start_char_idx": 345, "end_char_idx": 856, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "878121c0-a736-4a7f-bb8c-1f8ddf98b569": {"__data__": {"id_": "878121c0-a736-4a7f-bb8c-1f8ddf98b569", "embedding": null, "metadata": {"file_path": "docs/core/records/coin-types.mdx", "file_name": "coin-types.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/records/coin-types.mdx", "header_path": "/Coin Types/", "customer_id": 1, "source_url": "docs/core/records/coin-types.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["domains", "addresses", "cryptocurrencies", "cryptocurrency", "description", "added", "supported", "supports", "which", "several", "information", "token"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1a38c8d2ea0470e33c5d60b8b96bbde29f8c8ca7", "node_type": "4", "metadata": {"file_path": "docs/core/records/coin-types.mdx", "file_name": "coin-types.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/records/coin-types.mdx"}, "hash": "824afa0ac541935de1642af6a405cedf73b2e23ede35732d2fb275055674d9d8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "79fdf51c-d696-4f74-a1c7-fdc56e19aae6", "node_type": "1", "metadata": {"file_path": "docs/core/records/coin-types.mdx", "file_name": "coin-types.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/records/coin-types.mdx", "header_path": "/"}, "hash": "4dace57f2f5725afe6c25496ede9b64aee138419faaaa79976ecd577b0e48b0d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8e899786-8742-4954-a411-ed7cf595819c", "node_type": "1", "metadata": {"header_path": "/Coin Types/"}, "hash": "b5c491377a37b8946d7ca9167ab2e9d8ef115e24f19a50084dbc6c6e242be29a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Supported cryptocurrency addresses\nENS supports several coin types, all of which can be added to your ENS name\u2019s records.\n:::info Supported cryptocurrencies\nFor more information on which cryptocurrencies ENS supports, see\n - <Link to=\"https://github.com/ensdomains/address-encoder\"><b>ENS Domains GitHub: </b>Address Encoder</Link>\n\n<Tabs>\n<TabItem value=\"A\" default>\n\n| Token | Description |\n|-------|-------------|\n| ABCC | ABCC is a cryptocurrency exchange platform that allows users to buy and sell a variety of cryptocurrencies. |\n| ADA | ADA is the native cryptocurrency of the Cardano blockchain, which is a decentralized platform for building and running smart contracts. |\n| AE | AE is the native cryptocurrency of the Aeternity blockchain, which is a decentralized platform for building and running smart contracts. |\n| AIB | AIB is a cryptocurrency that is used as a utility token on the AIBank blockchain platform, which offers a range of financial services including loans and investments. |\n| AION | AION is a cryptocurrency that is used as a utility token on the Aion blockchain platform, which is a decentralized network for building and running distributed applications. |\n| ALGO | ALGO is the native cryptocurrency of the Algorand blockchain, which is a decentralized platform for building and running smart contracts. |\n| AR | AR is a cryptocurrency that is used as a utility token on the Arweave blockchain platform, which offers a decentralized, permanent data storage solution. |\n| ARB1 | ARB1 is a cryptocurrency that is used as a utility token on the Arbitrum blockchain platform, which is a decentralized platform for building and running smart contracts. |\n| ARDR | ARDR is the native cryptocurrency of the Ardor blockchain, which is a decentralized platform for building and running distributed applications. |\n| ARK | ARK is a cryptocurrency that is used as a utility token on the Ark blockchain platform, which is a decentralized network for building and running distributed applications. |\n| ATOM | ATOM is the native cryptocurrency of the Cosmos blockchain, which is a decentralized network of independent blockchains. |\n| AVAX | AVAX is the native cryptocurrency of the Avalanche blockchain, which is a decentralized platform for building and running distributed applications. |\n| AVAXC | AVAXC is a cryptocurrency that is used as a utility token on the Avalanche blockchain platform. |\n\n</TabItem>\n<TabItem value=\"B\">\n\n| Token | Description |\n|-------|-------------|\n| BCD | BCD is a cryptocurrency that is used as a utility token on the Bitcoin Diamond blockchain platform, which is a fork of the Bitcoin blockchain. |\n| BCH | BCH is a cryptocurrency that is used as a utility token on the Bitcoin Cash blockchain platform, which is a fork of the Bitcoin blockchain. |\n| BCN | BCN is a cryptocurrency that is used as a utility token on the Bytecoin blockchain platform, which is a decentralized platform for building and running distributed applications. |\n| BDX | BDX is a cryptocurrency that is used as a utility token on the Beldex blockchain platform, which is a decentralized platform for buying and selling a variety of cryptocurrencies. |\n| BNB | BNB is the native cryptocurrency of the Binance blockchain platform, which is a decentralized network for buying and selling a variety of cryptocurrencies. |\n| BPS | BPS is a cryptocurrency that is used as a utility token on the BlackPay blockchain platform, which is a decentralized platform for making payments and conducting transactions. |\n| BSC | BSC is the native cryptocurrency of the Binance Smart Chain blockchain platform, which is a decentralized network for building and running distributed applications. |\n| BSV | BSV is a cryptocurrency that is used as a utility token on the Bitcoin SV blockchain platform, which is a fork of the Bitcoin blockchain. |\n| BTC | BTC is the native cryptocurrency of the Bitcoin blockchain, which is a decentralized platform for conducting transactions and making payments. |\n| BTG | BTG is a cryptocurrency that is used as a utility token on |\n| BTM | BTM is a cryptocurrency that is used as a utility token on the Bytom blockchain platform, which is a decentralized platform for building and running smart contracts. |\n| BTS | BTS is the native cryptocurrency of the BitShares blockchain platform, which is a decentralized network for buying and selling a variety of cryptocurrencies. |\n\n</TabItem>\n<TabItem value=\"C\">\n\n| Token | Description |\n|-------|-------------|\n| CCA | CCA is a cryptocurrency that is used as a utility token on the CCA chain blockchain platform, which is a decentralized platform for building and running distributed applications. |\n| CCXX | CCXX is a cryptocurrency that is used as a utility token on the CCA chain blockchain platform. |\n| CELO | CELO is a cryptocurrency that is used as a utility token on the Celo blockchain platform, which is a decentralized network for building and running distributed applications. |\n| CKB | CKB is a cryptocurrency that is used as a utility token on the Nervos CKB blockchain platform, which is a decentralized network for building and running distributed applications. |\n| CLO | CLO is a cryptocurrency that is used as a utility token on the Callisto blockchain platform, which is a decentralized network for building and running distributed applications. |\n| CRO | CRO is a cryptocurrency that is used as a utility token on the Crypto.com blockchain platform, which is a decentralized network for conducting transactions and making payments. |\n\n</TabItem>\n<TabItem value=\"D\">\n\n| Token | Description |\n|-------|-------------|\n| DASH | DASH is a cryptocurrency that is used as a utility token on the Dash blockchain platform, which is a decentralized platform for conducting transactions and making payments. |\n| DCR | DCR is a cryptocurrency that is used as a utility token on the Decred blockchain platform, which is a decentralized network for building and running distributed applications. |\n| DGB | DGB is a cryptocurrency that is used as a utility token on the DigiByte blockchain platform, which is a decentralized network for conducting transactions and making payments. |\n| DIVI | DIVI is a cryptocurrency that is used as a utility token on the Divi blockchain platform, which is a decentralized platform for building and running distributed applications. |\n| DOGE | DOGE is a cryptocurrency that is used as a utility token on the Dogecoin blockchain platform, which is a decentralized platform for conducting transactions and making payments. |\n| DOT | DOT is the native cryptocurrency of the Polkadot blockchain platform, which is a decentralized network for building and running distributed applications. |\n\n</TabItem>\n<TabItem value=\"E\">\n\n| Token | Description |\n|-------|-------------|\n| EGLD | EGLD is a cryptocurrency that is used as a utility token on the Elrond blockchain platform, which is a decentralized network for building and running distributed applications. |\n| ELA | ELA is a cryptocurrency that is used as a utility token on the Elastos blockchain platform, which is a decentralized network for building and running distributed applications. |\n| EOS | EOS is a cryptocurrency that is used as a utility token on the EOSIO blockchain platform, which is a decentralized network for building and running distributed applications. |\n| ETC | ETC is a cryptocurrency that is used as a utility token on the Ethereum Classic blockchain platform, which is a decentralized network for building and running distributed applications. |\n| ETH | ETH is the native cryptocurrency of the Ethereum blockchain platform, which is a decentralized platform for building and running distributed applications. |\n| ETN | ETN is a cryptocurrency that is used as a utility token on the Electroneum blockchain platform, which is a decentralized network for conducting transactions and making payments. |\n| EWT | EWT is a cryptocurrency that is used as a utility token on the Energy Web blockchain platform, which is a decentralized network for building and running distributed applications. |\n\n</TabItem>\n<TabItem value=\"F\">\n\n| Token | Description |\n|-------|-------------|\n| FIL | FIL is a cryptocurrency that is used as a utility token on the Filecoin blockchain platform, which is a decentralized network for storing and sharing digital data. |\n| FIO | FIO is a cryptocurrency that is used as a utility token on the FIO Protocol blockchain platform, which is a decentralized network for conducting transactions and making payments. |\n| FIRO | FIRO is a cryptocurrency that is used as a utility token on the Zcoin blockchain platform, which is a decentralized network for conducting transactions and making payments. |\n| FLOW | FLOW is a cryptocurrency that is used as a utility token on the Flow blockchain platform, which is a decentralized network for building and running distributed applications. |\n| FTM | FTM is a cryptocurrency that is used as a utility token on the Fantom blockchain platform, which is a decentralized network for building and running distributed applications. |\n\n</TabItem>\n<TabItem value=\"G\">\n\n| Token | Description |\n|-------|-------------|\n| GO | GO is a cryptocurrency that is used as a utility token on the GoChain blockchain platform, which is a decentralized network for building and running distributed applications. |\n| GRIN | GRIN is a cryptocurrency that is used as a utility token on the Grin blockchain platform, which is a decentralized network for conducting transactions and making payments. |\n| GRS | GRS is a cryptocurrency that is used as a utility token on the Groestlcoin blockchain platform, which is a decentralized network for conducting transactions and making payments. |\n| GXC | GXC is a cryptocurrency that is used as a utility token on the GXChain blockchain platform, which is a decentralized network for building and running distributed applications. |\n\n</TabItem>\n<TabItem value=\"H\">\n\n| Token | Description |\n|-------|-------------|\n| HBAR | HBAR is a cryptocurrency that is used as a utility token on the Hedera Hashgraph blockchain platform, which is a decentralized network for conducting transactions and making payments. |\n| HIVE | HIVE is a cryptocurrency that is used as a utility token on the Hive blockchain platform, which is a decentralized network for building and running distributed applications. |\n| HNS | HNS is a cryptocurrency that is used as a utility token on the Handshake blockchain platform, which is a decentralized network for conducting transactions and making payments. |\n| HNT | HNT is a cryptocurrency that is used as a utility token on the Helium blockchain platform, which is a decentralized network for building and running distributed applications. |\n\n</TabItem>\n<TabItem value=\"I\">\n\n| Token | Description |\n|-------|-------------|\n| ICX | ICX is a cryptocurrency that is used as a utility token on the ICON blockchain platform, which is a decentralized network for building and running distributed applications. |\n| IOST | IOST is a cryptocurrency that is used as a utility token on the Internet of Services blockchain platform, which is a decentralized network for building and running distributed applications. |\n| IOTA | IOTA is a cryptocurrency that is used as a utility token on the IOTA blockchain platform, which is a decentralized network for conducting transactions and making payments. |\n| IOTX | IOTX is a cryptocurrency that is used as a utility token on the IoTeX blockchain platform, which is a decentralized network for building and running distributed applications. |\n| IRIS | IRIS is a cryptocurrency that is used as a utility token on the Cosmos blockchain platform, which is a decentralized network for building and running distributed applications. |\n\n</TabItem>\n<TabItem value=\"K\">\n\n| Token | Description |\n|-------|-------------|\n| KAVA | KAVA is a cryptocurrency that is used as a utility token on the Kava blockchain platform, which is a decentralized network for conducting transactions and making payments. |\n| KMD | KMD is a cryptocurrency that is used as a utility token on the Komodo blockchain platform, which is a decentralized network for building and running distributed applications. |\n| KSM | KSM is a cryptocurrency that is used as a utility token on the Kusama blockchain platform, which is a decentralized network for building and running distributed applications. |\n\n</TabItem>\n<TabItem value=\"L\">\n\n| Token | Description |\n|-------|-------------|\n| LCC | LCC is a cryptocurrency that is used as a utility token on the Litecoin Cash blockchain platform, which is a decentralized network for conducting transactions and making payments. |\n| LRG | LRG is a cryptocurrency that is used as a utility token on the Largo blockchain platform, which is a decentralized network for building and running distributed applications. |\n| LSK | LSK is a cryptocurrency that is used as a utility token on the Lisk blockchain platform, which is a decentralized network for building and running distributed applications. |\n| LTC | LTC is a cryptocurrency that is used as a utility token on the Litecoin blockchain platform, which is a decentralized network for conducting transactions and making payments. |\n| LUNA | LUNA is a cryptocurrency that is used as a utility token on the Terra blockchain platform, which is a decentralized network for conducting transactions and making payments. |\n\n</TabItem>\n<TabItem value=\"M\">\n\n| Token | Description |\n|-------|-------------|\n| MATIC | MATIC is a cryptocurrency that is used as a utility token on the Matic Network blockchain platform, which is a decentralized network for building and running distributed applications. |\n| MONA | MONA is a cryptocurrency that is used as a utility token on the Monacoin blockchain platform, which is a decentralized network for conducting transactions and making payments. |\n| MRX | MRX is a cryptocurrency that is used as a utility token on the MiraX blockchain platform, which is a decentralized network for building and running distributed applications. |\n\n</TabItem>\n<TabItem value=\"N\">\n\n| Token | Description |\n|-------|-------------|\n| NANO | NANO is a cryptocurrency that is used as a utility token on the Nano blockchain platform, which is a decentralized network for conducting transactions and making payments. |\n| NAS | NAS is a cryptocurrency that is used as a utility token on the Nebulas blockchain platform, which is a decentralized network for building and running distributed applications. |\n| NEAR | NEAR is a cryptocurrency that is used as a utility token on the NEAR Protocol blockchain platform, which is a decentralized network for building and running distributed applications. |\n| NEO | NEO is a cryptocurrency that is used as a utility token on the NEO blockchain platform, which is a decentralized network for building and running distributed applications. |\n| NIM | NIM is a cryptocurrency that is used as a utility token on the NIMIQ blockchain platform, which is a decentralized network for conducting transactions and making payments. |\n| NMC | NMC is a cryptocurrency that is used as a utility token on the Namecoin blockchain platform, which is a decentralized network for conducting transactions and making payments. |\n| NRG | NRG is a cryptocurrency that is used as a utility token on the Energi blockchain platform, which is a decentralized network for building and running distributed applications. |\n| NULS | NULS is a cryptocurrency that is used as a utility token on the NULS blockchain platform, which is a decentralized network for building and running distributed applications. |\n\n</TabItem>\n<TabItem value=\"O\">\n\n| Token | Description |\n|-------|-------------|\n| ONE | ONE is a cryptocurrency that is used as a utility token on the Harmony blockchain platform, which is a decentralized network for building and running distributed applications. |\n| ONT | ONT is a cryptocurrency that is used as a utility token on the Ontology blockchain platform, which is a decentralized network for building and running distributed applications. |\n| OP | OP is a cryptocurrency that is used as a utility token on the Oasis Protocol blockchain platform, which is a decentralized network for building and running distributed applications. |\n\n</TabItem>\n<TabItem value=\"P\">\n\nHere is the code block for the markdown table:\n\n| Token | Description |\n|-------|-------------|\n| POA | POA is a cryptocurrency that is used as a utility token on the POA Network blockchain platform, which is a decentralized network for building and running distributed applications. |\n| PPC | PPC is a cryptocurrency that is used as a utility token on the Peercoin blockchain platform, which is a decentralized network for conducting transactions and making payments. |\n\n</TabItem>\n<TabItem value=\"Q\">\n\n| Token | Description |\n|-------|-------------|\n| QTUM | QTUM is a cryptocurrency that is used as a utility token on the Qtum blockchain platform, which is a decentralized network for building and running distributed applications. |\n\n</TabItem>\n<TabItem value=\"R\">\n\n| Token | Description |\n|-------|-------------|\n| RDD | RDD is a cryptocurrency that is used as a utility token on the Reddcoin blockchain platform, which is a decentralized network for conducting transactions and making payments. |\n| RSK | RSK is a cryptocurrency that is used as a utility token on the RSK blockchain platform, which is a decentralized network for building and running distributed applications. |\n| RUNE | RUNE is a cryptocurrency that is used as a utility token on the THORChain blockchain platform, which is a decentralized network for conducting transactions and making payments. |\n| RVN | RVN is a cryptocurrency that is used as a utility token on the Ravencoin blockchain platform, which is a decentralized network for conducting transactions and making payments. |\n</TabItem>\n<TabItem value=\"S\">\n\n| Token | Description |\n|-------|-------------|\n| SC | SC is a cryptocurrency that is used as a utility token on the Siacoin blockchain platform, which is a decentralized network for conducting transactions and making payments. |\n| SERO | SERO is a cryptocurrency that is used as a utility token on the SERO blockchain platform, which is a decentralized network for conducting transactions and making payments. |\n| SOI | SOI is a cryptocurrency that is used as a utility token on the Soil blockchain platform, which is a decentralized network for conducting transactions and making payments. |\n| SRM | SRM is a cryptocurrency that is used as a utility token on the Serum blockchain platform, which is a decentralized network for conducting transactions and making payments. |\n| STEEM | STEEM is a cryptocurrency that is used as a utility token on the Steem blockchain platform, which is a decentralized network for building and running distributed applications. |\n| STRAT | STRAT is a cryptocurrency that is used as a utility token on the Stratis blockchain platform, which is a decentralized network for building and running distributed applications. |\n| STX | STX is a cryptocurrency that is used as a utility token on the Blockstack blockchain platform, which is a decentralized network for building and running distributed applications. |\n| SYS | SYS is a cryptocurrency that is used as a utility token on the Syscoin blockchain platform, which is a decentralized network for conducting transactions and making payments. |\n\n</TabItem>\n<TabItem value=\"T\">\n\n| Token | Description |\n|-------|-------------|\n| TFUEL | TFUEL is a cryptocurrency that is used as a utility token on the Theta Fuel blockchain platform, which is a decentralized network for conducting transactions and making payments. |\n| THETA | THETA is a cryptocurrency that is used as a utility token on the Theta blockchain platform, which is a decentralized network for building and running distributed applications. |\n| TOMO | TOMO is a cryptocurrency that is used as a utility token on the TomoChain blockchain platform, which is a decentralized network for building and running distributed applications. |\n| TRX | TRX is a cryptocurrency that is used as a utility token on the TRON blockchain platform, which is a decentralized network for building and running distributed applications. |\n| TT | TT is a cryptocurrency that is used as a utility token on the TrustToken blockchain platform, which is a decentralized network for conducting transactions and making payments. |\n\n</TabItem>\n<TabItem value=\"V\">\n\n| Token | Description |\n|-------|-------------|\n| VET | VET is a cryptocurrency that is used as a utility token on the VeChain blockchain platform, which is a decentralized network for building and running distributed applications. |\n| VIA | VIA is a cryptocurrency that is used as a utility token on the Viacoin blockchain platform, which is a decentralized network for conducting transactions and making payments. |\n| VLX | VLX is a cryptocurrency that is used as a utility token on the Velas blockchain platform, which is a decentralized network for building and running distributed applications. |\n| VSYS | VSYS is a cryptocurrency that is used as a utility token on the V Systems blockchain platform, which is a decentralized network for building and running distributed applications. |\n\n</TabItem>\n<TabItem value=\"W\">\n\n| Token | Description |\n|-------|-------------|\n| WAN | WAN is a cryptocurrency that is used as a utility token on the Wanchain blockchain platform, which is a decentralized network for building and running distributed applications. |\n| WAVES | WAVES is a cryptocurrency that is used as a utility token on the Waves blockchain platform, which is a decentralized network for conducting transactions and making payments. |\n| WICC | WICC is a cryptocurrency that is used as a utility token on the WaykiChain blockchain platform, which is a decentralized network for conducting transactions and making payments. |\n\n</TabItem>\n<TabItem value=\"X\">\n\n| Symbol | Description |\n|--------|-------------|\n| xch | XCH is a token that is used for facilitating transactions on the XCH blockchain. |\n| xdai | XDai is a stablecoin that is pegged to the value of the US dollar. It is used on the Ethereum blockchain for facilitating fast and cheap transactions. |\n| xem | XEM is the native token of the NEM blockchain. It is used for powering transactions and executing smart contracts on the NEM platform. |\n| xhv | XHV is the native token of the Haven Protocol, a decentralized finance platform that provides private and secure storage of digital assets. |\n| xlm | XLM is the native token of the Stellar blockchain. It is used for facilitating transactions and powering smart contracts on the Stellar platform. |\n| xmr | XMR is the native token of the Monero blockchain. It is a privacy-focused cryptocurrency that uses advanced cryptographic techniques to obscure the sender, recipient, and amount of transactions on the Monero network. |\n| xrp | XRP is the native token of the Ripple network. It is a digital asset that is used for facilitating transactions on the Ripple platform. |\n| xtz | XTZ is the native token of the Tezos blockchain. It is used for powering transactions and executing smart contracts on the Tezos platform. |\n| xvg | XVG is the native token of the Verge blockchain. It is a privacy-focused cryptocurrency that uses advanced cryptographic techniques to obscure the sender, recipient, and amount of transactions on the Verge network. |\n\n</TabItem>\n<TabItem value=\"Z\">\n\n| Symbol | Description |\n|--------|-------------|\n| zec | ZEC is the native token of the Zcash blockchain. It is a privacy-focused cryptocurrency that uses advanced cryptographic techniques to obscure the sender, recipient, and amount of transactions on the Zcash network. |\n| zei | ZEI is a token that is used on the Ethereum blockchain for facilitating transactions and executing smart contracts. |\n| zen | ZEN is the native token of the Horizen blockchain. It is used for powering transactions and executing smart contracts on the Horizen platform. |\n| zil | ZIL is the native token of the Zilliqa blockchain. It is used for facilitating transactions and executing smart contracts on the Zilliqa platform. |\n\n</TabItem>\n</Tabs>\n:::", "mimetype": "text/plain", "start_char_idx": 858, "end_char_idx": 25062, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8e899786-8742-4954-a411-ed7cf595819c": {"__data__": {"id_": "8e899786-8742-4954-a411-ed7cf595819c", "embedding": null, "metadata": {"file_path": "docs/core/records/coin-types.mdx", "file_name": "coin-types.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/records/coin-types.mdx", "header_path": "/Coin Types/", "customer_id": 1, "source_url": "docs/core/records/coin-types.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["content", "website", "address", "information", "cthulu", "wallet", "contenthash"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1a38c8d2ea0470e33c5d60b8b96bbde29f8c8ca7", "node_type": "4", "metadata": {"file_path": "docs/core/records/coin-types.mdx", "file_name": "coin-types.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/records/coin-types.mdx"}, "hash": "824afa0ac541935de1642af6a405cedf73b2e23ede35732d2fb275055674d9d8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "878121c0-a736-4a7f-bb8c-1f8ddf98b569", "node_type": "1", "metadata": {"file_path": "docs/core/records/coin-types.mdx", "file_name": "coin-types.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/records/coin-types.mdx", "header_path": "/Coin Types/"}, "hash": "9ebd60ba849270810fa28c5bf8aed5352dbf8c3d5e70c7f65597aee0d0e25731", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## How to add a wallet address\n:::info how-to\nFor more information on how to add a wallet address to your ENS name, see:\n<Link to=\"/howto/add-wallet-address\"><b>How-To:</b> Add a Wallet Address</Link>\n::: ---\ntitle: Content\nlast_updated:\n  author: cthulu\ntags:\n  - content\n  - content hash\n  - contenthash\n  - website\n  - link\nkeywords: [content, contenthash, content hash, website, link, content record]\n--- # The Content record\nOne of the most interesting and powerful features of ENS names is the ability to point them to webpages hosted on the decentralized web. This is achieved by creating a website where both the hosting and the domain name is entirely decentralized, meaning that neither is hosted on any one server.", "mimetype": "text/plain", "start_char_idx": 25064, "end_char_idx": 25268, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7683ca08-a268-4f2a-91f5-bed579149532": {"__data__": {"id_": "7683ca08-a268-4f2a-91f5-bed579149532", "embedding": null, "metadata": {"file_path": "docs/core/records/content-hash.mdx", "file_name": "content-hash.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/records/content-hash.mdx", "header_path": "/The Content record/", "customer_id": 1, "source_url": "docs/core/records/content-hash.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["content", "enter", "browsers", "resolves", "point", "address", "record", "display", "decentralized", "allow", "location", "their", "compatible"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e8814ff885859f19a3428f8f919b0a0cb6bee9f7", "node_type": "4", "metadata": {"file_path": "docs/core/records/content-hash.mdx", "file_name": "content-hash.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/records/content-hash.mdx"}, "hash": "b776586fdf836d9cf7c39d4eba076bf9cec46e0739427abc0158eb638cf50529", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0559b6d2-a37c-4421-a017-890a70004d4b", "node_type": "1", "metadata": {"file_path": "docs/core/records/content-hash.mdx", "file_name": "content-hash.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/records/content-hash.mdx", "header_path": "/"}, "hash": "75f16fe4bb0c334f22e1c5e826d774dc273b913517a0bda86487d5b3a9741d95", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "08b4e7a6-d9ed-4988-8703-22952b3271e1", "node_type": "1", "metadata": {"header_path": "/The Content record/What does it do?/"}, "hash": "8ef17e3bd7a607a4673b2214a414399ca8085d7653d51cc9e9d14665ad95a231", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## What does it do?\nThe Content record lets you point your ENS name to a decentralized resource. The location that record resolves to will allow a user to enter your ENS name into their browser's address bar and display your decentralized website.\n\n:::info Compatible Browsers\nFor ENS resolution in the browser address bar to work, the browser needs to be compatible with ENS or have the Metamask extension installed. ### ENS Compatible browsers\nSome browsers which are more oriented towards Web3 support ENS right out of the box:\n - <Link to=\"https://brave.com\"><b>Brave Browser</b></Link>\n - <Link to=\"https://www.opera.com\"><b>Opera Browser</b></Link>\n \nOther browsers will need to have an extension installed for it to work, such as the Metamask browser extension:\n - <Link to=\"https://www.google.com/chrome\"><b>Google Chrome</b></Link>\n - <Link to=\"https://www.mozilla.org\"><b>Mozilla Firefox</b></Link>\n:::", "mimetype": "text/plain", "start_char_idx": 523, "end_char_idx": 940, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bbaa1797-b014-4b73-a1ea-a7d9d0e8b723": {"__data__": {"id_": "bbaa1797-b014-4b73-a1ea-a7d9d0e8b723", "embedding": null, "metadata": {"file_path": "docs/core/records/content-hash.mdx", "file_name": "content-hash.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/records/content-hash.mdx", "header_path": "/The Content record/", "customer_id": 1, "source_url": "docs/core/records/content-hash.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["protocol", "different", "protocols", "description", "interplanetary", "filesystem", "supported", "decentralized", "supports", "several", "where", "storage"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e8814ff885859f19a3428f8f919b0a0cb6bee9f7", "node_type": "4", "metadata": {"file_path": "docs/core/records/content-hash.mdx", "file_name": "content-hash.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/records/content-hash.mdx"}, "hash": "b776586fdf836d9cf7c39d4eba076bf9cec46e0739427abc0158eb638cf50529", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "08b4e7a6-d9ed-4988-8703-22952b3271e1", "node_type": "1", "metadata": {"file_path": "docs/core/records/content-hash.mdx", "file_name": "content-hash.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/records/content-hash.mdx", "header_path": "/The Content record/What does it do?/"}, "hash": "26b1b1d8dde751d7628e71952e0c5662245748a5111418799b3fce5f9db258af", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "71a4a0aa-80e1-41d5-a80c-143cb7d90bc6", "node_type": "1", "metadata": {"header_path": "/The Content record/"}, "hash": "5182256e93cde811a59efe2d96c7c6c44c32a7487786b62fd8e658da996a759a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Supported protocols\nENS supports several different decentralized storage protocols where you can host your website:\n\n:::info Supported protocols\n| Protocol    | Description                      |\n| ----------- | -------------------------------- |\n| IPFS & IPNS | The Interplanetary Filesystem    |\n| Arweave     | The PermaWeb Hard drive          |\n| Onion 2 & 3 | The Tor Project                  |\n| Sia         | Sia decentralized data storage   |\n| Swarm (bzz) | Swarm decentralized data storage |\n:::\n\n:::caution\nENS does not support Web2 URLs in the content record.\n:::", "mimetype": "text/plain", "start_char_idx": 1438, "end_char_idx": 2016, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "71a4a0aa-80e1-41d5-a80c-143cb7d90bc6": {"__data__": {"id_": "71a4a0aa-80e1-41d5-a80c-143cb7d90bc6", "embedding": null, "metadata": {"file_path": "docs/core/records/content-hash.mdx", "file_name": "content-hash.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/records/content-hash.mdx", "header_path": "/The Content record/", "customer_id": 1, "source_url": "docs/core/records/content-hash.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["content", "record", "zadok7", "custom", "records", "information", "service"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e8814ff885859f19a3428f8f919b0a0cb6bee9f7", "node_type": "4", "metadata": {"file_path": "docs/core/records/content-hash.mdx", "file_name": "content-hash.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/records/content-hash.mdx"}, "hash": "b776586fdf836d9cf7c39d4eba076bf9cec46e0739427abc0158eb638cf50529", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bbaa1797-b014-4b73-a1ea-a7d9d0e8b723", "node_type": "1", "metadata": {"file_path": "docs/core/records/content-hash.mdx", "file_name": "content-hash.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/records/content-hash.mdx", "header_path": "/The Content record/"}, "hash": "38fdfc51b0bd8d74417a7e93810754b57973504765b94f34df19848e64c27d8a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## How to set the Content record\n:::info How-to\nFor information on how to set the Content record, see:\n - <Link to=\"/howto/set-record\"><b>How-To:</b> Set a record</Link>\n::: ---\nlast_update:\n  author: zadok7\ntags:\n  - text records\n  - custom records\n  - service keys\nkeywords: [text record, text records, custom record, custom records, service key, service keys]\n--- # Custom records\nYou can add custom text records to your ENS name outside of the standard fields available. ENS records are infinitely extensible, meaning that there is no limit to the type and amount of text record data your ENS name can hold.", "mimetype": "text/plain", "start_char_idx": 2018, "end_char_idx": 2191, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c11483b9-b3a3-4059-9803-21268465efaa": {"__data__": {"id_": "c11483b9-b3a3-4059-9803-21268465efaa", "embedding": null, "metadata": {"file_path": "docs/core/records/custom-records.mdx", "file_name": "custom-records.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/records/custom-records.mdx", "header_path": "/Custom records/", "customer_id": 1, "source_url": "docs/core/records/custom-records.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["already", "common", "notation", "storing", "imagine", "reverse", "default", "manager", "there", "service", "fields"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3cf4d46cddebf7ea75ef3ec2ff4bc98c611cab00", "node_type": "4", "metadata": {"file_path": "docs/core/records/custom-records.mdx", "file_name": "custom-records.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/records/custom-records.mdx"}, "hash": "681c22de8dac83fcf92a139a1382ce67f0c1cab9b9d1a28883466e033fc97610", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "376c9f30-b77c-41ee-9e0e-54483f99610d", "node_type": "1", "metadata": {"file_path": "docs/core/records/custom-records.mdx", "file_name": "custom-records.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/records/custom-records.mdx", "header_path": "/"}, "hash": "527b23b13cc2bd6e18e051dd64610838fbca0b1cbc355d3c4e6bd9da63e0881d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c9c69454-683e-4e96-a44a-218ad670a4cb", "node_type": "1", "metadata": {"header_path": "/Custom records/"}, "hash": "4238e51af034060cb54ab33fee2b521516f78304e76a456d3328868bc4e4e438", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Service keys\nService keys are made up of a reverse dot notation sequence. For example, the ENS Manager App already has fields for common services. There are 5 default service keys for storing key-value data.\n\n<BrowserWindow url=\"https://app.ens.domains\">\n  <p align=\"center\">\n    <div style={{'background-color': \"#f5f6f7\", 'padding': \"25px\"}}>\n      <Image img=\"/img/custom-records-1.png\"/>\n    </div>\n  </p>\n</BrowserWindow>\n\nService keys can be hierarchical. As an example, imagine the service key: \ncom.example.shipping.vendor \n\nThe text value for this record might reference a public API key specific to a shipping vendor of example.com.", "mimetype": "text/plain", "start_char_idx": 441, "end_char_idx": 1086, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c9c69454-683e-4e96-a44a-218ad670a4cb": {"__data__": {"id_": "c9c69454-683e-4e96-a44a-218ad670a4cb", "embedding": null, "metadata": {"file_path": "docs/core/records/custom-records.mdx", "file_name": "custom-records.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/records/custom-records.mdx", "header_path": "/Custom records/", "customer_id": 1, "source_url": "docs/core/records/custom-records.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ethrecord", "forward", "address", "record", "resolution", "cthulu", "custom", "information", "ethaddress"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3cf4d46cddebf7ea75ef3ec2ff4bc98c611cab00", "node_type": "4", "metadata": {"file_path": "docs/core/records/custom-records.mdx", "file_name": "custom-records.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/records/custom-records.mdx"}, "hash": "681c22de8dac83fcf92a139a1382ce67f0c1cab9b9d1a28883466e033fc97610", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c11483b9-b3a3-4059-9803-21268465efaa", "node_type": "1", "metadata": {"file_path": "docs/core/records/custom-records.mdx", "file_name": "custom-records.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/records/custom-records.mdx", "header_path": "/Custom records/"}, "hash": "97623038c8fe7a4c241d1ebc8cc076dc01a9cf1d3a0297982aca71b9d3ad1fd9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## How to add a Custom Record\n:::info how-to\nFor more information on how to add a Custom Record, see:\n<Link to=\"/howto/add-custom-record\"><b>How-To:</b> Add a Custom Record</Link>\n::: ---\ntitle: ETH Address\nlast_update:\n  author: cthulu\ntags:\n  - ETH Address\n  - ethaddress\n  - ethrecord\n  - Address record\n  - Forward resolution\nkeywords: [eth address, address record, address, forward resolution]\n--- # The ETH Address record\n```mermaid\n%%{\n  init: {\n    'flowchart': {\n      'curve': 'linear'\n      } } }%%\n      \ngraph LR;\nA(ETH Address Record);\nB(ENS Public Resolver);\nC(snowowl.eth);\n\nclassDef active stroke-width:4px;\nclassDef inactive stroke-dasharray: 5 5;\n\nclass A active;\nclass B,C inactive;\n\nA --> B --> C;\n```", "mimetype": "text/plain", "start_char_idx": 1088, "end_char_idx": 1271, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0cf66a8d-9f40-4c10-b2cc-347a0021aaf0": {"__data__": {"id_": "0cf66a8d-9f40-4c10-b2cc-347a0021aaf0", "embedding": null, "metadata": {"file_path": "docs/core/records/eth-address.mdx", "file_name": "eth-address.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/records/eth-address.mdx", "header_path": "/The ETH Address record/", "customer_id": 1, "source_url": "docs/core/records/eth-address.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["primary", "ethereum", "providing", "address", "usually", "record", "because", "funds", "required", "determines", "summary", "records", "where", "setting"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d12917a004424ffb54be29563b144bcc93b1b4dd", "node_type": "4", "metadata": {"file_path": "docs/core/records/eth-address.mdx", "file_name": "eth-address.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/records/eth-address.mdx"}, "hash": "1bd3d48f388ee7c9580bc1fc12df1148f74c073473e6b708cabf574dbc55a013", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bde18652-bed8-435d-acd6-81bc9afb30b9", "node_type": "1", "metadata": {"file_path": "docs/core/records/eth-address.mdx", "file_name": "eth-address.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/records/eth-address.mdx", "header_path": "/"}, "hash": "fd3da603a4c2271e36987a1979e26eb8ecacc06baa6ee1a6c6f4fc7b6d3076e0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## What does it do?\nThe `ETH` Address record is one of the main records of your ENS name. It determines where Ethereum funds sent to it ends up, as well as providing the `forward resolution` required when setting up a <Link to=\"/core/records/primary-name\"><b>Primary name</b></Link>.\n\nIf you find that an ENS name you own doesn't show up in the Primary Name drop-down list for your wallet, it's usually because the `ETH Address` record isn't set to it.\n\n:::info summary\nThe ETH Address record...\n - Determines to where funds sent to the ENS name ends up\n - Provides the `Forward resolution` required to set a `Primary name` in a wallet \n:::\n\n:::info Resources\nTo find out how to set the `ETH Address` record or for more information about the Primary Name, see\n - <Link to=\"/howto/add-wallet-address\"><b>How-To: </b>Add a wallet address</Link>\n - <Link to=\"/core/records/primary-name\"><b>Records:</b> Primary Name</Link>\n:::", "mimetype": "text/plain", "start_char_idx": 540, "end_char_idx": 1463, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "41c442b3-edb6-4555-8977-b122675ffd68": {"__data__": {"id_": "41c442b3-edb6-4555-8977-b122675ffd68", "embedding": null, "metadata": {"file_path": "docs/core/records/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/records/index.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/core/records/index.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["primary", "works", "identity", "doccardlist", "resolution", "cthulu", "import", "records", "wallet", "primaryname"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3936833acdb985f1ac97c2f994a3c5af3d6cbd7a", "node_type": "4", "metadata": {"file_path": "docs/core/records/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/records/index.mdx"}, "hash": "414a4738edb81e0e8559a27ebab0e09a722bf31e75c4ba4e52547b90ac36f5c5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Records\n\n```mdx-code-block\nimport DocCardList from '@theme/DocCardList';\n\n<DocCardList />\n``` ---\nlast_update:\n  author: cthulu\ntitle: Primary Name\ntags:\n  - primary\n  - primary name\n  - primaryname\n  - identity\nkeywords: [primary, primary name, primaryname, identity, did, wallet name, set primary]\n--- # The Primary name ## How name resolution works\n\nThe Primary name is your reverse record responsible for resolving your wallet address to your ENS name, effectively helping DApps and other services display your ENS name based on your *Ethereum* wallet address.\n\nThe easiest way to understand it is to consider that name resolution works in two directions:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 95, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1c820e9b-0b62-4610-a60e-8de41a890354": {"__data__": {"id_": "1c820e9b-0b62-4610-a60e-8de41a890354", "embedding": null, "metadata": {"file_path": "docs/core/records/primary-name.mdx", "file_name": "primary-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/records/primary-name.mdx", "header_path": "/The Primary name/How name resolution works/", "customer_id": 1, "source_url": "docs/core/records/primary-name.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["forward", "graph", "simply", "reverse", "record", "resolution", "points", "determined", "wallet", "where"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "04022fd873e8f9fb7ab865b3c31feb0767d860d1", "node_type": "4", "metadata": {"file_path": "docs/core/records/primary-name.mdx", "file_name": "primary-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/records/primary-name.mdx"}, "hash": "2eca03456803baf6bb83e6c1836f9f1d6174e0be2188ec537121263c91891d02", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7575b5b5-466c-46a3-a34d-135a7f068e0e", "node_type": "1", "metadata": {"file_path": "docs/core/records/primary-name.mdx", "file_name": "primary-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/records/primary-name.mdx", "header_path": "/The Primary name/"}, "hash": "06c650d23b0fbdb09f2efa8cfc6602ca6dd7ee8bdaf7338301518a83d0c0d3d6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "458e6f24-d4b9-4ba7-a920-f3041bf5023c", "node_type": "1", "metadata": {"header_path": "/The Primary name/How name resolution works/"}, "hash": "67e2ce2a1379fe1b6961aa7ebb8a223fab0335c239d59bbe1c25e8598dfc7a69", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Forward resolution\n```mermaid\n%%{\n  init: {\n    'flowchart': {\n      'curve': 'linear'\n      } } }%%\n      \ngraph LR;\nA(Your ENS Name);\nB(Your wallet address);\n\nA-->B;\n```\nForward resolution is simply where your name points to and is determined by the `ETH Address` record set on your ENS name. ### Reverse resolution\n```mermaid\n%%{\n  init: {\n    'flowchart': {\n       'curve': 'linear'\n      } } }%%\n\ngraph LR;\nA(Your ENS Name);\nB(Your wallet address);\n\nB-->A;\n```\nReverse resolution is where your wallet points to and is determined by the `Primary name` record set in your wallet.", "mimetype": "text/plain", "start_char_idx": 569, "end_char_idx": 867, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8ac3787c-19b8-419a-b246-2f665478c2a1": {"__data__": {"id_": "8ac3787c-19b8-419a-b246-2f665478c2a1", "embedding": null, "metadata": {"file_path": "docs/core/records/primary-name.mdx", "file_name": "primary-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/records/primary-name.mdx", "header_path": "/The Primary name/", "customer_id": 1, "source_url": "docs/core/records/primary-name.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["primary", "record", "learn", "resolution", "cthulu", "resolved", "resolver"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "04022fd873e8f9fb7ab865b3c31feb0767d860d1", "node_type": "4", "metadata": {"file_path": "docs/core/records/primary-name.mdx", "file_name": "primary-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/records/primary-name.mdx"}, "hash": "2eca03456803baf6bb83e6c1836f9f1d6174e0be2188ec537121263c91891d02", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "458e6f24-d4b9-4ba7-a920-f3041bf5023c", "node_type": "1", "metadata": {"file_path": "docs/core/records/primary-name.mdx", "file_name": "primary-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/records/primary-name.mdx", "header_path": "/The Primary name/How name resolution works/"}, "hash": "1d0c7b2ef117238107f60e0119a616cd547b48d9e75a3faff55f5f28ee6fea76", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## How to set a Primary name\nTo learn how to set a Primary name, see:\n:::info How-to\n<Link to=\"/howto/set-primary-name\"><b>How-to:</b> Set a Primary name</Link>\n::: ---\ntitle: Resolver\nlast_updated:\n  author: cthulu\ntags:\n  - resolver\n  - name resolution\n  - resolved\n  - resolver record\nkeywords: [resolver, resolved, name resolution, resolver record]\n--- # The Resolver Record\n\nThe Resolver field for an ENS name is normally set to the `ENS Public Resolver` contract which helps resolve your ENS name into usable records like wallet addresses, avatars, etc. This is similar to how DNS helps resolve regular domain names into usable records like IP addresses.\n\nThere are a wide variety of records that can be set and resolved depending on your use case.\n\nSome examples are:\n\n - **Wallet address records**  \n *Contains records about your various wallet addresses, so that funds can be sent to them.*\n  \n - **Avatar record**  \n *Contains a link to an image stored as an NFT or on a website and used to visually represent your ENS name.*\n  \n - **Social links**  \n *Useful links to, for example, your GitHub, LinkedIn, or Twitter profiles.*", "mimetype": "text/plain", "start_char_idx": 1158, "end_char_idx": 1322, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "feb7323d-0286-47c4-84a7-00fa591b1e8b": {"__data__": {"id_": "feb7323d-0286-47c4-84a7-00fa591b1e8b", "embedding": null, "metadata": {"file_path": "docs/core/records/resolver.mdx", "file_name": "resolver.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/records/resolver.mdx", "header_path": "/The Resolver Record/", "customer_id": 1, "source_url": "docs/core/records/resolver.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["going", "expanding", "unset", "public", "default", "manager", "0x231b0ee14048e9dccd1d247744d114a4eb5e8e63", "resolver", "scrolling", "setting", "changed"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "eae5aa6e20649d718e1f654bbad8fad1f4306033", "node_type": "4", "metadata": {"file_path": "docs/core/records/resolver.mdx", "file_name": "resolver.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/records/resolver.mdx"}, "hash": "e06ec3b8d6f8f6d367deec5990a6b324685f342e03cf0e30b31ba31eb45c0222", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "98508ec2-8a36-4a9c-a6cb-42503452b23c", "node_type": "1", "metadata": {"file_path": "docs/core/records/resolver.mdx", "file_name": "resolver.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/records/resolver.mdx", "header_path": "/"}, "hash": "39bc1e68df9d84e29300f52d89f4fce9676ce09e5730d26e68d7fb69aa573164", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## ENS Public Resolver\nIf the resolver is unset or you've changed it you can set it back to the default in the [ENS Manager App](https://app.ens.domains) by going to the ENS name, scrolling down and expanding `Advanced settings`, and setting the Resolver to the `ENS Public Resolver`:\n```\n0x231b0Ee14048e9dCcD1d247744d114a4EB5E8E63 \n```\n\n:::info\n - The **new** ENS Public Resolver contract: `0x231b0Ee14048e9dCcD1d247744d114a4EB5E8E63`\n - The **old** ENS Public Resolver contract: `0x4976fb03C32e5B8cfe2b6cCB31c09Ba78EBaBa41`  \n   _the old ENS Public Resolver contract will continue to work and should not cause any issues._\n:::", "mimetype": "text/plain", "start_char_idx": 975, "end_char_idx": 1603, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f594911f-f8dc-4086-af71-e46a0ce3af12": {"__data__": {"id_": "f594911f-f8dc-4086-af71-e46a0ce3af12", "embedding": null, "metadata": {"file_path": "docs/core/records/social.mdx", "file_name": "social.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/records/social.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/core/records/social.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["github", "social", "media", "twitter", "telegram", "discord", "cthulu", "contains", "records", "reddit", "manager"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "79e275ce268d61858dadd6852d0cfb89bbc83c0e", "node_type": "4", "metadata": {"file_path": "docs/core/records/social.mdx", "file_name": "social.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/records/social.mdx"}, "hash": "08f7496d45460008d7d484ad1e511c4d5b799178cef86ca6d0f5c7323105c944", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c0487b4c-ca95-4684-8fba-be998c4a9d49", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "22ffdff6eda5bd23c268d3b023412f6f72b94c7523da52eb2dad380ad372ba9b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ntitle: Social\nlast_update:\n  author: cthulu\ntags:\n  - Social media\n  - Discord\n  - Twitter\n  - GitHub\n  - Reddit\n  - Telegram\nkeywords: [social, social media, discord, twitter, github, reddit, telegram]\n--- # Social media records\nThe ENS Manager App contains several standard record fields which you can use to provide various social media and development accounts. Any amount of custom records can also be created.\n\n<center><br/>\n\n| Service  | Record name    | Example username | Details                |\n| -------- | -------------- | ---------------- | ---------------------- |\n| Discord  | `com.discord`  | *username#1234*  | Remove the leading `@` |\n| Twitter  | `com.twitter`  | *username*       | Remove the leading `@` |\n| GitHub   | `com.github`   | *username*       |                        |\n| Reddit   | `com.reddit`   | *username*       |                        |\n| Telegram | `org.telegram` | *username*       |                        |\n\n</center><br/>\n\n:::caution Note\n**These services do not yet have ENS integration, so changing the records will only affect certain custom services that look this information up.**  \n:::", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 210, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "74e781b7-666f-4848-a4d1-be06e9734d90": {"__data__": {"id_": "74e781b7-666f-4848-a4d1-be06e9734d90", "embedding": null, "metadata": {"file_path": "docs/core/records/social.mdx", "file_name": "social.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/records/social.mdx", "header_path": "/Social media records/", "customer_id": 1, "source_url": "docs/core/records/social.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["simply", "profile", "changing", "twitter", "display", "discord", "provides", "information", "change"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "79e275ce268d61858dadd6852d0cfb89bbc83c0e", "node_type": "4", "metadata": {"file_path": "docs/core/records/social.mdx", "file_name": "social.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/records/social.mdx"}, "hash": "08f7496d45460008d7d484ad1e511c4d5b799178cef86ca6d0f5c7323105c944", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c0487b4c-ca95-4684-8fba-be998c4a9d49", "node_type": "1", "metadata": {"file_path": "docs/core/records/social.mdx", "file_name": "social.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/records/social.mdx", "header_path": "/"}, "hash": "bf2d320cd8460a9a8250666277c40950241bea8cb1a7954a4fe10a9608329908", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e98a517f-1925-4c85-99c4-de0834215bab", "node_type": "1", "metadata": {"header_path": "/Social media records/"}, "hash": "c9f4bdf1b897133361143d87056faa75ef01d58c1295d43a0996387170c23169", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Changing my Twitter name\nTwitter does not *yet* have ENS integration, so to change your Twitter name to display your ENS name you'd simply go to your profile and change your name to your ENS name.\n:::info how-to\nFor more information on how to set a Twitter name, see:\n - <Link to=\"/howto/set-twitter-name\"><b>How-To:</b> Set Twitter name</Link>\n::: ## Changing my Discord name\nENS provides a Discord record: `com.discord` which can be used to provide your Discord username to anyone who looks up your ENS name. An example use case is to verify that the ENS name is owned by a specific Discord user.\n\nTo set it, enter your username excluding the *@* but including the digits at the end. For example `User#1234`", "mimetype": "text/plain", "start_char_idx": 1143, "end_char_idx": 1494, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e149df3c-ec64-4ccb-9b77-6940e4a5ea94": {"__data__": {"id_": "e149df3c-ec64-4ccb-9b77-6940e4a5ea94", "embedding": null, "metadata": {"file_path": "docs/core/registration/fees.mdx", "file_name": "fees.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/fees.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/core/registration/fees.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["characters", "collect", "annual", "price", "dependent", "costs", "three", "cthulu", "number", "example", "register"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "377d94488afb12f6247eb287b1bac6a8e9652ef2", "node_type": "4", "metadata": {"file_path": "docs/core/registration/fees.mdx", "file_name": "fees.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/fees.mdx"}, "hash": "d744ac40e0686efaf4fa17255d33f1fc76214f90eff23b2c7ad207863ed60221", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b180ec98-ccc2-47b1-85e0-c6d8feebac55", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "29b3e720d1982890124a910da05197bdc8c66c2b4cae91e575d0fcb092646e3c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ntitle: Fees\nlast_update:\n  author: cthulu\ntags:\n  - fees\n  - costs\n  - price\nkeywords: [fees, costs, price, prices, name cost, ens cost, ens price, ens prices, cost to register]\ndescription: ENS fees, what they are and why we collect them.\n--- # ENS Name Fees\nHow much does it cost to register an ENS name?\n\n:::info Fees\nThe cost of an ENS name is dependent on how many characters it contains:\n\n| Number of characters | Example     | Annual fee  |\n| -------------------- | ----------- | ----------- |\n| 5+ characters        | `abcde.eth` | $5          |\n| 4 characters         | `abcd.eth`  | $160        |\n| 3 characters         | `abc.eth`   | $640        |\n\nThree and four-character names cost more to reflect the small number of these names available. If a name was recently released from the expiration grace period, a decaying price premium is also applied.\n:::", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 247, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "eafed595-944d-4e92-90a7-e4391cf4462d": {"__data__": {"id_": "eafed595-944d-4e92-90a7-e4391cf4462d", "embedding": null, "metadata": {"file_path": "docs/core/registration/fees.mdx", "file_name": "fees.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/fees.mdx", "header_path": "/ENS Name Fees/", "customer_id": 1, "source_url": "docs/core/registration/fees.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["complete", "looking", "after", "especially", "registration", "display", "costs", "prices", "might", "estimating", "fluctuate", "estimate", "manager"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "377d94488afb12f6247eb287b1bac6a8e9652ef2", "node_type": "4", "metadata": {"file_path": "docs/core/registration/fees.mdx", "file_name": "fees.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/fees.mdx"}, "hash": "d744ac40e0686efaf4fa17255d33f1fc76214f90eff23b2c7ad207863ed60221", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b180ec98-ccc2-47b1-85e0-c6d8feebac55", "node_type": "1", "metadata": {"file_path": "docs/core/registration/fees.mdx", "file_name": "fees.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/fees.mdx", "header_path": "/"}, "hash": "d1bfcd65fbb2d5a24213525fa65ab0d439b5c563c58d158af8473197822bd652", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a342de3d-4fe7-42a9-9ea3-425ee9dd9e68", "node_type": "1", "metadata": {"header_path": "/ENS Name Fees/"}, "hash": "bd11d4245254f1c233a59afd3ab72cd045c57ee72b44ae81b19bac5a7eb1fbbf", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Estimating costs\nWhen looking up an ENS name the <Link to=\"https://app.ens.domains\"><b>ENS Manager App</b></Link> will display a *rough* estimate of your registration cost:\n\n<BrowserWindow url=\"app.ens.domains\">\n  <p align=\"center\">\n    <div style={{'background-color': \"#f5f6f7\", 'padding': \"25px\"}}>\n      <Image img=\"/img/cost_to_register_img1.png\"/>\n    </div>\n  </p>\n</BrowserWindow>\n\nGas prices might fluctuate after this estimate, especially if you don't complete the registration immediately.\n\n:::note\nThe <Link to=\"https://app.ens.domains\"><b>ENS Manager App</b></Link> charges 10% more than the estimate shown to guard against fluctuations in ETH value, and the extra amount is returned to you in the same transaction.\n:::", "mimetype": "text/plain", "start_char_idx": 874, "end_char_idx": 1609, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a342de3d-4fe7-42a9-9ea3-425ee9dd9e68": {"__data__": {"id_": "a342de3d-4fe7-42a9-9ea3-425ee9dd9e68", "embedding": null, "metadata": {"file_path": "docs/core/registration/fees.mdx", "file_name": "fees.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/fees.mdx", "header_path": "/ENS Name Fees/", "customer_id": 1, "source_url": "docs/core/registration/fees.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["mechanism", "primary", "purpose", "overwhelmed", "registration", "becoming", "incentive", "speculatively", "enough", "registered", "secondary", "namespace", "prevent", "provide"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "377d94488afb12f6247eb287b1bac6a8e9652ef2", "node_type": "4", "metadata": {"file_path": "docs/core/registration/fees.mdx", "file_name": "fees.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/fees.mdx"}, "hash": "d744ac40e0686efaf4fa17255d33f1fc76214f90eff23b2c7ad207863ed60221", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "eafed595-944d-4e92-90a7-e4391cf4462d", "node_type": "1", "metadata": {"file_path": "docs/core/registration/fees.mdx", "file_name": "fees.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/fees.mdx", "header_path": "/ENS Name Fees/"}, "hash": "48df3069d64b88e38bd767459f2cd4866a842936957fa8c47abd64981c2c5022", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bb06f609-927d-4581-8f18-10d3dc5bac48", "node_type": "1", "metadata": {"header_path": "/ENS Name Fees/"}, "hash": "11ad54a54e2b8a5b0aa8d4fa4ddb57dfe3fb9d044b3327ce0b8e101baaf4f664", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Why are fees collected?\nThe primary purpose of registration fees is as an incentive mechanism to prevent the namespace\nfrom becoming overwhelmed with speculatively registered names.\n  \nA secondary purpose is to provide enough revenue to the DAO to fund the ongoing development of ENS.\n\n**ENS governance will not enact any fee other than for these purposes.**\n\n:::info\nFor more information about ENS fees see:\n[**ENS DAO Constitution**](https://docs.ens.domains/v/governance/ens-dao-constitution)\n- <Link to=\"https://constitution.ens.domains\"><b>ENS.Domains:</b> Constitution</Link>\n:::", "mimetype": "text/plain", "start_char_idx": 1611, "end_char_idx": 2199, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bb06f609-927d-4581-8f18-10d3dc5bac48": {"__data__": {"id_": "bb06f609-927d-4581-8f18-10d3dc5bac48", "embedding": null, "metadata": {"file_path": "docs/core/registration/fees.mdx", "file_name": "fees.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/fees.mdx", "header_path": "/ENS Name Fees/", "customer_id": 1, "source_url": "docs/core/registration/fees.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ethereum", "transactions", "fluctuates", "price", "registration", "depending", "using", "possible", "incur", "constantly", "pinpoint", "blockchain", "addition"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "377d94488afb12f6247eb287b1bac6a8e9652ef2", "node_type": "4", "metadata": {"file_path": "docs/core/registration/fees.mdx", "file_name": "fees.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/fees.mdx"}, "hash": "d744ac40e0686efaf4fa17255d33f1fc76214f90eff23b2c7ad207863ed60221", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a342de3d-4fe7-42a9-9ea3-425ee9dd9e68", "node_type": "1", "metadata": {"file_path": "docs/core/registration/fees.mdx", "file_name": "fees.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/fees.mdx", "header_path": "/ENS Name Fees/"}, "hash": "a9ec3bc7cc8febe948fd784070c9237bd880b285ee7e60bdc5a388fc85ac7f54", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "087ca012-9f70-44e0-acd5-3c692a73266f", "node_type": "1", "metadata": {"header_path": "/ENS Name Fees/"}, "hash": "00ef7bce870fbf30b92f570182670c816eaba61c8054cd2c0a626277564bd459", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Gas fees\nDue to the way Ethereum works, all transactions on the Ethereum blockchain incur a gas fee in addition to the registration fee.\nThe price of gas constantly fluctuates depending on Ethereum congestion.\n\nBy using a [gas tracker](https://etherscan.io/gastracker) it's possible to pinpoint times when gas is low to save money. ## Premium fee\nThere's an additional premium fee attached to newly expired names which starts at $100m and declines exponentially to $0 over 21 days.\n\n:::info Article\nFor more information about the expiration of names, see:\n\n- <Link to=\"./name-lifecycle\"><b>Registration: </b>Name Lifecycle</Link>\n:::", "mimetype": "text/plain", "start_char_idx": 2201, "end_char_idx": 2535, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d9b701a8-c51e-4c33-b1b7-fcbf14bf2412": {"__data__": {"id_": "d9b701a8-c51e-4c33-b1b7-fcbf14bf2412", "embedding": null, "metadata": {"file_path": "docs/core/registration/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/index.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/core/registration/index.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["importing", "integrating", "registration", "doccardlist", "domain", "cthulu", "import", "supercharge", "supports", "integrate", "names"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3cbcca882043c65501dbd4669c76b180993c0cba", "node_type": "4", "metadata": {"file_path": "docs/core/registration/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/index.mdx"}, "hash": "7bb9522d21852a91572a5032ee53fd058be87c2f9a63401d729183c84c028088", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Registration\n\n```mdx-code-block\nimport DocCardList from '@theme/DocCardList';\n\n<DocCardList />\n``` ---\nlast_update:\n  author: cthulu\ntags:\n  - dns\n  - domain\n  - .com\n  - .net\n  - .org\n  - .xyz\nkeywords: [ens dns, ens domain name system, add dns, link dns, import dns, integrate dns, use dns with ens, use ens with dns, use ens with domain name, com, net, org, xyz]\ndescription: Supercharge your DNS domain with ENS features!\n--- # Integrating DNS names\nENS supports importing DNS names into ENS, which makes it possible to use, for example, your `.com` `.net` or `.org` DNS name with ENS.\n  \nThere are a few pre-requisites to importing a DNS name into ENS:\n\n - The DNS name must have DNSSEC enabled with `RSA/SHA-256` or `ECDSA` keys\n   \n - An `_ens` `TXT record` must be created on the DNS name containing the wallet address to prove ownership of it.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 100, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b4944352-4ccc-43a1-8b4b-59015f34af1a": {"__data__": {"id_": "b4944352-4ccc-43a1-8b4b-59015f34af1a", "embedding": null, "metadata": {"file_path": "docs/core/registration/integrating-dns.mdx", "file_name": "integrating-dns.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/integrating-dns.mdx", "header_path": "/Integrating DNS names/", "customer_id": 1, "source_url": "docs/core/registration/integrating-dns.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["availability", "temporary", "cycle", "expiration", "through", "stages", "cthulu", "names", "information", "premium", "lifecycle"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "de6ce5afbe09f30a04d3bfabc40bdf429a7c63db", "node_type": "4", "metadata": {"file_path": "docs/core/registration/integrating-dns.mdx", "file_name": "integrating-dns.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/integrating-dns.mdx"}, "hash": "c8b53154cf1f8b8decdc2bb2c0d9e4a469c6378fcadb04abb60076f41f4a276a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "23a46b89-968c-4ec3-a93a-9aa34f2629b7", "node_type": "1", "metadata": {"file_path": "docs/core/registration/integrating-dns.mdx", "file_name": "integrating-dns.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/integrating-dns.mdx", "header_path": "/"}, "hash": "7b0e4fa85c08f7f69148dd18d5f3589bb7434bdb04d7f7376169fa07fdd471d0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## How to link a DNS name\n:::info how-to\nFor information on how to link a DNS name with ENS, see:\n<Link to=\"/howto/integrate-dns\"><b>How-To:</b> Link a DNS name</Link>\n::: ---\ntitle: Name lifecycle\nlast_update:\n  author: cthulu\ntags:\n  - expiration\n  - lifecycle\n  - life cycle\nkeywords: [expiration, lifecycle, life cycle, stages, name lifecycle]\ndescription: The stages an ENS name goes through from availability to expiration and temporary premium\n--- # The Lifecycle of an ENS Name\nENS names goes through several stages from being available to being registered and expiring. A life cycle of sorts.\nThis article tries to explain its life cycle in simple terms. As such, the diagrams are simplified.", "mimetype": "text/plain", "start_char_idx": 756, "end_char_idx": 927, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "787c832f-9d95-44d7-811e-3a61cfd43bb0": {"__data__": {"id_": "787c832f-9d95-44d7-811e-3a61cfd43bb0", "embedding": null, "metadata": {"file_path": "docs/core/registration/name-lifecycle.mdx", "file_name": "name-lifecycle.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/name-lifecycle.mdx", "header_path": "/The Lifecycle of an ENS Name/", "customer_id": 1, "source_url": "docs/core/registration/name-lifecycle.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["availability", "graph", "buyer", "normally", "active", "normal", "become", "inactive", "available", "without", "classdef", "class"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "56513518ae1f305e3f1ccee1d417cd291c2d1f3d", "node_type": "4", "metadata": {"file_path": "docs/core/registration/name-lifecycle.mdx", "file_name": "name-lifecycle.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/name-lifecycle.mdx"}, "hash": "b1febb56e4e55335c880fd461fcb426bf4fd7932067756037b4284b24fe1e2e3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "aac50c2d-1548-4938-9641-46af4d2950f7", "node_type": "1", "metadata": {"file_path": "docs/core/registration/name-lifecycle.mdx", "file_name": "name-lifecycle.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/name-lifecycle.mdx", "header_path": "/"}, "hash": "56461dc011e5d82f6bfc223848d508d14bb784f348ae4e625d1b6cfe1bf0d6ec", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6ce9320d-fb18-4d97-9091-d37f19480770", "node_type": "1", "metadata": {"header_path": "/The Lifecycle of an ENS Name/"}, "hash": "3645026676b09bff6fcf0477a83a6233cdd9b98a5d62652dbae117bd469eaa2c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Normal availability\n\n:::info Normal availability\n\n```mermaid\n%%{\n  init: {\n    'flowchart': {\n      'curve': 'linear'\n      } } }%%\n      \ngraph LR;\nA(Available);\nB(Registered);\nC(Expired);\nD(Grace Period);\nE(Temporary Premium);\n\nclassDef active stroke-width:4px;\nclassDef inactive stroke-dasharray: 5 5;\n\nclass A active;\n\nA-->B-->C-->D-->E;\nE -.-> A;\n```\nIf the `Temporary auction` ends without a buyer the ENS name will become available normally again without a temporary fee attached.\n::: ## Registered\n\n:::info Registered\n```mermaid\n%%{\n  init: {\n    'flowchart': {\n      'curve': 'linear'\n      } } }%%\n      \ngraph LR;\nA(Available);\nB(Registered);\nC(Expired);\nD(Grace Period);\nE(Temporary Premium);\n\nclassDef active stroke-width:4px;\nclassDef inactive stroke-dasharray: 5 5;\n\nclass A inactive;\nclass B active;\n\nA-->B-->C-->D-->E;\nE -.-> A;\n```\n:::\n\n<!--", "mimetype": "text/plain", "start_char_idx": 532, "end_char_idx": 1026, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e3895ca1-4eda-4b2a-bbdf-42006cc099ad": {"__data__": {"id_": "e3895ca1-4eda-4b2a-bbdf-42006cc099ad", "embedding": null, "metadata": {"file_path": "docs/core/registration/name-lifecycle.mdx", "file_name": "name-lifecycle.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/name-lifecycle.mdx", "header_path": "/The Lifecycle of an ENS Name/", "customer_id": 1, "source_url": "docs/core/registration/name-lifecycle.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["availability", "extend", "going", "begin", "after", "process", "registration", "registered", "normal", "period", "through", "towards"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "56513518ae1f305e3f1ccee1d417cd291c2d1f3d", "node_type": "4", "metadata": {"file_path": "docs/core/registration/name-lifecycle.mdx", "file_name": "name-lifecycle.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/name-lifecycle.mdx"}, "hash": "b1febb56e4e55335c880fd461fcb426bf4fd7932067756037b4284b24fe1e2e3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6ce9320d-fb18-4d97-9091-d37f19480770", "node_type": "1", "metadata": {"file_path": "docs/core/registration/name-lifecycle.mdx", "file_name": "name-lifecycle.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/name-lifecycle.mdx", "header_path": "/The Lifecycle of an ENS Name/"}, "hash": "2590748a442146cd433652001ef5753b61a7c844bab9673a122efcfb20e6e130", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "930b4f9b-e18c-4b56-b0ca-4b4a3de7a504", "node_type": "1", "metadata": {"header_path": "/The Lifecycle of an ENS Name/"}, "hash": "c1419235dca0ceaa07fe4f9c6e1a5c6c8f5f98c1d51352dda290966c2cd9eeca", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Registration period\n**Registration period** **\u2192** `Expiration` **\u2192** `Grace period` **\u2192** `Premium auction` **\u2192** `Normal availability`  \nThis is the period of time you've registered the ENS name for.  \nAfter the registration period is over, it will begin the process towards normal availability going through the post-expiration stages.\n  \nIf you want to extend your registration period, this can be done from the [ENS Manager App](https://app.ens.domains) --> ## Expired\n:::info Expired\n```mermaid\n%%{\n  init: {\n    'flowchart': {\n      'curve': 'linear'\n      } } }%%\n      \ngraph LR;\nA(Available);\nB(Registered);\nC(Expired);\nD(Grace Period);\nE(Temporary Premium);\n\nclassDef active stroke-width:4px;\nclassDef inactive stroke-dasharray: 5 5;\n\nclass A,B inactive;\nclass C active;\n\nA-->B-->C-->D-->E;\nE -.-> A;\n```\nThis is when your ENS name expires. After an ENS name has expired, it will still point to your records until it's released. However:\n:::\n:::caution\nAn ENS name cannot be sold, transferred, or changed after this point. To regain control of it you must extend the registration period.\n:::", "mimetype": "text/plain", "start_char_idx": 1395, "end_char_idx": 1859, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2da609ff-11d1-449d-ac40-e8043e8a1652": {"__data__": {"id_": "2da609ff-11d1-449d-ac40-e8043e8a1652", "embedding": null, "metadata": {"file_path": "docs/core/registration/name-lifecycle.mdx", "file_name": "name-lifecycle.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/name-lifecycle.mdx", "header_path": "/The Lifecycle of an ENS Name/", "customer_id": 1, "source_url": "docs/core/registration/name-lifecycle.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["graph", "classdef", "after", "grace", "expires", "active", "called", "inactive", "period", "enters", "class"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "56513518ae1f305e3f1ccee1d417cd291c2d1f3d", "node_type": "4", "metadata": {"file_path": "docs/core/registration/name-lifecycle.mdx", "file_name": "name-lifecycle.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/name-lifecycle.mdx"}, "hash": "b1febb56e4e55335c880fd461fcb426bf4fd7932067756037b4284b24fe1e2e3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "930b4f9b-e18c-4b56-b0ca-4b4a3de7a504", "node_type": "1", "metadata": {"file_path": "docs/core/registration/name-lifecycle.mdx", "file_name": "name-lifecycle.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/name-lifecycle.mdx", "header_path": "/The Lifecycle of an ENS Name/"}, "hash": "2933e0b659cfb30665c1619030a9fa035a76f527300f1ff9f1e6272b4cffe664", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cacd16c9-986c-430c-9b77-b072affd8166", "node_type": "1", "metadata": {"header_path": "/The Lifecycle of an ENS Name/"}, "hash": "dcf1f8a9bc730dbf0a4b179e8e28d5a54a77b979b0989acc6a61a572fa8e6efa", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Grace period\n:::info Grace Period\n```mermaid\n%%{\n  init: {\n    'flowchart': {\n      'curve': 'linear'\n      } } }%%\n      \ngraph LR;\nA(Available);\nB(Registered);\nC(Expired);\nD(Grace Period);\nE(Temporary Premium);\n\nclassDef active stroke-width:4px;\nclassDef inactive stroke-dasharray: 5 5;\n\nclass A,B,C inactive;\nclass D active;\n\nA-->B-->C-->D-->E;\nE -.-> A;\n```\nAfter an ENS name expires it enters into what's called a *Grace period*. This is a 90-day window provided as a courtesy where the owner can renew it and keep it at the regular renewal cost.\n:::\n:::caution\nIf you let the grace period run out you will lose the name.\n:::\n:::note\nKeep in mind that the renewal period must be from when the name expired, otherwise the grace period will just be moved up.\n\nFor example, if a name expired 60 days ago, and you only extend the registration for 30 days, then the name will *still* be expired, and the end of the grace period will just be extended for 30 days.\n:::", "mimetype": "text/plain", "start_char_idx": 2501, "end_char_idx": 3470, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cacd16c9-986c-430c-9b77-b072affd8166": {"__data__": {"id_": "cacd16c9-986c-430c-9b77-b072affd8166", "embedding": null, "metadata": {"file_path": "docs/core/registration/name-lifecycle.mdx", "file_name": "name-lifecycle.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/name-lifecycle.mdx", "header_path": "/The Lifecycle of an ENS Name/", "customer_id": 1, "source_url": "docs/core/registration/name-lifecycle.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["graph", "temporary", "classdef", "after", "grace", "active", "auction", "inactive", "premium", "class"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "56513518ae1f305e3f1ccee1d417cd291c2d1f3d", "node_type": "4", "metadata": {"file_path": "docs/core/registration/name-lifecycle.mdx", "file_name": "name-lifecycle.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/name-lifecycle.mdx"}, "hash": "b1febb56e4e55335c880fd461fcb426bf4fd7932067756037b4284b24fe1e2e3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2da609ff-11d1-449d-ac40-e8043e8a1652", "node_type": "1", "metadata": {"file_path": "docs/core/registration/name-lifecycle.mdx", "file_name": "name-lifecycle.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/name-lifecycle.mdx", "header_path": "/The Lifecycle of an ENS Name/"}, "hash": "649c2b14e095d813f00cf5486f15320b6cfb4c20900fe4995d3719e0005ef0a5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Temporary Premium Auction\n:::info Temporary Premium Auction\n```mermaid\n%%{\n  init: {\n    'flowchart': {\n      'curve': 'linear'\n    } } }%%\n      \ngraph LR;\nA(Available);\nB(Registered);\nC(Expired);\nD(Grace Period);\nE(Temporary Premium);\n\nclassDef active stroke-width:4px;\nclassDef inactive stroke-dasharray: 5 5;\n\nclass A,B,C,D inactive;\nclass E active;\n\nA-->B-->C-->D-->E;\nE -.-> A;\n```\nAfter the grace period ends the ENS name will enter into a `Temporary Premium Auction`.\nThis is a 21-day period where the ENS name is available for anyone to register with a temporary premium attached.\n\nFor more information about the Temporary Premium Auction and the Temporary Premium Fee, see\n - <Link to=\"/core/registration/temporary-premium\"><b>Registration: </b> Temporary Premium Auction</Link>\n:::", "mimetype": "text/plain", "start_char_idx": 3473, "end_char_idx": 4268, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4f60c508-7c26-4c37-ac3c-c45ce5b40fa9": {"__data__": {"id_": "4f60c508-7c26-4c37-ac3c-c45ce5b40fa9", "embedding": null, "metadata": {"file_path": "docs/core/registration/registration-steps.mdx", "file_name": "registration-steps.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/registration-steps.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/core/registration/registration-steps.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["request", "registration", "cthulu", "register", "there", "commit", "information", "steps"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "76520a818d77c80964d651e20eb8b4aa6ea824e5", "node_type": "4", "metadata": {"file_path": "docs/core/registration/registration-steps.mdx", "file_name": "registration-steps.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/registration-steps.mdx"}, "hash": "a100c776b1ad079d6c1600652f439abf559fbda5e9c0c024298a8e4185d69e29", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "50f40887-545c-458b-bdae-f477546ce9b4", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "90da7292e3ba82d6c076ab3ac7ac0a92a7188971e3029106471639910fcf374c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\nlast_update:\n  author: cthulu\ntags:\n  - registration\n  - step\n  - commit\n  - request to register\nkeywords: [registration, steps, commit, request to register, registration transaction, register transaction, ens registration, ens register, ens register a name, ens name registration, name registration, ens registration, get your own ens, get your own ens name]\ndescription: Information on the Registration Steps\n--- # Registration Steps\n\nThere are three steps involved in registering an ENS name that is intended to mitigate the problem of front-running.\n\nFront-running an ENS name would be possible if registration happened in one transaction.\nSomeone could \u201csee\u201d the single registration transaction in the mempool, and send the same transaction but with higher gas so the transaction they sent settles first.\n\nIn essence, \u201csniping\u201d the name before registration completes. For this reason, ENS name registrations rely on a `Reveal-Commitment Scheme`.\n\n:::info Learning Resource\nFor a step on step guide on registering a name, see\n - <Link to=\"/howto/registration\"><b>How-To: </b>Register a Name</Link>\n:::", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 418, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c0763d78-3ef0-475c-ae88-806c4bb5c3af": {"__data__": {"id_": "c0763d78-3ef0-475c-ae88-806c4bb5c3af", "embedding": null, "metadata": {"file_path": "docs/core/registration/registration-steps.mdx", "file_name": "registration-steps.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/registration-steps.mdx", "header_path": "/Registration Steps/", "customer_id": 1, "source_url": "docs/core/registration/registration-steps.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["graph", "stored", "class", "request", "hashes", "active", "generated", "local", "secret", "inactive", "commit", "register", "classdef", "storage"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "76520a818d77c80964d651e20eb8b4aa6ea824e5", "node_type": "4", "metadata": {"file_path": "docs/core/registration/registration-steps.mdx", "file_name": "registration-steps.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/registration-steps.mdx"}, "hash": "a100c776b1ad079d6c1600652f439abf559fbda5e9c0c024298a8e4185d69e29", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "50f40887-545c-458b-bdae-f477546ce9b4", "node_type": "1", "metadata": {"file_path": "docs/core/registration/registration-steps.mdx", "file_name": "registration-steps.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/registration-steps.mdx", "header_path": "/"}, "hash": "04fc3d06e62d5ef00682da6e6514a92a9e3fba86272393aaaa142e7a73dc99f4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "72a36960-0f71-4910-881a-ddb0a61d7f2e", "node_type": "1", "metadata": {"header_path": "/Registration Steps/"}, "hash": "9cee403f13de97de0e197bb35111a8713721e401e2bba34b161bcb15e3ddd8cc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Step 1: Request to register\n```mermaid\n%%{\n  init: {\n    'flowchart': {\n      'curve': 'linear'\n    } } }%%\n      \ngraph LR;\nA(Request to Register);\nB(Wait 60 Seconds);\nC(Register);\n\nclassDef active stroke-width:4px;\nclassDef inactive stroke-dasharray: 5 5;\n\nclass A active;\n\nA-->B-->C;\n```\n\nThe commit in Step 1 hashes a secret key generated and stored in your browser's local storage and hashes it with your wallet address and ENS name so that you can later register it without revealing it publicly.\n\nOnly the user knows the values of the cryptographic hash.\n\nOnce you've performed the `Request to Register` you have 7 days to complete Step 3 until the `Request to Register` becomes invalid.\n:::info\nNo registration fees are collected in this step. The fees are only for gas to save the commit transaction on-chain.\n:::\n\n:::caution\n - Keep in mind that while you have 7 days to complete the name registration, the name is ***not*** reserved for you during this time.\n - Clearing your browser cache will lose the saved commit, and start the registration process over again.\n:::\n\n<!--\n\n<BrowserWindow url=\"app.ens.domains\">\n  <Image img=\"/img/registration_3steps_img1.webp\"/>\n</BrowserWindow>\n\n-->", "mimetype": "text/plain", "start_char_idx": 1112, "end_char_idx": 2313, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "72a36960-0f71-4910-881a-ddb0a61d7f2e": {"__data__": {"id_": "72a36960-0f71-4910-881a-ddb0a61d7f2e", "embedding": null, "metadata": {"file_path": "docs/core/registration/registration-steps.mdx", "file_name": "registration-steps.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/registration-steps.mdx", "header_path": "/Registration Steps/", "customer_id": 1, "source_url": "docs/core/registration/registration-steps.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["final", "graph", "inactive", "minute", "begins", "waiting", "active", "period", "prevent", "classdef", "class"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "76520a818d77c80964d651e20eb8b4aa6ea824e5", "node_type": "4", "metadata": {"file_path": "docs/core/registration/registration-steps.mdx", "file_name": "registration-steps.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/registration-steps.mdx"}, "hash": "a100c776b1ad079d6c1600652f439abf559fbda5e9c0c024298a8e4185d69e29", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c0763d78-3ef0-475c-ae88-806c4bb5c3af", "node_type": "1", "metadata": {"file_path": "docs/core/registration/registration-steps.mdx", "file_name": "registration-steps.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/registration-steps.mdx", "header_path": "/Registration Steps/"}, "hash": "5487d684915717845dbf2f98d1a09d7e23078d37d1be937d3f97e8b6742c34ae", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ae85ca46-b6e0-4a1a-a204-54ad5e9f8f35", "node_type": "1", "metadata": {"header_path": "/Registration Steps/"}, "hash": "236088ae534f55ac5bdaa848c0f083a235a9c1611c0f46a829e149f55fd8de82", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Step 2: Wait for 1 minute\n```mermaid\n%%{\n  init: {\n    'flowchart': {\n      'curve': 'linear'\n    } } }%%\n      \ngraph LR;\nA(Request to Register);\nB(Wait 60 Seconds);\nC(Register);\n\nclassDef active stroke-width:4px;\nclassDef inactive stroke-dasharray: 5 5;\n\nclass A inactive;\nclass B active;\n\nA-->B-->C;\n```\n\nA 1 minute waiting period begins to prevent the front-running of the ENS name registration. This wait period acts as a \u201cbuffer\u201d so that in the final step, the revealed ENS name\u2019s registration cannot be front-run with a higher gas transaction.\n\n<!--\n\n<BrowserWindow url=\"app.ens.domains\">\n  <Image img=\"/img/registration_3steps_img2.webp\"/>\n</BrowserWindow>\n\n-->", "mimetype": "text/plain", "start_char_idx": 2315, "end_char_idx": 2987, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ae85ca46-b6e0-4a1a-a204-54ad5e9f8f35": {"__data__": {"id_": "ae85ca46-b6e0-4a1a-a204-54ad5e9f8f35", "embedding": null, "metadata": {"file_path": "docs/core/registration/registration-steps.mdx", "file_name": "registration-steps.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/registration-steps.mdx", "header_path": "/Registration Steps/", "customer_id": 1, "source_url": "docs/core/registration/registration-steps.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["graph", "minted", "transaction", "performed", "inactive", "transferred", "registration", "revealed", "active", "register", "classdef", "class"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "76520a818d77c80964d651e20eb8b4aa6ea824e5", "node_type": "4", "metadata": {"file_path": "docs/core/registration/registration-steps.mdx", "file_name": "registration-steps.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/registration-steps.mdx"}, "hash": "a100c776b1ad079d6c1600652f439abf559fbda5e9c0c024298a8e4185d69e29", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "72a36960-0f71-4910-881a-ddb0a61d7f2e", "node_type": "1", "metadata": {"file_path": "docs/core/registration/registration-steps.mdx", "file_name": "registration-steps.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/registration-steps.mdx", "header_path": "/Registration Steps/"}, "hash": "c2dfc6e2de73e33d2709eaacdef3b4613dbcfc532332bb5afee39234fb44c5eb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "073c5872-3de8-420d-92ce-a930982a41ab", "node_type": "1", "metadata": {"header_path": "/Registration Steps/"}, "hash": "ad5cb7bc3ebb53ccaf0a762cafa48946bb3a3caf124b9e600ae5a7cb6fb487ed", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Step 3: Register\n```mermaid\n%%{\n  init: {\n    'flowchart': {\n      'curve': 'linear'\n    } } }%%\n      \ngraph LR;\nA(Request to Register);\nB(Wait 60 Seconds);\nC(Register);\n\nclassDef active stroke-width:4px;\nclassDef inactive stroke-dasharray: 5 5;\n\nclass A,B inactive;\nclass C active;\n\nA-->B-->C;\n```\n\nThe ENS name registration is revealed on-chain. Once the registration transaction is performed and the ENS name is registered; the ERC-721 NFT for the ENS name is minted and transferred into the owner's wallet.\n\n<!--\n\n<BrowserWindow url=\"app.ens.domains\">\n  <Image img=\"/img/registration_3steps_img3.webp\"/>\n</BrowserWindow>\n\n-->", "mimetype": "text/plain", "start_char_idx": 2989, "end_char_idx": 3622, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "073c5872-3de8-420d-92ce-a930982a41ab": {"__data__": {"id_": "073c5872-3de8-420d-92ce-a930982a41ab", "embedding": null, "metadata": {"file_path": "docs/core/registration/registration-steps.mdx", "file_name": "registration-steps.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/registration-steps.mdx", "header_path": "/Registration Steps/", "customer_id": 1, "source_url": "docs/core/registration/registration-steps.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["transaction", "works", "hashed", "would", "minute", "since", "registration", "because", "miner", "conclusion", "their", "wanted", "register", "process"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "76520a818d77c80964d651e20eb8b4aa6ea824e5", "node_type": "4", "metadata": {"file_path": "docs/core/registration/registration-steps.mdx", "file_name": "registration-steps.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/registration-steps.mdx"}, "hash": "a100c776b1ad079d6c1600652f439abf559fbda5e9c0c024298a8e4185d69e29", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ae85ca46-b6e0-4a1a-a204-54ad5e9f8f35", "node_type": "1", "metadata": {"file_path": "docs/core/registration/registration-steps.mdx", "file_name": "registration-steps.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/registration-steps.mdx", "header_path": "/Registration Steps/"}, "hash": "022e68346a32127f3fc9c5c8c2a41592360024558b76ed10d997a97b1b63cde6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## In conclusion\nIf a miner wanted to try and front-run this process, they would have to send their own hashed secret, wait 1 minute and then register the name. Since The 3 step registration process works because they can't hold back your transaction for one minute, they will fail to do so, and the miner can't use the secret compared to the earlier hash. ---\nlast_update:\n  author: cthulu\ntags:\n  - renewals\n  - renew\n  - extension\n  - extend\n  - renew name\n  - extend name\n  - renew ens\n  - extend ens\nkeywords: [renewals, renew, extension, extend, renew name, extend name, renew ens, extend ens]\ndescription: Information on renewing ENS names\n---", "mimetype": "text/plain", "start_char_idx": 3624, "end_char_idx": 3980, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e24a3c59-b619-43a2-b2b0-b9be3996f1b5": {"__data__": {"id_": "e24a3c59-b619-43a2-b2b0-b9be3996f1b5", "embedding": null, "metadata": {"file_path": "docs/core/registration/renewals.mdx", "file_name": "renewals.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/renewals.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/core/registration/renewals.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["structure", "require", "ethereum", "development", "renewals", "network", "registration", "registering", "renewal", "currently", "continued", "addition"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "aab8e4a05906198ddd17f386b0da935faa14526d", "node_type": "4", "metadata": {"file_path": "docs/core/registration/renewals.mdx", "file_name": "renewals.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/renewals.mdx"}, "hash": "21a1cdd9d85904f354bd70e4bcd967ba02a8e9f08473df2ec6f9160d0d78eb88", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e18f1954-03bc-4c8b-9c3c-38a4e962818e", "node_type": "1", "metadata": {"file_path": "docs/core/registration/renewals.mdx", "file_name": "renewals.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/renewals.mdx", "header_path": "/"}, "hash": "4ebd0f2988822746d000fab423a90c2bd598a717ca17cfbcd528d15cd095e5bf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0c67e90f-45f3-4351-aa19-6eb0f1a27754", "node_type": "1", "metadata": {"header_path": "/Renewals/"}, "hash": "da3e9c048afaaca9b6a024a16cfdc6b75e6ce158a132a0a2f4375e853a3ae0df", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Renewals ## Renewal fees\nBoth registration and renewal fees help fund the continued development of the ENS protocol. The cost for renewal of your .eth name is currently the same fee structure as registering a new .eth name. In addition to the renewal fee, the Ethereum network will require a small gas fee to update the data on the blockchain.\n\n:::note Fees\nThe cost of an ENS name is dependent on how many characters it contains:\n\n| Number of characters | Annual fee  |\n| -------------------- | ----------- |\n| 5+ characters        | $5          |\n| 4 characters         | $160        |\n| 3 characters         | $640        |\n\n3 and 4 character names have a higher pricing to reflect the small number of these names available.\n:::\n\nAll .eth names have an expiration date, and in order to maintain ownership of the name, it must be renewed so that it has a valid expiration date. Any Ethereum wallet can pay the renewal fees to extend the expiration of a .eth 2LD (eg. name.eth); it does not have to be the owner of the name.\n\n:::caution\nWhen obtaining an existing ENS name on a secondary market like OpenSea, the expiration date remains the same upon transfer. Be sure to check the expiration date of a name if it is already owned!\n:::\n\nAdditionally, once a .eth name expires, there is a 90 day grace period in which the name can still be renewed and the owner will not lose the name.\n:::info Resources\nFor more information on name expiration, see\n - [**Registration:** Name Lifecycle (Grace Period)](/core/registration/name-lifecycle#grace-period)\n:::\n\nThe Name Wrapper contract makes it possible for parent .eth owners to create their own subname registrar and have their own renewal fees they set themselves as the owners. ENS does not dictate renewal fees on subnames, only renewal fees of .eth 2LD names (eg. name.eth).", "mimetype": "text/plain", "start_char_idx": 295, "end_char_idx": 305, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fe95ede8-4677-4e52-94d3-5b91deb7c766": {"__data__": {"id_": "fe95ede8-4677-4e52-94d3-5b91deb7c766", "embedding": null, "metadata": {"file_path": "docs/core/registration/temporary-premium.mdx", "file_name": "temporary-premium.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/temporary-premium.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/core/registration/temporary-premium.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["temporary", "cthulu", "auction", "premium", "dutch"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a158bb06ce772414a566b5ce58713e6c2ca78887", "node_type": "4", "metadata": {"file_path": "docs/core/registration/temporary-premium.mdx", "file_name": "temporary-premium.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/temporary-premium.mdx"}, "hash": "b4fda0025d3e3469fc06c86fb3dfa128aea9922fa10abcf4c0d94d204d6213fc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "71d96e07-b98f-45b6-bd72-73ff4e961c3b", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "06a097cd7dc26d9364713ce66ae1e0df8c184bc25aa3df52ac6790dc85dca89b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\nlast_update:\n  author: cthulu\ntags:\n  - premium\n  - temporary premium\n  - premium auction\n  - temporary premium auction\n  - auction\n  - dutch auction\n  - premium fee\n  - name premium\n  - premium name\nkeywords: [premium, temporary premium, premium auction, temporary premium auction, auction, dutch auction, premium fee, name premium, premium name]\ndescription: What is a Temporary Premium Auction?\n--- # Temporary Premium\n90 days after an ENS name has expired, when it exits the `Grace Period` it will go into a `Temporary Premium Auction`.\n```mermaid\n%%{\n  init: {\n    'flowchart': {\n      } } }%%\n      \ngraph LR;\nA(Available);\nB(Registered);\nC(Grace Period);\nD(Temporary Premium);\n\nclassDef active stroke-width:4px;\nclassDef inactive stroke-dasharray: 5 5;\n\nclass D active;\n\nA-->B-->|expiration|C-->D;\nC-.->|renewal|B;\nD-.->|Purchased during auction|B;\nD-.->|Not purchased during auction|A;\n```\nThis is a public auction where anyone can buy the name with a `Temporary Premium Fee` attached to it that lasts for 21 days.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 405, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "80b94b93-e890-4414-963d-25435a80cb7d": {"__data__": {"id_": "80b94b93-e890-4414-963d-25435a80cb7d", "embedding": null, "metadata": {"file_path": "docs/core/registration/temporary-premium.mdx", "file_name": "temporary-premium.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/temporary-premium.mdx", "header_path": "/Temporary Premium/", "customer_id": 1, "source_url": "docs/core/registration/temporary-premium.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["temporary", "declines", "intended", "price", "would", "million", "starts", "starting", "never", "premium", "anyone", "course"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a158bb06ce772414a566b5ce58713e6c2ca78887", "node_type": "4", "metadata": {"file_path": "docs/core/registration/temporary-premium.mdx", "file_name": "temporary-premium.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/temporary-premium.mdx"}, "hash": "b4fda0025d3e3469fc06c86fb3dfa128aea9922fa10abcf4c0d94d204d6213fc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "71d96e07-b98f-45b6-bd72-73ff4e961c3b", "node_type": "1", "metadata": {"file_path": "docs/core/registration/temporary-premium.mdx", "file_name": "temporary-premium.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/temporary-premium.mdx", "header_path": "/"}, "hash": "debb79ee59eab998cfabf5f42915ecb0a0605b3147ff3e3088b899be04edcf26", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "77623a74-ab1b-4594-9397-de480d7e9a46", "node_type": "1", "metadata": {"header_path": "/Temporary Premium/"}, "hash": "b579801c40062fecb383ee666df72fe12a33b88b115a2e2d338ba857f4dce000", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Temporary Premium Fee\nThe Temporary Premium Fee starts at $100 million and declines *exponentially* to $0 over the course of the 21 days. ## Why would anyone pay $100m for an ENS name?\nThe starting price of the `Temporary Premium Fee` was never intended to be one that anyone actually pays for a name. It was chosen to intentionally be out of reach so that names couldn't be instantly bought. ## Why have a Temporary Premium Auction in the first place?\nThe Temporary Premium Auction is an attempt at solving a problem we've had with ENS names. Where bots or traders would *instantly* snipe any expiring name.\nThe bots and traders would sometimes pay thousands of dollars *in gas fees alone* and up to $10k for the name itself just to make sure they got the name first.\n\nThis caused a situation where users who didn't use bots were never even to able see or interact with the website before the name had been bought.\nHaving a start price for the `Temporary Premium Auction` that's far higher than what anyone would be willing to pay ensures that this doesn't happen again.", "mimetype": "text/plain", "start_char_idx": 1029, "end_char_idx": 1169, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a130b221-b7ce-49e4-96d5-eef3d469fb1a": {"__data__": {"id_": "a130b221-b7ce-49e4-96d5-eef3d469fb1a", "embedding": null, "metadata": {"file_path": "docs/core/registration/temporary-premium.mdx", "file_name": "temporary-premium.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/temporary-premium.mdx", "header_path": "/Temporary Premium/", "customer_id": 1, "source_url": "docs/core/registration/temporary-premium.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["registation", "happens", "zadok7", "exponential", "related", "become", "normal", "during", "available", "resources", "premium", "governance"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a158bb06ce772414a566b5ce58713e6c2ca78887", "node_type": "4", "metadata": {"file_path": "docs/core/registration/temporary-premium.mdx", "file_name": "temporary-premium.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/temporary-premium.mdx"}, "hash": "b4fda0025d3e3469fc06c86fb3dfa128aea9922fa10abcf4c0d94d204d6213fc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2402f8e6-17d9-4c8e-864f-5a557ffd8f81", "node_type": "1", "metadata": {"file_path": "docs/core/registration/temporary-premium.mdx", "file_name": "temporary-premium.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/temporary-premium.mdx", "header_path": "/Temporary Premium/"}, "hash": "c660118cae380303dc40f8c51066230dc06f67ed9e44917c439a62d977ae8730", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## What happens if no one buys the name?\nIf no one buys the name during the 21 days the `temporary premium auction` is active, the `temporary premium fee` will become $0 and the name will become available at normal registation fees again.\n\n:::info Resources\nView the related governance proposal:\n - <Link to=\"https://docs.ens.domains/v/governance/governance-proposals/term-1/ep9-executable-change-to-exponential-premium-price-oracle\"><b>Change to Exponential Premium Oracle</b></Link> ---\nlast_update:\n  author: zadok7\ntags:\n  - What is ENS\n  - Explain ENS\n  - ENS Explained\nkeywords: [what is ens, explain ens, ens explained]\ndescription: An explanation of the Ethereum Name Service.\n---", "mimetype": "text/plain", "start_char_idx": 2107, "end_char_idx": 2591, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b635c152-cb2d-496d-abb3-91f5bc52fc2d": {"__data__": {"id_": "b635c152-cb2d-496d-abb3-91f5bc52fc2d", "embedding": null, "metadata": {"file_path": "docs/core/what-is-ens.mdx", "file_name": "what-is-ens.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/what-is-ens.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/core/what-is-ens.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ethereum", "built", "protocol", "service", "translate", "naming", "standards", "decentralized", "smart", "based", "adheres", "contracts", "blockchain"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "95610813901697287facb0b791e554c35a059060", "node_type": "4", "metadata": {"file_path": "docs/core/what-is-ens.mdx", "file_name": "what-is-ens.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/what-is-ens.mdx"}, "hash": "51f49f5810ac5c0f488528d74cad62433347479a06673cb86f69578bb12d8766", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d990f259-ea8f-43ff-91c8-b89ba6c6c7a8", "node_type": "1", "metadata": {"file_path": "docs/core/what-is-ens.mdx", "file_name": "what-is-ens.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/what-is-ens.mdx", "header_path": "/"}, "hash": "0cb1f4394a64cddd70475f02f13baf88f2cde149d7200443433b2365bf3d4f40", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "34ba79c9-0fec-4c82-823d-9b0ce3d8d32e", "node_type": "1", "metadata": {"header_path": "/What is ENS?/"}, "hash": "f1993d84ea393d7d1e6ca20aa3315a6759fe0925b7783829ec253fa3f918a387", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# What is ENS?\nThe Ethereum Name Service or ENS is the decentralized naming protocol that is built on the Ethereum blockchain. It adheres to open-source standards and is based on a set of decentralized smart contracts that translate blockchain addresses into human-readable names.\n\nYou can share your ENS name instead of a long, hard to remember crypto address. ENS is not solely a naming service for Ethereum, but in fact the wider blockchain ecosystem. ENS enables cross chain naming of long addresses such as crypto wallets, content hashes, metadata and even smart contracts.", "mimetype": "text/plain", "start_char_idx": 205, "end_char_idx": 783, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "34ba79c9-0fec-4c82-823d-9b0ce3d8d32e": {"__data__": {"id_": "34ba79c9-0fec-4c82-823d-9b0ce3d8d32e", "embedding": null, "metadata": {"file_path": "docs/core/what-is-ens.mdx", "file_name": "what-is-ens.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/what-is-ens.mdx", "header_path": "/What is ENS?/", "customer_id": 1, "source_url": "docs/core/what-is-ens.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["themed", "solves", "stored", "protocol", "ethereum", "triangle", "problem", "network", "three", "which", "points", "names", "blockchain"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "95610813901697287facb0b791e554c35a059060", "node_type": "4", "metadata": {"file_path": "docs/core/what-is-ens.mdx", "file_name": "what-is-ens.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/what-is-ens.mdx"}, "hash": "51f49f5810ac5c0f488528d74cad62433347479a06673cb86f69578bb12d8766", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b635c152-cb2d-496d-abb3-91f5bc52fc2d", "node_type": "1", "metadata": {"file_path": "docs/core/what-is-ens.mdx", "file_name": "what-is-ens.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/what-is-ens.mdx", "header_path": "/"}, "hash": "26ea0857b6f160434c1a49d94fc1b259897d96dd39d3fe9fe34a88a2f0f5c2bf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "989b7af6-1394-4d65-a1f9-5247147d18f4", "node_type": "1", "metadata": {"header_path": "/What is ENS?/"}, "hash": "0f8ddabb77101b3efcfeb1b7972084a6c30da644402cc6bcb2db87a611815d85", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Zooko's Triangle Problem\n\n<br/>\n<div className=\"container\" style={{'padding':'0px'}}>\n<div className=\"row\">\n<div className=\"col\">\n\nENS solves all three points of <Link to=\"https://en.wikipedia.org/wiki/Zooko%27s_triangle\"><b>Zooko\u2019s Triangle problem</b></Link>, which is to be a network protocol that is  \n - `human meaningful`\n - `secure`\n - `decentralized`\n\n</div>\n<div className=\"col\">\n\n![Docusaurus themed image](/img/what-is-ens-zooko-light.svg#gh-light-mode-only)![Docusaurus themed image](/img/what-is-ens-zooko-dark.svg#gh-dark-mode-only)\n\n</div>\n</div>\n</div>\n<br/>\n\nENS names are programmable, and stored on the Ethereum blockchain as ERC-721 NFT tokens and in the future as ERC-1155 NFT standard tokens.  \n  \nIt works similarly to DNS, in that ENS names resolve long random number and letter combinations into human-readable labels. Because this is done on the Ethereum blockchain, it is secure, decentralized, and transparent.  \n  \nIt is built on the foundation of Open Source programming, which means anyone can examine the code. The software code is published in the open, on the public blockchain ledger.", "mimetype": "text/plain", "start_char_idx": 786, "end_char_idx": 1908, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "989b7af6-1394-4d65-a1f9-5247147d18f4": {"__data__": {"id_": "989b7af6-1394-4d65-a1f9-5247147d18f4", "embedding": null, "metadata": {"file_path": "docs/core/what-is-ens.mdx", "file_name": "what-is-ens.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/what-is-ens.mdx", "header_path": "/What is ENS?/", "customer_id": 1, "source_url": "docs/core/what-is-ens.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ethereum", "known", "beginning", "naming", "early", "april", "presented", "within", "system", "foundation", "create", "concept", "launched", "blockchain"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "95610813901697287facb0b791e554c35a059060", "node_type": "4", "metadata": {"file_path": "docs/core/what-is-ens.mdx", "file_name": "what-is-ens.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/what-is-ens.mdx"}, "hash": "51f49f5810ac5c0f488528d74cad62433347479a06673cb86f69578bb12d8766", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "34ba79c9-0fec-4c82-823d-9b0ce3d8d32e", "node_type": "1", "metadata": {"file_path": "docs/core/what-is-ens.mdx", "file_name": "what-is-ens.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/what-is-ens.mdx", "header_path": "/What is ENS?/"}, "hash": "7308d49b6d8a3517f805402bdb76278ae5d2ff03ed0bcd933aa2ca2bb4ccf188", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9d824206-6431-4a0c-893e-d6b53444de1c", "node_type": "1", "metadata": {"header_path": "/What is ENS?/"}, "hash": "28248c0c5cf8a245d3d6e8ebbd378800c81a9ada7e9a568cc9edde8725df4867", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## The Beginning of ENS\nEarly on the need was known to create a naming system for the blockchain. The Ethereum blockchain launched in 2015 and by April 2016 the concept of ENS was presented within the Ethereum Foundation by former Google engineer Nick Johnson.\n\nIn May of 2017, the first ENS names were minted, starting with rilxxlir.eth. The TLD or Top-Level Domain is .eth, a reserved \u201cspecial use domain\u201d within the ICANN or (Internet Corporation for Assigned Names and Numbers) namespace organization.  \n  \nSince the .eth TLD is already reserved for the country of Ethiopia, though not in use, it will prevent future naming collisions with DNS and help ensure integration with pre-existing DNS systems.\n\n<p align=\"center\">\n  <Image img=\"/img/what-is-ens-enslogo.png\" width=\"500\" style={{'borderRadius': '8px'}} />\n</p>\n\nIn 2018, ENS branched off from the Ethereum Foundation into its own project with the help of a grant from the EF to continue development and building of the protocol.  \n  \nIt adheres to the concept of the <Link to=\"https://ethereum.foundation/infinitegarden\"><b>Infinite Garden</b></Link>. ENS is part of that <i>Infinite Garden</i> ethos, reflecting the \u201cnurture and grow, but do not control\u201d. The core team at ENS Labs was funded through grants, and had no VC investors.", "mimetype": "text/plain", "start_char_idx": 1910, "end_char_idx": 3206, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9d824206-6431-4a0c-893e-d6b53444de1c": {"__data__": {"id_": "9d824206-6431-4a0c-893e-d6b53444de1c", "embedding": null, "metadata": {"file_path": "docs/core/what-is-ens.mdx", "file_name": "what-is-ens.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/what-is-ens.mdx", "header_path": "/What is ENS?/", "customer_id": 1, "source_url": "docs/core/what-is-ens.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["known", "addresses", "network", "early", "order", "readable", "queried", "using", "computer", "machine", "information", "where", "resided", "locate"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "95610813901697287facb0b791e554c35a059060", "node_type": "4", "metadata": {"file_path": "docs/core/what-is-ens.mdx", "file_name": "what-is-ens.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/what-is-ens.mdx"}, "hash": "51f49f5810ac5c0f488528d74cad62433347479a06673cb86f69578bb12d8766", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "989b7af6-1394-4d65-a1f9-5247147d18f4", "node_type": "1", "metadata": {"file_path": "docs/core/what-is-ens.mdx", "file_name": "what-is-ens.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/what-is-ens.mdx", "header_path": "/What is ENS?/"}, "hash": "4dff6293c4e9c8c0ff7d64b996ca8e5ceaaaebd1a13ae2ec0e87d9c55e1e18e6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fd8601ba-a7ee-4188-ae16-7be783718a71", "node_type": "1", "metadata": {"header_path": "/What is ENS?/"}, "hash": "2b9a2ad7145bda15a27bdeed6629067d5b31b0da33e9605e26443391b1a11143", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## From DNS to ENS\nIn the early days of the Internet, information was queried by using IP (Internet Protocol) addresses.  \n  \nTo find information, a set of machine readable addresses had to be known in order to locate where that information resided on computer network servers.  \n  \nIP addresses are made of 4 sets of numbers separated by dots, using the numbers 0 through 255. It is a numerical label such as 142.250.64.142.  This particular  IP address is assigned to Google servers. This numerical format is easy for computers to work with, but not so much for humans to easily remember and reference.  \n  \nEventually, DNS or Domain Name Servers were created to bridge the gap between what machines needed to use and what humans were able to understand and remember.  \n  \nDNS takes care of translating or mapping domain names to IP addresses. Instead of typing 142.250.64.142 into a browser, DNS enables using the domain name of google.com.  \n  \nGo ahead and type in 142.250.64.142 into a web browser and it will route to the same place as google.com.\n\nSimilar to how DNS maps a domain name to an IP address, ENS was created to map blockchain addresses to human readable labels.  \n  \nAs a simple example, Vitalik.eth is an ENS name that maps to `0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045`, an Ethereum blockchain address.  \n  \nOne could send cryptocurrency to `0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045`, or instead send the same using Vitalik.eth which will resolve to the same blockchain address!\n\n<p align=\"center\">\n  <Image img=\"/img/what-is-ens-resolving-eth.gif\" style={{'borderRadius': '8px'}} />\n</p>\n\nDNS names can contain multiple records that point to various locations that Internet services use. For example, a DNS mail record, or MX record may point to the location of an email server used to deliver email to the correct servers.  \n  \nSimilarly, ENS stores data in records, but these records are not limited to only Ethereum addresses. Any number of records can be created, and resolved by smart contracts on the blockchain to find the location of those resources.  \n  \nENS records could contain a Bitcoin address, a content record, social media account handles, or profile images like avatars. Once those records are stored, developers can resolve these records programmatically using resolvers on the blockchain.\n\n:::info Resources\nFor more information on ENS records, see\n - <Link to=\"/core/records/eth-address\"><b>Records: </b>ETH Address</Link>\n - <Link to=\"/howto/set-record\"><b>How-To: </b>Set a Record</Link>\n:::\n\nIt is important to note that ENS does not seek to replace DNS. Instead, ENS builds on the groundwork DNS has already established, but using decentralized, secure, and censorship-resistant blockchain technology.  \n  \nBy design, ENS is forward-compatible with DNS. This is to prevent name collision with the existing DNS namespace.  \nIn fact, ENS extends beyond the .eth TLD. It is possible to import a DNS name into ENS, so that a .com can make use of the blockchain.  \n  \nImported DNS names can be used to store records on the blockchain which in turn can be resolved by smart contracts. As a simple example, if mywebsite.com was imported into ENS, then it would be possible to send cryptocurrency or digital assets like NFTs to mywebsite.com!\n:::info Resources\nFor more information on integrating DNS names with ENS, see\n - <Link to=\"/core/registration/integrating-dns\"><b>Records: </b>DNS Names</Link>\n - <Link to=\"/howto/integrate-dns\"><b>How-To: </b>Link a DNS name</Link>\n:::", "mimetype": "text/plain", "start_char_idx": 3208, "end_char_idx": 6730, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fd8601ba-a7ee-4188-ae16-7be783718a71": {"__data__": {"id_": "fd8601ba-a7ee-4188-ae16-7be783718a71", "embedding": null, "metadata": {"file_path": "docs/core/what-is-ens.mdx", "file_name": "what-is-ens.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/what-is-ens.mdx", "header_path": "/What is ENS?/", "customer_id": 1, "source_url": "docs/core/what-is-ens.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ethereum", "servers", "operators", "relies", "centralized", "smart", "decentralized", "based", "mapping", "there", "systems", "contracts", "names", "blockchain"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "95610813901697287facb0b791e554c35a059060", "node_type": "4", "metadata": {"file_path": "docs/core/what-is-ens.mdx", "file_name": "what-is-ens.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/what-is-ens.mdx"}, "hash": "51f49f5810ac5c0f488528d74cad62433347479a06673cb86f69578bb12d8766", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9d824206-6431-4a0c-893e-d6b53444de1c", "node_type": "1", "metadata": {"file_path": "docs/core/what-is-ens.mdx", "file_name": "what-is-ens.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/what-is-ens.mdx", "header_path": "/What is ENS?/"}, "hash": "b1cce2d6b676e14369022edb291c5237c884fee2bde3974baafd61dea444e2e7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## ENS and the Blockchain\nENS is based on a set of decentralized smart contracts on the Ethereum blockchain. As such, there is no need for centralized operators and systems that DNS relies upon.  \n  \nThe mapping of DNS names relies on root servers to answer queries for records stored in the root zone. This is how queries are performed using DNS lookups, which then find the TLD servers, which in turn locate the resources. There are a maximum total of 13 root name server addresses used for this.\n\nIn contrast, instead of relying on centralized root servers, ENS uses immutable and transparent smart contracts stored on the Ethereum blockchain to resolve records.  \n  \nResolver contracts handle translating names to addresses and or other data points. Because of the decentralized technology Ethereum is built on, ENS is able to avoid relying on centralized root servers as with DNS.  \n  \nThe code is stored on a decentralized network and that code is visible and transparent. In this way, ENS names are censorship-resistant. Geographical restrictions do not apply, as the information is securely stored on the global distributed blockchain.\n\n:::info Resources\nTo view the ENS Contracts GitHub repo, visit\n - <Link to=\"https://github.com/ensdomains/ens-contracts\"><b>Records: </b>GitHub: ens-contracts</Link>\n - <Link to=\"https://github.com/ensdomains/name-wrapper\"><b>How-To: </b>GitHub: namewrapper</Link>\n:::\n\nENS is an important set of infrastructure, built as a public good for humanity and not for profit.  \nIts development is driven by the community and for the community. No single entity or organization controls the protocol.  \n  \nIt is not possible for ownership of an ENS name to be infringed or censored as outlined in the <Link to=\"https://docs.ens.domains/v/governance/ens-dao-constitution\"><b>ENS DAO Constitution</b></Link>. Changes to the protocol are governed by the ENS DAO, a Decentralized Autonomous Organization, by way of <Link to=\"https://docs.ens.domains/v/governance/process\"><b>governance voting</b></Link>.", "mimetype": "text/plain", "start_char_idx": 6732, "end_char_idx": 8769, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7c94458b-fb45-495d-8f5d-e62b807637a5": {"__data__": {"id_": "7c94458b-fb45-495d-8f5d-e62b807637a5", "embedding": null, "metadata": {"file_path": "docs/dev-basics/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/index.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/dev-basics/index.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["basics", "sheet", "cheat", "developer", "quick", "doccardlist", "cheatsheet", "import", "integration", "integrate", "serenae"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c88f22fa49d1f5be1735f3753c868bacc95853e6", "node_type": "4", "metadata": {"file_path": "docs/dev-basics/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/index.mdx"}, "hash": "b39d33439e3ad757fc659ae0409f3a72e5ccd12fd8d9c8d8b6f5e76804a87558", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Developer Basics\n\n```mdx-code-block\nimport DocCardList from '@theme/DocCardList';\n\n<DocCardList /> # Integration\n\n```mdx-code-block\nimport DocCardList from '@theme/DocCardList';\n\n<DocCardList /> ---\ntitle: Quick cheat sheet\nlast_update:\n  author: serenae\ntags:\n - cheat sheet\n - cheatsheet\n - integrate\n - integrate dapp\n - dapp\n - dev\n - developer\n - developer basics\n - dev basics\nkeywords: [cheat sheet, cheatsheet, integrate, integrate dapp, dapp, dev, developer, developer basics, dev basics]\ndescription: How to integrate ENS with your dApp / Website\n---", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 100, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f0ba38f9-b506-42cc-b058-9a086b44da4c": {"__data__": {"id_": "f0ba38f9-b506-42cc-b058-9a086b44da4c", "embedding": null, "metadata": {"file_path": "docs/dev-basics/integration/quick-cheatsheet.mdx", "file_name": "quick-cheatsheet.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/integration/quick-cheatsheet.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/dev-basics/integration/quick-cheatsheet.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["setup", "sheet", "cheat", "website", "quick", "starting", "using", "react", "scratch", "ntegrating", "build"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e1f5e617cedcd3db41c3982126270037e57139ac", "node_type": "4", "metadata": {"file_path": "docs/dev-basics/integration/quick-cheatsheet.mdx", "file_name": "quick-cheatsheet.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/integration/quick-cheatsheet.mdx"}, "hash": "83538610bec7522c9e13016d344412c85cd33568c2f020dde16ec094a610d736", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8f8dea08-c5f9-4868-b54a-8b004305efb0", "node_type": "1", "metadata": {"file_path": "docs/dev-basics/integration/quick-cheatsheet.mdx", "file_name": "quick-cheatsheet.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/integration/quick-cheatsheet.mdx", "header_path": "/"}, "hash": "4f547b11f40b2c2640f848611ce17b0df41f6b174174a90b11a1fc876c1861d3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "deba1ba8-ac42-4c02-8e28-e1d298ff5ec7", "node_type": "1", "metadata": {"header_path": "/Quick cheat sheet/"}, "hash": "a338f7a3fe78a9e4a819521061802d5c9d88a9d49eeaf280866dcafd0361bbcb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Quick cheat sheet\nQuick cheat sheet to ntegrating ENS in your dApp / Website ## Starting from scratch with <Link to=\"https://create-react-app.dev/\">Create React App</Link> and <Link to=\"https://github.com/ethers-io/ethers.js/\">Ethers.js</Link>\n--- ### React Setup\n\nLet\u2019s build a new app using <Link to=\"https://create-react-app.dev/\">Create React App</Link>!\n\nTo start, you need:\n - Node.js and NPM. Installation instructions are <Link to=\"https://github.com/npm/cli\">here</Link> if you need them.\n - A browser with MetaMask installed\n\nIn your terminal, navigate to the folder you want to create the app in, and then type:\n\n```\nnpx create-react-app my-app\n```\n\nThen navigate into the new directory that was created, and start the app:\n\n```shell\ncd my-app\nnpm start\n```\n\nThe app server should be started, and you should see the default app in your browser:\n<BrowserWindow>\n  <p align='center'>\n    <div style={{'background':'#282c34'}}>\n      <Image img=\"/img/dev-basics/integration/integrate-ens-cheatsheet-1.png\"/>\n    </div>\n  </p>\n</BrowserWindow>", "mimetype": "text/plain", "start_char_idx": 367, "end_char_idx": 445, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c0cc0e00-486e-405a-b6cd-6818938f6922": {"__data__": {"id_": "c0cc0e00-486e-405a-b6cd-6818938f6922", "embedding": null, "metadata": {"file_path": "docs/dev-basics/integration/quick-cheatsheet.mdx", "file_name": "quick-cheatsheet.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/integration/quick-cheatsheet.mdx", "header_path": "/Quick cheat sheet/Starting from scratch with <Link to=\"https://create-react-app.dev/\">Create React App</Link> and <Link to=\"https://github.com/ethers-io/ethers.js/\">Ethers.js</Link>/", "customer_id": 1, "source_url": "docs/dev-basics/integration/quick-cheatsheet.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ethereum", "button", "folder", "creating", "const", "boilerplate", "create", "import", "inside", "wallet", "function", "connect"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e1f5e617cedcd3db41c3982126270037e57139ac", "node_type": "4", "metadata": {"file_path": "docs/dev-basics/integration/quick-cheatsheet.mdx", "file_name": "quick-cheatsheet.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/integration/quick-cheatsheet.mdx"}, "hash": "83538610bec7522c9e13016d344412c85cd33568c2f020dde16ec094a610d736", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "34c28b54-a16e-4998-b64c-16de66324921", "node_type": "1", "metadata": {"file_path": "docs/dev-basics/integration/quick-cheatsheet.mdx", "file_name": "quick-cheatsheet.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/integration/quick-cheatsheet.mdx", "header_path": "/Quick cheat sheet/Starting from scratch with <Link to=\"https://create-react-app.dev/\">Create React App</Link> and <Link to=\"https://github.com/ethers-io/ethers.js/\">Ethers.js</Link>/"}, "hash": "29dc353a3c47d1bf3922669e474d736ef8a81819b1741ade927da379f08efa09", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "132b5491-ba5a-4b66-be7b-9290b8533cff", "node_type": "1", "metadata": {"header_path": "/Quick cheat sheet/Starting from scratch with <Link to=\"https://create-react-app.dev/\">Create React App</Link> and <Link to=\"https://github.com/ethers-io/ethers.js/\">Ethers.js</Link>/"}, "hash": "4bdd869691beddc822835dd56c208fe791a27802017de218684279fad4f370a1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Creating a wallet connect button\n\nLet\u2019s say we want to connect an Ethereum wallet to the app. First, let\u2019s add a button to the page.\n\nCreate a new `Wallet.js` file inside the `src` folder of your app:\n```shell\nsrc/\n// highlight-next-line\n\u251c\u2500 Wallet.js\n```\n\n We\u2019ll fill it out with some boilerplate code:\n\n```js title=\"Wallet.js\"\nimport './Wallet.css';\n\nfunction Wallet() {\n    const connect = async () => {\n        // TODO\n    };\n\n    return <button className=\"wallet-connect\" onClick={connect}>Connect Wallet</button>;\n}\n\nexport default Wallet;\n```\n\nYou can also add some CSS styling if you want to make it look a bit nicer.  \n\nCreate a `Wallet.css` file inside the `src` folder too:\n```shell\nsrc/\n// highlight-next-line\n\u251c\u2500 Wallet.css\n\u251c\u2500 Wallet.js\n```\n\nAnd add some CSS styling to it:\n\n```css title=\"Wallet.css\"\nbutton.wallet-connect {\n    height: 50px;\n    font-size: 30px;\n    border-radius: 23px;\n    cursor: pointer;\n}\n```\n\nFinally, add that new Wallet component into your app by editing the `App.js` file:\n\n```js title=\"App.js\"\nimport logo from './logo.svg';\nimport './App.css';\nimport Wallet from './Wallet';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        // highlight-next-line\n        <Wallet/>\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        ...\n```\n\nThat `<Wallet/>` line adds the component into your app.\n\nAt this point, after saving everything, you should see the button appear!\n\n<BrowserWindow>\n  <p align='center'>\n    <div style={{'background':'#282c34'}}>\n      <Image img=\"/img/dev-basics/integration/integrate-ens-cheatsheet-2.png\"/>\n    </div>\n  </p>\n</BrowserWindow>\n\n---", "mimetype": "text/plain", "start_char_idx": 1423, "end_char_idx": 3091, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "132b5491-ba5a-4b66-be7b-9290b8533cff": {"__data__": {"id_": "132b5491-ba5a-4b66-be7b-9290b8533cff", "embedding": null, "metadata": {"file_path": "docs/dev-basics/integration/quick-cheatsheet.mdx", "file_name": "quick-cheatsheet.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/integration/quick-cheatsheet.mdx", "header_path": "/Quick cheat sheet/Starting from scratch with <Link to=\"https://create-react-app.dev/\">Create React App</Link> and <Link to=\"https://github.com/ethers-io/ethers.js/\">Ethers.js</Link>/", "customer_id": 1, "source_url": "docs/dev-basics/integration/quick-cheatsheet.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ethereum", "usestate", "actually", "include", "first", "something", "import", "ethers", "wallet", "install", "connect"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e1f5e617cedcd3db41c3982126270037e57139ac", "node_type": "4", "metadata": {"file_path": "docs/dev-basics/integration/quick-cheatsheet.mdx", "file_name": "quick-cheatsheet.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/integration/quick-cheatsheet.mdx"}, "hash": "83538610bec7522c9e13016d344412c85cd33568c2f020dde16ec094a610d736", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c0cc0e00-486e-405a-b6cd-6818938f6922", "node_type": "1", "metadata": {"file_path": "docs/dev-basics/integration/quick-cheatsheet.mdx", "file_name": "quick-cheatsheet.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/integration/quick-cheatsheet.mdx", "header_path": "/Quick cheat sheet/Starting from scratch with <Link to=\"https://create-react-app.dev/\">Create React App</Link> and <Link to=\"https://github.com/ethers-io/ethers.js/\">Ethers.js</Link>/"}, "hash": "cf53b09f2ea39b0c7c3828cd4a9e12b0fcbfbfa5dd2019b979ab0f374ec0dc42", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5b41f0fe-4414-4417-b7ee-1dce4ccc22a2", "node_type": "1", "metadata": {"header_path": "/Quick cheat sheet/Starting from scratch with <Link to=\"https://create-react-app.dev/\">Create React App</Link> and <Link to=\"https://github.com/ethers-io/ethers.js/\">Ethers.js</Link>/"}, "hash": "09293f01045bd59bc132006b54f08d77ac6cdd170b0c1e4a581c4817f1ea83a8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Connect an Ethereum wallet with Ethers.js\n\nFirst let\u2019s install Ethers in your app:\n\n```shell\nnpm i ethers\n```\n\nTo use it in your Wallet component, include this at the top:\n\n```js title=\"Wallet.js\"\nimport { useState } from 'react';\nimport { ethers } from 'ethers';\n```\n\nNow, let\u2019s actually do something when you click on the connect button.\n\nFirst off, we\u2019ll use the `useState method` to store some stateful information in our Wallet component. For more information on this React feature, <Link to=\"https://reactjs.org/docs/hooks-state.html\">see here</Link>.\n\n```js title=\"Wallet.js\"\nfunction Wallet() {\n    const [provider, setProvider] = useState();\n    const [address, setAddress] = useState();\n    ...\n```\n\nNext, we\u2019ll connect an Ethereum wallet using Ethers.js and MetaMask in your browser:\n\n```js title=\"Wallet.js\"\nconst connect = async () => {\n    let prov = provider;\n    if (!prov) {\n        prov = new ethers.providers.Web3Provider(window.ethereum);\n        setProvider(prov);\n    }\n\n    let address;\n    \n    await prov.send(\"eth_requestAccounts\", []);\n    const signer = prov.getSigner();\n    if (signer) {\n        address = await signer.getAddress();\n    }\n\n    setAddress(address);\n};\n```\n\n<Link to=\"https://docs.ethers.org/v5/getting-started/#getting-started--connecting\">See here</Link> for Ethers.js \u201cGetting Started\u201d documentation.<br/><br/>\n\nIn the code above, we\u2019re doing the same three steps:\n\n 1. Connect an Ethers.js Provider using `window.ethereum`\n 1. Request permission from MetaMask to connect the account, using `eth_requestAccounts`\n 1. Get the Signer\u2019s public address from the Provider\n\nWe\u2019ll also add some extra code so the wallet can be connected and disconnected:\n\n```js title=\"Wallet.js\"\nconst disconnect = () => {\n    setAddress('');\n};\n\nif (address) {\n    return <div className=\"wallet\">\n        <span>{address}</span>\n        <button className=\"wallet-disconnect\" onClick={disconnect}>\u2716</button>\n    </div>;\n} else {\n    return <button className=\"wallet-connect\" onClick={connect}>Connect Wallet</button>;\n}\n```\n\nAnd perhaps a bit more styling for the component too:\n\n```css title=\"Wallet.css\"\nbutton.wallet-disconnect {\n    border-radius: 50%;\n    height: 26px;\n    font-size: 13px;\n    cursor: pointer;\n}\n\ndiv.wallet {\n    display: inline-flex;\n    align-items: center;\n    height: 50px;\n}\n\ndiv.wallet span {\n    margin: -3px 7px 0px 7px;\n    font-size: 30px;\n}\n```\n\nNow when you click on `Connect Wallet`, it should open MetaMask and request to connect an account. If you allow the connection, then the page should automatically update with your account address:\n\n<BrowserWindow>\n  <p align='center'>\n    <div style={{'background':'#282c34'}}>\n      <Image img=\"/img/dev-basics/integration/integrate-ens-cheatsheet-3.png\"/>\n    </div>\n  </p>\n</BrowserWindow>\n\nHere is the full `Wallet.js` code at this point:\n\n```js title=\"Wallet.js\"\nimport { useState } from 'react';\nimport { ethers } from 'ethers';\nimport './Wallet.css';\n\nfunction Wallet() {\n    const [provider, setProvider] = useState();\n    const [address, setAddress] = useState();\n    \n    const connect = async () => {\n        let prov = provider;\n        if (!prov) {\n            prov = new ethers.providers.Web3Provider(window.ethereum);\n            setProvider(prov);\n        }\n\n        let address;\n        \n        await prov.send(\"eth_requestAccounts\", []);\n        const signer = prov.getSigner();\n        if (signer) {\n            address = await signer.getAddress();\n        }\n\n        setAddress(address);\n    };\n\n    const disconnect = () => {\n        setAddress('');\n    };\n\n    if (address) {\n        return <div className=\"wallet\">\n            <span>{address}</span>\n            <button className=\"wallet-disconnect\" onClick={disconnect}>\u2716</button>\n        </div>;\n    } else {\n        return <button className=\"wallet-connect\" onClick={connect}>Connect Wallet</button>;\n    }\n}\n\nexport default Wallet;\n```", "mimetype": "text/plain", "start_char_idx": 3093, "end_char_idx": 7015, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5b41f0fe-4414-4417-b7ee-1dce4ccc22a2": {"__data__": {"id_": "5b41f0fe-4414-4417-b7ee-1dce4ccc22a2", "embedding": null, "metadata": {"file_path": "docs/dev-basics/integration/quick-cheatsheet.mdx", "file_name": "quick-cheatsheet.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/integration/quick-cheatsheet.mdx", "header_path": "/Quick cheat sheet/Starting from scratch with <Link to=\"https://create-react-app.dev/\">Create React App</Link> and <Link to=\"https://github.com/ethers-io/ethers.js/\">Ethers.js</Link>/", "customer_id": 1, "source_url": "docs/dev-basics/integration/quick-cheatsheet.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["primary", "resolving", "makes", "const", "instead", "documentation", "hexadecimal", "their", "always", "integrate", "showing", "function"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e1f5e617cedcd3db41c3982126270037e57139ac", "node_type": "4", "metadata": {"file_path": "docs/dev-basics/integration/quick-cheatsheet.mdx", "file_name": "quick-cheatsheet.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/integration/quick-cheatsheet.mdx"}, "hash": "83538610bec7522c9e13016d344412c85cd33568c2f020dde16ec094a610d736", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "132b5491-ba5a-4b66-be7b-9290b8533cff", "node_type": "1", "metadata": {"file_path": "docs/dev-basics/integration/quick-cheatsheet.mdx", "file_name": "quick-cheatsheet.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/integration/quick-cheatsheet.mdx", "header_path": "/Quick cheat sheet/Starting from scratch with <Link to=\"https://create-react-app.dev/\">Create React App</Link> and <Link to=\"https://github.com/ethers-io/ethers.js/\">Ethers.js</Link>/"}, "hash": "5604a6db938b213094db7a52303963c58a15c254cc99eb15de72547a9ed61a02", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "efcab669-8add-436a-89f1-dcd1fb8e8ffd", "node_type": "1", "metadata": {"header_path": "/Quick cheat sheet/Starting from scratch with <Link to=\"https://create-react-app.dev/\">Create React App</Link> and <Link to=\"https://github.com/ethers-io/ethers.js/\">Ethers.js</Link>/"}, "hash": "90042d594d38953a1b4cc37260eeaada92787382864dc1e5832f57782ff119f0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Resolving the <Link to=\"/core/records/primary-name\">ENS Primary Name</Link>\n\nNow, instead of always showing an ugly hexadecimal address, let\u2019s integrate with ENS!  \nEthers.js makes this easy. <Link to=\"https://docs.ethers.org/v5/api/providers/provider/#Provider--ens-methods\">Here\u2019s their documentation page</Link> on it.\n\nYou just call `provider.lookupAddress(address)`. Let\u2019s add this to our app:\n\n```js title=\"Wallet.js\"\nfunction Wallet() {\n    const [provider, setProvider] = useState();\n    const [address, setAddress] = useState();\n    const [ensName, setEnsName] = useState();\n    \n    const connect = async () => {\n        let prov = provider;\n        if (!prov) {\n            prov = new ethers.providers.Web3Provider(window.ethereum);\n            setProvider(prov);\n        }\n\n        let address, ensName;\n        \n        await prov.send(\"eth_requestAccounts\", []);\n        const signer = prov.getSigner();\n        if (signer) {\n            address = await signer.getAddress();\n            // highlight-next-line\n            ensName = await prov.lookupAddress(address);\n        }\n\n        setAddress(address);\n        setEnsName(ensName);\n    };\n\n    const disconnect = () => {\n        setAddress('');\n        setEnsName('');\n    };\n\n    if (address) {\n        return <div className=\"wallet\">\n            <span>{ensName || address}</span>\n            <button className=\"wallet-disconnect\" onClick={disconnect}>\u2716</button>\n        </div>;\n    } else {\n        return <button className=\"wallet-connect\" onClick={connect}>Connect Wallet</button>;\n    }\n}\n```\n\nNow in your app, it should display the ENS Primary Name for your connected account:\n\n<BrowserWindow>\n  <p align='center'>\n    <div style={{'background':'#282c34'}}>\n      <Image img=\"/img/dev-basics/integration/integrate-ens-cheatsheet-4.png\"/>\n    </div>\n  </p>\n</BrowserWindow>", "mimetype": "text/plain", "start_char_idx": 7017, "end_char_idx": 8867, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "efcab669-8add-436a-89f1-dcd1fb8e8ffd": {"__data__": {"id_": "efcab669-8add-436a-89f1-dcd1fb8e8ffd", "embedding": null, "metadata": {"file_path": "docs/dev-basics/integration/quick-cheatsheet.mdx", "file_name": "quick-cheatsheet.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/integration/quick-cheatsheet.mdx", "header_path": "/Quick cheat sheet/Starting from scratch with <Link to=\"https://create-react-app.dev/\">Create React App</Link> and <Link to=\"https://github.com/ethers-io/ethers.js/\">Ethers.js</Link>/", "customer_id": 1, "source_url": "docs/dev-basics/integration/quick-cheatsheet.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["calling", "start", "those", "records", "avatar", "connected", "display", "their", "popular", "resolve", "resolving", "function", "simple"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e1f5e617cedcd3db41c3982126270037e57139ac", "node_type": "4", "metadata": {"file_path": "docs/dev-basics/integration/quick-cheatsheet.mdx", "file_name": "quick-cheatsheet.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/integration/quick-cheatsheet.mdx"}, "hash": "83538610bec7522c9e13016d344412c85cd33568c2f020dde16ec094a610d736", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5b41f0fe-4414-4417-b7ee-1dce4ccc22a2", "node_type": "1", "metadata": {"file_path": "docs/dev-basics/integration/quick-cheatsheet.mdx", "file_name": "quick-cheatsheet.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/integration/quick-cheatsheet.mdx", "header_path": "/Quick cheat sheet/Starting from scratch with <Link to=\"https://create-react-app.dev/\">Create React App</Link> and <Link to=\"https://github.com/ethers-io/ethers.js/\">Ethers.js</Link>/"}, "hash": "026249c336467f6bde6afeae1a47525ec35a584f326a9b1dc2c6775535870eb7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "851b7ae1-fca6-4d05-9051-1d86d0a32c28", "node_type": "1", "metadata": {"header_path": "/Quick cheat sheet/Starting from scratch with <Link to=\"https://create-react-app.dev/\">Create React App</Link> and <Link to=\"https://github.com/ethers-io/ethers.js/\">Ethers.js</Link>/"}, "hash": "90467d7ec7abd48f845d5570e9c5540be981e8bb91f5edaa270ca377d9f6f901", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Resolving the Avatar for an ENS name\n\nNow we have an ENS name for the connected account! So if they have records set on their ENS name, we can resolve those and display them in the app! Let\u2019s start with a popular one \u2013 the <Link to=\"/core/records/avatar\">Avatar record</Link>.\n\nPer the <Link to=\"https://docs.ethers.org/v5/api/providers/provider/#Provider--ens-methods\">Ethers.js documentation</Link>, resolving the avatar is as simple as calling `provider.getAvatar(name)`. Let\u2019s add that:\n\n```js title=\"Wallet.js\"\nfunction Wallet() {\n    const [provider, setProvider] = useState();\n    const [address, setAddress] = useState();\n    const [ensName, setEnsName] = useState();\n    const [avatar, setAvatar] = useState();\n    \n    const connect = async () => {\n        let prov = provider;\n        if (!prov) {\n            prov = new ethers.providers.Web3Provider(window.ethereum);\n            setProvider(prov);\n        }\n\n        let address, ensName, avatar;\n        \n        await prov.send(\"eth_requestAccounts\", []);\n        const signer = prov.getSigner();\n        if (signer) {\n            address = await signer.getAddress();\n            ensName = await prov.lookupAddress(address);\n            if (ensName) {\n                // highlight-next-line\n                avatar = await prov.getAvatar(ensName);\n            }\n        }\n\n        setAddress(address);\n        setEnsName(ensName);\n        setAvatar(avatar);\n    };\n\n    const disconnect = () => {\n        setAddress('');\n        setEnsName('');\n        setAvatar('');\n    };\n\n    if (address) {\n        return <div className=\"wallet\">\n            {avatar && (<img src={avatar} alt=\"avatar\"></img>)}\n            <span>{ensName || address}</span>\n            <button className=\"wallet-disconnect\" onClick={disconnect}>\u2716</button>\n        </div>;\n    } else {\n        return <button className=\"wallet-connect\" onClick={connect}>Connect Wallet</button>;\n    }\n}\n```\n\nWe can also add some more styling to make it look better:\n\n```css title=\"Wallet.css\"\ndiv.wallet img {\n    width: 50px;\n    height: 50px;\n    border-radius: 50%;\n}\n```\n\nNow you should see both the ENS Primary Name and Avatar in the app!\n\n<BrowserWindow>\n  <p align='center'>\n    <div style={{'background':'#282c34'}}>\n      <Image img=\"/img/dev-basics/integration/integrate-ens-cheatsheet-5.png\"/>\n    </div>\n  </p>\n</BrowserWindow>", "mimetype": "text/plain", "start_char_idx": 8869, "end_char_idx": 11230, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "851b7ae1-fca6-4d05-9051-1d86d0a32c28": {"__data__": {"id_": "851b7ae1-fca6-4d05-9051-1d86d0a32c28", "embedding": null, "metadata": {"file_path": "docs/dev-basics/integration/quick-cheatsheet.mdx", "file_name": "quick-cheatsheet.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/integration/quick-cheatsheet.mdx", "header_path": "/Quick cheat sheet/Starting from scratch with <Link to=\"https://create-react-app.dev/\">Create React App</Link> and <Link to=\"https://github.com/ethers-io/ethers.js/\">Ethers.js</Link>/", "customer_id": 1, "source_url": "docs/dev-basics/integration/quick-cheatsheet.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["other", "social", "profile", "media", "website", "addresses", "address", "these", "there", "records", "resolving"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e1f5e617cedcd3db41c3982126270037e57139ac", "node_type": "4", "metadata": {"file_path": "docs/dev-basics/integration/quick-cheatsheet.mdx", "file_name": "quick-cheatsheet.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/integration/quick-cheatsheet.mdx"}, "hash": "83538610bec7522c9e13016d344412c85cd33568c2f020dde16ec094a610d736", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "efcab669-8add-436a-89f1-dcd1fb8e8ffd", "node_type": "1", "metadata": {"file_path": "docs/dev-basics/integration/quick-cheatsheet.mdx", "file_name": "quick-cheatsheet.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/integration/quick-cheatsheet.mdx", "header_path": "/Quick cheat sheet/Starting from scratch with <Link to=\"https://create-react-app.dev/\">Create React App</Link> and <Link to=\"https://github.com/ethers-io/ethers.js/\">Ethers.js</Link>/"}, "hash": "7377a6848ffef1ced1d264ddd75b7bcf66ef6da5b8dd065c9179b60cc57e9998", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b0e34356-6a4d-4d64-8434-f67dc352d5d0", "node_type": "1", "metadata": {"header_path": "/Quick cheat sheet/Starting from scratch with <Link to=\"https://create-react-app.dev/\">Create React App</Link> and <Link to=\"https://github.com/ethers-io/ethers.js/\">Ethers.js</Link>/"}, "hash": "79806856a9641ea1d98d6b2db28df13e607bf6c24b8928c1b59f6b35fe8bf3e6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Resolving other ENS records\n\n:::info\nAn ENS name can be used as your web3 profile too! There are many other <Link to=\"/core/records\">records</Link> you can set other than the Avatar, like:\n\n - E-mail address\n - URL to some web2 website\n - Other social media links, like Twitter/etc\n - <Link to=\"/howto/decentralized-website\">Decentralized website</Link> (IPFS/Arweave/Tor/etc)\n - Other coin addresses like BTC\n - And much more!\n:::\n\nLet\u2019s add a few of these into our app as well. In Ethers.js, you can resolve other records by:\n\n 1. Get the resolver for the ENS name\n 1. Call the appropriate method on the resolver to resolve a particular record\n\nIn code this looks like:\n\n```js\nconst resolver = await provider.getResolver('ens.eth');\nconst urlRecord = await resolver.getText('url');\n```\n\nIn our app, after we get the avatar, let\u2019s add this:\n\n```js title=\"Wallet.js\"\nconst resolver = await prov.getResolver(ensName);\nif (resolver) {\n    otherRecords.email = await resolver.getText('email');\n    otherRecords.url = await resolver.getText('url');\n    otherRecords.twitter = await resolver.getText('com.twitter');\n}\n```\n\nThen we\u2019ll add some `<p>` blocks for each record:\n\n```html title=\"Wallet.js\"\nreturn <div>\n    <div className=\"wallet\">\n        {avatar && (<img src={avatar} alt=\"avatar\"></img>)}\n        <span>{ensName || address}</span>\n        <button className=\"wallet-disconnect\" onClick={disconnect}>\u2716</button>\n    </div>\n    <div>\n        {otherRecords.email && (<p>Email: <a href={`mailto:${otherRecords.email}`}>{otherRecords.email}</a></p>)}\n        {otherRecords.url && (<p>Website: <a href={otherRecords.url}>{otherRecords.url}</a></p>)}\n        {otherRecords.twitter && (<p>Twitter: <a href={`https://twitter.com/${otherRecords.twitter}`}>@{otherRecords.twitter}</a></p>)}\n    </div>\n</div>;\n```\n\nWe\u2019re not doing it here for this simple example, but it\u2019s probably a good idea to keep in mind input sanitization, and assume that any returned text values are untrusted input.\n\nAnyway, now those records will show up in the app if they\u2019re set on the ENS name!\n\n<BrowserWindow>\n  <p align='center'>\n    <div style={{'background':'#282c34'}}>\n      <Image img=\"/img/dev-basics/integration/integrate-ens-cheatsheet-6.png\"/>\n    </div>\n  </p>\n</BrowserWindow>", "mimetype": "text/plain", "start_char_idx": 11232, "end_char_idx": 13501, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b0e34356-6a4d-4d64-8434-f67dc352d5d0": {"__data__": {"id_": "b0e34356-6a4d-4d64-8434-f67dc352d5d0", "embedding": null, "metadata": {"file_path": "docs/dev-basics/integration/quick-cheatsheet.mdx", "file_name": "quick-cheatsheet.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/integration/quick-cheatsheet.mdx", "header_path": "/Quick cheat sheet/Starting from scratch with <Link to=\"https://create-react-app.dev/\">Create React App</Link> and <Link to=\"https://github.com/ethers-io/ethers.js/\">Ethers.js</Link>/", "customer_id": 1, "source_url": "docs/dev-basics/integration/quick-cheatsheet.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["final", "needed", "couple", "starter", "small", "example", "changes"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e1f5e617cedcd3db41c3982126270037e57139ac", "node_type": "4", "metadata": {"file_path": "docs/dev-basics/integration/quick-cheatsheet.mdx", "file_name": "quick-cheatsheet.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/integration/quick-cheatsheet.mdx"}, "hash": "83538610bec7522c9e13016d344412c85cd33568c2f020dde16ec094a610d736", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "851b7ae1-fca6-4d05-9051-1d86d0a32c28", "node_type": "1", "metadata": {"file_path": "docs/dev-basics/integration/quick-cheatsheet.mdx", "file_name": "quick-cheatsheet.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/integration/quick-cheatsheet.mdx", "header_path": "/Quick cheat sheet/Starting from scratch with <Link to=\"https://create-react-app.dev/\">Create React App</Link> and <Link to=\"https://github.com/ethers-io/ethers.js/\">Ethers.js</Link>/"}, "hash": "ca120aef07e887f6637258dce56db86e0af4f042d6ce33f8c5a3b7b0a3af96c6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f5697a90-f95b-46f4-a500-d123b7e6ed00", "node_type": "1", "metadata": {"header_path": "/Quick cheat sheet/"}, "hash": "323797f35ab29d1ac72ba6ebb330872aa51b7aacf2a2e902fccdc6d548050304", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Final code and live example\n\nYou can find the final code we used for this demo up on GitHub! We only needed to add our `Wallet.js` and `Wallet.css` files, and then make a couple of small changes to `App.js` and `package.json`.\n\n - <Link to=\"https://github.com/serenae-fansubs/react-ens-starter-app1/blob/main/src/Wallet.js\">Wallet.js</Link>\n - <Link to=\"https://github.com/serenae-fansubs/react-ens-starter-app1/blob/main/src/Wallet.css\">Wallet.css</Link>\n - <Link to=\"https://github.com/serenae-fansubs/react-ens-starter-app1/blob/main/src/App.js\">App.js</Link>\n - <Link to=\"https://github.com/serenae-fansubs/react-ens-starter-app1/blob/main/package.json\">package.json</Link>\n\nAnd here\u2019s a live example of the starter app!\n\n<BrowserWindow>\n  <div style={{'background':'#282c34'}}>\n    <iframe src=\"https://react-ens-starter-app1.vercel.app/\" width=\"100%\" height=\"500px\"/>\n  </div>\n</BrowserWindow>", "mimetype": "text/plain", "start_char_idx": 13503, "end_char_idx": 14406, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f5697a90-f95b-46f4-a500-d123b7e6ed00": {"__data__": {"id_": "f5697a90-f95b-46f4-a500-d123b7e6ed00", "embedding": null, "metadata": {"file_path": "docs/dev-basics/integration/quick-cheatsheet.mdx", "file_name": "quick-cheatsheet.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/integration/quick-cheatsheet.mdx", "header_path": "/Quick cheat sheet/", "customer_id": 1, "source_url": "docs/dev-basics/integration/quick-cheatsheet.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["start", "setup", "folder", "instead", "using", "everything", "first", "react", "create", "wagmi", "doing", "navigate", "ethers", "install"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e1f5e617cedcd3db41c3982126270037e57139ac", "node_type": "4", "metadata": {"file_path": "docs/dev-basics/integration/quick-cheatsheet.mdx", "file_name": "quick-cheatsheet.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/integration/quick-cheatsheet.mdx"}, "hash": "83538610bec7522c9e13016d344412c85cd33568c2f020dde16ec094a610d736", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b0e34356-6a4d-4d64-8434-f67dc352d5d0", "node_type": "1", "metadata": {"file_path": "docs/dev-basics/integration/quick-cheatsheet.mdx", "file_name": "quick-cheatsheet.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/integration/quick-cheatsheet.mdx", "header_path": "/Quick cheat sheet/Starting from scratch with <Link to=\"https://create-react-app.dev/\">Create React App</Link> and <Link to=\"https://github.com/ethers-io/ethers.js/\">Ethers.js</Link>/"}, "hash": "4ded163b57360f8a10c9113e8a2d155a32649bde737bfa780aee302078351fb0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b1e31ce1-041c-44e2-a540-d8d759689d37", "node_type": "1", "metadata": {"header_path": "/Quick cheat sheet/Using the <Link to=\"https://wagmi.sh/\">wagmi React Hooks</Link>/"}, "hash": "59937268e8e288babf6df37ea5bfd5b1221de53c7af2964e6e3db7aa12de1c24", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Using the <Link to=\"https://wagmi.sh/\">wagmi React Hooks</Link> ### Setup\n\nThis time, instead of doing everything from scratch, let\u2019s use the <Link to=\"https://wagmi.sh/\">wagmi React Hooks</Link>!\n\nWe\u2019ll start out the same way as the first demo. In your terminal, navigate to the folder you want to create the app in, and then type:\n\n```shell\nnpx create-react-app my-app\n```\n\nThen install `wagmi` and `ethers`:\n\n```shell\ncd my-app\nnpm i wagmi ethers\n``` ### Basic Wagmi Start\n\nThe <Link to=\"https://wagmi.sh/\">wagmi website</Link> shows a starter example, so let\u2019s use that.\n\nCreate a new `Profile.js` file inside the `src` folder of your app.\n\n```shell\nsrc/\n\u251c\u2500 App.js\n\u251c\u2500 package.json\n// highlight-next-line\n\u251c\u2500 Profile.js\n\u251c\u2500 Wallet.css\n\u251c\u2500 Wallet.js\n\n```\n\nWe\u2019ll fill it out with the example code:\n\n```js title=\"Profile.js\"\nimport { useAccount, useConnect, useDisconnect } from 'wagmi';\nimport { InjectedConnector } from 'wagmi/connectors/injected';\n\nfunction Profile() {\n  const { address, isConnected } = useAccount()\n  const { connect } = useConnect({\n    connector: new InjectedConnector(),\n  })\n  const { disconnect } = useDisconnect()\n \n  if (isConnected)\n    return (\n      <div>\n        Connected to {address}\n        <button onClick={() => disconnect()}>Disconnect</button>\n      </div>\n    )\n  return <button onClick={() => connect()}>Connect Wallet</button>\n}\n\nexport default Profile;\n```\n\nThen we\u2019ll edit `App.js` to include that new module:\n\n```js title=\"App.js\"\nimport { WagmiConfig, createClient } from 'wagmi';\nimport { getDefaultProvider } from 'ethers';\nimport Profile from './Profile';\nimport logo from './logo.svg';\nimport './App.css';\n\nconst client = createClient({\n  autoConnect: true,\n  provider: getDefaultProvider(),\n})\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <WagmiConfig client={client}>\n          <Profile />\n        </WagmiConfig>\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n```\n\nRun this in your terminal to start the web server:\n\n```shell\nnpm start\n```\n\nThe app should pop up in your browser, and you\u2019ll see that it already has some basic Connect / Disconnect functionality!\n\n<BrowserWindow>\n  <p align='center'>\n    <div style={{'background':'#282c34'}}>\n      <Image img=\"/img/dev-basics/integration/integrate-ens-cheatsheet-7.png\"/>\n    </div>\n  </p>\n</BrowserWindow>\n\n---", "mimetype": "text/plain", "start_char_idx": 14408, "end_char_idx": 14474, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1a7c6c77-8921-447d-a598-f695de5a16c7": {"__data__": {"id_": "1a7c6c77-8921-447d-a598-f695de5a16c7", "embedding": null, "metadata": {"file_path": "docs/dev-basics/integration/quick-cheatsheet.mdx", "file_name": "quick-cheatsheet.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/integration/quick-cheatsheet.mdx", "header_path": "/Quick cheat sheet/Using the <Link to=\"https://wagmi.sh/\">wagmi React Hooks</Link>/", "customer_id": 1, "source_url": "docs/dev-basics/integration/quick-cheatsheet.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["const", "examples", "display", "wagmi", "import", "integration", "their", "ensavatar", "adding", "several", "wallet", "isconnected", "function"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e1f5e617cedcd3db41c3982126270037e57139ac", "node_type": "4", "metadata": {"file_path": "docs/dev-basics/integration/quick-cheatsheet.mdx", "file_name": "quick-cheatsheet.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/integration/quick-cheatsheet.mdx"}, "hash": "83538610bec7522c9e13016d344412c85cd33568c2f020dde16ec094a610d736", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "90c93dd0-3353-4461-893b-f7d718099578", "node_type": "1", "metadata": {"file_path": "docs/dev-basics/integration/quick-cheatsheet.mdx", "file_name": "quick-cheatsheet.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/integration/quick-cheatsheet.mdx", "header_path": "/Quick cheat sheet/Using the <Link to=\"https://wagmi.sh/\">wagmi React Hooks</Link>/"}, "hash": "b7afcc5c1ddf12f46736352ef16cffac21dd90af863f7e4604bd1ff933a40597", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1781bb9a-d78b-40d5-ab6a-e3d30d3d85f5", "node_type": "1", "metadata": {"header_path": "/Quick cheat sheet/"}, "hash": "fbedd2c2accdfb7d62004debf3481581fbeea63bda8a2be085db316462a61703", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Adding ENS Integration with Wagmi\n\nWagmi also has several examples <Link to=\"https://wagmi.sh/examples\">here</Link>.  \nIn their <Link to=\"https://wagmi.sh/examples/connect-wallet#step-3-display-connected-account\">Connect Wallet example</Link> they show how to display the ENS name and Avatar.\n\nSo let\u2019s add that in:\n\n```js title=\"Profile.js\"\nimport {\n  useAccount,\n  useConnect,\n  useDisconnect,\n  useEnsAvatar,\n  useEnsName,\n} from 'wagmi'\n \nfunction Profile() {\n  const { address, connector, isConnected } = useAccount()\n  const { data: ensAvatar } = useEnsAvatar({ address })\n  const { data: ensName } = useEnsName({ address })\n  const { connect, connectors, error, isLoading, pendingConnector } =\n    useConnect()\n  const { disconnect } = useDisconnect()\n \n  if (isConnected) {\n    return (\n      <div>\n        <img src={ensAvatar} alt=\"ENS Avatar\" />\n        <div>{ensName ? `${ensName} (${address})` : address}</div>\n        <div>Connected to {connector.name}</div>\n        <button onClick={disconnect}>Disconnect</button>\n      </div>\n    )\n  }\n \n  return (\n    <div>\n      {connectors.map((connector) => (\n        <button\n          disabled={!connector.ready}\n          key={connector.id}\n          onClick={() => connect({ connector })}\n        >\n          {connector.name}\n          {!connector.ready && ' (unsupported)'}\n          {isLoading &&\n            connector.id === pendingConnector?.id &&\n            ' (connecting)'}\n        </button>\n      ))}\n \n      {error && <div>{error.message}</div>}\n    </div>\n  )\n}\n\nexport default Profile;\n```\n\nThose hooks `useEnsName` and `useEnsAvatar` will automatically load the ENS primary name and avatar for you!\n\n<BrowserWindow>\n  <p align='center'>\n    <div style={{'background':'#282c34'}}>\n      <Image img=\"/img/dev-basics/integration/integrate-ens-cheatsheet-8.png\"/>\n    </div>\n  </p>\n</BrowserWindow>\n\nNow you can get to styling and make it look however you want!", "mimetype": "text/plain", "start_char_idx": 17119, "end_char_idx": 19049, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1781bb9a-d78b-40d5-ab6a-e3d30d3d85f5": {"__data__": {"id_": "1781bb9a-d78b-40d5-ab6a-e3d30d3d85f5", "embedding": null, "metadata": {"file_path": "docs/dev-basics/integration/quick-cheatsheet.mdx", "file_name": "quick-cheatsheet.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/integration/quick-cheatsheet.mdx", "header_path": "/Quick cheat sheet/", "customer_id": 1, "source_url": "docs/dev-basics/integration/quick-cheatsheet.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["other", "setup", "sheet", "cheat", "getting", "quick", "started", "connected", "first", "currently", "provider", "ethers", "methods"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e1f5e617cedcd3db41c3982126270037e57139ac", "node_type": "4", "metadata": {"file_path": "docs/dev-basics/integration/quick-cheatsheet.mdx", "file_name": "quick-cheatsheet.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/integration/quick-cheatsheet.mdx"}, "hash": "83538610bec7522c9e13016d344412c85cd33568c2f020dde16ec094a610d736", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1a7c6c77-8921-447d-a598-f695de5a16c7", "node_type": "1", "metadata": {"file_path": "docs/dev-basics/integration/quick-cheatsheet.mdx", "file_name": "quick-cheatsheet.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/integration/quick-cheatsheet.mdx", "header_path": "/Quick cheat sheet/Using the <Link to=\"https://wagmi.sh/\">wagmi React Hooks</Link>/"}, "hash": "21c806af9e20d1e7fedfc2fe65e4e6d169daa0aa0bbd1f6c20f4467d668875f7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cc8ffbe6-0d03-4714-9eb9-7932747d9788", "node_type": "1", "metadata": {"header_path": "/Quick cheat sheet/Quick Cheat Sheet/"}, "hash": "7a270fed526cb3716d56cdf269a706ef07b55e0a8602d17da2590b10f197bbca", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Quick Cheat Sheet ### Getting started / Ethers.js setup\n\n1. **Install Ethers in your Node project**\n    - `npm i ethers`\n1. **Import Ethers in your code**\n    - `import { ethers } from 'ethers';`\n1. **Connect a Provider**\n    - `const provider = new ethers.providers.Web3Provider(window.ethereum);`\n    - Other methods <Link to=\"https://docs.ethers.org/v5/getting-started/#getting-started--connecting\">here</Link>\n1. **Get currently connected wallet**\n    - For MetaMask, first do this: `await provider.send(\"eth_requestAccounts\", []);`\n    - Then get the Signer: `const signer = prov.getSigner();`\n    - And finally, the public address: `const address = await signer.getAddress();`", "mimetype": "text/plain", "start_char_idx": 19051, "end_char_idx": 19071, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "70d3cca9-625d-4bd5-835b-5113f50de443": {"__data__": {"id_": "70d3cca9-625d-4bd5-835b-5113f50de443", "embedding": null, "metadata": {"file_path": "docs/dev-basics/integration/quick-cheatsheet.mdx", "file_name": "quick-cheatsheet.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/integration/quick-cheatsheet.mdx", "header_path": "/Quick cheat sheet/Quick Cheat Sheet/", "customer_id": 1, "source_url": "docs/dev-basics/integration/quick-cheatsheet.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["primary", "other", "const", "avatar", "await", "records", "resolver", "ensname"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e1f5e617cedcd3db41c3982126270037e57139ac", "node_type": "4", "metadata": {"file_path": "docs/dev-basics/integration/quick-cheatsheet.mdx", "file_name": "quick-cheatsheet.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/integration/quick-cheatsheet.mdx"}, "hash": "83538610bec7522c9e13016d344412c85cd33568c2f020dde16ec094a610d736", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cc8ffbe6-0d03-4714-9eb9-7932747d9788", "node_type": "1", "metadata": {"file_path": "docs/dev-basics/integration/quick-cheatsheet.mdx", "file_name": "quick-cheatsheet.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/integration/quick-cheatsheet.mdx", "header_path": "/Quick cheat sheet/Quick Cheat Sheet/"}, "hash": "500400628f9ffe056ad8f30d56db2798688407b8d032d01a8d5692ff60f2721e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fd60a9fa-cb25-49ee-b983-c99e2440f69b", "node_type": "1", "metadata": {"header_path": "/Quick cheat sheet/Quick Cheat Sheet/"}, "hash": "bf9fee86c4ad4b5e8ba671b2e0884d13d1cacac60ca0b0b2647a98e6f891b28d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Get ENS Primary Name\n\n```js\nconst ensName = await provider.lookupAddress(address);\n``` ### Get ENS Avatar\n\n```js\nconst avatar = await provider.getAvatar(ensName);\n``` ### Get Other ENS Text Records\n\n```js\nconst resolver = await provider.getResolver(ensName);\n\n// Text Records\nconst email = await resolver.getText('email');\nconst url = await resolver.getText('url');\nconst twitter = await resolver.getText('com.twitter');\n\n// Any other text record is the same, even custom text records\nconst myCustomRecord = await resolver.getText('mycustomrecord');\n```", "mimetype": "text/plain", "start_char_idx": 19739, "end_char_idx": 19829, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "41bc6c09-c165-4963-a6f9-0f5da0179860": {"__data__": {"id_": "41bc6c09-c165-4963-a6f9-0f5da0179860", "embedding": null, "metadata": {"file_path": "docs/dev-basics/integration/quick-cheatsheet.mdx", "file_name": "quick-cheatsheet.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/integration/quick-cheatsheet.mdx", "header_path": "/Quick cheat sheet/Quick Cheat Sheet/", "customer_id": 1, "source_url": "docs/dev-basics/integration/quick-cheatsheet.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["other", "addresses", "const", "address", "types", "using", "import", "await", "formatsbyname", "resolver", "ethaddress", "easily"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e1f5e617cedcd3db41c3982126270037e57139ac", "node_type": "4", "metadata": {"file_path": "docs/dev-basics/integration/quick-cheatsheet.mdx", "file_name": "quick-cheatsheet.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/integration/quick-cheatsheet.mdx"}, "hash": "83538610bec7522c9e13016d344412c85cd33568c2f020dde16ec094a610d736", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "41eca04f-b50c-403f-a1a6-b447364520d3", "node_type": "1", "metadata": {"file_path": "docs/dev-basics/integration/quick-cheatsheet.mdx", "file_name": "quick-cheatsheet.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/integration/quick-cheatsheet.mdx", "header_path": "/Quick cheat sheet/Quick Cheat Sheet/"}, "hash": "12af38b0f41dd24677ab67cafcb4c9c06aaa74ab7c5a92b8564cd592fee0aead", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Get Coin Addresses\n\n```js\n// Easily get other coin types using this\nimport { formatsByName } from '@ensdomains/address-encoder';\n\nconst resolver = await provider.getResolver(ensName);\n\n// ETH Address\nconst ethAddress = await resolver.getAddress();\n\n// Other Coin Addresses\nconst btcAddress = await resolver.getAddress(formatsByName['BTC'].coinType);\n``` ---\ntitle: Namehash, Labelhash, and Token IDs\nlast_update:\n  author: serenae\ntags:\n  - namehash\n  - labelhash\n  - name hash\n  - hash\n  - label hash\n  - token id\n  - tokenid\nkeywords: [namehash, name hash, hash, labelhash, label hash, tokenid, token id]\ndescription: Explaining how Token IDs are created and used in ENS\n---", "mimetype": "text/plain", "start_char_idx": 20300, "end_char_idx": 20657, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7f3f950a-7f8c-4ae7-b8ed-c4f426ff9749": {"__data__": {"id_": "7f3f950a-7f8c-4ae7-b8ed-c4f426ff9749", "embedding": null, "metadata": {"file_path": "docs/dev-basics/namehash.mdx", "file_name": "namehash.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namehash.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/dev-basics/namehash.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["certainly", "different", "numbers", "represent", "decimal", "these", "hexadecimal", "pieces", "encounter", "working", "overview", "value", "almost", "technical", "token"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4ec3e8d81b62c4cc78c1620ba3246141b0228ca9", "node_type": "4", "metadata": {"file_path": "docs/dev-basics/namehash.mdx", "file_name": "namehash.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namehash.mdx"}, "hash": "902c627569252cb172c37735b2c0eac6e2df2e345e7b3666ce557fb974106870", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "31dd1b13-dfab-403e-800f-81a8303dcff7", "node_type": "1", "metadata": {"file_path": "docs/dev-basics/namehash.mdx", "file_name": "namehash.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namehash.mdx", "header_path": "/"}, "hash": "b82c86e7a123a412668ebb168da6c9f9cfb45b44b88d6e93ec3392dd418061c8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "155a8c44-0589-4078-95b8-b8cf63fdf1eb", "node_type": "1", "metadata": {"header_path": "/Namehash, Labelhash, and Token IDs/"}, "hash": "6603aa13c3f9ce17c1ffc1864363b9735afa40d58e2bec78b97859b587676974", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Namehash, Labelhash, and Token IDs ## Overview\n\nWhen working with ENS from a technical side, you'll almost certainly encounter one of these long decimal or hexadecimal numbers that represent different pieces of an ENS name:\n\n| | |\n|-|-|\n| **Namehash** | A <Link to=\"https://en.wikipedia.org/wiki/Hash_function\">hash</Link> value that uniquely identifies a single ENS name. |\n| **Labelhash** | A <Link to=\"https://en.wikipedia.org/wiki/Hash_function\">hash</Link> value that identifies only a single part or \"label\" of an ENS name. |\n| **Token ID** | This is a unique identifier for an ENS NFT. |\n\nFor example, take the name `ens.eth`.\n\nThe **namehash** of `ens.eth` is:\n\n| | |\n|-|-|\n| Decimal | `35373739037748002394990259860942348737703776167876918520233297406984196933343` |\n| Hexadecimal | `0x4e34d3a81dc3a20f71bbdf2160492ddaa17ee7e5523757d47153379c13cb46df` |\n\nThe **labelhash** of `ens.eth` is:\n\n| | |\n|-|-|\n| Decimal | `42033647921836720708986079437023664695436352815832009766988496528855301124570`\n| Hexadecimal | `0x5cee339e13375638553bdf5a6e36ba80fb9f6a4f0783680884d92b558aa471da` |\n\nFor an unwrapped .eth 2LD (second-level domain), the **token ID** for the ERC-721 NFT is the same as the labelhash for the second-level part of the domain.\n\nLooking at `ens.eth`, the top-level part is `eth` and the second-level part is `ens`, which is also usually referred to as the label.\n\nSo the token ID for the NFT is the same as the labelhash listed above. It's the same number, just represented either in decimal or hexadecimal form. For NFT token IDs, in many cases you'll work with the decimal form.\n\nFor example, you will see that token ID in the URL of public explorers or marketplaces:\n\n<Tabs>\n<TabItem value=\"etherscan\" default>\n\nhttps\u200d://etherscan.io/nft/0x57f1887a8bf19b14fc0df6fd9b2acc9af147ea85/`42033647921836720708986079437023664695436352815832009766988496528855301124570`\n\n</TabItem>\n<TabItem value=\"OpenSea\">\n\nhttps\u200d://opensea.io/assets/ethereum/0x57f1887a8bf19b14fc0df6fd9b2acc9af147ea85/`42033647921836720708986079437023664695436352815832009766988496528855301124570`\n\n</TabItem>\n</Tabs>\n\n<br/>\n\nThose URLs can vary, but they usually contain the **NFT contract address** (hexadecimal) and the **NFT token ID** (usually in decimal form). For the ERC-721 NFTs that represent .eth 2LDs, the contract address is <Link to=\"https://etherscan.io/address/0x57f1887a8bf19b14fc0df6fd9b2acc9af147ea85\">`0x57f1887a8BF19b14fC0dF6Fd9B2acc9Af147eA85`</Link>.", "mimetype": "text/plain", "start_char_idx": 324, "end_char_idx": 360, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "de51b2ea-5776-4ff2-9bb4-b737d2dfd629": {"__data__": {"id_": "de51b2ea-5776-4ff2-9bb4-b737d2dfd629", "embedding": null, "metadata": {"file_path": "docs/dev-basics/namehash.mdx", "file_name": "namehash.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namehash.mdx", "header_path": "/Namehash, Labelhash, and Token IDs/", "customer_id": 1, "source_url": "docs/dev-basics/namehash.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["other", "labelhash", "going", "level", "usually", "appears", "first", "lowest", "about", "words", "concerned", "output", "generating", "label"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4ec3e8d81b62c4cc78c1620ba3246141b0228ca9", "node_type": "4", "metadata": {"file_path": "docs/dev-basics/namehash.mdx", "file_name": "namehash.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namehash.mdx"}, "hash": "902c627569252cb172c37735b2c0eac6e2df2e345e7b3666ce557fb974106870", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "155a8c44-0589-4078-95b8-b8cf63fdf1eb", "node_type": "1", "metadata": {"file_path": "docs/dev-basics/namehash.mdx", "file_name": "namehash.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namehash.mdx", "header_path": "/Namehash, Labelhash, and Token IDs/"}, "hash": "5945b4e10347417dcbefc3ab038a0982c8941b124295e547d1e8b87a101425ab", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "957327cf-dab6-46f3-af96-083ce34ff6bd", "node_type": "1", "metadata": {"header_path": "/Namehash, Labelhash, and Token IDs/"}, "hash": "2a6a81619e600844eda30e36a1d268202eda5b8d6b9a8458c8a6040afbd478a1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Generating a Labelhash\n\nThe **labelhash** is just the <Link to=\"https://en.wikipedia.org/wiki/SHA-3\">Keccak-256</Link> output for the label.\n\nFor a .eth 2LD, the label you're usually going to be concerned with is the first one that appears (in other words the lowest level of the name).\n\nSo for `ens.eth`, the label you care about is going to be `ens`. Take that value `ens` and plug it into the Keccak-256 function, and the output is the labelhash.\n\nHere's an example using Node.js:\n\n```js\n'0x' + require('js-sha3').keccak_256('ens')\n```\n\nIf you don't have a local Node.js environment, you can try it out yourself here: <Link to=\"https://npm.runkit.com/js-sha3\">https://npm.runkit.com/js-sha3</Link>\n\nEnter the above code, and it'll spit out the labelhash in hexadecimal format:\n\n<BrowserWindow url=\"https://npm.runkit.com/js-sha3\">\n  <div style={{'padding':'25px'}}>\n    <Image img=\"/img/namehash-1.png\"/>\n  </div>\n</BrowserWindow>\n\nTo get the labelhash in decimal format, use this code:\n```js\nrequire('big-integer')(require('js-sha3').keccak_256('ens'), 16).toString()\n```\n\n<BrowserWindow url=\"https://npm.runkit.com/js-sha3\">\n  <div style={{'padding':'25px'}}>\n    <Image img=\"/img/namehash-2.png\"/>\n  </div>\n</BrowserWindow>", "mimetype": "text/plain", "start_char_idx": 2786, "end_char_idx": 4018, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "957327cf-dab6-46f3-af96-083ce34ff6bd": {"__data__": {"id_": "957327cf-dab6-46f3-af96-083ce34ff6bd", "embedding": null, "metadata": {"file_path": "docs/dev-basics/namehash.mdx", "file_name": "namehash.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namehash.mdx", "header_path": "/Namehash, Labelhash, and Token IDs/", "customer_id": 1, "source_url": "docs/dev-basics/namehash.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["special", "works", "labelhash", "algorithm", "namehash", "recursive", "label", "EIP-137", "custom", "until", "generating", "specification"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4ec3e8d81b62c4cc78c1620ba3246141b0228ca9", "node_type": "4", "metadata": {"file_path": "docs/dev-basics/namehash.mdx", "file_name": "namehash.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namehash.mdx"}, "hash": "902c627569252cb172c37735b2c0eac6e2df2e345e7b3666ce557fb974106870", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "de51b2ea-5776-4ff2-9bb4-b737d2dfd629", "node_type": "1", "metadata": {"file_path": "docs/dev-basics/namehash.mdx", "file_name": "namehash.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namehash.mdx", "header_path": "/Namehash, Labelhash, and Token IDs/"}, "hash": "5e4a20047f32f3b4da863d9c01182467c0270255cffda01205ab332e71b54714", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "60e4685f-91fb-4cce-83d9-096c118e018c", "node_type": "1", "metadata": {"header_path": "/Namehash, Labelhash, and Token IDs/"}, "hash": "c8fd329e18ef020ae53427203641efa104ce70ac0741bed52d5dd485f1905545", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Generating a Namehash\n\nThe **namehash** is a custom algorithm that *uses* the labelhash for each label in the name.\n\n:::info EIP-137\nThe specification is here: <Link to=\"https://eips.ethereum.org/EIPS/eip-137#namehash-algorithm\">https://eips.ethereum.org/EIPS/eip-137#namehash-algorithm</Link>\n:::\n\nIt's a recursive algorithm that works its way down until you hit the root domain. For `ens.eth`, the algorithm works like so:\n\n| |\n|-|\n| `namehash('ens.eth')` = `keccak256(namehash('eth') + labelhash('ens'))` |\n| `namehash('eth')` = `keccak256(namehash('') + labelhash('eth'))` |\n| `namehash('')` = `0x0000000000000000000000000000000000000000000000000000000000000000` |\n\nThat last line is a special case: The namehash for an empty string (representing the root domain) is 32 null bytes.\n\nIf you plug everything in above, you'll end up with the final namehash value:\n\n* `namehash('')` =\n  * `0x0000000000000000000000000000000000000000000000000000000000000000`\n* `labelhash('eth')` = \n  * `keccak256('eth')` =\n  * `0x4f5b812789fc606be1b3b16908db13fc7a9adf7ca72641f84d75b47069d3d7f0`\n* `namehash('eth')` = \n  * `keccak256(namehash('') + labelhash('eth'))` =\n  * `keccak256(0x00000000000000000000000000000000000000000000000000000000000000004f5b812789fc606be1b3b16908db13fc7a9adf7ca72641f84d75b47069d3d7f0)` =\n  * `0x93cdeb708b7545dc668eb9280176169d1c33cfd8ed6f04690a0bcc88a93fc4ae`\n* `labelhash('ens')` =\n  * `keccak256('ens')` =\n  * `0x5cee339e13375638553bdf5a6e36ba80fb9f6a4f0783680884d92b558aa471da`\n* `namehash('ens.eth')` =\n  * `keccak256(namehash('eth') + labelhash('ens'))` =\n  * `keccak256(0x93cdeb708b7545dc668eb9280176169d1c33cfd8ed6f04690a0bcc88a93fc4ae5cee339e13375638553bdf5a6e36ba80fb9f6a4f0783680884d92b558aa471da)` =\n  * **`0x4e34d3a81dc3a20f71bbdf2160492ddaa17ee7e5523757d47153379c13cb46df`**\n\nLuckily, you do **not** need to go through all those steps every time, as there are libraries that have this function built-in.\n\nFor Node.js, you can use this code:\n```js\nrequire(\"@ensdomains/eth-ens-namehash\").hash('ens.eth')\n```\n\nIf you don't have a local Node.js environment, you can try it out yourself here: <Link to=\"https://npm.runkit.com/%40ensdomains%2Feth-ens-namehash\">https://npm.runkit.com/%40ensdomains%2Feth-ens-namehash</Link>\n\nEnter the above code, and it'll spit out the namehash in hexadecimal format:\n\n<BrowserWindow url=\"https://npm.runkit.com/%40ensdomains%2Feth-ens-namehash\">\n  <div style={{'padding':'25px'}}>\n    <Image img=\"/img/namehash-3.png\"/>\n  </div>\n</BrowserWindow>\n\nTo get the namehash in decimal format, use this code:\n```\nvar hexNamehash = require(\"@ensdomains/eth-ens-namehash\").hash('ens.eth')\nrequire('big-integer')(hexNamehash.substr(2), 16).toString()\n```\n\n<BrowserWindow url=\"https://npm.runkit.com/%40ensdomains%2Feth-ens-namehash\">\n  <div style={{'padding':'25px'}}>\n    <Image img=\"/img/namehash-4.png\"/>\n  </div>\n</BrowserWindow>", "mimetype": "text/plain", "start_char_idx": 4020, "end_char_idx": 6905, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "60e4685f-91fb-4cce-83d9-096c118e018c": {"__data__": {"id_": "60e4685f-91fb-4cce-83d9-096c118e018c", "embedding": null, "metadata": {"file_path": "docs/dev-basics/namehash.mdx", "file_name": "namehash.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namehash.mdx", "header_path": "/Namehash, Labelhash, and Token IDs/", "customer_id": 1, "source_url": "docs/dev-basics/namehash.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["labelhash", "separate", "decimal", "hexadecimal", "wrapped", "first", "there", "official", "subdomains", "contracts", "names", "token", "label"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4ec3e8d81b62c4cc78c1620ba3246141b0228ca9", "node_type": "4", "metadata": {"file_path": "docs/dev-basics/namehash.mdx", "file_name": "namehash.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namehash.mdx"}, "hash": "902c627569252cb172c37735b2c0eac6e2df2e345e7b3666ce557fb974106870", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "957327cf-dab6-46f3-af96-083ce34ff6bd", "node_type": "1", "metadata": {"file_path": "docs/dev-basics/namehash.mdx", "file_name": "namehash.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namehash.mdx", "header_path": "/Namehash, Labelhash, and Token IDs/"}, "hash": "bd8e15113314c6b4547a76c6af74601c51efdab0765ac8fbb6eacf0961dfc9a7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## NFT Token IDs\n\nThere are two separate official NFT contracts for ENS:\n\n* The ERC-721 NFTs for .eth 2LDs (second-level domains, like `ens.eth`)\n* The ERC-1155 NFTs for wrapped names (could be any .eth or DNS name, subdomains included)\n\nFor .eth 2LDs, the ERC-721 NFT token ID is the **labelhash** for the first (or lowest) label in the domain. So for `ens.eth`, the token ID is the labelhash for `ens`:\n\n|||\n|-|-|\n| Decimal | `42033647921836720708986079437023664695436352815832009766988496528855301124570` |\n| Hexadecimal | `0x5cee339e13375638553bdf5a6e36ba80fb9f6a4f0783680884d92b558aa471da` |\n\nFor names wrapped in the Name Wrapper, the ERC-1155 NFT token ID is the **namehash** for the entire name. So for `ens.eth`, the wrapped token ID would be the namehash for `ens.eth`:\n\n|||\n|-|-|\n| Decimal | `35373739037748002394990259860942348737703776167876918520233297406984196933343` |\n| Hexadecimal | `0x4e34d3a81dc3a20f71bbdf2160492ddaa17ee7e5523757d47153379c13cb46df` |", "mimetype": "text/plain", "start_char_idx": 6907, "end_char_idx": 7878, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0f896d08-f392-4279-a470-ab00a1372a98": {"__data__": {"id_": "0f896d08-f392-4279-a470-ab00a1372a98", "embedding": null, "metadata": {"file_path": "docs/dev-basics/namewrapper/approved-operators.mdx", "file_name": "approved-operators.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/approved-operators.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/dev-basics/namewrapper/approved-operators.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["permissions", "operators", "wrapper", "fuses", "approved", "namewrapper", "serenae"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "83c57d0116c654d1fde6fe6be130a8936772c0d7", "node_type": "4", "metadata": {"file_path": "docs/dev-basics/namewrapper/approved-operators.mdx", "file_name": "approved-operators.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/approved-operators.mdx"}, "hash": "94873c5f0a551fcd1899abeb92603c948fc5b9c498e1790c64b75e16161b3c16", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0b050f28-104b-4f60-a515-ca503fa741ca", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "4c15cd652fd72d78cd43e4f05b8bd6f2ea2d12e3b15fb07768f611a1468a36ed", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ntitle: Approved Operators\nlast_update:\n  author: serenae\ntags:\n  - operators\n  - nft\n  - fuses\n  - permissions\n  - namewrapper fuses\n  - wrapper fuses\n  - namewrapper permissions\n  - wrapper permissions\n  - namewrapper\n  - name wrapper\n  - wrapper\n  - wrapped name\nkeywords: [operators, nft, nfts, fuses, permissions, namewrapper fuses, wrapper fuses, namewrapper permissions, wrapper permissions, namewrapper, name wrapper, wrapper, wrapped name]\ndescription: Explaining the different operator approvals on the Name Wrapper contract\n---", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 541, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0b050f28-104b-4f60-a515-ca503fa741ca": {"__data__": {"id_": "0b050f28-104b-4f60-a515-ca503fa741ca", "embedding": null, "metadata": {"file_path": "docs/dev-basics/namewrapper/approved-operators.mdx", "file_name": "approved-operators.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/approved-operators.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/dev-basics/namewrapper/approved-operators.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["typically", "operators", "batch", "address", "marketplace", "method", "approvals", "using", "wrapped", "supports", "operator", "approve", "approved", "names"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "83c57d0116c654d1fde6fe6be130a8936772c0d7", "node_type": "4", "metadata": {"file_path": "docs/dev-basics/namewrapper/approved-operators.mdx", "file_name": "approved-operators.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/approved-operators.mdx"}, "hash": "94873c5f0a551fcd1899abeb92603c948fc5b9c498e1790c64b75e16161b3c16", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0f896d08-f392-4279-a470-ab00a1372a98", "node_type": "1", "metadata": {"file_path": "docs/dev-basics/namewrapper/approved-operators.mdx", "file_name": "approved-operators.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/approved-operators.mdx", "header_path": "/"}, "hash": "d06d41ef036b6d1b554484a33387f6262523394d546da5ba1a1f162264725917", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a82aed55-54a4-40a0-99d2-d2128486fb6f", "node_type": "1", "metadata": {"header_path": "/Approved Operators/"}, "hash": "5a08ea36480e8f68a94bb02854358f86553c3644ec7ad66352fb0c6551c3734e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Approved Operators ## Full-Control Operator Batch Approvals\n\nYour wrapped name is an ERC-1155 NFT that supports the `setApprovalForAll` method. When you approve an address using this method, it will have **full control** over all wrapped ENS names that you own.\n\nThis method is typically used by NFT marketplace contracts. ## Name-Specific Subname Renewal Manager Approvals\n\nThe Name Wrapper also supports the ERC-721 `approve` method. This method is used to approve a single \"Subname Renewal Manager\" for a specific name.\n\nThe \"Renewal Manager\" does not have full control over your wrapped name, it can only set / extend the expiry on subnames.\n\nFurther, if you burn the **CANNOT_APPROVE** fuse on your name, then the approved renewal manager can no longer be changed. You can use this to \"lock in\" that contract, so that you can guarantee to all subname owners that renewals/extensions can always be done.\n\nThis approved renewal manager will be reset if the wrapped NFT is burned or re-minted, which happens if you unwrap the name, or if an expired name gets re-registered. It will also be reset if the wrapped NFT is transferred, **unless** the **CANNOT_APPROVE** fuse is burned.", "mimetype": "text/plain", "start_char_idx": 543, "end_char_idx": 563, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "221c1c3e-891e-4c85-85bd-1daca8f6dc5f": {"__data__": {"id_": "221c1c3e-891e-4c85-85bd-1daca8f6dc5f", "embedding": null, "metadata": {"file_path": "docs/dev-basics/namewrapper/approved-operators.mdx", "file_name": "approved-operators.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/approved-operators.mdx", "header_path": "/Approved Operators/", "customer_id": 1, "source_url": "docs/dev-basics/namewrapper/approved-operators.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["certain", "contract", "approval", "setup", "registrar", "separate", "these", "actions", "subname", "operator", "example", "methods", "setting"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "83c57d0116c654d1fde6fe6be130a8936772c0d7", "node_type": "4", "metadata": {"file_path": "docs/dev-basics/namewrapper/approved-operators.mdx", "file_name": "approved-operators.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/approved-operators.mdx"}, "hash": "94873c5f0a551fcd1899abeb92603c948fc5b9c498e1790c64b75e16161b3c16", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d5c3248e-81c2-4c9f-8126-a3fccc0f275f", "node_type": "1", "metadata": {"file_path": "docs/dev-basics/namewrapper/approved-operators.mdx", "file_name": "approved-operators.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/approved-operators.mdx", "header_path": "/Approved Operators/"}, "hash": "56ab90045e7f4eeff5bee62507aed341152dcef995211a46b2dbedb958560447", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Example - Subname Registrar Contract\n\nYou can use these operator approval methods to setup a separate contract that can take certain actions on your behalf. One example is setting up a \"subname registrar\" to allow users to register/renew subnames.\n\nThat subname registrar contract would act on your behalf and allow users to register subnames. To allow this, you would call `setApprovalForAll` to give that contract full control over your name (and thus the ability to create subnames).\n\nThen, to enable \"unruggable renewals\", you could call `approve` on that same contract (or a separate one specific to renewals if you wish) and burn **CANNOT_APPROVE** to lock in subname renewals for that contract.\n\nIf you need to later on, you would still be able to revoke with `setApprovalForAll`. So the contract would lose full control over your name (and the ability to create new subnames), but it would still be able to perpetually renew/extend existing subnames.\n\nAnd you can do all of this **without** needing to send your wrapped NFT to that contract.", "mimetype": "text/plain", "start_char_idx": 1731, "end_char_idx": 2783, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e13af675-2902-4001-a951-155f8a25efc9": {"__data__": {"id_": "e13af675-2902-4001-a951-155f8a25efc9", "embedding": null, "metadata": {"file_path": "docs/dev-basics/namewrapper/expiry.mdx", "file_name": "expiry.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/expiry.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/dev-basics/namewrapper/expiry.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["expiration", "expiry", "wrapper", "wrapped", "namewrapper", "serenae"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6e9972f4ecf308f1be7ed80d272c99058e9e0092", "node_type": "4", "metadata": {"file_path": "docs/dev-basics/namewrapper/expiry.mdx", "file_name": "expiry.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/expiry.mdx"}, "hash": "f8821cae462119624a46a345ae2b16da2485753771fe1cc015192808be10f3d1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f201e863-9ac6-474c-86f6-81a1ae04ade3", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "bae5880b7735886f0424e094973448f992ebfbcd2dc018d14e68d9607ff3017a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ntitle: Expiry\nlast_update:\n  author: serenae\ntags:\n  - expiry\n  - expiration\n  - wrapper expiry\n  - wrapper expiration\n  - namewrapper expiry\n  - namewrapper expiration\n  - wrapped name expiry\n  - wrapped name expiration\n  - namewrapper\n  - name wrapper\n  - wrapper\n  - wrapped name\nkeywords: [expiry, expiration, wrapper expiry, wrapper expiration, namewrapper expiry, namewrapper expiration, wrapped name expiry, wrapped name expiration, namewrapper, name wrapper, wrapper, wrapped name]\ndescription: Explaining the expiry inside the Name Wrapper\n---", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 556, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f201e863-9ac6-474c-86f6-81a1ae04ade3": {"__data__": {"id_": "f201e863-9ac6-474c-86f6-81a1ae04ade3", "embedding": null, "metadata": {"file_path": "docs/dev-basics/namewrapper/expiry.mdx", "file_name": "expiry.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/expiry.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/dev-basics/namewrapper/expiry.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["automatically", "determine", "whether", "expiry", "wrapper", "order", "fuses", "itself", "determines", "active", "burned"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6e9972f4ecf308f1be7ed80d272c99058e9e0092", "node_type": "4", "metadata": {"file_path": "docs/dev-basics/namewrapper/expiry.mdx", "file_name": "expiry.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/expiry.mdx"}, "hash": "f8821cae462119624a46a345ae2b16da2485753771fe1cc015192808be10f3d1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e13af675-2902-4001-a951-155f8a25efc9", "node_type": "1", "metadata": {"file_path": "docs/dev-basics/namewrapper/expiry.mdx", "file_name": "expiry.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/expiry.mdx", "header_path": "/"}, "hash": "cf9c424cb359001ec0e0763263a033f51558ddc70782a634bc01384b07959a82", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "89591ce0-2932-4831-b4f8-339b0d75b14a", "node_type": "1", "metadata": {"header_path": "/Name Wrapper Expiry/"}, "hash": "c48a2201d42a216e19e2ba28e561bae9f955823aeb815ef389349a19debcd97e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Name Wrapper Expiry\n\nIn order to burn any fuses on a name, you must also set an **expiry** on it. This expiry determines how long any burned fuses are active for, and may also determine whether the name itself has expired.\n\nIf the name is a .eth 2LD, then the expiry will automatically be set to the same expiry in the .eth Registrar. But for all other names, the parent can choose what expiry to set for a child name. ## Max Expiry for Subnames\n\nBy default, the expiry for a name can only be set by the parent, and can only be increased, not decreased. The maximum value for the expiry of a name is the expiry of its parent name.\n\nFor example, say a name expires in 5 years. The owner of the name can then set the expiry of its subnames to a maximum of 5 years as well. But the parent could also choose to set the expiry to something less. Let's say the parent sets the expiry of one of its subnames to 2 years. Then in turn, the owner of the subname can set the expiry of its own subnames up to a maximum of 2 years, but it could also set it to something less, like 1 year.\n\n![Docusaurus themed image](/img/namewrapper-max-expiry-light.jpg#gh-light-mode-only)![Docusaurus themed image](/img/namewrapper-max-expiry-dark.jpg#gh-dark-mode-only)\n\nThe parent can set a different expiry for different subnames too, just as it can burn different fuses for different subnames.", "mimetype": "text/plain", "start_char_idx": 558, "end_char_idx": 978, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a702c5b3-eb85-479f-8b38-aaf028b8b0e4": {"__data__": {"id_": "a702c5b3-eb85-479f-8b38-aaf028b8b0e4", "embedding": null, "metadata": {"file_path": "docs/dev-basics/namewrapper/expiry.mdx", "file_name": "expiry.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/expiry.mdx", "header_path": "/Name Wrapper Expiry/", "customer_id": 1, "source_url": "docs/dev-basics/namewrapper/expiry.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["automatically", "other", "extend", "renewals", "parent", "expiry", "wrapper", "wrapped", "extended", "names"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6e9972f4ecf308f1be7ed80d272c99058e9e0092", "node_type": "4", "metadata": {"file_path": "docs/dev-basics/namewrapper/expiry.mdx", "file_name": "expiry.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/expiry.mdx"}, "hash": "f8821cae462119624a46a345ae2b16da2485753771fe1cc015192808be10f3d1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "89591ce0-2932-4831-b4f8-339b0d75b14a", "node_type": "1", "metadata": {"file_path": "docs/dev-basics/namewrapper/expiry.mdx", "file_name": "expiry.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/expiry.mdx", "header_path": "/Name Wrapper Expiry/"}, "hash": "850c165a91778a167df6e816a1e37e59b31fcb24e50830ce2b99f36c2a2e029f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c9097a95-20be-430c-a68b-a68d80945721", "node_type": "1", "metadata": {"header_path": "/Name Wrapper Expiry/"}, "hash": "21d37ea7c01ade82c7c644842fd65ad1f20df22c745344a722f3215bfec3ab29", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Renewals\n\nWhen a wrapped .eth second-level name (like `name.eth`) is renewed, that new expiry is automatically set in the Name Wrapper as well as in the .eth Registrar. However, the expiry for any other .eth names (like `sub.name.eth`) will not be automatically extended when the parent expiry is extended.\n\nThe parent can extend the expiry for an existing subname at any time, even if the subname has been emancipated.\n\nThe parent can also choose to approve a separate contract to allow the expiry for subnames to be extended by the subname owner or other accounts. That is basically how .eth second-level names work: Since the `eth` node is locked in the registrar contract and has the Name Wrapper (which exposes a renew method) approved as a controller, .eth second-level names can be directly renewed by their owners. The parent can further lock this approved contract in by burning the **CANNOT_APPROVE** fuse.\n\nThere is also a special parent-controlled fuse called **CAN_EXTEND_EXPIRY**. If the parent burns this fuse on a subname, then the owner of that subname (or any approved controller) can also extend the expiry.\n\nSo, if you are running a subname registrar and you want to enable \u201cunruggable renewals\u201d, you can use one of the above options (or both).", "mimetype": "text/plain", "start_char_idx": 1933, "end_char_idx": 3200, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c9097a95-20be-430c-a68b-a68d80945721": {"__data__": {"id_": "c9097a95-20be-430c-a68b-a68d80945721", "embedding": null, "metadata": {"file_path": "docs/dev-basics/namewrapper/expiry.mdx", "file_name": "expiry.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/expiry.mdx", "header_path": "/Name Wrapper Expiry/", "customer_id": 1, "source_url": "docs/dev-basics/namewrapper/expiry.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["special", "registrar", "january", "reflect", "expiry", "grace", "expiration", "wrapper", "cases", "approximately", "inside", "period"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6e9972f4ecf308f1be7ed80d272c99058e9e0092", "node_type": "4", "metadata": {"file_path": "docs/dev-basics/namewrapper/expiry.mdx", "file_name": "expiry.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/expiry.mdx"}, "hash": "f8821cae462119624a46a345ae2b16da2485753771fe1cc015192808be10f3d1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a702c5b3-eb85-479f-8b38-aaf028b8b0e4", "node_type": "1", "metadata": {"file_path": "docs/dev-basics/namewrapper/expiry.mdx", "file_name": "expiry.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/expiry.mdx", "header_path": "/Name Wrapper Expiry/"}, "hash": "a31ec825585d805f6a0ba73227724d507a42e54ff06e0a85a0254f379b288fde", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e556167c-0ba7-44cd-8430-de6f784e1e27", "node_type": "1", "metadata": {"header_path": "/Name Wrapper Expiry/"}, "hash": "e10db1cb58c2442f5e7e2f3b442a9fc57fb4589dcd6697070da7a9e3a1387926", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Special Cases for .eth 2LDs\n\nFor .eth second-level names, the end of the name's grace period (from the .eth Registrar) is used for the expiry inside of the Name Wrapper. So if the name's expiration date in the Registrar is January 1st, then the expiry in the Name Wrapper will reflect that date *plus* the grace period (currently 90 days, so approximately April 1st, depending on the year).\n\nWhen the name's expiration date (from the .eth Registrar) has been reached, and the name is now in the grace period, all Name Wrapper operations on the name will be restricted. The owner will *not* yet lose ownership of the name, but they will also not be able to unwrap or update the name until it has been renewed.", "mimetype": "text/plain", "start_char_idx": 3202, "end_char_idx": 3913, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e556167c-0ba7-44cd-8430-de6f784e1e27": {"__data__": {"id_": "e556167c-0ba7-44cd-8430-de6f784e1e27", "embedding": null, "metadata": {"file_path": "docs/dev-basics/namewrapper/expiry.mdx", "file_name": "expiry.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/expiry.mdx", "header_path": "/Name Wrapper Expiry/", "customer_id": 1, "source_url": "docs/dev-basics/namewrapper/expiry.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["means", "limited", "amount", "important", "parent", "expiry", "fuses", "merely", "custom", "implications", "still", "otherwise"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6e9972f4ecf308f1be7ed80d272c99058e9e0092", "node_type": "4", "metadata": {"file_path": "docs/dev-basics/namewrapper/expiry.mdx", "file_name": "expiry.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/expiry.mdx"}, "hash": "f8821cae462119624a46a345ae2b16da2485753771fe1cc015192808be10f3d1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c9097a95-20be-430c-a68b-a68d80945721", "node_type": "1", "metadata": {"file_path": "docs/dev-basics/namewrapper/expiry.mdx", "file_name": "expiry.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/expiry.mdx", "header_path": "/Name Wrapper Expiry/"}, "hash": "51b8faba1f1dab5e686b7959605a23321f2fecc0d5e6b7dfd7b81aea92bdb824", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Expiry Implications\n\nWhen a name is merely **Wrapped** but not **Emancipated** or **Locked**, parent-controlled fuses can still be burned. This means that the parent can burn a custom fuse for a limited amount of time. When the expiry is reached, all fuses will be reset, but the name will otherwise be unaffected.\n\nWhen a name is **Emancipated** or **Locked**, the expiry has an important additional effect. In this scenario, when the expiry has been reached, **the name itself will expire**, and the owner **loses ownership** of the name.", "mimetype": "text/plain", "start_char_idx": 3915, "end_char_idx": 4458, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6758da10-88a8-4264-b156-856b97594dae": {"__data__": {"id_": "6758da10-88a8-4264-b156-856b97594dae", "embedding": null, "metadata": {"file_path": "docs/dev-basics/namewrapper/fuses.mdx", "file_name": "fuses.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/fuses.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/dev-basics/namewrapper/fuses.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["permissions", "wrapper", "fuses", "namewrapper", "serenae"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ea26a70f0c082a509c0ec2173624770771a0f284", "node_type": "4", "metadata": {"file_path": "docs/dev-basics/namewrapper/fuses.mdx", "file_name": "fuses.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/fuses.mdx"}, "hash": "d4a1b4da66ed4de0449d6d4dba54e504d7d27e017020c7cddb83ab4441707d97", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2c172b16-6f71-4b74-85f0-63b33dd888af", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "f2d2b4c76e91a77514374d4ea86e3bbc31f22c657e0dc445f157c4df9d9f5882", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ntitle: Fuses\nlast_update:\n  author: serenae\ntags:\n  - fuses\n  - permissions\n  - namewrapper fuses\n  - wrapper fuses\n  - namewrapper permissions\n  - wrapper permissions\n  - namewrapper\n  - name wrapper\n  - wrapper\n  - wrapped name\nkeywords: [fuses, permissions, namewrapper fuses, wrapper fuses, namewrapper permissions, wrapper permissions, namewrapper, name wrapper, wrapper, wrapped name]\ndescription: Explaining the various fuses for the Name Wrapper and what they do\n--- # Fuses\n\nA \"fuse\" is a permission or perk that can be granted/revoked on a name.\nAs the name implies, once the fuse is \"burned\", it cannot be unburned. Fuses will only reset when the **expiry** is reached. In the ENS Manager UI, this is available in the \"Permissions\" section of the name.\n\nFor example, by default when you wrap a name, you can transfer that NFT around freely, just as you can with other NFTs. However, if the **CANNOT_TRANSFER** fuse is burned, then the NFT becomes non-transferrable. In the ENS Manager UI, you would do this by revoking the \"Can send this name\" permission.\n\nIn order to burn fuses on a name, the parent name must be **Locked** (meaning, you cannot unwrap the name). The reason is, if the parent name was not locked, then the owner of the parent name could simply get around the constraints of the Name Wrapper by unwrapping the name, and replacing/revoking subnames against the core ENS Registry.\n\nThere are **parent-controlled** and **owner-controlled** fuses:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 478, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f0f66940-8fd6-4d98-84fb-a1af88f7ecd3": {"__data__": {"id_": "f0f66940-8fd6-4d98-84fb-a1af88f7ecd3", "embedding": null, "metadata": {"file_path": "docs/dev-basics/namewrapper/fuses.mdx", "file_name": "fuses.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/fuses.mdx", "header_path": "/Fuses/", "customer_id": 1, "source_url": "docs/dev-basics/namewrapper/fuses.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["though", "other", "allows", "granted", "parent", "description", "these", "fuses", "generally", "thought", "owner"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ea26a70f0c082a509c0ec2173624770771a0f284", "node_type": "4", "metadata": {"file_path": "docs/dev-basics/namewrapper/fuses.mdx", "file_name": "fuses.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/fuses.mdx"}, "hash": "d4a1b4da66ed4de0449d6d4dba54e504d7d27e017020c7cddb83ab4441707d97", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2c172b16-6f71-4b74-85f0-63b33dd888af", "node_type": "1", "metadata": {"file_path": "docs/dev-basics/namewrapper/fuses.mdx", "file_name": "fuses.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/fuses.mdx", "header_path": "/"}, "hash": "109bbdec6bdb74cf9b734866a9fd9bbd0b152b32c467c5b7a4f62f53ea82ebfc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d0b11c34-d92b-49f6-a8a6-189efe65b287", "node_type": "1", "metadata": {"header_path": "/Fuses/"}, "hash": "a2dd9b9c96d096397d9320a10732913229a85196fdfca659d214124b91367c47", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Parent-Controlled Fuses\nOnly the owner of the parent name can burn one of these fuses on a name. These can generally be thought of as \"perks\" that can be granted to a name, though they can be used in other ways.\n\n| Fuse name | Description |\n|-|-|\n| **PARENT_CANNOT_CONTROL** | Allows a parent owner to **Emancipate** a child name. After this is burned, the parent will no longer be able to burn any further fuses, and will no longer be able to replace/delete the child name. This fuse must be burned in order for any owner-controlled fuses to be burned on the name. |\n| **IS_DOT_ETH** | This fuse cannot be burned by users of the Name Wrapper, it is only set internally when a .eth 2LD is wrapped. |\n| **CAN_EXTEND_EXPIRY** | The owner of the child name will be able to extend their own expiry. Normally, only the parent owner can extend the expiry of a child name. See the <Link to=\"/dev-basics/namewrapper/expiry\">Expiry</Link> section for more information. |\n| **Custom Fuses** | There are 13 other parent-controlled fuses that are not reserved, and can be used in any custom way you want! |", "mimetype": "text/plain", "start_char_idx": 1478, "end_char_idx": 2575, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d0b11c34-d92b-49f6-a8a6-189efe65b287": {"__data__": {"id_": "d0b11c34-d92b-49f6-a8a6-189efe65b287", "embedding": null, "metadata": {"file_path": "docs/dev-basics/namewrapper/fuses.mdx", "file_name": "fuses.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/fuses.mdx", "header_path": "/Fuses/", "customer_id": 1, "source_url": "docs/dev-basics/namewrapper/fuses.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["though", "other", "revoked", "parent", "description", "either", "these", "fuses", "generally", "thought", "owner", "longer", "burned"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ea26a70f0c082a509c0ec2173624770771a0f284", "node_type": "4", "metadata": {"file_path": "docs/dev-basics/namewrapper/fuses.mdx", "file_name": "fuses.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/fuses.mdx"}, "hash": "d4a1b4da66ed4de0449d6d4dba54e504d7d27e017020c7cddb83ab4441707d97", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f0f66940-8fd6-4d98-84fb-a1af88f7ecd3", "node_type": "1", "metadata": {"file_path": "docs/dev-basics/namewrapper/fuses.mdx", "file_name": "fuses.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/fuses.mdx", "header_path": "/Fuses/"}, "hash": "1e1654e727dd55a2de7a275ad35aa7b5a5c33f4a43ffcf84203a2b3ef3cb4235", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ef1452fa-0e78-487a-a416-10b1ce77c0ce", "node_type": "1", "metadata": {"header_path": "/Fuses/"}, "hash": "1c96047c8dfae64bab648bd1ac9a019511bc4025448bfb53e2e7ab06e656bc97", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Owner-Controlled Fuses\nEither the owner of the name *or* the owner of the parent name can burn one of these fuses. These can generally be thought of as \"permissions\" that can be revoked on a name, though they can be used in other ways.\n\n| Fuse name | Description |\n|-|-|\n| **CANNOT_UNWRAP** | The name will now be **Locked**, and can no longer be unwrapped. This fuse must be burned in order for any other owner-controlled fuses to be burned on the name. |\n| **CANNOT_BURN_FUSES** | No further fuses can be burned on the name. |\n| **CANNOT_TRANSFER** | The name (wrapped NFT) can no longer be transferred. |\n| **CANNOT_SET_RESOLVER** | The resolver contract for the name can no longer be updated. |\n| **CANNOT_SET_TTL** | The TTL for the name can no longer be updated. |\n| **CANNOT_CREATE_SUBDOMAIN** | New subdomains can no longer be created. |\n| **CANNOT_APPROVE** | The approved \"subname renewal manager\" for the name can no longer be updated. See the <Link to=\"/dev-basics/namewrapper/approved-operators\">Approved Operators</Link> section for more information. |\n| **Custom Fuses** | There are 9 other owner-controlled fuses that are not reserved, and can be used in any custom way you want! |", "mimetype": "text/plain", "start_char_idx": 2577, "end_char_idx": 3777, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ef1452fa-0e78-487a-a416-10b1ce77c0ce": {"__data__": {"id_": "ef1452fa-0e78-487a-a416-10b1ce77c0ce", "embedding": null, "metadata": {"file_path": "docs/dev-basics/namewrapper/fuses.mdx", "file_name": "fuses.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/fuses.mdx", "header_path": "/Fuses/", "customer_id": 1, "source_url": "docs/dev-basics/namewrapper/fuses.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["automatically", "locked", "means", "covered", "child", "parent", "quick", "control", "emancipated", "states", "placed", "state", "names", "longer"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ea26a70f0c082a509c0ec2173624770771a0f284", "node_type": "4", "metadata": {"file_path": "docs/dev-basics/namewrapper/fuses.mdx", "file_name": "fuses.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/fuses.mdx"}, "hash": "d4a1b4da66ed4de0449d6d4dba54e504d7d27e017020c7cddb83ab4441707d97", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d0b11c34-d92b-49f6-a8a6-189efe65b287", "node_type": "1", "metadata": {"file_path": "docs/dev-basics/namewrapper/fuses.mdx", "file_name": "fuses.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/fuses.mdx", "header_path": "/Fuses/"}, "hash": "b590c4a26daf06c5fc0c807ea6d90704153eac03e15e739c5057bbc1d48738d7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "781289cb-23cb-4771-95cb-129de2bb24d7", "node_type": "1", "metadata": {"header_path": "/Fuses/"}, "hash": "de3d22da66833e6bccd9c6b8bcad5fb7e4981036b0a3297a21caec89ae3f0c9d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## The Emancipated and Locked States\nThis is also covered in the <Link to=\"/dev-basics/namewrapper/states\">Wrapped States</Link> section, but here is a quick recap:\n\nAll .eth second-level names (like `name.eth`) are automatically placed into the Emancipated state when wrapped.\n\n**Emancipated** means that the parent no longer has control over the child name. It can no longer burn any fuses or replace the subname, up until the expiry.\n\nA name is Emancipated when the parent burns the **PARENT_CANNOT_CONTROL** (PCC) fuse. The parent must first be in the Locked state to be able to do this.\n\n**Locked** means that the name cannot be unwrapped. This provides assurance to subnames that the parent owner cannot unwrap and then, for example, start replacing subnames directly against the registry.\n\nAn Emancipated name is Locked when the **CANNOT_UNWRAP** (CU) fuse is burned.\n\nThink of the special PCC / CU fuses recursively:\n\n* To burn owner-controlled or subname fuses, CU must be burned.\n* To burn CU, PCC must be burned.\n* Only the parent can burn PCC on the child name, and only if CU is first burned on the parent\n* To burn CU on the parent, PCC must be burned on the parent\n* Only the grandparent can burn PCC on the parent name, and only if CU is first burned on the grandparent\n* And so on...\n\nFollow that chain up until you hit a .eth second-level name like `name.eth`, since .eth second-level names will have PCC automatically burned when wrapping. The parent `eth` node is already in the Locked state.\n\nA parent name can burn all the fuses it needs to on a child name in one transaction. This can be done when the subname is created, or on an existing subname that has not yet been Emancipated.", "mimetype": "text/plain", "start_char_idx": 3779, "end_char_idx": 5484, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "781289cb-23cb-4771-95cb-129de2bb24d7": {"__data__": {"id_": "781289cb-23cb-4771-95cb-129de2bb24d7", "embedding": null, "metadata": {"file_path": "docs/dev-basics/namewrapper/fuses.mdx", "file_name": "fuses.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/fuses.mdx", "header_path": "/Fuses/", "customer_id": 1, "source_url": "docs/dev-basics/namewrapper/fuses.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["domains", "locked", "ability", "because", "fuses", "native", "subnames", "support", "technically", "completely", "owner", "beyond", "under", "names"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ea26a70f0c082a509c0ec2173624770771a0f284", "node_type": "4", "metadata": {"file_path": "docs/dev-basics/namewrapper/fuses.mdx", "file_name": "fuses.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/fuses.mdx"}, "hash": "d4a1b4da66ed4de0449d6d4dba54e504d7d27e017020c7cddb83ab4441707d97", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ef1452fa-0e78-487a-a416-10b1ce77c0ce", "node_type": "1", "metadata": {"file_path": "docs/dev-basics/namewrapper/fuses.mdx", "file_name": "fuses.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/fuses.mdx", "header_path": "/Fuses/"}, "hash": "3d4de118990c5a8eb843cc15aa09cac19233ce3f008a94b62d04680cbf4ebc1b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## DNS Domains and Fuses\nCurrently, only .eth names support fuses, because only the `eth` node is on-chain native and completely locked beyond anyone's control.\n\nTechnically speaking, the owner of a DNS TLD has the ability to burn fuses on that TLD in the Name Wrapper, and set it to the \"Locked\" state. And then from there, all subnames under that DNS TLD **will** be able to use fuses. The DNS TLD owner would need to:\n\n* Request the Controller of that TLD from the ENS DAO\n* Wrap the TLD node in the Name Wrapper\n* Burn the **PARENT_CANNOT_CONTROL** and **CANNOT_UNWRAP** fuses on the wrapped TLD to lock it\n\nHowever, this still does not have all the immutable guarantees that .eth names do. This is because for DNS names, the \"source of truth\" always lies not in the Ethereum network, but in the DNS network, and the DNS root zone governed by ICANN stakeholders.\n\nSo even if the DNS TLD owner \"Locks\" that TLD in the ENS Name Wrapper, **if** that TLD were to ever change ownership on the DNS side, then (per the <Link to=\"https://docs.ens.domains/v/governance/ens-dao-constitution#iv.-ens-integrates-with-the-global-namespace\">ENS DAO Constitution</Link>) the new owner would be able to override control of that TLD on the ENS side, unwrap it, and replace/revoke all 2LDs.\n\nThis is just something to keep in mind for wrapped DNS domains.\n\nHowever, even if wrapped DNS domains do not support fuses, you can still use them as ERC-1155 NFTs. They will still have their own NFT metadata and show up in your wallet, with whatever avatar you have set, etc. They just won't have all the extra functionality that comes with the fuse/permission system.", "mimetype": "text/plain", "start_char_idx": 5486, "end_char_idx": 7133, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4a9a9263-33c0-4121-9000-ae44b2579778": {"__data__": {"id_": "4a9a9263-33c0-4121-9000-ae44b2579778", "embedding": null, "metadata": {"file_path": "docs/dev-basics/namewrapper/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/index.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/dev-basics/namewrapper/index.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["wrapper", "doccardlist", "import", "overview", "contract", "namewrapper", "serenae"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b19165f8c68139c21b5716496eb54813a7934126", "node_type": "4", "metadata": {"file_path": "docs/dev-basics/namewrapper/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/index.mdx"}, "hash": "d5b795a6faf53dceda44c0dfea06c7f045ea91e5b37b43939b4293264683b589", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Name Wrapper\n\n```mdx-code-block\nimport DocCardList from '@theme/DocCardList';\n\n<DocCardList /> ---\ntitle: Overview\nlast_update:\n  author: serenae\ntags:\n  - namewrapper\n  - name wrapper\n  - wrapper\n  - namewrapper contract\n  - wrapper contract\nkeywords: [namewrapper, name wrapper, wrapper, namewrapper contract, wrapper contract]\ndescription: Overview of the ENS Name Wrapper\n--- # Overview\n\nThe **Name Wrapper** is a new contract for ENS that allows you to \"wrap\" any ENS name into a ERC-1155 NFT.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 96, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fa647d48-cb54-4db6-a3dc-789f1537896a": {"__data__": {"id_": "fa647d48-cb54-4db6-a3dc-789f1537896a", "embedding": null, "metadata": {"file_path": "docs/dev-basics/namewrapper/overview.mdx", "file_name": "overview.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/overview.mdx", "header_path": "/Overview/", "customer_id": 1, "source_url": "docs/dev-basics/namewrapper/overview.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["themed", "separate", "parent", "wrapper", "unless", "associated", "before", "custom", "owner", "created", "without"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a9aae77c5912b21f204856882b43e031d90ab9e7", "node_type": "4", "metadata": {"file_path": "docs/dev-basics/namewrapper/overview.mdx", "file_name": "overview.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/overview.mdx"}, "hash": "dc9897b245b512b4e0a295992293b2ee72ac62d41f4746e41ecd618f606c8d7b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c661133d-c87a-4eac-a50e-491813e5526c", "node_type": "1", "metadata": {"file_path": "docs/dev-basics/namewrapper/overview.mdx", "file_name": "overview.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/overview.mdx", "header_path": "/"}, "hash": "72f5f108438f20c1ce01c70439f344383e2df7dd2f9c8d6329cea166ef9d5a86", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e6643c12-d229-4bc9-869d-c09aa59b3116", "node_type": "1", "metadata": {"header_path": "/Overview/"}, "hash": "d4fe11c0876a9a79c4fc1f81d3298821c86809361055cf2e566e1aacb3d35bbe", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Without the Name Wrapper\nBefore the Name Wrapper, only .eth 2LDs (second-level domains, like `ens.eth`) had ERC-721 NFTs associated with them, unless the owner created a separate custom contract.\n\n<br/>\n<p align={'center'}>\n<div class=\"container\" style={{'width':'800px','padding':'0px'}}>\n\n![Docusaurus themed image](/img/namewrapper-overview-subnames-light.jpg#gh-light-mode-only)![Docusaurus themed image](/img/namewrapper-overview-subnames-dark.jpg#gh-dark-mode-only)\n\n</div>\n</p> ## With the Name Wrapper\n\n<br/>\n<div className=\"container\" style={{'padding':'0px'}}>\n<div className=\"row\">\n<div className=\"col\">\n\n![Docusaurus themed image](/img/namewrapper-overview-wrapped-light.jpg#gh-light-mode-only)![Docusaurus themed image](/img/namewrapper-overview-wrapped-dark.jpg#gh-dark-mode-only)\n\n</div>\n<div className=\"col\">\n\n**Parent-Controlled Fuses:**\n - <Link to=\"/dev-basics/namewrapper/fuses#parent-controlled-fuses\">Fuses</Link> that only the parent owner can burn\n - \"Perks\" that can be given to the owner of a name\n    **Example:** By burning **CAN_EXTEND_EXPIRY**, you allow the owner to extend/renew their own subname\n\n**Owner-Controlled Fuses:**\n - <Link to=\"/dev-basics/namewrapper/fuses#owner-controlled-fuses\">Fuses</Link> that either the owner or parent owner can burn\n - \"Permissions\" that can be revoked on a name\n    **Example:** By burning **CANNOT_TRANSFER**, the wrapped NFT can no longer be transferred or sold.\n\n**Subname Fuses:**\n - The parent owner has the power to burn fuses when creating subnames\n - Decides what perks, permissions, or guarantees to give to subname owners\n\n</div>\n</div>\n</div>\n<br/>\n\n**With this new contract, you can wrap:**\n - Any .eth name or subname  \n    **Examples:** `name.eth`, `sub.name.eth`\n \n - Any DNS name or subname  \n    **Examples:** `name.com`, `sub.name.com`\n\nUnwrapped .eth 2LDs have the concept of a separate `Owner` (Registrant) and `Manager` (Controller).  \n\nThis changes after you wrap the name, because there is only a single account that serves as both the `Owner` and `Manager` for the wrapped name.", "mimetype": "text/plain", "start_char_idx": 407, "end_char_idx": 894, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6d9e17d2-0ea2-4b9b-b4f1-4a5b2ac33035": {"__data__": {"id_": "6d9e17d2-0ea2-4b9b-b4f1-4a5b2ac33035", "embedding": null, "metadata": {"file_path": "docs/dev-basics/namewrapper/overview.mdx", "file_name": "overview.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/overview.mdx", "header_path": "/Overview/", "customer_id": 1, "source_url": "docs/dev-basics/namewrapper/overview.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["already", "separate", "worry", "intentionally", "version", "wrapped", "older", "registered", "which", "manager", "completely", "wrapping", "option", "should"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a9aae77c5912b21f204856882b43e031d90ab9e7", "node_type": "4", "metadata": {"file_path": "docs/dev-basics/namewrapper/overview.mdx", "file_name": "overview.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/overview.mdx"}, "hash": "dc9897b245b512b4e0a295992293b2ee72ac62d41f4746e41ecd618f606c8d7b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e6643c12-d229-4bc9-869d-c09aa59b3116", "node_type": "1", "metadata": {"file_path": "docs/dev-basics/namewrapper/overview.mdx", "file_name": "overview.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/overview.mdx", "header_path": "/Overview/"}, "hash": "0312e3c3d775628de3a7b838dc6d34dba020ee5493082bc88f07af3e17e8c175", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cb2fa1b3-9773-400d-80b8-278cbb1b8988", "node_type": "1", "metadata": {"header_path": "/Overview/Should I Wrap My Name?/"}, "hash": "973656ebed463f6af58e47d514e28b01bdeaba2fe4b552f255f99cc0512219f3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Should I Wrap My Name?\n\nIf you have an ENS name registered with an older version of the Manager App, then it will not be wrapped by default. Instead, you will see this option on the \"More\" tab:\n\n<BrowserWindow url=\"https://app.ens.domains\" bg=\"#f5f6f7\" padding=\"10px\" img=\"/img/namewrapper-overview-wrap-name-button.jpg\"/>\n\n:::info\nWrapping a name **is not permanent** (unless you intentionally <Link to=\"/howto/namewrapper/change-permissions\">revoke permissions</Link>, which is a completely separate page in the Manager App).\n\nSo don't worry if you already pressed that Wrap Name button, or if your name is already wrapped. You can unwrap your name at any time, see here for instructions: <Link to=\"/howto/namewrapper/unwrap-names\">Unwrapping Names</Link>\n:::\n\nSo you may be wondering \"Do I want to press this button?\"\n\nThe answer may depend on the type of name:\n\n:::info\nIf you don't need or want to take advantage of any of the below features, then **you do not need** to wrap your name.\n:::", "mimetype": "text/plain", "start_char_idx": 2485, "end_char_idx": 3483, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cb2fa1b3-9773-400d-80b8-278cbb1b8988": {"__data__": {"id_": "cb2fa1b3-9773-400d-80b8-278cbb1b8988", "embedding": null, "metadata": {"file_path": "docs/dev-basics/namewrapper/overview.mdx", "file_name": "overview.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/overview.mdx", "header_path": "/Overview/Should I Wrap My Name?/", "customer_id": 1, "source_url": "docs/dev-basics/namewrapper/overview.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["additional", "already", "separate", "unwrapped", "different", "single", "instead", "wrapper", "subnames", "wrapped", "create", "representing", "section"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a9aae77c5912b21f204856882b43e031d90ab9e7", "node_type": "4", "metadata": {"file_path": "docs/dev-basics/namewrapper/overview.mdx", "file_name": "overview.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/overview.mdx"}, "hash": "dc9897b245b512b4e0a295992293b2ee72ac62d41f4746e41ecd618f606c8d7b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6d9e17d2-0ea2-4b9b-b4f1-4a5b2ac33035", "node_type": "1", "metadata": {"file_path": "docs/dev-basics/namewrapper/overview.mdx", "file_name": "overview.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/overview.mdx", "header_path": "/Overview/"}, "hash": "76931896772db7e11fbfb9fe706d3bac3825abfd023deb12869a1c3334f98511", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fdfcec0c-c3b1-4166-b007-dbb3cde6cb87", "node_type": "1", "metadata": {"header_path": "/Overview/Should I Wrap My Name?/"}, "hash": "3ac6284130cc1070bf6abe0b817e0d0c73d71d06c51e1dd56423d574c3f4ce4f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### I have an unwrapped .eth second-level name:\n - Example: `name.eth`\n - If you wrap this name:\n   - Your .eth 2LD is already an ERC-721 NFT, so you will just have a different NFT instead (an ERC-1155), representing the same name.\n   - You will be able to use the <Link to=\"/dev-basics/namewrapper/fuses\">fuses/permissions system</Link> with your name and any subnames that you create.\n   - You will be able to create subnames that are \"unruggable\" NFTs.\n   - See this section for additional use-cases, like selling/renting subnames: <Link to=\"/dev-basics/namewrapper/use-cases\">Name Wrapper Use-Cases</Link>\n   - Instead of separate \"Owner\" and \"Manager\" accounts, your wrapped name will only have a single \"Owner\" account.", "mimetype": "text/plain", "start_char_idx": 3485, "end_char_idx": 4210, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fdfcec0c-c3b1-4166-b007-dbb3cde6cb87": {"__data__": {"id_": "fdfcec0c-c3b1-4166-b007-dbb3cde6cb87", "embedding": null, "metadata": {"file_path": "docs/dev-basics/namewrapper/overview.mdx", "file_name": "overview.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/overview.mdx", "header_path": "/Overview/Should I Wrap My Name?/", "customer_id": 1, "source_url": "docs/dev-basics/namewrapper/overview.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["unwrapped", "actual", "parent", "wallet", "marketplace", "replace", "subname", "cannot", "owner", "revoke", "meaning"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a9aae77c5912b21f204856882b43e031d90ab9e7", "node_type": "4", "metadata": {"file_path": "docs/dev-basics/namewrapper/overview.mdx", "file_name": "overview.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/overview.mdx"}, "hash": "dc9897b245b512b4e0a295992293b2ee72ac62d41f4746e41ecd618f606c8d7b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cb2fa1b3-9773-400d-80b8-278cbb1b8988", "node_type": "1", "metadata": {"file_path": "docs/dev-basics/namewrapper/overview.mdx", "file_name": "overview.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/overview.mdx", "header_path": "/Overview/Should I Wrap My Name?/"}, "hash": "bce82fa60f599ca570d804b174237b0430bcd00aab65ebcfd951c86432d9712a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0bd6ac79-b59f-4eda-b01f-2dca9473d218", "node_type": "1", "metadata": {"header_path": "/Overview/Should I Wrap My Name?/"}, "hash": "2af6221db6aeac4b20063f15669db4b05028fad86276229125176fd84057237c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### I have an unwrapped .eth subname:\n - Examples: `sub.name.eth`, `further.sub.name.eth`\n - If you wrap this name:\n   - Your .eth subname will now be an actual NFT that will show up in your wallet and on marketplace websites.\n   - If the owner of the parent name <Link to=\"/dev-basics/namewrapper/states#emancipated\">Emancipates</Link> your subname, then:\n     - Your subname NFT is \"unruggable\", meaning that the owner of the parent name cannot revoke or replace your subname.\n     - You will be able to use the <Link to=\"/dev-basics/namewrapper/fuses\">fuses/permissions system</Link> with your subname and any sub-subnames that you create.\n     - You will be able to create subnames that are \"unruggable\" NFTs.\n     - See this section for additional use-cases, like selling/renting subnames: <Link to=\"/dev-basics/namewrapper/use-cases\">Name Wrapper Use-Cases</Link>", "mimetype": "text/plain", "start_char_idx": 4212, "end_char_idx": 5081, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0bd6ac79-b59f-4eda-b01f-2dca9473d218": {"__data__": {"id_": "0bd6ac79-b59f-4eda-b01f-2dca9473d218", "embedding": null, "metadata": {"file_path": "docs/dev-basics/namewrapper/overview.mdx", "file_name": "overview.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/overview.mdx", "header_path": "/Overview/Should I Wrap My Name?/", "customer_id": 1, "source_url": "docs/dev-basics/namewrapper/overview.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["unwrapping", "automatically", "contract", "unwrapped", "actual", "marketplace", "wrapper", "domain", "transfer", "owner", "wrapping", "wallet", "technical"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a9aae77c5912b21f204856882b43e031d90ab9e7", "node_type": "4", "metadata": {"file_path": "docs/dev-basics/namewrapper/overview.mdx", "file_name": "overview.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/overview.mdx"}, "hash": "dc9897b245b512b4e0a295992293b2ee72ac62d41f4746e41ecd618f606c8d7b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fdfcec0c-c3b1-4166-b007-dbb3cde6cb87", "node_type": "1", "metadata": {"file_path": "docs/dev-basics/namewrapper/overview.mdx", "file_name": "overview.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/overview.mdx", "header_path": "/Overview/Should I Wrap My Name?/"}, "hash": "85fe734c3d4abec371f5fb318a103f2115b6b06bfafa00750af9a4584f8b4204", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "96131c9d-d48c-4bde-a9e3-859baf1834f0", "node_type": "1", "metadata": {"header_path": "/Overview/"}, "hash": "999374c62b7b80cc6585b8014cde6c80a61f843af3eb05e912949f7ebc7bf40e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### I have an unwrapped DNS domain:\n - Examples: `mydomain.com`, `sub.mydomain.com`\n - If you wrap this name:\n   - Your DNS domain will now be an actual NFT that will show up in your wallet and on marketplace websites. ## Contract Technical Details: Wrapping and Unwrapping\n\nWhen wrapping a .eth 2LD, you transfer the Owner (Registrant) of the ERC-721 NFT to the Name Wrapper contract.  \nThe contract will then automatically take over the Manager (Controller) for the name as well.  \n\nYou can do this by calling the <Link to=\"https://github.com/ensdomains/ens-contracts/tree/master/contracts/wrapper#wrapeth2ld\">`wrapETH2LD`</Link> method. Or, you can directly transfer the ERC-721 NFT to the Name Wrapper contract. In return, the contract issues you an ERC-1155 NFT.\n\nWhen wrapping any other ENS name, you transfer the Manager (Controller) of the name to the Name Wrapper contract. You can do this by calling the <Link to=\"https://github.com/ensdomains/ens-contracts/tree/master/contracts/wrapper#wrap\">`wrap`</Link> method. In return, the contract issues you an ERC-1155 NFT.\n\nAs the owner of the wrapped name, you can unwrap at any time by calling either <Link to=\"https://github.com/ensdomains/ens-contracts/tree/master/contracts/wrapper#unwrapeth2ld\">`unwrapETH2LD`</Link> or <Link to=\"https://github.com/ensdomains/ens-contracts/tree/master/contracts/wrapper#unwrap\">`unwrap`</Link>. You can do this as long as the permission to unwrap has not been revoked.", "mimetype": "text/plain", "start_char_idx": 5083, "end_char_idx": 5301, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d34764f9-082b-4b34-8560-55d3871c00cd": {"__data__": {"id_": "d34764f9-082b-4b34-8560-55d3871c00cd", "embedding": null, "metadata": {"file_path": "docs/dev-basics/namewrapper/states.mdx", "file_name": "states.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/states.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/dev-basics/namewrapper/states.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["explaining", "namewrapper", "wrapper", "wrapped", "states", "serenae", "names", "through", "lifecycle"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e388974b7c1a48f2123d0c1f6e9fb557cf726ed1", "node_type": "4", "metadata": {"file_path": "docs/dev-basics/namewrapper/states.mdx", "file_name": "states.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/states.mdx"}, "hash": "99193cab13ecdd0fa7ab09475cc6c3446c5e08dbf6f467109e68a0b2bd65b939", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "921c37cc-6092-4f2f-a5cc-4438d2bf7954", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "a2bb71c48160bd0f35988a4c82458554c9d802b000018a4fa6290e89f82d6d1a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ntitle: Wrapped States\nlast_update:\n  author: serenae\ntags:\n  - namewrapper\n  - name wrapper\n  - wrapped\n  - wrapper\n  - wrapped name\nkeywords: [namewrapper, name wrapper, wrapped, wrapper, wrapped name]\ndescription: Explaining the lifecycle and states that wrapped names go through\n--- # Wrapped States\n\n```mermaid\n%%{\n  init: {\n    'flowchart': {\n      'curve': 'linear'\n      } } }%%\n\ngraph LR;\n  unregistered((Unregistered));\n  unwrapped(Unwrapped);\n  wrapped(Wrapped);\n  emancipated(Emancipated);\n  locked(Locked);\n  unregistered--->|register|unwrapped;\n  unwrapped--->|wrap|wrapped;\n  wrapped--->|unwrap|unwrapped;\n  wrapped--->|protect|emancipated;\n  emancipated--->|lock|locked;\n  emancipated--->|unwrap|unwrapped;\n  emancipated--->|expire|unregistered;\n  locked-->|expire|unregistered;\n```\n\nTaking the Name Wrapper into account, an ENS name can be in one of these possible states:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 289, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "dd6e4d6f-3852-48f7-980d-efe9a137585a": {"__data__": {"id_": "dd6e4d6f-3852-48f7-980d-efe9a137585a", "embedding": null, "metadata": {"file_path": "docs/dev-basics/namewrapper/states.mdx", "file_name": "states.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/states.mdx", "header_path": "/Wrapped States/", "customer_id": 1, "source_url": "docs/dev-basics/namewrapper/states.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["proves", "ownership", "unwrapped", "wrapper", "exists", "registry", "wrapped", "issued", "which", "expired", "unregistered", "contract"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e388974b7c1a48f2123d0c1f6e9fb557cf726ed1", "node_type": "4", "metadata": {"file_path": "docs/dev-basics/namewrapper/states.mdx", "file_name": "states.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/states.mdx"}, "hash": "99193cab13ecdd0fa7ab09475cc6c3446c5e08dbf6f467109e68a0b2bd65b939", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "921c37cc-6092-4f2f-a5cc-4438d2bf7954", "node_type": "1", "metadata": {"file_path": "docs/dev-basics/namewrapper/states.mdx", "file_name": "states.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/states.mdx", "header_path": "/"}, "hash": "c830e4fe1a3773123fe27d9a9d4b0281668c9170cc0ba58a0eb1f6e2ee788bc5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2f05752b-af03-4774-8863-1d80c99137c2", "node_type": "1", "metadata": {"header_path": "/Wrapped States/"}, "hash": "ac65d3fc7adbea6eb88870d2239dfd9b42a8ded7a20fd0abbcfec95348196347", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Unregistered\nThe name has not even been registered/created yet, or it has expired. ## Unwrapped\nThe name exists and has not expired (in the case of .eth second-level names). The Name Wrapper contract does not have ownership over the name. You own the name in the registry and/or .eth registrar. ## Wrapped\nThe Name Wrapper contract has ownership of the name (in the registry/registrar). You are issued an ERC-1155 NFT in return, which proves that you are the actual owner.  \n\nYou can unwrap the name at any time, which burns the ERC-1155 NFT, and returns ownership in the registry/registrar back to you. If your name is a subname like `sub.name.eth`, then the owner of `name.eth` can technically replace the subname and transfer it to a different owner.  \n\nIn addition, the parent owner can burn parent-controlled fuses on your name.", "mimetype": "text/plain", "start_char_idx": 895, "end_char_idx": 980, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e9cb1aae-aa73-435e-9645-9e163aaf3472": {"__data__": {"id_": "e9cb1aae-aa73-435e-9645-9e163aaf3472", "embedding": null, "metadata": {"file_path": "docs/dev-basics/namewrapper/states.mdx", "file_name": "states.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/states.mdx", "header_path": "/Wrapped States/", "customer_id": 1, "source_url": "docs/dev-basics/namewrapper/states.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["additional", "automatically", "locked", "unwrapped", "parent", "replace", "fuses", "rewrapped", "emancipated", "owner", "still", "state", "names", "longer"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e388974b7c1a48f2123d0c1f6e9fb557cf726ed1", "node_type": "4", "metadata": {"file_path": "docs/dev-basics/namewrapper/states.mdx", "file_name": "states.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/states.mdx"}, "hash": "99193cab13ecdd0fa7ab09475cc6c3446c5e08dbf6f467109e68a0b2bd65b939", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5f52bb6f-2365-4c14-9385-e22bb291a8ed", "node_type": "1", "metadata": {"file_path": "docs/dev-basics/namewrapper/states.mdx", "file_name": "states.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/states.mdx", "header_path": "/Wrapped States/"}, "hash": "efff0dc58464bc45f5cbb55747650611728f70e4f5dc725b08a24b5d3cb64da7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bddbee05-106a-4994-93a5-a4b3f32d07ae", "node_type": "1", "metadata": {"header_path": "/Wrapped States/"}, "hash": "7e9fec154f3f85e24826909f8f8b0aebb69a66b1d612ce775b89f06c2ee312db", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Emancipated\nThe owner of the parent name is no longer able to replace this name, or burn any additional fuses on it. All .eth second-level names (like `name.eth`) are automatically put into the Emancipated state when they are wrapped. The name can still be unwrapped and rewrapped by the owner. ## Locked\nThe name can no longer be unwrapped. The owner can now burn owner-controlled fuses on the name. Fuses for subnames of this name can now be burned as well. # Name Wrapper Use-Cases\n\n```mdx-code-block\nimport DocCardList from '@theme/DocCardList';\n\n<DocCardList />", "mimetype": "text/plain", "start_char_idx": 1735, "end_char_idx": 2032, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e4516197-9820-4de6-9b9f-281d77e7d24d": {"__data__": {"id_": "e4516197-9820-4de6-9b9f-281d77e7d24d", "embedding": null, "metadata": {"file_path": "docs/dev-basics/namewrapper/use-cases/issue-tickets.mdx", "file_name": "issue-tickets.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/use-cases/issue-tickets.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/dev-basics/namewrapper/use-cases/issue-tickets.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["issue", "permissions", "tickets", "wrapper", "fuses", "subdomains", "namewrapper", "serenae"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "82b92aa69032d14de0733589b2dd55fdeb12e61b", "node_type": "4", "metadata": {"file_path": "docs/dev-basics/namewrapper/use-cases/issue-tickets.mdx", "file_name": "issue-tickets.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/use-cases/issue-tickets.mdx"}, "hash": "c6a7c73a105d197e442845d8385291769784314a342f018ff365952b6823db94", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ce05d3af-a828-4b97-9c1a-6b9a5686ddbe", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "309a5965fd68baac17d640147424eb17684e12f91ed60d2e08381f7fa23ac1e1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ntitle: Issue Subdomains As Tickets\nlast_update:\n  author: serenae\ntags:\n  - fuses\n  - permissions\n  - namewrapper fuses\n  - wrapper fuses\n  - namewrapper permissions\n  - wrapper permissions\n  - namewrapper\n  - name wrapper\n  - wrapper\n  - wrapped name\n  - NFT\n  - NFTs\n  - subnames\n  - subdomains\nkeywords: [fuses, permissions, namewrapper fuses, wrapper fuses, namewrapper permissions, wrapper permissions, namewrapper, name wrapper, wrapper, wrapped name, NFT, NFTs, subnames, subdomains]\ndescription: Issue subdomains as tickets to an event\n---", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 551, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ce05d3af-a828-4b97-9c1a-6b9a5686ddbe": {"__data__": {"id_": "ce05d3af-a828-4b97-9c1a-6b9a5686ddbe", "embedding": null, "metadata": {"file_path": "docs/dev-basics/namewrapper/use-cases/issue-tickets.mdx", "file_name": "issue-tickets.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/use-cases/issue-tickets.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/dev-basics/namewrapper/use-cases/issue-tickets.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["issue", "tickets", "those", "emancipate", "event", "fuses", "choose", "custom", "still", "subdomains", "indicate", "maybe"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "82b92aa69032d14de0733589b2dd55fdeb12e61b", "node_type": "4", "metadata": {"file_path": "docs/dev-basics/namewrapper/use-cases/issue-tickets.mdx", "file_name": "issue-tickets.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/use-cases/issue-tickets.mdx"}, "hash": "c6a7c73a105d197e442845d8385291769784314a342f018ff365952b6823db94", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e4516197-9820-4de6-9b9f-281d77e7d24d", "node_type": "1", "metadata": {"file_path": "docs/dev-basics/namewrapper/use-cases/issue-tickets.mdx", "file_name": "issue-tickets.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/use-cases/issue-tickets.mdx", "header_path": "/"}, "hash": "deaf853e6c4acf1aae9e1c75a04aa44f5a9c4bd260e341c629c9dcd104679b0f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Issue subdomains as tickets to an event\n\nMaybe you have `mycoolevent.eth` and you want to issue tickets like `1.ticket.2023.mycoolevent.eth`.\n\nIf you want, you can choose to *not* Emancipate those subnames, but still burn some custom parent-controlled fuses. Those fuses might:\n* Indicate what \"tier\" their event ticket is\n   - Maybe they can upgrade their ticket to a higher tier, which would burn some additional fuses\n* Allow them access to the express line or some VIP room\n   - Maybe even automatically via some smart door\n\nWhen you burn those fuses, perhaps you also set the expiry to the day after the event ends.\n\nOr, maybe you want your attendees to be able to keep their subnames as a souvenir or proof-of-attendance!\n\nIf so, then instead of letting the names expire at the end of the event, you could extend the expiry and burn some additional fuses to allow the attendees to keep them forever! In that case you might want to burn these fuses:\n* `CAN_EXTEND_EXPIRY | PARENT_CANNOT_CONTROL`\n\nIf you want those tickets to be non-transferrable (soulbound to the address that attended), then burn these fuses:\n* `CAN_EXTEND_EXPIRY | PARENT_CANNOT_CONTROL | CANNOT_UNWRAP | CANNOT_TRANSFER`", "mimetype": "text/plain", "start_char_idx": 553, "end_char_idx": 1751, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "32d85a66-600c-4087-aa86-276476d672d3": {"__data__": {"id_": "32d85a66-600c-4087-aa86-276476d672d3", "embedding": null, "metadata": {"file_path": "docs/dev-basics/namewrapper/use-cases/lock-records.mdx", "file_name": "lock-records.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/use-cases/lock-records.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/dev-basics/namewrapper/use-cases/lock-records.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["permissions", "wrapper", "fuses", "resolved", "records", "namewrapper", "serenae"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5afa175c67246cdf95838acf7af829ddc04c452e", "node_type": "4", "metadata": {"file_path": "docs/dev-basics/namewrapper/use-cases/lock-records.mdx", "file_name": "lock-records.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/use-cases/lock-records.mdx"}, "hash": "dc2b64ae498e3bb607fb149178a837c470de03a4b8978739269ef53de82f879b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "66272ba0-0d63-440c-9474-9b9eb971540c", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "a4508ac5638eaa7571a04053b0c1c6c877eb1ae600aa24adca88cbf147ba732b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ntitle: Lock Resolved Records\nlast_update:\n  author: serenae\ntags:\n  - fuses\n  - permissions\n  - namewrapper fuses\n  - wrapper fuses\n  - namewrapper permissions\n  - wrapper permissions\n  - namewrapper\n  - name wrapper\n  - wrapper\n  - wrapped name\n  - NFT\n  - NFTs\n  - subnames\n  - subdomains\n  - resolver\nkeywords: [fuses, permissions, namewrapper fuses, wrapper fuses, namewrapper permissions, wrapper permissions, namewrapper, name wrapper, wrapper, wrapped name, NFT, NFTs, subnames, subdomains, resolver]\ndescription: Lock the resolved records for a name\n---", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 565, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "66272ba0-0d63-440c-9474-9b9eb971540c": {"__data__": {"id_": "66272ba0-0d63-440c-9474-9b9eb971540c", "embedding": null, "metadata": {"file_path": "docs/dev-basics/namewrapper/use-cases/lock-records.mdx", "file_name": "lock-records.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/use-cases/lock-records.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/dev-basics/namewrapper/use-cases/lock-records.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["specific", "allows", "newly", "resolves", "current", "cases", "public", "resolved", "registered", "which", "update", "perhaps", "records", "names"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5afa175c67246cdf95838acf7af829ddc04c452e", "node_type": "4", "metadata": {"file_path": "docs/dev-basics/namewrapper/use-cases/lock-records.mdx", "file_name": "lock-records.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/use-cases/lock-records.mdx"}, "hash": "dc2b64ae498e3bb607fb149178a837c470de03a4b8978739269ef53de82f879b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "32d85a66-600c-4087-aa86-276476d672d3", "node_type": "1", "metadata": {"file_path": "docs/dev-basics/namewrapper/use-cases/lock-records.mdx", "file_name": "lock-records.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/use-cases/lock-records.mdx", "header_path": "/"}, "hash": "fc8e965e841712144d2a41222f6394a3ce8e591595717298363a22bd01779031", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Lock the resolved records for a name\n\nBy default, newly registered names will use the Public Resolver, which just allows the current manager/controller of the name to update any records.\n\nHowever, in some cases perhaps you want to make sure that a name resolves to specific records and **never** changes. You can accomplish this with the **CANNOT_SET_RESOLVER** fuse.\n\nSay you own `mycoolcontract.eth` representing a smart contract. You can use ENS subnames to refer to specific versions of that contract, like `1.mycoolcontract.eth`. And perhaps you want those versioned subnames to always point to:\n* The ETH address of that immutable contract\n* The ABI for that contract\n* The contenthash for some versioned documentation page\n* etc.\n\nOne way to do this is just to make sure the name is **Locked**, all the records are set correctly, and then transfer the owner to some burn address so it can never be updated again.\n\nBut of course this isn't ideal, because maybe there are some records that you *do* want to update in the future. Or maybe you still want to keep ownership of that subname for other reasons.\n\nInstead of essentially burning the name, you could create a custom resolver that locks in certain records forever. Then:\n1. Set the resolver of that name to your custom contract\n2. Set the records however you want and lock them into the resolver\n3. Burn these fuses on the name:\n   - `PARENT_CANNOT_CONTROL | CANNOT_UNWRAP | CANNOT_SET_RESOLVER`\n\nNow you can still keep ownership and even some limited management power over the name, while still guaranteeing that the ETH address, ABI, and whatever other records are completely immutable, as long as the expiry is set appropriately.", "mimetype": "text/plain", "start_char_idx": 567, "end_char_idx": 2263, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6d73f126-7390-46f2-9103-cc327fc67aa0": {"__data__": {"id_": "6d73f126-7390-46f2-9103-cc327fc67aa0", "embedding": null, "metadata": {"file_path": "docs/dev-basics/namewrapper/use-cases/nft-holders.mdx", "file_name": "nft-holders.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/use-cases/nft-holders.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/dev-basics/namewrapper/use-cases/nft-holders.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["permissions", "wrapper", "fuses", "subnames", "holders", "namewrapper", "serenae"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d6d6cfb75bea34c2dc1d6b69b7f13e4be508aa7a", "node_type": "4", "metadata": {"file_path": "docs/dev-basics/namewrapper/use-cases/nft-holders.mdx", "file_name": "nft-holders.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/use-cases/nft-holders.mdx"}, "hash": "4d0e88d8ae013b2cdead005c775c499e3250f49fe0e842b8d012829d27556fa3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "462d7fc2-4e96-4350-98ab-0a74fef0983b", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "f5aee662aeb43218c2ec261a937eac6c3f6d1d825c963532b26bb161ee6aa736", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ntitle: Give Subnames Out To NFT Holders\nlast_update:\n  author: serenae\ntags:\n  - fuses\n  - permissions\n  - namewrapper fuses\n  - wrapper fuses\n  - namewrapper permissions\n  - wrapper permissions\n  - namewrapper\n  - name wrapper\n  - wrapper\n  - wrapped name\n  - NFT\n  - NFTs\n  - subnames\n  - subdomains\nkeywords: [fuses, permissions, namewrapper fuses, wrapper fuses, namewrapper permissions, wrapper permissions, namewrapper, name wrapper, wrapper, wrapped name, NFT, NFTs, subnames, subdomains]\ndescription: I want to give subnames out to all of my DAO members / NFT holders!\n---", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 584, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "462d7fc2-4e96-4350-98ab-0a74fef0983b": {"__data__": {"id_": "462d7fc2-4e96-4350-98ab-0a74fef0983b", "embedding": null, "metadata": {"file_path": "docs/dev-basics/namewrapper/use-cases/nft-holders.mdx", "file_name": "nft-holders.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/use-cases/nft-holders.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/dev-basics/namewrapper/use-cases/nft-holders.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["representing", "least", "popular", "subnames", "wrapped", "create", "might", "their", "distribute", "project", "option", "members"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d6d6cfb75bea34c2dc1d6b69b7f13e4be508aa7a", "node_type": "4", "metadata": {"file_path": "docs/dev-basics/namewrapper/use-cases/nft-holders.mdx", "file_name": "nft-holders.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/use-cases/nft-holders.mdx"}, "hash": "4d0e88d8ae013b2cdead005c775c499e3250f49fe0e842b8d012829d27556fa3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6d73f126-7390-46f2-9103-cc327fc67aa0", "node_type": "1", "metadata": {"file_path": "docs/dev-basics/namewrapper/use-cases/nft-holders.mdx", "file_name": "nft-holders.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/use-cases/nft-holders.mdx", "header_path": "/"}, "hash": "47ceb8d5de275faa9db4dfe8e2677928fde0ab7cca8f8bc1a8a6b7a9104f893f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e8751f60-10a7-41fe-8bd8-87f8ebe28614", "node_type": "1", "metadata": {"header_path": "/I want to give subnames out to all of my DAO members / NFT holders!/"}, "hash": "8a59ec54e9e191cc9baf7a8989d1c4276329b5c66864751e728c5dcb44186ec1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# I want to give subnames out to all of my DAO members / NFT holders!\n\nSay you own the wrapped name `mycoolnft.eth`, representing a popular NFT project you created. You want to distribute subnames like `6529.mycoolnft.eth` to all holders.\n\nOne option is to just bulk create the subnames and drop the wrapped NFTs into their wallets. This might be good at least as an initial drop, because then the holders don't need to interact with any contract or spend any gas, you're doing that for them!\n\nTo create the subnames, you'd use the <Link to=\"https://github.com/ensdomains/ens-contracts/tree/master/contracts/wrapper#setsubnodeowner\">setSubnodeOwner</Link> or <Link to=\"https://github.com/ensdomains/ens-contracts/tree/master/contracts/wrapper#setsubnoderecord\">setSubnodeRecord</Link> methods.\n\nYou must also decide:", "mimetype": "text/plain", "start_char_idx": 586, "end_char_idx": 1402, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e8751f60-10a7-41fe-8bd8-87f8ebe28614": {"__data__": {"id_": "e8751f60-10a7-41fe-8bd8-87f8ebe28614", "embedding": null, "metadata": {"file_path": "docs/dev-basics/namewrapper/use-cases/nft-holders.mdx", "file_name": "nft-holders.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/use-cases/nft-holders.mdx", "header_path": "/I want to give subnames out to all of my DAO members / NFT holders!/", "customer_id": 1, "source_url": "docs/dev-basics/namewrapper/use-cases/nft-holders.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["outside", "thing", "other", "those", "consider", "whether", "holder", "control", "emancipate", "subnames", "corresponding", "completely", "revoke", "always"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d6d6cfb75bea34c2dc1d6b69b7f13e4be508aa7a", "node_type": "4", "metadata": {"file_path": "docs/dev-basics/namewrapper/use-cases/nft-holders.mdx", "file_name": "nft-holders.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/use-cases/nft-holders.mdx"}, "hash": "4d0e88d8ae013b2cdead005c775c499e3250f49fe0e842b8d012829d27556fa3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "462d7fc2-4e96-4350-98ab-0a74fef0983b", "node_type": "1", "metadata": {"file_path": "docs/dev-basics/namewrapper/use-cases/nft-holders.mdx", "file_name": "nft-holders.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/use-cases/nft-holders.mdx", "header_path": "/"}, "hash": "f2082a58f18f24faa65b35f8f917475e2a463045a81b437f15defba3a0d9be55", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "765447fa-2b8e-4d44-a605-a509db3666dc", "node_type": "1", "metadata": {"header_path": "/I want to give subnames out to all of my DAO members / NFT holders!/"}, "hash": "716bce75bb875f3b3cbd7af074e75575b4b4e167728d49141d918f18a2a28587", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## How much control over the subnames do you want to relinquish?\n\nDo you want to be able to revoke subnames? Or do you want them to be completely outside your control?\n\nOne thing to consider is whether you want the **current** holder of your NFT to always be able to claim/reclaim the corresponding ENS subname. If so, then you will **not** want to Emancipate those subnames (in other words, do not burn **PARENT_CANNOT_CONTROL**). If the subname is Emancipated, then the NFT holder could sell/transfer the NFT but keep the subname (up until the expiry).\n\nTo make it easy for anyone to claim/reclaim a subname after your initial drop, you can set up a contract for this.", "mimetype": "text/plain", "start_char_idx": 1404, "end_char_idx": 2074, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "765447fa-2b8e-4d44-a605-a509db3666dc": {"__data__": {"id_": "765447fa-2b8e-4d44-a605-a509db3666dc", "embedding": null, "metadata": {"file_path": "docs/dev-basics/namewrapper/use-cases/nft-holders.mdx", "file_name": "nft-holders.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/use-cases/nft-holders.mdx", "header_path": "/I want to give subnames out to all of my DAO members / NFT holders!/", "customer_id": 1, "source_url": "docs/dev-basics/namewrapper/use-cases/nft-holders.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["verify", "wrapper", "method", "current", "subname", "owner", "claim", "contract", "setting"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d6d6cfb75bea34c2dc1d6b69b7f13e4be508aa7a", "node_type": "4", "metadata": {"file_path": "docs/dev-basics/namewrapper/use-cases/nft-holders.mdx", "file_name": "nft-holders.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/use-cases/nft-holders.mdx"}, "hash": "4d0e88d8ae013b2cdead005c775c499e3250f49fe0e842b8d012829d27556fa3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e8751f60-10a7-41fe-8bd8-87f8ebe28614", "node_type": "1", "metadata": {"file_path": "docs/dev-basics/namewrapper/use-cases/nft-holders.mdx", "file_name": "nft-holders.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/use-cases/nft-holders.mdx", "header_path": "/I want to give subnames out to all of my DAO members / NFT holders!/"}, "hash": "5076ad47317b31c937359824936572a6f2c1bfc981cf6643ab903087c06e26de", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "79f2b5ad-ffd3-4bf8-bd5d-d11c19cb3220", "node_type": "1", "metadata": {"header_path": "/I want to give subnames out to all of my DAO members / NFT holders!/"}, "hash": "08806c79fd8d08db37efc87d03986bcbcc7f94e41ea5a69736e72baf39d39153", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Setting up a subname claim contract\n\nThe `claim` method of your contract could:\n\n1. Call `ownerOf` or `balanceOf` on your NFT contract to get or verify the current owner of the NFT\n2. Call `ownerOf` or `balanceOf` on the ENS Name Wrapper contract to get or verify the current owner of the wrapped subname\n   - If both owner addresses are the same, just return, nothing to do\n3. Call `setSubnodeOwner` or `setSubnodeRecord` on the ENS Name Wrapper:\n   - **owner:** The current owner of the NFT\n   - **fuses:** What fuses you want to burn (if any) on that subname. If you burn any fuses, you must also set an expiry.\n   - **expiry:** When the subname will expire.\n\nThen, to give that contract access to create subnames on your behalf, you would call `setApprovalForAll` on the Name Wrapper to approve your contract as an operator.\n\nNow, even if the NFT gets sold / transferred, the new owner will be able to claim their `mycoolnft.eth` subname at any time.\n\nIn addition, if you expand your NFT collection in the future and there are new owners, then those new owners would be able to claim their subnames as well.\n\nIf you are creating a new NFT contract, you could even bake this functionality **directly into the NFT contract** too, instead of needing a separate contract! By doing this, you wouldn't need a separate `claim` method either, your NFT contract would just **automatically transfer the wrapped ENS subname** whenever the NFT itself gets transferred!", "mimetype": "text/plain", "start_char_idx": 2076, "end_char_idx": 3539, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "79f2b5ad-ffd3-4bf8-bd5d-d11c19cb3220": {"__data__": {"id_": "79f2b5ad-ffd3-4bf8-bd5d-d11c19cb3220", "embedding": null, "metadata": {"file_path": "docs/dev-basics/namewrapper/use-cases/nft-holders.mdx", "file_name": "nft-holders.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/use-cases/nft-holders.mdx", "header_path": "/I want to give subnames out to all of my DAO members / NFT holders!/", "customer_id": 1, "source_url": "docs/dev-basics/namewrapper/use-cases/nft-holders.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["certain", "owners", "perks", "giving", "emancipate", "grant", "subnames", "decide", "fuses", "perhaps", "subname", "there", "however", "still", "unreserved"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d6d6cfb75bea34c2dc1d6b69b7f13e4be508aa7a", "node_type": "4", "metadata": {"file_path": "docs/dev-basics/namewrapper/use-cases/nft-holders.mdx", "file_name": "nft-holders.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/use-cases/nft-holders.mdx"}, "hash": "4d0e88d8ae013b2cdead005c775c499e3250f49fe0e842b8d012829d27556fa3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "765447fa-2b8e-4d44-a605-a509db3666dc", "node_type": "1", "metadata": {"file_path": "docs/dev-basics/namewrapper/use-cases/nft-holders.mdx", "file_name": "nft-holders.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/use-cases/nft-holders.mdx", "header_path": "/I want to give subnames out to all of my DAO members / NFT holders!/"}, "hash": "8a993269091dd1d3963d2eb1b89370f0448f6f864a97b1225de2d5a0d8a0ca93", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Giving your subname owners perks\n\nIf you decide to not Emancipate the subnames that you issue, you **will** still be able to burn any Parent-Controlled Fuses. There are 13 unreserved parent-controlled fuses that you can use however you wish!\n\nFor example, perhaps you want to grant on-chain \"perks\" or \"roles\" to certain holders. You would call <Link to=\"https://github.com/ensdomains/ens-contracts/tree/master/contracts/wrapper#setchildfuses\">setChildFuses</Link> on the Name Wrapper and pass in the fuses you want to burn, and the expiry.\n\nThis means that those \"perks\" or \"roles\" can also be time-boxed if you want. Maybe a perk expires in 1 week or something, up to you.\n\nThere is also the reserved **CAN_EXTEND_EXPIRY** parent-controlled fuse. If you burn this, then the subname owner will be able to extend their own expiry whenever they want.", "mimetype": "text/plain", "start_char_idx": 3541, "end_char_idx": 4393, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c255850c-9f1e-455a-aee2-5898e492da45": {"__data__": {"id_": "c255850c-9f1e-455a-aee2-5898e492da45", "embedding": null, "metadata": {"file_path": "docs/dev-basics/namewrapper/use-cases/sell-rent-subnames.mdx", "file_name": "sell-rent-subnames.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/use-cases/sell-rent-subnames.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/dev-basics/namewrapper/use-cases/sell-rent-subnames.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["permissions", "wrapper", "fuses", "subnames", "namewrapper", "serenae"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "45aaf0fe6de941f721b00d0d740c7d6b24e606f0", "node_type": "4", "metadata": {"file_path": "docs/dev-basics/namewrapper/use-cases/sell-rent-subnames.mdx", "file_name": "sell-rent-subnames.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/use-cases/sell-rent-subnames.mdx"}, "hash": "5b1067ed6072ed109cafdc4470a6b1fd3d16a07c5a516e02fdda070c8ddcb39b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8d6897db-7d60-4ea8-9851-92eca308c319", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "f280b0fca35f18c097466890b42e58ad5aa6857a38321956c3217718073d2173", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ntitle: Sell Or Rent Subnames\nlast_update:\n  author: serenae\ntags:\n  - fuses\n  - permissions\n  - namewrapper fuses\n  - wrapper fuses\n  - namewrapper permissions\n  - wrapper permissions\n  - namewrapper\n  - name wrapper\n  - wrapper\n  - wrapped name\n  - NFT\n  - NFTs\n  - subnames\n  - subdomains\nkeywords: [fuses, permissions, namewrapper fuses, wrapper fuses, namewrapper permissions, wrapper permissions, namewrapper, name wrapper, wrapper, wrapped name, NFT, NFTs, subnames, subdomains]\ndescription: I want to sell / rent out subnames!\n---", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 541, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8d6897db-7d60-4ea8-9851-92eca308c319": {"__data__": {"id_": "8d6897db-7d60-4ea8-9851-92eca308c319", "embedding": null, "metadata": {"file_path": "docs/dev-basics/namewrapper/use-cases/sell-rent-subnames.mdx", "file_name": "sell-rent-subnames.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/use-cases/sell-rent-subnames.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/dev-basics/namewrapper/use-cases/sell-rent-subnames.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["accomplish", "obviously", "registration", "handle", "subnames", "wrapped", "renewal", "manually", "create", "scale", "interact", "users", "contract"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "45aaf0fe6de941f721b00d0d740c7d6b24e606f0", "node_type": "4", "metadata": {"file_path": "docs/dev-basics/namewrapper/use-cases/sell-rent-subnames.mdx", "file_name": "sell-rent-subnames.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/use-cases/sell-rent-subnames.mdx"}, "hash": "5b1067ed6072ed109cafdc4470a6b1fd3d16a07c5a516e02fdda070c8ddcb39b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c255850c-9f1e-455a-aee2-5898e492da45", "node_type": "1", "metadata": {"file_path": "docs/dev-basics/namewrapper/use-cases/sell-rent-subnames.mdx", "file_name": "sell-rent-subnames.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/use-cases/sell-rent-subnames.mdx", "header_path": "/"}, "hash": "0923258dbfed10c3dd70034843dee085485bc129521856612a21f9475620ea54", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3c22067d-ab2c-41ba-a2d8-f90ae11d748d", "node_type": "1", "metadata": {"header_path": "/I want to sell / rent out subnames!/"}, "hash": "000c33d51d8978b55d2bd599354be92a19eca3e28c310cf53c7fd7602b620db3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# I want to sell / rent out subnames!\n\nSay you own the wrapped name `verypopularname.eth`. Obviously you can just manually create wrapped subnames like `my.verypopularname.eth` and then sell them on an NFT marketplace. But that sure doesn't scale well.\n\nTo accomplish this, you will want to create a **subname registrar**. This is a contract that will handle all the registration / renewal for you, and then users will be able to interact with that contract in order to register their own subnames.\n\nIn fact, this is exactly how .eth 2LDs are registered. The owner of the `eth` TLD (the NFT contract) delegates registration / renewal to the ETHRegistrarController contract. It is acting as a subname registrar for the name `eth`.\n\nYour contract would expose a `register` method that anyone can call. Under the hood it will use the <Link to=\"https://github.com/ensdomains/ens-contracts/tree/master/contracts/wrapper#setsubnodeowner\">setSubnodeOwner</Link> or <Link to=\"https://github.com/ensdomains/ens-contracts/tree/master/contracts/wrapper#setsubnoderecord\">setSubnodeRecord</Link> methods to create subnames, passing in the **fuses** and **expiry** you want to set.", "mimetype": "text/plain", "start_char_idx": 543, "end_char_idx": 1711, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3c22067d-ab2c-41ba-a2d8-f90ae11d748d": {"__data__": {"id_": "3c22067d-ab2c-41ba-a2d8-f90ae11d748d", "embedding": null, "metadata": {"file_path": "docs/dev-basics/namewrapper/use-cases/sell-rent-subnames.mdx", "file_name": "sell-rent-subnames.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/use-cases/sell-rent-subnames.mdx", "header_path": "/I want to sell / rent out subnames!/", "customer_id": 1, "source_url": "docs/dev-basics/namewrapper/use-cases/sell-rent-subnames.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["consider", "burning", "replace", "subnames", "fuses", "should", "where", "place", "users", "revoke", "state", "register", "assuming", "cannot"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "45aaf0fe6de941f721b00d0d740c7d6b24e606f0", "node_type": "4", "metadata": {"file_path": "docs/dev-basics/namewrapper/use-cases/sell-rent-subnames.mdx", "file_name": "sell-rent-subnames.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/use-cases/sell-rent-subnames.mdx"}, "hash": "5b1067ed6072ed109cafdc4470a6b1fd3d16a07c5a516e02fdda070c8ddcb39b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8d6897db-7d60-4ea8-9851-92eca308c319", "node_type": "1", "metadata": {"file_path": "docs/dev-basics/namewrapper/use-cases/sell-rent-subnames.mdx", "file_name": "sell-rent-subnames.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/use-cases/sell-rent-subnames.mdx", "header_path": "/"}, "hash": "4c49a32d6aede9268cbd1c4bb2aac46dddb706f11abc2b9f7110384ce07fe362", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ec781f92-9cc1-47e7-b197-89a46f871e59", "node_type": "1", "metadata": {"header_path": "/I want to sell / rent out subnames!/"}, "hash": "9c8c6fc7a6b9545b43d841217220f2a1089a36c329812a2fcc06724b7f8c1df3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## What fuses should I burn???\n\nFirst, note that if you want to burn any fuses on subnames, then your name must be **Locked** (meaning **CANNOT_UNWRAP** is burned).\n\nAssuming that you want your subnames to be \"unruggable\", such that you cannot replace / revoke them, then you will want to burn **PARENT_CANNOT_CONTROL** on the subnames. This will place them in the **Emancipated** state upon registration.\n\nIf you want to sell \"forever\" subnames, where users register once and can then keep them for as long as they wish, then you can consider burning the **CAN_EXTEND_EXPIRY** fuse. This will allow the subname owner to extend their own expiry whenever they want. The max expiry is the expiry of the parent name, but the .eth Registrar allows *anyone* to renew/extend a .eth 2LD as well.\n\nIf you just want to **rent** subnames, then do not burn **CAN_EXTEND_EXPIRY**. Instead, you could include a `renew` method on your contract that users can call for another fee.\n\nIf you want to enable \"unruggable renewals\" for your registrar, to guarantee that users will always be able to renew, then you can call `approve` on the Name Wrapper and approve your registrar contract as the \"subname renewal manager\" for your name. Then, burn the **CANNOT_APPROVE** fuse on your name, to guarantee that you can never revoke that contract for subname renewals. See the <Link to=\"/dev-basics/namewrapper/approved-operators\">Approved Operators</Link> section above for more info.\n\nIf you want to impose other restrictions on your registered subnames, then you can burn the **CANNOT_UNWRAP** fuse to Lock the subname, and also burn whatever other fuses you want.\n\nFor example, if you want to prevent owners of your subnames (like `my.verypopularname.eth` from creating their own subnames (like `buy.my.verypopularname.eth`), then you would burn **CANNOT_UNWRAP** and **CANNOT_CREATE_SUBDOMAIN**.\n\nTo recap on fuses\u2026\n\n* Sell permanent names:\n   - `CAN_EXTEND_EXPIRY | PARENT_CANNOT_CONTROL`\n* Sell permanent names, but prevent them from creating their own subnames:\n   - `CAN_EXTEND_EXPIRY | PARENT_CANNOT_CONTROL | CANNOT_UNWRAP | CANNOT_CREATE_SUBDOMAIN`\n* Rent out names:\n   - `PARENT_CANNOT_CONTROL`\n* Rent out names, but prevent them from transferring or reselling them:\n   - `PARENT_CANNOT_CONTROL | CANNOT_UNWRAP | CANNOT_TRANSFER`\n\nAnd so on, it's up to you. You can also burn whatever custom parent-controlled or owner-controlled fuses you want to.", "mimetype": "text/plain", "start_char_idx": 1713, "end_char_idx": 4151, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ec781f92-9cc1-47e7-b197-89a46f871e59": {"__data__": {"id_": "ec781f92-9cc1-47e7-b197-89a46f871e59", "embedding": null, "metadata": {"file_path": "docs/dev-basics/namewrapper/use-cases/sell-rent-subnames.mdx", "file_name": "sell-rent-subnames.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/use-cases/sell-rent-subnames.mdx", "header_path": "/I want to sell / rent out subnames!/", "customer_id": 1, "source_url": "docs/dev-basics/namewrapper/use-cases/sell-rent-subnames.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["registrar", "whatever", "limit", "minimum", "impose", "default", "customize", "imposes", "there", "character", "contract", "premium", "rules"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "45aaf0fe6de941f721b00d0d740c7d6b24e606f0", "node_type": "4", "metadata": {"file_path": "docs/dev-basics/namewrapper/use-cases/sell-rent-subnames.mdx", "file_name": "sell-rent-subnames.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/use-cases/sell-rent-subnames.mdx"}, "hash": "5b1067ed6072ed109cafdc4470a6b1fd3d16a07c5a516e02fdda070c8ddcb39b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3c22067d-ab2c-41ba-a2d8-f90ae11d748d", "node_type": "1", "metadata": {"file_path": "docs/dev-basics/namewrapper/use-cases/sell-rent-subnames.mdx", "file_name": "sell-rent-subnames.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/use-cases/sell-rent-subnames.mdx", "header_path": "/I want to sell / rent out subnames!/"}, "hash": "3eb7038e718ab028bf21f6e2c4c48f50e01ad9eca3d63ac51c11205dc51e8bc6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Can I customize my own rules and fees?\n\nYes! It's your registrar contract, so you can impose whatever rules and fees you want.\n\nFor example, the .eth Registrar imposes a 3-character minimum on all names, as well as a <Link to=\"/core/registration/fees\">custom fee structure</Link> and a <Link to=\"/core/registration/temporary-premium\">temporary premium auction</Link> upon expiration.\n\nBy default there is no character limit on subnames, but your contract could have its own rules and fee structure or whatever you want. For example, you can:\n\n* Allow or disallow specific addresses from registering / renewing\n* Only allow registration based on some custom criteria like holding a specific NFT\n* Custom length restrictions like only 3+ characters or < 100 characters\n* Only allow names with characters `[a-z0-9]` and nothing else\n* Use a custom fee structure based on:\n   - The length of the name\n   - The specific characters that are in the name, like emojis\n   - A pre-curated list of \"good\" names like people's first names\n* And whatever other rules you want.", "mimetype": "text/plain", "start_char_idx": 4153, "end_char_idx": 5218, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "37676dbb-ef25-4ec9-b950-5f10076d9e73": {"__data__": {"id_": "37676dbb-ef25-4ec9-b950-5f10076d9e73", "embedding": null, "metadata": {"file_path": "docs/dev-basics/set-contract-primary.mdx", "file_name": "set-contract-primary.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/set-contract-primary.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/dev-basics/set-contract-primary.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["primary", "identity", "address", "regular", "wallet", "contract", "primaryname", "serenae"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "73f62c0f8e8a79fafc98311d1c45280390e91965", "node_type": "4", "metadata": {"file_path": "docs/dev-basics/set-contract-primary.mdx", "file_name": "set-contract-primary.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/set-contract-primary.mdx"}, "hash": "bde9234cf01b3cfc217f1532eefad0685e7b53d7cea00d6f32f7f29854de944a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "793beb4c-52ee-401b-8da1-f1e14e141fff", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "0c976dac5e263ab19f50ea64bf6a0f2fbbde02d014a2d24d66bc4fd6cf3effc9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\r\ntitle: Set Primary Name For Contract\r\nlast_update:\r\n  author: serenae\r\ntags:\r\n  - primary\r\n  - primary name\r\n  - primaryname\r\n  - identity\r\nkeywords: [primary, primary name, primaryname, identity, did, wallet name, set primary]\r\ndescription: How to set the ENS Primary Name for a contract address\r\n--- # Set Primary Name For Contract\r\n\r\nFor most regular wallet accounts, you can just use the ENS Manager App to set the <Link to=\"/core/records/primary-name\">Primary Name</Link>. Even if your address is technically a contract account, you may still be able to use the app to do this, if the contract allows arbitrary transactions (e.g. <Link to=\"https://safe.global/\">Gnosis Safe</Link>).\r\n\r\nSee here for a how-to guide for the Manager App: <Link to=\"/howto/set-primary-name\">Set a Primary Name</Link>\r\n\r\nOtherwise, see below for additional methods.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 306, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "060b241c-88fc-4f4f-9f81-3253d2d525b4": {"__data__": {"id_": "060b241c-88fc-4f4f-9f81-3253d2d525b4", "embedding": null, "metadata": {"file_path": "docs/dev-basics/set-contract-primary.mdx", "file_name": "set-contract-primary.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/set-contract-primary.mdx", "header_path": "/Set Primary Name For Contract\r/", "customer_id": 1, "source_url": "docs/dev-basics/set-contract-primary.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["primary", "other", "contract", "already", "contracts", "owner", "inherits", "using", "methods", "operator", "still", "approved", "existing"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "73f62c0f8e8a79fafc98311d1c45280390e91965", "node_type": "4", "metadata": {"file_path": "docs/dev-basics/set-contract-primary.mdx", "file_name": "set-contract-primary.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/set-contract-primary.mdx"}, "hash": "bde9234cf01b3cfc217f1532eefad0685e7b53d7cea00d6f32f7f29854de944a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "793beb4c-52ee-401b-8da1-f1e14e141fff", "node_type": "1", "metadata": {"file_path": "docs/dev-basics/set-contract-primary.mdx", "file_name": "set-contract-primary.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/set-contract-primary.mdx", "header_path": "/"}, "hash": "2b7e6024f868b15f89b3d0ffbcf227d41b10a58ef7c5649f58b0e2b5ae5005c2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6c174d3b-765f-48e3-bb85-20c72e840d12", "node_type": "1", "metadata": {"header_path": "/Set Primary Name For Contract\r/Existing contracts\r/"}, "hash": "6c5c5747818befce7739517580c994bdb0c0ae59a857bb1100fc2d1c78669fd0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Existing contracts\r\n\r\nIf your contract has already been deployed, and it doesn't have any built-in methods to set its own primary name, then you may still be able to set it by other means, if:\r\n\r\n* Your contract inherits the <Link to=\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\">Ownable</Link> module, and you are the owner\r\n\r\nOr:\r\n\r\n* You are an approved operator for the contract in the ENS Registry. ### Using Set Primary Tool\r\n\r\nThis is a small helper website we built on the side to address some edge-cases that may not make sense for the ENS Manager App (or are still on the roadmap):\r\n\r\n<BrowserWindow url=\"https://tools.ens.domains/setprimary/\">\r\n  <div style={{'background':'#F7F7F7'}}>\r\n    <iframe src=\"https://tools.ens.domains/setprimary#embedded\" width=\"100%\" height=\"600px\"/>\r\n  </div>\r\n</BrowserWindow>", "mimetype": "text/plain", "start_char_idx": 860, "end_char_idx": 1318, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b37f0112-8e5f-49c2-8f49-510c506a7c1a": {"__data__": {"id_": "b37f0112-8e5f-49c2-8f49-510c506a7c1a", "embedding": null, "metadata": {"file_path": "docs/dev-basics/set-contract-primary.mdx", "file_name": "set-contract-primary.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/set-contract-primary.mdx", "header_path": "/Set Primary Name For Contract\r/Existing contracts\r/", "customer_id": 1, "source_url": "docs/dev-basics/set-contract-primary.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["enter", "expand", "registrar", "directly", "address", "reverse", "using", "scroll", "interact", "click", "contract", "connect"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "73f62c0f8e8a79fafc98311d1c45280390e91965", "node_type": "4", "metadata": {"file_path": "docs/dev-basics/set-contract-primary.mdx", "file_name": "set-contract-primary.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/set-contract-primary.mdx"}, "hash": "bde9234cf01b3cfc217f1532eefad0685e7b53d7cea00d6f32f7f29854de944a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6c174d3b-765f-48e3-bb85-20c72e840d12", "node_type": "1", "metadata": {"file_path": "docs/dev-basics/set-contract-primary.mdx", "file_name": "set-contract-primary.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/set-contract-primary.mdx", "header_path": "/Set Primary Name For Contract\r/Existing contracts\r/"}, "hash": "b31d92b9581f07246b56a5b4aea966c2df2eda04d547ea4d03c94382f6a660f5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "439c3f20-a3b0-4d95-ba84-f542f5087eb3", "node_type": "1", "metadata": {"header_path": "/Set Primary Name For Contract\r/"}, "hash": "1600c44afbeda59d295fd65e980675d98e57e7d0b64c47c0e2a9bc2254f97cdc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Using the contract directly\r\n\r\nYou can interact directly with the Reverse Registrar contract on Etherscan: https://etherscan.io/address/0xa58e81fe9b61b5c3fe2afd33cf304c454abfc7cb#writeContract#F8\r\n\r\n<BrowserWindow url=\"etherscan.io\">\r\n  <Image img=\"/img/etherscan-connect-wallet.jpg\"/>\r\n</BrowserWindow>\r\n\r\nAt the top, click on \"Connect to Web3\" to connect your wallet. Then scroll down and expand the `setNameForAddr` method:\r\n\r\n<BrowserWindow url=\"etherscan.io\">\r\n  <Image img=\"/img/set-contract-primary-name1.jpg\"/>\r\n</BrowserWindow>\r\n\r\nEnter the four fields:\r\n - **addr:** The contract address you are setting the primary name for.\r\n - **owner:** The owner of the reverse node in the ENS Registry. Enter your address.\r\n - **resolver:** The resolver to use for the reverse node. Enter the default Public Resolver: `0x231b0Ee14048e9dCcD1d247744d114a4EB5E8E63`\r\n - **name:** The primary name to set for the contract. This must be a name that already <Link to=\"/core/records/eth-address\">forward-resolves</Link> to the contract address, otherwise Primary Name resolution will not work.\r\n\r\nThen click on \"Write\" to send the transaction to your wallet.", "mimetype": "text/plain", "start_char_idx": 1741, "end_char_idx": 2895, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "439c3f20-a3b0-4d95-ba84-f542f5087eb3": {"__data__": {"id_": "439c3f20-a3b0-4d95-ba84-f542f5087eb3", "embedding": null, "metadata": {"file_path": "docs/dev-basics/set-contract-primary.mdx", "file_name": "set-contract-primary.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/set-contract-primary.mdx", "header_path": "/Set Primary Name For Contract\r/", "customer_id": 1, "source_url": "docs/dev-basics/set-contract-primary.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["primary", "automatically", "reverseclaimer", "constructor", "developing", "deploy", "include", "inherits", "interface", "mycontract", "contracts", "contract", "easily"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "73f62c0f8e8a79fafc98311d1c45280390e91965", "node_type": "4", "metadata": {"file_path": "docs/dev-basics/set-contract-primary.mdx", "file_name": "set-contract-primary.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/set-contract-primary.mdx"}, "hash": "bde9234cf01b3cfc217f1532eefad0685e7b53d7cea00d6f32f7f29854de944a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b37f0112-8e5f-49c2-8f49-510c506a7c1a", "node_type": "1", "metadata": {"file_path": "docs/dev-basics/set-contract-primary.mdx", "file_name": "set-contract-primary.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/set-contract-primary.mdx", "header_path": "/Set Primary Name For Contract\r/Existing contracts\r/"}, "hash": "f301d9e36b2937be886cbe351f9a16c973bb0270a7b115939908fb99851f6532", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c8531571-2d1f-42df-90a4-fa26b0be12cd", "node_type": "1", "metadata": {"header_path": "/Set Primary Name For Contract\r/"}, "hash": "820caeaf70c85c60b2f58c2f682cdbd6e60cd8fb4ff3567d513d11eaa2f45168", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## New Contracts\r\n\r\nIf you a developing a new contract, and you want to be able to easily set the ENS Primary Name for it, then you can include this module: <Link to=\"https://github.com/ensdomains/ens-contracts/blob/master/contracts/reverseRegistrar/ReverseClaimer.sol\">ReverseClaimer.sol</Link>\r\n\r\nAlso include the interface for the core ENS registry: <Link to=\"https://github.com/ensdomains/ens-contracts/blob/master/contracts/registry/ENS.sol\">ENS.sol</Link>\r\n\r\nMake sure your contract inherits ReverseClaimer:\r\n\r\n```\r\ncontract MyContract is ReverseClaimer {\r\n  ...\r\n}\r\n```\r\n\r\nThen call it in your constructor:\r\n\r\n```\r\nconstructor (\r\n  ENS ens,\r\n  ...\r\n) ReverseClaimer(ens, msg.sender) {\r\n  ...\r\n}\r\n```\r\n\r\nWhen you deploy that contract, it will automatically claim the reverse node for that contract address for you.\r\n\r\nThen, use the <Link to=\"#using-set-primary-tool\">tool above</Link> to set the Primary Name whenever you want.\r\n\r\nIf you want to do it manually via the contract, see below.", "mimetype": "text/plain", "start_char_idx": 2899, "end_char_idx": 3894, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c8531571-2d1f-42df-90a4-fa26b0be12cd": {"__data__": {"id_": "c8531571-2d1f-42df-90a4-fa26b0be12cd", "embedding": null, "metadata": {"file_path": "docs/dev-basics/set-contract-primary.mdx", "file_name": "set-contract-primary.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/set-contract-primary.mdx", "header_path": "/Set Primary Name For Contract\r/", "customer_id": 1, "source_url": "docs/dev-basics/set-contract-primary.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["remove", "primary", "already", "address", "reverse", "update", "particular", "example", "resolver", "where"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "73f62c0f8e8a79fafc98311d1c45280390e91965", "node_type": "4", "metadata": {"file_path": "docs/dev-basics/set-contract-primary.mdx", "file_name": "set-contract-primary.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/set-contract-primary.mdx"}, "hash": "bde9234cf01b3cfc217f1532eefad0685e7b53d7cea00d6f32f7f29854de944a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "439c3f20-a3b0-4d95-ba84-f542f5087eb3", "node_type": "1", "metadata": {"file_path": "docs/dev-basics/set-contract-primary.mdx", "file_name": "set-contract-primary.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/set-contract-primary.mdx", "header_path": "/Set Primary Name For Contract\r/"}, "hash": "7563904760471bcfc98f2f66cdff6063282a71d761d1b75d908f9107c70f7fcb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## When you already own the reverse node\r\n\r\nIf you already own the reverse node for a particular address, then you can update the Primary Name at any time.\r\n\r\nThe \"reverse node\" is the <Link to=\"/dev-basics/namehash#generating-a-namehash\">namehash</Link> for `<addr>.addr.reverse`, where `<addr>` is the address (all lowercase, and remove the `0x`).\r\n\r\nExample for address `0x481f50a5BdcCC0bc4322C4dca04301433dED50f0`\r\n* `namehash('481f50a5bdccc0bc4322c4dca04301433ded50f0.addr.reverse')`\r\n* `0x58354ffdde6ac279f3a058aafbeeb14059bcb323a248fb338ee41f95fa544c86`\r\n\r\nFirst, make sure a resolver is set on the reverse node: https://etherscan.io/address/0x00000000000c2e074ec69a0dfb2997ba6c7d2e1e#readContract#F5\r\n\r\nIf none is set, set the resolver to the default Public Resolver (`0x231b0Ee14048e9dCcD1d247744d114a4EB5E8E63`): https://etherscan.io/address/0x00000000000c2e074ec69a0dfb2997ba6c7d2e1e#writeContract#F4\r\n\r\n<BrowserWindow url=\"etherscan.io\">\r\n  <Image img=\"/img/set-contract-primary-name2.jpg\"/>\r\n</BrowserWindow>\r\n\r\nThen, call `setName` on the resolver:\r\n\r\n<BrowserWindow url=\"etherscan.io\">\r\n  <Image img=\"/img/set-contract-primary-name3.jpg\"/>\r\n</BrowserWindow>", "mimetype": "text/plain", "start_char_idx": 3898, "end_char_idx": 5070, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c6e85c37-7088-4237-8d4e-060e503ddb77": {"__data__": {"id_": "c6e85c37-7088-4237-8d4e-060e503ddb77", "embedding": null, "metadata": {"file_path": "docs/faq/bug-bounty.mdx", "file_name": "bug-bounty.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/bug-bounty.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/faq/bug-bounty.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["submit", "rewards", "program", "bounty", "found", "cthulu", "report", "anyone", "submission"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "45d13c8ad1e99470de343f89ca9eb092b56e2572", "node_type": "4", "metadata": {"file_path": "docs/faq/bug-bounty.mdx", "file_name": "bug-bounty.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/bug-bounty.mdx"}, "hash": "7d869259fbf26011ea9f158b15ca0e062f90a68000862ffc32771796d67839fb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "32e44a08-1b0a-4ade-8ee2-120e82433441", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "d994262d649b6c6a67226d024ba623b9893534eb701677a98f96d5162280534b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\nlast_update:\n  author: cthulu\ntags:\n  - bug\n  - bugs\n  - bug bounty\n  - bug hunt\n  - submit bug\n  - bug submission\n  - found bug\n  - report bug\nkeywords: [bug, bugs, bug bounty, bounty, bug hunt, submit bug, bug submission, found bug, report bug]\n--- # Bug Bounty Program\n\nThe ENS bug bounty program rewards anyone who finds a bug in covered ENS smart contracts. ## Rules and Rewards\n\n- Issues that have already been submitted by another user or are already known to ENS Labs Limited are not eligible for bounty rewards.\n- Public disclosure of a vulnerability makes it ineligible for a bounty. This includes exploiting the bug on mainnet or any public test network.\n- Contractors of ENS Labs Limited, employees and all other people paid by the ENS project directly are not eligible for rewards.\n- Only the smart contracts listed below are eligible for rewards. Websites and other infrastructure are not covered by the bounty program.\n- The ENS bounty program considers a number of variables in determining rewards. Determinations of eligibility, score and all terms related to an award are at the sole and final discretion of ENS Labs Limited.\n\n:::info OWASP Risk Rating Model\n\nThe value of rewards paid out will vary depending on `Severity`. The severity is calculated according to the **OWASP Risk Rating Model** based on `Impact` and `Likelihood`:\n<p align=\"center\">\n    <Image img=\"/img/owasp.svg\"/>\n</p>\n\n:::\n\n:::note Reward size\nReward sizes are _guided_ by the rules below, but are in the end, determined at the sole discretion of ENS Labs Limited\n\n<table style={{borderRadius: '4px'}}>\n    <thead>\n        <tr>\n            <th width=\"500px\"><p>Severity</p></th>\n            <th width=\"500px\"><p>Reward size (up to)</p></th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td><p>Critical</p></td>\n            <td><p>>$250,000 USD</p></td>\n        </tr>\n        <tr>\n            <td><p>High</p></td>\n            <td><p>>$150,000 USD</p></td>\n        </tr>\n        <tr>\n            <td><p>Medium</p></td>\n            <td><p>>$100,000 USD</p></td>\n        </tr>\n        <tr>\n            <td><p>Low</p></td>\n            <td><p>>$20,000 USD</p></td>\n        </tr>\n        <tr>\n            <td><p>Note</p></td>\n            <td><p>>$5,000 USD</p></td>\n        </tr>\n    </tbody>\n</table>\n\n:::\n\n:::caution Reservation of Rights\nENS Labs Limited reserves the right to adjust bounty amounts at any time in the future.\n:::\n\nWhere the contract in our GitHub repository differs from the one deployed on Ethereum, due to changes having been made since the last deployment, the following rules apply:\n\n:::info Rules and Considerations\n1. **If the bug exists in the contract deployed on Ethereum**  \nThe full bounty amount is payable.\n1. **If the bug is only in the version on GitHub**  \nENS Labs Limited will decide at its discretion an appropriate proportion of the bounty to award based on the state of the code (from 0% for code that was never intended to be deployed, to 100% for code that is considered final).\n\nIn addition to `Severity`, other variables are also considered when ENS Labs Limited decides the score,  \nincluding _(but not limited to)_:\n\n- **Quality of Description**  \nHigher rewards are paid for clear, well-written submissions.\n- **Quality of Reproducibility**  \nPlease include test code, scripts and detailed instructions. The easier it is for us to reproduce and verify the vulnerability, the higher the reward.\n- **Quality of Fix**  \nIf included. Higher rewards are paid for submissions with clear description of how to fix the issue.\n\n:::", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 254, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9fc7fe9e-0ff0-462b-a692-daba87acfc83": {"__data__": {"id_": "9fc7fe9e-0ff0-462b-a692-daba87acfc83", "embedding": null, "metadata": {"file_path": "docs/faq/bug-bounty.mdx", "file_name": "bug-bounty.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/bug-bounty.mdx", "header_path": "/Bug Bounty Program/", "customer_id": 1, "source_url": "docs/faq/bug-bounty.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["covered", "important", "contracts", "legal", "smart", "bounty", "following", "information"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "45d13c8ad1e99470de343f89ca9eb092b56e2572", "node_type": "4", "metadata": {"file_path": "docs/faq/bug-bounty.mdx", "file_name": "bug-bounty.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/bug-bounty.mdx"}, "hash": "7d869259fbf26011ea9f158b15ca0e062f90a68000862ffc32771796d67839fb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "28815e66-c3ed-40d3-8313-b9033abc1883", "node_type": "1", "metadata": {"file_path": "docs/faq/bug-bounty.mdx", "file_name": "bug-bounty.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/bug-bounty.mdx", "header_path": "/Bug Bounty Program/"}, "hash": "03273f6478b47e16c1ede8ced90f422b8f355192b2d768918131f2b967f9b666", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "374909d7-f3a9-4638-8f39-b11ac24d42fe", "node_type": "1", "metadata": {"header_path": "/Bug Bounty Program/"}, "hash": "d63607ef2c4ed90556e723048a8d131d1eb56425746b4d91674c4fc621bf6c2d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Covered Contracts\n\nThe following smart contracts are covered by the bounty:\n\n:::info Covered contracts\n* All non-test contracts in [ensdomains/ens-contracts](https://github.com/ensdomains/ens-contracts).\n* [ensdomains/name-wrapper](https://github.com/ensdomains/name-wrapper).\n\n::: ## Important Legal Information\n:::caution Legal information\nThe bug bounty program is a discretionary rewards program for the ENS community to encourage and reward those who are helping to improve the platform. It is not a competition.  \n  \nYou should know that we can cancel the program at any time, and awards are at the sole discretion of ENS Labs Limited.  \n  \nIn addition\n - We are not able to issue awards to individuals who are on sanctions lists or who are in countries on sanctions lists (e.g. North Korea, Iran, etc).  \n - You are responsible for all taxes.\n - All awards are subject to applicable law.\n - Any patches must be offered under the same license as the repository they affect.\n - Finally, your testing must not violate any law or compromise any data that is not yours.\n:::", "mimetype": "text/plain", "start_char_idx": 3581, "end_char_idx": 3865, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0dac04e3-83d9-434b-a8b3-3e1b093439d8": {"__data__": {"id_": "0dac04e3-83d9-434b-a8b3-3e1b093439d8", "embedding": null, "metadata": {"file_path": "docs/faq/bug-bounty.mdx", "file_name": "bug-bounty.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/bug-bounty.mdx", "header_path": "/Bug Bounty Program/", "customer_id": 1, "source_url": "docs/faq/bug-bounty.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["submissions", "guidelines", "submission", "contributor", "submitting", "cthulu", "contribution", "correcting", "changes"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "45d13c8ad1e99470de343f89ca9eb092b56e2572", "node_type": "4", "metadata": {"file_path": "docs/faq/bug-bounty.mdx", "file_name": "bug-bounty.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/bug-bounty.mdx"}, "hash": "7d869259fbf26011ea9f158b15ca0e062f90a68000862ffc32771796d67839fb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "374909d7-f3a9-4638-8f39-b11ac24d42fe", "node_type": "1", "metadata": {"file_path": "docs/faq/bug-bounty.mdx", "file_name": "bug-bounty.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/bug-bounty.mdx", "header_path": "/Bug Bounty Program/"}, "hash": "a74f67f461ee135f861db6116d376d9fd639391495b91e25d88409ffa8f0a2a3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Submitting a Bug\n\n:::info Submissions\n - E-mail your bug submission to `bugs@ens.domains`\n::: ---\nlast_update:\n  author: cthulu\ntags:\n  - contribution\n  - contributor guidelines\n  - guidelines\nkeywords: [contribute, contributor, contribution, guidelines, contributor guidelines, contribution guidelines]\n--- # Contributor Guidelines ## Changes\n:::info\n- If the changes are *objective* *(i.e. correcting spelling mistakes, punctuation, code mistakes etc)* they can be PR\u2019ed without prior discussion\n- If the changes are *subjective* *(i.e. changing a confusing sentence to another one)* post about it and your suggested change in the User Docs Chat so we can brainstorm it and come to a consensus before the PR\n:::", "mimetype": "text/plain", "start_char_idx": 4662, "end_char_idx": 4758, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "71db8c1e-1f65-46b6-87d3-e543a0f37eee": {"__data__": {"id_": "71db8c1e-1f65-46b6-87d3-e543a0f37eee", "embedding": null, "metadata": {"file_path": "docs/faq/contributor-guidelines.mdx", "file_name": "contributor-guidelines.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/contributor-guidelines.mdx", "header_path": "/Contributor Guidelines/", "customer_id": 1, "source_url": "docs/faq/contributor-guidelines.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["formatting", "blocks", "written", "results", "opposed", "produce", "markdown", "articles", "since", "using", "create", "format", "difficult", "should"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c0aa4204dd8d5ec2d2d44532743fa0a9097171e2", "node_type": "4", "metadata": {"file_path": "docs/faq/contributor-guidelines.mdx", "file_name": "contributor-guidelines.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/contributor-guidelines.mdx"}, "hash": "f6f7e494ffa6ddfdd9c523d1950f387e6a1c2d4f4835e71d9f74ab5db0461611", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b4fdd56b-7ddc-4ba4-bfe2-f1924c46c044", "node_type": "1", "metadata": {"file_path": "docs/faq/contributor-guidelines.mdx", "file_name": "contributor-guidelines.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/contributor-guidelines.mdx", "header_path": "/Contributor Guidelines/"}, "hash": "438a6097e9da2d4db27ea0770de5dea9e38b090cb7ff08d9a11b4e15078a2ea0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "90ff720a-2fd3-4f28-9667-68a4b77e45b3", "node_type": "1", "metadata": {"header_path": "/Contributor Guidelines/"}, "hash": "436b0044ab348916cde8f3f3fcb24ab72891dc01eaabfc51b2aeae72799538af", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Formatting\n:::info\n - All articles should be in the `MDX` file format and written by hand *(as opposed to using a WYSIWYG-tool)*\n since they produce results that are difficult to work with.\n   - [**Docusaurus:** How to Create a Doc](https://docusaurus.io/docs/create-doc)\n   - [**Docusaurus:** Markdown Features](https://docusaurus.io/docs/markdown-features)\n - Code blocks should use the correct type to make use of syntax highlighting where possible, for example:  \n    \n    **This is a codeblock without syntax highlighting enabled**\n    ```\n    // Code block without syntax highlighting\n    console.log('Hello World');\n    ```\n\n    **And here it is with syntax highlighting enabled**\n    ```js\n    // Code block with syntax highlighting\n    console.log('Hello World');\n    ```\n - Keep in mind to double space where needed.\n - Word wrapping must be turned off in your editor for the site generator to produce the expected results.\n\n:::", "mimetype": "text/plain", "start_char_idx": 623, "end_char_idx": 1564, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "90ff720a-2fd3-4f28-9667-68a4b77e45b3": {"__data__": {"id_": "90ff720a-2fd3-4f28-9667-68a4b77e45b3", "embedding": null, "metadata": {"file_path": "docs/faq/contributor-guidelines.mdx", "file_name": "contributor-guidelines.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/contributor-guidelines.mdx", "header_path": "/Contributor Guidelines/", "customer_id": 1, "source_url": "docs/faq/contributor-guidelines.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["graph", "diagrams", "capture", "screenshots", "arrows", "official", "indicators", "thickness", "where", "classdef", "should"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c0aa4204dd8d5ec2d2d44532743fa0a9097171e2", "node_type": "4", "metadata": {"file_path": "docs/faq/contributor-guidelines.mdx", "file_name": "contributor-guidelines.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/contributor-guidelines.mdx"}, "hash": "f6f7e494ffa6ddfdd9c523d1950f387e6a1c2d4f4835e71d9f74ab5db0461611", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "71db8c1e-1f65-46b6-87d3-e543a0f37eee", "node_type": "1", "metadata": {"file_path": "docs/faq/contributor-guidelines.mdx", "file_name": "contributor-guidelines.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/contributor-guidelines.mdx", "header_path": "/Contributor Guidelines/"}, "hash": "5377ccc2fd5d7e772d13f20e9d9578ccbf8cce8f4b95dce48dc314a772b7fdd0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "55db2189-d7d1-4757-a3a1-a90ac97f23d5", "node_type": "1", "metadata": {"header_path": "/Contributor Guidelines/"}, "hash": "fc54f9c5496dd251bc3f4a7eeaea150b2dad09bd30c3abf23f9e8691165dc202", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Arrows & Indicators\n:::info\n - We use [Flameshot](https://flameshot.org) as the official tool to capture screenshots and add arrows, indicators etc.\n - Use colour: `#ff6500` for arrows and indicators and a thickness of `30%`  \n  <ImageWindow title=\"Example arrow\" img=\"/img/contributor-guidelines-arrow.png\"/>\n\n::: ## Diagrams\n:::info\n - Diagrams should be in `Mermaid` code where possible, for example:\n\n<p align={'center'}>\n\n```mermaid\n%%{\n  init: {\n    'flowchart': {\n      'curve': 'linear'\n      } } }%%\n      \ngraph LR;\nA(I);\nB(Am);\nC(A);\nD(Simple);\nE(Mermaid Diagram);\n\nclassDef active stroke-width:4px;\nclassDef inactive stroke-dasharray: 5 5;\n\nclass A inactive;\nclass B active;\n\nA-->B-->C-->D-->E;\nE -.-> A;\n```\n\n</p>\n\nis generated using this code:\n\n```js title=\"Mermaid diagram code\"\n%%{\n  init: {\n    'flowchart': {\n      'curve': 'linear'\n      } } }%%\n      \ngraph LR;\nA(I);\nB(Am);\nC(A);\nD(Simple);\nE(Mermaid Diagram);\n\nclassDef active stroke-width:4px;\nclassDef inactive stroke-dasharray: 5 5;\n\nclass A inactive;\nclass B active;\n\nA-->B-->C-->D-->E;\nE -.-> A;\n```\n\n:::", "mimetype": "text/plain", "start_char_idx": 1566, "end_char_idx": 1883, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "72ff670c-a984-404c-acb8-217da8edba24": {"__data__": {"id_": "72ff670c-a984-404c-acb8-217da8edba24", "embedding": null, "metadata": {"file_path": "docs/faq/contributor-guidelines.mdx", "file_name": "contributor-guidelines.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/contributor-guidelines.mdx", "header_path": "/Contributor Guidelines/", "customer_id": 1, "source_url": "docs/faq/contributor-guidelines.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["browser", "submit", "component", "least", "within", "small", "should", "background", "format", "widgets", "images", "large", "manager"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c0aa4204dd8d5ec2d2d44532743fa0a9097171e2", "node_type": "4", "metadata": {"file_path": "docs/faq/contributor-guidelines.mdx", "file_name": "contributor-guidelines.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/contributor-guidelines.mdx"}, "hash": "f6f7e494ffa6ddfdd9c523d1950f387e6a1c2d4f4835e71d9f74ab5db0461611", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "55db2189-d7d1-4757-a3a1-a90ac97f23d5", "node_type": "1", "metadata": {"file_path": "docs/faq/contributor-guidelines.mdx", "file_name": "contributor-guidelines.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/contributor-guidelines.mdx", "header_path": "/Contributor Guidelines/"}, "hash": "69cb27d145b4a0ffd2b8dc6509fe0ee5ee04a0fa0537ed435efe2dfca0e3eaf0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "87e89258-7d8a-4632-bd72-bd1992b37de0", "node_type": "1", "metadata": {"header_path": "/Contributor Guidelines/"}, "hash": "4b19fc990075bd5abd78b8a67b1f8c628a18f4d85a8990dbfbb7bc338d47dac6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Images\n:::info\n - Images should be in the `PNG` file format and at least `1024x768` large if used within a browser component\n - For the V3 Manager App's small widgets submit images of it with the background cut out in an alpha-layer enabled PNG. For example:\n  <ImageWindow title=\"Remove the background and make sure that the background layer is an alpha-layer\">\n  <p align=\"center\">\n\n  <Image img=\"/img/contributor-guidelines-v3-widget-remove-bg.png\" style={{'borderRadius': '8px'}} />\n    \n  </p>\n  </ImageWindow>\n - For any images used outside of a browser component there should be dark and light versions (for theme switching)\n - Prefix the name of your article to any images associated with it. For example: If your article is named **ens-names.mdx** then name images associated with it **\u201cens-names-description\u201d**.\n\nThis helps keep the static image folder structure easy to navigate.\n*(In the near future, all images will be moved into sub-folders of articles to remove this requirement, currently this folder structure exists to make batch image compression fine tuning simpler)*\n\n:::", "mimetype": "text/plain", "start_char_idx": 2653, "end_char_idx": 3748, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "87e89258-7d8a-4632-bd72-bd1992b37de0": {"__data__": {"id_": "87e89258-7d8a-4632-bd72-bd1992b37de0", "embedding": null, "metadata": {"file_path": "docs/faq/contributor-guidelines.mdx", "file_name": "contributor-guidelines.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/contributor-guidelines.mdx", "header_path": "/Contributor Guidelines/", "customer_id": 1, "source_url": "docs/faq/contributor-guidelines.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["descriptive", "consider", "commits", "bundling", "overload", "branch", "process", "avoid", "direct", "larger", "spelling", "commit", "files", "changes"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c0aa4204dd8d5ec2d2d44532743fa0a9097171e2", "node_type": "4", "metadata": {"file_path": "docs/faq/contributor-guidelines.mdx", "file_name": "contributor-guidelines.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/contributor-guidelines.mdx"}, "hash": "f6f7e494ffa6ddfdd9c523d1950f387e6a1c2d4f4835e71d9f74ab5db0461611", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "72ff670c-a984-404c-acb8-217da8edba24", "node_type": "1", "metadata": {"file_path": "docs/faq/contributor-guidelines.mdx", "file_name": "contributor-guidelines.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/contributor-guidelines.mdx", "header_path": "/Contributor Guidelines/"}, "hash": "9a036610e141ecebfc5976f72576e4796e7280222d3e44a7e3f1ab7cc5f7f6e4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Git PR process\n\n:::info\n- Direct commits are not allowed, make sure to commit your files from a branch descriptive of your changes, such as bugfix-1, patch-1, etc.\n- If the changes are minor, consider bundling them into a larger commit to avoid PR overload (there\u2019s no need for one PR per spelling error per page)\n- Ensure that your changes are staged properly, and commits accurately describe their changes (i.e. don\u2019t commit \u201cadding images\u201d with 4 images attached, but also an unrelated code fix)\n:::", "mimetype": "text/plain", "start_char_idx": 3750, "end_char_idx": 4255, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f9069fd1-d628-4fa5-82a6-a1b343736ed3": {"__data__": {"id_": "f9069fd1-d628-4fa5-82a6-a1b343736ed3", "embedding": null, "metadata": {"file_path": "docs/faq/dnssec.mdx", "file_name": "dnssec.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/dnssec.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/faq/dnssec.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["domain", "cthulu", "import", "integrate", "dnssec"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a4411c73dc1aa331618d9d0d632e2ba5827444af", "node_type": "4", "metadata": {"file_path": "docs/faq/dnssec.mdx", "file_name": "dnssec.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/dnssec.mdx"}, "hash": "0992c03e60a4783fe8422d05a0daa1ad61b754a194213f70985a6c41438efd94", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fa77ce63-69f3-4832-b4c8-a86d0c90fce9", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "ebbef499685f6136640d41fd2dec0f6f463cb043654c66f9d1583585d59188f9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ndraft: true\nlast_update:\n  author: cthulu\ntags:\n  - dnssec\n  - dns\n  - domain\n  - domain name\n  - import dns\n  - import dns name\n  - import domain\n  - import domain name\n  - integrate dns\n  - integrate dns name\n  - integrate domain\n  - integrate domain name\n--- # DNSSEC ## What is DNSSEC?\nDNS was designed in the 1980s when the Internet was much smaller, and security was not a primary consideration in its design.  \n\nTo mitigate this, the DNSSEC protocol was designed as an extension to strengthen authentication in DNS using digital signatures based on public key cryptography. \n\n<p align=\"center\">\n  <Image img=\"/img/faq/dnssec-diagram-1.png\"/>\n</p>\n\nWith DNSSEC, it's not DNS queries and responses themselves that are cryptographically signed, but rather DNS data itself is signed by the owner of the data to ensure that the data has not been tampered with.\nThis helps to protect against different types of DNS attacks including DNS spoofing and \"Man In The Middle\"-attacks.\n\n<p align=\"center\">\n  <Image img=\"/img/faq/dnssec-dns-spoof-1.png\"/>\n</p>\n\n:::info Learning resource\nFor more information about DNSSEC, as well as a great introductory read about DNS, see ICANN's DNSSEC article:\n - https://www.icann.org/resources/pages/dnssec-what-is-it-why-important-2019-03-05-en\n:::", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 265, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "acd0935a-955c-4013-ad82-f32a5ca56ca9": {"__data__": {"id_": "acd0935a-955c-4013-ad82-f32a5ca56ca9", "embedding": null, "metadata": {"file_path": "docs/faq/dnssec.mdx", "file_name": "dnssec.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/dnssec.mdx", "header_path": "/DNSSEC/", "customer_id": 1, "source_url": "docs/faq/dnssec.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["require", "ensuring", "authentication", "establishes", "secure", "ownership", "domain", "information", "public", "chain", "publishes", "through", "trust", "dnssec"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a4411c73dc1aa331618d9d0d632e2ba5827444af", "node_type": "4", "metadata": {"file_path": "docs/faq/dnssec.mdx", "file_name": "dnssec.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/dnssec.mdx"}, "hash": "0992c03e60a4783fe8422d05a0daa1ad61b754a194213f70985a6c41438efd94", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "459ce48a-1b33-421e-9f77-40ac0ccab3b5", "node_type": "1", "metadata": {"file_path": "docs/faq/dnssec.mdx", "file_name": "dnssec.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/dnssec.mdx", "header_path": "/DNSSEC/"}, "hash": "b35d9f1ee72a64eddb102f27c5db0705b3c559548a2e987bb0a917cafe71de9f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e148da74-60ac-4d84-914b-ed6a35eaffe1", "node_type": "1", "metadata": {"header_path": "/DNSSEC/"}, "hash": "4f4e815f347cb28615a759ec27b25f6f3da56a6584337feb62fb1a83e830ea56", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Why does ENS require DNSSEC?\nDNSSEC establishes a chain of trust through secure authentication from the root zone key all the way down to your domain name,\nensuring that the ownership information for the domain can be trusted.\n\nENS publishes the domain's public key to the blockchain and uses it to verify domain ownership.\n\n<p align=\"center\">\n  <Image img=\"/img/faq/dnssec-dnskeys-1.webp\"/>\n</p> ## Pre-requisites for ENS\nThere are two pre-requisite steps to making a DNS name work with ENS: ### 1. Enable DNSSEC\n   \nMost registrars have some kind of interface for enabling it, but not all of them sets key types that ENS supports.\nENS supports two types of keys:\n\t\n| Name | Description |\n|-|-|\n| ECDSA | Elliptic Curve DSA keys usually referred to as just `ECDSA` keys |\n| RSA/SHA-256 | 256-bit Rivest-Shamir-Adelman / Secure Hash Algorithm `RSA/SHA-256` keys |\n\nUnfortunately not all registrars support DNSSEC, and some only support them as an additional paid service.\nIf your registrar does not support DNSSEC you'll need to switch to one that does.", "mimetype": "text/plain", "start_char_idx": 1290, "end_char_idx": 1689, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9f3d17e9-48ff-46f6-9764-8b991308cc70": {"__data__": {"id_": "9f3d17e9-48ff-46f6-9764-8b991308cc70", "embedding": null, "metadata": {"file_path": "docs/faq/dnssec.mdx", "file_name": "dnssec.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/dnssec.mdx", "header_path": "/DNSSEC/Pre-requisites for ENS/1. Enable DNSSEC/", "customer_id": 1, "source_url": "docs/faq/dnssec.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["recommended", "providers", "services", "types", "since", "hosting", "verified", "which", "support", "dnssec", "popular", "changed"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a4411c73dc1aa331618d9d0d632e2ba5827444af", "node_type": "4", "metadata": {"file_path": "docs/faq/dnssec.mdx", "file_name": "dnssec.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/dnssec.mdx"}, "hash": "0992c03e60a4783fe8422d05a0daa1ad61b754a194213f70985a6c41438efd94", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2d61a488-8047-4029-b10f-f8dd8d77228c", "node_type": "1", "metadata": {"file_path": "docs/faq/dnssec.mdx", "file_name": "dnssec.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/dnssec.mdx", "header_path": "/DNSSEC/Pre-requisites for ENS/"}, "hash": "131a74a2185fec63e7c0f76c3b069057af629380752b203c82328d7b6dc226bb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "730b8de2-7347-4576-a7d3-ae28ce45166e", "node_type": "1", "metadata": {"header_path": "/DNSSEC/Pre-requisites for ENS/"}, "hash": "ab83408509a22ead790962394414fb0f01d7a5eff542bdbff0f6363a6692aa0f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "#### Recommended services\nHere's a list of popular hosting providers and which DNSSEC key types they support[^1]\n\n[^1]: The key-types hosting providers support may have changed since this list was last verified on `June 22nd, 2022`.\n\n| Hosting providers | DNSSEC | RSA/SHA-256 | ECDSA | Details                                                        |\n| ----------------- | ------ | ----------- | ----- | -------------------------------------------------------------- |\n| easyDNS           | `Yes`  | `Yes`       | `Yes` | [`DNSSEC Guide`](https://kb.easydns.com/knowledge/dnssec/)     |\n| Google Cloud DNS  | `Yes`  | `Yes`       | `Yes` | [`DNSSEC Guide 1`](https://cloud.google.com/dns/docs/registrars) [`DNSSEC Guide 2`](https://cloud.google.com/dns/docs/dnssec) |\n| Bluehost          | `Yes`  | `Yes`       | `Yes` | [`DNSSEC Information`](https://cp.cn.bluehost.com/kb/answer/1908) |\n| Hostinger         | `Yes`  | `Yes`       | `Yes` |                                                               |\n| Hostgator         | `Yes`  | `Yes`       | `Yes` |                                                                |\n| GoDaddy           | `Yes`  | `No`        | `Yes` | [`DNSSEC Guide`](https://uk.godaddy.com/help/turn-dnssec-on-or-off-6420) |\n| Wordpress         | `No`   | -           | -     |                                                                |\n| Namecheap         | `Yes`  | `Yes`       | `Yes` | [`DNSSEC Guide`](https://www.namecheap.com/support/knowledgebase/article.aspx/9722/2232/managing-dnssec-for-domains-pointed-to-custom-dns/) |\n\nIf the registrar requires a manually set up of DNSSEC it's best to consult your registrars documentation or contact their customer service for help setting it up.", "mimetype": "text/plain", "start_char_idx": 2350, "end_char_idx": 4079, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "730b8de2-7347-4576-a7d3-ae28ce45166e": {"__data__": {"id_": "730b8de2-7347-4576-a7d3-ae28ce45166e", "embedding": null, "metadata": {"file_path": "docs/faq/dnssec.mdx", "file_name": "dnssec.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/dnssec.mdx", "header_path": "/DNSSEC/Pre-requisites for ENS/", "customer_id": 1, "source_url": "docs/faq/dnssec.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["other", "underscore", "capital", "named", "record", "equals", "create", "words", "lower", "letters"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a4411c73dc1aa331618d9d0d632e2ba5827444af", "node_type": "4", "metadata": {"file_path": "docs/faq/dnssec.mdx", "file_name": "dnssec.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/dnssec.mdx"}, "hash": "0992c03e60a4783fe8422d05a0daa1ad61b754a194213f70985a6c41438efd94", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9f3d17e9-48ff-46f6-9764-8b991308cc70", "node_type": "1", "metadata": {"file_path": "docs/faq/dnssec.mdx", "file_name": "dnssec.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/dnssec.mdx", "header_path": "/DNSSEC/Pre-requisites for ENS/1. Enable DNSSEC/"}, "hash": "2d2b92ca2c610fa8dcaa7c52bb7154877e713340f5351aa7129fe053ef7db68f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "118756ea-f163-4017-8787-8ff6fe2470f2", "node_type": "1", "metadata": {"header_path": "/DNSSEC/"}, "hash": "a1867087097d8440b504d51e98711a0a067578e910cbc01d9c907d5348961b8c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### 2. Create an _ens record\n\n - This record must be of the type `TXT`, in other words a text record\n - The record must be named underscore ens in lower capital letters\n - The record data must be lower case a equals the user's wallet address\n\nAll DNSSEC issues users have tend to be caused by these records either being set incorrectly, not having been propagated or their TLD not supporting DNSSEC. ## How to troubleshoot it ### Troubleshooting tools\nThe best ways to troubleshoot the records and the DNSSEC configuration is by using a few different tools:\n\n<Tabs>\n<TabItem value=\"Google DNS DIG\" default>\n\n<BrowserWindow url=\"https://toolbox.googleapps.com/apps/dig/\" bg=\"#ffffff\" img=\"/img/faq/dnssec-google-dig.png\"/>\n\nThis is Google's web frontend for an older unix utility named dig. It can be used to look up records for names very easily.\nIf you run a unix-like operating system you can also use the terminal application dig if you'd like, which is much faster.\n\n - https://toolbox.googleapps.com/apps/dig/\n\n</TabItem>\n<TabItem value=\"DNSViz\">\n\n<BrowserWindow url=\"https://dnsviz.net/\" bg=\"#ffffff\" img=\"/img/faq/dnssec-dnsviz.png\"/>\n\nThis is also a web front-end for an older unix utility named dnsviz. It's used to generate graphical visualizations of domain names, records all the way from the root zone to the TLD to the 2LD domain name itself.\n\nIt's very useful to get a quick overview of what the issue is. Keep in mind that the warnings it shows don't always relate to what the issue with the DNSSEC configuration is for ENS. \n\n - https://dnsviz.net/\n\n</TabItem>\n<TabItem value=\"Verisign DNSSEC Analyzer\">\n\n<BrowserWindow url=\"https://dnssec-analyzer.verisignlabs.com/\" bg=\"#ffffff\" img=\"/img/faq/dnssec-verisign-analyzer.png\"/>\n\nVerisign Labs excellent DNSSEC Analyzer\n - https://dnssec-analyzer.verisignlabs.com/\n\n</TabItem>\n</Tabs>", "mimetype": "text/plain", "start_char_idx": 4081, "end_char_idx": 4480, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "598acf31-5064-40df-8217-939607b1845c": {"__data__": {"id_": "598acf31-5064-40df-8217-939607b1845c", "embedding": null, "metadata": {"file_path": "docs/faq/dnssec.mdx", "file_name": "dnssec.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/dnssec.mdx", "header_path": "/DNSSEC/", "customer_id": 1, "source_url": "docs/faq/dnssec.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["delay", "issues", "changes", "setup", "common", "creating", "recognizing", "propagation", "record", "registering", "recently", "enabling", "manager", "dnssec"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a4411c73dc1aa331618d9d0d632e2ba5827444af", "node_type": "4", "metadata": {"file_path": "docs/faq/dnssec.mdx", "file_name": "dnssec.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/dnssec.mdx"}, "hash": "0992c03e60a4783fe8422d05a0daa1ad61b754a194213f70985a6c41438efd94", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "065b7a53-0755-4268-b6b8-5fb27f64ba8e", "node_type": "1", "metadata": {"file_path": "docs/faq/dnssec.mdx", "file_name": "dnssec.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/dnssec.mdx", "header_path": "/DNSSEC/How to troubleshoot it/"}, "hash": "ddb0fd7caed446ff9f6422b6a868f436f325a3c93fda83db265e3462282dda16", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f0e6452f-f370-4003-b6ff-b66ef072b636", "node_type": "1", "metadata": {"header_path": "/DNSSEC/Common issues/"}, "hash": "c64970e7d1b117126ea6eadd7183333aebac0edba2b520a2365b43d2d9a97b5d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Common issues ### DNS Propagation delay\nIf you very recently made changes to your DNS name (such as creating the _ens record or enabling DNSSEC, or even registering the name itself)\nand find that the manager app isn't recognizing it, the DNSSEC setup or the record it could be due to DNS propagation delay.\n\nDNS changes are unfortunately not instant, and due to the way its designed it can take several hours before changes to a domain name is propagated\nto all DNS servers on the internet.\n\nTry waiting an hour or so, and see if it starts working. Technically speaking it can take up to 24 hours for DNS changes to propagate over the internet,\nthough in practice today it's usually propagated in under a few hours.", "mimetype": "text/plain", "start_char_idx": 5935, "end_char_idx": 5951, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a7aa00fa-7a85-4ef1-8076-950e8cf7f439": {"__data__": {"id_": "a7aa00fa-7a85-4ef1-8076-950e8cf7f439", "embedding": null, "metadata": {"file_path": "docs/faq/dnssec.mdx", "file_name": "dnssec.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/dnssec.mdx", "header_path": "/DNSSEC/Common issues/DNS Propagation delay/", "customer_id": 1, "source_url": "docs/faq/dnssec.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["issues", "published", "registrar", "after", "signs", "immediately", "propagation", "first", "enable", "which", "rrsig", "records", "dnskey", "dnssec"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a4411c73dc1aa331618d9d0d632e2ba5827444af", "node_type": "4", "metadata": {"file_path": "docs/faq/dnssec.mdx", "file_name": "dnssec.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/dnssec.mdx"}, "hash": "0992c03e60a4783fe8422d05a0daa1ad61b754a194213f70985a6c41438efd94", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f0e6452f-f370-4003-b6ff-b66ef072b636", "node_type": "1", "metadata": {"file_path": "docs/faq/dnssec.mdx", "file_name": "dnssec.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/dnssec.mdx", "header_path": "/DNSSEC/Common issues/"}, "hash": "76ddea9fcc36f48643d92ac7293d28237cfa53c483d1d6b9dbf060245574f9d3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e4b413bf-9b94-4fe0-888c-da633f8be2d0", "node_type": "1", "metadata": {"header_path": "/DNSSEC/Common issues/"}, "hash": "c4a9547de710e4b8b15a71cb452993a70fe86d5e737c52961c524039b76c164f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "#### Signs of DNSSEC propagation issues\nWhen you first enable DNSSEC on your website, it will show your zone as \"signed\" but \"insecure\" (DS records are found, however, DNSKEY and RRSIG do not exist.\n\n<BrowserWindow url=\"https://dnssec-analyzer.verisignlabs.com/\">\n  <p align=\"center\">\n    <div style={{'padding':'25px'}}>\n      <Image img=\"/img/faq/dnssec-propagation-1.png\"/>\n    </div>\n  </p>\n</BrowserWindow>\n\nOnce your Registrar has published the DS records, which may be immediately or one or two days after you\u2019ve added the DS record to your registrar, your records will be marked as \"secure\" ones: \n\n<BrowserWindow url=\"https://dnssec-analyzer.verisignlabs.com/\">\n  <p align=\"center\">\n    <div style={{'padding':'25px'}}>\n      <Image img=\"/img/faq/dnssec-propagation-2.png\"/>\n    </div>\n  </p>\n</BrowserWindow>", "mimetype": "text/plain", "start_char_idx": 6656, "end_char_idx": 7474, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e4b413bf-9b94-4fe0-888c-da633f8be2d0": {"__data__": {"id_": "e4b413bf-9b94-4fe0-888c-da633f8be2d0", "embedding": null, "metadata": {"file_path": "docs/faq/dnssec.mdx", "file_name": "dnssec.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/dnssec.mdx", "header_path": "/DNSSEC/Common issues/", "customer_id": 1, "source_url": "docs/faq/dnssec.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["those", "string", "misnamed", "either", "named", "errors", "domain", "lower", "contains", "supports", "wrong", "dnssec"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a4411c73dc1aa331618d9d0d632e2ba5827444af", "node_type": "4", "metadata": {"file_path": "docs/faq/dnssec.mdx", "file_name": "dnssec.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/dnssec.mdx"}, "hash": "0992c03e60a4783fe8422d05a0daa1ad61b754a194213f70985a6c41438efd94", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a7aa00fa-7a85-4ef1-8076-950e8cf7f439", "node_type": "1", "metadata": {"file_path": "docs/faq/dnssec.mdx", "file_name": "dnssec.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/dnssec.mdx", "header_path": "/DNSSEC/Common issues/DNS Propagation delay/"}, "hash": "be00a4780d11d3932e124a71cebc84ffd561428839bed8ea6b02bfb2cc1cebaa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2ba728ee-6869-452f-be7b-23d14bd73cba", "node_type": "1", "metadata": {"header_path": "/DNSSEC/Common issues/"}, "hash": "799ad7f8e5d891086cb31b3b2521958567d1d51cbb5f42984362ce51cab497c0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Misnamed TXT-record\nMake sure that the TXT-record is named just `_ens` (all lower cap letters) and contains the string **a=**`yourwalletaddress` ### Wrong DNSSEC key type\nENS supports `RSA/SHA-256` and `ECDSA` keys, make sure that DNSSEC for your domain is set up to use either of those two key types. ### DNSSEC Errors\nDNSSEC is fairly complex to set up, and it's easy to make mistakes. Try taking a look at DNSViz to see if it shows any DNSSEC warnings. ### TLD doesn't support DNSSEC\nWhile gTLD's must support DNSSEC, the same isn't required of ccTLD's where TLD's can sometimes lack support for it.\nIf your TLD does not support DNSSEC, it will not work with ENS.\n\n:::info\nFor a list of TLD's that support DNSSEC\n\n - https://support.openprovider.eu/hc/en-us/articles/216648838-List-of-TLDs-that-support-DNSSEC\n:::", "mimetype": "text/plain", "start_char_idx": 7476, "end_char_idx": 7624, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "168aa1a5-d857-4e0e-8091-107688f72a4e": {"__data__": {"id_": "168aa1a5-d857-4e0e-8091-107688f72a4e", "embedding": null, "metadata": {"file_path": "docs/faq/dnssec.mdx", "file_name": "dnssec.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/dnssec.mdx", "header_path": "/DNSSEC/Common issues/", "customer_id": 1, "source_url": "docs/faq/dnssec.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["registrar", "namecheap", "conditional", "supported", "following", "support", "there", "managing", "registrars", "under", "dnssec"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a4411c73dc1aa331618d9d0d632e2ba5827444af", "node_type": "4", "metadata": {"file_path": "docs/faq/dnssec.mdx", "file_name": "dnssec.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/dnssec.mdx"}, "hash": "0992c03e60a4783fe8422d05a0daa1ad61b754a194213f70985a6c41438efd94", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "da38bf63-108e-4478-9814-df4f79ff8a3a", "node_type": "1", "metadata": {"file_path": "docs/faq/dnssec.mdx", "file_name": "dnssec.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/dnssec.mdx", "header_path": "/DNSSEC/Common issues/"}, "hash": "c5d03605d3fc2492002d477f5edd863d691059e78ec0a5619112853e7ae56076", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "010d0b08-5203-49d5-ad13-1f0c066f4699", "node_type": "1", "metadata": {"header_path": "/DNSSEC/Common issues/"}, "hash": "df600776929e776a1c92e40922db883f68a0c2b91ff747e3015c2968bf30ed83", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Registrar support for DNSSEC is conditional\nSome registrars support DNSSEC but only for _some_ TLD's. Make sure that it's supported for the TLD you're using.\n\n<Tabs>\n<TabItem value=\"Namecheap\" default>\n\nNamecheap does not support managing DNSSEC under the following TLD's:  \n`.africa` `.ai` `.cm` `.de` `.eu` `.nl` `.ph` `.sg` `.so` `.to` `.com.au` `.net.au` `.org.au`\n\n_**NOTE:** Currently, there is no possibility to run DNSSEC on the Namecheap PremiumDNS nameservers for domain names that are not registered with Namecheap. Also, DNSSEC is not supported for the domains pointed to their Shared/Reseller packages._\n\nAt the moment, you can run DNSSEC on the following nameservers:\n - [x] Namecheap PremiumDNS\n - [x] Namecheap BasicDNS\n - [x] Custom DNS\n - [ ] Namecheap Web Hosting DNS\n - [ ] Namecheap BackupDNS\n - [ ] Namecheap FreeDNS\n\n</TabItem>\n<TabItem value=\"GoDaddy\">\n\nGoDaddy offers a fully-managed option for DNSSEC through their Premium DNS service. If your domain is using GoDaddy nameservers, you can enable DNSSEC on your domains.\n\nIf your domain is registered with GoDaddy but isn't using GoDaddy nameservers, you'll need to set up self-managed DNSSEC through your DNS provider.  \nYou'll need to digitally create private and public keys and generate a Declaration of Signing record during the domain signing process.\n\nThe requirements and restrictions may vary based on your domain's registry and your DNS provider. Reach out to your DNS provider for more information, or switch to GoDaddy nameservers and Premium DNS to enable fully-managed DNSSEC.\n\n</TabItem>\n<TabItem value=\"Google DNS\">\n</TabItem>\n<TabItem value=\"Bluehost\">\n\nBluehost currently supports DNSSEC for the following TLD's:\n - https://cp.cn.bluehost.com/kb/answer/2998\n\n</TabItem>\n<TabItem value=\"Hostinger\">\n</TabItem>\n<TabItem value=\"Hostgator\">\n</TabItem>\n<TabItem value=\"easyDNS\">\n</TabItem>\n</Tabs>", "mimetype": "text/plain", "start_char_idx": 8302, "end_char_idx": 10191, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "010d0b08-5203-49d5-ad13-1f0c066f4699": {"__data__": {"id_": "010d0b08-5203-49d5-ad13-1f0c066f4699", "embedding": null, "metadata": {"file_path": "docs/faq/dnssec.mdx", "file_name": "dnssec.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/dnssec.mdx", "header_path": "/DNSSEC/Common issues/", "customer_id": 1, "source_url": "docs/faq/dnssec.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["importing", "sometimes", "domain", "owned", "import", "technically", "users", "exist", "register", "through"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a4411c73dc1aa331618d9d0d632e2ba5827444af", "node_type": "4", "metadata": {"file_path": "docs/faq/dnssec.mdx", "file_name": "dnssec.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/dnssec.mdx"}, "hash": "0992c03e60a4783fe8422d05a0daa1ad61b754a194213f70985a6c41438efd94", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "168aa1a5-d857-4e0e-8091-107688f72a4e", "node_type": "1", "metadata": {"file_path": "docs/faq/dnssec.mdx", "file_name": "dnssec.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/dnssec.mdx", "header_path": "/DNSSEC/Common issues/"}, "hash": "aa5d009dbc25471426bfc3fa06e96fc4b93ecc7852978aa6d282f8812880f89f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "09b28296-5974-483b-b23d-1333a6990696", "node_type": "1", "metadata": {"header_path": "/DNSSEC/"}, "hash": "891dcd4b8ced2206bca836d25bc8f87b74b9b4901ba4b63433072f645ee77710", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### The domain name doesn't exist\nSometimes users try to import a domain name that doesn't exist into ENS, this doesn't work. The domain name must exist and be owned by the user importing it. ## FAQ ### Can I register any DNS domain through the ENS app?\nTechnically speaking, <Link to=\"https://medium.com/the-ethereum-name-service/upcoming-changes-to-the-ens-root-a1b78fd52b38\">over 90% of domains</Link> can be supported.\nSome TLDs: `.ceo` `.art` `.club` `.luxe` and `.kred` are operated by each DNS registry.", "mimetype": "text/plain", "start_char_idx": 10194, "end_char_idx": 10385, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e0c385a1-64d1-40e4-ac09-b62a0729da11": {"__data__": {"id_": "e0c385a1-64d1-40e4-ac09-b62a0729da11", "embedding": null, "metadata": {"file_path": "docs/faq/dnssec.mdx", "file_name": "dnssec.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/dnssec.mdx", "header_path": "/DNSSEC/FAQ/", "customer_id": 1, "source_url": "docs/faq/dnssec.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["correspondent", "unlike", "level", "permanent", "completely", "domain", "claim", "under", "which", "register", "there", "notion", "managed", "registrant"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a4411c73dc1aa331618d9d0d632e2ba5827444af", "node_type": "4", "metadata": {"file_path": "docs/faq/dnssec.mdx", "file_name": "dnssec.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/dnssec.mdx"}, "hash": "0992c03e60a4783fe8422d05a0daa1ad61b754a194213f70985a6c41438efd94", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dea134aa-4cf0-4745-9998-b7002ec70995", "node_type": "1", "metadata": {"file_path": "docs/faq/dnssec.mdx", "file_name": "dnssec.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/dnssec.mdx", "header_path": "/DNSSEC/FAQ/"}, "hash": "47f11a50b2f5a2a6223df9ab3e8ae28b4c7fcc1075400ab2fd1f178642daecb6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "febd1709-5980-44c1-912c-29e9f1842f86", "node_type": "1", "metadata": {"header_path": "/DNSSEC/FAQ/"}, "hash": "f45cd58ac11be23271a1925232e21b97bfce28c8793984f3c79f0843db08fdea", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### If I own myname.xyz can I claim myname.eth?\nNo. Under DNS integration, you can only claim the correspondent ENS name with the same top level domain (TLD).\n`.eth` is managed completely separately. ### Once I register the domain, how can I transfer/delete ownership?\nUnlike .eth permanent registrar, there is no notion of registrant which can transfer the ownership of the controller.\nIf you want to transfer the ownership to any address other than the currently registered address, please update the corresponding DNS record from your DNS manager and click `Transfer` from our ENS manager.\n\nWe currently haven't enabled the ability to delete the ownership. Having said that, you can achieve the same effect if you set the owner record to `a=0x0000000000000000000000000000000000000000` then click `Transfer` from the ENS manager.", "mimetype": "text/plain", "start_char_idx": 10708, "end_char_idx": 10907, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "99c8121d-1e25-4c7d-ace2-81a5b4ef6dbd": {"__data__": {"id_": "99c8121d-1e25-4c7d-ace2-81a5b4ef6dbd", "embedding": null, "metadata": {"file_path": "docs/faq/dnssec.mdx", "file_name": "dnssec.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/dnssec.mdx", "header_path": "/DNSSEC/FAQ/", "customer_id": 1, "source_url": "docs/faq/dnssec.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["other", "second", "level", "registration", "domain", "enabled", "create", "click", "register", "subdomains", "under", "manager", "dnssec"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a4411c73dc1aa331618d9d0d632e2ba5827444af", "node_type": "4", "metadata": {"file_path": "docs/faq/dnssec.mdx", "file_name": "dnssec.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/dnssec.mdx"}, "hash": "0992c03e60a4783fe8422d05a0daa1ad61b754a194213f70985a6c41438efd94", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "febd1709-5980-44c1-912c-29e9f1842f86", "node_type": "1", "metadata": {"file_path": "docs/faq/dnssec.mdx", "file_name": "dnssec.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/dnssec.mdx", "header_path": "/DNSSEC/FAQ/"}, "hash": "9dd933a888eedd65601cffb449ebb2e07a59fc6ddc4dc6cbfd268c40327bd594", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Can I register my DNS subdomain?\nNo. DNSSEC registration is only enabled for the second level domain (eg: `yourname.xyz`). If you want to create `subdomain.yourname.xyz`, then click `Subdomains` tab of our manager and create it from ENS manager just like other subdomains under `.eth`. # Frequently Asked Questions\n\n```mdx-code-block\nimport DocCardList from '@theme/DocCardList';\n\n<DocCardList /> ---\nlast_update:\n  author: cthulu\ntags:\n  - faq\n  - manager faq\n  - manager\n  - v3 manager\n  - manager app\n  - ens manager\nkeywords: [faq, manager, manager faq, v3, v3 manager, manager app, ens manager]\n---", "mimetype": "text/plain", "start_char_idx": 11542, "end_char_idx": 11831, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3f7812af-53a6-4bae-aef2-65e36df1c0c9": {"__data__": {"id_": "3f7812af-53a6-4bae-aef2-65e36df1c0c9", "embedding": null, "metadata": {"file_path": "docs/faq/manager/general.mdx", "file_name": "general.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/general.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/faq/manager/general.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["there", "after", "labels", "grace", "length", "wrapped", "general", "happens", "maximum", "bytes", "names", "cannot", "period"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "30053960561d7e77879410dccc86baf9c6d9239c", "node_type": "4", "metadata": {"file_path": "docs/faq/manager/general.mdx", "file_name": "general.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/general.mdx"}, "hash": "e672b58b83af94e810581912eb96e1655653cff04238b0210a60a7e5c7e6b474", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "268f8d47-07da-476e-ab54-494447200d50", "node_type": "1", "metadata": {"file_path": "docs/faq/manager/general.mdx", "file_name": "general.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/general.mdx", "header_path": "/"}, "hash": "cfd20bcbcf4773f90d18a41953ff027ce8d2c3b71cc0157ab21296b3397a1cee", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6d6e5431-ae42-40a7-b4a4-24ac7aa36812", "node_type": "1", "metadata": {"header_path": "/General/"}, "hash": "2fccdef5e05aefa9ab49529faed84a09d5b40a41bbd77a3068a816d45d9fa36c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# General ## What is the maximum length of a name I can register?\nNames cannot be less than 3 characters. Wrapped names can only have labels as long as 256 bytes ## Can names have emojis?\nYes! ## What happens if a name expires?\nAfter a name expires, there is a 90 day grace period in which the owner can't edit the records, but can still re-register the name. After this grace period, the name is released for registration by anyone with a temporary premium, which decreases over a 21 days period.\n\nExpired names do not lose their records, so will continue resolving to their previous ETH address until a new owner overwrites it.", "mimetype": "text/plain", "start_char_idx": 208, "end_char_idx": 217, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d2ea97a6-92a2-46e6-8581-30d79ebdc0fb": {"__data__": {"id_": "d2ea97a6-92a2-46e6-8581-30d79ebdc0fb", "embedding": null, "metadata": {"file_path": "docs/faq/manager/general.mdx", "file_name": "general.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/general.mdx", "header_path": "/General/", "customer_id": 1, "source_url": "docs/faq/manager/general.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["other", "allows", "profile", "single", "profiles", "creating", "which", "released", "source", "names", "analytics", "where", "collection", "section"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "30053960561d7e77879410dccc86baf9c6d9239c", "node_type": "4", "metadata": {"file_path": "docs/faq/manager/general.mdx", "file_name": "general.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/general.mdx"}, "hash": "e672b58b83af94e810581912eb96e1655653cff04238b0210a60a7e5c7e6b474", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "39fb5547-5149-4b67-9444-0e7d1645a51c", "node_type": "1", "metadata": {"file_path": "docs/faq/manager/general.mdx", "file_name": "general.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/general.mdx", "header_path": "/General/"}, "hash": "f394abf41b9d16ebd103a66359a7dbf63d9f8af3c02da4f2433a62915adde797", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1a37c643-dd70-40cb-b487-4d8aa8025982", "node_type": "1", "metadata": {"header_path": "/General/"}, "hash": "51f0803961a3a17cfc35bb4cbea9e8f40930dbe4212a899548157ce2905a303b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Where can I see the list of names to be released?\nYou can find a list at the ENS Names to be released section of the [Dune Analytics dashboard](https://dune.xyz/makoto/ens-released-to-be-released-names). ## What is an ENS profile?\nENS profiles are a collection of pre-defined records, which are used by other dApps. Creating your profile in ENS allows you to have a single source for your profile information across Web3. ## What is an ENS avatar?\nYou can upload an image, or use an NFT as your ENS avatar. This will be pulled into dApps as your web3 avatar, while also updating your ENS NFT background.\n\nTo add an avatar click Edit Profile from the Profile tab of any name you own. NFT avatars must be an ERC721/ERC1155 NFT and have a valid image URI.", "mimetype": "text/plain", "start_char_idx": 842, "end_char_idx": 1048, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0895f810-6420-424f-8206-067847102858": {"__data__": {"id_": "0895f810-6420-424f-8206-067847102858", "embedding": null, "metadata": {"file_path": "docs/faq/manager/general.mdx", "file_name": "general.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/general.mdx", "header_path": "/General/", "customer_id": 1, "source_url": "docs/faq/manager/general.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["though", "addresses", "third", "point", "tools", "party", "applications", "store", "hosting", "which", "technically", "there", "resolve", "suggest", "attached"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "30053960561d7e77879410dccc86baf9c6d9239c", "node_type": "4", "metadata": {"file_path": "docs/faq/manager/general.mdx", "file_name": "general.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/general.mdx"}, "hash": "e672b58b83af94e810581912eb96e1655653cff04238b0210a60a7e5c7e6b474", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3966afbd-89bf-42ed-8742-25bf4e973f81", "node_type": "1", "metadata": {"file_path": "docs/faq/manager/general.mdx", "file_name": "general.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/general.mdx", "header_path": "/General/"}, "hash": "f40b93459bf90cc0d9ba9e68aeebd370a56bbf488303d2a3f4cfd5a85cff987c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "be15a7ec-76d2-4ba9-8e82-8411ea552b74", "node_type": "1", "metadata": {"header_path": "/General/"}, "hash": "dddbeab3300f1229e33576f4ded40f257ecf2085e9360ad18e3b754e8f134835", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Can I use an ENS name to point to my website?\nThough ENS can technically store anything, there aren't many third party tools and applications which resolve IP addresses attached to ENS.\n\nInstead, we suggest hosting your static html/css/images on IPFS and put the hash in your ENS name's Content record. Then it can be resolved by ENS-aware browsers (e.g. Opera), browser extensions (Metamask), or any browser with \".link\" or \".limo\" appended to the end (e.g. vitalik.eth.link or vitalik.eth.limo).\n\nIf you want to redirect your ENS name to an existing website, you could write a html file containing JavaScript logic to redirect to your website, upload the file into ipfs using services like [IPFS Pinata](https://pinata.cloud/), then set the CID to your contenthash. See the source code of depositcontract.eth.limo as an example.", "mimetype": "text/plain", "start_char_idx": 1601, "end_char_idx": 2434, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "be15a7ec-76d2-4ba9-8e82-8411ea552b74": {"__data__": {"id_": "be15a7ec-76d2-4ba9-8e82-8411ea552b74", "embedding": null, "metadata": {"file_path": "docs/faq/manager/general.mdx", "file_name": "general.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/general.mdx", "header_path": "/General/", "customer_id": 1, "source_url": "docs/faq/manager/general.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["remove", "previous", "purchase", "primary", "bought", "address", "update", "match", "records", "existing", "settings"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "30053960561d7e77879410dccc86baf9c6d9239c", "node_type": "4", "metadata": {"file_path": "docs/faq/manager/general.mdx", "file_name": "general.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/general.mdx"}, "hash": "e672b58b83af94e810581912eb96e1655653cff04238b0210a60a7e5c7e6b474", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0895f810-6420-424f-8206-067847102858", "node_type": "1", "metadata": {"file_path": "docs/faq/manager/general.mdx", "file_name": "general.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/general.mdx", "header_path": "/General/"}, "hash": "c7bfd2fb4bcdd45b615dee1e4cedad474c60d916b1831ade692ed04ad366efda", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "62226a8b-8aec-4c50-84a5-05b9ca953feb", "node_type": "1", "metadata": {"header_path": "/General/"}, "hash": "2220d01cc647ac770cdf2b08732cefc1de5f09aec34a0ff8d973df5c5fb62275", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## I bought my name on an NFT marketplace, how do I use it?\nWhen you purchase an existing name it may come with existing records from the previous owner. To use it as your primary name, make sure to update the ETH records to match your ETH address and then update your primary name from the settings page.\n\nOptionally, you can also remove or override existing records or create your own profile. ## Why does my wrapped name list someone else as the owner?\nIf you've registered a name in the V3 Manager App it will be automatically wrapped with the new namewrapper contract. This means that the name's ERC-721 NFT is by default owned by the ENS Namewrapper contract which will issue you an ERC-1155 NFT instead. This is done for technical reasons to enable namewrapper functionality and should not cause any issues.\n\n:::info How-To\nIn the event you do want to unwrap the name and instead be issued the ERC-721 NFT directly you can do so by following this guide:\n - [**How-To:** Unwrapping names](/howto/namewrapper/unwrap-names)\n:::", "mimetype": "text/plain", "start_char_idx": 2436, "end_char_idx": 2831, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e533cbd1-13e8-46f5-9b79-86e2227e72e2": {"__data__": {"id_": "e533cbd1-13e8-46f5-9b79-86e2227e72e2", "embedding": null, "metadata": {"file_path": "docs/faq/manager/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/index.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/faq/manager/index.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["storing", "doccardlist", "cthulu", "import", "managing", "records", "manager"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b17389139497f7004d4451ada3cb10e4ec0d1514", "node_type": "4", "metadata": {"file_path": "docs/faq/manager/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/index.mdx"}, "hash": "d22ccedd7103f9ef6c67d51771ac8c86fbf07770eb73c6ec2ee2bc8565005e49", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Manager App/Site FAQ\n\n```mdx-code-block\nimport DocCardList from '@theme/DocCardList';\n\n<DocCardList /> ---\nlast_update:\n  author: cthulu\ntags:\n  - faq\n  - manager faq\n  - manager\n  - v3 manager\n  - manager app\n  - ens manager\n  - managing\nkeywords: [faq, manager, manager faq, v3, v3 manager, manager app, ens manager, managing]\n--- # Managing a name ## What records can I add? Is ENS only for storing an Ethereum address?\nYou can store the addresses of over 100 blockchains, a content hash of a decentralized website, profile information such as an avatar and Twitter handle, and more. ENS even allows you to create custom records that can be used by other applications.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 104, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "87c9c159-9e02-4b09-83fa-dc32ea367433": {"__data__": {"id_": "87c9c159-9e02-4b09-83fa-dc32ea367433", "embedding": null, "metadata": {"file_path": "docs/faq/manager/managing-names.mdx", "file_name": "managing-names.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/managing-names.mdx", "header_path": "/Managing a name/", "customer_id": 1, "source_url": "docs/faq/manager/managing-names.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["primary", "ethereum", "allows", "address", "reverse", "display", "money", "points", "dapps", "resolve", "sending", "connect"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "75d4383302ea37c7aa3b3f7acbe9c8ed3b798b94", "node_type": "4", "metadata": {"file_path": "docs/faq/manager/managing-names.mdx", "file_name": "managing-names.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/managing-names.mdx"}, "hash": "45ad3d9c7e25e1d151710b715cf1e9cd37247170a50322589a90f8d294a88a4d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2c35b069-ffcb-43f0-b663-b9e098a60299", "node_type": "1", "metadata": {"file_path": "docs/faq/manager/managing-names.mdx", "file_name": "managing-names.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/managing-names.mdx", "header_path": "/Managing a name/"}, "hash": "109a3bcdab15717621d6e6bcc1cc67f260415eab0a44ac9854170e0f37822f60", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fca7732b-085b-4ec2-8f14-e5a58b44ccd7", "node_type": "1", "metadata": {"header_path": "/Managing a name/"}, "hash": "b4eb49fc793ddaea72fae23b098c9f81f079100733ee2f23b69b591b1de6fd93", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## What is a Primary ENS name?\nA Primary ENS Name (previously Reverse Record) points your Ethereum address to an ENS name. This allows dApps to find and display your ENS name when you connect to them with your Ethereum account. You can only have one primary name per address.\n\nSending money to an ENS name will resolve to the eth address record, and is not dependent on having a primary name set. However, your primary name must match your Ethereum address record.\n\nTo set or change your primary name, visit the settings page in the ENS app.", "mimetype": "text/plain", "start_char_idx": 572, "end_char_idx": 1113, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fca7732b-085b-4ec2-8f14-e5a58b44ccd7": {"__data__": {"id_": "fca7732b-085b-4ec2-8f14-e5a58b44ccd7", "embedding": null, "metadata": {"file_path": "docs/faq/manager/managing-names.mdx", "file_name": "managing-names.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/managing-names.mdx", "header_path": "/Managing a name/", "customer_id": 1, "source_url": "docs/faq/manager/managing-names.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["other", "button", "specific", "profile", "viewing", "profiles", "connected", "managers", "update", "which", "ultimate", "owner", "records", "collection"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "75d4383302ea37c7aa3b3f7acbe9c8ed3b798b94", "node_type": "4", "metadata": {"file_path": "docs/faq/manager/managing-names.mdx", "file_name": "managing-names.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/managing-names.mdx"}, "hash": "45ad3d9c7e25e1d151710b715cf1e9cd37247170a50322589a90f8d294a88a4d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "87c9c159-9e02-4b09-83fa-dc32ea367433", "node_type": "1", "metadata": {"file_path": "docs/faq/manager/managing-names.mdx", "file_name": "managing-names.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/managing-names.mdx", "header_path": "/Managing a name/"}, "hash": "63775d5d0bec037b344620a7b1ed5f35cc32aa3a6298f9037702fdaa66d9d5ca", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6b556347-f243-44f5-8793-cb16748a3908", "node_type": "1", "metadata": {"header_path": "/Managing a name/"}, "hash": "097f997947ae5155ba6bb6c5737d86da9f87a62379aa2a1e22c89bb08ebda5cc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## How do I set up my profile?\nENS profiles are a collection of pre-defined records, which are used by other dApps. When connected to the ENS app and viewing a name you own, you will see an Edit Profile button on the Profile tab. Here you can update the specific records used for profiles. ## What are Managers and Owners?\nThe Owner is the ultimate owner of the name. For .eth names the Owner (formerly Registrant) of a name can change the Manager and transfer ownership. Not all names will have an owner. If you have PARENT_CANNOT_CONTROL burned as a subname, you will be considered the owner as the parent cannot take over your name.\n\nThe Manager (formerly Controller) of a name can change the resolver and add/edit records. Some dApps (eg: Fleek, OpenSea) set themselves as Manager so they can update records on your behalf. If your .eth name is wrapped, you will not have a Manager as these ownerships are now combined under just a single owner.", "mimetype": "text/plain", "start_char_idx": 1115, "end_char_idx": 1404, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c7455f0b-442e-4ac2-aadb-d843ef3c1bde": {"__data__": {"id_": "c7455f0b-442e-4ac2-aadb-d843ef3c1bde", "embedding": null, "metadata": {"file_path": "docs/faq/manager/managing-names.mdx", "file_name": "managing-names.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/managing-names.mdx", "header_path": "/Managing a name/", "customer_id": 1, "source_url": "docs/faq/manager/managing-names.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["primary", "ethereum", "viewing", "address", "smart", "update", "another", "transfer", "sending", "resolver", "manager"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "75d4383302ea37c7aa3b3f7acbe9c8ed3b798b94", "node_type": "4", "metadata": {"file_path": "docs/faq/manager/managing-names.mdx", "file_name": "managing-names.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/managing-names.mdx"}, "hash": "45ad3d9c7e25e1d151710b715cf1e9cd37247170a50322589a90f8d294a88a4d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6b556347-f243-44f5-8793-cb16748a3908", "node_type": "1", "metadata": {"file_path": "docs/faq/manager/managing-names.mdx", "file_name": "managing-names.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/managing-names.mdx", "header_path": "/Managing a name/"}, "hash": "dd9bd189f6cfb0a7b2076149a987f443cc19d94f44064985be4590280a869e27", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9ddcd472-611c-42a5-aa51-961a93780b18", "node_type": "1", "metadata": {"header_path": "/Managing a name/"}, "hash": "668f7c67e58f5476a65e9a0c7526170bb34ad2e177abfe8c85f33add741dff83", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## How do I send my name to another address?\nSending your name to another address will let you transfer the Owner, Manager or both to a new Ethereum address. This can be done from the More tab when viewing a name you own.\n\nSending the name to another address will not update the records, or make it the primary name for the new address. ## What is a Resolver?\nA Resolver is a smart contract that holds records. By default, names are set to the Public Resolver, which is developed and maintained by the ENS team and has all the standard ENS record types. This is recommended for most users, but you can use custom contracts if you'd like.\n\nIf you are using an older version of the resolver, you can upgrade it from within the ENS app in the More tab.", "mimetype": "text/plain", "start_char_idx": 2067, "end_char_idx": 2403, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "be09359e-1de7-46ad-bba2-7df1c76d0c5d": {"__data__": {"id_": "be09359e-1de7-46ad-bba2-7df1c76d0c5d", "embedding": null, "metadata": {"file_path": "docs/faq/manager/managing-names.mdx", "file_name": "managing-names.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/managing-names.mdx", "header_path": "/Managing a name/", "customer_id": 1, "source_url": "docs/faq/manager/managing-names.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["modern", "newly", "gives", "burnable", "unwrapped", "upgrade", "erc1155", "access", "wrapped", "older", "registered", "names", "wrapping", "permissions"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "75d4383302ea37c7aa3b3f7acbe9c8ed3b798b94", "node_type": "4", "metadata": {"file_path": "docs/faq/manager/managing-names.mdx", "file_name": "managing-names.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/managing-names.mdx"}, "hash": "45ad3d9c7e25e1d151710b715cf1e9cd37247170a50322589a90f8d294a88a4d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9ddcd472-611c-42a5-aa51-961a93780b18", "node_type": "1", "metadata": {"file_path": "docs/faq/manager/managing-names.mdx", "file_name": "managing-names.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/managing-names.mdx", "header_path": "/Managing a name/"}, "hash": "c5e5ced4285084db77ca3d7383fb3bd525f082ae0580b382e07aa3ee909e8153", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "97b202e5-71a1-4fd5-a25d-c2b988952a36", "node_type": "1", "metadata": {"header_path": "/Managing a name/"}, "hash": "92ea79fd04f0210a6c83f1d3d18933deaf743109ea5747c5bae001667dd5a953", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## What is the Name Wrapper?\nWrapping a name is an upgrade that gives older names access to more modern features, such as burnable permissions and ERC1155 NFT support. All newly registered names are wrapped by default.\n\nIf you do have an unwrapped name you will see a prompt to upgrade in the ENS app. This is of course optional, and your name will still work without it.\n\nYou can view a full list of feature [on Github](https://github.com/ensdomains/ens-contracts/tree/master/contracts/wrapper). ## How do I find the labelhash/namehash of a name?\nPlease refer to our [developer documentation page](https://docs.ens.domains/contract-api-reference/name-processing#how-do-i-find-the-labelhash-namehash-of-a-name).", "mimetype": "text/plain", "start_char_idx": 2819, "end_char_idx": 3315, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a5ef58db-6e3d-4a8e-884f-457593d4e317": {"__data__": {"id_": "a5ef58db-6e3d-4a8e-884f-457593d4e317", "embedding": null, "metadata": {"file_path": "docs/faq/manager/managing-names.mdx", "file_name": "managing-names.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/managing-names.mdx", "header_path": "/Managing a name/", "customer_id": 1, "source_url": "docs/faq/manager/managing-names.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["parent", "usually", "subnames", "while", "inherit", "between", "difference", "however", "example", "resolver", "permissions"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "75d4383302ea37c7aa3b3f7acbe9c8ed3b798b94", "node_type": "4", "metadata": {"file_path": "docs/faq/manager/managing-names.mdx", "file_name": "managing-names.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/managing-names.mdx"}, "hash": "45ad3d9c7e25e1d151710b715cf1e9cd37247170a50322589a90f8d294a88a4d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "97b202e5-71a1-4fd5-a25d-c2b988952a36", "node_type": "1", "metadata": {"file_path": "docs/faq/manager/managing-names.mdx", "file_name": "managing-names.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/managing-names.mdx", "header_path": "/Managing a name/"}, "hash": "7d53488fb300654f88a5bb5d814cd72d5b8eecd17f5fde8fa3fa5615c6e7a334", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5ed80283-fa9e-404f-b378-26ef83fc70ea", "node_type": "1", "metadata": {"header_path": "/Managing a name/"}, "hash": "a1f67a1913c64d5ad5aca011b49e2143aa30a6e84650b0d376571dc6f754be75", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## What is the difference between a name and a subname?\nBoth are names, however subnames have a parent name. For example with resolver.ens.eth, ens.eth is the name while resolver is the subname.\n\nSubnames usually inherit the permissions of the parent name, however parent name owners can burn their permissions, giving subnames more control. ## What are permissions?\nPermissions allow the owner of a parent name to remove their access to certain features on subnames. For example, by default only the parent name owner can transfer ownership of a subname. With permissions, the parent name owner can remove their ability to do so, allowing trustless subnames. Before burning any permissions, the name must first burn the ability to unwrap and the wrapper expiry must not be expired.", "mimetype": "text/plain", "start_char_idx": 3533, "end_char_idx": 3874, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "26dc955f-f3ed-4e7c-8313-10ead465464f": {"__data__": {"id_": "26dc955f-f3ed-4e7c-8313-10ead465464f", "embedding": null, "metadata": {"file_path": "docs/faq/manager/registering-names.mdx", "file_name": "registering-names.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/registering-names.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/faq/manager/registering-names.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["other", "registration", "registering", "cthulu", "import", "register", "names", "manager"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "85550ef4c3755f1377fde344cd61a25fc2674d58", "node_type": "4", "metadata": {"file_path": "docs/faq/manager/registering-names.mdx", "file_name": "registering-names.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/registering-names.mdx"}, "hash": "557062f137a1cef701fa99c849c6459e0689fa1477b8b929c4db81cbb3f1e7de", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b73ec9fd-7361-486d-99d5-36c262eb1d6b", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "4130d1bf3f868b5240d34e0e294d15d2a536db4469833629a8cb3c6d6ca734b6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\nlast_update:\n  author: cthulu\ntags:\n  - faq\n  - manager faq\n  - manager\n  - v3 manager\n  - manager app\n  - ens manager\n  - registration\n  - registering\nkeywords: [faq, manager, manager faq, v3, v3 manager, manager app, ens manager, registration, registering]\n--- # Registering a name ## Can I register names other than .eth?\nYes! You can import any DNS name that has DNSSEC-enabled into ENS. Please refer to our [guide](https://docs.ens.domains/dns-registrar-guide) for more detail. ## How much does it cost to register a .eth name?\nCurrently, registration costs are set at the following prices:\n\n\n    5+ character .eth names: $5 in ETH per year.\n    4 character .eth names: $160 in ETH per year.\n    3 character .eth names $640 in ETH per year.\n\n\n3 and 4 character names have 'premium' pricing to reflect the small number of these names available. Recently released names will also have a temporary premium.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 266, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5e4623ed-18df-4e1b-b73f-1d7e88942659": {"__data__": {"id_": "5e4623ed-18df-4e1b-b73f-1d7e88942659", "embedding": null, "metadata": {"file_path": "docs/faq/manager/registering-names.mdx", "file_name": "registering-names.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/registering-names.mdx", "header_path": "/Registering a name/", "customer_id": 1, "source_url": "docs/faq/manager/registering-names.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["temporary", "transaction", "snatching", "squatters", "starts", "stuck", "recently", "reduces", "released", "during", "prevent", "premium", "should"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "85550ef4c3755f1377fde344cd61a25fc2674d58", "node_type": "4", "metadata": {"file_path": "docs/faq/manager/registering-names.mdx", "file_name": "registering-names.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/registering-names.mdx"}, "hash": "557062f137a1cef701fa99c849c6459e0689fa1477b8b929c4db81cbb3f1e7de", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "493f0c6d-04b9-4137-8a2b-b086891ffa26", "node_type": "1", "metadata": {"file_path": "docs/faq/manager/registering-names.mdx", "file_name": "registering-names.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/registering-names.mdx", "header_path": "/Registering a name/"}, "hash": "6eba29d7c3f56d742261b79875635ebe9d0300afabceb8fe9b57b22a967497cb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "46d9adba-be53-4584-ac97-21e99eeea041", "node_type": "1", "metadata": {"header_path": "/Registering a name/"}, "hash": "b4733b44e54f6e469ec02e926511cd8a9515e6a39b89dc46820805a9809ee6c7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## What is a temporary premium?\nIf a name is recently released it will have a temporary premium to prevent squatters snatching names. To give fair opportunity, the premium starts at $100,000,000 and reduces to $0 over 21 days. ## I'm stuck during registration, what should I do?\n - At step 1: If you sped up your transaction you will need to refresh the page, as the app cannot detect this.\n - At step 2: The countdown timer may take up to an additional minute to allow the blockchain to progress. If this continues for more than 5 minutes, please send us a [direct message on Twitter](https://twitter.com/ensdomains).\n    - Note that if you leave step 2 for more than 7 days your registration will reset and you will need to start again from step 1.\n - At step 3: This step may fail when the USD price for a name changes and you haven't registered with enough ETH. Please try the transaction again.\n    - Note that if you leave step 3 for more than 24 hours your registration will reset and you will need to start again from step 1.", "mimetype": "text/plain", "start_char_idx": 917, "end_char_idx": 1143, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ada66e15-6e09-4e85-9b6c-441024372c68": {"__data__": {"id_": "ada66e15-6e09-4e85-9b6c-441024372c68", "embedding": null, "metadata": {"file_path": "docs/faq/manager/registering-names.mdx", "file_name": "registering-names.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/registering-names.mdx", "header_path": "/Registering a name/", "customer_id": 1, "source_url": "docs/faq/manager/registering-names.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["transaction", "machines", "browser", "different", "switch", "because", "close", "refresh", "leave", "devices", "however", "during", "needs", "cannot"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "85550ef4c3755f1377fde344cd61a25fc2674d58", "node_type": "4", "metadata": {"file_path": "docs/faq/manager/registering-names.mdx", "file_name": "registering-names.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/registering-names.mdx"}, "hash": "557062f137a1cef701fa99c849c6459e0689fa1477b8b929c4db81cbb3f1e7de", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "46d9adba-be53-4584-ac97-21e99eeea041", "node_type": "1", "metadata": {"file_path": "docs/faq/manager/registering-names.mdx", "file_name": "registering-names.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/registering-names.mdx", "header_path": "/Registering a name/"}, "hash": "e6441844fb0dbcb4661f839d8a66362ea3f811248e9d815480338dd3f758ebaa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3d41791a-0649-40cb-96b1-f1d95b50c583", "node_type": "1", "metadata": {"header_path": "/Registering a name/"}, "hash": "c38423c97eea4007517162c24532732685d7dec20558084025cd98c0927549ed", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Is it safe to refresh or leave the page during registration?\nYes, it is safe to refresh the page or close the browser once step 1 transaction is complete. However you cannot switch to different devices or machines because it needs a locally stored \u201csecret\u201d which will be used at step 3. Please also do not delete browser history during the registration. ## I cannot see my names in my wallet or NFT marketplaces\nMany wallets and sites fetch metadata from OpenSea and there may be delays when OpenSea is under heavy load.\n\nAs long as you can see your registered name under Names when connected to the ENS app, or your ETH address in the name's records, your name is registered successfully.", "mimetype": "text/plain", "start_char_idx": 1953, "end_char_idx": 2309, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7f8d2c61-671d-4ef8-81ba-2bb323626a55": {"__data__": {"id_": "7f8d2c61-671d-4ef8-81ba-2bb323626a55", "embedding": null, "metadata": {"file_path": "docs/faq/manager/registering-names.mdx", "file_name": "registering-names.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/registering-names.mdx", "header_path": "/Registering a name/", "customer_id": 1, "source_url": "docs/faq/manager/registering-names.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["remove", "already", "troubleshooting", "these", "troubleshoot", "update", "cthulu", "their", "existing", "names", "manager"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "85550ef4c3755f1377fde344cd61a25fc2674d58", "node_type": "4", "metadata": {"file_path": "docs/faq/manager/registering-names.mdx", "file_name": "registering-names.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/registering-names.mdx"}, "hash": "557062f137a1cef701fa99c849c6459e0689fa1477b8b929c4db81cbb3f1e7de", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3d41791a-0649-40cb-96b1-f1d95b50c583", "node_type": "1", "metadata": {"file_path": "docs/faq/manager/registering-names.mdx", "file_name": "registering-names.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/registering-names.mdx", "header_path": "/Registering a name/"}, "hash": "fffbe6f0949cdd6831f0a614fd7097fa47cc51ef101fc3c97570fc4df1ebc8f1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## My new name already has records. Is this a bug?\nWhen names are transferred, resold, or released, they do not lose their existing records. It is safe to update or remove these records. ---\nlast_update:\n  author: cthulu\ntags:\n  - faq\n  - manager faq\n  - manager\n  - v3 manager\n  - manager app\n  - ens manager\n  - troubleshooting\n  - troubleshoot\nkeywords: [faq, manager, manager faq, v3, v3 manager, manager app, ens manager, troubleshooting, troubleshoot]\n--- # Troubleshooting ## How can I receive an extension reminder?", "mimetype": "text/plain", "start_char_idx": 2648, "end_char_idx": 2834, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "852816ae-27f5-4f84-aad0-9e0aa67fb694": {"__data__": {"id_": "852816ae-27f5-4f84-aad0-9e0aa67fb694", "embedding": null, "metadata": {"file_path": "docs/faq/manager/troubleshooting.mdx", "file_name": "troubleshooting.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/troubleshooting.mdx", "header_path": "/Troubleshooting/", "customer_id": 1, "source_url": "docs/faq/manager/troubleshooting.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["stored", "jumble", "instead", "access", "using", "decoded", "search", "shown", "possible", "cannot", "manage", "still", "names", "matched"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a463bdc37f43bab9ff6d2cd183ac928ff9a124af", "node_type": "4", "metadata": {"file_path": "docs/faq/manager/troubleshooting.mdx", "file_name": "troubleshooting.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/troubleshooting.mdx"}, "hash": "e5e8b66eaad6aaf835ae9a69333311d3c6ce4a32b7478a3ed284d7ba6c877d11", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f5fe0990-3d9c-4789-bcdf-c8dc7c8c547a", "node_type": "1", "metadata": {"file_path": "docs/faq/manager/troubleshooting.mdx", "file_name": "troubleshooting.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/troubleshooting.mdx", "header_path": "/Troubleshooting/"}, "hash": "0b65f2f434020ff7bff9c7f5dadf52b45542fdf96f663bfc1339a4c2e9803607", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b1ad91c2-4052-40da-96b2-a3c3d4bfd2e3", "node_type": "1", "metadata": {"header_path": "/Troubleshooting/"}, "hash": "537cfd83f37e67615d4468e5d233bb0f7e5922881b79dcfcbe1e49bef931fb19", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Why are some of my names shown as a jumble of characters?\nNames are stored as a hash on-chain that are then decoded using a list of possible names. If it cannot be matched to a name you will instead see the hash.\n\nYou can still access and manage the name if you search for the name directly in the search bar. ## I lost access to the Ethereum account that owns a name I registered. Can I still extend its registration period?\nAny Ethereum account can pay to extend the registration of any ENS name, though doing so will not change ownership of the name.", "mimetype": "text/plain", "start_char_idx": 341, "end_char_idx": 653, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "726f2bf4-c7aa-4f64-8467-efb7e8640708": {"__data__": {"id_": "726f2bf4-c7aa-4f64-8467-efb7e8640708", "embedding": null, "metadata": {"file_path": "docs/faq/manager/troubleshooting.mdx", "file_name": "troubleshooting.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/troubleshooting.mdx", "header_path": "/Troubleshooting/", "customer_id": 1, "source_url": "docs/faq/manager/troubleshooting.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["remove", "expire", "removing", "taken", "functionality", "unregistered", "grace", "their", "there", "period", "until", "unregister", "steps", "names", "cannot"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a463bdc37f43bab9ff6d2cd183ac928ff9a124af", "node_type": "4", "metadata": {"file_path": "docs/faq/manager/troubleshooting.mdx", "file_name": "troubleshooting.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/troubleshooting.mdx"}, "hash": "e5e8b66eaad6aaf835ae9a69333311d3c6ce4a32b7478a3ed284d7ba6c877d11", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b1ad91c2-4052-40da-96b2-a3c3d4bfd2e3", "node_type": "1", "metadata": {"file_path": "docs/faq/manager/troubleshooting.mdx", "file_name": "troubleshooting.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/troubleshooting.mdx", "header_path": "/Troubleshooting/"}, "hash": "3f61ccd6b78bcd1d35eb845d3338e7c0f60c932a0718b17c163aaab4b41acd1d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0f04c2f7-6690-44a2-b35b-1520e959be6f", "node_type": "1", "metadata": {"header_path": "/Troubleshooting/"}, "hash": "fc368e90866158614f3cdb70dd6f7532138ffc8a874e57a5d8ea8151463108e9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## How do I unregister my name?\nNames cannot be unregistered until they expire and their grace period runs out. However, there are some steps that can be taken to remove functionality or ownership.\n\n- Removing your address records means that people can no longer look up your address with the name.\n- You can remove a primary name from settings.\n- You can transfer ownership to a burn address (eg: 0x0000\u2026dead).\n\nKeep in mind that nothing can erase the fact that you owned a name in the past as it is all on chain. Names will also become available for registration again, once they expire.", "mimetype": "text/plain", "start_char_idx": 900, "end_char_idx": 1489, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0f04c2f7-6690-44a2-b35b-1520e959be6f": {"__data__": {"id_": "0f04c2f7-6690-44a2-b35b-1520e959be6f", "embedding": null, "metadata": {"file_path": "docs/faq/manager/troubleshooting.mdx", "file_name": "troubleshooting.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/troubleshooting.mdx", "header_path": "/Troubleshooting/", "customer_id": 1, "source_url": "docs/faq/manager/troubleshooting.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["deposit", "amount", "bidder", "please", "whether", "second", "registration", "receive", "registered", "before", "remember", "extended", "names"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a463bdc37f43bab9ff6d2cd183ac928ff9a124af", "node_type": "4", "metadata": {"file_path": "docs/faq/manager/troubleshooting.mdx", "file_name": "troubleshooting.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/troubleshooting.mdx"}, "hash": "e5e8b66eaad6aaf835ae9a69333311d3c6ce4a32b7478a3ed284d7ba6c877d11", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "726f2bf4-c7aa-4f64-8467-efb7e8640708", "node_type": "1", "metadata": {"file_path": "docs/faq/manager/troubleshooting.mdx", "file_name": "troubleshooting.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/troubleshooting.mdx", "header_path": "/Troubleshooting/"}, "hash": "abda3b31308a5ed23149672cfadf23065f0405fda69c2639b2c212c6f7f12489", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fc1fc752-5b1c-40f0-a36d-4dace22102fb", "node_type": "1", "metadata": {"header_path": "/Troubleshooting/"}, "hash": "59c13c3b62347455d6fd496b96167370861974d8b051b963f65053b696cb3ac7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## I registered names before 2019 May. Can I have my deposit back?\nYes, you can get your deposit back from [reclaim.ens.domains](https://reclaim.ens.domains/) whether you extended the registration of the name or not.\n\nPlease remember that the amount you will receive is the amount of the second-highest bidder (unless you were the only bidder). For example, if you bid 1 ETH and the second highest bidder bid 0.1 ETH, you deposited 0.1 ETH and you have already received the remaining (0.9 ETH) when you finailsed the auction. Therefore you can now only reclaim 0.1 ETH back. Please read the [the initial guide back in 2017](https://medium.com/the-ethereum-name-service/a-beginners-guide-to-buying-an-ens-domain-3ccac2bdc770) for more detail.", "mimetype": "text/plain", "start_char_idx": 1491, "end_char_idx": 2232, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fc1fc752-5b1c-40f0-a36d-4dace22102fb": {"__data__": {"id_": "fc1fc752-5b1c-40f0-a36d-4dace22102fb", "embedding": null, "metadata": {"file_path": "docs/faq/manager/troubleshooting.mdx", "file_name": "troubleshooting.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/troubleshooting.mdx", "header_path": "/Troubleshooting/", "customer_id": 1, "source_url": "docs/faq/manager/troubleshooting.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["touch", "community", "ethereum", "visit", "storing", "store", "cthulu", "support", "message", "place", "information", "technical", "through", "manager", "governance"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a463bdc37f43bab9ff6d2cd183ac928ff9a124af", "node_type": "4", "metadata": {"file_path": "docs/faq/manager/troubleshooting.mdx", "file_name": "troubleshooting.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/troubleshooting.mdx"}, "hash": "e5e8b66eaad6aaf835ae9a69333311d3c6ce4a32b7478a3ed284d7ba6c877d11", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0f04c2f7-6690-44a2-b35b-1520e959be6f", "node_type": "1", "metadata": {"file_path": "docs/faq/manager/troubleshooting.mdx", "file_name": "troubleshooting.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/troubleshooting.mdx", "header_path": "/Troubleshooting/"}, "hash": "02b6df288947f0ff4f9b9296ca926be1cc6f96ba15249f18f81e5e300bd496d6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## How can I get more support?\nTo get in touch with us send a [direct message on Twitter](https://twitter.com/ensdomains). This is the best place for any support questions.\n\nYou can also join our community through [Discord](https://chat.ens.domains/) or the [DAO Governance forums](https://docs.ens.domains/). For technical information you can visit our documentation. ---\nlast_update:\n  author: cthulu\ntags:\n  - old faq\nkeywords: [old faq]\n--- # V2 Manager FAQ ## Is ENS only for storing an Ethereum address?\nNo, you can store the addresses of over 100 blockchains, decentralized website, profile information such as an avatar and Twitter handle, and more.\n\n - Store addresses of over 100 blockchains\n - Point to a decentralized website\n - Store profile information, avatar and links to social media profiles", "mimetype": "text/plain", "start_char_idx": 2234, "end_char_idx": 2602, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c6528ffa-1e92-497a-ad7c-774e047773bb": {"__data__": {"id_": "c6528ffa-1e92-497a-ad7c-774e047773bb", "embedding": null, "metadata": {"file_path": "docs/faq/manager/v2-manager.mdx", "file_name": "v2-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/v2-manager.mdx", "header_path": "/V2 Manager FAQ/", "customer_id": 1, "source_url": "docs/faq/manager/v2-manager.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["though", "addresses", "point", "tools", "applications", "hosting", "store", "static", "which", "regular", "technically", "there", "resolve", "suggest", "attached"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7b748625a09cc02cabbd6c8aae28cb79de91842e", "node_type": "4", "metadata": {"file_path": "docs/faq/manager/v2-manager.mdx", "file_name": "v2-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/v2-manager.mdx"}, "hash": "672cdb8e83ac8e38b37a7d2fa637f723334bad0de0fd47b93e56a335fd9c5a67", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bfbbe092-784c-49f3-8459-64f737543a9a", "node_type": "1", "metadata": {"file_path": "docs/faq/manager/v2-manager.mdx", "file_name": "v2-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/v2-manager.mdx", "header_path": "/V2 Manager FAQ/"}, "hash": "7dbebe74d71d0ef35b56d19dce1d25ee4d8d39809165b6eff83f0d2f293097b6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5bcf2424-320c-47c2-9b78-514ef53c918b", "node_type": "1", "metadata": {"header_path": "/V2 Manager FAQ/"}, "hash": "016cf06ecfda088fb07dfe5fca9d261b85d12df40c8f447b3151dea615f2785d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Can I point an ENS name to my regular website?\nThough ENS can technically store anything, there aren't many third-party tools and applications which resolve IP addresses attached to ENS.\n\nInstead, we suggest hosting your static html/css/images on IPFS and put the hash in your ENS Name's [Content record](/core/records/content-hash).\n\nThen it can be resolved by ENS-aware browsers:\n - Brave\n - Opera\n\nBrowser extensions:\nMetamask\n\nOr in any browser by appending `.link` or `.limo` to the end of the ENS name. For example: `snowowl.eth.limo`", "mimetype": "text/plain", "start_char_idx": 444, "end_char_idx": 987, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5bcf2424-320c-47c2-9b78-514ef53c918b": {"__data__": {"id_": "5bcf2424-320c-47c2-9b78-514ef53c918b", "embedding": null, "metadata": {"file_path": "docs/faq/manager/v2-manager.mdx", "file_name": "v2-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/v2-manager.mdx", "header_path": "/V2 Manager FAQ/", "customer_id": 1, "source_url": "docs/faq/manager/v2-manager.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["website", "limit", "address", "write", "length", "redirect", "there", "maximum", "containing", "could", "upload", "simple"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7b748625a09cc02cabbd6c8aae28cb79de91842e", "node_type": "4", "metadata": {"file_path": "docs/faq/manager/v2-manager.mdx", "file_name": "v2-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/v2-manager.mdx"}, "hash": "672cdb8e83ac8e38b37a7d2fa637f723334bad0de0fd47b93e56a335fd9c5a67", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c6528ffa-1e92-497a-ad7c-774e047773bb", "node_type": "1", "metadata": {"file_path": "docs/faq/manager/v2-manager.mdx", "file_name": "v2-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/v2-manager.mdx", "header_path": "/V2 Manager FAQ/"}, "hash": "7a88eb5e5967db43fc6d84680ac5ba8ec5f5b590112eb747297b07409d80a280", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ecb6641c-fcb9-4ade-897d-c927f77227be", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "add7fe753286b30974f415c0f6dc87b108757681789738095c2aaf3d2d7541bd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Redirect to a Web2 page\nIf you want to redirect your ENS name to a web2 website you could write a simple html-file containing a redirect to your web2 website address and upload it to IPFS. Then you can put the IPFS CID of the html file your ENS Name's [Content record](/core/records/content-hash) # What is the maximum length of a name I can register?\nThere is no limit on the name length. Technically speaking the transaction would have to fit within an Ethereum block, but it would take *a lot* to reach that size.", "mimetype": "text/plain", "start_char_idx": 989, "end_char_idx": 1288, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "23703675-b1a8-4e42-99fd-3a89a5ce758c": {"__data__": {"id_": "23703675-b1a8-4e42-99fd-3a89a5ce758c", "embedding": null, "metadata": {"file_path": "docs/faq/manager/v2-manager.mdx", "file_name": "v2-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/v2-manager.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/faq/manager/v2-manager.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["other", "ethereum", "ownership", "creating", "emoji", "provided", "pointing", "prove", "supports", "register", "wallet", "under", "names"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7b748625a09cc02cabbd6c8aae28cb79de91842e", "node_type": "4", "metadata": {"file_path": "docs/faq/manager/v2-manager.mdx", "file_name": "v2-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/v2-manager.mdx"}, "hash": "672cdb8e83ac8e38b37a7d2fa637f723334bad0de0fd47b93e56a335fd9c5a67", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ecb6641c-fcb9-4ade-897d-c927f77227be", "node_type": "1", "metadata": {"file_path": "docs/faq/manager/v2-manager.mdx", "file_name": "v2-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/v2-manager.mdx", "header_path": "/"}, "hash": "30b4bc8fb938c93ec810e5b8da17f207d131d4d929a07f61eb2c4c1e36da418a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6c77decf-7213-4b3c-b140-80919e3af18d", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "d2e1a982a7006251ecfe334e39f3e548d787c9eb44e163a72e8c95ccb2ac4760", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Can I register names other than .eth?\nYes, you can *link* any DNS name with ENS provided it supports `DNSSEC and you can prove ownership of it by creating a `TXT record` under it pointing to your Ethereum wallet address. # Can I register a name with emojis?\nYes.[^emoji1]\n[^emoji1]: Emoji from Emoji 14.0 are not yet supported, but will be once the new name normalization rules are implemented. # Registration FAQ ## At Step 1, the transaction was slow so I speeded it up\nOur app cannot currently detect that you sped up the transaction. Please refresh the page and start from step 1 again.", "mimetype": "text/plain", "start_char_idx": 1511, "end_char_idx": 1733, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "86cd3857-971f-4c1f-ac92-5f0a3e56e1ae": {"__data__": {"id_": "86cd3857-971f-4c1f-ac92-5f0a3e56e1ae", "embedding": null, "metadata": {"file_path": "docs/faq/manager/v2-manager.mdx", "file_name": "v2-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/v2-manager.mdx", "header_path": "/Registration FAQ/", "customer_id": 1, "source_url": "docs/faq/manager/v2-manager.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ethereum", "start", "please", "contact", "transaction", "after", "counter", "waits", "minute", "blockchain", "reset", "stuck", "leave", "moving", "continues"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7b748625a09cc02cabbd6c8aae28cb79de91842e", "node_type": "4", "metadata": {"file_path": "docs/faq/manager/v2-manager.mdx", "file_name": "v2-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/v2-manager.mdx"}, "hash": "672cdb8e83ac8e38b37a7d2fa637f723334bad0de0fd47b93e56a335fd9c5a67", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6faf9187-6dd8-4a52-ab3c-249fda4b377a", "node_type": "1", "metadata": {"file_path": "docs/faq/manager/v2-manager.mdx", "file_name": "v2-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/v2-manager.mdx", "header_path": "/Registration FAQ/"}, "hash": "ff01bd991333b6a6105ef547ba3ded2c0d598fe12ac8c7a82021f3492bec7d78", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4d9ee73a-ea2e-4478-85e1-8e99d5b1a581", "node_type": "1", "metadata": {"header_path": "/Registration FAQ/"}, "hash": "c1526ba0532acaa40e7fc4fee6e48901e7c5d551f26cee91fd0b8c412ee7effa", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## I am stuck at Step 2\nAt times, the counter waits for up to a minute at the end of step 2 to make sure that the Ethereum blockchain has progressed. If this continues for more than 5 min after moving to step 2, please contact us on Discord.\nNote that if you leave it at step 2 for more than 7 days, it gets reset and you have to start from step 1 again. ## My transaction at Step 3 failed\nThis happens occasionally when the USD price changes and you haven't registered with enough ETH. Please try again from step 3.\nPlease also be noted that the registration step will expire if you don't complete within 24 hrs and you have to start from step 1 again.", "mimetype": "text/plain", "start_char_idx": 2108, "end_char_idx": 2462, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "dece2124-4c96-42eb-9300-55564a3ad274": {"__data__": {"id_": "dece2124-4c96-42eb-9300-55564a3ad274", "embedding": null, "metadata": {"file_path": "docs/faq/manager/v2-manager.mdx", "file_name": "v2-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/v2-manager.mdx", "header_path": "/Registration FAQ/", "customer_id": 1, "source_url": "docs/faq/manager/v2-manager.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["occasionally", "heavy", "metadata", "wallets", "registered", "happens", "opensea", "names", "wallet", "under", "fetch", "cannot", "section"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7b748625a09cc02cabbd6c8aae28cb79de91842e", "node_type": "4", "metadata": {"file_path": "docs/faq/manager/v2-manager.mdx", "file_name": "v2-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/v2-manager.mdx"}, "hash": "672cdb8e83ac8e38b37a7d2fa637f723334bad0de0fd47b93e56a335fd9c5a67", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4d9ee73a-ea2e-4478-85e1-8e99d5b1a581", "node_type": "1", "metadata": {"file_path": "docs/faq/manager/v2-manager.mdx", "file_name": "v2-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/v2-manager.mdx", "header_path": "/Registration FAQ/"}, "hash": "8a47cf43fa12eb5c6cf32261e51039f645fef549bbe2a197b645eff0a53d9358", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "21ca4057-4934-4c1c-b374-1e198113ef5f", "node_type": "1", "metadata": {"header_path": "/Registration FAQ/"}, "hash": "07f58afb9f19c31e2332423fe11acb70539aac09d1ff84fb6f3eb005fe43f21c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## I cannot see the names I registered on OpenSea nor on my wallet\nThis occasionally happens when OpenSea is under a heavy load. You may also not find your name under the NFT section of your wallet, as many wallets fetch metadata from OpenSea.\nAs long as you can see your registered name under \"My Account\" on our site or your ETH address under the name section, your name is registered successfully.\n\n:::info Support FAQ\nFor more information on how to resolve issues with OpenSea, see:\n - <Link to=\"/faq/marketplaces/opensea\"><b>Support FAQ: </b>OpenSea</Link>\n:::", "mimetype": "text/plain", "start_char_idx": 2764, "end_char_idx": 3329, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "21ca4057-4934-4c1c-b374-1e198113ef5f": {"__data__": {"id_": "21ca4057-4934-4c1c-b374-1e198113ef5f", "embedding": null, "metadata": {"file_path": "docs/faq/manager/v2-manager.mdx", "file_name": "v2-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/v2-manager.mdx", "header_path": "/Registration FAQ/", "customer_id": 1, "source_url": "docs/faq/manager/v2-manager.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["transaction", "machines", "browser", "different", "switch", "because", "close", "refresh", "devices", "however", "cannot"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7b748625a09cc02cabbd6c8aae28cb79de91842e", "node_type": "4", "metadata": {"file_path": "docs/faq/manager/v2-manager.mdx", "file_name": "v2-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/v2-manager.mdx"}, "hash": "672cdb8e83ac8e38b37a7d2fa637f723334bad0de0fd47b93e56a335fd9c5a67", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dece2124-4c96-42eb-9300-55564a3ad274", "node_type": "1", "metadata": {"file_path": "docs/faq/manager/v2-manager.mdx", "file_name": "v2-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/v2-manager.mdx", "header_path": "/Registration FAQ/"}, "hash": "fa40a75296b262b44592584769f26ad365fc52065863d8089a3d19de96fdb789", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bfb49688-6fd3-4d83-9152-0e0521dc1078", "node_type": "1", "metadata": {"header_path": "/Registration FAQ/"}, "hash": "617eb5455b21bb384fb5c5271585722762dfa60b1e4b8836b49c79f4b77b26af", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Is it safe to refresh the page, close the browser, or switch to different browser/machine?\n\nIt is safe to refresh the page or close the browser once step 1 transaction is complete. However you cannot switch to different devices or machines because it needs a locally stored \u201csecret\u201d which will be used at step 3. Please also do not delete browser history during the registration.\nAfter you register ## What is the difference between the Registrant and Controller?\n\nIf your Ethereum address is set as the Controller you can change the resolver and add/edit records. Some dapps (eg: Fleek, OpenSea) set themselves as the Controller so they can update records on your behalf.\nThe Registrant only exists on \".eth\" names and it allows you to change the Controller. If you transfer the Registrant to an address you don't own, you lose the ownership of the name.", "mimetype": "text/plain", "start_char_idx": 3331, "end_char_idx": 3732, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6429b799-3671-445c-85b2-22312b8f8a24": {"__data__": {"id_": "6429b799-3671-445c-85b2-22312b8f8a24", "embedding": null, "metadata": {"file_path": "docs/faq/manager/v2-manager.mdx", "file_name": "v2-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/v2-manager.mdx", "header_path": "/Registration FAQ/", "customer_id": 1, "source_url": "docs/faq/manager/v2-manager.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["holds", "record", "smart", "public", "default", "standard", "resolver", "custom", "managed", "contract", "names"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7b748625a09cc02cabbd6c8aae28cb79de91842e", "node_type": "4", "metadata": {"file_path": "docs/faq/manager/v2-manager.mdx", "file_name": "v2-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/v2-manager.mdx"}, "hash": "672cdb8e83ac8e38b37a7d2fa637f723334bad0de0fd47b93e56a335fd9c5a67", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bfb49688-6fd3-4d83-9152-0e0521dc1078", "node_type": "1", "metadata": {"file_path": "docs/faq/manager/v2-manager.mdx", "file_name": "v2-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/v2-manager.mdx", "header_path": "/Registration FAQ/"}, "hash": "6c4eaa621c07703243cbdf69769bac0a9a1878de2bb3ae9196142568c534d935", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "51cfb133-b545-47ec-a509-245afc5f411a", "node_type": "1", "metadata": {"header_path": "/Registration FAQ/"}, "hash": "1ada08cf270172d50416cd3c87d8f0cff46d55bb1055cc47c0213b21195b742f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## What is a Resolver?\n\nA Resolver is a smart contract that holds records. Names are set by default to the Public Resolver managed by the ENS team and have all the standard ENS record types. You can set your Resolver to a custom resolver contract if you,d like.\nWhat is a Primary ENS Name record?\n\nA Primary ENS Name record (formerly Reverse Record) makes your Ethereum address point to an ENS name. This allows dapps to find and display your ENS name when you connect to them with your Ethereum account. This can only be set by you so it is not set automatically upon registration.\nTo set the Primary ENS Name record, please click \"My account\", and select \"Primary ENS Name\".\nHow do I unregister my name?\n\nIf you click the \"trash bin\" icon on the address record, it will unset your address so that people can no longer look up your address with the name. You can also unset ownership of subdomains in this way, but you cannot do so on \".eth\" addresses. Because \".eth\" names are ERC721-compliant NFTs, you cannot transfer them to an empty address (0x00000...). You can transfer it to a burn address (eg: 0x00001), but that does not erase the fact that you used to own the name. Also, the name will not become available for registration again until the registration period and grace period runs out.\nHow do I transfer my name?\n\nFor a \".eth\" name, transfer both the Registrant and the Controller to the new Ethereum account. Since \".eth\" names are ERC721 compliant NFTs, you can change the Registrant by simply transferring the NFT from any NFT compliant wallet/marketplace as well.\nNote that transferring the ownership (aka the Registrant) of the name does not change the controller nor records, so the recipient may need to update them once received. If the recipient is not experienced or you prefer your address not to be associated to the transferring names, it may be a good idea for you to set the ETH Address record to their Ethereum address, set the controller, then transfer the name.\nFor subdomains, there are no registrants unless the subdomain is customised to be ERC721 compliant. Simply set the controller to the new address (after setting the record to the new address).", "mimetype": "text/plain", "start_char_idx": 4193, "end_char_idx": 6377, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "51cfb133-b545-47ec-a509-245afc5f411a": {"__data__": {"id_": "51cfb133-b545-47ec-a509-245afc5f411a", "embedding": null, "metadata": {"file_path": "docs/faq/manager/v2-manager.mdx", "file_name": "v2-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/v2-manager.mdx", "header_path": "/Registration FAQ/", "customer_id": 1, "source_url": "docs/faq/manager/v2-manager.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["stored", "jumble", "hashed", "access", "using", "search", "names", "possible", "format", "shows", "manage", "subdomains", "still", "decode", "shown"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7b748625a09cc02cabbd6c8aae28cb79de91842e", "node_type": "4", "metadata": {"file_path": "docs/faq/manager/v2-manager.mdx", "file_name": "v2-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/v2-manager.mdx"}, "hash": "672cdb8e83ac8e38b37a7d2fa637f723334bad0de0fd47b93e56a335fd9c5a67", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6429b799-3671-445c-85b2-22312b8f8a24", "node_type": "1", "metadata": {"file_path": "docs/faq/manager/v2-manager.mdx", "file_name": "v2-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/v2-manager.mdx", "header_path": "/Registration FAQ/"}, "hash": "180c838ff9e3d0f33dc2451105577395feb8fd3b7cef5e7ffb1be41907c480ba", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a89bd2a0-c6cf-4d0a-998c-ef9502f917ae", "node_type": "1", "metadata": {"header_path": "/Registration FAQ/"}, "hash": "9f33760904f2389cb04a20720d4e6656f7d4a0747979700f5f1edd0817701139", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Why are some of my subdomains shown as a jumble of characters?\n\nENS names are stored as a hash on-chain so we have to decode the name using a list of possible names, and it shows in the hashed format if we don't have it on our list. You can still access and manage the name if you search for the name directly in the search bar.\nHow do I find the labelhash/namehash of a name?\n\nPlease refer to our developer documentation page.\nWhen you extend your registration ## How do I receive an extension reminder?\n\nClick the \"Remind me\" button on the name's page or your address page so that you can set a calendar reminder or email reminder. Note that you have to set calendar reminders per name, whereas you only need to set email reminders per the address of the owner. Also note that you can register a name for multiple years, removing the need to extend each year.\nWhat happens if I forget to extend the registration of a name?\n\nAfter your name expires, there is a 90 day grace period in which the owner can't edit the records but can still re-register the name. After the grace period, the name is released for registration by anyone with a temporary premium which decreases over a 21 days period. The released name continues to resolve your ETH address until the new owner overwrites it.\nWhere can I see the list of names to be released\n\nYou can see the list in the \"ENS Names to be released\" section of the Dune Analytics dashboard.", "mimetype": "text/plain", "start_char_idx": 6380, "end_char_idx": 6844, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6c67c5af-ab33-41bb-bab2-870223be2e21": {"__data__": {"id_": "6c67c5af-ab33-41bb-bab2-870223be2e21", "embedding": null, "metadata": {"file_path": "docs/faq/manager/v2-manager.mdx", "file_name": "v2-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/v2-manager.mdx", "header_path": "/Registration FAQ/", "customer_id": 1, "source_url": "docs/faq/manager/v2-manager.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["though", "ethereum", "extend", "access", "registration", "doing", "owner", "still", "change", "account"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7b748625a09cc02cabbd6c8aae28cb79de91842e", "node_type": "4", "metadata": {"file_path": "docs/faq/manager/v2-manager.mdx", "file_name": "v2-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/v2-manager.mdx"}, "hash": "672cdb8e83ac8e38b37a7d2fa637f723334bad0de0fd47b93e56a335fd9c5a67", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a89bd2a0-c6cf-4d0a-998c-ef9502f917ae", "node_type": "1", "metadata": {"file_path": "docs/faq/manager/v2-manager.mdx", "file_name": "v2-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/v2-manager.mdx", "header_path": "/Registration FAQ/"}, "hash": "b9cfb4112c8e9bc3e4c169c00cc3245f4f0203637cbc61b80d92fe55c175e360", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ce21236a-d87d-4afe-8782-475fb536f057", "node_type": "1", "metadata": {"header_path": "/Registration FAQ/"}, "hash": "cc2a311ac7082521ea0907fdd55050cf3168a4db6840c454721d9f3455b38bac", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## I lost access to the Ethereum account that owns a name I registered. Can I still extend its registration period?\n\nAny Ethereum account can pay to extend the registration of any ENS name, though doing so from an account that's not the owner will not change ownership of the name. Just go to the name's page and click \"Extend\". ## I registered names before 2019 May. Can I have my deposit back?\n\nYes, you can get your deposit back from reclaim.ens.domains whether you extended the registration of the name or not.\n\nPlease remember that the amount you will receive is the amount of the second-highest bidder (unless you were the only bidder). For example, if you bid 1 ETH and the second highest bidder bid 0.1 ETH, you deposited 0.1 ETH and you have already received the remaining (0.9 ETH) when you finalised the auction. Therefore you can now only reclaim 0.1 ETH back. Please read the initial guide back in 2017 for more detail.", "mimetype": "text/plain", "start_char_idx": 7819, "end_char_idx": 8147, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "044cb4be-c26b-49b6-a678-e204bdb4f79e": {"__data__": {"id_": "044cb4be-c26b-49b6-a678-e204bdb4f79e", "embedding": null, "metadata": {"file_path": "docs/faq/marketplaces/ensvision.mdx", "file_name": "ensvision.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/marketplaces/ensvision.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/faq/marketplaces/ensvision.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["markets", "ensvision", "vision", "marketplace", "market", "cthulu", "secondary", "marketplaces"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c4764c5f66e4b85ae0309c9c39e0291e3f9581b5", "node_type": "4", "metadata": {"file_path": "docs/faq/marketplaces/ensvision.mdx", "file_name": "ensvision.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/marketplaces/ensvision.mdx"}, "hash": "240a443e5438c98ef8604c75d9f6195c25d9a70ae08eea1494503c1cd3caae06", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d577810b-7509-4efd-84cb-b3572f9963c9", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "01159e61774baf7ef62c8c8d3afb08385910e4c6b71c299c97267bb2d202d0f3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\nlast_update:\n  author: cthulu\ntags:\n  - marketplace\n  - marketplaces\n  - market\n  - markets\n  - secondary market\n  - secondary markets\n  - ensvision\n  - ens.vision\n  - ens vision\n  - vision\nkeywords: [marketplace, marketplaces, secondary market, secondary markets, market, markets, ensvision, ens.vision, ens vision, vision]\n--- # ENS Vision\nThe most common issues impacting users of ENS Vision and their solutions\n\n<BrowserWindow url=\"https://ens.vision\">\n  <Image img=\"/img/faq/marketplaces/ens-vision-1.png\"/>\n</BrowserWindow>", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 332, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5aa226a5-e05e-4f1b-9fda-40473394df23": {"__data__": {"id_": "5aa226a5-e05e-4f1b-9fda-40473394df23", "embedding": null, "metadata": {"file_path": "docs/faq/marketplaces/ensvision.mdx", "file_name": "ensvision.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/marketplaces/ensvision.mdx", "header_path": "/ENS Vision/", "customer_id": 1, "source_url": "docs/faq/marketplaces/ensvision.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["primary", "bought", "after", "vision", "being", "caused", "public", "following", "instructions", "refresh", "records", "resolver"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c4764c5f66e4b85ae0309c9c39e0291e3f9581b5", "node_type": "4", "metadata": {"file_path": "docs/faq/marketplaces/ensvision.mdx", "file_name": "ensvision.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/marketplaces/ensvision.mdx"}, "hash": "240a443e5438c98ef8604c75d9f6195c25d9a70ae08eea1494503c1cd3caae06", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d577810b-7509-4efd-84cb-b3572f9963c9", "node_type": "1", "metadata": {"file_path": "docs/faq/marketplaces/ensvision.mdx", "file_name": "ensvision.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/marketplaces/ensvision.mdx", "header_path": "/"}, "hash": "489a52f56be3a0f97ccc3db6189659b7ab277a611561636df2cf11fd0527eca2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "49563470-39d4-4ef1-b840-5891cb762e53", "node_type": "1", "metadata": {"header_path": "/ENS Vision/Can't set as Primary name/"}, "hash": "32e1a8cab79baced6de294b79a3b343e31384f954a41f85ab3559a4e761261c3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Can't set as Primary name\nIf you bought a name on ENS Vision that you can't set as your Primary name, this is caused by the `ETH Address` and `Resolver` records not being set. To fix it: ### Set the Resolver\nSet the Resolver to the `ENS Public Resolver` by following the instructions in\n:::info How-To\n<Link to=\"/core/records/resolver#ens-public-resolver\">\n  <b>How-To:</b> Set the Resolver\n</Link>\n:::\nAfter this has been set refresh the page and a new `Addresses` section should appear. ### Set the ETH Address record\nSet the `ETH Address` record to your wallet address by following the instructions in\n:::info How-To\n<Link to=\"/howto/add-wallet-address\">\n  <b>How-To:</b> Add a Wallet Address \n</Link>\n:::", "mimetype": "text/plain", "start_char_idx": 536, "end_char_idx": 725, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3544fe8f-2d4e-458e-a9cd-fcb1658e8973": {"__data__": {"id_": "3544fe8f-2d4e-458e-a9cd-fcb1658e8973", "embedding": null, "metadata": {"file_path": "docs/faq/marketplaces/ensvision.mdx", "file_name": "ensvision.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/marketplaces/ensvision.mdx", "header_path": "/ENS Vision/Can't set as Primary name/", "customer_id": 1, "source_url": "docs/faq/marketplaces/ensvision.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["primary", "means", "vision", "order", "registering", "perform", "which", "possible", "normalization", "register", "names", "follow"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c4764c5f66e4b85ae0309c9c39e0291e3f9581b5", "node_type": "4", "metadata": {"file_path": "docs/faq/marketplaces/ensvision.mdx", "file_name": "ensvision.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/marketplaces/ensvision.mdx"}, "hash": "240a443e5438c98ef8604c75d9f6195c25d9a70ae08eea1494503c1cd3caae06", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "80b0fa8d-9fe2-42cf-a831-97b87a283499", "node_type": "1", "metadata": {"file_path": "docs/faq/marketplaces/ensvision.mdx", "file_name": "ensvision.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/marketplaces/ensvision.mdx", "header_path": "/ENS Vision/Can't set as Primary name/"}, "hash": "8f1b50f851ccd05440e252645f2148d775dcd0c18dbca25f31bca73d57bc3843", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1a9e271d-551d-46f2-a872-d16c1e40f8f5", "node_type": "1", "metadata": {"header_path": "/ENS Vision/"}, "hash": "2cdf29f3a54fa57894a4240fce2debdfd8c0acbe7536c8cc8b50833d31d87a68", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Set the Primary name\nFollow this How-To in order to set the Primary name:\n:::info How-To\n<Link to=\"/howto/set-primary-name\">\n  <b>How-To:</b> Set a Primary name\n</Link>\n::: ## Lack of normalization\nENS Vision does not perform normalization when registering names which means that it's possible to register invalid names that will not be possible to manage, use or trade on certain marketplaces like OpenSea. \n\nBefore registering a name on ENS Vision *always* make sure it is searchable in the official <Link to=\"https://app.ens.domains\"><b>ENS Manager App</b></Link> first.", "mimetype": "text/plain", "start_char_idx": 1251, "end_char_idx": 1427, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fc2b08e3-c8a1-40cf-b41a-77f73692c106": {"__data__": {"id_": "fc2b08e3-c8a1-40cf-b41a-77f73692c106", "embedding": null, "metadata": {"file_path": "docs/faq/marketplaces/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/marketplaces/index.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/faq/marketplaces/index.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["previous", "after", "markets", "important", "marketplace", "registration", "purchasing", "cthulu", "period", "secondary", "things", "marketplaces"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3d0d64194d615afb520db59c13d0c4490263d0c8", "node_type": "4", "metadata": {"file_path": "docs/faq/marketplaces/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/marketplaces/index.mdx"}, "hash": "6f9bdaab7b7fc82cea894a690acdddfd08974f1cfb03b6cff21127416b53235c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "93be5b9c-6c96-4bee-b5f9-41db4371b3ba", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "59b05f719d4c207542b9a3c043ee5a44440a22b19a4d9fd2476e3dacf4c61a04", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\nlast_update:\n  author: cthulu\ntags:\n  - marketplaces\n  - secondary markets\nkeywords: [marketplace, marketplaces, secondary markets]\n--- # Marketplaces\nAfter purchasing an ENS name from a secondary marketplace it's important to keep a few things in mind:\n\n * The registration period is *inherited* from the previous owner, so double-check the expiration date using the [ENS Manager App](https://app.ens.domains).\n  \n * *Only* the `Owner` record is updated with your wallet address, all other records like the `Manager` and `ETH Address` records remain set to the old owner's address until you change it.\n\n:::warning\nWithout updating the ETH Address, sending tokens to a name you've just purchased on a secondary market will most likely lead to a loss of funds. Be sure \nthe ENS name is not still pointing to the previous owner's wallet address.\n:::\n\n```mdx-code-block\nimport DocCardList from '@theme/DocCardList';\n\n<DocCardList />", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 139, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5bd7e501-0aa6-48c8-90a5-520ae826c804": {"__data__": {"id_": "5bd7e501-0aa6-48c8-90a5-520ae826c804", "embedding": null, "metadata": {"file_path": "docs/faq/marketplaces/opensea.mdx", "file_name": "opensea.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/marketplaces/opensea.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/faq/marketplaces/opensea.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["markets", "marketplace", "market", "cthulu", "opensea", "secondary", "marketplaces"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e57b614081ef77937fc68e9933db694052ef66d7", "node_type": "4", "metadata": {"file_path": "docs/faq/marketplaces/opensea.mdx", "file_name": "opensea.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/marketplaces/opensea.mdx"}, "hash": "b476e98daac44e07862f3f259cf2189d3e6b02bfa4bd6e2d037d8ef9ccc764ac", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "99214b61-bff5-47db-bdf3-ecc37159d7e2", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "8d1808a12a0979b64d4fbc4314bd6ab5b39e56258ee7abaddd1add8f911d41c9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\nlast_update:\n  author: cthulu\ntags:\n  - marketplace\n  - marketplaces\n  - market\n  - markets\n  - secondary market\n  - secondary markets\n  - opensea\n  - open sea\n  - os\nkeywords: [marketplace, marketplaces, market, markets, secondary market, secondary markets, opensea, open sea, os]\n--- # OpenSea\nOpenSea is a third-party marketplace run by a separate private company and is unaffiliated with Ethereum Name Service, as such we don't have any access to their systems to fix problems that are isolated to their platform.\n\n<BrowserWindow url=\"https://opensea.io\">\n  <Image img=\"/img/faq/marketplaces/opensea-1.png\"/>\n</BrowserWindow>", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 289, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5612835f-7577-42fc-a4f0-db311db2c210": {"__data__": {"id_": "5612835f-7577-42fc-a4f0-db311db2c210", "embedding": null, "metadata": {"file_path": "docs/faq/marketplaces/opensea.mdx", "file_name": "opensea.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/marketplaces/opensea.mdx", "header_path": "/OpenSea/", "customer_id": 1, "source_url": "docs/faq/marketplaces/opensea.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["appear", "start", "sometimes", "immediately", "because", "update", "working", "databases", "their", "marketplaces", "every", "while", "names", "longer", "internal"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e57b614081ef77937fc68e9933db694052ef66d7", "node_type": "4", "metadata": {"file_path": "docs/faq/marketplaces/opensea.mdx", "file_name": "opensea.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/marketplaces/opensea.mdx"}, "hash": "b476e98daac44e07862f3f259cf2189d3e6b02bfa4bd6e2d037d8ef9ccc764ac", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "99214b61-bff5-47db-bdf3-ecc37159d7e2", "node_type": "1", "metadata": {"file_path": "docs/faq/marketplaces/opensea.mdx", "file_name": "opensea.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/marketplaces/opensea.mdx", "header_path": "/"}, "hash": "57602e84fffdb2667e08645d98e0e45ed8d3079a47f7a7f1fe48da6b0501a6df", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ccf6f4d4-1235-4f1b-a4b3-4017064d27d3", "node_type": "1", "metadata": {"header_path": "/OpenSea/"}, "hash": "79e240a56a50f904188db9c6384500735a8dee98035897380296ea1a83ed2bb5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## ENS name doesn't show\nWhile ENS names appear and start working immediately in the ENS app, it can sometimes take a much longer time for them to show on third-party marketplaces because they only update their internal databases every once in a while.\n\nWhen you're experiencing this issue the ENS names will show up either as a series of digits or as \"Unknown ENS name\".\n\n:::info Fix\nTo fix this refresh the metadata:\n - [**OpenSea:** Refresh Metadata](#refresh-metadata)\n:::\n\nThis schedules a refresh of the metadata in OpenSea's internal databases and usually resolves the issue in the next few hours.\n\n:::caution if it doesn't work\nIf the ENS name still doesn't show up correctly after 24 hours you need to contact OpenSea's support for assistance:\n - [**OpenSea:** Support](#support)\n:::", "mimetype": "text/plain", "start_char_idx": 636, "end_char_idx": 1428, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ccf6f4d4-1235-4f1b-a4b3-4017064d27d3": {"__data__": {"id_": "ccf6f4d4-1235-4f1b-a4b3-4017064d27d3", "embedding": null, "metadata": {"file_path": "docs/faq/marketplaces/opensea.mdx", "file_name": "opensea.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/marketplaces/opensea.mdx", "header_path": "/OpenSea/", "customer_id": 1, "source_url": "docs/faq/marketplaces/opensea.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["issue", "different", "identical", "copies", "wrapped", "their", "shows", "opensea", "having", "names", "contract", "namewrapper", "lists"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e57b614081ef77937fc68e9933db694052ef66d7", "node_type": "4", "metadata": {"file_path": "docs/faq/marketplaces/opensea.mdx", "file_name": "opensea.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/marketplaces/opensea.mdx"}, "hash": "b476e98daac44e07862f3f259cf2189d3e6b02bfa4bd6e2d037d8ef9ccc764ac", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5612835f-7577-42fc-a4f0-db311db2c210", "node_type": "1", "metadata": {"file_path": "docs/faq/marketplaces/opensea.mdx", "file_name": "opensea.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/marketplaces/opensea.mdx", "header_path": "/OpenSea/"}, "hash": "ad8827c8c646ce246fb9d5a6710fdf5b18129caf20af2423d4054bc5056707f6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "48c08aba-aa93-4b75-9f2c-f40d74abf2af", "node_type": "1", "metadata": {"header_path": "/OpenSea/"}, "hash": "c3d56b61f49f5c6498c2d263aa9ea71ed7e010a9f4e88f3c939f94a7e402d65f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## OpenSea shows two identical copies of my ENS name with one having a different owner!\nThis is an on-going issue with the way OpenSea lists wrapped names. Wrapped names has their ERC-721 NFT sent to the Namewrapper contract and a new ERC-1155 NFT is issued to the user in its place.\n\nOpenSea currently shows both of those NFT's instead of just one which can lead to confusion, and the ERC-721 NFT will show up as having a different owner because it's owned by the namewrapper contract.\n\nWe're working with OpenSea to try and resolve this issue to have wrapped names displayed in a more intuitive way, but the good news is that this shouldn't cause any issues apart from two names being visible simultaneously.\n\n:::info How-To\nIn the event you do want to unwrap the name and instead be issued the ERC-721 NFT directly you can do so by following this guide:\n - [**How-To:** Unwrapping names](/howto/namewrapper/unwrap-names)\n:::", "mimetype": "text/plain", "start_char_idx": 1430, "end_char_idx": 2357, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "48c08aba-aa93-4b75-9f2c-f40d74abf2af": {"__data__": {"id_": "48c08aba-aa93-4b75-9f2c-f40d74abf2af", "embedding": null, "metadata": {"file_path": "docs/faq/marketplaces/opensea.mdx", "file_name": "opensea.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/marketplaces/opensea.mdx", "header_path": "/OpenSea/", "customer_id": 1, "source_url": "docs/faq/marketplaces/opensea.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["valid", "listed", "expiration", "inquire", "reach", "refresh", "allow", "notice", "their", "shows", "opensea", "exist", "names"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e57b614081ef77937fc68e9933db694052ef66d7", "node_type": "4", "metadata": {"file_path": "docs/faq/marketplaces/opensea.mdx", "file_name": "opensea.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/marketplaces/opensea.mdx"}, "hash": "b476e98daac44e07862f3f259cf2189d3e6b02bfa4bd6e2d037d8ef9ccc764ac", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ccf6f4d4-1235-4f1b-a4b3-4017064d27d3", "node_type": "1", "metadata": {"file_path": "docs/faq/marketplaces/opensea.mdx", "file_name": "opensea.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/marketplaces/opensea.mdx", "header_path": "/OpenSea/"}, "hash": "610cee89cf58193d5624767e5771fd8a1297cd9017fc61ab694f3db3ac985f10", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bbbe6377-e7ed-4c6b-a1db-15a23bb7641b", "node_type": "1", "metadata": {"header_path": "/OpenSea/"}, "hash": "cb7d7b4765f0d66d97f8bc1ac47270d14c22b87efc5e48828df1876d590047a9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## OpenSea shows a \"Delisted\" notice\nIf the name does not exist at all on OpenSea, you will need to reach out to their [#Support](#support) to inquire why.\n\n:::info Fix\nTo fix this refresh the metadata:\n - [**OpenSea:** Refresh Metadata](#refresh-metadata)\n::: ## OpenSea does not allow the name to be listed or sold\nBe sure your name has a valid expiration date. ENS names that have expired are not able to be transferred (sold), or have any of their records updated.\n\n:::info Fix\nExtend the name's registration in the ENS Manager App:\n - [ENS Manager App](https://app.ens.domains).\n:::", "mimetype": "text/plain", "start_char_idx": 2359, "end_char_idx": 2619, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4e9ab68e-e014-4ee0-b29d-5233bae3e041": {"__data__": {"id_": "4e9ab68e-e014-4ee0-b29d-5233bae3e041", "embedding": null, "metadata": {"file_path": "docs/faq/marketplaces/opensea.mdx", "file_name": "opensea.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/marketplaces/opensea.mdx", "header_path": "/OpenSea/", "customer_id": 1, "source_url": "docs/faq/marketplaces/opensea.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["listed", "metadata", "someone", "refresh", "schedule", "shows", "owner", "without"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e57b614081ef77937fc68e9933db694052ef66d7", "node_type": "4", "metadata": {"file_path": "docs/faq/marketplaces/opensea.mdx", "file_name": "opensea.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/marketplaces/opensea.mdx"}, "hash": "b476e98daac44e07862f3f259cf2189d3e6b02bfa4bd6e2d037d8ef9ccc764ac", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bbbe6377-e7ed-4c6b-a1db-15a23bb7641b", "node_type": "1", "metadata": {"file_path": "docs/faq/marketplaces/opensea.mdx", "file_name": "opensea.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/marketplaces/opensea.mdx", "header_path": "/OpenSea/"}, "hash": "ab94a21b2f772ae502c1319eaa30cfbb292e5526ba13539c459d875fcb500fa9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "814e95b2-3ffe-401a-85b8-04aa8ddd0c3f", "node_type": "1", "metadata": {"header_path": "/OpenSea/"}, "hash": "9ac287f277a3246fdfb245a5fc14866dca743397b8b7daf65701304705c9a595", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## I'm not listed as the owner of my name\nIf you find that your name shows up on OpenSea, but with someone else as the owner (or without an owner at all)\nthen you'll need to refresh the name metadata on OpenSea.\n\n:::info Fix\nTo fix this refresh the metadata:\n - [**OpenSea:** Refresh Metadata](#refresh-metadata)\n::: ## Refresh metadata\nTo schedule a refresh of your ENS Name's metadata in OpenSea, press the \"three dots\"-button and then `refresh metadata`:\n<BrowserWindow url=\"https://opensea.io\">\n  <Image img=\"/img/faq/marketplaces/opensea-unknown-1.gif\"/>\n</BrowserWindow>", "mimetype": "text/plain", "start_char_idx": 2949, "end_char_idx": 3265, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b0206fd3-120b-4fcb-9bb1-94e74f4d2cda": {"__data__": {"id_": "b0206fd3-120b-4fcb-9bb1-94e74f4d2cda", "embedding": null, "metadata": {"file_path": "docs/faq/marketplaces/opensea.mdx", "file_name": "opensea.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/marketplaces/opensea.mdx", "header_path": "/OpenSea/", "customer_id": 1, "source_url": "docs/faq/marketplaces/opensea.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["listed", "problem", "ticket", "answers", "system", "discord", "support", "solutions", "opensea", "contacted", "server", "needs"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e57b614081ef77937fc68e9933db694052ef66d7", "node_type": "4", "metadata": {"file_path": "docs/faq/marketplaces/opensea.mdx", "file_name": "opensea.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/marketplaces/opensea.mdx"}, "hash": "b476e98daac44e07862f3f259cf2189d3e6b02bfa4bd6e2d037d8ef9ccc764ac", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "814e95b2-3ffe-401a-85b8-04aa8ddd0c3f", "node_type": "1", "metadata": {"file_path": "docs/faq/marketplaces/opensea.mdx", "file_name": "opensea.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/marketplaces/opensea.mdx", "header_path": "/OpenSea/"}, "hash": "0d1ca360dc0f03343d22a45a1862d504ab7c62243a5341eb59c2570252ca0362", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Support\nIf the problem isn't listed on this page or the solutions don't work OpenSea needs to be contacted directly:\n\n:::info OpenSea Support\n - <Link to=\"https://support.opensea.io\"><b>OpenSea Support</b></Link>\n   <br/><i>OpenSea's Support ticket system with answers to most questions</i>\n\n - <Link to=\"https://discord.gg/opensea\"><b>OpenSea Discord</b></Link>\n   <br/><i>OpenSea's Discord chat server with support mods for live help</i>\n::: ---\nlast_update:\n  author: cthulu\ntags:\n  - homoglyph\n  - homoglyphs\n  - homoglyphics\n  - fake\n  - fake name\n  - identical\n  - zwj\n  - zero-width\n  - zero width joiner\n  - zerowidthjoiner\n  - zerowidth\n  - zero-width-joiner\n  - variation-selector\n  - variation selector\n  - variationselector\n  - selector\n  - confusable\n  - confusables\nkeywords: [homoglyph, homoglyphs, homoglyphics, fake, fake name, identical, zwj, zero-width, zero width joiner, zerowidthjoiner, zerowidth, zero-width-joiner, variation-selector, variation selector, variationselector, selector, confusable, confusables]\n---", "mimetype": "text/plain", "start_char_idx": 3528, "end_char_idx": 3974, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "46c3c3be-813c-4455-8a1c-bf9bd42fe316": {"__data__": {"id_": "46c3c3be-813c-4455-8a1c-bf9bd42fe316", "embedding": null, "metadata": {"file_path": "docs/faq/normalization/homoglyphs.mdx", "file_name": "homoglyphs.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/normalization/homoglyphs.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/faq/normalization/homoglyphs.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["watch", "crypto", "buying", "characters", "common", "different", "composed", "names", "homoglyphs", "trading", "sending", "meaning", "things", "identical"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c9a91eb240b0c2abf37eba616e546a47dc89b646", "node_type": "4", "metadata": {"file_path": "docs/faq/normalization/homoglyphs.mdx", "file_name": "homoglyphs.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/normalization/homoglyphs.mdx"}, "hash": "75ba9018f4b2d2a2ccc39822a48a6a00fcceacbef12c8eb4ad497d339309494b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0e529739-65b5-42cc-b14d-67d101a10f26", "node_type": "1", "metadata": {"file_path": "docs/faq/normalization/homoglyphs.mdx", "file_name": "homoglyphs.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/normalization/homoglyphs.mdx", "header_path": "/"}, "hash": "9a25992b54d5906ebef7d74aa7a47bbc7f36b5dd55c28aa327f3204db006c0bd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3d3050a8-d908-4301-bbb2-8612f19e2b2b", "node_type": "1", "metadata": {"header_path": "/Homoglyphs/"}, "hash": "252377756630af0e508e9d514f0f74828a6d298db04a858f570b997b64843534", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Homoglyphs\nOne of the things to watch out for when sending crypto to an ENS name, or buying and trading them, are\nnames with homoglyphs, meaning names that look identical or near-identical but are composed of different characters\nthan the common ones.\n\nFor example, `vita\u200dlik.eth` is not the same name as `vitalik.eth`.\n\nConfusing? Let's take a look at what's going on behind the scenes! ## Analyzing Unicode\n:::info\nIn situations like this it's a good idea to use a unicode analyzer to take a deeper look at what the string of text\nactually contains.\n\n - [Unicode Analyzer](https://www.fontspace.com/unicode/analyzer#e=dml0YeKAjWxpay5ldGg)\n:::\n\nWhen analyzing `vita\u200dlik.eth` with a unicode analyzer we get this:\n\n_Click the Tab of each name to compare the two, can you spot the difference?_\n\n<Tabs>\n  <TabItem value=\"Real vitalik.eth\" default>\n    <BrowserWindow url=\"https://www.fontspace.com/unicode/analyzer\">\n      <p align=\"center\">\n        <div style={{'background-color': \"#ffffff\", 'padding': \"25px\"}}>\n          <Image img=\"/img/faq/homoglyphs-analyze-1.png\"/>\n        </div>\n      </p>\n    </BrowserWindow>\n  </TabItem>\n  <TabItem value=\"Fake vitalik.eth\">\n    <BrowserWindow url=\"https://www.fontspace.com/unicode/analyzer\">\n      <p align=\"center\">\n        <div style={{'background-color': \"#ffffff\", 'padding': \"25px\"}}>\n          <Image img=\"/img/faq/homoglyphs-analyze-2.png\"/>\n        </div>\n      </p>\n    </BrowserWindow>\n  </TabItem>\n</Tabs>\n\nWhen analyzing both ENS names one can see that one of the names is fake, containing an invisible character.\nA so called `Zero-Width Joiner` or `ZWJ`", "mimetype": "text/plain", "start_char_idx": 594, "end_char_idx": 983, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "52ed74bf-acad-4a2e-99ea-ca7b0c2ab4f7": {"__data__": {"id_": "52ed74bf-acad-4a2e-99ea-ca7b0c2ab4f7", "embedding": null, "metadata": {"file_path": "docs/faq/normalization/homoglyphs.mdx", "file_name": "homoglyphs.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/normalization/homoglyphs.mdx", "header_path": "/Homoglyphs/Analyzing Unicode/", "customer_id": 1, "source_url": "docs/faq/normalization/homoglyphs.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["characters", "joiners", "alter", "heart", "burning", "emojipedia", "emoji", "together", "their", "analyzing", "invisible", "article", "intended"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c9a91eb240b0c2abf37eba616e546a47dc89b646", "node_type": "4", "metadata": {"file_path": "docs/faq/normalization/homoglyphs.mdx", "file_name": "homoglyphs.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/normalization/homoglyphs.mdx"}, "hash": "75ba9018f4b2d2a2ccc39822a48a6a00fcceacbef12c8eb4ad497d339309494b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3d3050a8-d908-4301-bbb2-8612f19e2b2b", "node_type": "1", "metadata": {"file_path": "docs/faq/normalization/homoglyphs.mdx", "file_name": "homoglyphs.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/normalization/homoglyphs.mdx", "header_path": "/Homoglyphs/"}, "hash": "33d0089d761e7ff74ce2bd7c38cc073ef3a9eb273d4cc2007fb4c753a31d6dbd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8edd7592-23be-4cd0-9446-ddd22cccace3", "node_type": "1", "metadata": {"header_path": "/Homoglyphs/Analyzing Unicode/"}, "hash": "d0e86d9459f3a4afbb100dc3f1d91ff596d675a022e0f24b88c1156c640c5079", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Zero-Width Joiners\n\n:::info Emojipedia\n - For more information, view the <Link to=\"https://emojipedia.org/zero-width-joiner/\">Emojipedia article on Zero-Width Joiners</Link>\n:::\n\nZero-Width Joiners are invisible characters intended to be used to glue emoji together to alter their properties.\nFor example, by analyzing the burning heart emoji we can find out what characters it consists of: \u2764\ufe0f\u200d\ud83d\udd25\n\n<BrowserWindow url=\"https://www.fontspace.com/unicode/analyzer\">\n  <p align=\"center\">\n    <div style={{'background-color': \"#ffffff\", 'padding': \"25px\"}}>\n      <Image img=\"/img/faq/homoglyphs-analyze-3.png\"/>\n    </div>\n  </p>\n</BrowserWindow>\n\nAs you can see the \u2764\ufe0f\u200d\ud83d\udd25 emoji actually consists of several different characters glued together by the use of a `Zero-Width Joiner` and a `Variation Selector`.", "mimetype": "text/plain", "start_char_idx": 2210, "end_char_idx": 3015, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8edd7592-23be-4cd0-9446-ddd22cccace3": {"__data__": {"id_": "8edd7592-23be-4cd0-9446-ddd22cccace3", "embedding": null, "metadata": {"file_path": "docs/faq/normalization/homoglyphs.mdx", "file_name": "homoglyphs.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/normalization/homoglyphs.mdx", "header_path": "/Homoglyphs/Analyzing Unicode/", "customer_id": 1, "source_url": "docs/faq/normalization/homoglyphs.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["variation", "heavy", "emoji", "black", "display", "default", "white", "selectors", "displayed", "unicode"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c9a91eb240b0c2abf37eba616e546a47dc89b646", "node_type": "4", "metadata": {"file_path": "docs/faq/normalization/homoglyphs.mdx", "file_name": "homoglyphs.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/normalization/homoglyphs.mdx"}, "hash": "75ba9018f4b2d2a2ccc39822a48a6a00fcceacbef12c8eb4ad497d339309494b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "52ed74bf-acad-4a2e-99ea-ca7b0c2ab4f7", "node_type": "1", "metadata": {"file_path": "docs/faq/normalization/homoglyphs.mdx", "file_name": "homoglyphs.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/normalization/homoglyphs.mdx", "header_path": "/Homoglyphs/Analyzing Unicode/"}, "hash": "22f638d16cf660d4d261775f76463b50430fa9ec421b6bd160a1e26548b98246", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2a1a14bc-4ebf-4bd4-ab1f-a3361148f31b", "node_type": "1", "metadata": {"header_path": "/Homoglyphs/"}, "hash": "1a19bccc108a172e931b937036295b8833a6fc81ddd5bea8637e05c41ce29438", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Variation Selectors\nVariation selectors are used in unicode to display _variants_ of an emoji.\n\n<div class=\"container\" style={{'padding': '0'}}>\n<div class=\"row\">\n<div class=\"col\">\n<ImageWindow title=\"Emoji: Heavy Black Heart\">\n<p align='center' style={{'fontSize': '64px'}}>\u2764</p>\n</ImageWindow>\n</div>\n<div class=\"col\">\n<p>By default some emoji are displayed with black & white representations, such as the heavy black heart we talked about in the previous example.</p>\n<p><b>The full sequence looks like this:</b></p>\n\n 1. `\u2764 Heavy Black Heart`\n\n</div>\n</div>\n</div>\n\nWhen analyzing the emoji in a `unicode analyzer` we see that it's quite simply a one character emoji:\n\n<BrowserWindow url=\"https://www.fontspace.com/unicode/analyzer\">\n  <p align=\"center\">\n    <div style={{'background-color': \"#ffffff\", 'padding': \"25px\"}}>\n      <Image img=\"/img/faq/homoglyphs-emoji-heart-1.png\"/>\n    </div>\n  </p>\n</BrowserWindow>\n\n<div class=\"container\" style={{'padding': '0'}}>\n<div class=\"row\">\n<div class=\"col\">\n<ImageWindow title=\"Emoji: Red Heart\">\n<p align='center' style={{'fontSize': '64px'}}>\u2764\ufe0f</p>\n</ImageWindow>\n</div>\n<div class=\"col\">\n\nAdding a `Variation Selector` to the sequence displays a colourful version of the emoji instead.\n\n<p><b>The full sequence looks like this:</b></p>\n\n 1. `\u2764 Heavy Black Heart`\n 1. `Variation Selector-16`\n\n</div>\n</div>\n</div>\n\nEmoji keyboards such as those found on phones usually produce emojis containing\nvariation selectors for that purpose.\n\n<BrowserWindow url=\"https://www.fontspace.com/unicode/analyzer\">\n  <p align=\"center\">\n    <div style={{'background-color': \"#ffffff\", 'padding': \"25px\"}}>\n      <Image img=\"/img/faq/homoglyphs-emoji-heart-2.png\"/>\n    </div>\n  </p>\n</BrowserWindow>\n\n<div class=\"container\" style={{'padding': '0'}}>\n<div class=\"row\">\n<div class=\"col\">\n<ImageWindow title=\"Emoji: Heart on Fire\">\n<p align='center' style={{'fontSize': '64px'}}>\u2764\ufe0f\u200d\ud83d\udd25</p>\n</ImageWindow>\n</div>\n<div class=\"col\">\n\nBy adding a `Zero-Width Joiner` and a `Fire Emoji` we get a `Heart on Fire` emoji.\n\n<p><b>The full sequence looks like this:</b></p>\n\n 1. `\u2764 Heavy Black Heart`\n 1. `Variation Selector-16`\n 1. `Zero Width Joiner`\n 1. `\ud83d\udd25 Fire`\n\n</div>\n</div>\n</div>\n\nAs you can see the `Heart on Fire` emoji isn't a single character, but a combination of emoji and special characters.\n\n<BrowserWindow url=\"https://www.fontspace.com/unicode/analyzer\">\n  <p align=\"center\">\n    <div style={{'background-color': \"#ffffff\", 'padding': \"25px\"}}>\n      <Image img=\"/img/faq/homoglyphs-emoji-heart-3.png\"/>\n    </div>\n  </p>\n</BrowserWindow>\n\n\n\nIn ENS names variation selectors are not allowed to be in the name, and the normalization strips those characters out when typed or pasted into the official ENS Manager App,\nhowever, when interacting directly with the contracts or when using third-party services to register ENS names that normalization process is missing, making it possible\nto register names with emoji sequences where the variation selectors aren't stripped out, making a name that's invalid in ENS systems.\n\n:::info Emojipedia\nAn invisible codepoint which specifies that the preceding character should be displayed with emoji presentation.\nOnly required if the preceding character defaults to text presentation.\n\nOften used in Emoji ZWJ Sequences, where one or more characters in the sequence have text and emoji presentation, but otherwise default to text (black and white) display.\n\n - For more information, view the <Link to=\"https://emojipedia.org/variation-selector-16/\">Emojipedia article on Variation Selector-16</Link>\n:::\n\n:::caution\nIn ENS name normalization the `Variation Selector` is stripped out of the name. Any ENS name containing a `Variation Selector` is **invalid**.\n:::", "mimetype": "text/plain", "start_char_idx": 3017, "end_char_idx": 6761, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2a1a14bc-4ebf-4bd4-ab1f-a3361148f31b": {"__data__": {"id_": "2a1a14bc-4ebf-4bd4-ab1f-a3361148f31b", "embedding": null, "metadata": {"file_path": "docs/faq/normalization/homoglyphs.mdx", "file_name": "homoglyphs.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/normalization/homoglyphs.mdx", "header_path": "/Homoglyphs/", "customer_id": 1, "source_url": "docs/faq/normalization/homoglyphs.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["exactly", "other", "characters", "confusables", "either", "confused", "which", "another", "following", "similar", "easily", "appearing"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c9a91eb240b0c2abf37eba616e546a47dc89b646", "node_type": "4", "metadata": {"file_path": "docs/faq/normalization/homoglyphs.mdx", "file_name": "homoglyphs.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/normalization/homoglyphs.mdx"}, "hash": "75ba9018f4b2d2a2ccc39822a48a6a00fcceacbef12c8eb4ad497d339309494b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8edd7592-23be-4cd0-9446-ddd22cccace3", "node_type": "1", "metadata": {"file_path": "docs/faq/normalization/homoglyphs.mdx", "file_name": "homoglyphs.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/normalization/homoglyphs.mdx", "header_path": "/Homoglyphs/Analyzing Unicode/"}, "hash": "4861bc745a3ae0f049b47d045b02663be2346b1d20df919a8ec1e76d613eff2c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d5157af2-bad5-4a26-a26b-50e9b87983fb", "node_type": "1", "metadata": {"header_path": "/Homoglyphs/Confusables/"}, "hash": "283291acd7768efb31c3229d70298ab0969824fec4f7b143e9fa1c196700762d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Confusables\n`Confusables` are characters which can be easily confused with other characters either by appearing exactly the same, or by appearing _very similar_ to another character.\n\nFor example, take a look at the following characters to get an idea of how similar some characters can be:\n\n<BrowserWindow url=\"https://www.fontspace.com/unicode/analyzer\">\n  <p align=\"center\">\n    <div style={{'background-color': \"#ffffff\", 'padding': \"25px\"}}>\n      <Image img=\"/img/faq/homoglyphs-confusables-1.png\"/>\n    </div>\n  </p>\n</BrowserWindow>\n\nFor example: `ens.eth` and `\u0435ns.eth` are two different names, using two e's from different alphabets, _can you spot the difference?_\n\n<Tabs>\n  <TabItem value=\"Real ens.eth\" default>\n    <BrowserWindow url=\"https://www.fontspace.com/unicode/analyzer\">\n      <p align=\"center\">\n        <div style={{'background-color': \"#ffffff\", 'padding': \"25px\"}}>\n          <Image img=\"/img/faq/homoglyphs-confusables-ens-real.png\"/>\n        </div>\n      </p>\n    </BrowserWindow>\n  </TabItem>\n  <TabItem value=\"Fake ens.eth\">\n    <BrowserWindow url=\"https://www.fontspace.com/unicode/analyzer\">\n      <p align=\"center\">\n        <div style={{'background-color': '#ffffff', 'padding': \"25px\"}}>\n          <Image img=\"/img/faq/homoglyphs-confusables-ens-fake.png\"/>\n        </div>\n      </p>\n    </BrowserWindow>\n  </TabItem>\n</Tabs>\n\nAs you can see the two names appear near identical to one another, in spite of one using a cyrillic `\u0435` instead of a latin `e`:\n\n\n| Unicode Character | Description |\n|-|-|\n| \u0435                 | Cyrillic e  |\n| e                 | Latin e     |\n\nThis can be hard to spot, so employing a `unicode analyzer` is recommended as it will clearly show you what characters are in the name.\n\nSo far we've reviewed a few confusable characters, but unicode contains *many* more. These are results only for the letters `e` `n` and `s`:\n\n<BrowserWindow url=\"https://util.unicode.org\">\n  <Image img=\"/img/faq/homoglyphs-confusables-unicodeutility-1.png\"/>\n</BrowserWindow>\n\nTry searching for a name in the unicode confusable utility below to get an idea of just how many confusable characters (and character combinations) that exist!\n\n:::info Links\n - <Link to=\"https://util.unicode.org/UnicodeJsps/confusables.jsp\">Unicode Utilities: Confusables</Link>\n\nRaffy's confusables tool can also be used to gain a better insight into confusable characters:\n - <Link to=\"https://adraffy.github.io/ens-normalize.js/test/confused.html\">ens-normalize.js test: confusables</Link>\n:::", "mimetype": "text/plain", "start_char_idx": 6763, "end_char_idx": 9282, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d5157af2-bad5-4a26-a26b-50e9b87983fb": {"__data__": {"id_": "d5157af2-bad5-4a26-a26b-50e9b87983fb", "embedding": null, "metadata": {"file_path": "docs/faq/normalization/homoglyphs.mdx", "file_name": "homoglyphs.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/normalization/homoglyphs.mdx", "header_path": "/Homoglyphs/Confusables/", "customer_id": 1, "source_url": "docs/faq/normalization/homoglyphs.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["characters", "capitals", "upper", "letters", "capital", "normalized", "small", "lower", "notice", "their", "normalization", "character", "containing"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c9a91eb240b0c2abf37eba616e546a47dc89b646", "node_type": "4", "metadata": {"file_path": "docs/faq/normalization/homoglyphs.mdx", "file_name": "homoglyphs.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/normalization/homoglyphs.mdx"}, "hash": "75ba9018f4b2d2a2ccc39822a48a6a00fcceacbef12c8eb4ad497d339309494b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2a1a14bc-4ebf-4bd4-ab1f-a3361148f31b", "node_type": "1", "metadata": {"file_path": "docs/faq/normalization/homoglyphs.mdx", "file_name": "homoglyphs.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/normalization/homoglyphs.mdx", "header_path": "/Homoglyphs/"}, "hash": "128cbbe68b16facdb18a28e88882fe89da9846953d7cdf24520a0665373ba775", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f4b38551-9784-4521-90dc-cf68117fdcae", "node_type": "1", "metadata": {"header_path": "/Homoglyphs/Confusables/"}, "hash": "54247e2707b2ff5ca9259dcdf9e0c0179e422724d93be2a4f2717b5f9aa86c47", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Small Capitals\n:::caution notice\nIn ENS name normalization upper case letters are normalized to their lower case counterparts. Any ENS name containing an upper case character is invalid.\n:::\n\nSmall capital characters are often confused with their regular capital (upper case) counterparts. For example:\n\n<Tabs>\n  <TabItem value=\"Regular capitals\" default>\n    <BrowserWindow url=\"https://www.fontspace.com/unicode/analyzer\">\n      <p align=\"center\">\n        <div style={{'background-color': \"#ffffff\", 'padding': \"25px\"}}>\n          <Image img=\"/img/faq/homoglyphs-confusables-smallcaps-1.png\"/>\n        </div>\n      </p>\n    </BrowserWindow>\n  </TabItem>\n  <TabItem value=\"Small capitals\">\n    <BrowserWindow url=\"https://www.fontspace.com/unicode/analyzer\">\n      <p align=\"center\">\n        <div style={{'background-color': '#ffffff', 'padding': \"25px\"}}>\n          <Image img=\"/img/faq/homoglyphs-confusables-smallcaps-2.png\"/>\n        </div>\n      </p>\n    </BrowserWindow>\n  </TabItem>\n</Tabs>", "mimetype": "text/plain", "start_char_idx": 9284, "end_char_idx": 10286, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f4b38551-9784-4521-90dc-cf68117fdcae": {"__data__": {"id_": "f4b38551-9784-4521-90dc-cf68117fdcae", "embedding": null, "metadata": {"file_path": "docs/faq/normalization/homoglyphs.mdx", "file_name": "homoglyphs.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/normalization/homoglyphs.mdx", "header_path": "/Homoglyphs/Confusables/", "customer_id": 1, "source_url": "docs/faq/normalization/homoglyphs.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["issue", "tickets", "confusables", "numerals", "persian", "common", "encountered", "arabic", "digits", "support", "keyboard", "several"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c9a91eb240b0c2abf37eba616e546a47dc89b646", "node_type": "4", "metadata": {"file_path": "docs/faq/normalization/homoglyphs.mdx", "file_name": "homoglyphs.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/normalization/homoglyphs.mdx"}, "hash": "75ba9018f4b2d2a2ccc39822a48a6a00fcceacbef12c8eb4ad497d339309494b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d5157af2-bad5-4a26-a26b-50e9b87983fb", "node_type": "1", "metadata": {"file_path": "docs/faq/normalization/homoglyphs.mdx", "file_name": "homoglyphs.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/normalization/homoglyphs.mdx", "header_path": "/Homoglyphs/Confusables/"}, "hash": "0ce46d630a7b34d9422b95d7daae9cf8b22fa0ea73376b2a80d9225ac6dd0b14", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "17f8080c-6887-4e10-95f6-1146ec9c0907", "node_type": "1", "metadata": {"header_path": "/Homoglyphs/"}, "hash": "4a2c9f077c7c24bd1c9c4dc9a17bac9da594d65fc2b4907ff9702cf8bd2a8fe9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Arabic numerals\nOne common issue we've encountered in support tickets are confusables in arabic and persian digits.\nSeveral arabic and persian keyboard digits appear identical, which leads to confusing scenarios when arabic and persian digits are mixed in one ENS name.\n\n<Tabs>\n  <TabItem value=\"Arabic digits\" default>\n    <BrowserWindow url=\"https://www.fontspace.com/unicode/analyzer\">\n      <p align=\"center\">\n        <div style={{'background-color': \"#ffffff\", 'padding': \"25px\"}}>\n          <Image img=\"/img/faq/homoglyphs-confusables-arabic-digits-1.png\"/>\n        </div>\n      </p>\n    </BrowserWindow>\n  </TabItem>\n  <TabItem value=\"Persian digits\">\n    <BrowserWindow url=\"https://www.fontspace.com/unicode/analyzer\">\n      <p align=\"center\">\n        <div style={{'background-color': '#ffffff', 'padding': \"25px\"}}>\n          <Image img=\"/img/faq/homoglyphs-confusables-arabic-digits-2.png\"/>\n        </div>\n      </p>\n    </BrowserWindow>\n  </TabItem>\n</Tabs>", "mimetype": "text/plain", "start_char_idx": 10288, "end_char_idx": 11262, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "17f8080c-6887-4e10-95f6-1146ec9c0907": {"__data__": {"id_": "17f8080c-6887-4e10-95f6-1146ec9c0907", "embedding": null, "metadata": {"file_path": "docs/faq/normalization/homoglyphs.mdx", "file_name": "homoglyphs.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/normalization/homoglyphs.mdx", "header_path": "/Homoglyphs/", "customer_id": 1, "source_url": "docs/faq/normalization/homoglyphs.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["unusual", "warning", "different", "services", "priced", "signs", "types", "often", "indicators", "there", "containing", "names"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c9a91eb240b0c2abf37eba616e546a47dc89b646", "node_type": "4", "metadata": {"file_path": "docs/faq/normalization/homoglyphs.mdx", "file_name": "homoglyphs.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/normalization/homoglyphs.mdx"}, "hash": "75ba9018f4b2d2a2ccc39822a48a6a00fcceacbef12c8eb4ad497d339309494b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f4b38551-9784-4521-90dc-cf68117fdcae", "node_type": "1", "metadata": {"file_path": "docs/faq/normalization/homoglyphs.mdx", "file_name": "homoglyphs.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/normalization/homoglyphs.mdx", "header_path": "/Homoglyphs/Confusables/"}, "hash": "cd977f63b4886549aa8decef17fd629bdae2dcd497bbf76bb464138c2a9a1772", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4bd5d3c1-2c89-4edb-a306-f9522ec9aec9", "node_type": "1", "metadata": {"header_path": "/Homoglyphs/Warning signs/"}, "hash": "27ca1fc9190e544eae815c47afb40907da02c60f113f4eb74226effd2312c284", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Warning signs\nFortunately, there are many different types of warning signs you can look for. Services will often have indicators for names containing unusual characters,\nand fake homoglyph-names will often be priced _unusually_ low for the name it pretends to be. ### Service indicators\nIn spite of these characters being invisible, many services will warn or provide some kind of indicator that the name contains _uncommon_ symbols.\n\n<Tabs>\n  <TabItem value=\"OpenSea\" default>\n    <div class=\"container\" style={{'padding': '0'}}>\n      <div class=\"row\">\n        <div class=\"col\">\n          <ImageWindow title=\"OpenSea warning triangle\">\n            <p align='center' style={{'fontSize': '64px'}}>\u26a0\ufe0f</p>\n          </ImageWindow>\n        </div>\n        <div class=\"col\">\n          <p>OpenSea shows a warning triangle next to any name with unicode symbols in them:</p>\n          <p><i>Note: This doesn't mean that the name is fraudulent, simply that it contains unicode symbols. Use a Unicode Analyzer to analyze the name to make sure.</i></p>\n        </div>\n      </div>\n    </div>\n    <BrowserWindow url=\"https://opensea.io\" bg=\"#ffffff\" img=\"/img/faq/homoglyphs-warning-services-opensea.png\"/>\n  </TabItem>\n  <TabItem value=\"Etherscan\">\n    <p>Etherscan shows an <i>asterisk</i>: <b>*</b> before any name that contains any characters other than <b>a-Z0-9</b></p>\n    <p><i>Note: This doesn't mean that the name is fraudulent, simply that it contains unicode symbols. Use a Unicode Analyzer to analyze the name to make sure.</i></p>\n    <BrowserWindow url=\"https://etherscan.io\" bg=\"#ffffff\" img=\"/img/faq/homoglyphs-warning-services-etherscan.png\"/>\n  </TabItem>\n  <TabItem value=\"ENS.Vision\">\n    <div class=\"container\" style={{'padding': '0'}}>\n      <div class=\"row\">\n        <div class=\"col\">\n          <ImageWindow title=\"ENS.Vision warning triangle\">\n            <p align='center' style={{'fontSize': '64px'}}>\u26a0\ufe0f</p>\n          </ImageWindow>\n        </div>\n        <div class=\"col\">\n          <p>ENS.Vision also shows a warning triangle next to any name with unicode symbols in them:</p>\n          <p><i>Note: This doesn't mean that the name is fraudulent, simply that it contains unicode symbols. Use a Unicode Analyzer to analyze the name to make sure.</i></p>\n        </div>\n      </div>\n    </div>\n    <BrowserWindow url=\"https://ens.vision\" bg=\"#131317\" img=\"/img/faq/homoglyphs-warning-services-ensvision.png\"/>\n  </TabItem>\n    <TabItem value=\"X2Y2\">\n    <div class=\"container\" style={{'padding': '0'}}>\n      <div class=\"row\">\n        <div class=\"col\">\n          <ImageWindow title=\"X2Y2 warning triangle\">\n            <p align='center' style={{'fontSize': '64px'}}>\u26a0\ufe0f</p>\n          </ImageWindow>\n        </div>\n        <div class=\"col\">\n          <p>X2Y2 also shows a warning triangle next to any name with unicode symbols in them:</p>\n          <p><i>Note: This doesn't mean that the name is fraudulent, simply that it contains unicode symbols. Use a Unicode Analyzer to analyze the name to make sure.</i></p>\n        </div>\n      </div>\n    </div>\n    <BrowserWindow url=\"https://x2y2.io\" bg=\"#ffffff\" img=\"/img/faq/homoglyphs-warning-services-x2y2.png\"/>\n  </TabItem>\n  <TabItem value=\"LooksRare\">\n    <p>LooksRare does not offer any indicator or warning for names containing unicode symbols.</p>\n    <BrowserWindow bg=\"#121619\" url=\"https://looksrare.org\" img=\"/img/faq/homoglyphs-warning-services-looksrare.png\"/>\n  </TabItem>\n  <TabItem value=\"Rarible\">\n    <p>Rarible does not offer any indicator or warning for names containing unicode symbols.</p>\n    <BrowserWindow bg=\"#121c1f\" url=\"https://rarible.com\" img=\"/img/faq/homoglyphs-warning-services-rarible.png\"/>\n  </TabItem>\n</Tabs>", "mimetype": "text/plain", "start_char_idx": 11264, "end_char_idx": 11530, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2423c392-53a1-42a8-be26-cdde9dee597f": {"__data__": {"id_": "2423c392-53a1-42a8-be26-cdde9dee597f", "embedding": null, "metadata": {"file_path": "docs/faq/normalization/homoglyphs.mdx", "file_name": "homoglyphs.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/normalization/homoglyphs.mdx", "header_path": "/Homoglyphs/Warning signs/", "customer_id": 1, "source_url": "docs/faq/normalization/homoglyphs.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["unusual", "common", "seems", "would", "price", "usually", "prices", "worth", "homoglyphs", "secondary", "catch", "names", "faked"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c9a91eb240b0c2abf37eba616e546a47dc89b646", "node_type": "4", "metadata": {"file_path": "docs/faq/normalization/homoglyphs.mdx", "file_name": "homoglyphs.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/normalization/homoglyphs.mdx"}, "hash": "75ba9018f4b2d2a2ccc39822a48a6a00fcceacbef12c8eb4ad497d339309494b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4bd5d3c1-2c89-4edb-a306-f9522ec9aec9", "node_type": "1", "metadata": {"file_path": "docs/faq/normalization/homoglyphs.mdx", "file_name": "homoglyphs.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/normalization/homoglyphs.mdx", "header_path": "/Homoglyphs/Warning signs/"}, "hash": "c13411535b89e1c51931e002e005222e8be4ab8dfcaa486326534f28132d5fe0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Unusual prices\nThe type of names usually faked with homoglyphs are ones that would catch a _high_ price on secondary markets.\nIt's part of common sense, but it's worth repeating: if it seems too good to be true, it usually is.\n\nIf you see an ENS name on a secondary market that's very attractive but the price is unusually low, don't immediately\nrush to buy it, take some time to copy/paste the name into a `Unicode Analyzer` and _verify_ that the name is what it seems to be. # Normalization\n\n```mdx-code-block\nimport DocCardList from '@theme/DocCardList';\n\n<DocCardList />", "mimetype": "text/plain", "start_char_idx": 14979, "end_char_idx": 15459, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b6eda0ba-2726-40c5-ba34-0638cc985881": {"__data__": {"id_": "b6eda0ba-2726-40c5-ba34-0638cc985881", "embedding": null, "metadata": {"file_path": "docs/faq/normalization/normalization-faq.mdx", "file_name": "normalization-faq.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/normalization/normalization-faq.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/faq/normalization/normalization-faq.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["normalization", "there", "estimates", "depends", "cthulu", "rough", "cannot", "released", "rules"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "031ddfe01306f3a776c1e026c769282f245a5983", "node_type": "4", "metadata": {"file_path": "docs/faq/normalization/normalization-faq.mdx", "file_name": "normalization-faq.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/normalization/normalization-faq.mdx"}, "hash": "3ca5e2ca5a858275f8b49618301c28a2772befa7d325bca5be90629af2798b05", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "edbb3113-10c1-4847-ae69-827913448e22", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "b64ee96280e2cc61a99c0b1bd82d4e4a3c3f99c539277253650027d359e8e6ee", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\nlast_update:\n  author: cthulu\ntags:\n - normalization\n - normalization faq\nkeywords: [normalization, normalization faq]\n--- # Normalization FAQ ## When will the new normalization rules be released?\nThere isn't an ETA on when the new normalization rules will be released and we cannot give rough estimates as it depends on\nfluid circumstances where we may _think_ the rules are finalized, but then a new set of unicode conflicts are discovered which\npushes the time table back.\n\nThe normalization rules will be implemented as soon as it's possible to do so.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 126, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8e5a82da-63d7-45db-97a2-c25e5c737c73": {"__data__": {"id_": "8e5a82da-63d7-45db-97a2-c25e5c737c73", "embedding": null, "metadata": {"file_path": "docs/faq/normalization/normalization-faq.mdx", "file_name": "normalization-faq.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/normalization/normalization-faq.mdx", "header_path": "/Normalization FAQ/", "customer_id": 1, "source_url": "docs/faq/normalization/normalization-faq.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["normalization", "whether", "rules", "implement", "after", "happens", "created", "becomes", "under", "names", "invalid"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "031ddfe01306f3a776c1e026c769282f245a5983", "node_type": "4", "metadata": {"file_path": "docs/faq/normalization/normalization-faq.mdx", "file_name": "normalization-faq.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/normalization/normalization-faq.mdx"}, "hash": "3ca5e2ca5a858275f8b49618301c28a2772befa7d325bca5be90629af2798b05", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6dc9df07-3bbe-4168-bc36-cff59989cf31", "node_type": "1", "metadata": {"file_path": "docs/faq/normalization/normalization-faq.mdx", "file_name": "normalization-faq.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/normalization/normalization-faq.mdx", "header_path": "/Normalization FAQ/"}, "hash": "03efec5067686d0d035f318ca24d3dcd0073616b82da115093dc9e05010be570", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1384e0cb-d848-4030-a2f6-a5d0a8037904", "node_type": "1", "metadata": {"header_path": "/Normalization FAQ/"}, "hash": "b8e35b528783d2550296b39b38d08b6eeb0187dc2f9902d43ccd828e67265635", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## What happens after the name normalization rules are finalized?\nAn `ENSIP` will be created and the `ENS DAO` will vote on whether to implement the rules or not. ## What happens to names made invalid under the new rules?\nENS names that becomes invalid under the new name normalization rules will have their registration fees refunded,\nprovided that the name was registered using the official ENS Manager App.\n\nThis will happen in a batch transaction sent automatically to affected users wallets and not on a case-by-case basis.\nAfter the normalization rules have been released and we can determine which names have been made invalid, there'll be\na proposal in the `ENS DAO` to outline the details for the refund process.\n\n:::caution\nInvalid names registered by intentionally circumventing ENS normalization checks will likely _not_ have their registration fees refunded, such as:\n\n - Names registered by interacting directly with ENS smart contracts.\n - Names registered through a third-party service.\n:::", "mimetype": "text/plain", "start_char_idx": 563, "end_char_idx": 725, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "647a8712-b62b-40db-8c5d-7a7cf36a6981": {"__data__": {"id_": "647a8712-b62b-40db-8c5d-7a7cf36a6981", "embedding": null, "metadata": {"file_path": "docs/faq/normalization/normalization-faq.mdx", "file_name": "normalization-faq.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/normalization/normalization-faq.mdx", "header_path": "/Normalization FAQ/", "customer_id": 1, "source_url": "docs/faq/normalization/normalization-faq.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["limited", "functionality", "invalid", "renewed", "managed", "manage", "tools", "using", "registered", "cannot", "official", "entirely", "names", "manager"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "031ddfe01306f3a776c1e026c769282f245a5983", "node_type": "4", "metadata": {"file_path": "docs/faq/normalization/normalization-faq.mdx", "file_name": "normalization-faq.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/normalization/normalization-faq.mdx"}, "hash": "3ca5e2ca5a858275f8b49618301c28a2772befa7d325bca5be90629af2798b05", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1384e0cb-d848-4030-a2f6-a5d0a8037904", "node_type": "1", "metadata": {"file_path": "docs/faq/normalization/normalization-faq.mdx", "file_name": "normalization-faq.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/normalization/normalization-faq.mdx", "header_path": "/Normalization FAQ/"}, "hash": "c4542c41c5bd3d1386b07a7b5735e1d4fa084a76feef8debb79ee920911ee512", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "442c5bf3-e4c7-4988-925b-eb8088ebf6ed", "node_type": "1", "metadata": {"header_path": "/Normalization FAQ/"}, "hash": "e9b608a8cb2d5c2ed00ca68d1382f33117682b8f0f8b3e5c0474bd527e22d400", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## I registered an invalid name and I can't manage it\n\n:::caution\nInvalid names cannot be managed or renewed using the official `ENS Manager App` and are entirely unsupported.\n:::\n\n:::info\nSome third-party tools have limited functionality to manage them:\n\n - [ENS.Vision](https://ens.vision)\n - [Predomain](https://predomain.eth.limo)\n::: ## Which characters will be allowed in the new normalization rules?\n\n:::caution\nThe name normalization rules have not been finalized, which means that the rules can change due to emerging circumstances.\n:::\n\nYou can test characters and words against the _current draft_ of the name normalization rules by using raffy's resolver tool:\n - [Raffy's Resolver Tool](https://adraffy.github.io/ens-normalize.js/test/resolver.html#ADRaffy.eth)", "mimetype": "text/plain", "start_char_idx": 1572, "end_char_idx": 1910, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "42545cec-c62d-4fdc-a00b-b09667d2c253": {"__data__": {"id_": "42545cec-c62d-4fdc-a00b-b09667d2c253", "embedding": null, "metadata": {"file_path": "docs/faq/secondary_market.mdx", "file_name": "secondary_market.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/secondary_market.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/faq/secondary_market.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["after", "markets", "important", "marketplace", "registration", "purchasing", "cthulu", "period", "secondary", "things", "marketplaces"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1fbc76632e9707a983d814c8b21dc06e6176235f", "node_type": "4", "metadata": {"file_path": "docs/faq/secondary_market.mdx", "file_name": "secondary_market.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/secondary_market.mdx"}, "hash": "c9b00e8f5bd8d934c411d35d94fb9579ba5b816f18c747495a5ebe3ea1bdc697", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "09bb33cf-a34d-4402-8f8a-415300e42a90", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "1c07a49f22f8842cafd0b31d88802a6415e79d433ac28525d4aa48a415ce9263", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\nlast_update:\n  author: cthulu\ntags:\n  - marketplaces\n  - secondary markets\nkeywords: [marketplace, marketplaces, secondary markets]\n--- # Secondary markets\nAfter purchasing an ENS name from a secondary marketplace it's important to keep a few things in mind:\n\n * The registration period is *inherited* from the previous owner, so double-check the expiration date using the [ENS Manager App](https://app.ens.domains).\n  \n * *Only* the `Owner` record is updated with your wallet address, all other records like the `Manager` and `ETH Address` records remain set to the old owner's address until you change it.\n\n:::warning\nWithout updating the ETH Address, sending tokens to a name you've just purchased on a secondary market will most likely lead to a loss of funds. Be sure \nthe ENS name is not still pointing to the previous owner's wallet address.\n:::", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 139, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1487e158-dfba-4c97-8d89-837386f7cc39": {"__data__": {"id_": "1487e158-dfba-4c97-8d89-837386f7cc39", "embedding": null, "metadata": {"file_path": "docs/faq/security.mdx", "file_name": "security.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/security.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/faq/security.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["safeguard", "secure", "security", "theft", "cthulu", "precautions", "wallet", "phishing", "stolen"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a57753c31a5d59b48c7e5d141653599f8086c610", "node_type": "4", "metadata": {"file_path": "docs/faq/security.mdx", "file_name": "security.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/security.mdx"}, "hash": "00eba6e7174e113ef03c0660ccfd797ed13ddc8d6ae017996a652e01dbde07b3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cc82aab8-c447-42bb-a136-da9cf4e45650", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "0d42df450541aac2fa4f0cdcdedd516dee3579eb95a77ba339edd1736bb5db65", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\nlast_update:\n  author: cthulu\ntags:\n  - security\n  - precautions\n  - safeguard\n  - secure\n  - scam\n  - theft\n  - stolen\n  - phishing\nkeywords: [security, wallet security, secure wallet, precautions, security precautions, safeguard wallet, keep wallet safe, secure wallet, wallet compromised, compromised wallet, hacked wallet, wallet hacked, hacked, phished, phishing, scam, scammed, stolen]\n--- # Security\n\nOne of the great things about ENS names is that they're entirely decentralized, meaning that you hold full ownership of the name and, *no one* whether it's ENS or anyone else can take it from you.\n\nBut this also comes with a certain degree of responsibility because ***if you lose your name, we can't recover it for you.***\n\nTherefore it's a good idea to adopt proper security practices to make sure that you don't lose your name to scammers and thieves.\n\n<br/>\n<p align=\"center\">\n\n| Wallet type        | Details                                                                                   |\n| ------------------ | ----------------------------------------------------------------------------------------- |\n| `Cold wallet`      | *A wallet you use to keep funds in, but don't use day-to-day*                             |\n| `Hot wallet`       | *A wallet you use day-to-day and just transfer funds into when needed*                    |\n| `Hardware wallet`  | *A physical hardware device that protects your wallet's private keys*                     |\n| `Multi-Sig wallet` | *A smart contract wallet requiring approval from several wallets to perform transactions* |\n| `Multiple wallets` | *Using multiple wallets of any of the above types*                                        |\n\n</p>\n<br/>", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 399, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "554f7c1b-9cae-4517-9506-46ef15bcfbb4": {"__data__": {"id_": "554f7c1b-9cae-4517-9506-46ef15bcfbb4", "embedding": null, "metadata": {"file_path": "docs/faq/security.mdx", "file_name": "security.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/security.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/faq/security.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["wallet", "interacting", "assets", "wallets", "store", "while", "using", "namely", "unique", "properties", "where", "contracts", "contract", "names", "holding"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a57753c31a5d59b48c7e5d141653599f8086c610", "node_type": "4", "metadata": {"file_path": "docs/faq/security.mdx", "file_name": "security.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/security.mdx"}, "hash": "00eba6e7174e113ef03c0660ccfd797ed13ddc8d6ae017996a652e01dbde07b3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cc82aab8-c447-42bb-a136-da9cf4e45650", "node_type": "1", "metadata": {"file_path": "docs/faq/security.mdx", "file_name": "security.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/security.mdx", "header_path": "/"}, "hash": "471af6e190ad53eae28a5b45eed511a67a4b6a760439f161e618b53bb281652e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e4e5b658-e7b2-47c5-a7e3-0541056a2cd7", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "9fb230df7f1702027d9300323c9d1b150c1d01b9a3724ebc64a2f3cea914ef37", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Cold wallet\nInteracting with contracts can be risky, but necessary. A good idea is to keep a `Cold wallet` where you store assets you want to keep safe while using a `Hot wallet` for your day-to-day contract interactions.\n\nENS names have unique properties that make holding them in cold wallets easy, namely that you can have one wallet be the *owner* `Owner` of it while having another wallet be its record administrator.\n\nBy pointing the `ETH Address` and `Manager` records to your hot wallet, you can use the ENS name from your day-to-day hot wallet just as if it was in that wallet, except if that wallet is compromised, you won't lose your ENS name.\n\nCold wallets don't *directly* protect against interacting with a malicious contract or token approval scams, they only do so indirectly by not using them to interact with them.\n\n<br/>", "mimetype": "text/plain", "start_char_idx": 1713, "end_char_idx": 2554, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e4e5b658-e7b2-47c5-a7e3-0541056a2cd7": {"__data__": {"id_": "e4e5b658-e7b2-47c5-a7e3-0541056a2cd7", "embedding": null, "metadata": {"file_path": "docs/faq/security.mdx", "file_name": "security.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/security.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/faq/security.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["transaction", "private", "security", "improves", "keeping", "external", "device", "hardware", "approve", "wallet", "phone", "connect"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a57753c31a5d59b48c7e5d141653599f8086c610", "node_type": "4", "metadata": {"file_path": "docs/faq/security.mdx", "file_name": "security.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/security.mdx"}, "hash": "00eba6e7174e113ef03c0660ccfd797ed13ddc8d6ae017996a652e01dbde07b3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "554f7c1b-9cae-4517-9506-46ef15bcfbb4", "node_type": "1", "metadata": {"file_path": "docs/faq/security.mdx", "file_name": "security.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/security.mdx", "header_path": "/"}, "hash": "c0781f7f45d239eab25a4955f5664ee2d38fc97531568342dc2459ff566cc45d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5aa18332-5a68-4038-a09a-6c81d3912971", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "0bcee71c5218f6ceecef074e0bfae522da8278b0e77f96a8f98a8b74f1f239cf", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Hardware wallet\nA `Hardware wallet` is a device that improves your wallet security by keeping your private keys off your phone and computer. The keys are kept on the external device itself, and for each transaction you make you'll have to connect and approve the transaction on the device.\n\nThis gives *added protection*[^note1] against many *(but not all)* types of scams and security issues:\n* [x] Viruses[^note2]\n* [x] Fake metamask login websites\n* [x] Fake wallets\n* [ ] Token approval scams / interacting with malicious contracts\n* [ ] Compromised seed phrase\n* [ ] Physical access[^note3]\n\n[^note1]: Added protection does not mean *total protection* and there are caveats listed below.\n\n[^note2]: It's possible for a virus to target the hardware device software itself, even though it's more difficult and less common. \n\n[^note3]: Hardware wallets are not always *physically* secure, meaning that someone might be able to compromise them with physical access to the hardware device.\n\n<br/>", "mimetype": "text/plain", "start_char_idx": 2556, "end_char_idx": 3554, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5aa18332-5a68-4038-a09a-6c81d3912971": {"__data__": {"id_": "5aa18332-5a68-4038-a09a-6c81d3912971", "embedding": null, "metadata": {"file_path": "docs/faq/security.mdx", "file_name": "security.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/security.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/faq/security.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["transactions", "performed", "thereby", "different", "security", "wallet", "allowing", "smart", "provides", "distributing", "several", "approved", "contract"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a57753c31a5d59b48c7e5d141653599f8086c610", "node_type": "4", "metadata": {"file_path": "docs/faq/security.mdx", "file_name": "security.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/security.mdx"}, "hash": "00eba6e7174e113ef03c0660ccfd797ed13ddc8d6ae017996a652e01dbde07b3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e4e5b658-e7b2-47c5-a7e3-0541056a2cd7", "node_type": "1", "metadata": {"file_path": "docs/faq/security.mdx", "file_name": "security.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/security.mdx", "header_path": "/"}, "hash": "55ffd524986ebb5099642026c58a743d5695bbe2c04344dfc33fde82278a5af8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c0f98355-fd7b-4d5f-a070-2d51263a8b2d", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "26b3083d26dcc29faef35a1204473493c66f7bc033ad7102f4412b7d9e3b9bda", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Multi-Sig wallet\nA `Multi-Sig wallet` is a smart contract wallet that provides security by only allowing transactions to be performed if they're approved by several different wallets, thereby distributing the security responsibility between different keys or even different people.\n\n:::tip\n<Link to=\"https://gnosis-safe.io\"><b>Gnosis Safe</b></Link> provides a very popular multi-sig wallet.\n:::\n\n<br/> # Common scams ## The fake NFT mint\nOne of the most common scams I come across is the Fake NFT mint website, a site that's set up to look like an NFT project where you connect your wallet, press a button to mint, and approve a transaction to \"get your NFT\".\n\n*Except,* what the website does is spawn a transaction that either directly transfers one of your NFT's out or adds a `Token Approval` which gives another wallet full access to one of your NFT collections.\n\n:::caution\n*Always* review the transaction that appears in your wallet and make sure that it does what you expect it to.\n:::", "mimetype": "text/plain", "start_char_idx": 3556, "end_char_idx": 3960, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "22632927-b496-4e37-ad2f-871d87f73693": {"__data__": {"id_": "22632927-b496-4e37-ad2f-871d87f73693", "embedding": null, "metadata": {"file_path": "docs/faq/security.mdx", "file_name": "security.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/security.mdx", "header_path": "/Common scams/", "customer_id": 1, "source_url": "docs/faq/security.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["phrase", "differentiates", "designed", "sometimes", "website", "instead", "extremely", "login", "password", "never", "metamask", "screen"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a57753c31a5d59b48c7e5d141653599f8086c610", "node_type": "4", "metadata": {"file_path": "docs/faq/security.mdx", "file_name": "security.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/security.mdx"}, "hash": "00eba6e7174e113ef03c0660ccfd797ed13ddc8d6ae017996a652e01dbde07b3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "46602994-6f20-43b2-8ae5-71ee64a8fb1e", "node_type": "1", "metadata": {"file_path": "docs/faq/security.mdx", "file_name": "security.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/security.mdx", "header_path": "/Common scams/"}, "hash": "0a95b23f9319b20f49b936f322db52e476cb7e9ea83f7ee02b891a0e82698fd9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9a02166b-5ac6-414c-8cd0-c672fac8ee17", "node_type": "1", "metadata": {"header_path": "/Common scams/"}, "hash": "ba64b1853717951fbfb651b38c6e7a04c70f69ea3119770f61d3592612461798", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## The fake Metamask login\nA website designed to look like Metamask's login screen can sometimes be extremely convincing. What differentiates them from the metamask password screen is that it will ask you for your `seed phrase` instead of your password.\n\n:::warning\nNever give out your seed phrase to <i>anyone</i>, <i>no one</i> from ENS will ask for it.\n::: ## The fake airdrop claim\nThere is an abundance of fake airdrop claim pages, especially when a real airdrop is going on. During the real ENS airdrop, we dealt with at least one fake airdrop claim website per week claiming to be from us.\n\n:::caution\nThere is no current airdrop or future airdrop planned, if a website claims to have an ENS airdrop it's a scam.\n:::", "mimetype": "text/plain", "start_char_idx": 4554, "end_char_idx": 4913, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b112cea0-72da-4a99-bd96-ead723ffa09a": {"__data__": {"id_": "b112cea0-72da-4a99-bd96-ead723ffa09a", "embedding": null, "metadata": {"file_path": "docs/faq/security.mdx", "file_name": "security.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/security.mdx", "header_path": "/Common scams/", "customer_id": 1, "source_url": "docs/faq/security.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["tokens", "sometimes", "services", "funds", "token", "interact", "never", "value", "exchange", "wallet", "steal", "strange"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a57753c31a5d59b48c7e5d141653599f8086c610", "node_type": "4", "metadata": {"file_path": "docs/faq/security.mdx", "file_name": "security.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/security.mdx"}, "hash": "00eba6e7174e113ef03c0660ccfd797ed13ddc8d6ae017996a652e01dbde07b3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9a02166b-5ac6-414c-8cd0-c672fac8ee17", "node_type": "1", "metadata": {"file_path": "docs/faq/security.mdx", "file_name": "security.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/security.mdx", "header_path": "/Common scams/"}, "hash": "49f68dca80cf08f294a17af48ae97fbfb75e801d976cad68dfe7cb553cb9f21e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## The fake token scam\nA strange token sent to your wallet out of the blue, sometimes with a value that will steal funds when you go to exchange it.\n\n:::warning\nNever interact with strange tokens sent to your wallet out of the blue.\n::: # Third-party services\n\n```mdx-code-block\nimport DocCardList from '@theme/DocCardList';\n\n<DocCardList /> ---\nlast_update:\n  author: cthulu\ntags:\n - twitter\n - services\n - social\n - social media\nkeywords: [twitter, services, social, social media]\n--- # Twitter ## Frequently Asked Questions", "mimetype": "text/plain", "start_char_idx": 5280, "end_char_idx": 5516, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7d9c734b-2066-45a9-9b55-922ee932a1ab": {"__data__": {"id_": "7d9c734b-2066-45a9-9b55-922ee932a1ab", "embedding": null, "metadata": {"file_path": "docs/faq/services/twitter.mdx", "file_name": "twitter.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/services/twitter.mdx", "header_path": "/Twitter/Frequently Asked Questions/", "customer_id": 1, "source_url": "docs/faq/services/twitter.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["selectable", "simply", "profile", "integrated", "twitter", "recently", "support", "username", "rolled", "names"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8c44f027ea1b419105b11d8e2288e92c1edcef82", "node_type": "4", "metadata": {"file_path": "docs/faq/services/twitter.mdx", "file_name": "twitter.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/services/twitter.mdx"}, "hash": "577b2ee41247f56c54ce0ef5a50445460dcb5460fe57ad73610b824d40ba47f8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5389c57f-5c84-4dc9-ad9c-633624311825", "node_type": "1", "metadata": {"file_path": "docs/faq/services/twitter.mdx", "file_name": "twitter.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/services/twitter.mdx", "header_path": "/Twitter/"}, "hash": "4b57bcd766b4ecd17ee8c8f59443314290d45e595374f2682ace3c13ea95e4fe", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "20cd9b8d-06d3-4986-b6cc-3af90c65d48e", "node_type": "1", "metadata": {"header_path": "/Twitter/Frequently Asked Questions/"}, "hash": "1f7e0b45e7e549676035186e695a79b86f2779702bffe2173b0b3030d5b26a50", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### How do I set my ENS name as my username on Twitter?\nTwitter hasn't yet integrated support for ENS names, so you'd simply type them in as your profile name.\n\n:::info how-to\nFor help on how to set the Twitter username, see\n - [**How-To:** Set Twitter Name](/howto/set-twitter-name)\n::: ### Why are only some ENS names selectable as NFT Profile Pictures?\n\n<div className=\"container\" style={{'padding':'0px'}}>\n<div className=\"row\">\n<div className=\"col\">\n<ImageWindow title=\"Old Avatar\">\n<p align=\"center\">\n<Image img=\"/img/faq/services/twitter-oldavatar-1.png\" style={{'borderRadius':'8px'}}/>\n</p>\n</ImageWindow>\n</div>\n<div className=\"col\">\n\nTwitter Blue recently rolled out support for NFT avatar's in their iOS apps.\nThis feature is in a _beta phase_ and currently only supports NFT's linking to `.png` and `.jpg` `.jpeg` images.\n    \nIn the old metadata service operated by OpenSea `.png` images were rendered for ENS names. These are the names you see in various colours.\n\n</div>\n</div>\n</div>\n\n<div className=\"container\" style={{'padding':'0px'}}>\n<div className=\"row\">\n<div className=\"col\">\n<ImageWindow title=\"New Avatar\">\n<p align=\"center\">\n<Image img=\"/img/faq/services/twitter-newavatar-1.svg\" style={{'borderRadius':'8px'}}/>\n</p>\n</ImageWindow>\n</div>\n<div className=\"col\">\n\nIn the new metadata service all names now show up with a blue background with a more modern design.\n\nIn ENS new metadata service `.svg` (vector) images are rendered for previews with a rasterization end-point for `.png` images.\n\nSince Twitter grabs their NFT metadata from OpenSea instead of from ENS Metadata service, the rasterization end-point isn't used, so only\nENS names that still has cached metadata from _OpenSea's Metadata Service_ are selectable.\n\n</div>\n</div>\n</div>", "mimetype": "text/plain", "start_char_idx": 188, "end_char_idx": 475, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e9bd19e8-d335-403a-9f63-c08318293ad1": {"__data__": {"id_": "e9bd19e8-d335-403a-9f63-c08318293ad1", "embedding": null, "metadata": {"file_path": "docs/faq/v2-manager.mdx", "file_name": "v2-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/v2-manager.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/faq/v2-manager.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ethereum", "profile", "addresses", "point", "storing", "twitter", "avatar", "store", "decentralized", "cthulu", "blockchains", "information", "manager"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a8b0d88d5b36c608bd17ba94c3d8725687598621", "node_type": "4", "metadata": {"file_path": "docs/faq/v2-manager.mdx", "file_name": "v2-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/v2-manager.mdx"}, "hash": "a3f050b24cc6983b171dd7e127045be1117e468ed989023ff894cb4796620b1d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f13c2d90-d023-4c28-afff-5cd93aa8977a", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "2bc43aaa47e01ab0eb1f1b067872be2eb6a8cd8ea2c6948c74f2474a867af765", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\nlast_update:\n  author: cthulu\ntags:\n  - old faq\nkeywords: [old faq]\n--- # (V2) Manager App/Site FAQ ## Is ENS only for storing an Ethereum address?\nNo, you can store the addresses of over 100 blockchains, decentralized website, profile information such as an avatar and Twitter handle, and more.\n\n - Store addresses of over 100 blockchains\n - Point to a decentralized website\n - Store profile information, avatar and links to social media profiles ## Can I point an ENS name to my regular website?\nThough ENS can technically store anything, there aren't many third-party tools and applications which resolve IP addresses attached to ENS.\n\nInstead, we suggest hosting your static html/css/images on IPFS and put the hash in your ENS Name's [Content record](/core/records/content-hash).\n\nThen it can be resolved by ENS-aware browsers:\n - Brave\n - Opera\n\nBrowser extensions:\nMetamask\n\nOr in any browser by appending `.link` or `.limo` to the end of the ENS name. For example: `snowowl.eth.limo`", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 75, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2fac73f2-6449-464c-981f-b83b2f4b8a12": {"__data__": {"id_": "2fac73f2-6449-464c-981f-b83b2f4b8a12", "embedding": null, "metadata": {"file_path": "docs/faq/v2-manager.mdx", "file_name": "v2-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/v2-manager.mdx", "header_path": "/(V2) Manager App/Site FAQ/", "customer_id": 1, "source_url": "docs/faq/v2-manager.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["website", "limit", "address", "write", "length", "redirect", "there", "maximum", "containing", "could", "upload", "simple"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a8b0d88d5b36c608bd17ba94c3d8725687598621", "node_type": "4", "metadata": {"file_path": "docs/faq/v2-manager.mdx", "file_name": "v2-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/v2-manager.mdx"}, "hash": "a3f050b24cc6983b171dd7e127045be1117e468ed989023ff894cb4796620b1d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "28ee9e38-0baa-4831-ab79-2314b05a0573", "node_type": "1", "metadata": {"file_path": "docs/faq/v2-manager.mdx", "file_name": "v2-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/v2-manager.mdx", "header_path": "/(V2) Manager App/Site FAQ/"}, "hash": "4b7fd1ed4892e83958abac7b5e8fc5d6efa1e4c653395d367a7dd69dd6fd6654", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6a8ebb7f-652e-462e-b60b-be7147763370", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "add7fe753286b30974f415c0f6dc87b108757681789738095c2aaf3d2d7541bd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Redirect to a Web2 page\nIf you want to redirect your ENS name to a web2 website you could write a simple html-file containing a redirect to your web2 website address and upload it to IPFS. Then you can put the IPFS CID of the html file your ENS Name's [Content record](/core/records/content-hash) # What is the maximum length of a name I can register?\nThere is no limit on the name length. Technically speaking the transaction would have to fit within an Ethereum block, but it would take *a lot* to reach that size.", "mimetype": "text/plain", "start_char_idx": 1000, "end_char_idx": 1299, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1512107f-204a-479b-92a6-da9e93156742": {"__data__": {"id_": "1512107f-204a-479b-92a6-da9e93156742", "embedding": null, "metadata": {"file_path": "docs/faq/v2-manager.mdx", "file_name": "v2-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/v2-manager.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/faq/v2-manager.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["other", "ethereum", "ownership", "creating", "emoji", "provided", "pointing", "prove", "supports", "register", "wallet", "under", "names"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a8b0d88d5b36c608bd17ba94c3d8725687598621", "node_type": "4", "metadata": {"file_path": "docs/faq/v2-manager.mdx", "file_name": "v2-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/v2-manager.mdx"}, "hash": "a3f050b24cc6983b171dd7e127045be1117e468ed989023ff894cb4796620b1d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6a8ebb7f-652e-462e-b60b-be7147763370", "node_type": "1", "metadata": {"file_path": "docs/faq/v2-manager.mdx", "file_name": "v2-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/v2-manager.mdx", "header_path": "/"}, "hash": "6199159c4f79fa95d0c2ae00d43864591d478167239421fedad63058dde9361b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "77749e9c-54d0-461c-8529-d87459376c0c", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "d2e1a982a7006251ecfe334e39f3e548d787c9eb44e163a72e8c95ccb2ac4760", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Can I register names other than .eth?\nYes, you can *link* any DNS name with ENS provided it supports `DNSSEC and you can prove ownership of it by creating a `TXT record` under it pointing to your Ethereum wallet address. # Can I register a name with emojis?\nYes.[^emoji1]\n[^emoji1]: Emoji from Emoji 14.0 are not yet supported, but will be once the new name normalization rules are implemented. # Registration FAQ ## At Step 1, the transaction was slow so I speeded it up\nOur app cannot currently detect that you sped up the transaction. Please refresh the page and start from step 1 again.", "mimetype": "text/plain", "start_char_idx": 1522, "end_char_idx": 1744, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6a95e527-81b6-4ace-b28d-188312a311d8": {"__data__": {"id_": "6a95e527-81b6-4ace-b28d-188312a311d8", "embedding": null, "metadata": {"file_path": "docs/faq/v2-manager.mdx", "file_name": "v2-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/v2-manager.mdx", "header_path": "/Registration FAQ/", "customer_id": 1, "source_url": "docs/faq/v2-manager.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ethereum", "start", "please", "contact", "transaction", "after", "counter", "waits", "minute", "blockchain", "reset", "stuck", "leave", "moving", "continues"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a8b0d88d5b36c608bd17ba94c3d8725687598621", "node_type": "4", "metadata": {"file_path": "docs/faq/v2-manager.mdx", "file_name": "v2-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/v2-manager.mdx"}, "hash": "a3f050b24cc6983b171dd7e127045be1117e468ed989023ff894cb4796620b1d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "def2ef44-d119-4d3a-80d5-7904706d5067", "node_type": "1", "metadata": {"file_path": "docs/faq/v2-manager.mdx", "file_name": "v2-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/v2-manager.mdx", "header_path": "/Registration FAQ/"}, "hash": "a4e665e7ea2fc24939dd130b836bdb8e0fbc0ffe5ebf659bd752d9f18819bfcd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3bbf9e0b-fa7c-4046-8735-a7c741bd460f", "node_type": "1", "metadata": {"header_path": "/Registration FAQ/"}, "hash": "c1526ba0532acaa40e7fc4fee6e48901e7c5d551f26cee91fd0b8c412ee7effa", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## I am stuck at Step 2\nAt times, the counter waits for up to a minute at the end of step 2 to make sure that the Ethereum blockchain has progressed. If this continues for more than 5 min after moving to step 2, please contact us on Discord.\nNote that if you leave it at step 2 for more than 7 days, it gets reset and you have to start from step 1 again. ## My transaction at Step 3 failed\nThis happens occasionally when the USD price changes and you haven't registered with enough ETH. Please try again from step 3.\nPlease also be noted that the registration step will expire if you don't complete within 24 hrs and you have to start from step 1 again.", "mimetype": "text/plain", "start_char_idx": 2119, "end_char_idx": 2473, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ea83bedf-4e23-48ef-90ac-a8d8fee9199d": {"__data__": {"id_": "ea83bedf-4e23-48ef-90ac-a8d8fee9199d", "embedding": null, "metadata": {"file_path": "docs/faq/v2-manager.mdx", "file_name": "v2-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/v2-manager.mdx", "header_path": "/Registration FAQ/", "customer_id": 1, "source_url": "docs/faq/v2-manager.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["occasionally", "heavy", "metadata", "wallets", "registered", "happens", "opensea", "names", "wallet", "under", "fetch", "cannot", "section"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a8b0d88d5b36c608bd17ba94c3d8725687598621", "node_type": "4", "metadata": {"file_path": "docs/faq/v2-manager.mdx", "file_name": "v2-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/v2-manager.mdx"}, "hash": "a3f050b24cc6983b171dd7e127045be1117e468ed989023ff894cb4796620b1d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3bbf9e0b-fa7c-4046-8735-a7c741bd460f", "node_type": "1", "metadata": {"file_path": "docs/faq/v2-manager.mdx", "file_name": "v2-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/v2-manager.mdx", "header_path": "/Registration FAQ/"}, "hash": "da6b4c09ac051f31d4f95820b95f211db303b1bcf09c51c654811b3e0b2dcf1f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "31c9348e-b245-4e60-8fcf-07ef3b249972", "node_type": "1", "metadata": {"header_path": "/Registration FAQ/"}, "hash": "07f58afb9f19c31e2332423fe11acb70539aac09d1ff84fb6f3eb005fe43f21c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## I cannot see the names I registered on OpenSea nor on my wallet\nThis occasionally happens when OpenSea is under a heavy load. You may also not find your name under the NFT section of your wallet, as many wallets fetch metadata from OpenSea.\nAs long as you can see your registered name under \"My Account\" on our site or your ETH address under the name section, your name is registered successfully.\n\n:::info Support FAQ\nFor more information on how to resolve issues with OpenSea, see:\n - <Link to=\"/faq/marketplaces/opensea\"><b>Support FAQ: </b>OpenSea</Link>\n:::", "mimetype": "text/plain", "start_char_idx": 2775, "end_char_idx": 3340, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "31c9348e-b245-4e60-8fcf-07ef3b249972": {"__data__": {"id_": "31c9348e-b245-4e60-8fcf-07ef3b249972", "embedding": null, "metadata": {"file_path": "docs/faq/v2-manager.mdx", "file_name": "v2-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/v2-manager.mdx", "header_path": "/Registration FAQ/", "customer_id": 1, "source_url": "docs/faq/v2-manager.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["transaction", "machines", "browser", "different", "switch", "because", "close", "refresh", "devices", "however", "cannot"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a8b0d88d5b36c608bd17ba94c3d8725687598621", "node_type": "4", "metadata": {"file_path": "docs/faq/v2-manager.mdx", "file_name": "v2-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/v2-manager.mdx"}, "hash": "a3f050b24cc6983b171dd7e127045be1117e468ed989023ff894cb4796620b1d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ea83bedf-4e23-48ef-90ac-a8d8fee9199d", "node_type": "1", "metadata": {"file_path": "docs/faq/v2-manager.mdx", "file_name": "v2-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/v2-manager.mdx", "header_path": "/Registration FAQ/"}, "hash": "d4bf843043696cda5fe40d322b525cc044b9e0983af458943addf1a668145be4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f7a238aa-986e-4d9b-b462-c96989d28831", "node_type": "1", "metadata": {"header_path": "/Registration FAQ/"}, "hash": "617eb5455b21bb384fb5c5271585722762dfa60b1e4b8836b49c79f4b77b26af", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Is it safe to refresh the page, close the browser, or switch to different browser/machine?\n\nIt is safe to refresh the page or close the browser once step 1 transaction is complete. However you cannot switch to different devices or machines because it needs a locally stored \u201csecret\u201d which will be used at step 3. Please also do not delete browser history during the registration.\nAfter you register ## What is the difference between the Registrant and Controller?\n\nIf your Ethereum address is set as the Controller you can change the resolver and add/edit records. Some dapps (eg: Fleek, OpenSea) set themselves as the Controller so they can update records on your behalf.\nThe Registrant only exists on \".eth\" names and it allows you to change the Controller. If you transfer the Registrant to an address you don't own, you lose the ownership of the name.", "mimetype": "text/plain", "start_char_idx": 3342, "end_char_idx": 3743, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "32b0ff2b-179a-4d0f-b13e-04606173c873": {"__data__": {"id_": "32b0ff2b-179a-4d0f-b13e-04606173c873", "embedding": null, "metadata": {"file_path": "docs/faq/v2-manager.mdx", "file_name": "v2-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/v2-manager.mdx", "header_path": "/Registration FAQ/", "customer_id": 1, "source_url": "docs/faq/v2-manager.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["holds", "record", "smart", "public", "default", "standard", "resolver", "custom", "managed", "contract", "names"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a8b0d88d5b36c608bd17ba94c3d8725687598621", "node_type": "4", "metadata": {"file_path": "docs/faq/v2-manager.mdx", "file_name": "v2-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/v2-manager.mdx"}, "hash": "a3f050b24cc6983b171dd7e127045be1117e468ed989023ff894cb4796620b1d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f7a238aa-986e-4d9b-b462-c96989d28831", "node_type": "1", "metadata": {"file_path": "docs/faq/v2-manager.mdx", "file_name": "v2-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/v2-manager.mdx", "header_path": "/Registration FAQ/"}, "hash": "f6e2c09d4687399898ed41fca2a853a9a79531aa1f875ab9ebfac5e094ab4287", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6fd9109a-1064-44db-9a4d-322b8dc61f06", "node_type": "1", "metadata": {"header_path": "/Registration FAQ/"}, "hash": "1ada08cf270172d50416cd3c87d8f0cff46d55bb1055cc47c0213b21195b742f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## What is a Resolver?\n\nA Resolver is a smart contract that holds records. Names are set by default to the Public Resolver managed by the ENS team and have all the standard ENS record types. You can set your Resolver to a custom resolver contract if you,d like.\nWhat is a Primary ENS Name record?\n\nA Primary ENS Name record (formerly Reverse Record) makes your Ethereum address point to an ENS name. This allows dapps to find and display your ENS name when you connect to them with your Ethereum account. This can only be set by you so it is not set automatically upon registration.\nTo set the Primary ENS Name record, please click \"My account\", and select \"Primary ENS Name\".\nHow do I unregister my name?\n\nIf you click the \"trash bin\" icon on the address record, it will unset your address so that people can no longer look up your address with the name. You can also unset ownership of subdomains in this way, but you cannot do so on \".eth\" addresses. Because \".eth\" names are ERC721-compliant NFTs, you cannot transfer them to an empty address (0x00000...). You can transfer it to a burn address (eg: 0x00001), but that does not erase the fact that you used to own the name. Also, the name will not become available for registration again until the registration period and grace period runs out.\nHow do I transfer my name?\n\nFor a \".eth\" name, transfer both the Registrant and the Controller to the new Ethereum account. Since \".eth\" names are ERC721 compliant NFTs, you can change the Registrant by simply transferring the NFT from any NFT compliant wallet/marketplace as well.\nNote that transferring the ownership (aka the Registrant) of the name does not change the controller nor records, so the recipient may need to update them once received. If the recipient is not experienced or you prefer your address not to be associated to the transferring names, it may be a good idea for you to set the ETH Address record to their Ethereum address, set the controller, then transfer the name.\nFor subdomains, there are no registrants unless the subdomain is customised to be ERC721 compliant. Simply set the controller to the new address (after setting the record to the new address).", "mimetype": "text/plain", "start_char_idx": 4204, "end_char_idx": 6388, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6fd9109a-1064-44db-9a4d-322b8dc61f06": {"__data__": {"id_": "6fd9109a-1064-44db-9a4d-322b8dc61f06", "embedding": null, "metadata": {"file_path": "docs/faq/v2-manager.mdx", "file_name": "v2-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/v2-manager.mdx", "header_path": "/Registration FAQ/", "customer_id": 1, "source_url": "docs/faq/v2-manager.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["stored", "jumble", "hashed", "access", "using", "search", "names", "possible", "format", "shows", "manage", "subdomains", "still", "decode", "shown"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a8b0d88d5b36c608bd17ba94c3d8725687598621", "node_type": "4", "metadata": {"file_path": "docs/faq/v2-manager.mdx", "file_name": "v2-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/v2-manager.mdx"}, "hash": "a3f050b24cc6983b171dd7e127045be1117e468ed989023ff894cb4796620b1d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "32b0ff2b-179a-4d0f-b13e-04606173c873", "node_type": "1", "metadata": {"file_path": "docs/faq/v2-manager.mdx", "file_name": "v2-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/v2-manager.mdx", "header_path": "/Registration FAQ/"}, "hash": "f0ac84e5c852883e80d343afd22079da848b238d6b70e0dcf5fd226acb4bdc46", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cef9bee1-7cd8-4e40-a298-0cb228cef996", "node_type": "1", "metadata": {"header_path": "/Registration FAQ/"}, "hash": "9f33760904f2389cb04a20720d4e6656f7d4a0747979700f5f1edd0817701139", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Why are some of my subdomains shown as a jumble of characters?\n\nENS names are stored as a hash on-chain so we have to decode the name using a list of possible names, and it shows in the hashed format if we don't have it on our list. You can still access and manage the name if you search for the name directly in the search bar.\nHow do I find the labelhash/namehash of a name?\n\nPlease refer to our developer documentation page.\nWhen you extend your registration ## How do I receive an extension reminder?\n\nClick the \"Remind me\" button on the name's page or your address page so that you can set a calendar reminder or email reminder. Note that you have to set calendar reminders per name, whereas you only need to set email reminders per the address of the owner. Also note that you can register a name for multiple years, removing the need to extend each year.\nWhat happens if I forget to extend the registration of a name?\n\nAfter your name expires, there is a 90 day grace period in which the owner can't edit the records but can still re-register the name. After the grace period, the name is released for registration by anyone with a temporary premium which decreases over a 21 days period. The released name continues to resolve your ETH address until the new owner overwrites it.\nWhere can I see the list of names to be released\n\nYou can see the list in the \"ENS Names to be released\" section of the Dune Analytics dashboard.", "mimetype": "text/plain", "start_char_idx": 6391, "end_char_idx": 6855, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "588e93ae-7779-498b-a2d6-5ea826be7438": {"__data__": {"id_": "588e93ae-7779-498b-a2d6-5ea826be7438", "embedding": null, "metadata": {"file_path": "docs/faq/v2-manager.mdx", "file_name": "v2-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/v2-manager.mdx", "header_path": "/Registration FAQ/", "customer_id": 1, "source_url": "docs/faq/v2-manager.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["though", "ethereum", "extend", "access", "registration", "doing", "owner", "still", "change", "account"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a8b0d88d5b36c608bd17ba94c3d8725687598621", "node_type": "4", "metadata": {"file_path": "docs/faq/v2-manager.mdx", "file_name": "v2-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/v2-manager.mdx"}, "hash": "a3f050b24cc6983b171dd7e127045be1117e468ed989023ff894cb4796620b1d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cef9bee1-7cd8-4e40-a298-0cb228cef996", "node_type": "1", "metadata": {"file_path": "docs/faq/v2-manager.mdx", "file_name": "v2-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/v2-manager.mdx", "header_path": "/Registration FAQ/"}, "hash": "e5941af2da6d251a79a1f44c6011ede8894d531f5ef6243dcb2c842033b11e62", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5fce152d-e8ab-4345-8fb0-7852bace2e1f", "node_type": "1", "metadata": {"header_path": "/Registration FAQ/"}, "hash": "cc2a311ac7082521ea0907fdd55050cf3168a4db6840c454721d9f3455b38bac", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## I lost access to the Ethereum account that owns a name I registered. Can I still extend its registration period?\n\nAny Ethereum account can pay to extend the registration of any ENS name, though doing so from an account that's not the owner will not change ownership of the name. Just go to the name's page and click \"Extend\". ## I registered names before 2019 May. Can I have my deposit back?\n\nYes, you can get your deposit back from reclaim.ens.domains whether you extended the registration of the name or not.\n\nPlease remember that the amount you will receive is the amount of the second-highest bidder (unless you were the only bidder). For example, if you bid 1 ETH and the second highest bidder bid 0.1 ETH, you deposited 0.1 ETH and you have already received the remaining (0.9 ETH) when you finalised the auction. Therefore you can now only reclaim 0.1 ETH back. Please read the initial guide back in 2017 for more detail.", "mimetype": "text/plain", "start_char_idx": 7830, "end_char_idx": 8158, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9ab24707-8f1b-424f-8815-ce9459e85c38": {"__data__": {"id_": "9ab24707-8f1b-424f-8815-ce9459e85c38", "embedding": null, "metadata": {"file_path": "docs/faq/wallets/coinbase_wallet.mdx", "file_name": "coinbase_wallet.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/wallets/coinbase_wallet.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/faq/wallets/coinbase_wallet.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["coinbase", "zadok7", "mobile", "phone", "wallet"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7505abbee31c559f0025f65372704047017212c8", "node_type": "4", "metadata": {"file_path": "docs/faq/wallets/coinbase_wallet.mdx", "file_name": "coinbase_wallet.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/wallets/coinbase_wallet.mdx"}, "hash": "a29fd61774a3d1028fa8fecab72622a814da79b78930aa3467eab144da0878e1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c318c889-84d0-40b6-b4e2-cf76eaf1c3fa", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "e96e657c228ef6890a3ae565e2abd9f874a940e210f534f39b88c003cc4a7b55", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\nhide_title: true\ntitle: Coinbase wallet\nlast_update:\n  author: zadok7\ntags:\n  - coinbase\n  - coinbase wallet\n  - mobile wallet\n  - phone wallet\nkeywords: [coinbase, coinbase wallet, mobile wallet, phone wallet]\n---\n\n<br/>\n<div class=\"container\" style={{'padding':'0px'}}>\n<div class=\"row\">\n<div class=\"col\"> # Coinbase wallet\n\nCoinbase Wallet is a self-custody wallet, which allows users to manage their own private keys to the wallet and any coins/tokens stored in it.  \n    \n:::info\nThis standalone wallet app does not require a Coinbase account and is not to be confused with the Coinbase Exchange app.\n:::    \n\n</div>\n<div class=\"col\">\n<PhoneWindow img=\"/img/coinbase-wallet-app.jpg\"/>\n</div>\n</div>\n</div>\n\n---\n\n<br/>\n<div class=\"container\">\n<div class=\"row\">\n<div class=\"col\">\n<PhoneWindow img=\"/img/coinbase-wallet-1.jpg\"/>\n</div>\n<div class=\"col\">", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 311, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "10502fea-fc82-4256-bd6d-15b0d5ff9b60": {"__data__": {"id_": "10502fea-fc82-4256-bd6d-15b0d5ff9b60", "embedding": null, "metadata": {"file_path": "docs/faq/wallets/coinbase_wallet.mdx", "file_name": "coinbase_wallet.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/wallets/coinbase_wallet.mdx", "header_path": "/Coinbase wallet/", "customer_id": 1, "source_url": "docs/faq/wallets/coinbase_wallet.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["coinbase", "built", "browser", "would", "visit", "within", "connecting", "manage", "wallet", "register", "names", "manager"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7505abbee31c559f0025f65372704047017212c8", "node_type": "4", "metadata": {"file_path": "docs/faq/wallets/coinbase_wallet.mdx", "file_name": "coinbase_wallet.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/wallets/coinbase_wallet.mdx"}, "hash": "a29fd61774a3d1028fa8fecab72622a814da79b78930aa3467eab144da0878e1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c318c889-84d0-40b6-b4e2-cf76eaf1c3fa", "node_type": "1", "metadata": {"file_path": "docs/faq/wallets/coinbase_wallet.mdx", "file_name": "coinbase_wallet.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/wallets/coinbase_wallet.mdx", "header_path": "/"}, "hash": "01c1e3e552893900c6b4ac82e952d4afd53f416f4af0ca0399a71d1d853fbf63", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5fb96297-e08b-429c-bdfc-0293dfa774d0", "node_type": "1", "metadata": {"header_path": "/Coinbase wallet/"}, "hash": "f078b4ad6e667e02d926263ab58a5a71ca4e7172ce6ee7f4044a3b640a4eaca2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Connecting to the ENS Manager App\n\n<p>You can use the built in dApp browser in Coinbase Wallet to visit the <Link to=\"https://app.ens.domains\"><b>ENS Manager App</b></Link></p>\n</div>\n</div>\n</div>\n\nYou can register ENS names and manage them within the Coinbase Wallet app just as you would a desktop.\nTo instead use a desktop browser, visit app.ens.domains, and click connect. Select Coinbase Wallet, then scan the QR code on using your Coinbase Wallet app.\n\n<BrowserWindow url=\"app.ens.domains\">\n  <Image img=\"/img/coinbase-wallet-2.png\"/>\n</BrowserWindow>", "mimetype": "text/plain", "start_char_idx": 862, "end_char_idx": 1423, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5fb96297-e08b-429c-bdfc-0293dfa774d0": {"__data__": {"id_": "5fb96297-e08b-429c-bdfc-0293dfa774d0", "embedding": null, "metadata": {"file_path": "docs/faq/wallets/coinbase_wallet.mdx", "file_name": "coinbase_wallet.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/wallets/coinbase_wallet.mdx", "header_path": "/Coinbase wallet/", "customer_id": 1, "source_url": "docs/faq/wallets/coinbase_wallet.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["coinbase", "latest", "wallet", "endpoints", "refreshing", "display", "about", "support", "their", "opensea", "information", "names"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7505abbee31c559f0025f65372704047017212c8", "node_type": "4", "metadata": {"file_path": "docs/faq/wallets/coinbase_wallet.mdx", "file_name": "coinbase_wallet.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/wallets/coinbase_wallet.mdx"}, "hash": "a29fd61774a3d1028fa8fecab72622a814da79b78930aa3467eab144da0878e1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "10502fea-fc82-4256-bd6d-15b0d5ff9b60", "node_type": "1", "metadata": {"file_path": "docs/faq/wallets/coinbase_wallet.mdx", "file_name": "coinbase_wallet.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/wallets/coinbase_wallet.mdx", "header_path": "/Coinbase wallet/"}, "hash": "4e6c36b450750bc0748aac99e1ce94014f5e39f31078591780ded47277d7d795", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ebbf3386-baf8-4c33-99f7-58f52bc82253", "node_type": "1", "metadata": {"header_path": "/Coinbase wallet/"}, "hash": "1ed0b82f8f9501fb6da74f54d945fd872e1efca4d52e28136ddb2d571ecd59e8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## ENS Names Coinbase wallet show as \u201cUnknown\u201d\nCoinbase Wallet may rely on OpenSea NFT data endpoints to display information about ENS names. If OpenSea does not have the latest metadata, try refreshing it on their platform.\n:::info Support\nTo learn how to refresh metadata on OpenSea, see\n - [**OpenSea:** Refresh Metadata](/faq/marketplaces/opensea#refresh-metadata)\n::: ## What is the free cb.id web3 username Coinbase Wallet offers?\nYour cb.id username is an ENS name issued by Coinbase that is built upon the ENS decentralized identity infrastructure. Coinbase offers free usernames in the format of subnames (for example, username.cb.id). This is a great service offered by Coinbase but it does have limitations.\n\n - Non-transferrable\n - Can\u2019t use the fuse permissions with the NameWrapper.\n - Cannot create your own subdomains.\n - Limited record setup. Not all the records and features are available as they are with .eth ENS names.\n\n:::info\nTo learn about how Coinbase uses cb.id with ENS, see:\n - <Link to=\"https://help.coinbase.com/en/wallet/managing-account/coinbase-ens-support\"><b>Coinbase:</b> Decentralized ID (cb.id)</Link>\n\nTo learn how to import your own DNS name into ENS, see:\n - <Link to=\"/howto/integrate-dns\"><b>How-To:</b> Integrate a DNS name</Link>\n:::", "mimetype": "text/plain", "start_char_idx": 1425, "end_char_idx": 1797, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0f2616d1-97c3-463f-a139-1d31fa67b657": {"__data__": {"id_": "0f2616d1-97c3-463f-a139-1d31fa67b657", "embedding": null, "metadata": {"file_path": "docs/faq/wallets/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/wallets/index.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/faq/wallets/index.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["unable", "doccardlist", "wallets", "device", "ledger", "cthulu", "import", "hardware", "wallet"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b27cff73a988f8ababc8bc7a124d917a53cc0ee2", "node_type": "4", "metadata": {"file_path": "docs/faq/wallets/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/wallets/index.mdx"}, "hash": "02d80c1c2216af3e2dfacb9285fc7d829192dcf29be8d91b4c36d473702d0228", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Wallets\n\n```mdx-code-block\nimport DocCardList from '@theme/DocCardList';\n\n<DocCardList /> ---\nlast_update:\n  author: cthulu\ntags:\n  - ledger\n  - ledger live\n  - hardware wallet\n  - wallet device\nkeywords: [ledger, ledger live, hardware wallet, wallet device]\n--- # Ledger ## Unable to interact with smart contracts ### Enable Blind signing *(formerly called Contract Data)*\nInteracting with smart contracts such as ENS using your Ledger requires `Blind signing` to be enabled on your device.\n:::tip instructions\n* Start and unlock your Ledger Nano S or X.\n* Open the Ethereum App.\n* Go to `Settings` **\u2192** `Blind signing` and press both buttons to enable it.\n:::\nNow you should be able to interact with smart contracts and ENS.\n\n:::info\nThis setting resets every time the Ledger hardware device is updated.\n:::", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 91, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f61d9cee-27e3-4e07-aa03-523729fac921": {"__data__": {"id_": "f61d9cee-27e3-4e07-aa03-523729fac921", "embedding": null, "metadata": {"file_path": "docs/faq/wallets/ledger.mdx", "file_name": "ledger.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/wallets/ledger.mdx", "header_path": "/Ledger/", "customer_id": 1, "source_url": "docs/faq/wallets/ledger.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["confirmation", "transactions", "contact", "prompted", "sometimes", "resulting", "ledger", "loses", "which", "never", "bridge", "metamask"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9e1bbe9d483905cbe766763665179dc905c7ddc5", "node_type": "4", "metadata": {"file_path": "docs/faq/wallets/ledger.mdx", "file_name": "ledger.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/wallets/ledger.mdx"}, "hash": "26b861e28c7758757dd79a9b21354c24198956c130a6abd375762a7eb3783c74", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4c710070-48b5-4416-804f-0023f3584154", "node_type": "1", "metadata": {"file_path": "docs/faq/wallets/ledger.mdx", "file_name": "ledger.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/wallets/ledger.mdx", "header_path": "/Ledger/Unable to interact with smart contracts/"}, "hash": "945ab91233477c0f386d73a0e66c0f2f6084516db7f53e1423c27d734540d712", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Metamask bridge\nSometimes the Metamask-Ledger bridge loses contact with the Ledger device, resulting in transactions that are never prompted for confirmation on the Ledger device, and which show up in the Metamask UI as \"pending\" in perpetuity.\n\nThese transactions are never broadcast on-chain and needs to be cleared in Metamask.\n:::info Support\nFor information on how to clear stuck transactions in Metamask, see\n - [**Support:** Metamask (How to clear stuck transactions)](/faq/wallets/metamask#clearing-stuck-transactions)\n:::\n\nOnce you have cleared the stuck transactions, disconnect your Ledger device restart your browser. Finally, reconnect your Ledger and retry the transactions.", "mimetype": "text/plain", "start_char_idx": 723, "end_char_idx": 1414, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2aadae41-964b-444b-bda1-4ad41cedd970": {"__data__": {"id_": "2aadae41-964b-444b-bda1-4ad41cedd970", "embedding": null, "metadata": {"file_path": "docs/faq/wallets/metamask.mdx", "file_name": "metamask.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/wallets/metamask.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/faq/wallets/metamask.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["browser", "suffers", "known", "documented", "clearing", "cthulu", "extension", "several", "metamask"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7b3be480ff4d91293c8afb78d0b934fa45fd76dd", "node_type": "4", "metadata": {"file_path": "docs/faq/wallets/metamask.mdx", "file_name": "metamask.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/wallets/metamask.mdx"}, "hash": "ff03c48395a9b2eab355f3c183582199d6016d6585256404623ed2560d12de7e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b9364900-3327-42e4-a2b5-321e443640f3", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "e22a3badbdb568b50da2f252bb74fdbb3fea64ea52be62d8502b16fead1dfb40", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\nlast_update:\n  author: cthulu\ntags:\n  - metamask\n  - browser extension\nkeywords: [metamask, metamask wallet, metamask extension, browser wallet, extension wallet]\n--- # Metamask\nMetamask suffers from several known bugs documented below. ## Clearing stuck transactions\nSometimes transactions in Metamask can get stuck without being performed. You can verify whether a transaction is stuck in Metamask or not by looking up your wallet on <Link to=\"https://etherscan.io\"><b>Etherscan</b></Link> and comparing the transactions there to the ones visible in your wallet.\n\n:::caution\nTransactions can get stuck in Metamask due to a bug in the UI. This is not the same as transactions that have stalled due to too low gas fees.\n:::\n\nTo clear transactions stuck in Metamask you'll have to reset the wallet. Do this by opening up Metamask and then click the multi-coloured circle to enter the settings panel.\n<ImageWindow title=\"Metamask wallet browser extension\">\n  <p align=\"center\">\n    <Image img=\"/img/metamask-stuck1.webp\" width={400}/>\n  </p>\n</ImageWindow>\n\nGo to `Settings` **\u2192** `Advanced` **\u2192** `Reset Account` and confirm.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 170, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9c8fe68f-cfdc-404b-9bb4-a3ab750031f1": {"__data__": {"id_": "9c8fe68f-cfdc-404b-9bb4-a3ab750031f1", "embedding": null, "metadata": {"file_path": "docs/faq/wallets/metamask.mdx", "file_name": "metamask.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/wallets/metamask.mdx", "header_path": "/Metamask/", "customer_id": 1, "source_url": "docs/faq/wallets/metamask.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["experience", "delays", "sometimes", "cause", "metadata", "unknown", "these", "which", "updating", "opensea", "names", "metamask", "follow"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7b3be480ff4d91293c8afb78d0b934fa45fd76dd", "node_type": "4", "metadata": {"file_path": "docs/faq/wallets/metamask.mdx", "file_name": "metamask.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/wallets/metamask.mdx"}, "hash": "ff03c48395a9b2eab355f3c183582199d6016d6585256404623ed2560d12de7e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "972c07b0-1c11-4681-95f9-9f8de6058562", "node_type": "1", "metadata": {"file_path": "docs/faq/wallets/metamask.mdx", "file_name": "metamask.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/wallets/metamask.mdx", "header_path": "/Metamask/"}, "hash": "52714686b374ba840f61fcec2cc4bebec34df463c19e5902e1e7d94edae987af", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1f7c19bc-fb7a-4605-bbb8-04c20fef3ff9", "node_type": "1", "metadata": {"header_path": "/Metamask/"}, "hash": "49a2cd7f8f38afa0893fcfcee1472e61ba6f3bfb87911bc290a75e978d8b0622", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Unknown ENS name\nMetaMask gets its ENS name metadata from OpenSea APIs, which sometimes experience delays in updating new data from the blockchain. These delays can cause ENS names in MetaMask to show up as \"unknown\".\nTo fix this follow the instructions in:\n:::info\n<Link to=\"/faq/marketplaces/opensea#ens-name-doesnt-show\">\n  <b>OpenSea:</b> ENS Name Doesn't Show\n</Link>\n::: ## Doesn't show ENS tokens\nMetamask may not show ENS governance tokens by default. To show them, click on Assets, and then Refresh list.\n<ImageWindow title=\"Metamask wallet browser extension\">\n  <p align=\"center\">\n    <Image img=\"/img/metamask-refreshlist.png\"/>\n  </p>\n</ImageWindow>\n\nYou will see a notification that Metamask has found a new token for the wallet. Next, click Import.\n<ImageWindow title=\"Metamask wallet browser extension\">\n  <p align=\"center\">\n    <Image img=\"/img/metamask-unknown3.png\"/>\n  </p>\n</ImageWindow>\n\n:::warning\nBe sure the imported ENS token address is: 0xC18360217D8F7Ab5e7c516566761Ea12Ce7F9D72\nAvoid interacting or importingtokens that are unknown, as they could be scam tokens.\n\nFor more information on token scams, see\n - [**Support FAQ:** Security (fake tokens)](/faq/security#the-fake-token-scam)\n:::\n\nNow your ENS voting tokens and/or ENS domain tokens should be visible in your Metamask wallet.", "mimetype": "text/plain", "start_char_idx": 1132, "end_char_idx": 1511, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7757714b-f2d2-415d-ab8d-cce69bd6c14d": {"__data__": {"id_": "7757714b-f2d2-415d-ab8d-cce69bd6c14d", "embedding": null, "metadata": {"file_path": "docs/faq/wallets/metamask.mdx", "file_name": "metamask.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/wallets/metamask.mdx", "header_path": "/Metamask/", "customer_id": 1, "source_url": "docs/faq/wallets/metamask.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["transaction", "exaggerated", "actual", "users", "wallet", "incredibly", "costs", "enough", "there", "metamask", "cover", "where", "estimate", "shown"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7b3be480ff4d91293c8afb78d0b934fa45fd76dd", "node_type": "4", "metadata": {"file_path": "docs/faq/wallets/metamask.mdx", "file_name": "metamask.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/wallets/metamask.mdx"}, "hash": "ff03c48395a9b2eab355f3c183582199d6016d6585256404623ed2560d12de7e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1f7c19bc-fb7a-4605-bbb8-04c20fef3ff9", "node_type": "1", "metadata": {"file_path": "docs/faq/wallets/metamask.mdx", "file_name": "metamask.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/wallets/metamask.mdx", "header_path": "/Metamask/"}, "hash": "00f9dfb4133117eb766fc96fb129f298842c93f64aa85c011ee15e3bd3768fbf", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Exaggerated gas costs\nMetamask has a [known bug](https://github.com/MetaMask/metamask-extension/issues/13135) where users are shown an incredibly high gas fee estimate if there isn't enough ETH in the wallet to cover the actual transaction costs.\n\n<ImageWindow title=\"Metamask wallet browser extension\">\n  <p align=\"center\">\n    <Image img=\"/img/metamask-exaggerated1.webp\"/>\n  </p>\n</ImageWindow>\n\nThis can be solved by transferring more ETH into the wallet to cover the actual transaction cost which should be a lot less than what Metamask shows when it's encountering this bug.", "mimetype": "text/plain", "start_char_idx": 2450, "end_char_idx": 3033, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1df939de-189b-4020-b8d2-daa338d006cb": {"__data__": {"id_": "1df939de-189b-4020-b8d2-daa338d006cb", "embedding": null, "metadata": {"file_path": "docs/faq/wallets/metamask_mobile.mdx", "file_name": "metamask_mobile.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/wallets/metamask_mobile.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/faq/wallets/metamask_mobile.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["mobile", "cthulu", "phone", "wallet", "metamask"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "73ca6dcd7e26b579839f7ef9e494553f67e4b333", "node_type": "4", "metadata": {"file_path": "docs/faq/wallets/metamask_mobile.mdx", "file_name": "metamask_mobile.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/wallets/metamask_mobile.mdx"}, "hash": "46ca1f0721cd80f967428fd9ec8a0faacbb45718d34136389910e639becb6962", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d8e31482-795b-478b-8807-61a0920d0adc", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "81d282f2f29cc9d7e13ad66de406053457d774c3335887c04b975412031c4edf", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ntitle: Metamask mobile\nhide_title: true\nlast_update:\n  author: cthulu\ntags:\n  - metamask\n  - metamask mobile\n  - mobile wallet\n  - phone wallet\nkeywords: [metamask, metamask mobile, mobile wallet, phone wallet]\n---\n\n<br/>\n<div class=\"container\" style={{'padding':'0px'}}>\n<div class=\"row\">\n<div class=\"col\"> # Metamask mobile\n\nMetamask mobile is a self-custody wallet for your mobile phone, which allows users to manage their own private keys to the wallet and any coins/tokens stored in it.\n\n:::info\nThis app is not to be confused with the Metamask _browser extension_.\n\nFor help with the Metamask _browser extension_ see this [support page](/faq/wallets/metamask).\n:::\n    \n</div>\n<div class=\"col\">\n<PhoneWindow img=\"/img/metamask-mobile-app.jpg\"/>\n</div>\n</div>\n</div>\n\n---", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 311, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "75a8b802-1fcb-4d4e-ac4f-076a94d38179": {"__data__": {"id_": "75a8b802-1fcb-4d4e-ac4f-076a94d38179", "embedding": null, "metadata": {"file_path": "docs/faq/wallets/metamask_mobile.mdx", "file_name": "metamask_mobile.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/wallets/metamask_mobile.mdx", "header_path": "/Metamask mobile/", "customer_id": 1, "source_url": "docs/faq/wallets/metamask_mobile.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["asked", "other", "clear", "cookies", "clearing", "frequently", "mobile", "attempting", "there", "questions", "tries", "where", "metamask"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "73ca6dcd7e26b579839f7ef9e494553f67e4b333", "node_type": "4", "metadata": {"file_path": "docs/faq/wallets/metamask_mobile.mdx", "file_name": "metamask_mobile.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/wallets/metamask_mobile.mdx"}, "hash": "46ca1f0721cd80f967428fd9ec8a0faacbb45718d34136389910e639becb6962", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d8e31482-795b-478b-8807-61a0920d0adc", "node_type": "1", "metadata": {"file_path": "docs/faq/wallets/metamask_mobile.mdx", "file_name": "metamask_mobile.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/wallets/metamask_mobile.mdx", "header_path": "/"}, "hash": "becc142cc75256aae3bfb1e6e54380e463f5e1a1d128782e1f6d78dd9343010a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "76431abc-19ac-4050-81c6-c17a0e94ce82", "node_type": "1", "metadata": {"header_path": "/Metamask mobile/Frequently Asked Questions/"}, "hash": "30ae493b492a88996772eae7fd0508316e77b211341504f362f9b832f1383274", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Frequently Asked Questions ### Clearing data in Metamask doesn't work\nThere is an [open issue](https://github.com/MetaMask/metamask-mobile/issues/2009) for Metamask Mobile where attempting to clear the cache, cookies or other data fail when the user tries to clear them in settings. The issue also causes cached pages to not be updated, leading to displaying old versions of dApps.\nThe only known solution is to either reinstall Metamask or to preferably to use a dedicated browser app. Brave, Chrome and Safari tend to work better than the built-in browsers within mobile wallet apps.", "mimetype": "text/plain", "start_char_idx": 783, "end_char_idx": 812, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "71e8519d-274c-4114-b43c-d5a0b0b802b6": {"__data__": {"id_": "71e8519d-274c-4114-b43c-d5a0b0b802b6", "embedding": null, "metadata": {"file_path": "docs/faq/wallets/trezor.mdx", "file_name": "trezor.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/wallets/trezor.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/faq/wallets/trezor.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["asked", "trezor", "frequently", "device", "cthulu", "hardware", "updated", "questions", "wallet", "connect"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "bd4b7f82433b47bf6c54e0ef42cd27a0c6a9480b", "node_type": "4", "metadata": {"file_path": "docs/faq/wallets/trezor.mdx", "file_name": "trezor.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/wallets/trezor.mdx"}, "hash": "f9865bbda408f44dc397b6142b95315eda99f9f0003d6150e08a9e420bc613a7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5c21290b-00a3-4be9-8af2-c44b0e44a5db", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "759b8b5ebb174d70478825601b6303a05bc766f9b2bf33083a83fb73db6bbce8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ntitle: Trezor\nhide_title: true\nlast_update:\n  author: cthulu\ntags:\n  - trezor\n  - hardware wallet\n  - wallet device\nkeywords: [trezor, hardware wallet, wallet device]\n---\n\n<div class=\"container\">\n<div class=\"row\">\n<div class=\"col\"> # Trezor\n\n</div>\n<div class=\"col\">\n\n<ImageWindow title=\"Trezor device\">\n<Image img=\"/img/faq/wallets/trezor-1.png\"/>\n</ImageWindow>\n\n</div>\n</div>\n</div>\n\n--- ## Frequently Asked Questions ### Can't connect to the ENS app\nIf you haven't updated your Trezor in a long time it can become out of sync with the Trezor desktop  application. Updating your Trezor to the latest version usually solves this.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 235, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9ce32931-625f-4dbd-9679-683126f65bb9": {"__data__": {"id_": "9ce32931-625f-4dbd-9679-683126f65bb9", "embedding": null, "metadata": {"file_path": "docs/howto/add-custom-record.mdx", "file_name": "add-custom-record.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/add-custom-record.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/howto/add-custom-record.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["profile", "zadok7", "record", "custom", "records", "service"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d01e89941ed69e1c2f32bf1b891f6c52154560c7", "node_type": "4", "metadata": {"file_path": "docs/howto/add-custom-record.mdx", "file_name": "add-custom-record.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/add-custom-record.mdx"}, "hash": "24c679944b1c47dae103f5132f09393c4dc127f3776102990050ebeaf8992b75", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "db9a26d8-74d6-4047-81fb-aaccf93ce99e", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "52c4228593a0b2ea0a8a2b73ab532896603d3d689a89ba832acd7a8d01716da0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\nlast_update:\n  author: zadok7\ntags:\n  - custom records\n  - add custom record\n  - set custom record\nkeywords: [ens records, custom records, custom service key]\n--- # Add a Custom Record\nTo add a custom record to your ENS name, open the name\u2019s profile editor by clicking `Edit profile`\n\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f2f4f7\" img=\"/img/howto/v3-add-custom-record-1-new1.png\"/>\n\nNext, click on the `+ Add more to profile` button.\n\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f2f4f7\" img=\"/img/howto/v3-add-custom-record-2-new1.png\"/>\n\nOn the \"Add profile fields\" window, click `other`. Then select the `Custom`, and click the `Add` button to create your custom record.\n\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f2f4f7\" img=\"/img/howto/v3-add-custom-record-3-new1.png\"/>\n\nType the name of the custom key into the first input box under `Custom`. Next to it, input the value you would like to save for the custom record and click `Save`.\n\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f2f4f7\" img=\"/img/howto/v3-add-custom-record-4-new1.png\"/>\n\nOn the next window click `Open Wallet` to confirm and sign the transaction. Your custom record will then be added to your ENS name!\n\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f2f4f7\" img=\"/img/howto/v3-add-custom-record-5-new1.png\"/>", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 166, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6fea5dda-7ce0-427a-a21b-cc01d338035c": {"__data__": {"id_": "6fea5dda-7ce0-427a-a21b-cc01d338035c", "embedding": null, "metadata": {"file_path": "docs/howto/add-custom-record.mdx", "file_name": "add-custom-record.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/add-custom-record.mdx", "header_path": "/Add a Custom Record/", "customer_id": 1, "source_url": "docs/howto/add-custom-record.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["service", "known", "specified", "types", "record", "these", "youtube", "create", "custom", "channel", "formatted", "records", "account"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d01e89941ed69e1c2f32bf1b891f6c52154560c7", "node_type": "4", "metadata": {"file_path": "docs/howto/add-custom-record.mdx", "file_name": "add-custom-record.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/add-custom-record.mdx"}, "hash": "24c679944b1c47dae103f5132f09393c4dc127f3776102990050ebeaf8992b75", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "db9a26d8-74d6-4047-81fb-aaccf93ce99e", "node_type": "1", "metadata": {"file_path": "docs/howto/add-custom-record.mdx", "file_name": "add-custom-record.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/add-custom-record.mdx", "header_path": "/"}, "hash": "ed13e7e40e5747ff5e70478a32eb613b02131770656339ec85d1386128d69777", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Add a Custom Service Key\n\nSome types of ENS records use a key name formatted in \"reverse dot notation\". These are known as \"Service Keys\" as specified in <Link to=\"https://docs.ens.domains/ens-improvement-proposals/ensip-5-text-records#service-keys\"><b>ENSIP-5</b></Link>. For example, you want to save your YouTube channel name into your ENS records. To create a custom record for the YouTube account service, simply name the key `com.youtube` and set its value to your YouTube channel name.\n\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f2f4f7\" img=\"/img/howto/v3-add-custom-record-6-new1.png\"/>\n\nOn the next window click `Open Wallet` to confirm and save the custom Service Key and its value to your ENS records. Now a record for YouTube.com will exist for your ENS name! There is no limit to the number or types of records you can create for your ENS name.\n\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f2f4f7\" img=\"/img/howto/v3-add-custom-record-7-new1.png\"/>", "mimetype": "text/plain", "start_char_idx": 1400, "end_char_idx": 2408, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6a1f40c0-b135-4c90-8283-b0a8e829d90c": {"__data__": {"id_": "6a1f40c0-b135-4c90-8283-b0a8e829d90c", "embedding": null, "metadata": {"file_path": "docs/howto/add-wallet-address.mdx", "file_name": "add-wallet-address.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/add-wallet-address.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/howto/add-wallet-address.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["addresses", "address", "storing", "learn", "cthulu", "capable", "tutorial", "number", "wallet", "large"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4278dfca8afec311f9ed2b84418432aa3410e59c", "node_type": "4", "metadata": {"file_path": "docs/howto/add-wallet-address.mdx", "file_name": "add-wallet-address.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/add-wallet-address.mdx"}, "hash": "40611e60f3e4b1d9fb491c4eb0abf530c2b036c854e5f9128fa092ea27a6586d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4ab0e622-6552-443a-abe3-057dcf223e3b", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "0fb9903ec6a4d23521de0249d5bf65eaeeff1bc2c99fccc54d5c13e7b353c7bc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\nlast_update:\n  author: cthulu\ntags:\n  - Address\n  - BSC\n  - DOGE\n  - LTC\n  - BTC\nkeywords: [ens wallet, wallet, add a wallet, add wallet address]\n--- # Add a Wallet Address\nIn this tutorial you will learn how to add a wallet address to your ENS name. ## What does it do?\nYour ENS name is capable of storing a large number of wallet addresses across different blockchains, which can be added from the [ENS Manager App](https://app.ens.domains), allowing you to receive payments in more cryptocurrencies than just Ethereum, provided that the service or wallet used supports it.\n\n![Docusaurus themed image](/img/ens-map-medium.png#gh-light-mode-only)![Docusaurus themed image](/img/ens-map-medium-dark.png#gh-dark-mode-only)", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 153, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b41100e3-90e4-4c5f-868a-00b6d6b914e2": {"__data__": {"id_": "b41100e3-90e4-4c5f-868a-00b6d6b914e2", "embedding": null, "metadata": {"file_path": "docs/howto/add-wallet-address.mdx", "file_name": "add-wallet-address.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/add-wallet-address.mdx", "header_path": "/Add a Wallet Address/", "customer_id": 1, "source_url": "docs/howto/add-wallet-address.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ethereum", "requirement", "address", "learn", "prerequisite", "before", "points", "wallet", "setting", "section"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4278dfca8afec311f9ed2b84418432aa3410e59c", "node_type": "4", "metadata": {"file_path": "docs/howto/add-wallet-address.mdx", "file_name": "add-wallet-address.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/add-wallet-address.mdx"}, "hash": "40611e60f3e4b1d9fb491c4eb0abf530c2b036c854e5f9128fa092ea27a6586d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ab5896fb-ee9a-4459-8b85-c9aac052038a", "node_type": "1", "metadata": {"file_path": "docs/howto/add-wallet-address.mdx", "file_name": "add-wallet-address.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/add-wallet-address.mdx", "header_path": "/Add a Wallet Address/"}, "hash": "2839d4c76227a7796cfc6b884b6df3f7e1cca4ec22d119ca776cb81a0cfa34cf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9f431172-3fdb-4a15-98f2-9feab66c6d31", "node_type": "1", "metadata": {"header_path": "/Add a Wallet Address/"}, "hash": "a6c0ff09e37c52ad300bd114213bd0a543cb6099b04fed82755573f31e11644a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Add an **Ethereum** wallet {#ethereum-wallet}\nIn this section you will learn how to add an Ethereum wallet to your ENS name. This is the wallet ETH will end up in when sent to your ENS name.\nIt also is a prerequisite to setting the `Primary name` in a wallet.\n\n:::info\n - Points your ENS name to an Ethereum wallet address\n - Is a requirement before setting the <Link to=\"/core/records/primary-name\"><b>Primary Name</b></Link>\n:::\n\nGo to the <Link to=\"https://app.ens.domains\"><b>ENS Manager App</b></Link> with the wallet set as `Manager` for the ENS name you want to manage and click `Names` to bring up a list\nof your ENS names *or* search for an ENS name you own directly from the main page.\n\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f5f6f7\" img=\"/img/howto/v3-add-wallet-address-1.png\"/>\n\nClick the ENS name you want to add records to.\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f5f6f7\" img=\"/img/howto/v3-add-wallet-address-2.png\"/>\n\nClick `Edit profile`.\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f5f6f7\" img=\"/img/howto/v3-add-wallet-address-3.png\"/>\n\nClick on `+ Add more to Profile`.\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f5f6f7\" img=\"/img/howto/v3-add-wallet-address-profile-1.png\"/>\n\nScroll down and select the `ETH` option in the Address-section and click `Add`.\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f5f6f7\" img=\"/img/howto/v3-add-wallet-address-profile-2.png\"/>\n\nType in the Ethereum wallet address you want to add to your ENS name and click `Save`.\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f5f6f7\" img=\"/img/howto/v3-add-wallet-address-profile-3.png\"/>\n\nClick `Open Wallet` and confirm the transaction in your wallet.\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f5f6f7\" img=\"/img/howto/v3-add-wallet-address-newui-5.png\"/>\n\nWait for the transaction to finish.\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f5f6f7\" img=\"/img/howto/v3-add-wallet-address-newui-6.png\"/>\n\nWhen you see `Transaction Complete` the transaction has been confirmed and your wallet address has been added to your ENS name.\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f5f6f7\" img=\"/img/howto/v3-add-wallet-address-newui-7.png\"/>\n\nCongratulations, your ENS name now has your new wallet address attached to it!\n\n<!-- longer records-flow\n\nGo to the `Records` tab\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f5f6f7\" img=\"/img/howto/v3-add-wallet-address-3.png\"/>\n\nClick `Edit Records`\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f5f6f7\" img=\"/img/howto/v3-add-wallet-address-4.png\"/>\n\nSwitch to the `Address` tab\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f5f6f7\" img=\"/img/howto/v3-add-wallet-address-5.png\"/>\n\nClick `Add Address`\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f5f6f7\" img=\"/img/howto/v3-add-wallet-address-6.png\"/>\n\nThen click `ETH`.\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f5f6f7\" img=\"/img/howto/v3-add-wallet-address-norecords-7.png\"/>\n\nThen type in the Ethereum wallet address you want to add to your ENS name and click `Save`.\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f5f6f7\" img=\"/img/howto/v3-add-wallet-address-norecords-8.png\"/>\n\nClick `Open Wallet` and confirm the transaction in your wallet.\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f5f6f7\" img=\"/img/howto/v3-add-wallet-address-newui-5.png\"/>\n\nWait for the transaction to finish.\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f5f6f7\" img=\"/img/howto/v3-add-wallet-address-newui-6.png\"/>\n\nWhen you see `Transaction Complete` the transaction has been confirmed and your wallet address has been added to your ENS name.\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f5f6f7\" img=\"/img/howto/v3-add-wallet-address-newui-7.png\"/>\n\n-->", "mimetype": "text/plain", "start_char_idx": 729, "end_char_idx": 4725, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9f431172-3fdb-4a15-98f2-9feab66c6d31": {"__data__": {"id_": "9f431172-3fdb-4a15-98f2-9feab66c6d31", "embedding": null, "metadata": {"file_path": "docs/howto/add-wallet-address.mdx", "file_name": "add-wallet-address.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/add-wallet-address.mdx", "header_path": "/Add a Wallet Address/", "customer_id": 1, "source_url": "docs/howto/add-wallet-address.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["other", "searching", "addresses", "wallet", "types", "wallets", "added", "decentralized", "cthulu", "manager", "several", "information", "detailed", "resources"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4278dfca8afec311f9ed2b84418432aa3410e59c", "node_type": "4", "metadata": {"file_path": "docs/howto/add-wallet-address.mdx", "file_name": "add-wallet-address.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/add-wallet-address.mdx"}, "hash": "40611e60f3e4b1d9fb491c4eb0abf530c2b036c854e5f9128fa092ea27a6586d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b41100e3-90e4-4c5f-868a-00b6d6b914e2", "node_type": "1", "metadata": {"file_path": "docs/howto/add-wallet-address.mdx", "file_name": "add-wallet-address.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/add-wallet-address.mdx", "header_path": "/Add a Wallet Address/"}, "hash": "89a55356fcd47ae3e7136559199e0f296c1cecc8988e1739e06f19e02498b3f0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Add other wallets\nSeveral other types of wallet addresses can be added from the `Addresses` tab in the ENS Manager by searching for them:\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f5f6f7\" img=\"/img/howto/v3-add-wallet-address-7.png\"/>\n\n:::info Resources\nFor more detailed information on how to set a record, see\n - <Link to=\"/howto/set-record\"><b>How-To: </b>Set a Record</Link>\n::: ---\nlast_update:\n  author: cthulu\ntags:\n  - decentralized website\n  - website\n  - web3\nkeywords: [ens website, create decentralized website, decentralized website, add website, add web3 site, web3 site]\n---", "mimetype": "text/plain", "start_char_idx": 4727, "end_char_idx": 5135, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e64affda-3bff-44e8-b9d8-289e39a714fb": {"__data__": {"id_": "e64affda-3bff-44e8-b9d8-289e39a714fb", "embedding": null, "metadata": {"file_path": "docs/howto/decentralized-website.mdx", "file_name": "decentralized-website.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/decentralized-website.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/howto/decentralized-website.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["hosted", "ability", "powerful", "website", "interesting", "point", "creating", "webpages", "decentralized", "create", "features", "where", "names"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4ce6409ac93c347526d700cb7e4966776926ff7f", "node_type": "4", "metadata": {"file_path": "docs/howto/decentralized-website.mdx", "file_name": "decentralized-website.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/decentralized-website.mdx"}, "hash": "0e4ce9271d0f4dee1301b80fc8dd7d05317c4abd0b2e59c586ba3e16b2efd975", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d2241333-ef6b-4987-baf2-a134b2292c66", "node_type": "1", "metadata": {"file_path": "docs/howto/decentralized-website.mdx", "file_name": "decentralized-website.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/decentralized-website.mdx", "header_path": "/"}, "hash": "4858f8ca64c266f5d96397bf39c11ea3eb9f8df40e0d5b73d6215ab955574380", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "090d2ec4-817c-4cc3-9468-06fb9486e8ed", "node_type": "1", "metadata": {"header_path": "/Create a decentralized website/"}, "hash": "8796d306a7f8d6fc3fbc39e0a54789733e9681635353d8734be585eaff423598", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Create a decentralized website\nOne of the most interesting and powerful features of ENS names is the ability to point them to webpages hosted on the decentralized web, creating a website where both the hosting and the domain name is *entirely* decentralized.\n\nIn this tutorial you will:\n 1. [**Build a website**](#build-a-website)\n 1. [**Set up a GitHub repository**](#set-up-a-github-repository)\n 1. [**Upload it to a decentralized storage using IPFS**](#upload-to-ipfs)\n 1. [**Point your ENS name to it**](#configure-your-ens-name)\n \n_ENS supports several decentralized protocols apart from IPFS, but this tutorial only covers IPFS (for now)._\n\nAnyhow, let's get started!", "mimetype": "text/plain", "start_char_idx": 208, "end_char_idx": 883, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "090d2ec4-817c-4cc3-9468-06fb9486e8ed": {"__data__": {"id_": "090d2ec4-817c-4cc3-9468-06fb9486e8ed", "embedding": null, "metadata": {"file_path": "docs/howto/decentralized-website.mdx", "file_name": "decentralized-website.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/decentralized-website.mdx", "header_path": "/Create a decentralized website/", "customer_id": 1, "source_url": "docs/howto/decentralized-website.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["github", "excellent", "already", "website", "deploy", "using", "create", "proceed", "build", "basic", "section"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4ce6409ac93c347526d700cb7e4966776926ff7f", "node_type": "4", "metadata": {"file_path": "docs/howto/decentralized-website.mdx", "file_name": "decentralized-website.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/decentralized-website.mdx"}, "hash": "0e4ce9271d0f4dee1301b80fc8dd7d05317c4abd0b2e59c586ba3e16b2efd975", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e64affda-3bff-44e8-b9d8-289e39a714fb", "node_type": "1", "metadata": {"file_path": "docs/howto/decentralized-website.mdx", "file_name": "decentralized-website.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/decentralized-website.mdx", "header_path": "/"}, "hash": "ca5ee3845b103c87731a69547e36befd22889f024bf1bac903795364881bce3c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ce26b2fe-cb52-4bf2-9eb1-06fb89f2fede", "node_type": "1", "metadata": {"header_path": "/Create a decentralized website/Build a website/"}, "hash": "9fd4e83a15c9bdd939831a7e2b5f62e371e3483c57f53f42e73a50545e5c74df", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Build a website\nIn this section we'll create a basic website to deploy to IPFS using <Link to=\"http://heavens.tools\"><b>Heaven's Tools</b></Link> excellent Web3 website builder.\n:::tip\nIf you already have a website you'd like to upload, proceed to [**Set up a GitHub repository**](#set-up-a-github-repository)\n::: ### Create the website\nBefore we can upload a site to IPFS we have to first create it! There are many ways to do that, but in this guide we'll try to keep it simple by using Heaven's Tools which is a WYSIWYG, or \"What You See Is What You Get\", type editor where you don't have to know how to code.\n\nAll you need to do is go to <Link to=\"http://heavens.tools\"><b>Heaven's Tools</b></Link> website and drag blocks in the order you want them and Heaven's Tools will take care of the rest and build the site for you!\n\nGo to <Link to=\"http://heavens.tools\"><b>Heaven's Tools</b></Link> website and use the drag and drop building blocks to create your site.\n<BrowserWindow url=\"heavens.tools\">\n<div style={{'maxWidth':'1080px'}}>\n  <Image img=\"/img/howto/decentralized_website_1.png\" />\n  </div>\n</BrowserWindow>", "mimetype": "text/plain", "start_char_idx": 885, "end_char_idx": 1201, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d6d9f561-8750-4631-8db2-38ee9b786328": {"__data__": {"id_": "d6d9f561-8750-4631-8db2-38ee9b786328", "embedding": null, "metadata": {"file_path": "docs/howto/decentralized-website.mdx", "file_name": "decentralized-website.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/decentralized-website.mdx", "header_path": "/Create a decentralized website/Build a website/", "customer_id": 1, "source_url": "docs/howto/decentralized-website.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["button", "download", "folder", "happy", "website", "click", "archive", "extract", "compressed", "created"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4ce6409ac93c347526d700cb7e4966776926ff7f", "node_type": "4", "metadata": {"file_path": "docs/howto/decentralized-website.mdx", "file_name": "decentralized-website.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/decentralized-website.mdx"}, "hash": "0e4ce9271d0f4dee1301b80fc8dd7d05317c4abd0b2e59c586ba3e16b2efd975", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ce26b2fe-cb52-4bf2-9eb1-06fb89f2fede", "node_type": "1", "metadata": {"file_path": "docs/howto/decentralized-website.mdx", "file_name": "decentralized-website.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/decentralized-website.mdx", "header_path": "/Create a decentralized website/Build a website/"}, "hash": "039d86c3b404a613574de1c36e1c3b6c549b4825e71b09cfa23b5e1ff4a05fb5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6c0df9e7-5acc-4cc2-8751-4e0e2c64b741", "node_type": "1", "metadata": {"header_path": "/Create a decentralized website/Build a website/"}, "hash": "a429e15345b069b2f10caa5841351c8ccb9ad564d5758944ea00742f02dd3759", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Download the website\nOnce you're happy with the site you've created click the `Download` button to download a compressed `.zip` archive of your website. \n<BrowserWindow url=\"heavens.tools\">\n  <Image img=\"/img/howto/decentralized_website_2.png\" />\n</BrowserWindow> ### Extract the compressed archive\n<details>\n<summary>Extract compressed archive</summary>\n<Tabs>\n<TabItem value=\"windows\" label=\"Windows\" default>\n<p>Navigate to the file folder and double-click the zip file</p>\n<ImageWindow title=\"Extract the file (Windows)\">\n<Image img=\"/img/howto/decentralized-website-extract-win-1.png\"/>\n</ImageWindow>\n<br/><p>Press `Extract all`</p>\n<ImageWindow title=\"Extract the file (Windows)\">\n<Image img=\"/img/howto/decentralized-website-extract-win-2.png\"/>\n</ImageWindow>\n<br/><p>Select a folder to extract the files to and click `Extract`</p>\n<ImageWindow title=\"Extract the file (Windows)\">\n<Image img=\"/img/howto/decentralized-website-extract-win-3.png\"/>\n</ImageWindow>\n</TabItem>\n<TabItem value=\"macos\" label=\"Mac OS\">\n<ImageWindow title=\"Extract the file (MacOS)\">\n<Image img=\"/img/howto/extract_file_macos_1.png\"/>\n</ImageWindow>\n<ImageWindow title=\"Extract the file (MacOS)\">\n<Image img=\"/img/howto/extract_file_macos_2.png\"/>\n</ImageWindow>\n</TabItem>\n<TabItem value=\"linux\" label=\"Linux\">\n<p>Navigate to the file folder and use <b>unzip</b> to unzip the archive.</p>\n\n```bash\n[cthulu@carbon ~]$ unzip template.zip\nArchive:  template.zip\nextracting: editor.css\n extracting: narrow-jumbotron.css\n extracting: aos.css\n extracting: vvvebjs-editor-helpers.css\n extracting: aos.js\n extracting: ?format=json\n extracting: index.html\n[cthulu@carbon ~]$ \n```\n\n</TabItem>\n</Tabs>\n</details>\n\n---", "mimetype": "text/plain", "start_char_idx": 2011, "end_char_idx": 2278, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4a549acd-5ff9-4133-87b3-a02de44917bf": {"__data__": {"id_": "4a549acd-5ff9-4133-87b3-a02de44917bf", "embedding": null, "metadata": {"file_path": "docs/howto/decentralized-website.mdx", "file_name": "decentralized-website.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/decentralized-website.mdx", "header_path": "/Create a decentralized website/", "customer_id": 1, "source_url": "docs/howto/decentralized-website.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["github", "repository", "create", "scroll", "choose", "click"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4ce6409ac93c347526d700cb7e4966776926ff7f", "node_type": "4", "metadata": {"file_path": "docs/howto/decentralized-website.mdx", "file_name": "decentralized-website.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/decentralized-website.mdx"}, "hash": "0e4ce9271d0f4dee1301b80fc8dd7d05317c4abd0b2e59c586ba3e16b2efd975", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6c0df9e7-5acc-4cc2-8751-4e0e2c64b741", "node_type": "1", "metadata": {"file_path": "docs/howto/decentralized-website.mdx", "file_name": "decentralized-website.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/decentralized-website.mdx", "header_path": "/Create a decentralized website/Build a website/"}, "hash": "cfb9e7d898ab5d1d9a12902ffbc92a414cf17ac0f1480724294f69709f48463c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8ce6518d-75dc-4004-956d-2f645dac8275", "node_type": "1", "metadata": {"header_path": "/Create a decentralized website/Set up a GitHub repository/"}, "hash": "9c490fa5fcd577401116363aae46d2a147490442b3a3c16ba49453aa3047589e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Set up a GitHub repository\nGo to <Link to=\"https://github.com\"><b>GitHub</b></Link> and create an account. ### Create a repository\nClick `New` to create a new GitHub repository for your website.\n<BrowserWindow url=\"github.com\">\n  <Image img=\"/img/howto/decentralized_website_3.png\" />\n</BrowserWindow>\n\nThen choose a name for the repository.\n<BrowserWindow url=\"github.com\">\n  <Image img=\"/img/howto/decentralized_website_4.png\" />\n</BrowserWindow>\n\nThen scroll down and click on `Create`.\n<BrowserWindow url=\"github.com\">\n  <Image img=\"/img/howto/decentralized_website_4.png\" />\n</BrowserWindow>\n<BrowserWindow url=\"github.com\">\n  <Image img=\"/img/howto/decentralized_website_5.png\" />\n</BrowserWindow>", "mimetype": "text/plain", "start_char_idx": 3709, "end_char_idx": 3818, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8146eb18-3b8f-4897-8541-5bb8b9c41195": {"__data__": {"id_": "8146eb18-3b8f-4897-8541-5bb8b9c41195", "embedding": null, "metadata": {"file_path": "docs/howto/decentralized-website.mdx", "file_name": "decentralized-website.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/decentralized-website.mdx", "header_path": "/Create a decentralized website/Set up a GitHub repository/", "customer_id": 1, "source_url": "docs/howto/decentralized-website.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["github", "after", "repository", "scroll", "click", "files", "existing", "upload"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4ce6409ac93c347526d700cb7e4966776926ff7f", "node_type": "4", "metadata": {"file_path": "docs/howto/decentralized-website.mdx", "file_name": "decentralized-website.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/decentralized-website.mdx"}, "hash": "0e4ce9271d0f4dee1301b80fc8dd7d05317c4abd0b2e59c586ba3e16b2efd975", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8ce6518d-75dc-4004-956d-2f645dac8275", "node_type": "1", "metadata": {"file_path": "docs/howto/decentralized-website.mdx", "file_name": "decentralized-website.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/decentralized-website.mdx", "header_path": "/Create a decentralized website/Set up a GitHub repository/"}, "hash": "d9aed425cafb94b5f22554ae5a9f07467a69da907f03b47ef0ae492491f0fc83", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fc1eef6d-6b7a-4649-9892-d47f67043083", "node_type": "1", "metadata": {"header_path": "/Create a decentralized website/"}, "hash": "b9bd23e54ab5fe51026049f4755d01bf8b98019267229d472bbbd77f18df6c88", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Upload your files to the repository\nOn the next screen, click the link `Uploading an existing file`\n<BrowserWindow url=\"github.com\">\n  <Image img=\"/img/howto/decentralized_website_6.png\" />\n</BrowserWindow>\n\nUpload your files to GitHub\n<BrowserWindow url=\"github.com\">\n  <Image img=\"/img/howto/decentralized_website_7.png\" />\n</BrowserWindow>\n\nAfter that's done, scroll down and click `Commit`.\n<BrowserWindow url=\"github.com\">\n  <Image img=\"/img/howto/decentralized_website_8.png\" />\n</BrowserWindow>\n\n---", "mimetype": "text/plain", "start_char_idx": 4418, "end_char_idx": 4928, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fc1eef6d-6b7a-4649-9892-d47f67043083": {"__data__": {"id_": "fc1eef6d-6b7a-4649-9892-d47f67043083", "embedding": null, "metadata": {"file_path": "docs/howto/decentralized-website.mdx", "file_name": "decentralized-website.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/decentralized-website.mdx", "header_path": "/Create a decentralized website/", "customer_id": 1, "source_url": "docs/howto/decentralized-website.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["protocol", "website", "storing", "serve", "store", "called", "decentralized", "possible", "tutorial", "yourself", "files", "upload"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4ce6409ac93c347526d700cb7e4966776926ff7f", "node_type": "4", "metadata": {"file_path": "docs/howto/decentralized-website.mdx", "file_name": "decentralized-website.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/decentralized-website.mdx"}, "hash": "0e4ce9271d0f4dee1301b80fc8dd7d05317c4abd0b2e59c586ba3e16b2efd975", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8146eb18-3b8f-4897-8541-5bb8b9c41195", "node_type": "1", "metadata": {"file_path": "docs/howto/decentralized-website.mdx", "file_name": "decentralized-website.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/decentralized-website.mdx", "header_path": "/Create a decentralized website/Set up a GitHub repository/"}, "hash": "843eb60f4e10c420f21fe235b8454e996852075fbe25c5077fe1b9ee2e159de2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "09187038-9f79-4fda-a932-08dcca5cfdf5", "node_type": "1", "metadata": {"header_path": "/Create a decentralized website/Upload to IPFS/"}, "hash": "91dbfa50bec2104bc69e402909682be52657346466e34d11cf9ae270b1b7acef", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Upload to IPFS\nIPFS, or the _InterPlanetary FileSystem_, is a decentralized storing protocol we'll use to store our website files in, and serve them from.\nFor this tutorial we'll use a so called _\"pinning service\"_ to store our files on IPFS but it's also possible to pin files yourself using a local IPFS node.\n\nThe benefit of using a pinning service is that you'll not need to run your own IPFS node to make sure that your website is accessible. ### Create an account with Fleek\nGo to <Link to=\"https://fleek.co\"><b>Fleek's website</b></Link> and `Sign Up` for an account.", "mimetype": "text/plain", "start_char_idx": 4930, "end_char_idx": 5380, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3afb0fcc-56b5-4290-b8da-2d046ce08adb": {"__data__": {"id_": "3afb0fcc-56b5-4290-b8da-2d046ce08adb", "embedding": null, "metadata": {"file_path": "docs/howto/decentralized-website.mdx", "file_name": "decentralized-website.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/decentralized-website.mdx", "header_path": "/Create a decentralized website/Upload to IPFS/", "customer_id": 1, "source_url": "docs/howto/decentralized-website.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["asked", "select", "github", "after", "dashboard", "website", "repository", "fleek", "logging", "which", "create", "choose", "click", "upload", "connect"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4ce6409ac93c347526d700cb7e4966776926ff7f", "node_type": "4", "metadata": {"file_path": "docs/howto/decentralized-website.mdx", "file_name": "decentralized-website.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/decentralized-website.mdx"}, "hash": "0e4ce9271d0f4dee1301b80fc8dd7d05317c4abd0b2e59c586ba3e16b2efd975", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "09187038-9f79-4fda-a932-08dcca5cfdf5", "node_type": "1", "metadata": {"file_path": "docs/howto/decentralized-website.mdx", "file_name": "decentralized-website.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/decentralized-website.mdx", "header_path": "/Create a decentralized website/Upload to IPFS/"}, "hash": "f286bc525eac3fa1fb1c6705248003440d213a17fe3bab82f1cfcb32076b4b8e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e4a1c06f-98de-4112-a3e2-21ce20a0fed7", "node_type": "1", "metadata": {"header_path": "/Create a decentralized website/"}, "hash": "fc56ee5260fedc14b5a653694a4496b84ec2cd403a2b6fc39a936b362889ffb7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Upload your site to Fleek\nAfter logging into <Link to=\"https://fleek.co\"><b>Fleek</b></Link>, at the dashboard select `Add new site`.\n<BrowserWindow url=\"fleek.co\">\n  <Image img=\"/img/howto/create_website_fleek_1.png\" />\n</BrowserWindow>\n\nChoose `Connect with GitHub` and connect your GitHub account. \n<BrowserWindow url=\"fleek.co\">\n  <Image img=\"/img/howto/create_website_fleek_2.png\" />\n</BrowserWindow>\n\nClick `Install & Authorize`\n<BrowserWindow url=\"fleek.co\">\n  <Image img=\"/img/howto/create_website_fleek_3.png\" />\n</BrowserWindow>\n\nWhen asked which repository to create the website from, select the repository you created earlier in [](#step-1-create-a-repository)\n<BrowserWindow url=\"fleek.co\">\n  <Image img=\"/img/howto/create_website_fleek_4.png\" />\n</BrowserWindow>\n\nFor the hosting service, make sure IPFS is selected and press `Continue`.\n<BrowserWindow url=\"fleek.co\">\n  <Image img=\"/img/howto/create_website_fleek_5.png\" />\n</BrowserWindow>\n\nOn the next screen no changes are necessary, so just scroll down and click `Deploy site`.\n<BrowserWindow url=\"fleek.co\">\n  <Image img=\"/img/howto/create_website_fleek_6.png\" />\n</BrowserWindow>\n\nFleek will now deploy the website to IPFS, which might take a little while.\n<BrowserWindow url=\"fleek.co\">\n  <Image img=\"/img/howto/create_website_fleek_7.png\" />\n</BrowserWindow>\n\nWhen the site has been deployed, it will look like this:\n<BrowserWindow url=\"fleek.co\">\n  <Image img=\"/img/howto/create_website_fleek_8.png\" />\n</BrowserWindow>\n\nSelect the `IPFS CID` *(marked in blue below)* and press `CTRL + C` to copy it into the clipboard or write it down.\n<BrowserWindow url=\"fleek.co\">\n  <Image img=\"/img/howto/create_website_fleek_9.png\" />\n</BrowserWindow>", "mimetype": "text/plain", "start_char_idx": 5510, "end_char_idx": 7228, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e4a1c06f-98de-4112-a3e2-21ce20a0fed7": {"__data__": {"id_": "e4a1c06f-98de-4112-a3e2-21ce20a0fed7", "embedding": null, "metadata": {"file_path": "docs/howto/decentralized-website.mdx", "file_name": "decentralized-website.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/decentralized-website.mdx", "header_path": "/Create a decentralized website/", "customer_id": 1, "source_url": "docs/howto/decentralized-website.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["content", "configure", "directly", "bring", "record", "search", "click", "manage", "wallet", "saved", "names", "manager"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4ce6409ac93c347526d700cb7e4966776926ff7f", "node_type": "4", "metadata": {"file_path": "docs/howto/decentralized-website.mdx", "file_name": "decentralized-website.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/decentralized-website.mdx"}, "hash": "0e4ce9271d0f4dee1301b80fc8dd7d05317c4abd0b2e59c586ba3e16b2efd975", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3afb0fcc-56b5-4290-b8da-2d046ce08adb", "node_type": "1", "metadata": {"file_path": "docs/howto/decentralized-website.mdx", "file_name": "decentralized-website.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/decentralized-website.mdx", "header_path": "/Create a decentralized website/Upload to IPFS/"}, "hash": "75cfaad94f4182e1403c88570565c801597a3342ff401157dffeb85296ce41df", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "26242539-e746-4f70-99ca-736833d72850", "node_type": "1", "metadata": {"header_path": "/Create a decentralized website/Configure your ENS name/"}, "hash": "4a92e249d1e0113dc48f5e25f36410c40d28b34d2094903f6988d74067c8f5f1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Configure your ENS name ### Go to the ENS Manager App\nGo to the <Link to=\"https://app.ens.domains\"><b>ENS Manager App</b></Link> with the wallet set as `Manager` for the ENS name you want to manage and click `Names` to bring up a list\nof your ENS names *or* search for an ENS name you own directly from the main page.\n\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f5f6f7\" img=\"/img/howto/v3-decentralized-website-ensmanager-1.png\"/>\n\nClick the ENS name you want to add the content record to.\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f5f6f7\" img=\"/img/howto/v3-decentralized-website-ensmanager-2.png\"/>\n\nGo to the `Records` tab\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f5f6f7\" img=\"/img/howto/v3-decentralized-website-ensmanager-3.png\"/>\n\nClick `Edit Records`\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f5f6f7\" img=\"/img/howto/v3-decentralized-website-ensmanager-4.png\"/>\n\nThen go to the `Other` tab\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f5f6f7\" img=\"/img/howto/v3-decentralized-website-ensmanager-5.png\"/>\n\nType in the `IPFS CID` you saved earlier into the `Content` field and then click `Save`\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f5f6f7\" img=\"/img/howto/v3-decentralized-website-ensmanager-6.png\"/>\n\nClick `Open Wallet` and confirm the transaction in your wallet.\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f5f6f7\" img=\"/img/howto/v3-decentralized-website-ensmanager-7.png\"/>\n\nWait for the transaction to complete.\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f5f6f7\" img=\"/img/howto/v3-decentralized-website-ensmanager-8.png\"/>\n\nOnce the transaction has completed you should see a screen like this, it means that the changes to the content record is now\nstored on-chain. Click `Done` to go back to the Manager.\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f5f6f7\" img=\"/img/howto/v3-decentralized-website-ensmanager-9.png\"/>\n\nYou should now see the `Content Hash` record populated with the IPFS CID you entered.\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f5f6f7\" img=\"/img/howto/v3-decentralized-website-ensmanager-10.png\"/>\n\nCongratulations! That's it! Now you can try visiting your website!\n\n:::info Compatible Browsers\nFor ENS resolution in the browser address bar to work, the browser needs to be compatible with ENS or have the Metamask extension installed.", "mimetype": "text/plain", "start_char_idx": 7230, "end_char_idx": 7256, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8bed5728-b2f6-43ee-add9-b7d08bf8ab63": {"__data__": {"id_": "8bed5728-b2f6-43ee-add9-b7d08bf8ab63", "embedding": null, "metadata": {"file_path": "docs/howto/decentralized-website.mdx", "file_name": "decentralized-website.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/decentralized-website.mdx", "header_path": "/Create a decentralized website/Configure your ENS name/", "customer_id": 1, "source_url": "docs/howto/decentralized-website.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["oriented", "other", "browser", "browsers", "towards", "which", "support", "extension", "proxy", "installed", "right", "metamask", "compatible"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4ce6409ac93c347526d700cb7e4966776926ff7f", "node_type": "4", "metadata": {"file_path": "docs/howto/decentralized-website.mdx", "file_name": "decentralized-website.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/decentralized-website.mdx"}, "hash": "0e4ce9271d0f4dee1301b80fc8dd7d05317c4abd0b2e59c586ba3e16b2efd975", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "26242539-e746-4f70-99ca-736833d72850", "node_type": "1", "metadata": {"file_path": "docs/howto/decentralized-website.mdx", "file_name": "decentralized-website.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/decentralized-website.mdx", "header_path": "/Create a decentralized website/Configure your ENS name/"}, "hash": "71b3a56353f4703e2314578a7bc2c7b4cb3f41ff1471cba8a17becc70fa047d0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### ENS Compatible browsers\nSome browsers which are more oriented towards Web3 support ENS right out of the box:\n - <Link to=\"https://brave.com\"><b>Brave Browser</b></Link>\n - <Link to=\"https://www.opera.com\"><b>Opera Browser</b></Link>\n \nOther browsers will need to have an extension installed for it to work, such as the Metamask browser extension:\n - <Link to=\"https://www.google.com/chrome\"><b>Google Chrome</b></Link>\n - <Link to=\"https://www.mozilla.org\"><b>Mozilla Firefox</b></Link>\n:::\n\n:::info ETH.limo proxy\nYou can also use the `eth.limo web3 proxy` by entering in your-ens-name.eth.limo into any browser address bar, regardless of if it supports\nENS names natively or not.\n:::", "mimetype": "text/plain", "start_char_idx": 9730, "end_char_idx": 10419, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "513c758f-b166-44a4-b069-bf1683d8ed9d": {"__data__": {"id_": "513c758f-b166-44a4-b069-bf1683d8ed9d", "embedding": null, "metadata": {"file_path": "docs/howto/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/index.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/howto/index.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["importing", "makes", "doccardlist", "domain", "cthulu", "import", "supports", "which", "possible", "integrate", "names"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "256e47d73d4bf60aca3133493ca95abf91fe00e4", "node_type": "4", "metadata": {"file_path": "docs/howto/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/index.mdx"}, "hash": "f0f454fd2fa1722b8db34109fe03ed105fc88a7e559136c53268b89c36b7d7b6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# ENS How-To\n\n```mdx-code-block\nimport DocCardList from '@theme/DocCardList';\n\n<DocCardList />\n``` ---\nlast_update:\n  author: cthulu\ntags:\n  - integrate\n  - dns\n  - .com\n  - .net\n  - .org\n  - .xyz\nkeywords: [ens dns, ens domain name system, add dns, link dns, import dns, integrate dns, use dns with ens, use ens with dns, use ens with domain name]\n--- # Integrate a DNS name\nENS supports importing DNS names into ENS, which makes it possible to use, for example, your .com .net or .org DNS name with ENS. Allowing you to use nearly all features of an ENS name with your DNS name.\n\nFor example: Coinbase *.cb.id usernames are all issued under their `cb.id` DNS name that was imported into ENS!\n\nThere are a few pre-requisites to importing a DNS name into ENS:\n\n - **The DNS name must have DNSSEC enabled with RSA/SHA-256 or ECDSA keys**\n - **An _ens TXT record must be created on the DNS name containing the wallet address to prove ownership of it.**\n\n:::info\nYou can only integrate existing DNS domain names that you own with ENS. You *cannot* create new domain names with non-existing\nTLD's this way.\n:::", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 98, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "064701cf-f27c-49fd-8f92-7ac9e9ecd22e": {"__data__": {"id_": "064701cf-f27c-49fd-8f92-7ac9e9ecd22e", "embedding": null, "metadata": {"file_path": "docs/howto/integrate-dns.mdx", "file_name": "integrate-dns.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/integrate-dns.mdx", "header_path": "/Integrate a DNS name/", "customer_id": 1, "source_url": "docs/howto/integrate-dns.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["integrating", "establish", "domain", "search", "enable", "before", "click", "connect", "integrate", "existing", "manager", "dnssec"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8eb314b0333c4ba493793dfd9ba2ce893a6547b9", "node_type": "4", "metadata": {"file_path": "docs/howto/integrate-dns.mdx", "file_name": "integrate-dns.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/integrate-dns.mdx"}, "hash": "3c680cc14b19c1aed7b9c22a4a280fbe2d04da8b40ac504e00eac041047f0fb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "04885ec6-e3ef-4a3f-848e-8538ba412763", "node_type": "1", "metadata": {"file_path": "docs/howto/integrate-dns.mdx", "file_name": "integrate-dns.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/integrate-dns.mdx", "header_path": "/"}, "hash": "8a955424ce494d54ae6aecf402047e053e59e306b244a3050260b0a4d7eb72ac", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d027899f-d481-447c-83c4-eb2a750d136c", "node_type": "1", "metadata": {"header_path": "/Integrate a DNS name/Integrating a DNS name/"}, "hash": "091e0dbc1ddc9ed006aec327f3a4f06b14ded436db6bb83e1dbfc41e2646db98", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Integrating a DNS name\nGo to the <Link to=\"https://app.ens.domains\"><b>ENS Manager App</b></Link>, connect your wallet, search for your DNS domain name and click on it to continue.\n<BrowserWindow url=\"app.ens.domains\">\n  <Image img=\"/img/howto/v3-integrate-dns-1.png\"/>\n</BrowserWindow> ### 1. Enable DNSSEC\nBefore we can integrate an existing DNS domain name with ENS we'll need to enable DNSSEC for it to establish a chain of trust between the domain name and ENS.\n\nNot all registrars or hosting providers support DNSSEC, and some only support it as an additional paid service.\n\n<BrowserWindow url=\"app.ens.domains\">\n  <Image img=\"/img/howto/v3-integrate-dns-3.png\"/>\n</BrowserWindow>\n\nOnce you've enabled DNSSEC press `Check` to continue.\n\n:::info\nIn order for your registrars or hosting providers DNSSEC to work with ENS it must use either `RSA/SHA-256` or `ECDSA` keys.  \n\nIf they don\u2019t, you\u2019ll need to migrate to a DNS provider that does. See `Hosting providers` below.\n\n<details>\n<summary>Hosting providers</summary>", "mimetype": "text/plain", "start_char_idx": 1010, "end_char_idx": 1299, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "98c87eed-6dec-4834-9563-836a8d588d43": {"__data__": {"id_": "98c87eed-6dec-4834-9563-836a8d588d43", "embedding": null, "metadata": {"file_path": "docs/howto/integrate-dns.mdx", "file_name": "integrate-dns.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/integrate-dns.mdx", "header_path": "/Integrate a DNS name/Integrating a DNS name/1. Enable DNSSEC/", "customer_id": 1, "source_url": "docs/howto/integrate-dns.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["providers", "types", "since", "verified", "hosting", "which", "support", "dnssec", "popular", "changed"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8eb314b0333c4ba493793dfd9ba2ce893a6547b9", "node_type": "4", "metadata": {"file_path": "docs/howto/integrate-dns.mdx", "file_name": "integrate-dns.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/integrate-dns.mdx"}, "hash": "3c680cc14b19c1aed7b9c22a4a280fbe2d04da8b40ac504e00eac041047f0fb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d027899f-d481-447c-83c4-eb2a750d136c", "node_type": "1", "metadata": {"file_path": "docs/howto/integrate-dns.mdx", "file_name": "integrate-dns.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/integrate-dns.mdx", "header_path": "/Integrate a DNS name/Integrating a DNS name/"}, "hash": "751c772c010c22c6af619a456aac4489c665871909759cd0252d698412a3c191", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "92e9d97c-933f-4bfc-bf23-935d8e086e53", "node_type": "1", "metadata": {"header_path": "/Integrate a DNS name/Integrating a DNS name/"}, "hash": "1dfd5b7c858f3775a6c73f0bf56539951d969e820bbae05547d6d761c70b0840", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "#### Hosting providers\nA list of popular hosting providers and which DNSSEC key types they support.[^1]\n\n[^1]: The key-types hosting providers support may have changed since this list was last verified on `June 22nd, 2022`.\n\n<div align='center'>\n\n| Hosting providers | DNSSEC | RSA/SHA-256 | ECDSA | Details                                                        |\n| ----------------- | ------ | ----------- | ----- | -------------------------------------------------------------- |\n| easyDNS           | `Yes`  | `Yes`       | `Yes` | [`DNSSEC Guide`](https://kb.easydns.com/knowledge/dnssec/)     |\n| Google Cloud DNS  | `Yes`  | `Yes`       | `Yes` | [`DNSSEC Guide`](https://cloud.google.com/dns/docs/registrars) |\n| Bluehost          | `Yes`  | `Yes`       | `Yes` |                                                                |\n| Hostinger         | `Yes`  | `Yes`       | `Yes` |                                                                |\n| Hostgator         | `Yes`  | `Yes`       | `Yes` |                                                                |\n| GoDaddy           | `Yes`  | `No`        | `Yes` |                                                                |\n| Wordpress         | `No`   | -           | -     |                                                                |\n| Namecheap         | `Yes`  | `Yes`       | `Yes` | [`DNSSEC Guide`](https://www.namecheap.com/support/knowledgebase/article.aspx/9722/2232/managing-dnssec-for-domains-pointed-to-custom-dns/) |\n\n</div>\n\n</details>\n\n:::\n\n---", "mimetype": "text/plain", "start_char_idx": 2039, "end_char_idx": 3572, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "92e9d97c-933f-4bfc-bf23-935d8e086e53": {"__data__": {"id_": "92e9d97c-933f-4bfc-bf23-935d8e086e53", "embedding": null, "metadata": {"file_path": "docs/howto/integrate-dns.mdx", "file_name": "integrate-dns.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/integrate-dns.mdx", "header_path": "/Integrate a DNS name/Integrating a DNS name/", "customer_id": 1, "source_url": "docs/howto/integrate-dns.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["management", "registrar", "ownership", "verify", "contents", "hosting", "domain", "using", "looks", "record", "following", "prove", "provide"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8eb314b0333c4ba493793dfd9ba2ce893a6547b9", "node_type": "4", "metadata": {"file_path": "docs/howto/integrate-dns.mdx", "file_name": "integrate-dns.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/integrate-dns.mdx"}, "hash": "3c680cc14b19c1aed7b9c22a4a280fbe2d04da8b40ac504e00eac041047f0fb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "98c87eed-6dec-4834-9563-836a8d588d43", "node_type": "1", "metadata": {"file_path": "docs/howto/integrate-dns.mdx", "file_name": "integrate-dns.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/integrate-dns.mdx", "header_path": "/Integrate a DNS name/Integrating a DNS name/1. Enable DNSSEC/"}, "hash": "081a8c6ae61a17eb1b99b48ad0d22168f2c3b282a52e2c1765884917664a7eaf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "46190a61-b40b-4acd-86ab-a2b1477f0297", "node_type": "1", "metadata": {"header_path": "/Integrate a DNS name/Integrating a DNS name/"}, "hash": "39c7533abf441483038dbe30d14353e1bca213bdedd799720b205a43eb6cc145", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### 2. Add the TXT-record\nIn this step you'll need to add a TXT-record to your domain name to provide ownership of it, using your registrar or hosting provider's management interface.\n<BrowserWindow url=\"app.ens.domains\">\n  <Image img=\"/img/howto/v3-integrate-dns-2.png\"/>\n</BrowserWindow>\n\nThe DNS Registrar on ENS looks for a `TXT record` to verify ownership of the domain. This record has the following attributes:\n\n<div align='center'>\n\n|          |                    |\n| -------- | -------------------|\n| Type     | `TXT`              |\n| Name     | `_ens`             |\n| Contents | `a=wallet address` |\n| TTL      | `36000`            |\n\n</div>\n\n<Tabs>\n  <TabItem value=\"Google DNS\" default>\n    <BrowserWindow url=\"cloud.google.com\">\n      <Image img=\"/img/howto/link-dns-name-3.webp\"/>\n    </BrowserWindow>\n  </TabItem>\n  <TabItem value=\"Namecheap\">\n    <BrowserWindow url=\"namecheap.com\">\n      <Image img=\"/img/howto/v3-integrate-dns-namecheap-1.png\"/>\n    </BrowserWindow>\n  </TabItem>\n</Tabs>\n\nTo prove ownership of your DNS name, create a `TXT record` in your DNS zone, _ens.yourdomain.xyz, with text data of the form `a=walletaddress`... where `walletaddress` is the Ethereum wallet you want to give control of the ENS record to.\n\n---", "mimetype": "text/plain", "start_char_idx": 3574, "end_char_idx": 4824, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "46190a61-b40b-4acd-86ab-a2b1477f0297": {"__data__": {"id_": "46190a61-b40b-4acd-86ab-a2b1477f0297", "embedding": null, "metadata": {"file_path": "docs/howto/integrate-dns.mdx", "file_name": "integrate-dns.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/integrate-dns.mdx", "header_path": "/Integrate a DNS name/Integrating a DNS name/", "customer_id": 1, "source_url": "docs/howto/integrate-dns.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["finish", "linking", "domain", "claim", "manager", "pressing", "should"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8eb314b0333c4ba493793dfd9ba2ce893a6547b9", "node_type": "4", "metadata": {"file_path": "docs/howto/integrate-dns.mdx", "file_name": "integrate-dns.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/integrate-dns.mdx"}, "hash": "3c680cc14b19c1aed7b9c22a4a280fbe2d04da8b40ac504e00eac041047f0fb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "92e9d97c-933f-4bfc-bf23-935d8e086e53", "node_type": "1", "metadata": {"file_path": "docs/howto/integrate-dns.mdx", "file_name": "integrate-dns.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/integrate-dns.mdx", "header_path": "/Integrate a DNS name/Integrating a DNS name/"}, "hash": "825da88801a804f8c55f7cd1e78db165d239da2aec958a7efcf9f59b46cfb3ce", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5e7120b2-2329-4415-b352-e6dd30b6bc60", "node_type": "1", "metadata": {"header_path": "/Integrate a DNS name/"}, "hash": "275a4025d2df3378ac8cacf927381de7c39d534fac3a2db05075a6c2e2a59a49", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### 3. Claim the DNS domain\nNow you should be able to go back to the <Link to=\"https://app.ens.domains\"><b>ENS Manager App</b></Link> and finish linking the DNS name with ENS by pressing `Register`.\n\n<BrowserWindow url=\"support.ensmods.xyz\">\n  <Image img=\"/img/howto/v3-integrate-dns-4.png\"/>\n</BrowserWindow>\n\n<BrowserWindow url=\"support.ensmods.xyz\">\n  <Image img=\"/img/howto/v3-integrate-dns-5.png\"/>\n</BrowserWindow>\n\n<BrowserWindow url=\"support.ensmods.xyz\">\n  <Image img=\"/img/howto/v3-integrate-dns-6.png\"/>\n</BrowserWindow>\n\n<BrowserWindow url=\"support.ensmods.xyz\">\n  <Image img=\"/img/howto/v3-integrate-dns-7.png\"/>\n</BrowserWindow>\n\n<BrowserWindow url=\"support.ensmods.xyz\">\n  <Image img=\"/img/howto/v3-integrate-dns-8.png\"/>\n</BrowserWindow>\n\n---", "mimetype": "text/plain", "start_char_idx": 4826, "end_char_idx": 5584, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5e7120b2-2329-4415-b352-e6dd30b6bc60": {"__data__": {"id_": "5e7120b2-2329-4415-b352-e6dd30b6bc60", "embedding": null, "metadata": {"file_path": "docs/howto/integrate-dns.mdx", "file_name": "integrate-dns.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/integrate-dns.mdx", "header_path": "/Integrate a DNS name/", "customer_id": 1, "source_url": "docs/howto/integrate-dns.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["amount", "changes", "updated", "proceeding", "troubleshooting", "propagate", "record", "refreshing", "waiting", "throughout", "import", "records", "detect", "manager", "dnssec"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8eb314b0333c4ba493793dfd9ba2ce893a6547b9", "node_type": "4", "metadata": {"file_path": "docs/howto/integrate-dns.mdx", "file_name": "integrate-dns.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/integrate-dns.mdx"}, "hash": "3c680cc14b19c1aed7b9c22a4a280fbe2d04da8b40ac504e00eac041047f0fb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "46190a61-b40b-4acd-86ab-a2b1477f0297", "node_type": "1", "metadata": {"file_path": "docs/howto/integrate-dns.mdx", "file_name": "integrate-dns.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/integrate-dns.mdx", "header_path": "/Integrate a DNS name/Integrating a DNS name/"}, "hash": "0669667c23b65158e7078957d406a2f9a37893edcb98de98ccb38cddba7fb595", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5dfec193-d008-41de-881e-cd72664b6fc4", "node_type": "1", "metadata": {"header_path": "/Integrate a DNS name/Troubleshooting/"}, "hash": "fe5ec170b00fde76e118e64c77b5f512a374403f63e2b524cff084d034ad684c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Troubleshooting ### I\u2019ve updated the DNS records, but it\u2019s not proceeding to the next steps.\nIt can take time for record changes in DNS to propagate throughout the Internet. If you are sure the records are set properly, try waiting for some amount of time and refreshing the DNS import page. ### I've set up DNSSEC but the ENS Manager App doesn't detect it\nUse a [DNSSEC Analyzer tool](https://dnssec-debugger.verisignlabs.com/) to look for errors. ---\ntitle: Change Name Wrapper Permissions\nlast_update:\n  author: serenae\ntags:\n  - namewrapper\n  - name wrapper\n  - wrapper\n  - namewrapper contract\n  - wrapper contract\n  - fuses\n  - permissions\n  - namewrapper fuses\n  - wrapper fuses\n  - namewrapper permissions\n  - wrapper permissions\nkeywords: [namewrapper, name wrapper, wrapper, namewrapper contract, wrapper contract, fuses, permissions, namewrapper fuses, wrapper fuses, namewrapper permissions, wrapper permissions]\ndescription: How to change Name Wrapper permissions with the ENS Manager App\n---", "mimetype": "text/plain", "start_char_idx": 5586, "end_char_idx": 5604, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d4985e12-8ce8-4490-ba07-e6c0fb242385": {"__data__": {"id_": "d4985e12-8ce8-4490-ba07-e6c0fb242385", "embedding": null, "metadata": {"file_path": "docs/howto/namewrapper/change-permissions.mdx", "file_name": "change-permissions.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/namewrapper/change-permissions.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/howto/namewrapper/change-permissions.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["transaction", "please", "changing", "expiry", "wrapper", "these", "review", "reversed", "before", "cannot", "revoking", "change", "permissions"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "061b771be8917b72b2a8d207265306431741a933", "node_type": "4", "metadata": {"file_path": "docs/howto/namewrapper/change-permissions.mdx", "file_name": "change-permissions.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/namewrapper/change-permissions.mdx"}, "hash": "217ded4f325ccddf3ed04c5f49b32dc822240709b4b392a30672549c07af172b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2005921a-39cd-4012-bf66-3186da70631f", "node_type": "1", "metadata": {"file_path": "docs/howto/namewrapper/change-permissions.mdx", "file_name": "change-permissions.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/namewrapper/change-permissions.mdx", "header_path": "/"}, "hash": "5aac061f7546db54cf41e8f0ad2370eb95da9fa71524e5d6bcc2e91ca30819df", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fa091c86-da71-4db5-8a39-96e46927a80e", "node_type": "1", "metadata": {"header_path": "/Change Name Wrapper Permissions/"}, "hash": "ec5368042ad029a0167fe991780fcb49446e81fd50fcda6a72a7343963f9d884", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Change Name Wrapper Permissions\n\nRevoking permissions is a `one-way` transaction that cannot be reversed (until the expiry is reached). Before changing any permissions on your name, please review these Name Wrapper sections to learn more:\n* <Link to=\"/dev-basics/namewrapper/overview\">Overview</Link>\n* <Link to=\"/dev-basics/namewrapper/states\">Wrapped States</Link>\n* <Link to=\"/dev-basics/namewrapper/fuses\">Fuses</Link>\n* <Link to=\"/dev-basics/namewrapper/expiry\">Expiry</Link>\n* <Link to=\"/dev-basics/namewrapper/approved-operators\">Approved Operators</Link>", "mimetype": "text/plain", "start_char_idx": 558, "end_char_idx": 1122, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fa091c86-da71-4db5-8a39-96e46927a80e": {"__data__": {"id_": "fa091c86-da71-4db5-8a39-96e46927a80e", "embedding": null, "metadata": {"file_path": "docs/howto/namewrapper/change-permissions.mdx", "file_name": "change-permissions.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/namewrapper/change-permissions.mdx", "header_path": "/Change Name Wrapper Permissions/", "customer_id": 1, "source_url": "docs/howto/namewrapper/change-permissions.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["warning", "automatically", "means", "parent", "control", "access", "wrapped", "emancipated", "first", "manager", "owner", "change", "permissions", "longer"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "061b771be8917b72b2a8d207265306431741a933", "node_type": "4", "metadata": {"file_path": "docs/howto/namewrapper/change-permissions.mdx", "file_name": "change-permissions.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/namewrapper/change-permissions.mdx"}, "hash": "217ded4f325ccddf3ed04c5f49b32dc822240709b4b392a30672549c07af172b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d4985e12-8ce8-4490-ba07-e6c0fb242385", "node_type": "1", "metadata": {"file_path": "docs/howto/namewrapper/change-permissions.mdx", "file_name": "change-permissions.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/namewrapper/change-permissions.mdx", "header_path": "/"}, "hash": "c475bd77316a3ee3447b0058e057b04b2b7a202c9c2f63cdc627a15e73430075", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "08f3f658-aa2a-46e0-94f1-49361114e4fb", "node_type": "1", "metadata": {"header_path": "/Change Name Wrapper Permissions/"}, "hash": "d0e832c84e6844ca00a5ffb7e7b0a4ea4c8ac3b33fa7d700791242d779f3626b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Permissions Tab\n\nOnce your name is wrapped in the Name Wrapper, you will have access to the `Permissions` tab in the ENS Manager App:\n<BrowserWindow url=\"https://app.ens.domains\" bg=\"#f5f6f7\" padding=\"25px\" img=\"/img/namewrapper-howto-permissions-1.png\"/>\n\nNote that you can only change permissions on a name if it has been <Link to=\"/dev-basics/namewrapper/states#emancipated\">Emancipated</Link> by the parent.\n\nOtherwise, you will see a warning like this:\n<BrowserWindow url=\"https://app.ens.domains\" bg=\"#f5f6f7\" padding=\"25px 25px 0px 25px\" img=\"/img/namewrapper-howto-permissions-2.png\"/>\n\n\"Emancipation\" means that the parent owner can no longer control the name. All .eth 2LDs (like `myname.eth`) are automatically emancipated when they are first wrapped.", "mimetype": "text/plain", "start_char_idx": 1124, "end_char_idx": 1889, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "08f3f658-aa2a-46e0-94f1-49361114e4fb": {"__data__": {"id_": "08f3f658-aa2a-46e0-94f1-49361114e4fb", "embedding": null, "metadata": {"file_path": "docs/howto/namewrapper/change-permissions.mdx", "file_name": "change-permissions.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/namewrapper/change-permissions.mdx", "header_path": "/Change Name Wrapper Permissions/", "customer_id": 1, "source_url": "docs/howto/namewrapper/change-permissions.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["means", "explained", "changes", "unwrap", "changing", "order", "fuses", "about", "click", "dialog", "permissions", "longer"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "061b771be8917b72b2a8d207265306431741a933", "node_type": "4", "metadata": {"file_path": "docs/howto/namewrapper/change-permissions.mdx", "file_name": "change-permissions.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/namewrapper/change-permissions.mdx"}, "hash": "217ded4f325ccddf3ed04c5f49b32dc822240709b4b392a30672549c07af172b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fa091c86-da71-4db5-8a39-96e46927a80e", "node_type": "1", "metadata": {"file_path": "docs/howto/namewrapper/change-permissions.mdx", "file_name": "change-permissions.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/namewrapper/change-permissions.mdx", "header_path": "/Change Name Wrapper Permissions/"}, "hash": "20c766241a5ef919a49fdb1d68fc268cfd4cad2ea8cb650d5e003522f136d9e4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "634183dc-c705-4b6c-a9ed-23e037d32a1d", "node_type": "1", "metadata": {"header_path": "/Change Name Wrapper Permissions/"}, "hash": "a66b46d8eb5074701e4a9a920efe93d48cbdcaeb4a53f0a3616a08acc112725c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Changing Permissions\n\nClick the `Change Permissions` button. A dialog will pop up to warn you about the changes you are about to make:\n<BrowserWindow url=\"https://app.ens.domains\" bg=\"#f5f6f7\" padding=\"25px\" img=\"/img/namewrapper-howto-permissions-3.png\"/>\n\nIf you agree, then click `I understand` to proceed.\n<BrowserWindow url=\"https://app.ens.domains\" bg=\"#f5f6f7\" padding=\"25px\" img=\"/img/namewrapper-howto-permissions-4.png\"/>\n\nAs explained in the <Link to=\"/dev-basics/namewrapper/fuses\">Fuses</Link> section, in order to burn owner-controlled fuses on a name, you must <Link to=\"/dev-basics/namewrapper/states#locked\">Lock</Link> that name first. This means that you will no longer be able to unwrap the name.\n\nClick the \"Revoke permission\" button to select it, and then click `Next` to move to the next step:\n<BrowserWindow url=\"https://app.ens.domains\" bg=\"#f5f6f7\" padding=\"25px\" img=\"/img/namewrapper-howto-permissions-5.png\"/>\n\nYou will now be able to select other permissions to revoke as you see fit.\n\nFor example, if you want to make the wrapped NFT non-transferrable, then you can revoke the \"Send this name\" permission.\n\nIf you only want to Lock the name, then you can click `Skip`. Otherwise, select the permissions you want to revoke, and click `Revoke` to move to the next step:\n<BrowserWindow url=\"https://app.ens.domains\" bg=\"#f5f6f7\" padding=\"25px\" img=\"/img/namewrapper-howto-permissions-6.png\"/>\n\nThe dialog will show you the selections you made earlier. Click on `Open Wallet` to send the transaction to your wallet to approve.\n\nOnce the transaction is confirmed, click on `Done`:\n<BrowserWindow url=\"https://app.ens.domains\" bg=\"#f5f6f7\" padding=\"25px\" img=\"/img/namewrapper-howto-permissions-7.png\"/>\n\nThe Permissions tab for your name will be updated to show which permissions you have revoked.\n\nYou can click on `Change permissions` to burn additional fuses on your name.\n\nOr, if you want to completely \"lock\" the name so that no additional fuses can be burned, then click on `Revoke permission` in the top section. That will revoke the \"permission to revoke permissions\" itself, so that the permissions on your name can no longer be changed at all.", "mimetype": "text/plain", "start_char_idx": 1891, "end_char_idx": 4073, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "634183dc-c705-4b6c-a9ed-23e037d32a1d": {"__data__": {"id_": "634183dc-c705-4b6c-a9ed-23e037d32a1d", "embedding": null, "metadata": {"file_path": "docs/howto/namewrapper/change-permissions.mdx", "file_name": "change-permissions.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/namewrapper/change-permissions.mdx", "header_path": "/Change Name Wrapper Permissions/", "customer_id": 1, "source_url": "docs/howto/namewrapper/change-permissions.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["unwrap", "parent", "underneath", "changing", "subnames", "subname", "cannot", "owner", "change", "permissions", "delete"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "061b771be8917b72b2a8d207265306431741a933", "node_type": "4", "metadata": {"file_path": "docs/howto/namewrapper/change-permissions.mdx", "file_name": "change-permissions.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/namewrapper/change-permissions.mdx"}, "hash": "217ded4f325ccddf3ed04c5f49b32dc822240709b4b392a30672549c07af172b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "08f3f658-aa2a-46e0-94f1-49361114e4fb", "node_type": "1", "metadata": {"file_path": "docs/howto/namewrapper/change-permissions.mdx", "file_name": "change-permissions.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/namewrapper/change-permissions.mdx", "header_path": "/Change Name Wrapper Permissions/"}, "hash": "a325647f9d11cae93757423d19c5a8d7a2493c5490521cfa31ad708f7b04ab15", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Changing Subname Permissions as the Parent Owner\n\nIf you have not yet <Link to=\"/dev-basics/namewrapper/states#emancipated\">Emancipated</Link> a subname, then as the owner of the parent, you will be able to delete the subname at any time:\n<BrowserWindow url=\"https://app.ens.domains\" bg=\"#f5f6f7\" padding=\"25px\" img=\"/img/namewrapper-howto-permissions-8.png\"/>\n\nAlso, if your parent name is `Locked` (meaning that you cannot unwrap it), you will now be able to change permissions on any subnames underneath your name:\n<BrowserWindow url=\"https://app.ens.domains\" bg=\"#f5f6f7\" padding=\"25px\" img=\"/img/namewrapper-howto-permissions-9.png\"/>\n\nFor example, if you want the owner of the subname to be able to extend their own expiry, then you can click on `Change permissions` and burn that fuse.\n\nTo <Link to=\"/dev-basics/namewrapper/states#emancipated\">Emancipate</Link> a subname, click on `Give up parent control` in the top section. A dialog will pop up to warn you about the changes you are about to make:\n<BrowserWindow url=\"https://app.ens.domains\" bg=\"#f5f6f7\" padding=\"25px\" img=\"/img/namewrapper-howto-permissions-3.png\"/>\n\nIf you agree, then click `I understand` to proceed.\n<BrowserWindow url=\"https://app.ens.domains\" bg=\"#f5f6f7\" padding=\"25px\" img=\"/img/namewrapper-howto-permissions-10.png\"/>\n\nClick the \"Give up ownership\" button to select it, and then click `Next` to move to the next step:\n<BrowserWindow url=\"https://app.ens.domains\" bg=\"#f5f6f7\" padding=\"25px\" img=\"/img/namewrapper-howto-permissions-11.png\"/>\n\nAs explained in the <Link to=\"/dev-basics/namewrapper/expiry\">Expiry</Link> section, when you burn fuses on a name, you must also set an expiry for it at the same time.\n\nThe maximum expiry you can set on a name is the expiry of the parent name. You can select `Max` to do this. Otherwise, you can select `Choose an earlier date` to set a different expiry.\n\nOnce you've made your choice, click `Next` to move to the next step:\n<BrowserWindow url=\"https://app.ens.domains\" bg=\"#f5f6f7\" padding=\"25px\" img=\"/img/namewrapper-howto-permissions-12.png\"/>\n\nIn this step, select which other permissions you want to change on the subname, if any. Note that once you give up control over this subname, you will `no longer be able to change any permissions`.\n\nSome of the permissions are greyed-out in the dialog by default. That's because if you want to revoke them, you must also <Link to=\"/dev-basics/namewrapper/states#locked\">Lock</Link> the subname at the same time. If you wish to do that, then click on \"Revoke permission to: Unwrap this name\", and then select any other permissions you want to change.\n\nIf you only want to Emancipate the name, then you can click `Skip`. Otherwise, select the permissions you want to revoke, and click `Revoke` to move to the next step:\n<BrowserWindow url=\"https://app.ens.domains\" bg=\"#f5f6f7\" padding=\"25px\" img=\"/img/namewrapper-howto-permissions-13.png\"/>\n\nThe dialog will show you the selections you made earlier. Click on `Open Wallet` to send the transaction to your wallet to approve.\n\nOnce the transaction is confirmed, click on `Done`:\n<BrowserWindow url=\"https://app.ens.domains\" bg=\"#f5f6f7\" padding=\"25px\" img=\"/img/namewrapper-howto-permissions-14.png\"/>\n\nThe Permissions tab for the subname will be updated to show which permissions you have revoked.\n\nFor example in this case, the subname was Emancipated and Locked, meaning:\n* The parent owner can no longer control the subname\n* The subname can no longer be unwrapped\n\nThe <Link to=\"/dev-basics/namewrapper/fuses#parent-controlled-fuses\">Extend Expiry</Link> permission was also granted, meaning:\n* The owner of the subname can now extend their own Expiry\n\nFinally, the <Link to=\"/dev-basics/namewrapper/fuses#owner-controlled-fuses\">Create Subnames</Link> permission was also revoked, meaning:\n* The owner of the subname cannot create further subnames underneath their name (like `further.sub.name.eth`).\n\nOn the Profile tab for the subname, you'll also see that you no longer have the ability to delete the subname:\n<BrowserWindow url=\"https://app.ens.domains\" bg=\"#f5f6f7\" padding=\"25px\" img=\"/img/namewrapper-howto-permissions-15.png\"/>", "mimetype": "text/plain", "start_char_idx": 4075, "end_char_idx": 8247, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3cad261b-5c1f-4af5-b4b3-b0783a1f0f1c": {"__data__": {"id_": "3cad261b-5c1f-4af5-b4b3-b0783a1f0f1c", "embedding": null, "metadata": {"file_path": "docs/howto/namewrapper/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/namewrapper/index.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/howto/namewrapper/index.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["unwrapping", "wrapper", "doccardlist", "import", "names", "contract", "namewrapper", "serenae"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "cfde068da88f58b217a6f3fd0338e9d045465c51", "node_type": "4", "metadata": {"file_path": "docs/howto/namewrapper/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/namewrapper/index.mdx"}, "hash": "03113f499b9abc72a370f001336ac08580fc18a724fd5ce6e2fe37672a8cea57", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Name Wrapper How-To\n\n```mdx-code-block\nimport DocCardList from '@theme/DocCardList';\n\n<DocCardList /> ---\r\ntitle: Unwrapping Names\r\nlast_update:\r\n  author: serenae\r\ntags:\r\n  - namewrapper\r\n  - name wrapper\r\n  - wrapper\r\n  - namewrapper contract\r\n  - wrapper contract\r\nkeywords: [namewrapper, name wrapper, wrapper, namewrapper contract, wrapper contract]\r\ndescription: How to unwrap a previously wrapped name\r\n--- # Unwrapping Names\r\n\r\nCurrently the ENS Manager App doesn't yet have this feature. It's on the roadmap, but in the meantime you can use this guide if you want to unwrap any names.\r\n\r\nNote that you can only unwrap a name if it hasn't been <Link to=\"/dev-basics/namewrapper/states#locked\">Locked</Link>. Or in other words, if you have not revoked the permission to unwrap it.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 103, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "24376799-52a9-4aea-9856-db549c3aeeb4": {"__data__": {"id_": "24376799-52a9-4aea-9856-db549c3aeeb4", "embedding": null, "metadata": {"file_path": "docs/howto/namewrapper/unwrap-names.mdx", "file_name": "unwrap-names.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/namewrapper/unwrap-names.mdx", "header_path": "/Unwrapping Names\r/", "customer_id": 1, "source_url": "docs/howto/namewrapper/unwrap-names.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["automatically", "enter", "helper", "transaction", "website", "unwrap", "address", "using", "small", "sense", "correct", "built", "still", "manager"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "41be55a09be5033f2eea524485b22120018082ff", "node_type": "4", "metadata": {"file_path": "docs/howto/namewrapper/unwrap-names.mdx", "file_name": "unwrap-names.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/namewrapper/unwrap-names.mdx"}, "hash": "c64dab8df0677345fdcd8c3d9e90018c1236752944b2d68c2b0d3c81cb40871f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c267eb84-8c57-4868-93d6-72191214e931", "node_type": "1", "metadata": {"file_path": "docs/howto/namewrapper/unwrap-names.mdx", "file_name": "unwrap-names.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/namewrapper/unwrap-names.mdx", "header_path": "/"}, "hash": "e01decd709fbd5cf36089d58d97325257adc84b5d8afda1fd27b82cce39f2e44", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b2a620fa-d63b-4c66-995c-b4f9987fd4a0", "node_type": "1", "metadata": {"header_path": "/Unwrapping Names\r/"}, "hash": "cf1be7b9dce2e18d49614c58c66b70b4f275570b52bf93b1fca69c04a8e7e4ae", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Using Unwrap Tool\r\n\r\nThis is a small helper website we built on the side to address some edge-cases that may not make sense for the ENS Manager App (or are still on the roadmap):\r\n\r\n<BrowserWindow url=\"https://tools.ens.domains/unwrap/\">\r\n  <div style={{'background':'#F7F7F7'}}>\r\n    <iframe src=\"https://tools.ens.domains/unwrap#embedded\" width=\"100%\" height=\"500px\"/>\r\n  </div>\r\n</BrowserWindow>\r\n\r\nEnter the name you want to unwrap and it will automatically send the correct transaction to your wallet.", "mimetype": "text/plain", "start_char_idx": 692, "end_char_idx": 1201, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b2a620fa-d63b-4c66-995c-b4f9987fd4a0": {"__data__": {"id_": "b2a620fa-d63b-4c66-995c-b4f9987fd4a0", "embedding": null, "metadata": {"file_path": "docs/howto/namewrapper/unwrap-names.mdx", "file_name": "unwrap-names.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/namewrapper/unwrap-names.mdx", "header_path": "/Unwrapping Names\r/", "customer_id": 1, "source_url": "docs/howto/namewrapper/unwrap-names.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["other", "invoke", "whether", "contract", "directly", "unwrap", "actual", "different", "method", "depending", "using", "instructions", "methods", "follow"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "41be55a09be5033f2eea524485b22120018082ff", "node_type": "4", "metadata": {"file_path": "docs/howto/namewrapper/unwrap-names.mdx", "file_name": "unwrap-names.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/namewrapper/unwrap-names.mdx"}, "hash": "c64dab8df0677345fdcd8c3d9e90018c1236752944b2d68c2b0d3c81cb40871f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "24376799-52a9-4aea-9856-db549c3aeeb4", "node_type": "1", "metadata": {"file_path": "docs/howto/namewrapper/unwrap-names.mdx", "file_name": "unwrap-names.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/namewrapper/unwrap-names.mdx", "header_path": "/Unwrapping Names\r/"}, "hash": "04d3e6094a7625c8a7c69e062a8fb6ad8acc6f1b2ef6d4cf29d7ce680f14b606", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "67794db1-fac7-4c2b-82f8-93fd20b64b3a", "node_type": "1", "metadata": {"header_path": "/Unwrapping Names\r/Using the contract directly\r/"}, "hash": "0b20415bbfe6b8b229a54664d30803c101a390eafdcca7a0266fce7c288cf0f4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Using the contract directly\r\n\r\nIf you want to invoke the unwrap contract methods directly, then follow the instructions in this section. The actual method to call will be different depending on whether it's a .eth second-level name, or any other name. ### For .eth 2LDs\r\n\r\nYou will need:\r\n - The **labelhash** for your .eth name, in hexadecimal format. See here for instructions: <Link to=\"/dev-basics/namehash#generating-a-labelhash\">Generating a Labelhash</Link>\r\n   - Example: If your name is `name.eth`, then you will calculate the labelhash for `name`.\r\n\r\nYou can interact directly with the Name Wrapper contract on Etherscan: https://etherscan.io/address/0xd4416b13d2b3a9abae7acd5d6c2bbdbe25686401#writeContract#F23\r\n\r\n<BrowserWindow url=\"etherscan.io\">\r\n  <Image img=\"/img/etherscan-connect-wallet.jpg\"/>\r\n</BrowserWindow>\r\n\r\nAt the top, click on \"Connect to Web3\" to connect your wallet. Then scroll down and expand the `unwrapETH2LD` method:\r\n\r\n<BrowserWindow url=\"etherscan.io\">\r\n  <Image img=\"/img/namewrapper-howto-unwrap1.jpg\"/>\r\n</BrowserWindow>\r\n\r\nEnter the three fields:\r\n - **labelhash:** The <Link to=\"/dev-basics/namehash#generating-a-labelhash\">labelhash</Link> for the name.\r\n - **registrant:** The owner of the name. Enter your address.\r\n - **controller:** The manager of the name. Enter your address.\r\n\r\nThen click on \"Write\" to send the transaction to your wallet.", "mimetype": "text/plain", "start_char_idx": 1205, "end_char_idx": 1459, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8a9ffdcc-9446-4a90-9854-b4c52eb7bf0a": {"__data__": {"id_": "8a9ffdcc-9446-4a90-9854-b4c52eb7bf0a", "embedding": null, "metadata": {"file_path": "docs/howto/namewrapper/unwrap-names.mdx", "file_name": "unwrap-names.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/namewrapper/unwrap-names.mdx", "header_path": "/Unwrapping Names\r/Using the contract directly\r/", "customer_id": 1, "source_url": "docs/howto/namewrapper/unwrap-names.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["other", "labelhash", "calculate", "directly", "parent", "namehash", "wrapper", "hexadecimal", "interact"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "41be55a09be5033f2eea524485b22120018082ff", "node_type": "4", "metadata": {"file_path": "docs/howto/namewrapper/unwrap-names.mdx", "file_name": "unwrap-names.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/namewrapper/unwrap-names.mdx"}, "hash": "c64dab8df0677345fdcd8c3d9e90018c1236752944b2d68c2b0d3c81cb40871f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "67794db1-fac7-4c2b-82f8-93fd20b64b3a", "node_type": "1", "metadata": {"file_path": "docs/howto/namewrapper/unwrap-names.mdx", "file_name": "unwrap-names.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/namewrapper/unwrap-names.mdx", "header_path": "/Unwrapping Names\r/Using the contract directly\r/"}, "hash": "acc1cf8b1e5a3117113d50a12dbbb9fb9f485cb0e4cb4dc41e8456cdd9cf1a0f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### For any other name\r\n\r\nYou will need:\r\n - The **namehash** for the parent name, in hexadecimal format. See here for instructions: <Link to=\"/dev-basics/namehash#generating-a-namehash\">Generating a Namehash</Link>\r\n   - Example: If your name is `sub.name.eth`, then you will calculate the namehash for `name.eth`.\r\n   - Example: If your name is `domain.xyz`, then you will calculate the namehash for `xyz`.\r\n - The **labelhash** for your name, in hexadecimal format. See here for instructions: <Link to=\"/dev-basics/namehash#generating-a-labelhash\">Generating a Labelhash</Link>\r\n   - Example: If your name is `sub.name.eth`, then you will calculate the labelhash for `sub`.\r\n   - Example: If your name is `domain.xyz`, then you will calculate the labelhash for `domain`.\r\n\r\nYou can interact directly with the Name Wrapper contract on Etherscan: https://etherscan.io/address/0xd4416b13d2b3a9abae7acd5d6c2bbdbe25686401#writeContract#F22\r\n\r\n<BrowserWindow url=\"etherscan.io\">\r\n  <Image img=\"/img/etherscan-connect-wallet.jpg\"/>\r\n</BrowserWindow>\r\n\r\nAt the top, click on \"Connect to Web3\" to connect your wallet. Then scroll down and expand the `unwrap` method:\r\n\r\n<BrowserWindow url=\"etherscan.io\">\r\n  <Image img=\"/img/namewrapper-howto-unwrap2.jpg\"/>\r\n</BrowserWindow>\r\n\r\nEnter the three fields:\r\n - **parentNode:** The <Link to=\"/dev-basics/namehash#generating-a-namehash\">namehash</Link> for the parent name.\r\n - **labelhash:** The <Link to=\"/dev-basics/namehash#generating-a-labelhash\">labelhash</Link> for the name.\r\n - **controller:** The manager of the name. Enter your address.\r\n\r\nThen click on \"Write\" to send the transaction to your wallet.", "mimetype": "text/plain", "start_char_idx": 2603, "end_char_idx": 4253, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "52e6db04-5d5a-41c6-8448-030dd8a0db5b": {"__data__": {"id_": "52e6db04-5d5a-41c6-8448-030dd8a0db5b", "embedding": null, "metadata": {"file_path": "docs/howto/namewrapper/wrap-eth-2ld.mdx", "file_name": "wrap-eth-2ld.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/namewrapper/wrap-eth-2ld.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/howto/namewrapper/wrap-eth-2ld.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["wrapper", "existing", "serenae", "contract", "namewrapper", "manager"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6805e171a6f0e8219bd991755d52c61da3691993", "node_type": "4", "metadata": {"file_path": "docs/howto/namewrapper/wrap-eth-2ld.mdx", "file_name": "wrap-eth-2ld.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/namewrapper/wrap-eth-2ld.mdx"}, "hash": "478a85df17d04eb506f69155e4ac5200b681bce290643da5be20fa28002a0991", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "944a3c8e-e56c-41fc-bedd-dcce6e0f4995", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "0797103b65d03dcd415374eec519712a21236943672b49b729d90a9b9a8c6810", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ntitle: Wrap an existing .eth 2LD\nlast_update:\n  author: serenae\ntags:\n  - namewrapper\n  - name wrapper\n  - wrapper\n  - namewrapper contract\n  - wrapper contract\nkeywords: [namewrapper, name wrapper, wrapper, namewrapper contract, wrapper contract]\ndescription: How to wrap an existing .eth 2LD with the ENS Manager App\n--- # Wrap an existing .eth 2LD\n\nIn the ENS Manager App, browse to your name. You should see a banner at the top with an `Upgrade` button:\n<BrowserWindow url=\"https://app.ens.domains\" bg=\"#f5f6f7\" padding=\"25px 25px 0px 25px\" img=\"/img/namewrapper-howto-wrap-eth-2ld-1.png\"/>\n\nClick the `Upgrade` button, and a dialog will pop up showing you the necessary steps:\n\n<BrowserWindow url=\"https://app.ens.domains\" bg=\"#f5f6f7\" padding=\"25px\" img=\"/img/namewrapper-howto-wrap-eth-2ld-2.png\"/>\n\n:::info\n - The first \"Migrate profile\" step refers to copying all your profile records into the new resolver contract.\n   - If you don't have any profile records set on your name, then you will not see this step.\n - The second \"Wrap name\" step will send your .eth ERC-721 NFT to the Name Wrapper contract. You will be issued the ERC-1155 wrapped NFT in return.\n:::\n\nClick on `Start` to begin the process. You will see a confirm screen for the first transaction:\n<BrowserWindow url=\"https://app.ens.domains\" bg=\"#f5f6f7\" padding=\"25px\" img=\"/img/namewrapper-howto-wrap-eth-2ld-3.png\"/>\n\n:::info\n - You will only see this step if you have any profile records set on your name. If you don't have any set, then skip to the next screenshot below.\n:::\n\nClick on `Open Wallet` to send the first transaction to your wallet for you to approve.\n\nOnce the transaction is confirmed, click on `Next` to go to the next step:\n<BrowserWindow url=\"https://app.ens.domains\" bg=\"#f5f6f7\" padding=\"25px\" img=\"/img/namewrapper-howto-wrap-eth-2ld-4.png\"/>\n\nClick on `Open Wallet` to send the second transaction to your wallet for you to approve.\n\nOnce the transaction is confirmed, click on `Done`:\n<BrowserWindow url=\"https://app.ens.domains\" bg=\"#f5f6f7\" padding=\"25px\" img=\"/img/namewrapper-howto-wrap-eth-2ld-5.png\"/>\n\nThat's it! Now your .eth 2LD is wrapped!\n\nYou'll be able to tell in the ENS Manager App, because there is no longer the \"Upgrade\" banner at the top. Also, you should now see the extra \"Permissions\" tab at the top.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 326, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bef86cf0-ead4-4ee6-aaa0-fb44d08a3072": {"__data__": {"id_": "bef86cf0-ead4-4ee6-aaa0-fb44d08a3072", "embedding": null, "metadata": {"file_path": "docs/howto/namewrapper/wrap-eth-2ld.mdx", "file_name": "wrap-eth-2ld.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/namewrapper/wrap-eth-2ld.mdx", "header_path": "/Wrap an existing .eth 2LD/", "customer_id": 1, "source_url": "docs/howto/namewrapper/wrap-eth-2ld.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["automatically", "access", "subnames", "wrapped", "under", "create", "steps", "instructions", "change", "subname", "existing", "permissions", "section"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6805e171a6f0e8219bd991755d52c61da3691993", "node_type": "4", "metadata": {"file_path": "docs/howto/namewrapper/wrap-eth-2ld.mdx", "file_name": "wrap-eth-2ld.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/namewrapper/wrap-eth-2ld.mdx"}, "hash": "478a85df17d04eb506f69155e4ac5200b681bce290643da5be20fa28002a0991", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "944a3c8e-e56c-41fc-bedd-dcce6e0f4995", "node_type": "1", "metadata": {"file_path": "docs/howto/namewrapper/wrap-eth-2ld.mdx", "file_name": "wrap-eth-2ld.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/namewrapper/wrap-eth-2ld.mdx", "header_path": "/"}, "hash": "a131981f88d10c8bbe5732156266a110faa5fd5f6a558d68b44f39ef6126095f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Next Steps\n\nNow that your .eth 2LD is wrapped, any subnames you create under this name will now automatically be wrapped as well.\n\nAlso, you will now have access to the Permissions (Fuses) section in the manager. Read the <Link to=\"/dev-basics/namewrapper/fuses\">Fuses</Link> page for more information, and the <Link to=\"/howto/namewrapper/change-permissions\">Change Permissions</Link> page for instructions on how to change permissions on wrapped names. ---\ntitle: Wrap an existing subname or DNS name\nlast_update:\n  author: serenae\ntags:\n  - namewrapper\n  - name wrapper\n  - wrapper\n  - namewrapper contract\n  - wrapper contract\nkeywords: [namewrapper, name wrapper, wrapper, namewrapper contract, wrapper contract]\ndescription: How to wrap an existing subname or DNS name with the ENS Manager App\n---", "mimetype": "text/plain", "start_char_idx": 2328, "end_char_idx": 2785, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9b6f5e50-0935-4187-a778-91c13f2f4b5f": {"__data__": {"id_": "9b6f5e50-0935-4187-a778-91c13f2f4b5f", "embedding": null, "metadata": {"file_path": "docs/howto/namewrapper/wrap-subname.mdx", "file_name": "wrap-subname.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/namewrapper/wrap-subname.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/howto/namewrapper/wrap-subname.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["transaction", "dialog", "banner", "wrapper", "existing", "should", "first", "browse", "subname", "click", "necessary", "approve", "contract", "showing", "manager"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5f666870ca123e44ec5df8d692ff862658fc6a3b", "node_type": "4", "metadata": {"file_path": "docs/howto/namewrapper/wrap-subname.mdx", "file_name": "wrap-subname.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/namewrapper/wrap-subname.mdx"}, "hash": "fdb94224501e7cec1906c976ca277c6cb7a00b1516f6f4de3be68e89c4048203", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "af1475e7-5024-4aa2-8a14-4ccb36e9b603", "node_type": "1", "metadata": {"file_path": "docs/howto/namewrapper/wrap-subname.mdx", "file_name": "wrap-subname.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/namewrapper/wrap-subname.mdx", "header_path": "/"}, "hash": "b2b16d7b362d2cbbbd3d0a74f04a7f1721e5dbeb0c51a20f30e5e9dc21973268", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2d6d4d76-a6fe-4e29-9d38-3dd82ee7c840", "node_type": "1", "metadata": {"header_path": "/Wrap an existing subname or DNS name/"}, "hash": "055e6b16aa3e4f8bfd9fc1b9fb0c591f3ab475aa390eb505c60ccbb4432dd785", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Wrap an existing subname or DNS name\n\nIn the ENS Manager App, browse to your name. You should see a banner at the top with an `Upgrade` button:\n<BrowserWindow url=\"https://app.ens.domains\" bg=\"#f5f6f7\" padding=\"25px 25px 0px 25px\" img=\"/img/namewrapper-howto-wrap-subname-1.png\"/>\n\nClick the `Upgrade` button, and a dialog will pop up showing you the necessary steps:\n<BrowserWindow url=\"https://app.ens.domains\" bg=\"#f5f6f7\" padding=\"25px\" img=\"/img/namewrapper-howto-wrap-subname-2.png\"/>\n\n:::info\n - The first \"Approve NameWrapper\" transaction will approve the Name Wrapper contract as an operator on the ENS registry for your account.\n   - If you have already done this in the past, then you will not see this step.\n - The second \"Migrate profile\" step refers to copying all your profile records into the new resolver contract.\n   - If you don't have any profile records set on your name, then you will not see this step.\n - The third \"Wrap name\" step will set the manager of your name to the Name Wrapper contract. You will be issued an ERC-1155 wrapped NFT in return.\n:::\n\nClick on `Start` to begin the process. You will see a confirm screen for the first transaction:\n<BrowserWindow url=\"https://app.ens.domains\" bg=\"#f5f6f7\" padding=\"25px\" img=\"/img/namewrapper-howto-wrap-subname-3.png\"/>\n\n\n:::info\n - You will only see this step if you have not already approved the Name Wrapper contract. If you have already done this step in the past, then skip to the next screenshot below.\n:::\n\nClick on `Open Wallet` to send the first transaction to your wallet for you to approve.\n\nOnce the transaction is confirmed, click on `Next` to go to the next step:\n<BrowserWindow url=\"https://app.ens.domains\" bg=\"#f5f6f7\" padding=\"25px\" img=\"/img/namewrapper-howto-wrap-subname-4.png\"/>\n\n\n:::info\n - You will only see this step if you have any profile records set on your name. If you don't have any set, then skip to the next screenshot below.\n:::\n\nClick on `Open Wallet` to send the second transaction to your wallet for you to approve.\n\nOnce the transaction is confirmed, click on `Next` to go to the next step:\n<BrowserWindow url=\"https://app.ens.domains\" bg=\"#f5f6f7\" padding=\"25px\" img=\"/img/namewrapper-howto-wrap-subname-5.png\"/>\n\n\nClick on `Open Wallet` to send the third transaction to your wallet for you to approve.\n\nOnce the transaction is confirmed, click on **Done**:\n<BrowserWindow url=\"https://app.ens.domains\" bg=\"#f5f6f7\" padding=\"25px 25px 0px 25px\" img=\"/img/namewrapper-howto-wrap-subname-6.png\"/>\n\n\nThat's it! Now your name is wrapped!\n\nYou'll be able to tell in the ENS Manager App, because there is no longer the \"Upgrade\" banner at the top. Also, you should now see the extra \"Permissions\" tab at the top.", "mimetype": "text/plain", "start_char_idx": 350, "end_char_idx": 3075, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2d6d4d76-a6fe-4e29-9d38-3dd82ee7c840": {"__data__": {"id_": "2d6d4d76-a6fe-4e29-9d38-3dd82ee7c840", "embedding": null, "metadata": {"file_path": "docs/howto/namewrapper/wrap-subname.mdx", "file_name": "wrap-subname.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/namewrapper/wrap-subname.mdx", "header_path": "/Wrap an existing subname or DNS name/", "customer_id": 1, "source_url": "docs/howto/namewrapper/wrap-subname.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["automatically", "access", "subnames", "wrapped", "under", "create", "instructions", "change", "register", "cthulu", "steps", "permissions", "section"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5f666870ca123e44ec5df8d692ff862658fc6a3b", "node_type": "4", "metadata": {"file_path": "docs/howto/namewrapper/wrap-subname.mdx", "file_name": "wrap-subname.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/namewrapper/wrap-subname.mdx"}, "hash": "fdb94224501e7cec1906c976ca277c6cb7a00b1516f6f4de3be68e89c4048203", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9b6f5e50-0935-4187-a778-91c13f2f4b5f", "node_type": "1", "metadata": {"file_path": "docs/howto/namewrapper/wrap-subname.mdx", "file_name": "wrap-subname.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/namewrapper/wrap-subname.mdx", "header_path": "/"}, "hash": "ed58aec1e398480745d470978711d59808aa983dfd5b99b551999702f9780dd7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Next Steps\n\nNow that your name is wrapped, any subnames you create under this name will now automatically be wrapped as well.\n\nAlso, you will now have access to the Permissions (Fuses) section in the manager. Read the <Link to=\"/dev-basics/namewrapper/fuses\">Fuses</Link> page for more information, and the <Link to=\"/howto/namewrapper/change-permissions\">Change Permissions</Link> page for instructions on how to change permissions on wrapped names. ---\ntitle: Register a Name\nlast_update:\n  author: cthulu\ntags:\n  - registration\nkeywords: [ens registration, ens register, ens register a name, ens name registration, name registration, ens registration, get your own ens, get your own ens name]\n---", "mimetype": "text/plain", "start_char_idx": 3077, "end_char_idx": 3530, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c61ab50e-2f00-46e1-bc94-0f154917aad2": {"__data__": {"id_": "c61ab50e-2f00-46e1-bc94-0f154917aad2", "embedding": null, "metadata": {"file_path": "docs/howto/registration.mdx", "file_name": "registration.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/registration.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/howto/registration.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["amount", "select", "beginning", "wallets", "provided", "search", "searched", "continue", "click", "during", "years", "register", "manager", "connect"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6fbb72630bb9a26289f6a3c5fff16389522ba38a", "node_type": "4", "metadata": {"file_path": "docs/howto/registration.mdx", "file_name": "registration.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/registration.mdx"}, "hash": "3ec226b1d42516c785442b27472f166b4cdfcd38d46e1849c6b1414875dc2f78", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b3f0e47a-a1da-4026-bf5a-73a1f9d52108", "node_type": "1", "metadata": {"file_path": "docs/howto/registration.mdx", "file_name": "registration.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/registration.mdx", "header_path": "/"}, "hash": "bdd4537f3d90c018c649ffe5f8bd99ed22edbb32fe4387a25edd6f7276aad3f9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2ce46360-778b-4204-b187-fb11b6592443", "node_type": "1", "metadata": {"header_path": "/How to register a name/"}, "hash": "74b6b0a026a741743bfd0f58f28c3fcc6166f7c6a7124c4c46cd5ef8298f7b41", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# How to register a name\n\nGo to the <Link to=\"https://app.ens.domains\"><b>ENS Manager App</b></Link> and connect your wallet. ## Search for the ENS name you want\n\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"125px\" bg=\"#f0f3f7\" img=\"/img/howto/v3-register-1_test.png\"/>\n\nProvided that the name you searched for is available, click on it to continue to the beginning of the registration.\n\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f3f4f7\" img=\"/img/howto/v3-register-2.png\"/>\n\nSelect the amount of years you want to register the name for, and if you'd like to set it as your wallets `Primary name`\nduring the registration process and then click `Next` \n\n:::info\nFor more information about what the `Primary name` does see:\n - <Link to=\"/core/records/primary-name\"><b>Records:</b> Primary Name</Link>\n:::", "mimetype": "text/plain", "start_char_idx": 250, "end_char_idx": 375, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8b6c685e-68dc-400b-b676-3c6dc04a1d9c": {"__data__": {"id_": "8b6c685e-68dc-400b-b676-3c6dc04a1d9c", "embedding": null, "metadata": {"file_path": "docs/howto/registration.mdx", "file_name": "registration.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/registration.mdx", "header_path": "/How to register a name/", "customer_id": 1, "source_url": "docs/howto/registration.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["additional", "multiple", "ahead", "selecting", "registration", "below", "during", "corresponding", "general", "records", "process", "section"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6fbb72630bb9a26289f6a3c5fff16389522ba38a", "node_type": "4", "metadata": {"file_path": "docs/howto/registration.mdx", "file_name": "registration.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/registration.mdx"}, "hash": "3ec226b1d42516c785442b27472f166b4cdfcd38d46e1849c6b1414875dc2f78", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2ce46360-778b-4204-b187-fb11b6592443", "node_type": "1", "metadata": {"file_path": "docs/howto/registration.mdx", "file_name": "registration.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/registration.mdx", "header_path": "/How to register a name/"}, "hash": "26e2cf1e83fdaea0cbe208f9badc04157af02518f0f81f5f902d28655fa8a8d7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9f51a5f4-4861-4639-a825-513eec5a5155", "node_type": "1", "metadata": {"header_path": "/How to register a name/"}, "hash": "5aff58188e1cacad6969f87df0a3c4952b7d4db0de22f6714a681c304e24c85c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Set additional records\nBy selecting `Edit Profile` during the registration process you can set multiple records in the registration transaction.\nSee the corresponding tab below to see what records you can set, or skip ahead to [Registering your ENS name](#registering-your-ens-name)\n\n<Tabs>\n<TabItem value=\"General\" default>\n\nFrom this section you can set General records:\n\n:::info General records\n - Nickname\n - Website\n - Location\n - Short Bio\n:::\n\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f3f4f7\" img=\"/img/howto/v3-register-cthulu-3_new.png\"/>\n</TabItem>\n<TabItem value=\"Social\">\n\nFrom the `Social` section you can add accounts with other services, such as:\n\n:::info Accounts\n - Twitter\n - Discord\n - GitHub\n:::\n\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f3f4f7\" img=\"/img/howto/v3-register-cthulu-4_new.png\"/>\n</TabItem>\n<TabItem value=\"Address\">\n\nFrom the `Address` section you can add your various wallet addresses.\nENS supports a wide variety of wallet addresses, for more information see:\n\n:::info Core Concepts\n - [**Records:** Coin Types](/core/records/coin-types)\n:::\n\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f3f4f7\" img=\"/img/howto/v3-register-cthulu-5_new.png\"/>\n</TabItem>\n<TabItem value=\"Website\">\n\nFrom the `Website` section you can point your ENS name to a decentralized website.\nFor more information, see:\n\n:::info Learning resources\n - [**Records:** Content Hash](/core/records/content-hash)\n - [**How-To:** Create a Decentralized Website](/howto/decentralized-website)\n:::\n\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f3f4f7\" img=\"/img/howto/v3-register-cthulu-6_new.png\"/>\n</TabItem>\n<TabItem value=\"Other\">\n\nFrom the `Other` tab you can set Custom Records and ABI records. For more information, see:\n\n:::info How-To\n - [**Records:** Custom Records](/core/records/custom-records)\n - [**How-To:** Add a Custom Record](/howto/add-custom-record)\n:::\n\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f3f4f7\" img=\"/img/howto/v3-register-cthulu-7_new.png\"/>\n</TabItem>\n</Tabs>", "mimetype": "text/plain", "start_char_idx": 1087, "end_char_idx": 3192, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9f51a5f4-4861-4639-a825-513eec5a5155": {"__data__": {"id_": "9f51a5f4-4861-4639-a825-513eec5a5155", "embedding": null, "metadata": {"file_path": "docs/howto/registration.mdx", "file_name": "registration.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/registration.mdx", "header_path": "/How to register a name/", "customer_id": 1, "source_url": "docs/howto/registration.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["graph", "transaction", "second", "registering", "active", "details", "waiting", "three", "inactive", "commit", "prevent", "classdef"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6fbb72630bb9a26289f6a3c5fff16389522ba38a", "node_type": "4", "metadata": {"file_path": "docs/howto/registration.mdx", "file_name": "registration.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/registration.mdx"}, "hash": "3ec226b1d42516c785442b27472f166b4cdfcd38d46e1849c6b1414875dc2f78", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8b6c685e-68dc-400b-b676-3c6dc04a1d9c", "node_type": "1", "metadata": {"file_path": "docs/howto/registration.mdx", "file_name": "registration.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/registration.mdx", "header_path": "/How to register a name/"}, "hash": "359722b41f525288812ec44f92cb7060db2aad1a8a5788c72fc5957a562e73e9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1858abab-4a6f-4c25-86c6-b1176278f366", "node_type": "1", "metadata": {"header_path": "/How to register a name/Registering your ENS name/"}, "hash": "297a719f29701d1c3644f1aee7c410a530ba8d64bcfffcc13b4e8482a901032e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Registering your ENS name\nRegistering an ENS name is a three step process:\n:::info Transaction details\n```mermaid\n%%{\n  init: {\n    'flowchart': {\n      'curve': 'linear'\n      } } }%%\n      \ngraph LR;\nA(Request to Register);\nB(Wait 60 Seconds);\nC(Register);\n\nclassDef active stroke-width:4px;\nclassDef inactive stroke-dasharray: 5 5;\n\nA-->B-->C;\n```\n\n 1. `Request to Register`  \n *A 0ETH commit transaction to prevent front-running*\n   \n 1. `Wait 60 Seconds`  \n *A 60 second waiting time*\n   \n 1. `Register`  \n *The actual Registration transaction*\n:::", "mimetype": "text/plain", "start_char_idx": 3194, "end_char_idx": 3750, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1858abab-4a6f-4c25-86c6-b1176278f366": {"__data__": {"id_": "1858abab-4a6f-4c25-86c6-b1176278f366", "embedding": null, "metadata": {"file_path": "docs/howto/registration.mdx", "file_name": "registration.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/registration.mdx", "header_path": "/How to register a name/Registering your ENS name/", "customer_id": 1, "source_url": "docs/howto/registration.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["graph", "transaction", "start", "performed", "request", "hashed", "registration", "active", "click", "inactive", "register", "where", "classdef", "class"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6fbb72630bb9a26289f6a3c5fff16389522ba38a", "node_type": "4", "metadata": {"file_path": "docs/howto/registration.mdx", "file_name": "registration.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/registration.mdx"}, "hash": "3ec226b1d42516c785442b27472f166b4cdfcd38d46e1849c6b1414875dc2f78", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9f51a5f4-4861-4639-a825-513eec5a5155", "node_type": "1", "metadata": {"file_path": "docs/howto/registration.mdx", "file_name": "registration.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/registration.mdx", "header_path": "/How to register a name/"}, "hash": "b7194eedfb4cd723007ced7636553b350086bd2b1773ed04dd378e33a056f838", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b27e9a55-8ca4-408c-9e9c-e9247c4acd88", "node_type": "1", "metadata": {"header_path": "/How to register a name/Registering your ENS name/"}, "hash": "9442850b49dfb029489640e432b9ca1f5c1e7a9db7a941aa23d82cbf481a4170", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Step 1: Request to register\n```mermaid\n%%{\n  init: {\n    'flowchart': {\n      'curve': 'linear'\n      } } }%%\n      \ngraph LR;\nA(Request to Register);\nB(Wait 60 Seconds);\nC(Register);\n\nclassDef active stroke-width:4px;\nclassDef inactive stroke-dasharray: 5 5;\n\nclass A active;\n\nA-->B-->C;\n```\nClick `Request to Register` to start **Step 1** of the registration process.\nA 0 ETH transaction is performed where your name is hashed with a secret key so that no one else can view the name you're trying to register.\n\n:::info\nWhile this transaction does not have a transaction value, it still incurs a gas fee.\n:::\n\n:::caution\n* This step stores a *secret key* in your browser's local storage. To avoid having to repeat this step, make sure to ***not*** clear your cache or switch browsers.\n\n* You have ***7 days*** to complete Step 3 before the `Request to Register` transaction expires. *However,* the ENS name is ***not reserved for you*** during this time.\n:::\n\nDouble-check that the registration length and fees are satisfactory, then press `Begin` to start the registration process.\n\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f3f4f7\" img=\"/img/howto/v3-register-cthulu-11.png\"/>\n\nClick `Open wallet` and approve the transaction in your wallet.\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f3f4f7\" img=\"/img/howto/v3-register-cthulu-12.png\"/>\n\nWait while the transaction is processed by the Ethereum blockchain.\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f3f4f7\" img=\"/img/howto/v3-register-cthulu-13.png\"/>", "mimetype": "text/plain", "start_char_idx": 3752, "end_char_idx": 5328, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b27e9a55-8ca4-408c-9e9c-e9247c4acd88": {"__data__": {"id_": "b27e9a55-8ca4-408c-9e9c-e9247c4acd88", "embedding": null, "metadata": {"file_path": "docs/howto/registration.mdx", "file_name": "registration.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/registration.mdx", "header_path": "/How to register a name/Registering your ENS name/", "customer_id": 1, "source_url": "docs/howto/registration.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["graph", "transaction", "inactive", "after", "completes", "front", "waiting", "active", "period", "prevent", "seconds", "classdef", "class"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6fbb72630bb9a26289f6a3c5fff16389522ba38a", "node_type": "4", "metadata": {"file_path": "docs/howto/registration.mdx", "file_name": "registration.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/registration.mdx"}, "hash": "3ec226b1d42516c785442b27472f166b4cdfcd38d46e1849c6b1414875dc2f78", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1858abab-4a6f-4c25-86c6-b1176278f366", "node_type": "1", "metadata": {"file_path": "docs/howto/registration.mdx", "file_name": "registration.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/registration.mdx", "header_path": "/How to register a name/Registering your ENS name/"}, "hash": "453427aaf57f9f53546237ce3430182c01f9e0f23a0821d90801d437a4e710a6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "95923a71-3e56-489e-a57e-aee7f7ac1425", "node_type": "1", "metadata": {"header_path": "/How to register a name/Registering your ENS name/"}, "hash": "ada59431141028a502ead70ff760de9a96cf1467ed5c06817a2820f243e0dc01", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Step 2: Wait 60 seconds\n```mermaid\n%%{\n  init: {\n    'flowchart': {\n      'curve': 'linear'\n      } } }%%\n      \ngraph LR;\nA(Request to Register);\nB(Wait 60 Seconds);\nC(Register);\n\nclassDef active stroke-width:4px;\nclassDef inactive stroke-dasharray: 5 5;\n\nclass A inactive;\nclass B active;\n\nA-->B-->C;\n```\nAfter the Step 1 transaction completes there's a 60-second waiting period to prevent front running.\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f3f4f7\" img=\"/img/howto/v3-register-cthulu-14.png\"/>\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f3f4f7\" img=\"/img/howto/v3-register-cthulu-15.png\"/>", "mimetype": "text/plain", "start_char_idx": 5330, "end_char_idx": 5976, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "95923a71-3e56-489e-a57e-aee7f7ac1425": {"__data__": {"id_": "95923a71-3e56-489e-a57e-aee7f7ac1425", "embedding": null, "metadata": {"file_path": "docs/howto/registration.mdx", "file_name": "registration.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/registration.mdx", "header_path": "/How to register a name/Registering your ENS name/", "customer_id": 1, "source_url": "docs/howto/registration.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["graph", "transaction", "transactions", "button", "inactive", "classdef", "active", "click", "confirm", "register", "through", "class"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6fbb72630bb9a26289f6a3c5fff16389522ba38a", "node_type": "4", "metadata": {"file_path": "docs/howto/registration.mdx", "file_name": "registration.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/registration.mdx"}, "hash": "3ec226b1d42516c785442b27472f166b4cdfcd38d46e1849c6b1414875dc2f78", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b27e9a55-8ca4-408c-9e9c-e9247c4acd88", "node_type": "1", "metadata": {"file_path": "docs/howto/registration.mdx", "file_name": "registration.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/registration.mdx", "header_path": "/How to register a name/Registering your ENS name/"}, "hash": "f669c9994507e7fd8cfd7b679245bc4765c74ee9b3ae76d932545810f2111207", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Step 3: Register\n```mermaid\n%%{\n  init: {\n    'flowchart': {\n      'curve': 'linear'\n      } } }%%\n      \ngraph LR;\nA(Request to Register);\nB(Wait 60 Seconds);\nC(Register);\n\nclassDef active stroke-width:4px;\nclassDef inactive stroke-dasharray: 5 5;\n\nclass A,B inactive;\nclass C active;\n\nA-->B-->C;\n```\nNow it's time to `Register` your ENS name. Click the register button and confirm the transaction in your wallet.\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f3f4f7\" img=\"/img/howto/v3-register-cthulu-16.png\"/>\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f3f4f7\" img=\"/img/howto/v3-register-cthulu-17.png\"/>\n\nCongratulations! If all transactions went through successfully you should now be the proud owner of your very own ENS name!\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f3f4f7\" img=\"/img/howto/v3-register-cthulu-18.png\"/>", "mimetype": "text/plain", "start_char_idx": 5978, "end_char_idx": 6875, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1431613f-6184-4cd6-8407-a758be8c2499": {"__data__": {"id_": "1431613f-6184-4cd6-8407-a758be8c2499", "embedding": null, "metadata": {"file_path": "docs/howto/renew-names.mdx", "file_name": "renew-names.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/renew-names.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/howto/renew-names.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["renew", "extend", "profile", "would", "zadok7", "search", "possible", "click", "names", "manager", "connect"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "91f59ef2c83163e9e6de39c67a5f232678f4dde3", "node_type": "4", "metadata": {"file_path": "docs/howto/renew-names.mdx", "file_name": "renew-names.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/renew-names.mdx"}, "hash": "c1026276665bee28484b0a18824d439bdbed9d5302fcb13a01f1990da083e2ea", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ntitle: Renew Names\nlast_update:\n  author: zadok7\ntags:\n - renew names\nkeywords: [renew names, extend names, bulk renewal]\n---\n\nGo to the <Link to=\"https://app.ens.domains\"><b>ENS Manager App</b></Link> and connect with your wallet. Search for the name you would like to renew and click on it to view its profile page. Click the `Extend` button.\n\n<BrowserWindow url=\"https://app.ens.domains\" bg=\"#f3f4f7\" img=\"/img/howto/v3-renew-names-1.png\"/>\n\n:::info\nIt is possible to renew a name that the connected wallet does not own or manage. Doing so does not make that wallet the owner of the name.\n:::\n\nPick the number of years you would like to extend the name\u2019s registration. Click \u201cNext\u201d, then \u201cOpen Wallet\u201d to confirm the transaction.\n<BrowserWindow url=\"https://app.ens.domains\" bg=\"#f3f4f7\" padding=\"25px\" img=\"/img/howto/v3-renew-names-2.png\"/>\n\nYou can also renew multiple names at the same time. Click on \u201cMy Names\u201d. Next, click on the multi-select checkmark button. Click on each name you would like to renew then click `Extend`\n<BrowserWindow url=\"https://app.ens.domains\" bg=\"#f3f4f7\" padding=\"25px\" img=\"/img/howto/v3-renew-names-3.png\"/>\n\nReview the names you want to extend, then click \u201cNext\u201d.\n<BrowserWindow url=\"https://app.ens.domains\" bg=\"#f3f4f7\" padding=\"25px\" img=\"/img/howto/v3-renew-names-4.png\"/>\n\nPick the number of years you would like to extend the names for and click \u201cNext\u201d.\n<BrowserWindow url=\"https://app.ens.domains\" bg=\"#f3f4f7\" padding=\"25px\" img=\"/img/howto/v3-renew-names-5.png\"/>\n\nClick \u201cOpen Wallet\u201d to confirm the transaction.\n<BrowserWindow url=\"https://app.ens.domains\" bg=\"#f3f4f7\" padding=\"25px\" img=\"/img/howto/v3-renew-names-6.png\"/>", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1677, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "85cb63ee-0a33-47b7-b5b9-b01e365027c7": {"__data__": {"id_": "85cb63ee-0a33-47b7-b5b9-b01e365027c7", "embedding": null, "metadata": {"file_path": "docs/howto/set-avatar.mdx", "file_name": "set-avatar.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/set-avatar.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/howto/set-avatar.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["profile", "learn", "record", "avatar", "update", "cthulu", "tutorial", "upload"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "661e95e290a052c60fea6cae09903d0bd8cbf614", "node_type": "4", "metadata": {"file_path": "docs/howto/set-avatar.mdx", "file_name": "set-avatar.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/set-avatar.mdx"}, "hash": "1bcf5dc01b15d3163e0fea2cac1577846a0062ce41d353d7721f727347603861", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c06f4eb4-1eb7-4998-8851-4bf62a6b052c", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "40dfaa3bd8531d9534189b26474ebb6d561f4f46de5a9bcdba393d3c54760607", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ntitle: Set an Avatar\nlast_update:\n  author: cthulu\ntags:\n  - avatar record\n  - avatar\n  - set avatar\nkeywords: [ens avatar, set avatar, set ens avatar, avatar, update avatar, upload avatar, avatar on ens name, ens profile picture, profile picture, ens name background, background]\n--- # How to set an Avatar\n\nIn this tutorial you will learn how to set an avatar on your ENS name. ## What does it do?\n\nThe avatar record allows you to select a custom background image for your ENS name `metadata` to display in services that support it.  \n\n<div class=\"container\" style={{'background': '', 'borderRadius': '8px'}}>\n  <div class=\"row\">\n    <div class=\"col\">\n      <div style={{'margin': \"auto\", 'padding': \"25px 0px 0px 0px\"}}>\n      <p align=\"center\"><b>Without the Avatar set</b></p>\n      </div>\n    </div>\n    <div class=\"col\">\n      <div style={{'margin': \"auto\", 'padding': \"25px 0px 0px 0px\"}}>\n      <p align=\"center\"><b>With the Avatar set</b></p>\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col\">\n      <div style={{'margin': \"auto\", 'padding': \"0px 12.5px 25px 25px\"}}>\n        <Image img=\"/img/avatar_notset.webp\" style={{'borderRadius': '8px'}}/>\n      </div>\n    </div>\n    <div class=\"col\">\n      <div style={{'margin': \"auto\", 'padding': \"0px 25px 25px 12.5px\"}}>\n        <Image img=\"/img/avatar_set.webp\" style={{'borderRadius': '8px'}}/>\n      </div>\n    </div>\n  </div>\n</div>", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 288, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "eb48e803-bc2d-4658-b795-e4ef7500e931": {"__data__": {"id_": "eb48e803-bc2d-4658-b795-e4ef7500e931", "embedding": null, "metadata": {"file_path": "docs/howto/set-avatar.mdx", "file_name": "set-avatar.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/set-avatar.mdx", "header_path": "/How to set an Avatar/", "customer_id": 1, "source_url": "docs/howto/set-avatar.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["profile", "directly", "bring", "avatar", "search", "click", "manage", "wallet", "names", "manager", "connect"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "661e95e290a052c60fea6cae09903d0bd8cbf614", "node_type": "4", "metadata": {"file_path": "docs/howto/set-avatar.mdx", "file_name": "set-avatar.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/set-avatar.mdx"}, "hash": "1bcf5dc01b15d3163e0fea2cac1577846a0062ce41d353d7721f727347603861", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8ef47e8e-a0c0-4695-a538-89832a7cdc9a", "node_type": "1", "metadata": {"file_path": "docs/howto/set-avatar.mdx", "file_name": "set-avatar.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/set-avatar.mdx", "header_path": "/How to set an Avatar/"}, "hash": "3045a756b115ed4ad94ceeb53f14f979784c96aa066a223e0130c7015f1e2a39", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e4ef987e-74a3-4b62-9849-400f8885ff74", "node_type": "1", "metadata": {"header_path": "/How to set an Avatar/Set the Avatar/"}, "hash": "bc0388666426b1463e3aab78ee4dfec2edc5697b532a13af10cc1433de1e1271", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Set the Avatar\nGo to the <Link to=\"https://app.ens.domains\"><b>ENS Manager App</b></Link> and make sure to connect with with the wallet set as `Manager` for the ENS name you want to manage and click `Names` to bring up a list\nof your ENS names *or* search for an ENS name you own directly from the main page.\n\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"0px\" bg=\"#f2f4f7\" img=\"/img/howto/v3-set-avatar-1.png\"/>\n\nClick the ENS name you want to set the Avatar on.\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"0px\" bg=\"#f2f4f7\" img=\"/img/howto/v3-set-avatar-2.png\"/>\n\nThen click `Edit profile` to go to your profile settings.\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f2f4f7\" img=\"/img/howto/v3-set-avatar-3.png\"/>\n\nClick the *\"Camera\"*-button to bring up a sub-menu of options to set your Avatar.\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f2f4f7\" img=\"/img/howto/v3-set-avatar-4.png\"/>", "mimetype": "text/plain", "start_char_idx": 1424, "end_char_idx": 2375, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e4ef987e-74a3-4b62-9849-400f8885ff74": {"__data__": {"id_": "e4ef987e-74a3-4b62-9849-400f8885ff74", "embedding": null, "metadata": {"file_path": "docs/howto/set-avatar.mdx", "file_name": "set-avatar.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/set-avatar.mdx", "header_path": "/How to set an Avatar/Set the Avatar/", "customer_id": 1, "source_url": "docs/howto/set-avatar.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["select", "avatar", "options", "computer", "image", "click", "wallet", "upload"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "661e95e290a052c60fea6cae09903d0bd8cbf614", "node_type": "4", "metadata": {"file_path": "docs/howto/set-avatar.mdx", "file_name": "set-avatar.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/set-avatar.mdx"}, "hash": "1bcf5dc01b15d3163e0fea2cac1577846a0062ce41d353d7721f727347603861", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "eb48e803-bc2d-4658-b795-e4ef7500e931", "node_type": "1", "metadata": {"file_path": "docs/howto/set-avatar.mdx", "file_name": "set-avatar.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/set-avatar.mdx", "header_path": "/How to set an Avatar/"}, "hash": "2c65325482bbfe2165b9c5153819e28feee94bd1d6b5483cd49a16b8a09320d0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5782aa45-2481-4e62-9120-218779f3e241", "node_type": "1", "metadata": {"header_path": "/How to set an Avatar/Set the Avatar/"}, "hash": "030d1e1b9e4eb878f2d116b195b0f56f058172c3d638159a5a995b1eac104529", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Select how to set your avatar\n\n:::info\nIn the sub-menu you have two options to set the NFT:\n 1. Upload an image from your computer\n 1. Select an NFT from your wallet\n:::\n\n<Tabs>\n<TabItem value=\"Upload an image from your computer\">\nTo upload an image file from your computer, click `Upload Image` and select an image file from your computer to upload.\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f2f4f7\" img=\"/img/howto/v3-set-avatar-5.png\"/>\n\nUse the slider to crop the image to your liking and click `Continue`\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f2f4f7\" img=\"/img/howto/v3-set-avatar-6-upload-image-1.png\"/>\n\nThen click `Sign and Upload` to start the upload process.\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f2f4f7\" img=\"/img/howto/v3-set-avatar-6-upload-image-2.png\"/>\n\n<!-- will add this section on release-day as the goerli manager app doesn't detect erc1155 nft's currently\n<TabItem value=\"Select an NFT from your wallet\">\n</TabItem>\n-->\n</TabItem>\n</Tabs>\n\nClick `Save` to save the changes\n:::info\nNote that this only saves them locally, and the next steps are required to publish it to the blockchain\n:::\n\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f2f4f7\" img=\"/img/howto/v3-set-avatar-7.png\"/>\n\nConfirm that the changes are correct, and then click `Open Wallet` and sign the transaction with your wallet\nto modify the ENS name on-chain.\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f2f4f7\" img=\"/img/howto/v3-set-avatar-8.png\"/>\n\nOnce you've signed the transaction in your wallet, wait for the transaction to complete.\n:::info\nThe speed of your transaction depends on Ethereum network congestion and the values set for gas on the transaction.\nThe higher you set the gas, the faster it will be performed.\nIf you set the gas too low, the transaction might stall and never complete.\n:::\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f2f4f7\" img=\"/img/howto/v3-set-avatar-9.png\"/>\n\nWhen the transaction has completed your avatar is set. Click `Done` to go back to the ENS name page.\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f2f4f7\" img=\"/img/howto/v3-set-avatar-10.png\"/>\n\nCongratulations! Your avatar is now set and should be visible from the ENS name page.\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f2f4f7\" img=\"/img/howto/v3-set-avatar-11.png\"/>", "mimetype": "text/plain", "start_char_idx": 2377, "end_char_idx": 4817, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5782aa45-2481-4e62-9120-218779f3e241": {"__data__": {"id_": "5782aa45-2481-4e62-9120-218779f3e241", "embedding": null, "metadata": {"file_path": "docs/howto/set-avatar.mdx", "file_name": "set-avatar.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/set-avatar.mdx", "header_path": "/How to set an Avatar/Set the Avatar/", "customer_id": 1, "source_url": "docs/howto/set-avatar.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["different", "services", "looks", "avatar", "using", "along", "which", "click", "shows", "popular", "wallet", "where", "manager"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "661e95e290a052c60fea6cae09903d0bd8cbf614", "node_type": "4", "metadata": {"file_path": "docs/howto/set-avatar.mdx", "file_name": "set-avatar.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/set-avatar.mdx"}, "hash": "1bcf5dc01b15d3163e0fea2cac1577846a0062ce41d353d7721f727347603861", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e4ef987e-74a3-4b62-9849-400f8885ff74", "node_type": "1", "metadata": {"file_path": "docs/howto/set-avatar.mdx", "file_name": "set-avatar.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/set-avatar.mdx", "header_path": "/How to set an Avatar/Set the Avatar/"}, "hash": "2dcebde4741804152a200d3b27c5bf2140fef028b0da35f9fd591ee80880eea4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9d2600a8-32e3-4d7e-b8ab-48b3605d8a20", "node_type": "1", "metadata": {"header_path": "/How to set an Avatar/"}, "hash": "1adbfbb260438721876100394d5fb1bb1f18f1e4e6945f5fb039dd250addb2ef", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Try it out!\nNow try using a few different services to see your new avatar in action! Here's how it looks in a few popular services:\n\n<Tabs>\n<TabItem value=\"ENS Manager\" default>\n\nThe `ENS Manager App/Site` will show your Avatar in the top-right corner, along with your wallet address.\n\n<BrowserWindow url=\"app.ens.domains\" padding=\"0px\" bg=\"#f2f4f6\" img=\"/img/howto/v3-set-avatar-services-ens.png\"/>\n\n<!--\nIf you click it, you'll get a sub-menu where you can go to your `Profile` which shows your avatar as well as\nother information set on your ENS name.\n\n<ImageWindow title=\"Go to your profile\">\n<p align={\"center\"}>\n<Image img=\"/img/howto/v3-set-avatar-services-ens-2.png\"/>\n</p>\n</ImageWindow>\n\n<BrowserWindow url=\"app.ens.domains\">\n<p align={\"center\"}>\n<div style={{'background-color': \"#f2f4f7\", 'padding': \"25px\"}}>\n<Image img=\"/img/howto/v3-set-avatar-services-ens-3.png\"/>\n</div>\n</p>\n</BrowserWindow>\n-->\n\n</TabItem>\n<TabItem value=\"Uniswap\">\n\nUniswap's App will show your Avatar in the top-right corner as well!\n\n<BrowserWindow url=\"app.uniswap.org\">\n<Image img=\"/img/howto/v3-set-avatar-services-uniswap.png\"/>\n</BrowserWindow>\n</TabItem>\n<TabItem value=\"OpenSea\">\n\nOpenSea does _not_ show your avatar the same way other sites do, because they have their own profile picture-settings,\n_but_ they do show avatars set on ENS names if you go to the ENS name itself.\n\nThis is useful if you want to make your ENS name stand out on OpenSea.\n\n<BrowserWindow url=\"opensea.io\">\n<Image img=\"/img/howto/v3-set-avatar-services-opensea.png\"/>\n</BrowserWindow>\n</TabItem>\n</Tabs>", "mimetype": "text/plain", "start_char_idx": 4819, "end_char_idx": 6399, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9d2600a8-32e3-4d7e-b8ab-48b3605d8a20": {"__data__": {"id_": "9d2600a8-32e3-4d7e-b8ab-48b3605d8a20", "embedding": null, "metadata": {"file_path": "docs/howto/set-avatar.mdx", "file_name": "set-avatar.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/set-avatar.mdx", "header_path": "/How to set an Avatar/", "customer_id": 1, "source_url": "docs/howto/set-avatar.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["issue", "troubleshooting", "encountering", "order", "avatar", "problems", "background", "might", "addressed", "image", "entire", "cover"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "661e95e290a052c60fea6cae09903d0bd8cbf614", "node_type": "4", "metadata": {"file_path": "docs/howto/set-avatar.mdx", "file_name": "set-avatar.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/set-avatar.mdx"}, "hash": "1bcf5dc01b15d3163e0fea2cac1577846a0062ce41d353d7721f727347603861", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5782aa45-2481-4e62-9120-218779f3e241", "node_type": "1", "metadata": {"file_path": "docs/howto/set-avatar.mdx", "file_name": "set-avatar.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/set-avatar.mdx", "header_path": "/How to set an Avatar/Set the Avatar/"}, "hash": "93869317a01ef46125130081ee10570dfc9cf71deb3743297f3a6ef0c8530c45", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "14fc7a72-8e32-4f93-aaec-d6881e3db53c", "node_type": "1", "metadata": {"header_path": "/How to set an Avatar/Troubleshooting/"}, "hash": "57b270a32c847602891d44549abe0215502e77e7930a1299f6dc12f753d98a3e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Troubleshooting\nIf you're encountering problems you might find your issue addressed below! ### The image on the avatar doesn't cover the entire background\nIn order for the image set as the avatar to cover the entire background it needs to be square.\nIf the image appears on your avatar with a border on sides or on the top, that's because you've set an image that isn't square (of equal width and height). ---\ntitle: Set a Primary Name\nlast_update:\n  author: cthulu\ntags:\n  - primary name\n  - identity\n  - did\nkeywords: [ens primary, ens primary name, set primary name, set a primary name, set a name on wallet, set wallet name, name my wallet, wallet naming]\n---", "mimetype": "text/plain", "start_char_idx": 6401, "end_char_idx": 6494, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "745c3709-7c2a-4594-a51e-1d6ca0b4677b": {"__data__": {"id_": "745c3709-7c2a-4594-a51e-1d6ca0b4677b", "embedding": null, "metadata": {"file_path": "docs/howto/set-primary-name.mdx", "file_name": "set-primary-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/set-primary-name.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/howto/set-primary-name.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["primary", "helping", "responsible", "services", "address", "guide", "record", "reverse", "display", "decentralized", "based", "wallet", "resolving"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b26356cf8a0228c5c69c8a0ea6a4d4409e64550e", "node_type": "4", "metadata": {"file_path": "docs/howto/set-primary-name.mdx", "file_name": "set-primary-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/set-primary-name.mdx"}, "hash": "fdb94405598aa777e69715eb6cacfeebc26898b73e79e071a8cd92b9c22370e3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c640fc61-bcfe-4ae9-a9ef-0ab27e99584e", "node_type": "1", "metadata": {"file_path": "docs/howto/set-primary-name.mdx", "file_name": "set-primary-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/set-primary-name.mdx", "header_path": "/"}, "hash": "cc0ce5deed70e837ff2c8e852ea20ff01d8a0187bf2fd8e5d6e3eb25b74df0b1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c2404728-8f37-4fea-ae7b-b08afc6683a6", "node_type": "1", "metadata": {"header_path": "/Set a Primary name/"}, "hash": "22f814e4646e6f080d359ce4dee1f2028946257e6933b593d69bac7c6083da3d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Set a Primary name\nThe Primary name is your reverse record responsible for resolving your wallet address to your ENS name, helping decentralized apps and services display your ENS name based on your *Ethereum* wallet address.\n\nIn this guide we'll show you how to set up your Primary Name.\n\n<BrowserWindow url=\"https://app.ens.domains\">\n  <div style={{'background':'#f0f6fa'}}>\n    <Image img=\"/img/howto/v3-set-avatar-services-ens.png\"/>\n  </div>\n</BrowserWindow>\n\nSetting a name as `Primary` in your wallet is usually a simple affair, but it can be a little complicated if:\n - **The name was registered using a third-party service that didn't set the `Resolver` and `ETH Address` records by default.**\n - **The name was purchased on a secondary market and the `ETH Address` record is still set to the previous owner's wallet.**\n\nIf either of these applies to you, then you can solve it by following the [Prerequisites](#prerequisites) section below.", "mimetype": "text/plain", "start_char_idx": 259, "end_char_idx": 1211, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c2404728-8f37-4fea-ae7b-b08afc6683a6": {"__data__": {"id_": "c2404728-8f37-4fea-ae7b-b08afc6683a6", "embedding": null, "metadata": {"file_path": "docs/howto/set-primary-name.mdx", "file_name": "set-primary-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/set-primary-name.mdx", "header_path": "/Set a Primary name/", "customer_id": 1, "source_url": "docs/howto/set-primary-name.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["order", "record", "smart", "public", "setting", "resolver", "click", "there", "prerequisites", "wallet", "manager"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b26356cf8a0228c5c69c8a0ea6a4d4409e64550e", "node_type": "4", "metadata": {"file_path": "docs/howto/set-primary-name.mdx", "file_name": "set-primary-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/set-primary-name.mdx"}, "hash": "fdb94405598aa777e69715eb6cacfeebc26898b73e79e071a8cd92b9c22370e3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "745c3709-7c2a-4594-a51e-1d6ca0b4677b", "node_type": "1", "metadata": {"file_path": "docs/howto/set-primary-name.mdx", "file_name": "set-primary-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/set-primary-name.mdx", "header_path": "/"}, "hash": "f5c542f46e61e2aa15444c57570b22267811d09f8034f226b78113b928e192fd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "97d16e27-04a2-48b9-8ee3-d2fdb6b78b91", "node_type": "1", "metadata": {"header_path": "/Set a Primary name/Prerequisites/"}, "hash": "357fc15fd03125f8a9571792d6c5feda54e188fd8f674daf775f651927d90feb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Prerequisites\nIn order to set an ENS name as `Primary` there are two prerequisites:\n1. **The Resolver record must be set to the `ENS Public Resolver` smart contract.**\n1. **The `ETH Address` record must be set to the wallet you're setting the `Primary` on.** ### 1. Set the **Resolver** {#set-the-resolver}\n\n<details>\n<summary>Set the Resolver Record</summary>\n\nGo to your ENS name in the [ENS Manager App](https://app.ens.domains) and click the `More`-tab.\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f5f6f7\" img=\"/img/howto/v3-set-resolver-1.png\"/>\n\nOn the `More`-tab make sure that the `Resolver` record there is set to either of these contract addresses:\n\n:::info\n - The **new** ENS Public Resolver contract: `0x231b0Ee14048e9dCcD1d247744d114a4EB5E8E63`\n - The **old** ENS Public Resolver contract: `0x4976fb03C32e5B8cfe2b6cCB31c09Ba78EBaBa41`  \n   _the old ENS Public Resolver contract will continue to work and should not cause any issues._\n:::\n\nIf it's not set to one of the addresses above, click the `Edit`-button next to the Resolver.\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f5f6f7\" img=\"/img/howto/v3-set-resolver-2.png\"/>\n\nSelect `Use Latest Resolver` and click `Update` and then approve the transaction in your wallet.\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f5f6f7\" img=\"/img/howto/v3-set-resolver-3.png\"/>\n\n</details>", "mimetype": "text/plain", "start_char_idx": 1213, "end_char_idx": 1474, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ebe4222b-23f3-43aa-9cb3-fe53a44502f5": {"__data__": {"id_": "ebe4222b-23f3-43aa-9cb3-fe53a44502f5", "embedding": null, "metadata": {"file_path": "docs/howto/set-primary-name.mdx", "file_name": "set-primary-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/set-primary-name.mdx", "header_path": "/Set a Primary name/Prerequisites/", "customer_id": 1, "source_url": "docs/howto/set-primary-name.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["directly", "bring", "address", "manage", "switch", "search", "click", "records", "wallet", "names", "manager"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b26356cf8a0228c5c69c8a0ea6a4d4409e64550e", "node_type": "4", "metadata": {"file_path": "docs/howto/set-primary-name.mdx", "file_name": "set-primary-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/set-primary-name.mdx"}, "hash": "fdb94405598aa777e69715eb6cacfeebc26898b73e79e071a8cd92b9c22370e3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "97d16e27-04a2-48b9-8ee3-d2fdb6b78b91", "node_type": "1", "metadata": {"file_path": "docs/howto/set-primary-name.mdx", "file_name": "set-primary-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/set-primary-name.mdx", "header_path": "/Set a Primary name/Prerequisites/"}, "hash": "3824f7f697db0e3bc7469668ecbc6f83c716decded1177206e077ec011b89133", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a023565d-8c16-472b-91c4-6b6c9b177a9c", "node_type": "1", "metadata": {"header_path": "/Set a Primary name/"}, "hash": "436fe054d8a8a64245e4f54b3d4415deea11552773a49cf055683b06af697ddf", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### 2. Set the **ETH Address**-record {#set-the-eth-address-record}\n\n<details>\n<summary>Set the ETH Address record</summary>\n\nGo to the <Link to=\"https://app.ens.domains\"><b>ENS Manager App</b></Link> with the wallet set as `Manager` for the ENS name you want to manage and click `Names` to bring up a list\nof your ENS names *or* search for an ENS name you own directly from the main page.\n\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f5f6f7\" img=\"/img/howto/v3-add-wallet-address-1.png\"/>\n\nClick the ENS name you want to add records to.\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f5f6f7\" img=\"/img/howto/v3-add-wallet-address-2.png\"/>\n\nGo to the `Records` tab\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f5f6f7\" img=\"/img/howto/v3-add-wallet-address-3.png\"/>\n\nClick `Edit Records`\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f5f6f7\" img=\"/img/howto/v3-add-wallet-address-4.png\"/>\n\nSwitch to the `Address` tab\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f5f6f7\" img=\"/img/howto/v3-add-wallet-address-5.png\"/>\n\nClick `Add Address`\n<BrowserWindow url=\"https://app.ens.domains\" padding=\"25px\" bg=\"#f5f6f7\" img=\"/img/howto/v3-add-wallet-address-6.png\"/>\n\n</details>", "mimetype": "text/plain", "start_char_idx": 2622, "end_char_idx": 3889, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a023565d-8c16-472b-91c4-6b6c9b177a9c": {"__data__": {"id_": "a023565d-8c16-472b-91c4-6b6c9b177a9c", "embedding": null, "metadata": {"file_path": "docs/howto/set-primary-name.mdx", "file_name": "set-primary-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/set-primary-name.mdx", "header_path": "/Set a Primary name/", "customer_id": 1, "source_url": "docs/howto/set-primary-name.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["primary", "point", "usually", "record", "because", "click", "resolve", "wallet"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b26356cf8a0228c5c69c8a0ea6a4d4409e64550e", "node_type": "4", "metadata": {"file_path": "docs/howto/set-primary-name.mdx", "file_name": "set-primary-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/set-primary-name.mdx"}, "hash": "fdb94405598aa777e69715eb6cacfeebc26898b73e79e071a8cd92b9c22370e3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ebe4222b-23f3-43aa-9cb3-fe53a44502f5", "node_type": "1", "metadata": {"file_path": "docs/howto/set-primary-name.mdx", "file_name": "set-primary-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/set-primary-name.mdx", "header_path": "/Set a Primary name/Prerequisites/"}, "hash": "6655afd41d1392ac2478ea454e2623007bcd024e3094fde5df942ef12064af36", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f3afce35-a7cc-4bf3-84de-552d074b2704", "node_type": "1", "metadata": {"header_path": "/Set a Primary name/"}, "hash": "4c85717197d211dff88c618a52b1aab248ff309a9d9eb3f261b42904411cbf77", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Set the Primary name\nClick the ENS name you want to set as `Primary` in your wallet.\n<BrowserWindow url=\"https://app.ens.domains\" bg=\"#f3f4f7\" img=\"/img/howto/v3-set-primary-name-2.png\"/>\n\nClick `Set as Primary name`\n<BrowserWindow url=\"https://app.ens.domains\" bg=\"#f3f4f7\" img=\"/img/howto/v3-set-primary-name-3.png\"/>\n\n:::tip\nIf your ENS name doesn't show up in the Primary drop-down list, it's usually because the ENS name's `ETH Address` record doesn't point to your ENS name. To resolve it, see\n - <Link to=\"/howto/add-wallet-address#eth-address\"><b>How-To: </b>Add a Wallet Address</Link>\n:::", "mimetype": "text/plain", "start_char_idx": 3891, "end_char_idx": 4492, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f3afce35-a7cc-4bf3-84de-552d074b2704": {"__data__": {"id_": "f3afce35-a7cc-4bf3-84de-552d074b2704", "embedding": null, "metadata": {"file_path": "docs/howto/set-primary-name.mdx", "file_name": "set-primary-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/set-primary-name.mdx", "header_path": "/Set a Primary name/", "customer_id": 1, "source_url": "docs/howto/set-primary-name.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["primary", "works", "different", "verify", "services", "visit", "corner", "along", "working", "shows", "systems", "wallet", "manager"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b26356cf8a0228c5c69c8a0ea6a4d4409e64550e", "node_type": "4", "metadata": {"file_path": "docs/howto/set-primary-name.mdx", "file_name": "set-primary-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/set-primary-name.mdx"}, "hash": "fdb94405598aa777e69715eb6cacfeebc26898b73e79e071a8cd92b9c22370e3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a023565d-8c16-472b-91c4-6b6c9b177a9c", "node_type": "1", "metadata": {"file_path": "docs/howto/set-primary-name.mdx", "file_name": "set-primary-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/set-primary-name.mdx", "header_path": "/Set a Primary name/"}, "hash": "2603b73a4f910ea12e3af76fe640ddea0d0314c3858fb9cd5015333425c11966", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Verify that your Primary name works\n\nVisit a few different services and verify that your `Primary name` is working correctly:\n\n<Tabs>\n<TabItem value=\"ENS Manager\" default>\n\nThe [ENS Manager App](https://app.ens.domains) will show your `Primary name` and the `Avatar` set on it in the top-right corner, along with your wallet address.\n<BrowserWindow url=\"https://app.ens.domains\" bg=\"#f5f6f7\" img=\"/img/howto/v3-set-primary-name-verify-ensmanager.png\"/>\n\n</TabItem>\n<TabItem value=\"Uniswap\">\n\n[Uniswap](https://app.uniswap.org) will show your `Primary name` and its `Avatar` in the top-right corner as well!\n\n<BrowserWindow url=\"https://app.uniswap.org\" img=\"/img/howto/v3-set-avatar-services-uniswap.png\"/>\n</TabItem>\n<TabItem value=\"OpenSea\">\n\n[OpenSea](https://opensea.io) shows your `Primary name` on your user's page next to your wallet address.\n:::caution note\nOpenSea's systems are _very_ slow to update to reflect any changes, please allow at least 24 hours for the `Primary name` to show.\n:::\n\n<BrowserWindow url=\"https://opensea.io\" img=\"/img/howto/set-primary-name-verify-opensea.png\"/>\n</TabItem>\n<TabItem value=\"etherscan\">\n\n[Etherscan](https://etherscan.io) will show your `Primary name` in the to and from address sections in the transaction list:\n\n<BrowserWindow url=\"https://etherscan.io\" img=\"/img/howto/set-primary-name-verify-etherscan-1.png\"/>\n\nAnd also on top of the wallet overview:\n\n<BrowserWindow url=\"https://etherscan.io\" img=\"/img/howto/set-primary-name-verify-etherscan-2.png\"/>\n\n</TabItem>\n</Tabs>", "mimetype": "text/plain", "start_char_idx": 4494, "end_char_idx": 6023, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "897a97ad-1d55-4ece-bd2c-2da03d5c5b81": {"__data__": {"id_": "897a97ad-1d55-4ece-bd2c-2da03d5c5b81", "embedding": null, "metadata": {"file_path": "docs/howto/set-record.mdx", "file_name": "set-record.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/set-record.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/howto/set-record.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["alter", "modify", "bring", "record", "update", "cthulu", "create", "search", "click", "manage", "wallet", "change", "names", "manager"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f5c8b41f6f9d156b76b0958190399db8535aca38", "node_type": "4", "metadata": {"file_path": "docs/howto/set-record.mdx", "file_name": "set-record.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/set-record.mdx"}, "hash": "5a2eadd65f8ba812176caee7ee9d6b2d93028aa7074d7fe4e5890fb7601b53d5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ntitle: Set a Record\nlast_update:\n  author: cthulu\ntags:\n - set record\nkeywords: [ens record, ens records, set record, add record, create record, update record, change record, alter record, modify record, record, records]\n---\n\nGo to the <Link to=\"https://app.ens.domains\"><b>ENS Manager App</b></Link> with the wallet set as `Manager` for the ENS name you want to manage and click `Names` to bring up a list\nof your ENS names *or* search for an ENS name you own directly from the main page.\n\n<BrowserWindow url=\"https://app.ens.domains\" bg=\"#f3f4f7\" img=\"/img/howto/v3-set-record-1.png\"/>\n\nClick the ENS name you want to add records to.\n\n<BrowserWindow url=\"https://app.ens.domains\" bg=\"#f3f4f7\" padding=\"25px\" img=\"/img/howto/v3-set-record-2.png\"/>\n\nGo to the `Records` tab\n<BrowserWindow url=\"https://app.ens.domains\" bg=\"#f3f4f7\" padding=\"25px\" img=\"/img/howto/v3-set-record-3.png\"/>\n\nClick `Edit Records`\n<BrowserWindow url=\"https://app.ens.domains\" bg=\"#f3f4f7\" padding=\"25px\" img=\"/img/howto/v3-set-record-4.png\"/>\n\nClick `Add Record`\n<BrowserWindow url=\"https://app.ens.domains\" bg=\"#f3f4f7\" padding=\"25px\" img=\"/img/howto/v3-set-record-5.png\"/>\n\nIn the new field that appears, type in the name of your Custom Record. Records traditionally use a reverse notation, e.g. `com.youtube` for youtube.com\nand then click `Add`\n\n<BrowserWindow url=\"https://app.ens.domains\" bg=\"#f3f4f7\" padding=\"25px\" img=\"/img/howto/v3-set-record-6-text-2.png\"/>\n\nType in a value for your new record, and click `Save`\n<BrowserWindow url=\"https://app.ens.domains\" bg=\"#f3f4f7\" padding=\"25px\" img=\"/img/howto/v3-set-record-6-text-3.png\"/>\n\nThen click `Open Wallet` and approve the transaction in your wallet.\n<BrowserWindow url=\"https://app.ens.domains\" bg=\"#f3f4f7\" padding=\"25px\" img=\"/img/howto/v3-set-record-6-text-4.png\"/>\n\nWait for the transaction to complete.\n<BrowserWindow url=\"https://app.ens.domains\" bg=\"#f3f4f7\" padding=\"25px\" img=\"/img/howto/v3-set-record-6-text-5.png\"/>\n\nOnce the transaction has completed your record is stored on-chain and should be immediately accessible.\n<BrowserWindow url=\"https://app.ens.domains\" bg=\"#f3f4f7\" padding=\"25px\" img=\"/img/howto/v3-set-record-6-text-6.png\"/>", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2194, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cab8e801-cea7-4ac9-a126-ab4772a874d2": {"__data__": {"id_": "cab8e801-cea7-4ac9-a126-ab4772a874d2", "embedding": null, "metadata": {"file_path": "docs/howto/set-twitter-name.mdx", "file_name": "set-twitter-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/set-twitter-name.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/howto/set-twitter-name.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["social", "profile", "media", "verify", "twitter", "first", "cthulu", "setting", "integrate", "change", "simpler"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d2b8ca6e684ba428a41e44ae62a651f9c310dd67", "node_type": "4", "metadata": {"file_path": "docs/howto/set-twitter-name.mdx", "file_name": "set-twitter-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/set-twitter-name.mdx"}, "hash": "1456d88516dd0abc0a846f56aa64805470017b99bcde3d3318f33e9fc7b46c77", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "40b38591-b9fd-485e-bf86-88b9a4c28208", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "2737b5b16042703ba156b498287861282b70842c89dc3057b2f5193c69116a90", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\nlast_update:\n  author: cthulu\ntags:\n  - twitter\n  - profile\n  - social media\nkeywords: [ens twitter, twitter, set ens on twitter, twitter ens, ens name on twitter, change ens on twitter, ens name twitter, ens name on twitter, set ens name twitter]\n--- # Set a Twitter name\n\nTwitter does not yet integrate ENS names, or verify them, so setting them as your Twitter name is simpler than it first appears.\nAll you need to do is to edit your name and enter it in! ### Edit your Twitter profile\nGo to <Link to=\"https://www.twitter.com\"><b>Twitter</b></Link> and click on your `Profile`\n\n<BrowserWindow url=\"https://twitter.com\" bg=\"#000000\" img=\"/img/howto/set-twitter-name-1.png\"/>\n\nClick the `Edit` button in the upper right of your profile page to edit it.\n<BrowserWindow url=\"https://twitter.com\" bg=\"#000000\" img=\"/img/howto/set-twitter-name-2.png\"/>\n\nType in your ENS name in the `Name` field\n<BrowserWindow url=\"https://twitter.com\" bg=\"#242d34\" img=\"/img/howto/set-twitter-name-3.png\"/>\n\nPress `Save` to save it.\n<BrowserWindow url=\"https://twitter.com\" bg=\"#242d34\" img=\"/img/howto/set-twitter-name-4.png\"/>\n\nThat's it! You're done and should now be sporting your ENS name on Twitter!\n<BrowserWindow url=\"https://twitter.com\" bg=\"#000000\" img=\"/img/howto/set-twitter-name-5.png\"/>", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 255, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "94109ae1-2579-42ab-a183-aea84e1b5eec": {"__data__": {"id_": "94109ae1-2579-42ab-a183-aea84e1b5eec", "embedding": null, "metadata": {"file_path": "docs/howto/test-v3-manager.mdx", "file_name": "test-v3-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/test-v3-manager.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/howto/test-v3-manager.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["goerli", "alpha", "version", "zadok7", "released", "preview", "third", "manager"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a61f1b9ded63c52a5b65dd3b430aca551f7ea64e", "node_type": "4", "metadata": {"file_path": "docs/howto/test-v3-manager.mdx", "file_name": "test-v3-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/test-v3-manager.mdx"}, "hash": "195d7cc414033c3cffe37582c8c5bdb1b68588400dc1b7b8f32cdc5b3ba21d34", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "41b4dc51-37e4-462a-8947-36b2a695fdf1", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "714e593394b8ca3d69c726fe874b543316fb2da8e9de24c7b61a66f37753a49e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\nlast_update:\n  author: zadok7\ntags:\n  - V3 Manager\n  - Manager App\n  - Goerli\ndraft: true\nkeywords: [test v3 manager, test v3 manager app, test alpha manager, test ens alpha manager, v3 manager preview, preview v3 manager, preview alpha manager]\n--- # Test the V3 Manager App\nSoon to be released is the third version (V3) of the ENS Manager app. With this release comes many new features to streamline the registration process, as well as integrating new features such as the new NameWrapper contract permissions. You can read more about recent updates to the [NameWrapper on the ENS DAO governance forums](https://discuss.ens.domains/t/name-wrapper-update/12974). For more information on the NameWrapper and other front-end upgrades, be sure to watch the [ENS Town Hall stream where Jeff Lau explains the Name Wrapper](https://youtu.be/fPSvO5PV5Is?t=864) along with other upcoming changes. Let's get started testing out some new features.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 253, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "630bac84-83af-4d67-8636-ac73b69bc032": {"__data__": {"id_": "630bac84-83af-4d67-8636-ac73b69bc032", "embedding": null, "metadata": {"file_path": "docs/howto/test-v3-manager.mdx", "file_name": "test-v3-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/test-v3-manager.mdx", "header_path": "/Test the V3 Manager App/", "customer_id": 1, "source_url": "docs/howto/test-v3-manager.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["goerli", "testnet", "allows", "setup", "developers", "network", "switch", "using", "first", "others", "wallet", "option", "blockchain"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a61f1b9ded63c52a5b65dd3b430aca551f7ea64e", "node_type": "4", "metadata": {"file_path": "docs/howto/test-v3-manager.mdx", "file_name": "test-v3-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/test-v3-manager.mdx"}, "hash": "195d7cc414033c3cffe37582c8c5bdb1b68588400dc1b7b8f32cdc5b3ba21d34", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "41b4dc51-37e4-462a-8947-36b2a695fdf1", "node_type": "1", "metadata": {"file_path": "docs/howto/test-v3-manager.mdx", "file_name": "test-v3-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/test-v3-manager.mdx", "header_path": "/"}, "hash": "750265c47d3af33edae38463387c4edb49d3c282a3d44eb201d8edb75ed7caf1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "133529db-14dc-4442-858b-f447790642d2", "node_type": "1", "metadata": {"header_path": "/Test the V3 Manager App/Using Goerli (G\u00f6rli) Testnet/"}, "hash": "8098ef54fd79c4f607806f83db367bcc1a8b7886f8883fbb7cb42701fef12a22", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Using Goerli (G\u00f6rli) Testnet\nYou'll need to first make sure you have a wallet setup with the option to switch over to the Goerli test network. Using a test network allows developers and others to test blockchain development before it is released on Ethereum Mainnet. If you'd like to read more about the contracts deployed on Testnet, you can find the deployed [ENS Goerli contract addresses and details in this post](https://discuss.ens.domains/t/deployment-of-new-contracts-inc-namewrapper-to-testnet-goerli/14505).\n\n\u00a0There are many wallets that support switching to the Goerli network. Metamask is a common one, along with Coinbase wallet.\u00a0\n\nTo switch to the Goerli test network using Metamask, first open your wallet. It will most likely have test networks disabled by default. The first step is to enable test networks in the settings of Metamask under `Advanced`.\n\n<Image img=\"/img/tutorials/test-v3-manager-1.png\"/>\n\nFor Coinbase wallet (not the Coinbase exchange app!), go into `settings` and look for the `Active dapp network` option. Scroll down until you see the `ETH TESTNETS` section. Now select `G\u00f6rli` (yes it's the same as Goerli).\n\n<Image img=\"/img/tutorials/test-v3-manager-2.png\"/>", "mimetype": "text/plain", "start_char_idx": 946, "end_char_idx": 2149, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "133529db-14dc-4442-858b-f447790642d2": {"__data__": {"id_": "133529db-14dc-4442-858b-f447790642d2", "embedding": null, "metadata": {"file_path": "docs/howto/test-v3-manager.mdx", "file_name": "test-v3-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/test-v3-manager.mdx", "header_path": "/Test the V3 Manager App/Using Goerli (G\u00f6rli) Testnet/", "customer_id": 1, "source_url": "docs/howto/test-v3-manager.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["goerli", "detects", "wallet", "network", "visit", "connected", "switched", "manager", "click", "successfully", "preview", "created", "should", "connect"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a61f1b9ded63c52a5b65dd3b430aca551f7ea64e", "node_type": "4", "metadata": {"file_path": "docs/howto/test-v3-manager.mdx", "file_name": "test-v3-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/test-v3-manager.mdx"}, "hash": "195d7cc414033c3cffe37582c8c5bdb1b68588400dc1b7b8f32cdc5b3ba21d34", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "630bac84-83af-4d67-8636-ac73b69bc032", "node_type": "1", "metadata": {"file_path": "docs/howto/test-v3-manager.mdx", "file_name": "test-v3-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/test-v3-manager.mdx", "header_path": "/Test the V3 Manager App/"}, "hash": "0116ccffeb2878ec2d6d91162d7416c8d3568fac8d5d4dba8e88ddabcd9302e3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "74e2ea78-1b13-43fa-b7f0-0e56c78c55b8", "node_type": "1", "metadata": {"header_path": "/Test the V3 Manager App/Using Goerli (G\u00f6rli) Testnet/"}, "hash": "dbd2f0c518325608200e18813d67c14b03bcbf4e345a975715b641e2fecc9446", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### **Connect to the ENS Manager App v3**\n\nVisit [alpha.ens.domains](https://alpha.ens.domains) and connect with your wallet you've created on Goerli. If the app detects you haven't switched the network to Goerli, click `Change Network`.\n\n<BrowserWindow url=\"alpha.ens.domains\">\n  <Image img=\"/img/tutorials/test-v3-manager-3.png\"/>\n</BrowserWindow> ### **Getting Goerli test network tokens**\n\nYou should now be successfully connected to the preview of the [new ENS Manager App (V3)](https://alpha.ens.domains) which has its contracts running on Goerli test network. In order to test things out you will first need to obtain Goerli Testnet tokens. You can receive Goerli tokens free through a Testnet \"faucet\". There are many places to receive these tokens for free. Some require social proof or other actions to prohibit bots from draining the faucets. Here are some common faucets where you can get Goerli (goeth).\n\n*   [https://goerlifaucet.com/](https://goerlifaucet.com/)\n*   [https://goerli-faucet.mudit.blog/](https://goerli-faucet.mudit.blog/)\n*   [https://goerli-faucet.pk910.de/](https://goerli-faucet.pk910.de/)\n\nOnce you have access to a faucet to receive Testnet tokens on Goerli, send them to your Goerli wallet address. Be sure you use your Goerli wallet address and not your Ethereum Mainnet address, as they are different networks. The V3 preview of ENS Manager App is only functional on Goerli Testnet.", "mimetype": "text/plain", "start_char_idx": 2151, "end_char_idx": 2500, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8afd1714-d93b-4b5c-80c7-158743d48d55": {"__data__": {"id_": "8afd1714-d93b-4b5c-80c7-158743d48d55", "embedding": null, "metadata": {"file_path": "docs/howto/test-v3-manager.mdx", "file_name": "test-v3-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/test-v3-manager.mdx", "header_path": "/Test the V3 Manager App/Using Goerli (G\u00f6rli) Testnet/", "customer_id": 1, "source_url": "docs/howto/test-v3-manager.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["primary", "preview", "directly", "advanced", "registration", "avatar", "search", "during", "manager", "explore", "features", "register", "upload", "setting"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a61f1b9ded63c52a5b65dd3b430aca551f7ea64e", "node_type": "4", "metadata": {"file_path": "docs/howto/test-v3-manager.mdx", "file_name": "test-v3-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/test-v3-manager.mdx"}, "hash": "195d7cc414033c3cffe37582c8c5bdb1b68588400dc1b7b8f32cdc5b3ba21d34", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "74e2ea78-1b13-43fa-b7f0-0e56c78c55b8", "node_type": "1", "metadata": {"file_path": "docs/howto/test-v3-manager.mdx", "file_name": "test-v3-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/test-v3-manager.mdx", "header_path": "/Test the V3 Manager App/Using Goerli (G\u00f6rli) Testnet/"}, "hash": "6f38d8c4125453edad1c8ecbfde9dbb859ff76170b4469c6c9ff92958b94e918", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Let's Test the V3 ENS App Manager!\n\nSearch for an ENS name you'd like to register on the [ENS App Manager V3 preview site](https://alpha.ens.domains).\n\n<BrowserWindow url=\"alpha.ens.domains\">\n  <Image img=\"/img/tutorials/test-v3-manager-4.png\"/>\n</BrowserWindow>\n\nFrom here, you can test the new registration process. You will be able to set up records, Primary Name, and upload an avatar directly all during the registration process. You can also explore advanced features like setting up NameWrapper permissions. Have fun exploring!", "mimetype": "text/plain", "start_char_idx": 3574, "end_char_idx": 4112, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0f156819-9fa1-4c47-b5ae-7af81312b8eb": {"__data__": {"id_": "0f156819-9fa1-4c47-b5ae-7af81312b8eb", "embedding": null, "metadata": {"file_path": "docs/howto/transfer-name.mdx", "file_name": "transfer-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/transfer-name.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/howto/transfer-name.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["automatically", "reflect", "record", "learn", "tutorial", "transferring", "another", "cthulu", "transfer", "owner", "updated"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a8f7760003ebeffb38762f85cf9e68967cfb0390", "node_type": "4", "metadata": {"file_path": "docs/howto/transfer-name.mdx", "file_name": "transfer-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/transfer-name.mdx"}, "hash": "75de086ea2409c9a63ec9f3345251741f4f53c914770abd0c89448ad34ff1d2c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b8b6f300-87ab-4b37-b546-d26b138d2222", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "873c09f92ca92ebb92940f0c05e8e1f473f7ca561761d4e2897a8a7876454d77", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\nlast_update:\n  author: cthulu\ntags:\n  - transfer\n  - transfer name\n  - gift\nkeywords: [transfer ens, transfer ens name, ens transfer, ens name transfer, send ens, send ens name, ens send, ens name send, move ens, move ens name]\n--- # Transfer an ENS name\n\nIn this tutorial you will learn how to transfer an ENS name to another wallet.\n\nWhen transferring an ENS name, only the `Owner` record is automatically updated to reflect the new owner wallet.\nDepending on your specific use-case it's therefore a good idea to take a moment and think about what additional records you want to transfer.\n\nThere are three records we need to pay attention to when transferring a name:\n\n:::info\n 1. **Owner:** *The owner of the ENS name, the wallet the ENS name NFT resides in.*\n 1. **Manager:** *The manager of records, the wallet allowed to make changes to its records (but not transfer the name)*\n 1. **ETH Address:** *The wallet address the ENS name points to, where funds sent to it will arrive.*\n:::\n\n<BrowserWindow url=\"https://app.ens.domains\">\n  <p align=\"center\">\n    <div style={{'background-color': \"#f3f4f7\", 'padding': \"25px\"}}>\n      <Image img=\"/img/howto/v3-transfer-name-records.png\"/>\n    </div>\n  </p>\n</BrowserWindow>", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 235, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9414ca3e-ee26-4c8e-9628-b1f871935774": {"__data__": {"id_": "9414ca3e-ee26-4c8e-9628-b1f871935774", "embedding": null, "metadata": {"file_path": "docs/howto/transfer-name.mdx", "file_name": "transfer-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/transfer-name.mdx", "header_path": "/Transfer an ENS name/", "customer_id": 1, "source_url": "docs/howto/transfer-name.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["specific", "allowed", "because", "order", "three", "transfer", "completely", "records", "example", "wallet", "change"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a8f7760003ebeffb38762f85cf9e68967cfb0390", "node_type": "4", "metadata": {"file_path": "docs/howto/transfer-name.mdx", "file_name": "transfer-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/transfer-name.mdx"}, "hash": "75de086ea2409c9a63ec9f3345251741f4f53c914770abd0c89448ad34ff1d2c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b8b6f300-87ab-4b37-b546-d26b138d2222", "node_type": "1", "metadata": {"file_path": "docs/howto/transfer-name.mdx", "file_name": "transfer-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/transfer-name.mdx", "header_path": "/"}, "hash": "91fd5c1461689ad49718f46aed4398e3a9a1eed8adb156e13016c75b6767c381", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3484cf56-6ab4-4b07-b08f-ef0c21c64fea", "node_type": "1", "metadata": {"header_path": "/Transfer an ENS name/Completely transfer a name/"}, "hash": "36094c3639eeb756d153986fbb5e12452427893a3dfb58f30ca1a0be368544a9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Completely transfer a name\nIf you want to completely transfer a name to a wallet you'll need to set three records to the new wallet in a specific order because only the wallet set as `Manager` is allowed to change the `ETH Address`.\n:::info For example\n - If you were to change `Manager` first, you wouldn't be able to set the `ETH Address` without switching to the new wallet.\n:::\n\nIn order to set everything to the new wallet easily from the wallet that currently owns the ENS name, you'd follow this specific order:\n\n:::info Order\n 1. **ETH Address:** *The wallet address the ENS name points to, where funds sent to it will arrive.*\n 1. **Manager:** *The manager of records, the wallet allowed to make changes to its records (but not transfer the name)*\n 1. **Owner:** *The owner of the ENS name, the wallet the ENS name NFT resides in.*\n:::", "mimetype": "text/plain", "start_char_idx": 1229, "end_char_idx": 2076, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3484cf56-6ab4-4b07-b08f-ef0c21c64fea": {"__data__": {"id_": "3484cf56-6ab4-4b07-b08f-ef0c21c64fea", "embedding": null, "metadata": {"file_path": "docs/howto/transfer-name.mdx", "file_name": "transfer-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/transfer-name.mdx", "header_path": "/Transfer an ENS name/Completely transfer a name/", "customer_id": 1, "source_url": "docs/howto/transfer-name.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ability", "directly", "bring", "optional", "search", "click", "recipient", "manage", "sending", "wallet", "names", "manager"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a8f7760003ebeffb38762f85cf9e68967cfb0390", "node_type": "4", "metadata": {"file_path": "docs/howto/transfer-name.mdx", "file_name": "transfer-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/transfer-name.mdx"}, "hash": "75de086ea2409c9a63ec9f3345251741f4f53c914770abd0c89448ad34ff1d2c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9414ca3e-ee26-4c8e-9628-b1f871935774", "node_type": "1", "metadata": {"file_path": "docs/howto/transfer-name.mdx", "file_name": "transfer-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/transfer-name.mdx", "header_path": "/Transfer an ENS name/"}, "hash": "05d0959c7dfa5d9b226e80ff88557e287c254cc7db6c0cb09711a3c893234081", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7f582b2f-6ad8-4673-aaa1-70b52fda855f", "node_type": "1", "metadata": {"header_path": "/Transfer an ENS name/"}, "hash": "460d47df2045f68519512350fa197f645d62340b8f06a00e5ecf64e3c0d51e3d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Go to the Manager App\nGo to the <Link to=\"https://app.ens.domains\"><b>ENS Manager App</b></Link> with the wallet set as `Owner` & `Manager` for the ENS name you want to manage and click `Names` to bring up a list\nof your ENS names *or* search for an ENS name you own directly from the main page.\n<BrowserWindow url=\"https://app.ens.domains\">\n  <p align=\"center\">\n    <div style={{'background-color': \"#f3f4f7\", 'padding': \"25px\"}}>\n      <Image img=\"/img/howto/v3-transfer-name-1.png\"/>\n    </div>\n  </p>\n</BrowserWindow>\n\nClick the ENS name you want to transfer.\n<BrowserWindow url=\"https://app.ens.domains\">\n  <p align=\"center\">\n    <div style={{'background-color': \"#f3f4f7\", 'padding': \"25px\"}}>\n      <Image img=\"/img/howto/v3-transfer-name-2.png\"/>\n    </div>\n  </p>\n</BrowserWindow>\n\nGo to the `More` tab.\n<BrowserWindow url=\"https://app.ens.domains\">\n  <p align=\"center\">\n    <div style={{'background-color': \"#f3f4f7\", 'padding': \"25px\"}}>\n      <Image img=\"/img/howto/v3-transfer-name-3.png\"/>\n    </div>\n  </p>\n</BrowserWindow>\n\nClick `Send`.\n<BrowserWindow url=\"https://app.ens.domains\">\n  <p align=\"center\">\n    <div style={{'background-color': \"#f3f4f7\", 'padding': \"25px\"}}>\n      <Image img=\"/img/howto/v3-transfer-name-4.png\"/>\n    </div>\n  </p>\n</BrowserWindow>\n\nWhen sending a name you have the optional ability to set the recipient as `Manager` of the ENS name.\n:::info\n1. `Owner` *The owner can send to a new owner and change the manager*\n1. `Manager` *The manager can change and set records*\n:::\n\nToggle the suitable options and click `Next`.\n<BrowserWindow url=\"https://app.ens.domains\">\n  <p align=\"center\">\n    <div style={{'background-color': \"#f3f4f7\", 'padding': \"25px\"}}>\n      <Image img=\"/img/howto/v3-transfer-name-5.png\"/>\n    </div>\n  </p>\n</BrowserWindow>", "mimetype": "text/plain", "start_char_idx": 2078, "end_char_idx": 3872, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7f582b2f-6ad8-4673-aaa1-70b52fda855f": {"__data__": {"id_": "7f582b2f-6ad8-4673-aaa1-70b52fda855f", "embedding": null, "metadata": {"file_path": "docs/howto/transfer-name.mdx", "file_name": "transfer-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/transfer-name.mdx", "header_path": "/Transfer an ENS name/", "customer_id": 1, "source_url": "docs/howto/transfer-name.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["great", "different", "ownership", "would", "address", "point", "because", "ensfairy", "another", "recipient", "records", "behalf", "wallet", "register"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a8f7760003ebeffb38762f85cf9e68967cfb0390", "node_type": "4", "metadata": {"file_path": "docs/howto/transfer-name.mdx", "file_name": "transfer-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/transfer-name.mdx"}, "hash": "75de086ea2409c9a63ec9f3345251741f4f53c914770abd0c89448ad34ff1d2c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3484cf56-6ab4-4b07-b08f-ef0c21c64fea", "node_type": "1", "metadata": {"file_path": "docs/howto/transfer-name.mdx", "file_name": "transfer-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/transfer-name.mdx", "header_path": "/Transfer an ENS name/Completely transfer a name/"}, "hash": "33c0a17607b1b13d9352537ee7e992b79afd090636953327dffb01bd6abaa2dc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Gift a Name with ENSFairy\nIf you would like to register a name on behalf of another wallet, <Link to=\"https://ensfairy.xyz\"><b>ENSFairy</b></Link> is a great way to do that. This is because you can register a name with one wallet, but set up the ownership and address records to point to a different wallet.\n\n<BrowserWindow url=\"ensfairy.xyz\">\n  <div style={{'background-color': \"#f3f4f7\"}}>\n    <Image img=\"/img/howto/ensfairy-gifting.gif\"/>\n  </div>\n</BrowserWindow>\n\n:::info TIP\n If the ENS name recipient does not yet have a wallet address, the name can be sent to the ENSFairy vault for safekeeping. Read more here:\n \n  - <Link to=\"https://ensfairy.xyz\"><b>ensfairy.xyz/deposit</b></Link>\n\n:::", "mimetype": "text/plain", "start_char_idx": 3874, "end_char_idx": 4575, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "acd3479a-cedd-4375-90eb-1cf13d4742dd": {"__data__": {"id_": "acd3479a-cedd-4375-90eb-1cf13d4742dd", "embedding": null, "metadata": {"file_path": "docs/howto/v2/_set-discord-name.mdx", "file_name": "_set-discord-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/_set-discord-name.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/howto/v2/_set-discord-name.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["service", "zadok7", "record", "discord", "custom", "there", "records", "manager"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "87a47d6a0c5bbf75f4b4ae2b756f55faa4b4c085", "node_type": "4", "metadata": {"file_path": "docs/howto/v2/_set-discord-name.mdx", "file_name": "_set-discord-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/_set-discord-name.mdx"}, "hash": "4de3f9e75b010a8098d4bdd247ceb2df0115daa8bf0355ab60ae6f8a9dbc3684", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Set a Discord name ---\nlast_update:\n  author: zadok7\ntags:\n  - custom records\n  - add custom record\n  - set custom record\nkeywords: [ens records, custom records, custom service key]\n--- # Add a Custom Service Key\nIn the ENS Manager app, there are default common services. For instance, `com.github` is the service key for a record that would contain a GitHub username. This field already exists in the ENS Manager app. What if you want to add your key-value pair? Let\u2019s use the example of `youtube.com`.\n\nClick `Add/Edit Record`\n<BrowserWindow url=\"app.ens.domains\">\n  <Image img=\"/img/howto/add-custom-record-1.png\"/>\n</BrowserWindow>\n\nUse the drop-down and select \u201ctext\u201d for the type of key we will be adding for YouTube.\n<BrowserWindow url=\"app.ens.domains\">\n  <Image img=\"/img/howto/add-custom-record-2.png\"/>\n</BrowserWindow>\n\nSince YouTube is a service, we will create a service key. Service keys are in the reverse dot format. Therefore, in the key field type: `com.youtube` and click: create `com.youtube`.\n<BrowserWindow url=\"app.ens.domains\">\n  <Image img=\"/img/howto/add-custom-record-3.png\"/>\n</BrowserWindow>\n\nNext, input your YouTube.com username or channel and click \u201cSave\u201d. This will close the record editor, but there is still one more step!\n<BrowserWindow url=\"app.ens.domains\">\n  <Image img=\"/img/howto/add-custom-record-4.png\"/>\n</BrowserWindow>\n\nThe final step is to confirm the transaction. Scroll down until you see \u201cConfirm\u201d.\n<BrowserWindow url=\"app.ens.domains\">\n  <Image img=\"/img/howto/add-custom-record-5.png\"/>\n</BrowserWindow>\n\nNow a record for YouTube.com will exist under your ENS name! There is no limit to the amount or types of records you can use.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 20, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2d44dc29-e016-464a-a34b-e47c6b94d8ef": {"__data__": {"id_": "2d44dc29-e016-464a-a34b-e47c6b94d8ef", "embedding": null, "metadata": {"file_path": "docs/howto/v2/add-wallet-address.mdx", "file_name": "add-wallet-address.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/add-wallet-address.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/howto/v2/add-wallet-address.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["addresses", "address", "storing", "learn", "cthulu", "capable", "tutorial", "number", "wallet", "large"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f56c737c6eb4dcf2a1479c5284b8ed6f12192a89", "node_type": "4", "metadata": {"file_path": "docs/howto/v2/add-wallet-address.mdx", "file_name": "add-wallet-address.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/add-wallet-address.mdx"}, "hash": "ce5804a835dbfc57ea57adcce5aa9bf9123d000563d82849d13f0a76e49f1813", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c8151cf7-0d66-402b-befc-a25e89e90354", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "0fb9903ec6a4d23521de0249d5bf65eaeeff1bc2c99fccc54d5c13e7b353c7bc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\nlast_update:\n  author: cthulu\ntags:\n  - Address\n  - BSC\n  - DOGE\n  - LTC\n  - BTC\nkeywords: [ens wallet, wallet, add a wallet, add wallet address]\n--- # Add a Wallet Address\nIn this tutorial you will learn how to add a wallet address to your ENS name. ## What does it do?\nYour ENS name is capable of storing a large number of wallet addresses across different blockchains, which can be added from the [ENS Manager App](https://app.ens.domains), allowing you to receive payments in more cryptocurrencies than just Ethereum, provided that the service or wallet used supports it.\n\n![Docusaurus themed image](/img/ens-map-medium.png#gh-light-mode-only)![Docusaurus themed image](/img/ens-map-medium-dark.png#gh-dark-mode-only)", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 153, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "55336aa0-04fb-49b3-87ab-650f8d33ce0e": {"__data__": {"id_": "55336aa0-04fb-49b3-87ab-650f8d33ce0e", "embedding": null, "metadata": {"file_path": "docs/howto/v2/add-wallet-address.mdx", "file_name": "add-wallet-address.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/add-wallet-address.mdx", "header_path": "/Add a Wallet Address/", "customer_id": 1, "source_url": "docs/howto/v2/add-wallet-address.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ethereum", "requirement", "address", "learn", "prerequisite", "before", "points", "wallet", "setting", "section"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f56c737c6eb4dcf2a1479c5284b8ed6f12192a89", "node_type": "4", "metadata": {"file_path": "docs/howto/v2/add-wallet-address.mdx", "file_name": "add-wallet-address.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/add-wallet-address.mdx"}, "hash": "ce5804a835dbfc57ea57adcce5aa9bf9123d000563d82849d13f0a76e49f1813", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3798a95d-5a69-4500-b4ae-c40b7f5cf5ce", "node_type": "1", "metadata": {"file_path": "docs/howto/v2/add-wallet-address.mdx", "file_name": "add-wallet-address.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/add-wallet-address.mdx", "header_path": "/Add a Wallet Address/"}, "hash": "3090a5c33292acca823dcffae35b987dc0d0b31884ae62a81b99b38c63bbd1d2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9939af94-075f-441c-9295-1806e53fdc0e", "node_type": "1", "metadata": {"header_path": "/Add a Wallet Address/"}, "hash": "e2d46281a87de223988002d5847aecdead6136fb6d5931d0a758977dd5db79a0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Add an **Ethereum** wallet {#ethereum-wallet}\nIn this section you will learn how to add an Ethereum wallet to your ENS name. This is the wallet ETH will end up in when sent to your ENS name.\nIt also is a prerequisite to setting the `Primary name` in a wallet.\n\n:::info\n - Points your ENS name to an Ethereum wallet address\n - Is a requirement before setting the <Link to=\"/core/records/primary-name\"><b>Primary Name</b></Link>\n:::\n\nTo set an ETH Address on your ENS name go to its page in the <Link to=\"https://app.ens.domains\"><b>ENS Manager App</b></Link> and click `Add/Edit Record`\n<BrowserWindow url=\"app.ens.domains\">\n  <Image img=\"/img/add-wallet-address-eth-1.png\"/>\n</BrowserWindow>\n\nEnter the wallet address you want to point the ENS name to in the `ETH` record field.\n<BrowserWindow url=\"app.ens.domains\">\n  <Image img=\"/img/add-wallet-address-eth-2.png\"/>\n</BrowserWindow>\n\nScroll down to the bottom of the Adresses section and click `Confirm`\n<BrowserWindow url=\"app.ens.domains\">\n  <Image img=\"/img/add-wallet-address-eth-3.png\"/>\n</BrowserWindow>", "mimetype": "text/plain", "start_char_idx": 729, "end_char_idx": 1793, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9939af94-075f-441c-9295-1806e53fdc0e": {"__data__": {"id_": "9939af94-075f-441c-9295-1806e53fdc0e", "embedding": null, "metadata": {"file_path": "docs/howto/v2/add-wallet-address.mdx", "file_name": "add-wallet-address.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/add-wallet-address.mdx", "header_path": "/Add a Wallet Address/", "customer_id": 1, "source_url": "docs/howto/v2/add-wallet-address.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["other", "types", "wallets", "added", "dropdown", "scroll", "connect", "click", "several", "wallet", "manager", "section"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f56c737c6eb4dcf2a1479c5284b8ed6f12192a89", "node_type": "4", "metadata": {"file_path": "docs/howto/v2/add-wallet-address.mdx", "file_name": "add-wallet-address.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/add-wallet-address.mdx"}, "hash": "ce5804a835dbfc57ea57adcce5aa9bf9123d000563d82849d13f0a76e49f1813", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "55336aa0-04fb-49b3-87ab-650f8d33ce0e", "node_type": "1", "metadata": {"file_path": "docs/howto/v2/add-wallet-address.mdx", "file_name": "add-wallet-address.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/add-wallet-address.mdx", "header_path": "/Add a Wallet Address/"}, "hash": "d1fe4a964f3b7b6d164598f4252dc4aeda03eb8dadab12f1269fe75c387743d2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Add other wallets\nSeveral other types of wallets can be added from the dropdown list in the manager app:\n<BrowserWindow url=\"app.ens.domains\">\n  <Image img=\"/img/address1.webp\"/>\n</BrowserWindow>\n\n\n 1. Go to the <Link to=\"https://app.ens.domains\"><b>ENS Manager App</b></Link> and connect the wallet set as `Controller` for your ENS name.\n \n 1. Look up your ENS name and go to its page.\n \n 1. Scroll down to the `Address` section and click ***Add/Edit Record***\n \n 1. Enter a wallet address in one of the address fields or add one from the dropdown list.\n \n 1. Scroll down and press ***Confirm***\n\n:::info Resources\nFor more detailed information on how to set a record, see\n - <Link to=\"/howto/set-record\"><b>How-To: </b>Set a Record</Link>\n:::", "mimetype": "text/plain", "start_char_idx": 1795, "end_char_idx": 2542, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a0e1da0c-1696-41a4-9058-7bf3bcc7a662": {"__data__": {"id_": "a0e1da0c-1696-41a4-9058-7bf3bcc7a662", "embedding": null, "metadata": {"file_path": "docs/howto/v2/decentralized_website.mdx", "file_name": "decentralized_website.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/decentralized_website.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/howto/v2/decentralized_website.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ability", "powerful", "website", "interesting", "decentralized", "cthulu", "create", "features", "names"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c3bdaeb0cd41c040f794a6e5a409bba8c6e863ee", "node_type": "4", "metadata": {"file_path": "docs/howto/v2/decentralized_website.mdx", "file_name": "decentralized_website.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/decentralized_website.mdx"}, "hash": "fc1cf32e76b6d7536e883fc657c69c181d89523cb47e754e6ab8000a82946a29", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d7d7de71-12da-41b1-b008-b7c0f850871f", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "2b3340b16f7b5b89cf5b2a823f36d472effc1552350189bad2e3006df2814c7d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\nlast_update:\n  author: cthulu\ntags:\n  - decentralized website\n  - website\n  - web3\nkeywords: [ens website, create decentralized website, decentralized website, add website, add web3 site, web3 site]\n--- # Create a decentralized website\n\n---\n\nOne of the most interesting and powerful features of ENS names is the ability to point them to webpages hosted on the decentralized web, creating a website where both the hosting and the domain name is *entirely* decentralized.\n\nIn this tutorial you will:\n 1. [**Build a website**](#build-a-website)\n 1. [**Set up a GitHub repository**](#set-up-a-github-repository)\n 1. [**Upload it to a decentralized storage using IPFS**](#upload-to-ipfs)\n 1. [**Point your ENS name to it**](#configure-your-ens-name)\n \n_ENS supports several decentralized protocols apart from IPFS, but this tutorial only covers IPFS (for now)._\n\nAnyhow, let's get started!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 206, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e5c46faf-322d-4a47-bc3c-b60c12313b7b": {"__data__": {"id_": "e5c46faf-322d-4a47-bc3c-b60c12313b7b", "embedding": null, "metadata": {"file_path": "docs/howto/v2/decentralized_website.mdx", "file_name": "decentralized_website.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/decentralized_website.mdx", "header_path": "/Create a decentralized website/", "customer_id": 1, "source_url": "docs/howto/v2/decentralized_website.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["github", "excellent", "already", "website", "deploy", "using", "create", "proceed", "build", "basic", "section"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c3bdaeb0cd41c040f794a6e5a409bba8c6e863ee", "node_type": "4", "metadata": {"file_path": "docs/howto/v2/decentralized_website.mdx", "file_name": "decentralized_website.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/decentralized_website.mdx"}, "hash": "fc1cf32e76b6d7536e883fc657c69c181d89523cb47e754e6ab8000a82946a29", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d7d7de71-12da-41b1-b008-b7c0f850871f", "node_type": "1", "metadata": {"file_path": "docs/howto/v2/decentralized_website.mdx", "file_name": "decentralized_website.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/decentralized_website.mdx", "header_path": "/"}, "hash": "1ad53cc0157c3109715d479efcfb3f0e148109893b9f0854894b59dc43abd680", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "83fb9f31-38cd-42b2-8401-ebda43faae85", "node_type": "1", "metadata": {"header_path": "/Create a decentralized website/Build a website/"}, "hash": "32af72c97ff86bf26878c31ed62f09dd9e57e1ed7e917d2c7c5416c59ea2c979", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Build a website\nIn this section we'll create a basic website to deploy to IPFS using <Link to=\"http://heavens.tools\"><b>Heaven's Tools</b></Link> excellent Web3 website builder.\n:::tip\nIf you already have a website you'd like to upload, proceed to [**Set up a GitHub repository**](#set-up-a-github-repository)\n::: ### Create the website\nBefore we can upload a site to IPFS we have to first create it! There are many ways to do that, but in this guide we'll try to keep it simple by using Heaven's Tools which is a WYSIWYG, or \"What You See Is What You Get\", type editor where you don't have to know how to code.\n\nAll you need to do is go to <Link to=\"http://heavens.tools\"><b>Heaven's Tools</b></Link> website and drag blocks in the order you want them and Heaven's Tools will take care of the rest and build the site for you!\n\n<BrowserWindow url=\"heavens.tools\">\n  <Image img=\"/img/howto/decentralized_website_1.png\" />\n</BrowserWindow>", "mimetype": "text/plain", "start_char_idx": 891, "end_char_idx": 1207, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f805629b-f50c-4e5b-8540-c03d920557e6": {"__data__": {"id_": "f805629b-f50c-4e5b-8540-c03d920557e6", "embedding": null, "metadata": {"file_path": "docs/howto/v2/decentralized_website.mdx", "file_name": "decentralized_website.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/decentralized_website.mdx", "header_path": "/Create a decentralized website/Build a website/", "customer_id": 1, "source_url": "docs/howto/v2/decentralized_website.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["github", "button", "download", "going", "happy", "website", "contains", "click", "archive", "compressed", "files", "created", "upload"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c3bdaeb0cd41c040f794a6e5a409bba8c6e863ee", "node_type": "4", "metadata": {"file_path": "docs/howto/v2/decentralized_website.mdx", "file_name": "decentralized_website.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/decentralized_website.mdx"}, "hash": "fc1cf32e76b6d7536e883fc657c69c181d89523cb47e754e6ab8000a82946a29", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "83fb9f31-38cd-42b2-8401-ebda43faae85", "node_type": "1", "metadata": {"file_path": "docs/howto/v2/decentralized_website.mdx", "file_name": "decentralized_website.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/decentralized_website.mdx", "header_path": "/Create a decentralized website/Build a website/"}, "hash": "fe5a20e40b8f59e74afc12b88855b3d665687babc1ed38cb2626aa7d66153259", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "36e2348a-39df-4e2f-b58d-56bc5305dd8c", "node_type": "1", "metadata": {"header_path": "/Create a decentralized website/Build a website/"}, "hash": "8f3436a97c7382d366544817ebaea99b5d1ad038d1449ce4606b448a0e01d62b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Download the website\nOnce you're happy with the site you've created click the `Download` button to download a compressed `.zip` archive of your website.\nThis archive contains the files we're going to upload to GitHub in the next section!\n<BrowserWindow url=\"heavens.tools\">\n  <Image img=\"/img/howto/decentralized_website_2.png\" />\n</BrowserWindow> ### Extract the compressed archive\nIf you're unsure of how to extract the `.zip` archive, expand this section for help.\n<details>\n  <summary>Extract compressed archive</summary>\n    <Tabs>\n      <TabItem value=\"windows\" label=\"Windows\" default>\n        <p>Navigate to the file folder and double-click the zip file</p>\n        <Image img=\"/img/howto/decentralized-website-extract-win-1.png\"/>\n        <br/><p>Press `Extract all`</p>\n        <Image img=\"/img/howto/decentralized-website-extract-win-2.png\"/>\n        <br/><p>Select a folder to extract the files to and click `Extract`</p>\n        <Image img=\"/img/howto/decentralized-website-extract-win-3.png\"/>\n      </TabItem>\n      <TabItem value=\"macos\" label=\"Mac OS\">\n        <Image img=\"/img/howto/extract_file_macos_1.png\"/>\n        <Image img=\"/img/howto/extract_file_macos_2.png\"/>\n      </TabItem>\n      <TabItem value=\"linux\" label=\"Linux\">\n        <p>Navigate to the file folder and use <b>unzip</b> to unzip the archive.</p>\n\n          [cthulu@carbon ~]$ unzip template.zip\n          Archive:  template.zip\n           extracting: editor.css\n           extracting: narrow-jumbotron.css\n           extracting: aos.css\n           extracting: vvvebjs-editor-helpers.css\n           extracting: aos.js\n           extracting: ?format=json\n           extracting: index.html\n          [cthulu@carbon ~]$ \n    \n  </TabItem>\n</Tabs>\n</details>\n\n---", "mimetype": "text/plain", "start_char_idx": 1834, "end_char_idx": 2185, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1c6eb5e0-fa4b-4536-8bdf-767fbcaea873": {"__data__": {"id_": "1c6eb5e0-fa4b-4536-8bdf-767fbcaea873", "embedding": null, "metadata": {"file_path": "docs/howto/v2/decentralized_website.mdx", "file_name": "decentralized_website.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/decentralized_website.mdx", "header_path": "/Create a decentralized website/", "customer_id": 1, "source_url": "docs/howto/v2/decentralized_website.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["github", "repository", "create", "scroll", "choose", "click"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c3bdaeb0cd41c040f794a6e5a409bba8c6e863ee", "node_type": "4", "metadata": {"file_path": "docs/howto/v2/decentralized_website.mdx", "file_name": "decentralized_website.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/decentralized_website.mdx"}, "hash": "fc1cf32e76b6d7536e883fc657c69c181d89523cb47e754e6ab8000a82946a29", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "36e2348a-39df-4e2f-b58d-56bc5305dd8c", "node_type": "1", "metadata": {"file_path": "docs/howto/v2/decentralized_website.mdx", "file_name": "decentralized_website.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/decentralized_website.mdx", "header_path": "/Create a decentralized website/Build a website/"}, "hash": "8dbd7107ed19bfd140ee9f0d6f7d399f58fe5c6f0f5e2c3c9db3ddf872ad3706", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "06a99554-d17b-4343-a460-ebe33604baf0", "node_type": "1", "metadata": {"header_path": "/Create a decentralized website/Set up a GitHub repository/"}, "hash": "9c490fa5fcd577401116363aae46d2a147490442b3a3c16ba49453aa3047589e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Set up a GitHub repository\n\nGo to <Link to=\"https://github.com\"><b>GitHub</b></Link> and create an account. ### Create a repository\nClick `New` to create a new GitHub repository for your website.\n<BrowserWindow url=\"github.com\">\n  <Image img=\"/img/howto/decentralized_website_3.png\" />\n</BrowserWindow>\n\nThen choose a name for the repository.\n<BrowserWindow url=\"github.com\">\n  <Image img=\"/img/howto/decentralized_website_4.png\" />\n</BrowserWindow>\n\nThen scroll down and click on `Create`.\n<BrowserWindow url=\"github.com\">\n  <Image img=\"/img/howto/decentralized_website_4.png\" />\n</BrowserWindow>\n<BrowserWindow url=\"github.com\">\n  <Image img=\"/img/howto/decentralized_website_5.png\" />\n</BrowserWindow>", "mimetype": "text/plain", "start_char_idx": 3588, "end_char_idx": 3698, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8bd6f963-937c-4dba-99ff-f6688b0a6f96": {"__data__": {"id_": "8bd6f963-937c-4dba-99ff-f6688b0a6f96", "embedding": null, "metadata": {"file_path": "docs/howto/v2/decentralized_website.mdx", "file_name": "decentralized_website.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/decentralized_website.mdx", "header_path": "/Create a decentralized website/Set up a GitHub repository/", "customer_id": 1, "source_url": "docs/howto/v2/decentralized_website.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["github", "after", "repository", "scroll", "click", "files", "existing", "upload"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c3bdaeb0cd41c040f794a6e5a409bba8c6e863ee", "node_type": "4", "metadata": {"file_path": "docs/howto/v2/decentralized_website.mdx", "file_name": "decentralized_website.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/decentralized_website.mdx"}, "hash": "fc1cf32e76b6d7536e883fc657c69c181d89523cb47e754e6ab8000a82946a29", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "06a99554-d17b-4343-a460-ebe33604baf0", "node_type": "1", "metadata": {"file_path": "docs/howto/v2/decentralized_website.mdx", "file_name": "decentralized_website.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/decentralized_website.mdx", "header_path": "/Create a decentralized website/Set up a GitHub repository/"}, "hash": "dc809c200bb88c31fcb89058c84ade793d55302ed549e46af7ecef6c7e276c9e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "63ab863b-90a5-4803-8ad8-53ccdead4564", "node_type": "1", "metadata": {"header_path": "/Create a decentralized website/"}, "hash": "b9bd23e54ab5fe51026049f4755d01bf8b98019267229d472bbbd77f18df6c88", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Upload your files to the repository\nOn the next screen, click the link `Uploading an existing file`\n<BrowserWindow url=\"github.com\">\n  <Image img=\"/img/howto/decentralized_website_6.png\" />\n</BrowserWindow>\n\nUpload your files to GitHub\n<BrowserWindow url=\"github.com\">\n  <Image img=\"/img/howto/decentralized_website_7.png\" />\n</BrowserWindow>\n\nAfter that's done, scroll down and click `Commit`.\n<BrowserWindow url=\"github.com\">\n  <Image img=\"/img/howto/decentralized_website_8.png\" />\n</BrowserWindow>\n\n---", "mimetype": "text/plain", "start_char_idx": 4298, "end_char_idx": 4808, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "63ab863b-90a5-4803-8ad8-53ccdead4564": {"__data__": {"id_": "63ab863b-90a5-4803-8ad8-53ccdead4564", "embedding": null, "metadata": {"file_path": "docs/howto/v2/decentralized_website.mdx", "file_name": "decentralized_website.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/decentralized_website.mdx", "header_path": "/Create a decentralized website/", "customer_id": 1, "source_url": "docs/howto/v2/decentralized_website.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["protocol", "website", "storing", "serve", "store", "called", "decentralized", "possible", "tutorial", "yourself", "files", "upload"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c3bdaeb0cd41c040f794a6e5a409bba8c6e863ee", "node_type": "4", "metadata": {"file_path": "docs/howto/v2/decentralized_website.mdx", "file_name": "decentralized_website.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/decentralized_website.mdx"}, "hash": "fc1cf32e76b6d7536e883fc657c69c181d89523cb47e754e6ab8000a82946a29", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8bd6f963-937c-4dba-99ff-f6688b0a6f96", "node_type": "1", "metadata": {"file_path": "docs/howto/v2/decentralized_website.mdx", "file_name": "decentralized_website.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/decentralized_website.mdx", "header_path": "/Create a decentralized website/Set up a GitHub repository/"}, "hash": "0459f81402c1003a3f7159ffc0c0290563ab7b385ccfe783cce4fc059a12bc37", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3a7b28f1-57c6-465c-ab1d-20d6cc11addc", "node_type": "1", "metadata": {"header_path": "/Create a decentralized website/Upload to IPFS/"}, "hash": "91dbfa50bec2104bc69e402909682be52657346466e34d11cf9ae270b1b7acef", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Upload to IPFS\nIPFS, or the _InterPlanetary FileSystem_, is a decentralized storing protocol we'll use to store our website files in, and serve them from.\nFor this tutorial we'll use a so called _\"pinning service\"_ to store our files on IPFS but it's also possible to pin files yourself using a local IPFS node.\n\nThe benefit of using a pinning service is that you'll not need to run your own IPFS node to make sure that your website is accessible. ### Create an account with Fleek\nGo to <Link to=\"https://fleek.co\"><b>Fleek's website</b></Link> and `Sign Up` for an account.", "mimetype": "text/plain", "start_char_idx": 4810, "end_char_idx": 5260, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "53485845-fdbf-41c1-9c22-a62f10702217": {"__data__": {"id_": "53485845-fdbf-41c1-9c22-a62f10702217", "embedding": null, "metadata": {"file_path": "docs/howto/v2/decentralized_website.mdx", "file_name": "decentralized_website.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/decentralized_website.mdx", "header_path": "/Create a decentralized website/Upload to IPFS/", "customer_id": 1, "source_url": "docs/howto/v2/decentralized_website.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["asked", "select", "github", "after", "dashboard", "website", "repository", "fleek", "logging", "which", "create", "choose", "click", "upload", "connect"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c3bdaeb0cd41c040f794a6e5a409bba8c6e863ee", "node_type": "4", "metadata": {"file_path": "docs/howto/v2/decentralized_website.mdx", "file_name": "decentralized_website.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/decentralized_website.mdx"}, "hash": "fc1cf32e76b6d7536e883fc657c69c181d89523cb47e754e6ab8000a82946a29", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3a7b28f1-57c6-465c-ab1d-20d6cc11addc", "node_type": "1", "metadata": {"file_path": "docs/howto/v2/decentralized_website.mdx", "file_name": "decentralized_website.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/decentralized_website.mdx", "header_path": "/Create a decentralized website/Upload to IPFS/"}, "hash": "925577b5ee4827f18de3d16f98130a0289a2e94ba00b21ff3e74ac1e6bf71c4f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cd6f70cb-50fc-437d-aee6-1ba3f42a64e5", "node_type": "1", "metadata": {"header_path": "/Create a decentralized website/"}, "hash": "fc56ee5260fedc14b5a653694a4496b84ec2cd403a2b6fc39a936b362889ffb7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Upload your site to Fleek\nAfter logging into <Link to=\"https://fleek.co\"><b>Fleek</b></Link>, at the dashboard select `Add new site`.\n<BrowserWindow url=\"fleek.co\">\n  <Image img=\"/img/howto/create_website_fleek_1.png\" />\n</BrowserWindow>\n\nChoose `Connect with GitHub` and connect your GitHub account. \n<BrowserWindow url=\"fleek.co\">\n  <Image img=\"/img/howto/create_website_fleek_2.png\" />\n</BrowserWindow>\n\nClick `Install & Authorize`\n<BrowserWindow url=\"fleek.co\">\n  <Image img=\"/img/howto/create_website_fleek_3.png\" />\n</BrowserWindow>\n\nWhen asked which repository to create the website from, select the repository you created earlier in [](#step-1-create-a-repository)\n<BrowserWindow url=\"fleek.co\">\n  <Image img=\"/img/howto/create_website_fleek_4.png\" />\n</BrowserWindow>\n\nFor the hosting service, make sure IPFS is selected and press `Continue`.\n<BrowserWindow url=\"fleek.co\">\n  <Image img=\"/img/howto/create_website_fleek_5.png\" />\n</BrowserWindow>\n\nOn the next screen no changes are necessary, so just scroll down and click `Deploy site`.\n<BrowserWindow url=\"fleek.co\">\n  <Image img=\"/img/howto/create_website_fleek_6.png\" />\n</BrowserWindow>\n\nFleek will now deploy the website to IPFS, which might take a little while.\n<BrowserWindow url=\"fleek.co\">\n  <Image img=\"/img/howto/create_website_fleek_7.png\" />\n</BrowserWindow>\n\nWhen the site has been deployed, it will look like this:\n<BrowserWindow url=\"fleek.co\">\n  <Image img=\"/img/howto/create_website_fleek_8.png\" />\n</BrowserWindow>\n\nSelect the `IPFS CID` *(marked in blue below)* and press `CTRL + C` to copy it into the clipboard or write it down.\n<BrowserWindow url=\"fleek.co\">\n  <Image img=\"/img/howto/create_website_fleek_9.png\" />\n</BrowserWindow>\n\n---", "mimetype": "text/plain", "start_char_idx": 5390, "end_char_idx": 7113, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cd6f70cb-50fc-437d-aee6-1ba3f42a64e5": {"__data__": {"id_": "cd6f70cb-50fc-437d-aee6-1ba3f42a64e5", "embedding": null, "metadata": {"file_path": "docs/howto/v2/decentralized_website.mdx", "file_name": "decentralized_website.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/decentralized_website.mdx", "header_path": "/Create a decentralized website/", "customer_id": 1, "source_url": "docs/howto/v2/decentralized_website.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["enter", "configure", "scroll", "click", "saved", "earlier", "manager", "connect"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c3bdaeb0cd41c040f794a6e5a409bba8c6e863ee", "node_type": "4", "metadata": {"file_path": "docs/howto/v2/decentralized_website.mdx", "file_name": "decentralized_website.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/decentralized_website.mdx"}, "hash": "fc1cf32e76b6d7536e883fc657c69c181d89523cb47e754e6ab8000a82946a29", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "53485845-fdbf-41c1-9c22-a62f10702217", "node_type": "1", "metadata": {"file_path": "docs/howto/v2/decentralized_website.mdx", "file_name": "decentralized_website.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/decentralized_website.mdx", "header_path": "/Create a decentralized website/Upload to IPFS/"}, "hash": "3efc432985b0bb97045ff64d2e6ce341f685cff407dfd635698eb7688c7920ad", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "933c347a-c5c3-4367-96fe-da23a679fe42", "node_type": "1", "metadata": {"header_path": "/Create a decentralized website/Configure your ENS name/"}, "hash": "8ba5efb490335ccf79d692d8bd33d124226d8fc33df4c21913b47f08b9c0a9d1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Configure your ENS name ### Go to the ENS Manager App\nGo to the <Link to=\"https://app.ens.domains\"><b>ENS Manager App</b></Link> and connect your wallet.\n<BrowserWindow url=\"app.ens.domains\">\n  <Image img=\"/img/howto/create_website_ens_1.png\"/>\n</BrowserWindow>\n\nClick on `My Account` to go to a list of your ENS names.\n<BrowserWindow url=\"app.ens.domains\">\n  <Image img=\"/img/howto/create_website_ens_2.png\"/>\n</BrowserWindow>\n\nGo to your ENS name and click `Add/Edit Record`, scroll down and enter the `IPFS CID` you saved earlier into the `Content` field, then scroll down and click `Save`\n<BrowserWindow url=\"app.ens.domains\">\n  <Image img=\"/img/howto/create_website_ens_3.png\"/>\n</BrowserWindow>\n\n<BrowserWindow url=\"app.ens.domains\">\n  <Image img=\"/img/howto/create_website_ens_4.png\"/>\n</BrowserWindow>\n\nCongratulations! That's it!\n\n---", "mimetype": "text/plain", "start_char_idx": 7115, "end_char_idx": 7141, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "647a49be-8175-42c0-93d4-daa2017f59b1": {"__data__": {"id_": "647a49be-8175-42c0-93d4-daa2017f59b1", "embedding": null, "metadata": {"file_path": "docs/howto/v2/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/index.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/howto/v2/index.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["importing", "makes", "allowing", "domain", "doccardlist", "cthulu", "import", "supports", "which", "possible", "integrate", "names", "manager"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "99e4eaaeab428e5f1fb883e6f986f575634022a0", "node_type": "4", "metadata": {"file_path": "docs/howto/v2/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/index.mdx"}, "hash": "cf08a3f6aa208b4e3aff43f501297acc3eaf13048ff8421ccf119c4cadefc245", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# V2 Manager App\n\n```mdx-code-block\nimport DocCardList from '@theme/DocCardList';\n\n<DocCardList />\n``` ---\nlast_update:\n  author: cthulu\ntags:\n  - link\n  - dns\n  - .com\n  - .net\n  - .org\n  - .xyz\nkeywords: [ens dns, ens domain name system, add dns, link dns, import dns, integrate dns, use dns with ens, use ens with dns, use ens with domain name]\n--- # Link a DNS name\nENS supports importing DNS names into ENS, which makes it possible to use, for example, your .com .net or .org DNS name with ENS. Allowing you to use nearly all features of an ENS name with your DNS name.\n\nFor example: Coinbase *.cb.id usernames are all issued under their `cb.id` DNS name that was imported into ENS!\n\nThere are a few pre-requisites to importing a DNS name into ENS:\n\n - **The DNS name must have DNSSEC enabled with RSA/SHA-256 or ECDSA keys**\n - **An _ens TXT record must be created on the DNS name containing the wallet address to prove ownership of it.**", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 102, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f6b09623-6758-4468-ad57-389eb1806b78": {"__data__": {"id_": "f6b09623-6758-4468-ad57-389eb1806b78", "embedding": null, "metadata": {"file_path": "docs/howto/v2/link-dns-name.mdx", "file_name": "link-dns-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/link-dns-name.mdx", "header_path": "/Link a DNS name/", "customer_id": 1, "source_url": "docs/howto/v2/link-dns-name.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["providers", "types", "since", "verified", "hosting", "which", "support", "dnssec", "popular", "changed"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4181cecb5656f6d97e6fe95c16d230394483e0f6", "node_type": "4", "metadata": {"file_path": "docs/howto/v2/link-dns-name.mdx", "file_name": "link-dns-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/link-dns-name.mdx"}, "hash": "dc36fcd462981ff1fe4360431c8eeb6bd220f0675bf46190a78a4d00ee7dae2b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9aede8cf-45d5-4e63-ad1f-b450e610f5a2", "node_type": "1", "metadata": {"file_path": "docs/howto/v2/link-dns-name.mdx", "file_name": "link-dns-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/link-dns-name.mdx", "header_path": "/"}, "hash": "e4a1fb75c18f070e978fc68e88bbdcd3fc8d765d94ee63e71fdcf80acb9f4d7c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3d5787ff-5560-43d9-bfdf-b377ae29aa9b", "node_type": "1", "metadata": {"header_path": "/Link a DNS name/"}, "hash": "b8fc2651807a60027237022c340bc0eceec2ff25cc1ed2fed7b86ed2d80b6225", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Hosting providers\nA list of popular hosting providers and which DNSSEC key types they support[^1]\n\n[^1]: The key-types hosting providers support may have changed since this list was last verified on `June 22nd, 2022`.\n\n<div align='center'>\n\n| Hosting providers | DNSSEC | RSA/SHA-256 | ECDSA | Details                                                        |\n| ----------------- | ------ | ----------- | ----- | -------------------------------------------------------------- |\n| easyDNS           | `Yes`  | `Yes`       | `Yes` | [`DNSSEC Guide`](https://kb.easydns.com/knowledge/dnssec/)     |\n| Google Cloud DNS  | `Yes`  | `Yes`       | `Yes` | [`DNSSEC Guide`](https://cloud.google.com/dns/docs/registrars) |\n| Bluehost          | `Yes`  | `Yes`       | `Yes` |                                                                |\n| Hostinger         | `Yes`  | `Yes`       | `Yes` |                                                                |\n| Hostgator         | `Yes`  | `Yes`       | `Yes` |                                                                |\n| GoDaddy           | `Yes`  | `No`        | `Yes` |                                                                |\n| Wordpress         | `No`   | -           | -     |                                                                |\n| Namecheap         | `Yes`  | `Yes`       | `Yes` | [`DNSSEC Guide`](https://www.namecheap.com/support/knowledgebase/article.aspx/9722/2232/managing-dnssec-for-domains-pointed-to-custom-dns/) |\n\n</div>", "mimetype": "text/plain", "start_char_idx": 844, "end_char_idx": 2352, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3d5787ff-5560-43d9-bfdf-b377ae29aa9b": {"__data__": {"id_": "3d5787ff-5560-43d9-bfdf-b377ae29aa9b", "embedding": null, "metadata": {"file_path": "docs/howto/v2/link-dns-name.mdx", "file_name": "link-dns-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/link-dns-name.mdx", "header_path": "/Link a DNS name/", "customer_id": 1, "source_url": "docs/howto/v2/link-dns-name.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["migrate", "should", "search", "enable", "supports", "dnssec", "their", "provider", "option", "manager", "screen"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4181cecb5656f6d97e6fe95c16d230394483e0f6", "node_type": "4", "metadata": {"file_path": "docs/howto/v2/link-dns-name.mdx", "file_name": "link-dns-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/link-dns-name.mdx"}, "hash": "dc36fcd462981ff1fe4360431c8eeb6bd220f0675bf46190a78a4d00ee7dae2b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f6b09623-6758-4468-ad57-389eb1806b78", "node_type": "1", "metadata": {"file_path": "docs/howto/v2/link-dns-name.mdx", "file_name": "link-dns-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/link-dns-name.mdx", "header_path": "/Link a DNS name/"}, "hash": "baece05a9333ab5e34df496b55bd6dc7dd227e2e42144950cbf218ccfff57c12", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "870c731e-f4d5-4f5c-a0a6-b0ea65d70c76", "node_type": "1", "metadata": {"header_path": "/Link a DNS name/"}, "hash": "fbc450b2639a05fa9bc6e141414e607126a384dd5e28af74cafb587c9a3db25a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Step 1: Enable DNSSEC\n\nGo to the <Link to=\"https://app.ens.domains\"><b>ENS Manager App</b></Link> and search for your DNS name. You should see a screen like this:\n<BrowserWindow url=\"app.ens.domains\">\n  <Image img=\"/img/howto/link-dns-name-1.webp\"/>\n</BrowserWindow>\n\nIf your DNS provider supports DNSSEC, all you do is enable the option in their DNS manager:\n<BrowserWindow url=\"support.ensmods.xyz\">\n  <Image img=\"/img/howto/link-dns-name-2.webp\"/>\n</BrowserWindow>\n\nIf they don\u2019t, you\u2019ll need to migrate to a DNS provider that does. See:\n> [**Hosting providers**](#hosting-providers)", "mimetype": "text/plain", "start_char_idx": 2354, "end_char_idx": 2943, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "870c731e-f4d5-4f5c-a0a6-b0ea65d70c76": {"__data__": {"id_": "870c731e-f4d5-4f5c-a0a6-b0ea65d70c76", "embedding": null, "metadata": {"file_path": "docs/howto/v2/link-dns-name.mdx", "file_name": "link-dns-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/link-dns-name.mdx", "header_path": "/Link a DNS name/", "customer_id": 1, "source_url": "docs/howto/v2/link-dns-name.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ethereum", "registrar", "ownership", "verify", "contents", "control", "record", "looks", "prove", "following", "create", "wallet", "where"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4181cecb5656f6d97e6fe95c16d230394483e0f6", "node_type": "4", "metadata": {"file_path": "docs/howto/v2/link-dns-name.mdx", "file_name": "link-dns-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/link-dns-name.mdx"}, "hash": "dc36fcd462981ff1fe4360431c8eeb6bd220f0675bf46190a78a4d00ee7dae2b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3d5787ff-5560-43d9-bfdf-b377ae29aa9b", "node_type": "1", "metadata": {"file_path": "docs/howto/v2/link-dns-name.mdx", "file_name": "link-dns-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/link-dns-name.mdx", "header_path": "/Link a DNS name/"}, "hash": "b0594d38fa599fe05df35dc6b4df7c63d500fb9091b860d0224d360d77b57db7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "23bb79d4-8a1c-4eee-bf37-5116dc022152", "node_type": "1", "metadata": {"header_path": "/Link a DNS name/"}, "hash": "f4f8122ec1cb2f44da3831669842d3afac0a63ca6b63df704780be004800c577", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Step 2: Add the TXT-record\nThe DNS Registrar on ENS looks for a `TXT record` to verify ownership of the domain. This record has the following attributes:\n\n<div align='center'>\n\n|          |                    |\n| -------- | -------------------|\n| Type     | `TXT`              |\n| Name     | `_ens`             |\n| Contents | `a=wallet address` |\n| TTL      | `36000`            |\n\n</div>\n\nTo prove ownership of your DNS name, create a `TXT record` in your DNS zone, _ens.yourdomain.xyz, with text data of the form `a=walletaddress`... where `walletaddress` is the Ethereum wallet you want to give control of the ENS record to.\n<BrowserWindow url=\"support.ensmods.xyz\">\n  <Image img=\"/img/howto/link-dns-name-3.webp\"/>\n</BrowserWindow>", "mimetype": "text/plain", "start_char_idx": 2945, "end_char_idx": 3683, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "23bb79d4-8a1c-4eee-bf37-5116dc022152": {"__data__": {"id_": "23bb79d4-8a1c-4eee-bf37-5116dc022152", "embedding": null, "metadata": {"file_path": "docs/howto/v2/link-dns-name.mdx", "file_name": "link-dns-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/link-dns-name.mdx", "header_path": "/Link a DNS name/", "customer_id": 1, "source_url": "docs/howto/v2/link-dns-name.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["finish", "updated", "proceeding", "troubleshooting", "linking", "propagate", "record", "should", "throughout", "waiting", "manager", "records", "pressing", "changes"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4181cecb5656f6d97e6fe95c16d230394483e0f6", "node_type": "4", "metadata": {"file_path": "docs/howto/v2/link-dns-name.mdx", "file_name": "link-dns-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/link-dns-name.mdx"}, "hash": "dc36fcd462981ff1fe4360431c8eeb6bd220f0675bf46190a78a4d00ee7dae2b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "870c731e-f4d5-4f5c-a0a6-b0ea65d70c76", "node_type": "1", "metadata": {"file_path": "docs/howto/v2/link-dns-name.mdx", "file_name": "link-dns-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/link-dns-name.mdx", "header_path": "/Link a DNS name/"}, "hash": "c457398a255fc354cd6f3b2b155d583004b0ad665496c5181ceb207eb65edba6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4ab7377a-ef00-4a16-bd7b-c2ade2502c8a", "node_type": "1", "metadata": {"header_path": "/Link a DNS name/"}, "hash": "fadef15a2e0d54eebeaa2d59ae0a6526c353af8407fbda3099ff38cacefd2694", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Step 3: Linking the name with ENS\nNow you should be able to go back to the <Link to=\"https://app.ens.domains\"><b>ENS Manager App</b></Link> and finish linking the DNS name with ENS by pressing `Register`.\n<BrowserWindow url=\"app.ens.domains\">\n  <Image img=\"/img/howto/link-dns-name-4.webp\"/>\n</BrowserWindow> ## Troubleshooting ### I\u2019ve updated the DNS records, but it\u2019s not proceeding to the next steps.\nIt can take time for record changes in DNS to propagate throughout the Internet. If you are sure the records are set properly, try waiting for some amount of time and refreshing the DNS import page.", "mimetype": "text/plain", "start_char_idx": 3685, "end_char_idx": 3996, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6596966f-9876-4c20-98c3-56912e7524f4": {"__data__": {"id_": "6596966f-9876-4c20-98c3-56912e7524f4", "embedding": null, "metadata": {"file_path": "docs/howto/v2/link-dns-name.mdx", "file_name": "link-dns-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/link-dns-name.mdx", "header_path": "/Link a DNS name/Troubleshooting/", "customer_id": 1, "source_url": "docs/howto/v2/link-dns-name.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["registration", "cthulu", "analyzer", "dnssec", "detect", "register", "manager", "connect"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4181cecb5656f6d97e6fe95c16d230394483e0f6", "node_type": "4", "metadata": {"file_path": "docs/howto/v2/link-dns-name.mdx", "file_name": "link-dns-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/link-dns-name.mdx"}, "hash": "dc36fcd462981ff1fe4360431c8eeb6bd220f0675bf46190a78a4d00ee7dae2b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6cd99f04-a827-44a3-ad4d-496c89afa899", "node_type": "1", "metadata": {"file_path": "docs/howto/v2/link-dns-name.mdx", "file_name": "link-dns-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/link-dns-name.mdx", "header_path": "/Link a DNS name/Troubleshooting/"}, "hash": "2dbdea458cab6c8cd7d36b3988b7205c8c1592dd15a59410893fdd1969c56640", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### I've set up DNSSEC but the ENS Manager App doesn't detect it\nUse a [DNSSEC Analyzer tool](https://dnssec-debugger.verisignlabs.com/) to look for errors. ---\ntitle: Register a name\ntags:\n  - registration\nlast_update:\n    author: cthulu\nkeywords: [ens registration, ens register, ens register a name, ens name registration, name registration, ens registration, get your own ens, get your own ens name]\n--- # How to register a name ## Go to the ENS Manager App\nGo to the <Link to=\"https://app.ens.domains\"><b>ENS Manager App</b></Link> and connect your wallet.", "mimetype": "text/plain", "start_char_idx": 4295, "end_char_idx": 4451, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "df91fe72-0f65-4782-9610-e9af6c076d95": {"__data__": {"id_": "df91fe72-0f65-4782-9610-e9af6c076d95", "embedding": null, "metadata": {"file_path": "docs/howto/v2/registration.mdx", "file_name": "registration.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/registration.mdx", "header_path": "/How to register a name/", "customer_id": 1, "source_url": "docs/howto/v2/registration.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["graph", "transaction", "registering", "active", "provided", "details", "search", "three", "searched", "continue", "click", "inactive", "classdef"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7f188176c5b0c533ec648e7c2ddd982007e138a6", "node_type": "4", "metadata": {"file_path": "docs/howto/v2/registration.mdx", "file_name": "registration.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/registration.mdx"}, "hash": "26f98f1bfb9b396892f1896eb614c4a14502a249d8b1cc71ebd67cb7b06af832", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "63a34617-3dbd-4161-bf2f-6ab0c6235acd", "node_type": "1", "metadata": {"file_path": "docs/howto/v2/registration.mdx", "file_name": "registration.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/registration.mdx", "header_path": "/How to register a name/"}, "hash": "10a59907a86241ef2c73370bd0135425f8db9abfc54799b5d414841a511d1752", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3affa960-586e-4aca-b506-ade139e3dd5f", "node_type": "1", "metadata": {"header_path": "/How to register a name/"}, "hash": "c62024bdd909ca3549298dcd7a2a56546155c86a2d30e8723e2e4cac8d0e8375", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Search for the ENS name you want\n<BrowserWindow url=\"app.ens.domains\">\n  <Image img=\"/img/register_name_img3.webp\"/>\n</BrowserWindow>\n\nProvided that the name you searched for is available, click on it to continue to the registration.\n<BrowserWindow url=\"app.ens.domains\">\n  <Image img=\"/img/register_name_img4.webp\"/>\n</BrowserWindow> ## Registering your ENS name\nRegistering an ENS name is a three step process:\n```mermaid\n%%{\n  init: {\n    'flowchart': {\n      'curve': 'linear'\n      } } }%%\n      \ngraph LR;\nA(Request to Register);\nB(Wait 60 Seconds);\nC(Register);\n\nclassDef active stroke-width:4px;\nclassDef inactive stroke-dasharray: 5 5;\n\nA-->B-->C;\n```\n\n:::info Transaction details\n| Transaction           | Details                                              |\n| --------------------- | ---------------------------------------------------- |\n| `Request to Register` | *A 0 ETH commit transaction to prevent frontrunning* |\n| `Wait 60 seconds`     | *A 60 second waiting time*                           |\n| `Register`            | *The actual registration transaction*                |\n:::", "mimetype": "text/plain", "start_char_idx": 408, "end_char_idx": 745, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3ca9b59f-e9fc-468e-9855-cda32b881891": {"__data__": {"id_": "3ca9b59f-e9fc-468e-9855-cda32b881891", "embedding": null, "metadata": {"file_path": "docs/howto/v2/registration.mdx", "file_name": "registration.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/registration.mdx", "header_path": "/How to register a name/Registering your ENS name/", "customer_id": 1, "source_url": "docs/howto/v2/registration.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["graph", "transaction", "start", "performed", "request", "hashed", "registration", "active", "click", "inactive", "register", "where", "classdef", "class"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7f188176c5b0c533ec648e7c2ddd982007e138a6", "node_type": "4", "metadata": {"file_path": "docs/howto/v2/registration.mdx", "file_name": "registration.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/registration.mdx"}, "hash": "26f98f1bfb9b396892f1896eb614c4a14502a249d8b1cc71ebd67cb7b06af832", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3affa960-586e-4aca-b506-ade139e3dd5f", "node_type": "1", "metadata": {"file_path": "docs/howto/v2/registration.mdx", "file_name": "registration.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/registration.mdx", "header_path": "/How to register a name/"}, "hash": "f90120469a6de9b440f18bcf7ae6eece8117dd02e5b373c41dd3981b27f388fe", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c69c5b53-7368-4676-b0ba-c7c00fb8ec65", "node_type": "1", "metadata": {"header_path": "/How to register a name/Registering your ENS name/"}, "hash": "b682f0460426f637a313ab75e5d8ba1e5da4bd25fe3b36fc0ba035e8f5fec1ec", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Step 1: Request to register\n```mermaid\n%%{\n  init: {\n    'flowchart': {\n      'curve': 'linear'\n      } } }%%\n      \ngraph LR;\nA(Request to Register);\nB(Wait 60 Seconds);\nC(Register);\n\nclassDef active stroke-width:4px;\nclassDef inactive stroke-dasharray: 5 5;\n\nclass A active;\n\nA-->B-->C;\n```\nClick `Request to Register` to start **Step 1** of the registration process.\nA 0 ETH transaction is performed where your name is hashed with a secret key so that no one else can view the name you're trying to register.\n\n:::info\nWhile this transaction does not have a transaction value, it still incurs a gas fee.\n:::\n\n:::caution\n* This step stores a *secret key* in your browser's local storage. To avoid having to repeat this step, make sure to ***not*** clear your cache or switch browsers.\n\n* You have ***7 days*** to complete Step 3 before the `Request to Register` transaction expires. *However,* the ENS name is ***not reserved for you*** during this time.\n:::\n\n<BrowserWindow url=\"app.ens.domains\">\n  <Image img=\"/img/register_name_img5.webp\"/>\n</BrowserWindow>\n\nVerify that the cost of the transaction is what you expect it to be and confirm the transaction in your wallet.", "mimetype": "text/plain", "start_char_idx": 1512, "end_char_idx": 2690, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c69c5b53-7368-4676-b0ba-c7c00fb8ec65": {"__data__": {"id_": "c69c5b53-7368-4676-b0ba-c7c00fb8ec65", "embedding": null, "metadata": {"file_path": "docs/howto/v2/registration.mdx", "file_name": "registration.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/registration.mdx", "header_path": "/How to register a name/Registering your ENS name/", "customer_id": 1, "source_url": "docs/howto/v2/registration.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["graph", "transaction", "inactive", "after", "completes", "front", "waiting", "active", "period", "prevent", "seconds", "classdef", "class"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7f188176c5b0c533ec648e7c2ddd982007e138a6", "node_type": "4", "metadata": {"file_path": "docs/howto/v2/registration.mdx", "file_name": "registration.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/registration.mdx"}, "hash": "26f98f1bfb9b396892f1896eb614c4a14502a249d8b1cc71ebd67cb7b06af832", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3ca9b59f-e9fc-468e-9855-cda32b881891", "node_type": "1", "metadata": {"file_path": "docs/howto/v2/registration.mdx", "file_name": "registration.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/registration.mdx", "header_path": "/How to register a name/Registering your ENS name/"}, "hash": "6a9089b4d62a0d8a1d8670d13f831849acd076276f0a1378a7e889f16083c9d1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9f3557da-bc43-44d9-b227-0e835ab6572f", "node_type": "1", "metadata": {"header_path": "/How to register a name/Registering your ENS name/"}, "hash": "4a12c0884b0cf3a9e63ed8fe6a85767887ce54d10ebe5e3741827b53d567f98d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Step 2: Wait 60 seconds\n```mermaid\n%%{\n  init: {\n    'flowchart': {\n      'curve': 'linear'\n      } } }%%\n      \ngraph LR;\nA(Request to Register);\nB(Wait 60 Seconds);\nC(Register);\n\nclassDef active stroke-width:4px;\nclassDef inactive stroke-dasharray: 5 5;\n\nclass A inactive;\nclass B active;\n\nA-->B-->C;\n```\nAfter the Step 1 transaction completes there's a 60-second waiting period to prevent front running.\n<BrowserWindow url=\"app.ens.domains\">\n  <Image img=\"/img/register_name_img6.webp\"/>\n</BrowserWindow>", "mimetype": "text/plain", "start_char_idx": 2692, "end_char_idx": 3203, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9f3557da-bc43-44d9-b227-0e835ab6572f": {"__data__": {"id_": "9f3557da-bc43-44d9-b227-0e835ab6572f", "embedding": null, "metadata": {"file_path": "docs/howto/v2/registration.mdx", "file_name": "registration.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/registration.mdx", "header_path": "/How to register a name/Registering your ENS name/", "customer_id": 1, "source_url": "docs/howto/v2/registration.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["graph", "transaction", "transactions", "button", "inactive", "classdef", "active", "click", "confirm", "register", "through", "class"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7f188176c5b0c533ec648e7c2ddd982007e138a6", "node_type": "4", "metadata": {"file_path": "docs/howto/v2/registration.mdx", "file_name": "registration.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/registration.mdx"}, "hash": "26f98f1bfb9b396892f1896eb614c4a14502a249d8b1cc71ebd67cb7b06af832", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c69c5b53-7368-4676-b0ba-c7c00fb8ec65", "node_type": "1", "metadata": {"file_path": "docs/howto/v2/registration.mdx", "file_name": "registration.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/registration.mdx", "header_path": "/How to register a name/Registering your ENS name/"}, "hash": "f159d6a3c26c5497f05e37927a8220cdc1b81b269b77b12c60739ecc705c951c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Step 3: Register\n```mermaid\n%%{\n  init: {\n    'flowchart': {\n      'curve': 'linear'\n      } } }%%\n      \ngraph LR;\nA(Request to Register);\nB(Wait 60 Seconds);\nC(Register);\n\nclassDef active stroke-width:4px;\nclassDef inactive stroke-dasharray: 5 5;\n\nclass A,B inactive;\nclass C active;\n\nA-->B-->C;\n```\nNow it's time to `Register` your ENS name. Click the register button and confirm the transaction in your wallet.\n<BrowserWindow url=\"app.ens.domains\">\n  <Image img=\"/img/register_name_img7.webp\"/>\n</BrowserWindow>\n\nCongratulations! If all transactions went through successfully you should now be the proud owner of your very own ENS name!\n<BrowserWindow url=\"app.ens.domains\">\n  <Image img=\"/img/register_name_img8.webp\"/>\n</BrowserWindow>", "mimetype": "text/plain", "start_char_idx": 3205, "end_char_idx": 3950, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "27dfda83-9fb4-45eb-ac9c-e24b1eef45d9": {"__data__": {"id_": "27dfda83-9fb4-45eb-ac9c-e24b1eef45d9", "embedding": null, "metadata": {"file_path": "docs/howto/v2/set-avatar.mdx", "file_name": "set-avatar.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/set-avatar.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/howto/v2/set-avatar.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["profile", "record", "avatar", "update", "cthulu", "wallet", "upload", "manager", "connect"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "18ca6dd0c5e075e92771b546166d5a4a04901750", "node_type": "4", "metadata": {"file_path": "docs/howto/v2/set-avatar.mdx", "file_name": "set-avatar.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/set-avatar.mdx"}, "hash": "6d933b14c720de3541509064c41d99df87d42c44dd80723a550d5333b796ab1b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "de696f7c-2a55-4b61-9f74-07cf8f1ebdee", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "f0da253bafa543d2a5049afc0846f923a31bb294ef02b4e96b0c24a55a6128bc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ntitle: Set an Avatar\ntags:\n  - avatar record\n  - avatar\n  - set avatar\nlast_update:\n  author: cthulu\nkeywords: [ens avatar, set avatar, set ens avatar, avatar, update avatar, upload avatar, avatar on ens name, ens profile picture, profile picture, ens name background, background]\n--- # How to set an Avatar on your ENS name\nConnect to the <Link to=\"https://app.ens.domains\"><b>ENS Manager App</b></Link> with the wallet set as `Controller` for the ENS name you want to manage and click `Add/Edit Record`\n<BrowserWindow url=\"app.ens.domains\">\n  <Image img=\"/img/avatar_set1.webp\"/>\n</BrowserWindow>\n\n:::info\nYou have three options to set the image for the avatar record:\n 1. A [**Web2 URL**](#a-web2-url)\n 1. An [**Ethereum NFT**](#ethereum-nft)\n 1. A [**Decentralized link**](#decentralized-link)\n:::", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 288, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d00091b9-f77f-42d5-a0e4-00940a535b6e": {"__data__": {"id_": "d00091b9-f77f-42d5-a0e4-00940a535b6e", "embedding": null, "metadata": {"file_path": "docs/howto/v2/set-avatar.mdx", "file_name": "set-avatar.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/set-avatar.mdx", "header_path": "/How to set an Avatar on your ENS name/", "customer_id": 1, "source_url": "docs/howto/v2/set-avatar.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["select", "instead", "method", "avatar", "often", "decide", "direct", "default", "image", "users", "their"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "18ca6dd0c5e075e92771b546166d5a4a04901750", "node_type": "4", "metadata": {"file_path": "docs/howto/v2/set-avatar.mdx", "file_name": "set-avatar.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/set-avatar.mdx"}, "hash": "6d933b14c720de3541509064c41d99df87d42c44dd80723a550d5333b796ab1b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "de696f7c-2a55-4b61-9f74-07cf8f1ebdee", "node_type": "1", "metadata": {"file_path": "docs/howto/v2/set-avatar.mdx", "file_name": "set-avatar.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/set-avatar.mdx", "header_path": "/"}, "hash": "373cb910fc5f318f8849161bd91fb90ef84c378160b507c2204c5eaac95313c8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4f7b4ab6-e358-4bc7-b285-8bb7d7444066", "node_type": "1", "metadata": {"header_path": "/How to set an Avatar on your ENS name/"}, "hash": "a86d2ff330ecbb753e811d971461f44246b044b342a064f76c5dbfe336f83e18", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## **Web2 URL**\nMany users like to use a Web2 link to their avatar image and often use <Link to=\"https://imgur.com\"><b>Imgur</b></Link> for it. If you decide to use this method you need to make sure that you use a ***direct link*** to the image.\n\nMake sure to right-click the image on the page and select `Copy Image Link` to get a direct link to the image instead of the default image landing page.\n<BrowserWindow url=\"imgur.com\">\n  <Image img=\"/img/avatar_set2.webp\"/>\n</BrowserWindow>\n\nIt should look something like this: `https://i.imgur.com/MO1wCsI.jpg`\n\n:::note\nKeep in mind that you can't just append `.jpg` to the end of your link. You need to follow the instructions above to get the *actual* image link.\n:::\n<BrowserWindow url=\"app.ens.domains\">\n  <Image img=\"/img/avatar_set3.webp\"/>\n</BrowserWindow>", "mimetype": "text/plain", "start_char_idx": 808, "end_char_idx": 1619, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4f7b4ab6-e358-4bc7-b285-8bb7d7444066": {"__data__": {"id_": "4f7b4ab6-e358-4bc7-b285-8bb7d7444066", "embedding": null, "metadata": {"file_path": "docs/howto/v2/set-avatar.mdx", "file_name": "set-avatar.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/set-avatar.mdx", "header_path": "/How to set an Avatar on your ENS name/", "customer_id": 1, "source_url": "docs/howto/v2/set-avatar.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ethereum", "properly", "address", "these", "avatar", "three", "create", "standard", "possible", "found", "formatted", "contract", "token"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "18ca6dd0c5e075e92771b546166d5a4a04901750", "node_type": "4", "metadata": {"file_path": "docs/howto/v2/set-avatar.mdx", "file_name": "set-avatar.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/set-avatar.mdx"}, "hash": "6d933b14c720de3541509064c41d99df87d42c44dd80723a550d5333b796ab1b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d00091b9-f77f-42d5-a0e4-00940a535b6e", "node_type": "1", "metadata": {"file_path": "docs/howto/v2/set-avatar.mdx", "file_name": "set-avatar.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/set-avatar.mdx", "header_path": "/How to set an Avatar on your ENS name/"}, "hash": "d5b7b318107c04e45f730a774cc690b7ef622b031f14c8cc7ec85bb27a1366a3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "641477e8-6b91-4146-b924-20efc0b67d20", "node_type": "1", "metadata": {"header_path": "/How to set an Avatar on your ENS name/**Ethereum NFT**/"}, "hash": "bd68d0b93639d1e40a9120b39e56b79ab4423cf28417eef1da37b0376671cda7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## **Ethereum NFT**\nIt's possible to use an Ethereum NFT as an avatar. To set an NFT as your avatar you will need to create a properly formatted address for it. For that you will need these three things:\n\n:::note pre-requisites\n - The NFT standard of your NFT: `ERC-721` or `ERC-1155`\n - The NFT contract address\n - The NFT Token ID\n:::\n\nAll these can be found on the OpenSea page for your NFT under ***Details***:\n<BrowserWindow url=\"app.ens.domains\">\n  <Image img=\"/img/avatar_set4.webp\"/>\n</BrowserWindow>", "mimetype": "text/plain", "start_char_idx": 1621, "end_char_idx": 2129, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "641477e8-6b91-4146-b924-20efc0b67d20": {"__data__": {"id_": "641477e8-6b91-4146-b924-20efc0b67d20", "embedding": null, "metadata": {"file_path": "docs/howto/v2/set-avatar.mdx", "file_name": "set-avatar.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/set-avatar.mdx", "header_path": "/How to set an Avatar on your ENS name/**Ethereum NFT**/", "customer_id": 1, "source_url": "docs/howto/v2/set-avatar.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["formatting", "written", "address", "should", "standard", "create", "lower", "background", "following", "correct", "without", "contract", "token"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "18ca6dd0c5e075e92771b546166d5a4a04901750", "node_type": "4", "metadata": {"file_path": "docs/howto/v2/set-avatar.mdx", "file_name": "set-avatar.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/set-avatar.mdx"}, "hash": "6d933b14c720de3541509064c41d99df87d42c44dd80723a550d5333b796ab1b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4f7b4ab6-e358-4bc7-b285-8bb7d7444066", "node_type": "1", "metadata": {"file_path": "docs/howto/v2/set-avatar.mdx", "file_name": "set-avatar.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/set-avatar.mdx", "header_path": "/How to set an Avatar on your ENS name/"}, "hash": "d126ae0a2c6b3bc16ed3cb07ae3371d972ef938089810e79d6ba48a8f925b2d0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2d0b7306-758a-4b55-84a5-e9e160c786e9", "node_type": "1", "metadata": {"header_path": "/How to set an Avatar on your ENS name/"}, "hash": "08c29e06d213633b75bb2d1a94f77edf044a76e0b9b84d797dde1ed1b58efad7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### NFT Address formatting\nThe correct way to create an address for your NFT is:  \n**eip155:1/**`NFT Standard`**:**`NFT Contract`**/**`Token ID`\n\n> For the NFT standard `ERC-721` or `ERC-1155` should be written in lower case without the hyphen, like this: `erc721` or `erc1155`\n\nFor example, the snow owl NFT set as the background of snowowl.eth has the following information:\n\n|              |                                                                                 |\n| ------------ | ------------------------------------------------------------------------------- |\n| NFT Standard | `ERC-1155`                                                                      |\n| NFT Contract | `0x495f947276749ce646f68ac8c248420045cb7b5e`                                    |\n| Token ID     | `33957215644767143600642543287284327726243903296732787683908170418684512174081` |\n\nSo the properly formatted address to it would look like this:\n`eip155:1/erc1155:0x495f947276749ce646f68ac8c248420045cb7b5e/33957215644767143600642543287284327726243903296732787683908170418684512174081`", "mimetype": "text/plain", "start_char_idx": 2131, "end_char_idx": 3206, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2d0b7306-758a-4b55-84a5-e9e160c786e9": {"__data__": {"id_": "2d0b7306-758a-4b55-84a5-e9e160c786e9", "embedding": null, "metadata": {"file_path": "docs/howto/v2/set-avatar.mdx", "file_name": "set-avatar.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/set-avatar.mdx", "header_path": "/How to set an Avatar on your ENS name/", "customer_id": 1, "source_url": "docs/howto/v2/set-avatar.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["onion", "hosted", "protocol", "arweave", "either", "address", "record", "decentralized", "direct", "following", "possible", "image", "including", "example"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "18ca6dd0c5e075e92771b546166d5a4a04901750", "node_type": "4", "metadata": {"file_path": "docs/howto/v2/set-avatar.mdx", "file_name": "set-avatar.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/set-avatar.mdx"}, "hash": "6d933b14c720de3541509064c41d99df87d42c44dd80723a550d5333b796ab1b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "641477e8-6b91-4146-b924-20efc0b67d20", "node_type": "1", "metadata": {"file_path": "docs/howto/v2/set-avatar.mdx", "file_name": "set-avatar.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/set-avatar.mdx", "header_path": "/How to set an Avatar on your ENS name/**Ethereum NFT**/"}, "hash": "612db7cd97653b807ad41f70df0351c70399e89d9c543b5517cb24d1e497b7fd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "00ad7fb8-0203-4295-98a8-1746089a5586", "node_type": "1", "metadata": {"header_path": "/How to set an Avatar on your ENS name/"}, "hash": "dc929e6de31615f4f90e589cad7e196dee9a9f0ea3e8586ab2c5b435f82aab6b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Decentralized link\nIt's possible to use a direct link to an image hosted on the following decentralized protocols:\n\n|             |          |          |\n| ----------- | -------- | -------- |\n| IPFS / IPNS | Arweave  | Tor      |\n| Onion 3     | Bzz      | Sia      |\n\nTo use either of them set the `Content` record to the address including the protocol identifier, for example `ipfs://QmZAP51BH6xqUbnoKerm9ymmFUY1kHUVoeAYKW14Vr8RpZ` *(An image of a snow owl)* ## Avatar is set\nIf you've followed the instructions and set the avatar successfully it will show in the ENS Manager App\n<BrowserWindow url=\"app.ens.domains\">\n  <Image img=\"/img/avatar_set5.png\"/>\n</BrowserWindow>", "mimetype": "text/plain", "start_char_idx": 3208, "end_char_idx": 3671, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6d8345cf-d544-4caa-baf5-7a4124079b6a": {"__data__": {"id_": "6d8345cf-d544-4caa-baf5-7a4124079b6a", "embedding": null, "metadata": {"file_path": "docs/howto/v2/set-avatar.mdx", "file_name": "set-avatar.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/set-avatar.mdx", "header_path": "/How to set an Avatar on your ENS name/", "customer_id": 1, "source_url": "docs/howto/v2/set-avatar.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["appears", "order", "avatar", "background", "image", "entire", "cover", "needs"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "18ca6dd0c5e075e92771b546166d5a4a04901750", "node_type": "4", "metadata": {"file_path": "docs/howto/v2/set-avatar.mdx", "file_name": "set-avatar.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/set-avatar.mdx"}, "hash": "6d933b14c720de3541509064c41d99df87d42c44dd80723a550d5333b796ab1b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "00ad7fb8-0203-4295-98a8-1746089a5586", "node_type": "1", "metadata": {"file_path": "docs/howto/v2/set-avatar.mdx", "file_name": "set-avatar.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/set-avatar.mdx", "header_path": "/How to set an Avatar on your ENS name/"}, "hash": "81cb14089ded4fefecff079b53203872614517c78014ed1e26fadf8a5de22a36", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## The image on the avatar doesn't cover the entire background\nIn order for the image set as the avatar to cover the entire background it needs to be square.\nIf the image appears on your avatar with a border on sides or on the top, that's because you've set an image that isn't square (of equal width and height). ---\nlast_update:\n  author: cthulu\ntags:\n  - primary name\n  - identity\n  - did\nkeywords: [ens primary, ens primary name, set primary name, set a primary name, set a name on wallet, set wallet name, name my wallet, wallet naming]\n---", "mimetype": "text/plain", "start_char_idx": 3889, "end_char_idx": 4202, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0196feee-0d0b-4e1e-ae9d-a03d778e57c6": {"__data__": {"id_": "0196feee-0d0b-4e1e-ae9d-a03d778e57c6", "embedding": null, "metadata": {"file_path": "docs/howto/v2/set-primary-name.mdx", "file_name": "set-primary-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/set-primary-name.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/howto/v2/set-primary-name.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["primary", "helping", "responsible", "services", "address", "guide", "record", "reverse", "display", "decentralized", "based", "wallet", "resolving"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "60cd93963c8cfc493d1d3d82cceac0f8dcccb07c", "node_type": "4", "metadata": {"file_path": "docs/howto/v2/set-primary-name.mdx", "file_name": "set-primary-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/set-primary-name.mdx"}, "hash": "567e8433dd455367ca4a286c8a9ca6752ebcc5eba24043a88554233b805d76e2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a37d3fd1-381a-4054-b367-578424961da2", "node_type": "1", "metadata": {"file_path": "docs/howto/v2/set-primary-name.mdx", "file_name": "set-primary-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/set-primary-name.mdx", "header_path": "/"}, "hash": "a81b18b4749e8a70929931c461010d8bde80fc1ec727219a43bcc26a500bd637", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4373b93d-8bb3-44bb-b3d0-fb01e5fd9dbe", "node_type": "1", "metadata": {"header_path": "/Set a Primary name/"}, "hash": "6fdf3b16b130ee6733f0c30f7d2e431ea9fd56c0bbc2ae3f21419ea17bfeaeaf", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Set a Primary name\n\nThe Primary name is your reverse record responsible for resolving your wallet address to your ENS name, helping decentralized apps and services display your ENS name based on your *Ethereum* wallet address.\n\nIn this guide we'll show you how to set up your Primary Name in just 3 steps.\n\n<BrowserWindow url=\"https://app.ens.domains\">\n  <div style={{'background':'#f0f6fa'}}>\n    <Image img=\"/img/howto/set-primary-name-verify-ensmanager.png\"/>\n  </div>\n</BrowserWindow>\n\nSetting a name as `Primary` in your wallet is usually a simple affair, but it can be a little complicated if:\n - The name was registered using a third-party service that didn't set the `Resolver` and `ETH Address` records by default.\n - The name was purchased on a secondary market and the `ETH Address` record is still set to the previous owner's wallet.\n\nIf either of these applies to you, then you can solve it by following the [Prerequisites](#prerequisites) section below.", "mimetype": "text/plain", "start_char_idx": 233, "end_char_idx": 1202, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4373b93d-8bb3-44bb-b3d0-fb01e5fd9dbe": {"__data__": {"id_": "4373b93d-8bb3-44bb-b3d0-fb01e5fd9dbe", "embedding": null, "metadata": {"file_path": "docs/howto/v2/set-primary-name.mdx", "file_name": "set-primary-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/set-primary-name.mdx", "header_path": "/Set a Primary name/", "customer_id": 1, "source_url": "docs/howto/v2/set-primary-name.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["prerequisites", "order", "record", "smart", "public", "setting", "scroll", "resolver", "there", "bottom", "wallet", "manager"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "60cd93963c8cfc493d1d3d82cceac0f8dcccb07c", "node_type": "4", "metadata": {"file_path": "docs/howto/v2/set-primary-name.mdx", "file_name": "set-primary-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/set-primary-name.mdx"}, "hash": "567e8433dd455367ca4a286c8a9ca6752ebcc5eba24043a88554233b805d76e2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0196feee-0d0b-4e1e-ae9d-a03d778e57c6", "node_type": "1", "metadata": {"file_path": "docs/howto/v2/set-primary-name.mdx", "file_name": "set-primary-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/set-primary-name.mdx", "header_path": "/"}, "hash": "716b2dd282cbfe135c747c89d8fcbc72c6961260965c37cfd0fd13d614004d05", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "030c8c99-da90-4dce-a111-d3208ce78c0a", "node_type": "1", "metadata": {"header_path": "/Set a Primary name/1. Prerequisites {#prerequisites}/"}, "hash": "5021467ff912d940e7c994a041f89cab13a3675d542614abc855b6fa46402a71", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## 1. Prerequisites {#prerequisites}\n:::info prerequisites\nIn order to set an ENS name as `Primary` there are two prerequisites:\n1. The Resolver record must be set to the `ENS Public Resolver` smart contract.\n1. The `ETH Address` record must be set to the wallet you're setting the `Primary` on.\n::: ### 1.1. Set the Resolver {#1-set-the-resolver}\nGo to your ENS name in the [ENS Manager App](https://app.ens.domains) and scroll down to the bottom and expand `Advanced settings`.\nMake sure that the `Resolver` record there is set to either of these contract addresses:\n\n:::info\n - The **new** ENS Public Resolver contract: `0x231b0Ee14048e9dCcD1d247744d114a4EB5E8E63`\n - The **old** ENS Public Resolver contract: `0x4976fb03C32e5B8cfe2b6cCB31c09Ba78EBaBa41`  \n   _the old ENS Public Resolver contract will continue to work and should not cause any issues._\n:::\n\n<BrowserWindow url=\"https://app.ens.domains\">\n  <div style={{'background':'#f0f6fa'}}>\n    <Image img=\"/img/howto/set-primary-name-resolver-1.png\"/>\n  </div>\n</BrowserWindow>\n\nIf it's unset edit it and enter the ENS Public Resolver: `0x231b0Ee14048e9dCcD1d247744d114a4EB5E8E63`", "mimetype": "text/plain", "start_char_idx": 1204, "end_char_idx": 1503, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "92270c9e-30fd-457e-aae2-9a4e96654fc3": {"__data__": {"id_": "92270c9e-30fd-457e-aae2-9a4e96654fc3", "embedding": null, "metadata": {"file_path": "docs/howto/v2/set-primary-name.mdx", "file_name": "set-primary-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/set-primary-name.mdx", "header_path": "/Set a Primary name/1. Prerequisites {#prerequisites}/", "customer_id": 1, "source_url": "docs/howto/v2/set-primary-name.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["enter", "address", "record", "scroll", "click", "wallet", "manager", "section"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "60cd93963c8cfc493d1d3d82cceac0f8dcccb07c", "node_type": "4", "metadata": {"file_path": "docs/howto/v2/set-primary-name.mdx", "file_name": "set-primary-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/set-primary-name.mdx"}, "hash": "567e8433dd455367ca4a286c8a9ca6752ebcc5eba24043a88554233b805d76e2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "030c8c99-da90-4dce-a111-d3208ce78c0a", "node_type": "1", "metadata": {"file_path": "docs/howto/v2/set-primary-name.mdx", "file_name": "set-primary-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/set-primary-name.mdx", "header_path": "/Set a Primary name/1. Prerequisites {#prerequisites}/"}, "hash": "dbba220eb54aad176661d31a96c6537c650c8532c78c8aa901db19ddb9e6eefa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "19cb0862-8e5f-4911-b20e-24099c72754f", "node_type": "1", "metadata": {"header_path": "/Set a Primary name/"}, "hash": "946a05d8263c5edeed5f8080cd71b1fe1ec0bab78ff7655eda9acb73ef08fb59", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### 1.2. Set the ETH Address record {#2-set-the-eth-address-record}\nGo to your ENS name in the [ENS Manager App](https://app.ens.domains) and scroll down to the `Addresses` section\n\n<BrowserWindow url=\"https://app.ens.domains\">\n  <div style={{'background':'#f0f6fa'}}>\n    <Image img=\"/img/howto/set-primary-name-ethaddress-1.png\"/>\n  </div>\n</BrowserWindow>\n\nClick `Add/Edit Record` and enter your wallet address into the `ETH Address` record field.\n\n<BrowserWindow url=\"https://app.ens.domains\">\n  <div style={{'background':'#f0f6fa'}}>\n    <Image img=\"/img/howto/set-primary-name-ethaddress-2.png\"/>\n  </div>\n</BrowserWindow>\n\nThen **_scroll down_** and click `Confirm` _at the **bottom** of the address section_.\n\n<BrowserWindow url=\"https://app.ens.domains\">\n  <div style={{'background':'#f0f6fa'}}>\n    <Image img=\"/img/howto/set-primary-name-ethaddress-3.png\"/>\n  </div>\n</BrowserWindow>", "mimetype": "text/plain", "start_char_idx": 2346, "end_char_idx": 3240, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "19cb0862-8e5f-4911-b20e-24099c72754f": {"__data__": {"id_": "19cb0862-8e5f-4911-b20e-24099c72754f", "embedding": null, "metadata": {"file_path": "docs/howto/v2/set-primary-name.mdx", "file_name": "set-primary-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/set-primary-name.mdx", "header_path": "/Set a Primary name/", "customer_id": 1, "source_url": "docs/howto/v2/set-primary-name.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["primary", "please", "point", "either", "configured", "record", "these", "first", "instructions", "manager", "prerequisites", "wallet", "connect", "follow"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "60cd93963c8cfc493d1d3d82cceac0f8dcccb07c", "node_type": "4", "metadata": {"file_path": "docs/howto/v2/set-primary-name.mdx", "file_name": "set-primary-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/set-primary-name.mdx"}, "hash": "567e8433dd455367ca4a286c8a9ca6752ebcc5eba24043a88554233b805d76e2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "92270c9e-30fd-457e-aae2-9a4e96654fc3", "node_type": "1", "metadata": {"file_path": "docs/howto/v2/set-primary-name.mdx", "file_name": "set-primary-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/set-primary-name.mdx", "header_path": "/Set a Primary name/1. Prerequisites {#prerequisites}/"}, "hash": "aae55bc18aa6dd25f4ea86ca5d4621117079ca557d6f9a0e60ffdee2425e8444", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cf355f47-f8d2-453e-941f-3d4886ebbde9", "node_type": "1", "metadata": {"header_path": "/Set a Primary name/"}, "hash": "c0f788e315e4443f7f3df074b65e1af0ec339267eab11a15f01df55b6349a6b7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## 2. Set the Primary Name {#set-the-primary-name}\n:::caution Prerequisites\n - The ENS name must be configured with a `Resolver` record for the `Addresses`-section to appear.\n - The `ETH Address` record of the ENS name must first point to the wallet you want to set the `Primary Name` on\n\nIf either of these aren't set, please follow the instructions in [Prerequisites](#prerequisites)\n:::\n\nGo to the <Link to=\"https://app.ens.domains\"><b>ENS Manager App</b></Link> and connect your wallet.\n\nClick `My Account` on the upper right hand side to go to your Account page. Select an ENS name from the Primary drop-down list, click `Save` and confirm the transaction in your wallet.\n<BrowserWindow url=\"https://app.ens.domains\">\n  <div style={{'background':'#f0f6fa'}}>\n    <Image img=\"/img/howto/set-primary-name-1.png\"/>\n  </div>\n</BrowserWindow>", "mimetype": "text/plain", "start_char_idx": 3242, "end_char_idx": 4084, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cf355f47-f8d2-453e-941f-3d4886ebbde9": {"__data__": {"id_": "cf355f47-f8d2-453e-941f-3d4886ebbde9", "embedding": null, "metadata": {"file_path": "docs/howto/v2/set-primary-name.mdx", "file_name": "set-primary-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/set-primary-name.mdx", "header_path": "/Set a Primary name/", "customer_id": 1, "source_url": "docs/howto/v2/set-primary-name.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["primary", "works", "different", "verify", "services", "visit", "corner", "along", "working", "shows", "systems", "wallet", "manager"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "60cd93963c8cfc493d1d3d82cceac0f8dcccb07c", "node_type": "4", "metadata": {"file_path": "docs/howto/v2/set-primary-name.mdx", "file_name": "set-primary-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/set-primary-name.mdx"}, "hash": "567e8433dd455367ca4a286c8a9ca6752ebcc5eba24043a88554233b805d76e2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "19cb0862-8e5f-4911-b20e-24099c72754f", "node_type": "1", "metadata": {"file_path": "docs/howto/v2/set-primary-name.mdx", "file_name": "set-primary-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/set-primary-name.mdx", "header_path": "/Set a Primary name/"}, "hash": "84d2e306a5069f364e01dcb64f7d0729a926bf647638ef77b2c0f3297cebeb6a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## 3. Verify that your Primary name works {#verify-that-your-primary-name-works}\n\nVisit a few different services and verify that your `Primary name` is working correctly:\n\n<Tabs>\n<TabItem value=\"ENS Manager\" default>\n\nThe [ENS Manager App](https://app.ens.domains) will show your `Primary name` and the `Avatar` set on it in the top-right corner, along with your wallet address.\n\n<BrowserWindow url=\"https://app.ens.domains\">\n  <div style={{'background':'#f0f6fa'}}>\n    <Image img=\"/img/howto/set-primary-name-verify-ensmanager.png\"/>\n  </div>\n</BrowserWindow>\n\n</TabItem>\n<TabItem value=\"Uniswap\">\n\n[Uniswap](https://app.uniswap.org) will show your `Primary name` and its `Avatar` in the top-right corner as well!\n\n<BrowserWindow url=\"https://app.uniswap.org\">\n<Image img=\"/img/howto/v3-set-avatar-services-uniswap.png\"/>\n</BrowserWindow>\n</TabItem>\n<TabItem value=\"OpenSea\">\n\n[OpenSea](https://opensea.io) shows your `Primary name` on your user's page next to your wallet address.\n:::caution note\nOpenSea's systems are _very_ slow to update to reflect any changes, please allow at least 24 hours for the `Primary name` to show.\n:::\n\n<BrowserWindow url=\"https://opensea.io\">\n<Image img=\"/img/howto/set-primary-name-verify-opensea.png\"/>\n</BrowserWindow>\n</TabItem>\n<TabItem value=\"etherscan\">\n\n[Etherscan](https://etherscan.io) will show your `Primary name` in the to and from address sections in the transaction list:\n\n<BrowserWindow url=\"https://etherscan.io\">\n<Image img=\"/img/howto/set-primary-name-verify-etherscan-1.png\"/>\n</BrowserWindow>\n\nAnd also on top of the wallet overview:\n\n<BrowserWindow url=\"https://etherscan.io\">\n<Image img=\"/img/howto/set-primary-name-verify-etherscan-2.png\"/>\n</BrowserWindow>\n\n</TabItem>\n</Tabs>", "mimetype": "text/plain", "start_char_idx": 4087, "end_char_idx": 5822, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "95539202-50ad-4499-a3fb-b75198d68226": {"__data__": {"id_": "95539202-50ad-4499-a3fb-b75198d68226", "embedding": null, "metadata": {"file_path": "docs/howto/v2/set-record.mdx", "file_name": "set-record.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/set-record.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/howto/v2/set-record.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["alter", "modify", "zadok7", "record", "update", "create", "click", "wallet", "change", "manager", "connect"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "08a0a4e684a827f239dad458b6bcfadea40689eb", "node_type": "4", "metadata": {"file_path": "docs/howto/v2/set-record.mdx", "file_name": "set-record.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/set-record.mdx"}, "hash": "7abb5fe27028ee337893322fb65a799fa59b17eda2068c65b08aedc3b60d59b3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bc00d782-0fd3-45ae-9fc5-abbdbb9d6fd8", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "63d4807450d9d6f8801a567c7f21abdc4b0f9d4dd8891041ef6100e46433aed3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ntitle: Set a Record\nlast_update:\n  author: zadok7\ntags:\n - set record\nkeywords: [ens record, ens records, set record, add record, create record, update record, change record, alter record, modify record, record, records]\n--- # How to Set a Record\nConnect to the <Link to=\"https://app.ens.domains\"><b>ENS Manager App</b></Link> with the wallet set as `Controller` for the ENS name you want to set a record for and click `Add/Edit Record`\n<BrowserWindow url=\"app.ens.domains\">\n  <Image img=\"/img/howto/set-record-1.png\"/>\n</BrowserWindow>", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 228, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2a84702d-de0e-45d4-9dc1-9d2df0e45eec": {"__data__": {"id_": "2a84702d-de0e-45d4-9dc1-9d2df0e45eec", "embedding": null, "metadata": {"file_path": "docs/howto/v2/set-record.mdx", "file_name": "set-record.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/set-record.mdx", "header_path": "/How to Set a Record/", "customer_id": 1, "source_url": "docs/howto/v2/set-record.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["visible", "select", "transaction", "would", "record", "store", "update", "which", "scroll", "confirm", "records", "saved", "publicly"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "08a0a4e684a827f239dad458b6bcfadea40689eb", "node_type": "4", "metadata": {"file_path": "docs/howto/v2/set-record.mdx", "file_name": "set-record.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/set-record.mdx"}, "hash": "7abb5fe27028ee337893322fb65a799fa59b17eda2068c65b08aedc3b60d59b3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bc00d782-0fd3-45ae-9fc5-abbdbb9d6fd8", "node_type": "1", "metadata": {"file_path": "docs/howto/v2/set-record.mdx", "file_name": "set-record.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/set-record.mdx", "header_path": "/"}, "hash": "4cce2704a1005b831fa15c9cff9115a776967ecf6b0fed12be3b12713e56a1c3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ef570a45-36de-4f01-9783-13c158cb6828", "node_type": "1", "metadata": {"header_path": "/How to Set a Record/"}, "hash": "3fe4ab28ffe977ff74829ad21e1f709ee144c6ce897a8d0ea0c317878ece9307", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Select which Records Store\nScroll down to find the record(s) you want to set. Records are saved in a publicly visible way. Fill in the record field(s) with the data you would like to store.\n<BrowserWindow url=\"app.ens.domains\">\n  <Image img=\"/img/howto/set-record-2.png\"/>\n</BrowserWindow> ## Confirm the Transaction\nYou can update more than one record at a time. After you have filled out all the desired record fields, scroll down, click \u201cConfirm\u201d and approve the transaction in your wallet.\n<BrowserWindow url=\"app.ens.domains\">\n  <Image img=\"/img/howto/set-record-3.png\"/>\n</BrowserWindow>", "mimetype": "text/plain", "start_char_idx": 543, "end_char_idx": 835, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "969f5205-b458-48e8-93a9-b712aeb5db4c": {"__data__": {"id_": "969f5205-b458-48e8-93a9-b712aeb5db4c", "embedding": null, "metadata": {"file_path": "docs/howto/v2/transfer-name.mdx", "file_name": "transfer-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/transfer-name.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/howto/v2/transfer-name.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["resides", "therefore", "order", "called", "transfer", "cthulu", "owner", "wallet", "manager"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f7eb9f1294c1b6cf964fad9d6e5bbb9f602532d5", "node_type": "4", "metadata": {"file_path": "docs/howto/v2/transfer-name.mdx", "file_name": "transfer-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/transfer-name.mdx"}, "hash": "9152e60001effebf4176a86116e49ae6dce4b3549f1059ccfbbabf0a3fe4172a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ddc2efc2-8b46-49ef-891e-122d347abd93", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "0c166692d9a085577bb934f01c5eaa1d9ef051517d845aac0d8e340ad5cac093", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ntitle: Transfer an ENS Name\nlast_update:\n  author: cthulu\ntags:\n  - transfer\n  - transfer name\n  - gift\nkeywords: [transfer ens, transfer ens name, ens transfer, ens name transfer, send ens, send ens name, ens send, ens name send, move ens, move ens name]\n--- # Transfer an ENS name\nThe owner of an ENS name is called the `Registrant` in the <Link to=\"https://app.ens.domains\"><b>ENS Manager App</b></Link>. This is the wallet the ENS name NFT resides in.\nIn order to transfer an ENS name you must therefore transfer the `Registrant`.\n\nHowever, an ENS name contains more records than just `Registrant` which can be set to different wallets. There are three central records involved in name transfers: \n\n<BrowserWindow url=\"app.ens.domains\">\n  <Image img=\"/img/howto/transfer_name_1.png\"/>\n</BrowserWindow>\n\n:::info\n 1. **Registrant:** *The owner of the ENS name, the wallet the ENS name NFT resides in.*\n 1. **Controller:** *The administrator of records, the wallet allowed to make changes to its records (but not transfer the name)*\n 1. **ETH Address:** *The wallet address the ENS name points to, where funds sent to it will arrive.*\n:::\n\nWhen transferring an ENS name, only the `Registrant` record is automatically updated to reflect the new owner wallet.\nDepending on your specific use-case it's therefore a good idea to take a moment and think about what additional records you want to transfer.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 263, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6689c015-61ae-4cb0-a2f7-3f8e0452d3d7": {"__data__": {"id_": "6689c015-61ae-4cb0-a2f7-3f8e0452d3d7", "embedding": null, "metadata": {"file_path": "docs/howto/v2/transfer-name.mdx", "file_name": "transfer-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/transfer-name.mdx", "header_path": "/Transfer an ENS name/", "customer_id": 1, "source_url": "docs/howto/v2/transfer-name.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["specific", "allowed", "because", "order", "three", "transfer", "completely", "records", "example", "wallet", "change"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f7eb9f1294c1b6cf964fad9d6e5bbb9f602532d5", "node_type": "4", "metadata": {"file_path": "docs/howto/v2/transfer-name.mdx", "file_name": "transfer-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/transfer-name.mdx"}, "hash": "9152e60001effebf4176a86116e49ae6dce4b3549f1059ccfbbabf0a3fe4172a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ddc2efc2-8b46-49ef-891e-122d347abd93", "node_type": "1", "metadata": {"file_path": "docs/howto/v2/transfer-name.mdx", "file_name": "transfer-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/transfer-name.mdx", "header_path": "/"}, "hash": "f6278fc86a1b1fde3a2fa29d548460c0f0502f15291c50e11f0693977d1a2c1b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ed319e02-68ac-412c-a2fa-132513007208", "node_type": "1", "metadata": {"header_path": "/Transfer an ENS name/Completely transfer a name/"}, "hash": "ed6868c71108cecaead8cc1d42e81edd9ed28359176ec462c5f81a878ef08733", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Completely transfer a name\nIf you want to completely transfer a name to a wallet you'll need to set three records to the new wallet in a specific order because only the wallet set as `Controller` is allowed to change the `ETH Address`.\n:::info For example\n - If you were to change `Controller` first, you wouldn't be able to set the `ETH Address` without switching to the new wallet.\n:::\n\nIn order to set everything to the new wallet easily from the wallet that currently owns the ENS name, you'd follow this specific order:\n\n:::info Order\n 1. **ETH Address:** *The wallet address the ENS name points to, where funds sent to it will arrive.*\n 1. **Controller:** *The administrator of records, the wallet allowed to make changes to its records (but not transfer the name)*\n 1. **Registrant:** *The owner of the ENS name, the wallet the ENS name NFT resides in.*\n \n<BrowserWindow url=\"app.ens.domains\">\n  <Image img=\"/img/howto/transfer_name_1.png\"/>\n</BrowserWindow>\n:::", "mimetype": "text/plain", "start_char_idx": 1407, "end_char_idx": 2379, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ed319e02-68ac-412c-a2fa-132513007208": {"__data__": {"id_": "ed319e02-68ac-412c-a2fa-132513007208", "embedding": null, "metadata": {"file_path": "docs/howto/v2/transfer-name.mdx", "file_name": "transfer-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/transfer-name.mdx", "header_path": "/Transfer an ENS name/Completely transfer a name/", "customer_id": 1, "source_url": "docs/howto/v2/transfer-name.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ethereum", "button", "address", "first", "transfer", "click", "field", "wallet", "registrant", "names", "manager", "connect"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f7eb9f1294c1b6cf964fad9d6e5bbb9f602532d5", "node_type": "4", "metadata": {"file_path": "docs/howto/v2/transfer-name.mdx", "file_name": "transfer-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/transfer-name.mdx"}, "hash": "9152e60001effebf4176a86116e49ae6dce4b3549f1059ccfbbabf0a3fe4172a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6689c015-61ae-4cb0-a2f7-3f8e0452d3d7", "node_type": "1", "metadata": {"file_path": "docs/howto/v2/transfer-name.mdx", "file_name": "transfer-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/transfer-name.mdx", "header_path": "/Transfer an ENS name/"}, "hash": "31cc2aebc420ce8589d3f1613369691d73fdaf359b3498999c9bce531cf623ee", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b5792900-80ff-40c5-b091-124585321dc1", "node_type": "1", "metadata": {"header_path": "/Transfer an ENS name/"}, "hash": "add3640782dc7603ba52f05f795b50df23b7efa9bd240ab7d327a9f54fb750de", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Go to the Manager App\nFirst go to the <Link to=\"https://app.ens.domains\"><b>ENS Manager App</b></Link> and connect your wallet\n<BrowserWindow url=\"app.ens.domains\">\n  <Image img=\"/img/howto/transfer_name_2b.png\"/>\n</BrowserWindow>\n\nClick on ***My Account***\n<BrowserWindow url=\"app.ens.domains\">\n  <Image img=\"/img/howto/transfer_name_3.png\"/>\n</BrowserWindow>\n\nIn the list of ENS names click on the one you want to transfer to go to it\n<BrowserWindow url=\"app.ens.domains\">\n  <Image img=\"/img/howto/transfer_name_4.png\"/>\n</BrowserWindow>\n\nClick the `Transfer` button next to the Registrant field\n<BrowserWindow url=\"app.ens.domains\">\n  <Image img=\"/img/howto/transfer_name_5.png\"/>\n</BrowserWindow>\n\nFill in the ENS name or Ethereum address of the wallet you want to transfer it to and press `Transfer`.\n<BrowserWindow url=\"app.ens.domains\">\n  <Image img=\"/img/howto/transfer_name_6.png\"/>\n</BrowserWindow>\n\nAfter clicking the Transfer button, you wallet will prompt you to confirm the transaction.\nThe transfer of ownership occurs immediately when the transaction settles on the blockchain.", "mimetype": "text/plain", "start_char_idx": 2381, "end_char_idx": 3478, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b5792900-80ff-40c5-b091-124585321dc1": {"__data__": {"id_": "b5792900-80ff-40c5-b091-124585321dc1", "embedding": null, "metadata": {"file_path": "docs/howto/v2/transfer-name.mdx", "file_name": "transfer-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/transfer-name.mdx", "header_path": "/Transfer an ENS name/", "customer_id": 1, "source_url": "docs/howto/v2/transfer-name.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["great", "different", "ownership", "would", "address", "point", "because", "ensfairy", "another", "recipient", "records", "behalf", "wallet", "register"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f7eb9f1294c1b6cf964fad9d6e5bbb9f602532d5", "node_type": "4", "metadata": {"file_path": "docs/howto/v2/transfer-name.mdx", "file_name": "transfer-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/transfer-name.mdx"}, "hash": "9152e60001effebf4176a86116e49ae6dce4b3549f1059ccfbbabf0a3fe4172a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ed319e02-68ac-412c-a2fa-132513007208", "node_type": "1", "metadata": {"file_path": "docs/howto/v2/transfer-name.mdx", "file_name": "transfer-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/transfer-name.mdx", "header_path": "/Transfer an ENS name/Completely transfer a name/"}, "hash": "9a896638b115d196203af52b599db6e0d15a5f6453ef78a27ec7a58a21c6d839", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Gift a Name with ENSFairy\nIf you would like to register a name on behalf of another wallet, <Link to=\"https://ensfairy.xyz\"><b>ENSFairy</b></Link> is a great way to do that. This is because you can register a name with one wallet, but set up the ownership and address records to point to a different wallet.\n\n<BrowserWindow url=\"ensfairy.xyz\">\n  <Image img=\"/img/howto/ensfairy-gifting.gif\"/>\n</BrowserWindow>\n\n:::info TIP\n If the ENS name recipient does not yet have a wallet address, the name can be sent to the ENSFairy vault for safekeeping. Read more here: <Link to=\"https://ensfairy.xyz\"><b>ensfairy.xyz/deposit</b></Link>\n :::", "mimetype": "text/plain", "start_char_idx": 3480, "end_char_idx": 4116, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "40fbdf84-5002-404d-8396-f67240cf73d7": {"__data__": {"id_": "40fbdf84-5002-404d-8396-f67240cf73d7", "embedding": null, "metadata": {"file_path": "docs/intro.mdx", "file_name": "intro.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/intro.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/intro.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["introduction", "start", "hidden", "twitter", "documentation", "false", "discord", "cthulu", "support", "discussion", "official"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f199c9c0cc32df3b7956dd89db0f6a575159a0e1", "node_type": "4", "metadata": {"file_path": "docs/intro.mdx", "file_name": "intro.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/intro.mdx"}, "hash": "c8f0899bd00206f31d126d82b2f1f99b44d45bd04fad7cca46a5574e26bf35e6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "475a21c1-69da-440a-b7ad-c9b17acb65dd", "node_type": "1", "metadata": {"header_path": "/"}, "hash": "f61bf04e3274caa4e7209e8b0a663ef891e3e7a0876cd8a3cf448d46ae824615", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\nslug: /\nsidebar_class_name: hidden\ntitle: Introduction\nlast_updated:\n  author: cthulu\nshowLastUpdateAuthor: false\nshowLastUpdateTime: false\nbreadcrumbs: false\nhide_table_of_contents: true\ndescription: start page\nimage: /img/enslogo-small.png\npagination_next: null\npagination_prev: null\n--- # ENS Support Documentation\n\n<!-- <style type=\"text/css\">{`article {max-width: unset;} .container{max-width:unset;}`}</style> -->\n\n<div style={{ maxWidth: '83.33333%'}}>\n  <hr/>\n  <h2>Support resources</h2>\n  <div class=\"container introTitles\">\n    <div class=\"row\">\n      <div class=\"col\">\n        <a href=\"https://chat.ens.domains\">Discord</a><br/>\n        <i>The official Discord for ENS chat and support.</i>\n      </div>\n      <div class=\"col\">\n        <a href=\"https://twitter.com/ensdomains\">Twitter</a><br/>\n        <i>The official ENS Twitter account, send a DM if you need help!</i>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col\">\n        <a href=\"https://discuss.ens.domains\">ENS DAO</a><br/>\n        <i>The official discussion forum for the ENS DAO.</i>\n      </div>\n      <div class=\"col\">\n        <a href=\"https://docs.ens.domains\">Developer Docs</a><br/>\n        <i>The official ENS Developer Documentation.</i>\n      </div>\n    </div>\n  </div>\n  <hr/>\n</div>\n<div class=\"docs-card-container\">\n  <div class=\"row row-cols-1 row-cols-md-2a g-4\">\n    <div class=\"col\">\n      <div class=\"card card-body h-100 w-500 d-flex flex-column\">\n        <a href=\"/core/what-is-ens\" class=\"card-link\"><span></span></a>\n        <h2><img src=\"/img/svg/056-file-3.svg\" width=\"18px\"/> What is ENS?</h2>\n        <p class=\"card-text\">The Ethereum Name Service or ENS is the decentralized naming protocol that is built on the Ethereum blockchain...</p>\n      </div>\n    </div>\n    <div class=\"col\">\n      <div class=\"card card-body h-100 w-500 d-flex flex-column\" >\n        <a href=\"/howto/registration\" class=\"card-link\"><span></span></a>\n        <h2><img src=\"/img/svg/056-file-3.svg\" width=\"18px\"/> Register a name</h2>\n        <p class=\"card-text\">An easy to follow guide on how to register an ENS name</p>\n      </div>\n    </div>\n    <div class=\"col\">\n      <div class=\"card card-body h-100 w-500 d-flex flex-column\">\n        <a href=\"/dev-basics\" class=\"card-link\"><span></span></a>\n        <h2><img src=\"/img/svg/056-file-3.svg\" width=\"18px\"/> Developer Basics</h2>\n        <p class=\"card-text\">Learn how to integrate ENS in your apps and websites</p>\n      </div>\n    </div>\n  </div>\n  <div class=\"row row-cols-1 row-cols-md-2a g-4\">\n    <div class=\"col\">\n      <div class=\"card card-body h-100 w-500 d-flex flex-column\">\n        <a href=\"/core\" class=\"card-link\"><span></span></a>\n        <h2><img src=\"/img/svg/056-file-3.svg\" width=\"18px\"/> Core Concepts</h2>\n        <p class=\"card-text\">The Core Concepts section contains concise reference information on ENS Core Concepts, Records, Registrations, and Renewals</p>\n      </div>\n    </div>\n    <div class=\"col\">\n      <div class=\"card card-body h-100 w-500 d-flex flex-column\" >\n        <a href=\"/faq\" class=\"card-link\"><span></span></a><h2><img src=\"/img/svg/056-file-3.svg\" width=\"18px\"/> Support FAQ</h2>\n        <p class=\"card-text\">The Support FAQ answers common support questions received in the ENS Discord and ENS Twitter Support accounts.</p>\n      </div>\n    </div>\n    <div class=\"col\">\n      <div class=\"card card-body h-100 w-500 d-flex flex-column\">\n        <a href=\"/howto\" class=\"card-link\"><span></span></a>\n        <h2><img src=\"/img/svg/056-file-3.svg\" width=\"18px\"/> How-To</h2>\n        <p class=\"card-text\">The How-To section contains step-by-step guides that are easy to follow</p>\n      </div>\n    </div>\n  </div>\n</div>", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 293, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}}, "docstore/metadata": {"03c62b4a-1bb6-4909-a5c2-c0ae38b0c0dc": {"doc_hash": "5c677b18799a96e92339e3119468bb5de19eee3c7f2267cd7188b41702e4ed70", "ref_doc_id": "61998a4efcfbdb989f5c480c08909d667884df5f"}, "38046b9f-ee17-4df9-ae8f-b89affb613c1": {"doc_hash": "86d577a573fa737c95bf0fc1abcf4f6fd69db64907d3c8b370930ba5d0692884", "ref_doc_id": "61998a4efcfbdb989f5c480c08909d667884df5f"}, "c6b15143-6f20-4714-b491-efa94198639d": {"doc_hash": "e033b6dbdc058b58de18d0879ab55a32872bded7eb4aabdad8c4de7493b9a24a", "ref_doc_id": "10dd8b62a3045dca49137da7dcb6a4c4121c8a18"}, "61e92ba0-3a4f-4269-82ea-f3c88cee56ae": {"doc_hash": "f92cd0f4de3b67cdf0781440180f8dccc0029642e0458d48d9a2f400e8f9e31d", "ref_doc_id": "69298715a5aec4e7656a839af9af420b37df7943"}, "58b1a582-76e7-4502-8aca-88300dfa69db": {"doc_hash": "1cfbaccea49d354e4e9563c06768fd1ddada55facd767cf886f911c9ab5bc7e8", "ref_doc_id": "69298715a5aec4e7656a839af9af420b37df7943"}, "c54b0326-7de9-4697-a837-7bb2ec11f4c8": {"doc_hash": "3d943cc131046fc5195149767ec2f0854849dbf782e7972b220b131e33517ef0", "ref_doc_id": "69298715a5aec4e7656a839af9af420b37df7943"}, "acae3053-2189-4bcd-ae73-bc16f2f0ddab": {"doc_hash": "2cdf736912d2add2da8423bb9b60310b95452f9bf089fc6fe988276559c42660", "ref_doc_id": "6da91feba0c3e5a64e590639831f383ebb89e4e3"}, "7dafaa9e-5384-4ec6-8a1e-b4338bbb1a71": {"doc_hash": "b525792769bca1a9a1c90289b79552681aecbab67d1974c5a721a490330b7395", "ref_doc_id": "6da91feba0c3e5a64e590639831f383ebb89e4e3"}, "7918dc0d-ede1-474e-ae53-dcdb4e6fbbae": {"doc_hash": "13e38d6f46ee02c9ae88adab4c24d33e15f69ca552df9dbe23a2efbe7918baad", "ref_doc_id": "6da91feba0c3e5a64e590639831f383ebb89e4e3"}, "6079b638-a814-4cf1-acca-5648dc5a3bc1": {"doc_hash": "81b3219c6126dd04fdbc21cdbb57da242b8d15cd77e1b9032e5ae706ce7e4c52", "ref_doc_id": "6da91feba0c3e5a64e590639831f383ebb89e4e3"}, "fc068f04-1dbf-4625-b704-625676e90a9a": {"doc_hash": "268b5caaa4edea175f556a5a5b784d95f0c3629dcc10589eb7132f78e9b1d119", "ref_doc_id": "6da91feba0c3e5a64e590639831f383ebb89e4e3"}, "e35370e7-b94a-4fb5-9d93-b4aedb421d7e": {"doc_hash": "06eb17b776fefdac87f577ce5207de78854ac42afaeb5e03c7dd6e0e33341df2", "ref_doc_id": "3fc0ffd26c436ca41bd28f1813768bfcef16b09a"}, "04dc5d67-8948-4cc0-8216-a5167e8da5a1": {"doc_hash": "554ef08e244d4750befc9f5544f085a592a73c8f8358bbd074b084334290b3bf", "ref_doc_id": "3fc0ffd26c436ca41bd28f1813768bfcef16b09a"}, "f962702c-4f05-4779-90aa-80655c661b30": {"doc_hash": "ee576cdd879ddf08f1586526bef260a24d347728b0d3a19442ea4d146ec11494", "ref_doc_id": "b0b1369dd98c88d4727707bbddb7b0fca7294aa7"}, "dc7f1064-3d47-4e0a-ac2d-5cce27976b19": {"doc_hash": "1ee9222d087d16cbd7fbf6819ae6cb2f9ad32409d61ad38c3750e0a2ba073f2a", "ref_doc_id": "b0b1369dd98c88d4727707bbddb7b0fca7294aa7"}, "0fec98a1-2795-40a9-8133-e028d7adeb09": {"doc_hash": "c710e161f38a895e545e49acb27b79506cff43751539053e9c2e275138af06d0", "ref_doc_id": "b0b1369dd98c88d4727707bbddb7b0fca7294aa7"}, "ca38ab31-3f42-468e-acd9-e18a0ca6df0b": {"doc_hash": "00d519f5830bb043562f721206a27510f1699ac75f75dadea24a9d11313ee176", "ref_doc_id": "b574a585df475c28afa32c974d576b6d6a2b705d"}, "b844299e-9222-4043-8e28-898b2dc8dd61": {"doc_hash": "db27789ee7da337fcbf2069834cbf599f0c393da906d754edd5d078d8a437e73", "ref_doc_id": "b574a585df475c28afa32c974d576b6d6a2b705d"}, "a62d8855-c65d-4fb2-97d1-8dfb95207a0f": {"doc_hash": "ec36fe0a4e6abe9e56c9a2d7e1894cb04bdafbde41ff8e367ac4621b16170521", "ref_doc_id": "b574a585df475c28afa32c974d576b6d6a2b705d"}, "ee1be138-7899-46f0-a67f-d0e5f1feeb49": {"doc_hash": "5530c738e32ba08c64a8f968c44603ea400dd6e4b6689097f94124306b31b5e5", "ref_doc_id": "b574a585df475c28afa32c974d576b6d6a2b705d"}, "db238dd6-2b8f-4d07-95a4-b6ae66249de3": {"doc_hash": "a85a2b64bf7fee08724d426e0e83c6fbfd383d4b4d108ea8b9e3fafddcdb452c", "ref_doc_id": "b574a585df475c28afa32c974d576b6d6a2b705d"}, "37bab68f-f7d6-4f4f-8a4a-074177cd4775": {"doc_hash": "7e2e9efe03f6ee5aa805169bdb89b04fafd2ab340cd1ee7dd4b95b8215d00403", "ref_doc_id": "b574a585df475c28afa32c974d576b6d6a2b705d"}, "1e28483f-5643-4bfb-b854-73ca1cc0f698": {"doc_hash": "3249896228baf99c1fe439a27e1be4640813cde0e409f34e984470e63a924b42", "ref_doc_id": "b574a585df475c28afa32c974d576b6d6a2b705d"}, "3aa6e25a-019c-4643-89fc-a6fd5b448bea": {"doc_hash": "4185f96930f549e0a6b8ff33aace413e9405e544004fabb970ea2590e2f6932d", "ref_doc_id": "b574a585df475c28afa32c974d576b6d6a2b705d"}, "46e3229f-8619-460f-87c9-7aa8ba490dc2": {"doc_hash": "80deb381cb7ffb38bd574c4af4ff3a10619c38945e578432da981429b3ee26b7", "ref_doc_id": "7487535ef62920a2375d26873895825683379d42"}, "1411cad6-14f1-47fe-a5a3-ceaa6bd320be": {"doc_hash": "e9c2d0e8ba6a46a0910b9f446f6a5880577a0f2c372ac9eff489a8537da19240", "ref_doc_id": "7487535ef62920a2375d26873895825683379d42"}, "a35ca2c1-5266-47a4-9c39-67aee592452f": {"doc_hash": "6f5c8d7c9bb2f16419322270050c567304adc79e058c713f542d2fc92a2b9aea", "ref_doc_id": "a994d5a2080393d753842c17f9c5b45642c990dd"}, "ab0f1a2b-f99d-4779-8fb3-59e295bd1c00": {"doc_hash": "bfb9c980a6b0d593a36669190ef7ebb2d5d52d96986161f69ace13f63187d812", "ref_doc_id": "a994d5a2080393d753842c17f9c5b45642c990dd"}, "b849f16d-d38d-40b0-9b25-cfb3d2d30c97": {"doc_hash": "3ef325728259d9a4fc485859f9776cef9594c771052f3be221d0ca0cc76ff053", "ref_doc_id": "a994d5a2080393d753842c17f9c5b45642c990dd"}, "03d836d0-529c-420e-ab9b-37464f0afa9c": {"doc_hash": "aa867bac60215b9831bd2b035abd323d3ee269fab24ffa20bdf20a9e517fae3f", "ref_doc_id": "7f18dfee12840fe64a2c0aa664da0dac4637e691"}, "7b940807-0627-4ecf-8574-438539aa4227": {"doc_hash": "4d7cbebc9211c42a23e66e4a047471967888d6e113d76e739b95ef3a47157eed", "ref_doc_id": "7f18dfee12840fe64a2c0aa664da0dac4637e691"}, "1eae0915-0f98-49a3-bb3f-8ef6bc111a3f": {"doc_hash": "afd77a45174de265904221296e12ba944fbe267d12d64cf65b18d4d6b9ad349f", "ref_doc_id": "7f18dfee12840fe64a2c0aa664da0dac4637e691"}, "1bd58345-3353-40fc-9ab9-7241be175220": {"doc_hash": "7e26b16f7368d9f5372b76b21916683bcb3a2f24cb30ed899f88f5ecc18a07f3", "ref_doc_id": "69b9e7785bb4744be9335d95436149c8275199cf"}, "04050e01-2864-4c5b-964d-f2c2a1576963": {"doc_hash": "abafc2249ee3a5a72b4b33dda81e1b2799ca4dbd8d8a763f7bd104370b8d6a98", "ref_doc_id": "69b9e7785bb4744be9335d95436149c8275199cf"}, "f2354256-cc12-446b-a3bc-34178b45a141": {"doc_hash": "54c16fac681adfd0e81fa12a3db6e35642b0a888cb212f72f92332043f4ad4a9", "ref_doc_id": "69b9e7785bb4744be9335d95436149c8275199cf"}, "46fb3510-cb07-4a4e-8b11-e7702cf7bd75": {"doc_hash": "17132e24b9be06238feec4f8b5bb9ab99c38f4f72ea585a3c741d61513bd18ad", "ref_doc_id": "d6f4c38d58dda7420ae643988365bba43457efbc"}, "0239a6c3-37aa-4e10-8b07-50019abbbb99": {"doc_hash": "a9faa0d41c2e5d3ca113c70285834ae8432b856ce13c0182ab5f2e83a64b5e5f", "ref_doc_id": "d6f4c38d58dda7420ae643988365bba43457efbc"}, "3867e942-0397-4790-b7e8-5514f5a012d8": {"doc_hash": "9eec0747c85feddadc0546fc2b1c109d54cf4b84a66d79e97c924470c94564d2", "ref_doc_id": "d6f4c38d58dda7420ae643988365bba43457efbc"}, "31e94a70-9b5f-4833-a92e-1ea8e4aa735b": {"doc_hash": "b3ca07df8f261b88054a10faf60deedfa4e025f7121fb5145763e872342e848e", "ref_doc_id": "d6f4c38d58dda7420ae643988365bba43457efbc"}, "cfb3e109-90b0-42f4-be1c-035f31492470": {"doc_hash": "00ea3b882889df09072416d32a8589d0f25161a16cdbf51334eda6cb9c2d48d4", "ref_doc_id": "d6f4c38d58dda7420ae643988365bba43457efbc"}, "27057ce6-42e1-4c06-8cf3-adb8383cc697": {"doc_hash": "51d21ac3fa9562d858fc210da0935924d24cb5105a114b76dcfe90cb7dddb3f7", "ref_doc_id": "c4769c1a127b735d178499682235056c0975d9c3"}, "9361edb9-4bb5-4837-86c6-73613b861dcf": {"doc_hash": "b80439c01434949a4b9de263f6dbfc923cacf205e9cdc437b9865ebaacc23e95", "ref_doc_id": "c4769c1a127b735d178499682235056c0975d9c3"}, "db4ee585-edc6-40c4-aabe-4a97b2242877": {"doc_hash": "7b50382fee288c6a40e303888f352be637fde73655067e1455756aada1529d55", "ref_doc_id": "c4769c1a127b735d178499682235056c0975d9c3"}, "701689bb-900c-4986-8bf0-7a5da4d167ac": {"doc_hash": "1abc385b1f84c012b462658f32f8c94cc7c85226fc7329432c14586c407dd393", "ref_doc_id": "29081a337c70a6d9edcb403bfd0f2549c546b5cb"}, "f75a467d-213e-4032-9836-b43b5686bcba": {"doc_hash": "43d4f6c4e6b9614db94f84d10aeb2f87b5e6480698566b4e450158151f48f373", "ref_doc_id": "29081a337c70a6d9edcb403bfd0f2549c546b5cb"}, "f756ac5b-0bf1-4342-a1b9-da45c2c28a7e": {"doc_hash": "c6c411861cf0b583cfa355d93af184abe1b5771189b8b9e796f02f18304bd065", "ref_doc_id": "29081a337c70a6d9edcb403bfd0f2549c546b5cb"}, "254a800e-2f47-46fe-8fd0-4575f4b61377": {"doc_hash": "8964addf1d4e1afe60d97b81d9eae8afd10f47bb65708a14b4188df0a3971b57", "ref_doc_id": "29081a337c70a6d9edcb403bfd0f2549c546b5cb"}, "a4b4c3bc-2fee-48b5-9717-98fb068e1274": {"doc_hash": "d3484f80496250c2c8cc5a4a9473201146c31fbf93a9ad6855866a91bd0c9f4b", "ref_doc_id": "29081a337c70a6d9edcb403bfd0f2549c546b5cb"}, "191d23ac-e5ea-4a0a-ba19-b2b105c6f56d": {"doc_hash": "a3aedc3147eb4546a6e633109565b8e1d8e95ff1b699038f65b89ba7388e77d0", "ref_doc_id": "33eab29a6208ea20adda0029e292aa1e4bad8c0d"}, "0a3a5a71-a093-4050-b3f5-a9af479b2388": {"doc_hash": "28a4668a0b6f60d2148aed1cf87ca40cfc8a21fd6999295d57bb9cd9f72da585", "ref_doc_id": "33eab29a6208ea20adda0029e292aa1e4bad8c0d"}, "ea88d072-e97b-4a45-9d0b-0cf9ff4d4df0": {"doc_hash": "077a363e5c82e21543e1d68f07b715daf25737a00f8ff7e1ce0dd033fcc00532", "ref_doc_id": "33eab29a6208ea20adda0029e292aa1e4bad8c0d"}, "944d94d0-8256-438b-88f9-f4c1698e05c7": {"doc_hash": "f9966278696835b3ce13cddb40b0c50b6c967e0d70ede045a92c3595069c7cb4", "ref_doc_id": "33eab29a6208ea20adda0029e292aa1e4bad8c0d"}, "a39def53-63de-4cd6-9c7f-4c963e6ec2c0": {"doc_hash": "b4b0e339c7d9adaf4d9bf301d103e314114e8a839467a8374bdbf28eb276bf38", "ref_doc_id": "33eab29a6208ea20adda0029e292aa1e4bad8c0d"}, "fb0552b6-0f09-4087-9739-a1eb1cf49620": {"doc_hash": "225e0c6b67767b972b9ffa773c3b1752e8523df225fddc468625d997b30aca77", "ref_doc_id": "e446ffa9be76bd4fbb0083b99edd238093503be3"}, "ed7a25f2-1827-4c18-9281-7aa631bf8277": {"doc_hash": "fb027da6c09bfeccc292d4491d0f1e47d0cc9d49a45245e50c10851efc7c4d72", "ref_doc_id": "e446ffa9be76bd4fbb0083b99edd238093503be3"}, "5996d67f-7756-49a9-a206-d7200da7982b": {"doc_hash": "3cd0583005b2cb1b6d91f93d052e069fb2f80add600596fe3da840950441c6ef", "ref_doc_id": "e446ffa9be76bd4fbb0083b99edd238093503be3"}, "66eabab4-46b4-4595-8702-f55e980f8aa1": {"doc_hash": "47c05dd34fcd4467b758cfed269291494b242fb7017e9a78de755ff2a83d2400", "ref_doc_id": "e446ffa9be76bd4fbb0083b99edd238093503be3"}, "fdb2e910-6059-4df5-9ae6-92a6fd23f071": {"doc_hash": "0a95ccdd94c0c60ac886156a153bb6aed0ac2a5396a1cbb903eadbcad28f94d2", "ref_doc_id": "da3cc7157f3141d3cc7b02e90a09ad4267c5a610"}, "0c787b74-9663-44c4-83a0-e32891bd48be": {"doc_hash": "070b9e81fa9d28fcfb9370a9c518faec60bcb3d82d6ce4c80a4ede24196b45a5", "ref_doc_id": "da3cc7157f3141d3cc7b02e90a09ad4267c5a610"}, "aa87f8ef-fcc2-45ab-b392-ac48f2c47a60": {"doc_hash": "5106a0d0bf9f5f38f769f44c8597da53d4f35acacc063adb97e9410033f5a9b3", "ref_doc_id": "da3cc7157f3141d3cc7b02e90a09ad4267c5a610"}, "9270c857-164d-40a3-83df-8d3990aae4b9": {"doc_hash": "e96c6ffeb23ae192622ec5823141d4a7a0b6e9cc72b794471c8f88e315ab2247", "ref_doc_id": "eb818dd928b07a7bceb167a8ea94af8e79f9a198"}, "943e91e4-b4a6-4a72-ba3a-7d422781037d": {"doc_hash": "79246a6d74c86c6a514ba76ff0d4c25e48ec50ae5a28f17f479ccada6efef6ec", "ref_doc_id": "eb818dd928b07a7bceb167a8ea94af8e79f9a198"}, "afce39f0-25af-4d13-ab24-5ddbe0eebd10": {"doc_hash": "24db007a0530be272d0cb613d9e845300d715c50e746af927c525f046cf55d7f", "ref_doc_id": "eb818dd928b07a7bceb167a8ea94af8e79f9a198"}, "7cee1bcf-5e82-42fd-af15-a3e83fab96ef": {"doc_hash": "3c55153e7e1ea9df0d70df40a82d1799bc843a9c7b09803101c261ad7f1a9fe7", "ref_doc_id": "eb818dd928b07a7bceb167a8ea94af8e79f9a198"}, "fcb2327e-25f5-42ad-ae98-1b8f099db6cc": {"doc_hash": "d04509bff7a726247c072f641162a20d44fc537f7578804d3cceccd3f52aacbd", "ref_doc_id": "54696254683656e5b45d4f25550d4fae51b92919"}, "dbf663bf-1d2e-4450-8583-c5c20b56b372": {"doc_hash": "8eac0e27b39a5cca78b44836745d9f0653f72bb3cefd13171273f0ba4eba148f", "ref_doc_id": "54696254683656e5b45d4f25550d4fae51b92919"}, "bb67c201-8516-4817-b4dd-bc7aafa8f532": {"doc_hash": "4c119e48974c15aa2875d40fbadac30612d2675de507bcf274e05b8e64295a31", "ref_doc_id": "3dc821253cfe96e107c1af96b08b2eb5bfd4e8c8"}, "3b4c399d-2500-4812-aa04-b28443b92000": {"doc_hash": "e1082a766997653bc754157b4f8ba649cc847680b799a6426090185046729222", "ref_doc_id": "3dc821253cfe96e107c1af96b08b2eb5bfd4e8c8"}, "28af730d-f7aa-4cc8-b97a-bb6519e358db": {"doc_hash": "2540ffb0b71b6ac79a9cb08b26e642ed7d6a4d31ba4381ae5350b5fe00fe2657", "ref_doc_id": "3dc821253cfe96e107c1af96b08b2eb5bfd4e8c8"}, "9d8ff335-2b79-48b9-8585-18d75bf118ec": {"doc_hash": "f0540717efc5ccc374e2f3105655cf3bd4a296f37d9f8ab6d7290aedd81fa2f3", "ref_doc_id": "3dc821253cfe96e107c1af96b08b2eb5bfd4e8c8"}, "cbf6fe92-7303-4572-8dc2-84ec7f65e457": {"doc_hash": "5168aa13a1dc6253d0feb472733a8be620c62adde7c60afe85f060ca22675c0e", "ref_doc_id": "e5dfc26f6176f20211f73d7f492470b73a9fadbf"}, "699acdc1-4910-4aeb-a118-fd3d9b96382c": {"doc_hash": "837e265b11b2ffd13926f82f693105e53e4683ed1cc77bf3659faac60f4113ba", "ref_doc_id": "e5dfc26f6176f20211f73d7f492470b73a9fadbf"}, "bc0bbc55-c07f-4013-bc4e-85dbd8843954": {"doc_hash": "d30d75a298d4bab64ae432391a22d5810e485caff13e7e0b5c9f2424d1dfcba3", "ref_doc_id": "e5dfc26f6176f20211f73d7f492470b73a9fadbf"}, "c087bc11-5670-45fa-bc91-847d8ab236ed": {"doc_hash": "d302e36ea91d2b06d89c80f5978db329b268e1f7dd578c368a30327f96af2b98", "ref_doc_id": "2250ef7905fdfdc7514c9a97c6beab8946b0b16f"}, "58b1bd0a-f97e-462c-903c-7989853b3b58": {"doc_hash": "1282e6bb1390f346e0c7f491ae40b4b1e37d79dd276acb2e7897321ee6b96798", "ref_doc_id": "2250ef7905fdfdc7514c9a97c6beab8946b0b16f"}, "442a68c0-5763-4f7a-87a4-0f738148706d": {"doc_hash": "ff472279d2f7506deb68e357025801f00d185bb530c8eace884d29128aa19374", "ref_doc_id": "2250ef7905fdfdc7514c9a97c6beab8946b0b16f"}, "60613400-66bf-4527-89aa-d7948d9e0f23": {"doc_hash": "6b4a11b431f3b34bfb581330043e6416f42bf392c8aee68c003f400005636774", "ref_doc_id": "2250ef7905fdfdc7514c9a97c6beab8946b0b16f"}, "5fab2b80-4bec-48c2-b029-a6afd5afd1f2": {"doc_hash": "7d97f2089a94e09f4cd419d1e8d9a08bfc5993a5a06cc3c114cf5e5d057c670e", "ref_doc_id": "e2162248fd79a9b62b1c7a06b5e11e6b5e952540"}, "557dd585-8f5d-484e-852d-94b6dde61e56": {"doc_hash": "8e4431e8474654006ebb99bd3d251f00639d0a08fe6f1ea13cc713bf153f46ae", "ref_doc_id": "e2162248fd79a9b62b1c7a06b5e11e6b5e952540"}, "3c207b91-c8bd-409c-a651-d82b0c4bfbd6": {"doc_hash": "e7568876f0f9668f07211bdb25da67f34cf4616318e89dc6421ba8e7b179a9b0", "ref_doc_id": "e2162248fd79a9b62b1c7a06b5e11e6b5e952540"}, "f83c6da7-bd73-4cf4-bd9d-7bf093254c3f": {"doc_hash": "f69ab90d743eaddc3d2cfd8d2df126cbc10001843e68075ec5314ec8a33e3186", "ref_doc_id": "4236b9482b685947720b3e60876c3ee3c7af1f1d"}, "ac3405c1-7ed7-443b-84ce-d04914987403": {"doc_hash": "9abb141ee7f979951fcdc5745b3d1612f5d4c829f243339b4b96bb0be7c4f806", "ref_doc_id": "4236b9482b685947720b3e60876c3ee3c7af1f1d"}, "e7c21118-cf1e-413c-8b5b-8911bbd792f2": {"doc_hash": "3209d288e712279b8d192615fe18ee25fe90e34ea4dd977f00bfc8c5182be0d4", "ref_doc_id": "4236b9482b685947720b3e60876c3ee3c7af1f1d"}, "5a676ae0-1c60-4970-87ac-9c2bbbf8fff8": {"doc_hash": "80bf54098e9d920bea10fbc70f811afc9ff7edefe8f42d4e0d481305867ac3bb", "ref_doc_id": "4236b9482b685947720b3e60876c3ee3c7af1f1d"}, "25aab8d3-70b2-4f38-a76d-c07767b76d4a": {"doc_hash": "dd5bea114db5a35f3f07ac351fa59b8a0a73d1437378cecde9297a549303fc92", "ref_doc_id": "8e6fd53cffeba76f3f00808e77af0daa3f1c6d86"}, "5005a839-81c4-4f7e-8636-3d11dee04e47": {"doc_hash": "37a36cf1642546aea2581ad67ad343cc838559a7ef6bfbf416ff18a195fd6109", "ref_doc_id": "8e6fd53cffeba76f3f00808e77af0daa3f1c6d86"}, "f4a09cce-aa86-4fa4-ac8d-a5d87d4bf3a2": {"doc_hash": "d8a404ffb5b90c5716164f98c95ba85a4974e4fcdbc2e08cc75873c08a7c40d2", "ref_doc_id": "8e6fd53cffeba76f3f00808e77af0daa3f1c6d86"}, "048dbebe-dcac-4142-b949-7392a18ec5be": {"doc_hash": "2c612610af6fecf25bcca276d6630fa22547f41761f2685274f12dbac1ca4ef1", "ref_doc_id": "8e6fd53cffeba76f3f00808e77af0daa3f1c6d86"}, "1c9599c7-436e-49b0-aafc-a6c45c2800d7": {"doc_hash": "139752b64ffa1683aba801a020b6454b74c95556e0205a18cdbde64d5d4efe9e", "ref_doc_id": "8e6fd53cffeba76f3f00808e77af0daa3f1c6d86"}, "4c717d4e-fd03-4b71-a3da-775207a1ff53": {"doc_hash": "50e752b0f93dea07759037fa52290797bdc61528de7b86777a322632b29246ab", "ref_doc_id": "8e6fd53cffeba76f3f00808e77af0daa3f1c6d86"}, "fbca787c-4040-4291-9dce-719598510765": {"doc_hash": "5fd16ceadbaded8d6be44f04ab1bef7bb8ea658a104930fd94eba8a00caa01fe", "ref_doc_id": "8e6fd53cffeba76f3f00808e77af0daa3f1c6d86"}, "1e527830-455d-41ad-9f08-462d93f84f6b": {"doc_hash": "1b50efec5b3659d046aadee3448adf188e9680e097b69032c577fb3789260bb6", "ref_doc_id": "8e6fd53cffeba76f3f00808e77af0daa3f1c6d86"}, "3942c878-43ff-4232-b005-3abb4c90535c": {"doc_hash": "e94b594376d6006f35411e2afb90c9caf2b9f9cb011b7c2b6646c16cf6959100", "ref_doc_id": "1b72395a4a21227f26ee22089de5bd32bbd3fea0"}, "326bf1f5-65a5-4624-93c4-1350df3c7e54": {"doc_hash": "14fe48bbc39dbcc11e9c5ca3723069a1bcc7221827f0cfcf17fc271e38052756", "ref_doc_id": "1b72395a4a21227f26ee22089de5bd32bbd3fea0"}, "ea684ac6-dac1-4fbc-91c6-95961f4f1d79": {"doc_hash": "ac09008728567b79b62cb95f13b5ea857e58c7a9e3cc5d43012d3c4d7fabf756", "ref_doc_id": "1b72395a4a21227f26ee22089de5bd32bbd3fea0"}, "c0558ed2-8edc-493a-8922-eb03f790d456": {"doc_hash": "5f72acb2ecbe98b3eb6dce5bb5f30b81fe492fc96adb119650389f5821956875", "ref_doc_id": "240392b5e3c4e821b6234da86fa46bcb36115c0c"}, "85c2d0cb-dcb7-45cc-9677-571c47e6ca48": {"doc_hash": "6d6955ec8a2094b00856a136b9a8c506f258e71147e898e6ab1ddf6fe0e4731c", "ref_doc_id": "240392b5e3c4e821b6234da86fa46bcb36115c0c"}, "48f88023-e156-4770-b5c5-b7fd0cbf83bb": {"doc_hash": "be74d9afc47e5d1c373852a0910cfaeaa92f6ee9823e15bb256c2a96a598d078", "ref_doc_id": "240392b5e3c4e821b6234da86fa46bcb36115c0c"}, "c9794257-8be9-4c3e-9a07-3f16f32eaea5": {"doc_hash": "95d43e84d5f4c046e20087d2adea43cc80b0e24f0941c00815a55299579c8d68", "ref_doc_id": "356cc7f43f644f3d168d5d6f82bf639888969dff"}, "fc27c99b-c95b-453c-84d5-2d66f0147d4a": {"doc_hash": "36b2d54e821e70a8f2aad6057ee08c4fdd1dbac9c382ddbe202ddecace572738", "ref_doc_id": "356cc7f43f644f3d168d5d6f82bf639888969dff"}, "d29140c3-9d7b-439d-9ae7-b800318c9caf": {"doc_hash": "c2adb0981ea6883f5f343052ad952cd313a0952a9bf9c8b3b8d624c5da3e3a07", "ref_doc_id": "356cc7f43f644f3d168d5d6f82bf639888969dff"}, "9ca8a0d3-892b-438f-86b6-75dd159eb203": {"doc_hash": "805006fc7cd47ba1c43e97412a4bf09060121eead6bdd20433a40c952f5394ce", "ref_doc_id": "356cc7f43f644f3d168d5d6f82bf639888969dff"}, "1a4d4f3a-e481-4976-8472-e0f98bc0a88a": {"doc_hash": "db9bbc969cc391d7e760bbabb6bd79f490146ad8469ec50a174bbdda5a5a9a78", "ref_doc_id": "130aa01903969438cb3950c4ed13094e887b4751"}, "b734bafb-3f9e-4013-b59c-3848ed584d6a": {"doc_hash": "84bb1f6538e14df17e5a6a618b1c02642f74b733ea32bd3f6d78a85ba22f7f66", "ref_doc_id": "130aa01903969438cb3950c4ed13094e887b4751"}, "9ab6d5e7-c753-4609-8c6e-05c515dfd939": {"doc_hash": "8d45046a6a6a2f68e196bdd33a0405bc28a62d13d64c3280b6e353acf062c971", "ref_doc_id": "130aa01903969438cb3950c4ed13094e887b4751"}, "09798735-4514-4652-9970-881778bfd4ae": {"doc_hash": "62945fdca0b15d0a8aed3de878c2e2f9535d1b0435ea79522490d30500e57f46", "ref_doc_id": "130aa01903969438cb3950c4ed13094e887b4751"}, "8daa696f-2c6d-4763-9931-ced2aa431c4f": {"doc_hash": "09506b45801a448381180a22640a79a30301ee0c1f496265f09fb0e0745c0cc0", "ref_doc_id": "f5a93c865f0ed38f1c8768cffbd87110cdfdf152"}, "514f5baf-1e23-4c1e-b1d0-a8b2b79dcb38": {"doc_hash": "d3cfc88fbe5a97af5a13e5f3458d605e79ee6aee93873e13eb05d063bfc5658c", "ref_doc_id": "f5a93c865f0ed38f1c8768cffbd87110cdfdf152"}, "307a33bf-09eb-40f1-a1f0-8bfd416974d9": {"doc_hash": "e5201e332cdb03113373c77d9a2480242216559d1f25424916d758d04e2bf7fd", "ref_doc_id": "f5a93c865f0ed38f1c8768cffbd87110cdfdf152"}, "471307ba-8ed0-433a-aace-3ead00537c41": {"doc_hash": "fc28c40de1336724305cd589609091a0e18b086bc65d395d48ee6486c3c0e88b", "ref_doc_id": "f5a93c865f0ed38f1c8768cffbd87110cdfdf152"}, "608564ea-a108-4c22-9918-83ac839a903b": {"doc_hash": "54314a142287242e67f28c3f90d95266dc3165166496c567d00d0e79f15e7506", "ref_doc_id": "4e50dc9d543c89a985765a07a5348984bbed7d77"}, "c3e6604e-b15b-4b17-91dc-b998f539636b": {"doc_hash": "e43a1090465f99020f30aabd7ef9d6fbb071e45974270147e1f9a9e93b55476b", "ref_doc_id": "4e50dc9d543c89a985765a07a5348984bbed7d77"}, "d24bb743-6029-4acf-8aa6-8141fff1603a": {"doc_hash": "16fface33b8ac52af1796f3a0464c42a971001b8547ccccfd0fbb03c1c62fe3b", "ref_doc_id": "d84fbf0fb1f018fe61812247f37e823a30dfa1b6"}, "6d0901af-2d8f-415a-b60d-c982ccaf56ad": {"doc_hash": "41fc09d70f738cf809faf62511eb0e42ba6954979959eb93b6e792eb4e0fe495", "ref_doc_id": "d84fbf0fb1f018fe61812247f37e823a30dfa1b6"}, "71f2f7ba-9ee7-43b4-9410-fb378495c957": {"doc_hash": "4a4070bbf404239394b3ce4fc5c5e43e937380fcc09f41b9531e05336a1e31e2", "ref_doc_id": "d84fbf0fb1f018fe61812247f37e823a30dfa1b6"}, "486bc25c-2f54-4d3f-8b6c-cd05732cc567": {"doc_hash": "01b9b6c118ea17dc275f4c519c0fa615252fe78e8d0efb099f491b3a5ac82017", "ref_doc_id": "2676a0ba1b3d4f477a161ceb312760cb0f96d3cd"}, "f9dd2af8-2dc4-4a37-8cbb-3e1c9f958683": {"doc_hash": "8f26c60a9aa876525e4fcdb62f01bdf555a458596d3da0fb8bc0970fa06b599e", "ref_doc_id": "2676a0ba1b3d4f477a161ceb312760cb0f96d3cd"}, "499151f9-af41-4d8a-8b00-28c7a024c4f4": {"doc_hash": "7cbae772f61765df8062fb449078ef4c28e7e70e7913f3180268a63a745929aa", "ref_doc_id": "2676a0ba1b3d4f477a161ceb312760cb0f96d3cd"}, "ba22d2a8-0f4f-40b3-85dd-23dd963d1c92": {"doc_hash": "02480064cfdf14e86ae4d2084c32c6756d34ad4634015cbc65b203afbff00260", "ref_doc_id": "41a2a51b46af8418c1aa3a6055cd314a20692c6a"}, "186d8c59-e2df-4f41-b1c3-0b082ac89280": {"doc_hash": "ba75effd407e4284d8567a260c62b5c0e6af9a71212ce760cd251b77cc65d9ad", "ref_doc_id": "41a2a51b46af8418c1aa3a6055cd314a20692c6a"}, "2b4ee8a1-f06c-41ea-898e-f5e6a6dd8ebc": {"doc_hash": "afc01d3c2334234f17037fd9c81fa30fe89a65948c8761231150b3daec008039", "ref_doc_id": "41a2a51b46af8418c1aa3a6055cd314a20692c6a"}, "74d13cc1-bf70-49ff-9ebb-8e597b9cf449": {"doc_hash": "e1ea37bdd9b198def26a1ab3f9e49956d071ca4fe2e20bed601879660bc05c5c", "ref_doc_id": "23c37542bfaa676e9f5b688c6d31af6c54e176b6"}, "766b7f26-249a-4848-9040-a605a1dc37ed": {"doc_hash": "2cac49488703a722e0b557226105fda8776e73d945d1aa4a83e8bb2fec19f15f", "ref_doc_id": "23c37542bfaa676e9f5b688c6d31af6c54e176b6"}, "0dcb2019-2c08-4684-8d1d-757670d27ac4": {"doc_hash": "4fef0a1d287339a7046823455647e8620c625c75c55cb288328dcab2a9220656", "ref_doc_id": "23c37542bfaa676e9f5b688c6d31af6c54e176b6"}, "3adc35f2-a7a8-43f3-93bb-0b2c0a4049e9": {"doc_hash": "a3963745727aecb315d8fa598696fb6980a7060c5ddcfc286b249eac22063686", "ref_doc_id": "304f867ffa1249de6f40a356e7f9a9a8aea41ed6"}, "8cebbf2b-1946-4d5e-81ab-0be5ee3af388": {"doc_hash": "83a2567af6fc99fa408b7ed41d1877f02c834a69602c4ead087130c79abd6706", "ref_doc_id": "304f867ffa1249de6f40a356e7f9a9a8aea41ed6"}, "186dd590-6411-4c94-92e5-81983459c4de": {"doc_hash": "0a6d3bcaa1053d8f81bdd75360b382de15acb550bc6d45172201ba9f21e653cb", "ref_doc_id": "304f867ffa1249de6f40a356e7f9a9a8aea41ed6"}, "2b6ee95a-dace-471b-8a0a-eac1b5705a56": {"doc_hash": "15aae6847ede8374d013704f9a2703c628939edd8fd0748ff68eb89bf473c8a4", "ref_doc_id": "304f867ffa1249de6f40a356e7f9a9a8aea41ed6"}, "1ea9b6ee-e4d4-4184-9c3b-4b57b7b3fb7e": {"doc_hash": "be62b97596eabb200e574755ac934320b940e4602c652f94aa999da15140d011", "ref_doc_id": "bb8d14ca7d972482b63a1e9f8527eb29a0d0db3e"}, "f0654a41-18d2-42de-8b7d-9016a81adf7d": {"doc_hash": "24c67fb657e4ef1f0e1ba6bf0eaef1b8fb7ee3fe10ad8583493b6672a7e1bb1c", "ref_doc_id": "bb8d14ca7d972482b63a1e9f8527eb29a0d0db3e"}, "e2925c83-df31-4dfb-9533-4b4107d465c8": {"doc_hash": "59bb07f57b43ab673a2e6532b876e96abcf20cefbae999007cbf42011309684b", "ref_doc_id": "bb8d14ca7d972482b63a1e9f8527eb29a0d0db3e"}, "60620605-c1b8-4291-94c0-485bdffe6896": {"doc_hash": "f79e4a54f35b25281536320e2ce3eb9fca175962e5029cf4b610b405117df363", "ref_doc_id": "d54ac6e65decfc0410125b743da363a4119fda93"}, "9518cde5-046c-4004-a4e9-b9f8f33e857b": {"doc_hash": "8666bd3e6f3c0274836f0ff48715f2029ae04ef9079674d84f85bb429e6781e1", "ref_doc_id": "d54ac6e65decfc0410125b743da363a4119fda93"}, "49a9c96f-49ed-4795-aa65-56c1002f592b": {"doc_hash": "e2072ed3028411dfea1bf31adf5e0656f39768865c6a8af719bb9d367e00bcf7", "ref_doc_id": "d54ac6e65decfc0410125b743da363a4119fda93"}, "c4e7d3b3-8e9c-4e27-a713-213b9df031d0": {"doc_hash": "062f843c994046a787c650cb5f60f3c55e4af1ed50d78205f6613d93da2ee877", "ref_doc_id": "d54ac6e65decfc0410125b743da363a4119fda93"}, "9614435f-ed4b-4ab5-89c7-ec1a5551a5cd": {"doc_hash": "e99a186e4d5a50877e34e339e3a7609eeef07b5ffc0bbcc85aaf3f043c812df0", "ref_doc_id": "cf1b14de40f8829d833bc7e51aab7f5e1efb4193"}, "3306ae43-3588-4f62-9cdd-f1ad1982329d": {"doc_hash": "f259003442137c0c4fc708cb1bc170f3dd9ab101d9a6dc6e4c3abbe87e852874", "ref_doc_id": "cf1b14de40f8829d833bc7e51aab7f5e1efb4193"}, "e16f19f7-c41a-49cc-9a57-d01583078fcd": {"doc_hash": "e989337cc496b3a234a14b4f0363326e027f8791476d86d43cf533b4ca23f205", "ref_doc_id": "cf1b14de40f8829d833bc7e51aab7f5e1efb4193"}, "d292176d-5ae5-4fd7-807b-677955dd90f2": {"doc_hash": "5b9c90295ab99702c42ca5dd91a8bebdfdfc8ca4bcb87448de7d5fa25f765450", "ref_doc_id": "cf1b14de40f8829d833bc7e51aab7f5e1efb4193"}, "c6ed1008-b93b-42ec-a812-90e6afc480d1": {"doc_hash": "e4c4141199109d82f1c779d5c743c2e6b3b4e2e4683f214dc040ffb87e87e5aa", "ref_doc_id": "cf1b14de40f8829d833bc7e51aab7f5e1efb4193"}, "032aef20-e8db-4205-a970-42e9e3d27be0": {"doc_hash": "0e1e56ab89d5caa3ccabd0a9be20ce55bfee910b59b8a8531974b4df209b91a9", "ref_doc_id": "4f45f5028d85a55b262e6a28ca64f3c37c6f6659"}, "85937d28-4c47-4bb2-bbc3-0a3bee6126ba": {"doc_hash": "7f585a4d4fc440dd6e45bee53723a2fa3d0b999d486c4457a1016f314f8f1446", "ref_doc_id": "4f45f5028d85a55b262e6a28ca64f3c37c6f6659"}, "cb7e5dfe-e6c7-4607-81f7-b2f2a8366868": {"doc_hash": "582a2ac26e64656c5020973309b75a4052df60d64815e0322c923e3ccd1c6833", "ref_doc_id": "4f45f5028d85a55b262e6a28ca64f3c37c6f6659"}, "1a3d793e-bf39-43ad-be46-8119aa3491d8": {"doc_hash": "5adfda9c3523961816182d7a4b6eb434ca2c6c7adc3cdabced6e50f396daad16", "ref_doc_id": "4f45f5028d85a55b262e6a28ca64f3c37c6f6659"}, "67a9d35f-dd38-4d74-9286-4adde1698a98": {"doc_hash": "e0775a869148c20626c2188406931f3b5bd7b56c002bb71f5a06d6f5ab7d5a5d", "ref_doc_id": "f127d4f240828976857627d4222670802b77ed83"}, "be7cf2ca-9ac8-452c-b999-cc112bcc090f": {"doc_hash": "214fb8bb1df89b8a985c7bf8c9b57d3d5c0b57b923143b8a9e10cb6ac2b440e4", "ref_doc_id": "f127d4f240828976857627d4222670802b77ed83"}, "045824c9-4e43-4dba-a0db-59fcba4a91c3": {"doc_hash": "69e8d1869948e812cb5e8fda9ead9db2df6c9c806154b67f2188f89c2fff8ff1", "ref_doc_id": "f127d4f240828976857627d4222670802b77ed83"}, "bc9ffcae-f9f9-4555-934c-d88b1f522da7": {"doc_hash": "cf082f7108c6e21b6ea53606926a1ccf88d12dffc18c112d1d6b6655e67d610c", "ref_doc_id": "f127d4f240828976857627d4222670802b77ed83"}, "e6e47967-536b-45c8-8db9-b55a81efc68a": {"doc_hash": "64ed12852264298531be2fa583fa8c452837e70b77fa7c2051470f0690962e0c", "ref_doc_id": "f127d4f240828976857627d4222670802b77ed83"}, "1c4ab026-2dda-4b4e-a5b8-5a554188de8a": {"doc_hash": "29a3a0421e78925a627638bc7e51dfa5f6204108010d9641ac691368df55d7ed", "ref_doc_id": "01ee139d7998ab3e37e58980ef63c5f858061654"}, "9c988448-cfd5-4cc4-9c69-360841b1bad1": {"doc_hash": "ac5f731892f043d5b2be04612aa45af6cf7d4b09775c5a307aab9680b0de2bf0", "ref_doc_id": "01ee139d7998ab3e37e58980ef63c5f858061654"}, "f941c31e-8558-4077-98aa-758b20bcbe44": {"doc_hash": "9193a738520638ae4905709023ff882df472c9f721e3034545e484c9605edcc9", "ref_doc_id": "01ee139d7998ab3e37e58980ef63c5f858061654"}, "074f7ee4-1e93-4bbe-bd19-4ea6366525f5": {"doc_hash": "76903880810774d786b3ea68bae955c2294eb63f952c525b803ad2d7916ddb07", "ref_doc_id": "01ee139d7998ab3e37e58980ef63c5f858061654"}, "8235eb78-8296-4c97-9351-0a79e3bdde73": {"doc_hash": "b34becffcac4655ee4dd8ebd63354c42f014ebbee1403e27b7991ee4ea00a673", "ref_doc_id": "e8a8293d5d243e8bc15e05ae3f2ff6dce36255de"}, "661a7b3a-1cae-4611-9b14-c80b0cfbd9ae": {"doc_hash": "79cf4cd4efadee00c7d58db55c1ea696a883d87546e517e6a82e791fa73094bb", "ref_doc_id": "e8a8293d5d243e8bc15e05ae3f2ff6dce36255de"}, "879f0528-6639-45e3-a0f4-69735a75612a": {"doc_hash": "cf45250042d89490501c1c1f55ebc21736bdfce02d29f24d823b8ad62ca87740", "ref_doc_id": "e8a8293d5d243e8bc15e05ae3f2ff6dce36255de"}, "14d93045-f662-4c95-86fd-063b8b7ae54e": {"doc_hash": "26e214ae5aa6fb0acd7edb0973ccfd550bdc0568803b1e59edacf252666df7f6", "ref_doc_id": "e8a8293d5d243e8bc15e05ae3f2ff6dce36255de"}, "7c238625-65fd-46f3-824a-5b7fc6752139": {"doc_hash": "1506018fa324e2df301d4ef96aa0bd14c14b1feddca2c7b696791bd5100ed520", "ref_doc_id": "e8a8293d5d243e8bc15e05ae3f2ff6dce36255de"}, "356807e8-ef34-469d-a486-c80dbcc45b37": {"doc_hash": "c0a704ecc4b63c99ecffe7867abbbf1897c6fdf16e83f568bbce1dbc3d92f554", "ref_doc_id": "e8a8293d5d243e8bc15e05ae3f2ff6dce36255de"}, "e06d93a2-4903-4be0-bef6-ce5633925b04": {"doc_hash": "449e2c913242440afd9360619fdf77583fc0b67dc4252826d404f2adcb6d83ac", "ref_doc_id": "34e5714aa7e5b9cf9c3801979bc46db55eda23a4"}, "589371e1-565c-4002-aba5-79bc58215f57": {"doc_hash": "748e05658a46aefbb0eb62029e060f23075d39cb098cfb5c6fab24a9bd260b1f", "ref_doc_id": "34e5714aa7e5b9cf9c3801979bc46db55eda23a4"}, "e521f5fc-8271-4151-be02-e6d72251c180": {"doc_hash": "379f554d3e01d09d7a487bc02c81971459679e4458a09f5af89fa0de7de3ffde", "ref_doc_id": "35762c48bc02e9af512ea3cf46c040f6c58e916b"}, "264faeef-de6a-4436-8678-ed7d59e1570c": {"doc_hash": "530b681c7c871a022e51e783fb50e73afd475ea526d63d04fbf211faeee6af32", "ref_doc_id": "35762c48bc02e9af512ea3cf46c040f6c58e916b"}, "0070967d-2767-495f-a5da-e4c874506f9a": {"doc_hash": "0c9e0df523a90cac18503a7e8f8aabbf1b4a059a098c6a0d596d02bf489a902d", "ref_doc_id": "35762c48bc02e9af512ea3cf46c040f6c58e916b"}, "e0c48793-8bb6-47b2-ad51-071f27886f4a": {"doc_hash": "05d23299c7ca70e08ef1c126ba0ad81f156ad74c02b202766084fe9b61a7c463", "ref_doc_id": "35762c48bc02e9af512ea3cf46c040f6c58e916b"}, "c16e2973-974b-42b5-87bd-151267951be7": {"doc_hash": "fdd474d4b2f4935d33e19790200a97b7447498edd78a99e17c235e65949e5474", "ref_doc_id": "35762c48bc02e9af512ea3cf46c040f6c58e916b"}, "fee47ba0-68e2-4921-b4b0-149d7ff72c7f": {"doc_hash": "f8953a3d12f6acfd41c9b555332129aeeed38fa5979e74165d560b2f92563613", "ref_doc_id": "e1ab7ccac835860ee87e5c897299d2f05e12ce65"}, "cd3053ec-61fb-4350-8610-6d531554e2eb": {"doc_hash": "f69c5b13bba1c57bcb886999b8a4541a0472059a1dcfed81d8bc163e9d639f36", "ref_doc_id": "e1ab7ccac835860ee87e5c897299d2f05e12ce65"}, "62c40d78-eb5f-4112-99b0-c4bffdbfc56c": {"doc_hash": "a35f0ecc3eb241718e804f1128efb1072eaa1ce4fe4334bc11b2e8eb695b3a3c", "ref_doc_id": "e1ab7ccac835860ee87e5c897299d2f05e12ce65"}, "b30daaf7-5d8b-486f-8100-daae8f61c7c2": {"doc_hash": "61cbc8c854cb0742d94c2cd52e2567d9aecc711772149516a9dcb17bec96565e", "ref_doc_id": "e1ab7ccac835860ee87e5c897299d2f05e12ce65"}, "30732d8b-472f-49ba-b3e5-292f65ccff8a": {"doc_hash": "250c90fbc62d718908848b788d3eda272e6742bb0b0c51cf6feccb93c1ba4fb1", "ref_doc_id": "e1ab7ccac835860ee87e5c897299d2f05e12ce65"}, "f824e608-c5e2-4429-96e7-32094840e584": {"doc_hash": "44c5ccd9bf8e751f06c4b148a609d61ac2cf1341a9ce3498d5afed2700ff5ead", "ref_doc_id": "f482e39f0eb278080809d7d4f71b2b92b368b0dc"}, "272139c0-562f-4f24-b93a-e26390e2aa9a": {"doc_hash": "8f3d2b22d152636d343964dab6a33d8127d67a0f7ac6abceab1011ac8a29936b", "ref_doc_id": "f482e39f0eb278080809d7d4f71b2b92b368b0dc"}, "cdcaa058-bdff-4bf2-975c-830619481f1c": {"doc_hash": "843d079d6a6410d464658ba596440b3a1854f9bc70879a549abca2100482e127", "ref_doc_id": "f482e39f0eb278080809d7d4f71b2b92b368b0dc"}, "c729c807-07bd-4d0d-9ea9-0320d20d7151": {"doc_hash": "f92fde64e65d5325f78c85f7c6b2e7bd9fdde4dec92ad0cc7648dfd4ffcfbca0", "ref_doc_id": "f482e39f0eb278080809d7d4f71b2b92b368b0dc"}, "659c02d1-9cb6-49b7-829c-e1a53de4162d": {"doc_hash": "ded908dbeda1edfa40086a268f7a87c2ec8815b9e170f69a67a89b4e653f4e55", "ref_doc_id": "f482e39f0eb278080809d7d4f71b2b92b368b0dc"}, "3c39d8f1-0d05-45cc-bdbc-d913a82cc21a": {"doc_hash": "edff9d2ae640d3d48198e515ab00666808ea2fad0ee39faa7296a61d4e3adabe", "ref_doc_id": "f482e39f0eb278080809d7d4f71b2b92b368b0dc"}, "f8e05795-3625-4fba-8e3a-25bfe17e993b": {"doc_hash": "6957c5550ba713612e753b369ee66fd3ffa5ec789ede233cd7ffa9e013690576", "ref_doc_id": "47275a3f3fa887ab77778303ed52fb8a1775f26b"}, "3ac4813b-f90a-46c9-9bff-5626d8330201": {"doc_hash": "4df7549a973306d33e5c7d0e304e2d1c8e44aa01b3fe0606232b1688fc87e444", "ref_doc_id": "47275a3f3fa887ab77778303ed52fb8a1775f26b"}, "5b1cbb6f-f082-45c1-998f-de5b5305402d": {"doc_hash": "786276e2c2dc93076ee842dba4f639ad8396cc143effa198382ee4da13f1af25", "ref_doc_id": "47275a3f3fa887ab77778303ed52fb8a1775f26b"}, "ccd37ea0-5d24-404e-bc9c-bf9815b46de1": {"doc_hash": "2f4fb6af82699393e4096ecbc2100ef073985b85605a5d545475be464e01f832", "ref_doc_id": "47275a3f3fa887ab77778303ed52fb8a1775f26b"}, "a0a45d3a-dcc2-4154-8346-da0f27e4ddb6": {"doc_hash": "0f74f685248c66dd75fcd19447bcd354accf45899bc7584e3cb256e004078c0e", "ref_doc_id": "4d4699de4e69af7e3f9820abb1d35918d3c54741"}, "c01a4a0c-765f-425d-bfb8-9f2c20ce5280": {"doc_hash": "6d8069e8b30bf50535681f7638d861fdc4b9aa38200d0cd33b45cddf8ccfa887", "ref_doc_id": "4d4699de4e69af7e3f9820abb1d35918d3c54741"}, "a18b83e2-4f03-4dc5-b899-1dc0ac582452": {"doc_hash": "c8128675b7a43a250bb97b4cdf6870d61432760e4e375db091c06e80a2322525", "ref_doc_id": "4d4699de4e69af7e3f9820abb1d35918d3c54741"}, "fca28c76-e83f-4417-96b2-c1325b2be025": {"doc_hash": "2f94ad61bc955d5a13bc288e77377182ad891adf99581ad40810e314c56e0cbc", "ref_doc_id": "4d4699de4e69af7e3f9820abb1d35918d3c54741"}, "e0ada741-a59a-4f73-bb09-3fc82b094064": {"doc_hash": "d761d58e59a6c816b7814c49f6f617338f31bebf94705c663f328e3296859533", "ref_doc_id": "fba16e66e14b44d57136544ad4626a98f44ad840"}, "40c2e112-69c5-4725-b219-773884c542a9": {"doc_hash": "e024f49fd33938e78def5a93bd6336c86c0eb5501ade426a237723302d131e80", "ref_doc_id": "fba16e66e14b44d57136544ad4626a98f44ad840"}, "bb0b17e3-b658-4271-a662-cf1e1f5c4b2c": {"doc_hash": "02c2fec96cdd5c4711a43eda4aeff184ff7a86d328e52b71751da65630abe635", "ref_doc_id": "fba16e66e14b44d57136544ad4626a98f44ad840"}, "3e5dbb7f-26c5-4a01-9471-06a9d4e181af": {"doc_hash": "96c91346d949677926aa16be098bd477a1f37f62f28cc2d2dddf050954d01efb", "ref_doc_id": "fba16e66e14b44d57136544ad4626a98f44ad840"}, "a17092ff-9164-4ca3-97f1-53d7afd9d8df": {"doc_hash": "bc093d4d1913ea321fe83ae811d20969ddaca6c82c1988cb77d9958e2e897c5e", "ref_doc_id": "fba16e66e14b44d57136544ad4626a98f44ad840"}, "d849b75b-23a5-4984-92f0-71ef714ad1ac": {"doc_hash": "76aa888bd692df10f0871ad297c0fa5669f9a283fa52decc4b01418af78f1b4d", "ref_doc_id": "8f7e9b85fde163515b934a1c4e9ed3586fe65b10"}, "87966131-45a6-4a00-a9aa-e40b377e57e7": {"doc_hash": "1e2934a836cfa1aefd2cf91da68cc50820c22f03038950b07a1b170766a51e6d", "ref_doc_id": "8f7e9b85fde163515b934a1c4e9ed3586fe65b10"}, "c2a27263-90c3-4e82-a362-a16eb71160c2": {"doc_hash": "5edfbdb57a0826352ee629c0d0714d391c0d4c9563285ed6535a7325918af476", "ref_doc_id": "8f7e9b85fde163515b934a1c4e9ed3586fe65b10"}, "ed0c6e78-0ceb-40d4-8069-d45f92d2cb11": {"doc_hash": "b35f6379a8e6da7bac24feab738ff3813d54502c269b2768cc832d72f38e687a", "ref_doc_id": "00ce5c61dbd0addd19e8f61b5f0501d6a290e100"}, "95631830-6b86-464f-b046-b2cf64faa12e": {"doc_hash": "4ac76e536e65f63cf1fe6a9303eaaaeb899377f52cbdb21e0279fecc1b671343", "ref_doc_id": "00ce5c61dbd0addd19e8f61b5f0501d6a290e100"}, "264d67b6-3cd4-43fd-8596-c313f6c13f47": {"doc_hash": "524ead6b10cde8293dad5d90c4087ac73806fb11540e869b201de21a677371fb", "ref_doc_id": "00ce5c61dbd0addd19e8f61b5f0501d6a290e100"}, "f1be52bc-ce60-4988-a3fc-45f2bf368846": {"doc_hash": "727995c52ce3475c56b173229cc4d87c7c02d41ecf668b4f28dabe76b83ac87e", "ref_doc_id": "00ce5c61dbd0addd19e8f61b5f0501d6a290e100"}, "208da026-7d7c-42d7-8693-8a1653accccf": {"doc_hash": "bb69c1a56f7cc58ac74bb7b11c1c40c14ac6cd634fd013c656cd7b808659ee33", "ref_doc_id": "00ce5c61dbd0addd19e8f61b5f0501d6a290e100"}, "8da457b1-7236-4191-b2ca-a959631c1cbf": {"doc_hash": "4ce756575ca6d2e7b36969c3d9ff13756da35aeb5531e5b88737e51951ffb70b", "ref_doc_id": "00ce5c61dbd0addd19e8f61b5f0501d6a290e100"}, "3359ff13-8920-4b92-9680-fb461744aabb": {"doc_hash": "82a4a56995f20b862604b22c7acadc7b46da70c4c0682dcfdeb5df58c7349e56", "ref_doc_id": "00ce5c61dbd0addd19e8f61b5f0501d6a290e100"}, "0fa03420-4ecf-4ab7-922e-4dd401f84c93": {"doc_hash": "6eaac401a0462ced5bcc81355403bc0fce7aad7be8095775fafe45077744f34c", "ref_doc_id": "00ce5c61dbd0addd19e8f61b5f0501d6a290e100"}, "98b5f877-bbf7-4760-8ce8-c7faeceba58b": {"doc_hash": "724e2848de78b1754b1fe3e4800c4efeb56665ae56773fd15822cb1ab867c3b1", "ref_doc_id": "00ce5c61dbd0addd19e8f61b5f0501d6a290e100"}, "93665316-f86d-4c1a-9c91-36b9b405ea97": {"doc_hash": "f5a77455c44bfd2d021743fea5c76ed54e4eb203f296857a9df8ff3c967d6765", "ref_doc_id": "00ce5c61dbd0addd19e8f61b5f0501d6a290e100"}, "4fb08107-afa0-43bb-b2b9-894aef106827": {"doc_hash": "a1a466a4c1f8dfd08a172cefd1745aebce0d2d57ed2b8a7ded7f42546a7e6fb2", "ref_doc_id": "00ce5c61dbd0addd19e8f61b5f0501d6a290e100"}, "19ea8390-bbb0-48fc-8b1b-39cf6997ad3d": {"doc_hash": "5d86148d57232084fc71d0382e97b07d95f59c5de80aff71e343d34ca540640e", "ref_doc_id": "00ce5c61dbd0addd19e8f61b5f0501d6a290e100"}, "1524ab94-670a-4bd5-adf1-83a329e36b0c": {"doc_hash": "49c429717b7451ebc152ecc90fc17572f336ae4b7a541fd7fe918f9063626cce", "ref_doc_id": "00ce5c61dbd0addd19e8f61b5f0501d6a290e100"}, "4a335bf5-c922-451f-96fc-d9bbb244fff9": {"doc_hash": "2c0e1e2a84f8530db8b8959158a48c69c561728974ccb284158a86cdcec93c1c", "ref_doc_id": "00ce5c61dbd0addd19e8f61b5f0501d6a290e100"}, "eb73840f-ec5a-449e-a4a7-a63755d11d9c": {"doc_hash": "ac09e8ca2d5d8ce3d31fed7f177a3b3ee66065be0f65587b48c4ec848f77da25", "ref_doc_id": "00ce5c61dbd0addd19e8f61b5f0501d6a290e100"}, "1139db0c-9ea5-4255-b308-7bcde2cfc0de": {"doc_hash": "411183c5fc0e07cee7007590d13e285774e77c22dd3078e3a931936262a5fc88", "ref_doc_id": "00ce5c61dbd0addd19e8f61b5f0501d6a290e100"}, "0ecc8946-fb29-4cf2-a407-07398d13a118": {"doc_hash": "904651dbfe360ce638ff53af36ad8680a1a03b785e0a95145c343c3ab6d70e8a", "ref_doc_id": "00ce5c61dbd0addd19e8f61b5f0501d6a290e100"}, "68e4fd6a-a645-4c2a-8d32-8701caa6ecbc": {"doc_hash": "9c3128b515cb56c92edb65762ec1368efc1dadfb187ef8833c90c48f16c5776e", "ref_doc_id": "17a3cb0d28286bc508f58906e9a5ff9733cb8573"}, "71d9f953-d01b-4330-b964-03f22881be5e": {"doc_hash": "de58a23826cee5c06c1a33096a785f1f54a41cdb8da69c448e1e17c386ee7a62", "ref_doc_id": "17a3cb0d28286bc508f58906e9a5ff9733cb8573"}, "4265bbb6-ef4c-49c9-b4f1-8ce0b1435d66": {"doc_hash": "2e69d06a882ecf06bf9f150c3b8cfca30914dd36a9325cb9f9bdfee3ca54a9c3", "ref_doc_id": "17a3cb0d28286bc508f58906e9a5ff9733cb8573"}, "c0e8fe01-3bbf-444e-b582-a6c1e28da36b": {"doc_hash": "c029636600c92f162d8e3ac39594fd506d4eee26ba7044d3df380e44de78af98", "ref_doc_id": "e39e027548c49485ed06ca8330b68d62d263f701"}, "d9f4485c-36bd-4e0d-8df8-26d5aff9e0f3": {"doc_hash": "f6862db37053ac03498216015685af154053acd5875dcd5f92d4e65749874051", "ref_doc_id": "e39e027548c49485ed06ca8330b68d62d263f701"}, "f93c5942-6ed5-49e7-8ac0-2744a56ebb23": {"doc_hash": "fdae3fc13b4c25c5994c55075d2b86df6b78aa29c23b1456552e52eb95a98a2c", "ref_doc_id": "e39e027548c49485ed06ca8330b68d62d263f701"}, "2de5a625-0abf-4ca1-b0ee-34c513e41065": {"doc_hash": "f8a5e29ec4dc83466d9ef082fdf7be939699386d8e8be4974fa9be270b2b4f3d", "ref_doc_id": "e39e027548c49485ed06ca8330b68d62d263f701"}, "975ef36b-3be6-470f-85b9-bf9e6d5e2378": {"doc_hash": "15483b33eebb5cee075a8478a4322fcac8ac25c0bfff95f02a02ec881d824a6e", "ref_doc_id": "e39e027548c49485ed06ca8330b68d62d263f701"}, "cf349581-82cb-4205-b65a-1b2993a9ef0c": {"doc_hash": "f02c0470959bbdba9c2db13c2ed00b22dec3d0ec4bcfbb895d9f1f24caf737dd", "ref_doc_id": "e39e027548c49485ed06ca8330b68d62d263f701"}, "fa9ddaa7-c258-4e97-bae7-d15e7676e7c4": {"doc_hash": "930a6ce928e14e9364e1c0c926f8abecd9528f28e3cfabfc58cfbb36fe4a82de", "ref_doc_id": "e39e027548c49485ed06ca8330b68d62d263f701"}, "cc427ac7-d114-4a32-81bd-3b52c9e61b10": {"doc_hash": "1d46056dede94aa2be48ae00395bff9ab5b1ae969fcb41b5e8567b8b9dfeb6d4", "ref_doc_id": "a598e792434e0549ac45f9b4f47a59c16ce2db58"}, "a35a9bba-9db1-4e28-8c1e-1f052c9bb13d": {"doc_hash": "c4dec1b59dafaad1a2bfa3b2af512eb198f2f61317cdf512cb68ef6de2a9ae66", "ref_doc_id": "a598e792434e0549ac45f9b4f47a59c16ce2db58"}, "9c937e25-2b26-4526-81cd-c591cc5732a9": {"doc_hash": "c3dec18d49cfb2a4cdaa7e277a593beecdec3ea14bb38cbf909a9a1edd66e004", "ref_doc_id": "a598e792434e0549ac45f9b4f47a59c16ce2db58"}, "b570aebc-10d5-4480-aad2-b1fb9f02144f": {"doc_hash": "c5a92db1ad00b863c4603e7906874fdc3aaf997dba9138e70d33800db98274e5", "ref_doc_id": "a598e792434e0549ac45f9b4f47a59c16ce2db58"}, "a037b9d7-b6ca-45e2-89dd-1d106cfde39c": {"doc_hash": "1aadb458971dcff82e683338ae56fb8df2c17ead2556bcd1db575ee559a3be71", "ref_doc_id": "bb38110a632599a398dca4776103984395f43830"}, "7c352582-1b5c-47cf-b84d-e4376f8e10b2": {"doc_hash": "69f9ed926c405c494e3a4f57e1a9e05842fb60868354053638cb6823596ba3e2", "ref_doc_id": "bb38110a632599a398dca4776103984395f43830"}, "e506da9d-ba43-4a58-899a-f2c2cf722216": {"doc_hash": "3a13621889f3671877e3ccdad858faedb88f026272c30cefab20873fbb8231b2", "ref_doc_id": "bb38110a632599a398dca4776103984395f43830"}, "1e390e81-6473-43ef-b850-1b0cf47ec438": {"doc_hash": "8ecfb44b25d15ad709dc09cf7845ef081f5cc1e76abc769e3f3a17e769736afa", "ref_doc_id": "bb38110a632599a398dca4776103984395f43830"}, "6f36f26e-2f9f-497e-b416-7d8191c3d24f": {"doc_hash": "edd80cf105f534722cbb45d69892246cb47b7da4280e5de9abc9ef6f7894e3bd", "ref_doc_id": "bb38110a632599a398dca4776103984395f43830"}, "a5fc6ffd-60ad-4176-b872-37dc0c8d0c91": {"doc_hash": "6001be8f12fdcff33dfb15a8ac4c9c21510ea6eae28be7944996313215dc7eb2", "ref_doc_id": "bb38110a632599a398dca4776103984395f43830"}, "b954e43e-f6cb-477c-8439-b9bd792777fa": {"doc_hash": "799220ecfd8bd7a8e8ca5bf29e8a7e410c7a8111433431bd3ffcee4971a14f03", "ref_doc_id": "bb38110a632599a398dca4776103984395f43830"}, "62afb90f-485c-49ca-930a-889d0b60ad53": {"doc_hash": "5f4111337eee7f4db29cd2013f1ad23faeaca077e0b8a653a202542ad96b8b8b", "ref_doc_id": "c4d59eb011b10fdb4d0e92ba61da1832c64f2a2a"}, "d9dad3f1-5a66-4390-b1b8-bb197fe3cd02": {"doc_hash": "589cbb16a02ea2e733f89592dc1f0c71c158b2135d68b714ed3c8eefd3b41d6b", "ref_doc_id": "c4d59eb011b10fdb4d0e92ba61da1832c64f2a2a"}, "db7e6fe4-5f5d-4dd5-bfa8-9e1a63a71b85": {"doc_hash": "b75ba233fe275c8d0bfc7ff2c7c56c3ade934d19e3c0a501bccb1677b25d2462", "ref_doc_id": "c4d59eb011b10fdb4d0e92ba61da1832c64f2a2a"}, "a8e22399-acff-4be8-8f06-2f9c1d76f89b": {"doc_hash": "5056483dd210831d3e615dd0daf5cabf4d8d682d4b079d2e88be4cad6e6e6571", "ref_doc_id": "c4d59eb011b10fdb4d0e92ba61da1832c64f2a2a"}, "1c9c16f9-bd3a-4e32-b3c4-f17761ab1471": {"doc_hash": "ffda6e9f05b56497a803f2078a2444d26d2023acfbe5470b5a47bec5898ec577", "ref_doc_id": "c4d59eb011b10fdb4d0e92ba61da1832c64f2a2a"}, "b151bd79-3dd5-4d19-8e4a-499a717f8fe1": {"doc_hash": "1e1129812e7790d357ed78f68e9233b336e4de8577a99888a904a040c2584615", "ref_doc_id": "c4d59eb011b10fdb4d0e92ba61da1832c64f2a2a"}, "8fcb1e60-5d15-4f1d-8092-f0bc684810e8": {"doc_hash": "3b897d8449fc8df66a3a7e2286fecdcc94edf3dbe80cccc81e9bff24affe8e77", "ref_doc_id": "c4d59eb011b10fdb4d0e92ba61da1832c64f2a2a"}, "da0ecb25-29dc-4ad9-80b6-a9b063c1774b": {"doc_hash": "a5178423b15a9441d47ef8532318d50bef6cc51a50f8319020e909a8a3a5e3b6", "ref_doc_id": "39082baa9575bc246e4de83db1be3f9dc3e6a5fe"}, "8873ddbe-e902-4784-bcda-9b99a52b2c78": {"doc_hash": "fff5d1482f1627866e24c6fe9bd3a26351638d54d5049444553b92522d61b94a", "ref_doc_id": "39082baa9575bc246e4de83db1be3f9dc3e6a5fe"}, "9b002ff9-fc4d-4ab1-9c6f-e4e0867165f7": {"doc_hash": "fcdad3409d7d30a9eb8f6a1a2adf2e32ac741256d9f01b189f8a23efd13c4874", "ref_doc_id": "39082baa9575bc246e4de83db1be3f9dc3e6a5fe"}, "fa595e06-102c-4b4d-8000-da134556e2e4": {"doc_hash": "5c6823bf78cc72df012c4b350d92fcbd19ccdf7c64e2f6d659e93cd5e04d8bc8", "ref_doc_id": "39082baa9575bc246e4de83db1be3f9dc3e6a5fe"}, "b2e644df-b16a-44f3-9177-a6b8ee38383c": {"doc_hash": "70a7ab4ee090dc21629d8b596c21c7d7da9f1b3c46fb3072232e3b2c45e8c191", "ref_doc_id": "39082baa9575bc246e4de83db1be3f9dc3e6a5fe"}, "3952aa3c-5762-46ac-8880-4c9974920e41": {"doc_hash": "e15cc73095dc41aacc2c38f7083fd8b6c9251e82bc887e07d0afba47409b4ae6", "ref_doc_id": "4a567b11fb2631abecb3cb1b3cdea3a33ad8fdf2"}, "c6d59e1f-a711-4faf-84ec-6e7860ea6dc7": {"doc_hash": "7e29878f133fef0fc2a11d838c18035ced223e2b68f454e2c8d527ec869f7c3c", "ref_doc_id": "4a567b11fb2631abecb3cb1b3cdea3a33ad8fdf2"}, "c3e3b392-a217-4663-88c9-133614de87d0": {"doc_hash": "76a8c6f85344ba1d9d1308f9c8b0b3d1074702fe59fdfb3c585628267125a1b8", "ref_doc_id": "4a567b11fb2631abecb3cb1b3cdea3a33ad8fdf2"}, "1a35017e-42a7-4d2f-853d-cf2449a30982": {"doc_hash": "1d91d1238693a0293f7f05c80fbff8a168cf1d9399def040445b0b68de3c5a8e", "ref_doc_id": "4a567b11fb2631abecb3cb1b3cdea3a33ad8fdf2"}, "1fe34838-aaf2-47cb-9c20-18d0b0f02c8e": {"doc_hash": "4231f878cf1b0d28e87e20847fe181f84f08e15e3dae9124955cc5e57f08f42e", "ref_doc_id": "4a567b11fb2631abecb3cb1b3cdea3a33ad8fdf2"}, "bdfeabc7-6c13-47bb-910b-af00310fecea": {"doc_hash": "5466bc224979a3bb6981f5203b10dc288e3f19437da3ff518930ddbc70e964fb", "ref_doc_id": "045200707d2d7e1b0862602ba488ce539f45f064"}, "e242e347-557b-406c-b995-16acd61adf29": {"doc_hash": "a130d9731995be3beccc378bf346e09b6465c56c906cb16090b831ddba33c65a", "ref_doc_id": "045200707d2d7e1b0862602ba488ce539f45f064"}, "6d8b50d2-0c34-4224-bce8-13be7d0e0e68": {"doc_hash": "147d788955bb967ba04ab1fcdb8bc362e482f853cee68c159e28bf7c574fe39b", "ref_doc_id": "045200707d2d7e1b0862602ba488ce539f45f064"}, "18910034-ab2c-4e39-b135-5f56fcf7ad04": {"doc_hash": "0ec711fa42368d7d51deef7319fee013c3fe4d292d664bcbd6be3440f7b152b8", "ref_doc_id": "045200707d2d7e1b0862602ba488ce539f45f064"}, "7d8e5244-00a3-4da9-9a55-d9b529bd50be": {"doc_hash": "183470231814ca922f12886ce612d77f020d0b9fe2d1be9dc56ab65979cd0884", "ref_doc_id": "045200707d2d7e1b0862602ba488ce539f45f064"}, "25027bf8-34e7-4dbf-b063-eceaecabca23": {"doc_hash": "6035f3134d7910be72896b62cb43df3714ed9caa093dc140815d348c5fadba97", "ref_doc_id": "feb102dd42cbf6d3061d7e85a13a85265423d0f2"}, "16b386b3-17c3-4c02-9d74-b6e01ea43219": {"doc_hash": "0cbc6be28278d2fe008310c78402399f2bc65426adae3dc82a7f88d9f3987c21", "ref_doc_id": "feb102dd42cbf6d3061d7e85a13a85265423d0f2"}, "f14576b5-1094-4692-aca2-09fd71b42612": {"doc_hash": "28dd3abd4d83bdbd53bd6dab07922fea1d7fabd83eaccfd7fe51a85c68fa788b", "ref_doc_id": "feb102dd42cbf6d3061d7e85a13a85265423d0f2"}, "0de814d1-6671-4d0c-a5d1-fa61bda9d2d7": {"doc_hash": "e33d5e6e3a95b1c2097ab1359c42ddd79b7e043805263c6df9b2fd2e22a5341d", "ref_doc_id": "feb102dd42cbf6d3061d7e85a13a85265423d0f2"}, "3279de26-2223-4fc6-862a-05b8dcfbe80d": {"doc_hash": "754907d9061798eaa3fce9e817d4ba27116851b8baf45205bc31baa99316c865", "ref_doc_id": "feb102dd42cbf6d3061d7e85a13a85265423d0f2"}, "3a7d85a8-07b0-48a8-9425-fdda474609f2": {"doc_hash": "47d4f374ecf2f0d3bd2b5f7fd6e8f59ab6bc4a70290f5a475562aac76092d6e6", "ref_doc_id": "feb102dd42cbf6d3061d7e85a13a85265423d0f2"}, "386842c1-9a6b-48db-9d3b-33c94913234f": {"doc_hash": "dfe97099de84bded082c07780a47f5ac14575010c60b9ab36bc3a3480c723ee8", "ref_doc_id": "6c52d41b712678eb24d67cd26bd9181f50144835"}, "7b048c95-81c6-4c7b-8432-9eacde858581": {"doc_hash": "d6fcad67657a361b144f910345e21453499e89cc371de80712506e45ba45c178", "ref_doc_id": "6c52d41b712678eb24d67cd26bd9181f50144835"}, "5eb30dbe-8483-44ee-8509-25650df45c14": {"doc_hash": "ae7dbe92f9e8ff3d84809e7b488af8f0771c21a34ff2175e38c2d76fa2f87c1b", "ref_doc_id": "6c52d41b712678eb24d67cd26bd9181f50144835"}, "0d1186a8-4951-4442-9c7f-5e5dbbb04293": {"doc_hash": "56f6d84ddf7d98526953119692152bb70a209b92e70d32f5f14c00b8c126ca4f", "ref_doc_id": "6c52d41b712678eb24d67cd26bd9181f50144835"}, "b6e03aa5-6fa1-41d9-ae6a-a0b19d7ddee5": {"doc_hash": "dabd99ac9ce388bc498fd1f1d46248d7fe8df9d40516b08e0b64e3ce1e6f956f", "ref_doc_id": "6c52d41b712678eb24d67cd26bd9181f50144835"}, "25ed975e-6016-420b-873b-f068c95cae19": {"doc_hash": "3956accf27c3c071d61b3110a31abe737938fe194fc4c8a4e0f7a7369cfbf37b", "ref_doc_id": "6c52d41b712678eb24d67cd26bd9181f50144835"}, "ad7b4b0c-d932-4191-ab4a-161d490bfbd7": {"doc_hash": "e12d0e0fca6ba16a526d77a241c39e27a0156277cd6b75463c99513f67f0a864", "ref_doc_id": "a0defc8fa6b14a2dd3d6432b56c91a1b1f896c38"}, "25bf1d5c-d4d1-4a24-9d6d-30b476551c21": {"doc_hash": "f8a4f093eb63faf4786a0e20a67b42f5fdf68d28f179bef6be23d6d64d0952bd", "ref_doc_id": "a0defc8fa6b14a2dd3d6432b56c91a1b1f896c38"}, "65f36be4-e621-4903-94b8-408df15463f5": {"doc_hash": "8a73bbb73caf346f4a1875cc4333035c0f1944bcd1cb60d0e80c5ce6553a1626", "ref_doc_id": "a0defc8fa6b14a2dd3d6432b56c91a1b1f896c38"}, "0a722a7d-cd73-4616-8344-0f36969744a7": {"doc_hash": "d7c30460aa1a83f6e97887a0f87272eb4e595f9ccac0c08beeb4f6253a831348", "ref_doc_id": "a0defc8fa6b14a2dd3d6432b56c91a1b1f896c38"}, "6fd30b8b-2b8c-4709-83e4-e97dfb453108": {"doc_hash": "990fa7fd641f662de0a6376298e7482e0d7d3ce57bd37ea554d79525e031b71c", "ref_doc_id": "a0defc8fa6b14a2dd3d6432b56c91a1b1f896c38"}, "605a4628-41e7-4048-8445-ec9252ab200d": {"doc_hash": "7c4b733feb06280aaf2df2eb092b710e6df61e228549db8d5295a158730361b6", "ref_doc_id": "a0defc8fa6b14a2dd3d6432b56c91a1b1f896c38"}, "c7769dc2-7547-481c-94fe-8490ab8cb11a": {"doc_hash": "0182e390c2622a94ebb68e88e96c35dfba22f61c69d004c53323e73296bcd8ca", "ref_doc_id": "862f3ee634783325a1c41d6a62b40e0d91398faf"}, "179a11a6-8942-4b7c-a017-35f2b69c051f": {"doc_hash": "b17987d4df9fad0664df903fcc2d2cb9bf75a421b8d3e681aa930609b562dff9", "ref_doc_id": "862f3ee634783325a1c41d6a62b40e0d91398faf"}, "7d5fa07f-e148-4b2f-a7c4-c1b08aedc222": {"doc_hash": "d323c430d5cff9d4787bcb79af9bceda9256cac5574fadf530d33109167470e5", "ref_doc_id": "862f3ee634783325a1c41d6a62b40e0d91398faf"}, "b752e0f2-2eaf-4268-9d27-4ffa5d609c94": {"doc_hash": "98d3d1c218679434affd1dab00c02c565a90bda491839970b708573696f442b8", "ref_doc_id": "862f3ee634783325a1c41d6a62b40e0d91398faf"}, "0842ff1d-ab6a-483e-a5b4-dc1c52c641e4": {"doc_hash": "39a8d8884ede24417d3f9582838848d4b5d2090089832646339b5d5a7c8a59f4", "ref_doc_id": "7cc385a2cb8ce08970cd694f5809ed89a76d696a"}, "56ebbbc5-38e1-42b9-babb-4f143985aae6": {"doc_hash": "7065f5ba304f59e8e4001e670f3fc4ba1c209d436500b7bd8e0cd6434f6ff167", "ref_doc_id": "7cc385a2cb8ce08970cd694f5809ed89a76d696a"}, "13f6decd-d5f6-4acb-9cbd-9c14b240cf9c": {"doc_hash": "00671ef932270fc3183d2e914c2d897d40191f2406744c3ca988513c35346722", "ref_doc_id": "7cc385a2cb8ce08970cd694f5809ed89a76d696a"}, "b51fa0cc-cab7-4c7e-9216-8851ebb5acda": {"doc_hash": "556e67783b1ea12d4f7226e98c5d0ccd0774fba43da3d48de7f9369d396b1565", "ref_doc_id": "7cc385a2cb8ce08970cd694f5809ed89a76d696a"}, "1280b65e-35ce-41e6-a088-90c8b29ce66a": {"doc_hash": "b84e49eed934f52c24da76451fe0867fc5ba0349c4ed0b61efc9115526e7ec02", "ref_doc_id": "7cc385a2cb8ce08970cd694f5809ed89a76d696a"}, "95051d0b-4676-42e9-9d91-75cfaf2d0998": {"doc_hash": "939fe58487c55f206e57a2b7d6c31875c9ec9806542cdeda17b50468d3516745", "ref_doc_id": "0802bb1297851cdc8b6f26bf16d2dea2717fd157"}, "b2867177-afc9-4b8e-8b51-2f130e6d285d": {"doc_hash": "bf58a9513f0a638f3bdc03bc45e61cd323e78a9235faf847b3e0cf04d6c32db5", "ref_doc_id": "0802bb1297851cdc8b6f26bf16d2dea2717fd157"}, "d416f970-010d-41e2-939e-82db374dc08b": {"doc_hash": "2961bc4dba07ff4b02c1115780ae0c15ffe6147376dca23fcc04cb2ef23b7336", "ref_doc_id": "0802bb1297851cdc8b6f26bf16d2dea2717fd157"}, "776aab8c-52dc-4315-9523-0088c5bd11c0": {"doc_hash": "51e0d4257c4c95cc9acc83b55c00572b6a4d264c2b3e0e4d143384586e9610d9", "ref_doc_id": "0802bb1297851cdc8b6f26bf16d2dea2717fd157"}, "c491bc79-0e71-4f9f-9866-feefeb8612a7": {"doc_hash": "62b869a72277955955eccbb3dac59d3e720b1cca61b3a36406d0bbc092a2d291", "ref_doc_id": "84a89a83d8d38f5c7ed4eb732e5e184dd6ec8624"}, "fc0c73a1-4270-4afe-86c6-c493bd8e687a": {"doc_hash": "379dffc5c96a07134910835ec7be7bb070faabaf06fae7a017444e89f47c8040", "ref_doc_id": "84a89a83d8d38f5c7ed4eb732e5e184dd6ec8624"}, "39009882-824c-469e-aa8e-604f054f6e91": {"doc_hash": "9328e9c90c58527d9317a1aee6333ae708f641f58797a2e3dc89392e4713a764", "ref_doc_id": "84a89a83d8d38f5c7ed4eb732e5e184dd6ec8624"}, "9e6b28d3-03c8-4893-b798-49dd0b4925b2": {"doc_hash": "3fad63411613261cfcf5d6fec9dadb260be0bfd55acd879e92efdcbee3bc6aae", "ref_doc_id": "84a89a83d8d38f5c7ed4eb732e5e184dd6ec8624"}, "d9c0092c-6a0f-45bd-9b8c-5125fd1cd3b4": {"doc_hash": "31d68dce36a8bf33dcaed49552b1bd25c72f22425ae2299faf169577b0e41c28", "ref_doc_id": "84a89a83d8d38f5c7ed4eb732e5e184dd6ec8624"}, "6e754841-06f9-4772-9659-390dc6102a52": {"doc_hash": "79bbfc6ed1ed44ff38729e451392dd70eb3dd91695ffcf05c8768ac3f61b12e3", "ref_doc_id": "84a89a83d8d38f5c7ed4eb732e5e184dd6ec8624"}, "e2172ede-991f-4f5d-9f2d-c43055021053": {"doc_hash": "8d5c6285c05dc1dfe05c582452aab3e81c0d230aaa6ff8640f8ebc395636f9a9", "ref_doc_id": "b6f599b6f25d49cd1ede8e3815664bd8fd80f056"}, "24cad3a2-7e66-46ef-896b-3cdee5382c5f": {"doc_hash": "98f04641eaa4a9725cca2458300f6155f2534eb9716373a977f9f385c2d3bacc", "ref_doc_id": "b6f599b6f25d49cd1ede8e3815664bd8fd80f056"}, "3b626fd6-5efb-47e5-aad1-902774e8ff11": {"doc_hash": "f619b5780c2ce32fd4c30efd5488bc6a0a4c7d314d01b3e97ea9064e108650e2", "ref_doc_id": "b6f599b6f25d49cd1ede8e3815664bd8fd80f056"}, "c0517d39-3b46-4072-b519-24e0331fd2d9": {"doc_hash": "60a2b07c92605ca14d5b52ed2c92da169d0488286ccd82d73757d0ef9eb9f147", "ref_doc_id": "b6f599b6f25d49cd1ede8e3815664bd8fd80f056"}, "ce1ce580-b026-4732-a403-a93bdac575db": {"doc_hash": "3095f3235162602dd5c45c84ad642c3a0caac621aed830bcbf2dcdbd7e22b62c", "ref_doc_id": "b6f599b6f25d49cd1ede8e3815664bd8fd80f056"}, "f56d0410-96c6-4c17-8937-8b2d62c4a061": {"doc_hash": "e6768a30832efe58092f40c46f38173836240a3068dab4f2145731f9b342eeac", "ref_doc_id": "b6f599b6f25d49cd1ede8e3815664bd8fd80f056"}, "ef1bfa0e-b7c0-4e1e-b137-2a2cef23db66": {"doc_hash": "92927e0778ef0b3ee258b74577bc744de5088b83d255a987cf5de3abf8234e0b", "ref_doc_id": "b6f599b6f25d49cd1ede8e3815664bd8fd80f056"}, "8c0f106d-59d5-4854-84b3-ea4eae74ebd8": {"doc_hash": "e0919efadcf89bc03bdb8a80804dfd80b9a32446f0a540e32d1ae13315b26d47", "ref_doc_id": "6fed7e26ab86a49d22e52042ff6f1c68560365a2"}, "009e32cd-3f5d-4104-86db-d824e724e7f2": {"doc_hash": "3a9456fec652510177c69aeeae4279620a8c590d8fc891f72c8e97b10d6248a8", "ref_doc_id": "6fed7e26ab86a49d22e52042ff6f1c68560365a2"}, "dada718e-366c-408f-82c5-21458ee4aa71": {"doc_hash": "581749f3e7567ed933717c5cc16dd2ccaf85272f3a1a63b40563681e68f3bda6", "ref_doc_id": "6fed7e26ab86a49d22e52042ff6f1c68560365a2"}, "f6c7f086-3905-4dc8-bd35-030fd6cbbc8a": {"doc_hash": "3673c42f95c0461056e01c4e2de11cfb758c7565df15b29b3a31baaa7035a4d6", "ref_doc_id": "00d31569675c9cf4b712578145bdbdc13e6eb94e"}, "1cd8ec29-4a37-4062-ad11-48e3b564f2f1": {"doc_hash": "0101987540b9bba52af34ed953a8ef893933ef27a611eee407a48d394d51bf60", "ref_doc_id": "00d31569675c9cf4b712578145bdbdc13e6eb94e"}, "a047eb4b-01de-4173-8837-464c8df9cd37": {"doc_hash": "1c5196e745a85f5fe343e04df5d5df20147e8963839be279755fce57b614d6d9", "ref_doc_id": "00d31569675c9cf4b712578145bdbdc13e6eb94e"}, "22f5bd2c-de0d-4339-b747-9c44251c5361": {"doc_hash": "9d98f084e34b986995f128caf71947bd17d3b9717366dc3b6dbbdb1380c28146", "ref_doc_id": "00d31569675c9cf4b712578145bdbdc13e6eb94e"}, "a4e31bee-b768-47fa-afc4-272206d1e2d2": {"doc_hash": "6bfe9eb00ea5906e9cdbdb2b33d3669c96bb8ccb361c4abbea18efa862ede454", "ref_doc_id": "00d31569675c9cf4b712578145bdbdc13e6eb94e"}, "e0507227-dd77-4686-a027-2bed9c9b7c5f": {"doc_hash": "8fd7e992415aaac67a206a6539b189be4fb10eb207eb6f0bdb4d8ffcc4e81e28", "ref_doc_id": "00d31569675c9cf4b712578145bdbdc13e6eb94e"}, "2031e6c3-d941-401a-a5a3-e5071814a5c9": {"doc_hash": "2c8143754f5551a9c3e81af983e8360c8cbb9737781e493e47a79b1631df08cb", "ref_doc_id": "064cac2120845890d1a07efa6e51287569f33202"}, "8bf708c4-9a15-40aa-87c7-c3da1a2b4686": {"doc_hash": "c87b2646074de28a8629fb5e7efeefdb8ef93540f2a4abc9d0fbed24b25cabf4", "ref_doc_id": "064cac2120845890d1a07efa6e51287569f33202"}, "ea716b8a-717f-4cae-850a-173a90b9f0fd": {"doc_hash": "8e82c5d3027b416397d46355e92db04361f460925e81f4acfbe7798180415bcd", "ref_doc_id": "064cac2120845890d1a07efa6e51287569f33202"}, "79519b60-8fba-46ae-b4d7-0776d66ca5f6": {"doc_hash": "514c26c44bf255f59f47bebdf3c704059a36e72ae0acde9ba02bda10baef48b6", "ref_doc_id": "064cac2120845890d1a07efa6e51287569f33202"}, "04ff77f8-63b0-4566-82c9-c85a102c0272": {"doc_hash": "5ea51e71d4ef069d68120113d26e00c5d4c2825e02a7d05883e1039051d23a0e", "ref_doc_id": "064cac2120845890d1a07efa6e51287569f33202"}, "4b704df6-63e0-478b-86e7-6a992d1236f3": {"doc_hash": "fc832c0712475f413afc8f188ca0b6f0ac69560199639461d1558403416ca7d5", "ref_doc_id": "064cac2120845890d1a07efa6e51287569f33202"}, "6f52e93d-7a3c-4d70-b122-282b15a4579c": {"doc_hash": "d57ff2c4a62b5aeeda583ab53328fcd1a8d0637142f2f7296f6088ff0397483d", "ref_doc_id": "064cac2120845890d1a07efa6e51287569f33202"}, "ccec0058-cd57-4903-a06f-7a0979e3cdfb": {"doc_hash": "06a15940d0b258971ed60f04e603b5c425106e49c019d8d239ac7c1d484a2671", "ref_doc_id": "085c5fa1cf626643aefc2dca893366458aee6dbd"}, "4b434471-32b0-483d-8c71-f825cff539c8": {"doc_hash": "501faf1b46cc7e1b2d49b7d904f86fa98662b2bd3df4a6aa64ceaef3a66418f4", "ref_doc_id": "085c5fa1cf626643aefc2dca893366458aee6dbd"}, "0f96e932-f8bf-4532-9647-72c0a1f279be": {"doc_hash": "5a7d8c03a61a6f0797cb9926b5c71a313ad7f312ff578ffc4efad6c758e016e7", "ref_doc_id": "085c5fa1cf626643aefc2dca893366458aee6dbd"}, "93ff0a49-49b8-4501-b8a9-81ee80e00a06": {"doc_hash": "c3c290edf7dcecc1a17ce5f5bb796f62967aefbf07a6c4a212e6d13f475d7938", "ref_doc_id": "085c5fa1cf626643aefc2dca893366458aee6dbd"}, "a1bf66ff-51aa-401d-9e98-e48dde78fd44": {"doc_hash": "b28efc1bdce790a33f582de5c2f888720caa55cf4701384f63a817a4f4c3fe38", "ref_doc_id": "085c5fa1cf626643aefc2dca893366458aee6dbd"}, "9e548961-218e-421b-b975-21d33f2077e8": {"doc_hash": "1ad5b9c0cda8a3e83067bb215eab923a157622e2cd7cf10e226223a6e99baa88", "ref_doc_id": "77bef923da6a25731952f8a9c9b9d34897b00118"}, "e2f8f1e1-f75b-40af-ba2d-d9f6f8f50352": {"doc_hash": "8c25096f5c00d82d8b96316727da7f718f6e051e3e75698a082d49170a3190ca", "ref_doc_id": "77bef923da6a25731952f8a9c9b9d34897b00118"}, "d34445b3-1b53-4feb-a84e-e53762824ffa": {"doc_hash": "d5908ea141ea6edb3f5b3232b50f87dd3563b1b5ec71ee64624f901090d43f3a", "ref_doc_id": "77bef923da6a25731952f8a9c9b9d34897b00118"}, "ea4f4272-86a1-482c-a11f-62f1415977e5": {"doc_hash": "c58880eb09a7c03c12157a682302aed1b373a4497df2791187ded74a19dbb4cd", "ref_doc_id": "77bef923da6a25731952f8a9c9b9d34897b00118"}, "73b29236-883d-40a3-a836-31eb491606de": {"doc_hash": "dc65afefee4338776618da558c8976d2c834585c4f1d5f79c204e988d484483c", "ref_doc_id": "f415e41f23a8bc7b2e5dca40d8848ab7b25a5c9e"}, "944b1e81-e556-4171-a50a-e997bbba868d": {"doc_hash": "fe122d5d28b0cb927555f12a895865944586018d4318c6dec4eec38495146a7f", "ref_doc_id": "f415e41f23a8bc7b2e5dca40d8848ab7b25a5c9e"}, "d11ca0ba-a642-49d8-9ba9-369809081384": {"doc_hash": "8bae8b56e14ed9435f4844a6f46b5b253e3a5313b8ead110859a579c2d900f87", "ref_doc_id": "f415e41f23a8bc7b2e5dca40d8848ab7b25a5c9e"}, "79475dbc-f58f-4122-bb14-a7136b528ebf": {"doc_hash": "ddf8652e9d18f7974a560b8a06151e60427d91fdf3c64f5a2bcf9eed74870281", "ref_doc_id": "94a06ae0539ae6f5553efe2daa0bfacf52115086"}, "722d5e1c-e793-4c06-8736-5b29bbaef7ec": {"doc_hash": "080626298f803edc4233b756b25662e5929e19a25eea50bbdf7320af4861c5f2", "ref_doc_id": "94a06ae0539ae6f5553efe2daa0bfacf52115086"}, "c4f1f27b-c322-4022-a971-ed5ae05c2778": {"doc_hash": "1f3ecd5a90955ed83d560af69251eba8cfcac08cbf8bebf5bfd35b421f7cacd3", "ref_doc_id": "94a06ae0539ae6f5553efe2daa0bfacf52115086"}, "115a57ee-a2b4-4d89-9423-b05de405e7ab": {"doc_hash": "20adacf909ab2c5dbcdc66390d47985d0e6b945896221e328ce8f60ce1c9e536", "ref_doc_id": "94a06ae0539ae6f5553efe2daa0bfacf52115086"}, "51132b34-8edc-4fc0-9584-6bbeaad426d8": {"doc_hash": "9b18825570cf78af966fd791282b911c90ae417ac4a44915ef750b60bd11e98c", "ref_doc_id": "94a06ae0539ae6f5553efe2daa0bfacf52115086"}, "c4365b99-44f9-419e-aea6-aa56a50c643f": {"doc_hash": "1551e533af929be1c93acc3dbb517247ea4597201988e60896c3da42edaead8b", "ref_doc_id": "c8b0560383b2ae5769173676f0c6e4353f4b9bc7"}, "b29aafc9-acb3-4cab-830e-e1f39e4054ac": {"doc_hash": "214ba7e959380ecc84808961a82e20f304e7214ae3b06935b2e0d46484933515", "ref_doc_id": "c8b0560383b2ae5769173676f0c6e4353f4b9bc7"}, "3fea145f-779d-46b7-b1d3-6ae865a5feef": {"doc_hash": "f3a4e8524385010c01a4e658cd83b6b3fe9231d4b949edd344033caf248f43ea", "ref_doc_id": "c8b0560383b2ae5769173676f0c6e4353f4b9bc7"}, "85d5275b-38c3-452d-b373-dc6e162c4579": {"doc_hash": "43e66e58300359dfdfbd93a663348e5839dfcf855fcad9214b5697985eb8700a", "ref_doc_id": "c8b0560383b2ae5769173676f0c6e4353f4b9bc7"}, "6dc6f0fb-1629-4538-a002-5b728d576eae": {"doc_hash": "314fc4d08ef1aad8021266dd522000e84aa580a3dc78e9edb7ee0471918ded02", "ref_doc_id": "c8b0560383b2ae5769173676f0c6e4353f4b9bc7"}, "3fbf8dd3-e144-4cbd-a9c4-374fa7342e64": {"doc_hash": "290272c1a6c5c285e9c99cb13f3c686d18d055f5f550bac56900bc067f86a6aa", "ref_doc_id": "932a996be9338bb545c634b1582f53802d1435d4"}, "9963b80e-f995-4f7d-b28a-006fdd14b56c": {"doc_hash": "30b67ef1d0475e5dfeec60860f2586df983a5504de799e463b39f54f04f4abd2", "ref_doc_id": "932a996be9338bb545c634b1582f53802d1435d4"}, "bb22f620-a201-4c47-9856-300846ef632f": {"doc_hash": "37fdaacca809d491dc2a4006bf350338b69370cc44ad309c1c90c2d25c5afd95", "ref_doc_id": "932a996be9338bb545c634b1582f53802d1435d4"}, "21e05220-474d-4cc2-b996-a2d0d670e568": {"doc_hash": "7cb13993e3a2a5cc81b402b58ac4859c820662948c163ae8afa08bad5edc5368", "ref_doc_id": "7d6e440c2ed0fa8afb92dd8371a9acdc3a75486b"}, "b687f76b-85e3-462e-8c4c-d768b3342038": {"doc_hash": "ea7e32ab6dea88dafc363d45b9408f40a5a64b35f39daad3bd643c8c1a800632", "ref_doc_id": "7d6e440c2ed0fa8afb92dd8371a9acdc3a75486b"}, "56a97a8e-32b1-4d28-9ee7-86e206fbcaf7": {"doc_hash": "a8b495f2d37c739d43f515b416d1e584e44117d5a7c88bd23d3aa30a19a14625", "ref_doc_id": "7d6e440c2ed0fa8afb92dd8371a9acdc3a75486b"}, "8ab09f3f-d0aa-4f2e-bee3-15ccdde31d6c": {"doc_hash": "7bdd42403f692dc865a6657fc95abcb2724cb71f62a133b19eee8c08574d2bce", "ref_doc_id": "7d6e440c2ed0fa8afb92dd8371a9acdc3a75486b"}, "c00070b2-76d7-4f47-b3be-dbc04a3f65d7": {"doc_hash": "b356333877045a3bb66e9123f00e5a624d8a9ba532b6d1e546204b01677ff7e7", "ref_doc_id": "7d6e440c2ed0fa8afb92dd8371a9acdc3a75486b"}, "e7bb9a61-b68d-4105-a05d-705a2479cfa6": {"doc_hash": "b1f8ccc75728e0307633af1705d63bd0877888eb0e2b6aeadb43fc350cf726ae", "ref_doc_id": "7d6e440c2ed0fa8afb92dd8371a9acdc3a75486b"}, "7e92bae9-3e3a-44c5-b72c-2ab1b9be04e2": {"doc_hash": "537f1faf34a4e7dc42c7fa4e8d4d68227b140cafcac77024b788c3463e3af20a", "ref_doc_id": "2b402f836970e8c16ffad1961e90cc039b697d99"}, "d9e1e38b-57b3-4305-bd8a-76ee7a70806e": {"doc_hash": "4369989eadf69eb8db604c8b12bba2f3df9e8684788ccbc6692ab56d53716dfd", "ref_doc_id": "2b402f836970e8c16ffad1961e90cc039b697d99"}, "48f62834-35c9-4d5b-844f-ddbfec4e064f": {"doc_hash": "943f65d73e78c3dd2b618dc20d079926f6f19ff0ce03c78a195bba110e6df567", "ref_doc_id": "2b402f836970e8c16ffad1961e90cc039b697d99"}, "759386d4-329f-42de-be70-cda07a147ad7": {"doc_hash": "d3d374eeb84d287820b2b089aa359b03d5e1f9454c1aeb0db5d91d22dbad8da3", "ref_doc_id": "2b402f836970e8c16ffad1961e90cc039b697d99"}, "353b98fb-826a-4c7f-ba46-f387a2931ba1": {"doc_hash": "682461f9fff17119138f767f698a15a1b1fb8b4953ae961708568b1c7cdf3cdd", "ref_doc_id": "2b402f836970e8c16ffad1961e90cc039b697d99"}, "1cef538b-1c0f-489c-a9f8-b042ebf2e75a": {"doc_hash": "fe647bd0950f8279472da8d630c59e2ac7b8977b0c5894ce6b6293a4952d38c3", "ref_doc_id": "2b402f836970e8c16ffad1961e90cc039b697d99"}, "af63da69-ba0f-4238-86a1-ecf359627f43": {"doc_hash": "f15c2e92ea459e6535d4c5d3221d1c6a3283b8df8c9502bea5b893973f0e6c1b", "ref_doc_id": "98f7130eb241131f863490012092873a6fd5809d"}, "16e2da20-d643-45c4-b8cf-8d24d93f7544": {"doc_hash": "7423e208add0eea02df0ab49004b03cae50748a8b531b7dc60c08609390e4517", "ref_doc_id": "98f7130eb241131f863490012092873a6fd5809d"}, "cfe61197-8863-4e78-9b22-2e82ccc4b974": {"doc_hash": "39cdaf85e23769e6ac70bea470405b06f0b868ca323dc7b695960025d3529277", "ref_doc_id": "98f7130eb241131f863490012092873a6fd5809d"}, "a24cea5b-9af1-49ce-b7a6-77e3afa4802f": {"doc_hash": "d8f0bc7ff677ee095d5749ec45294ae988228b67b8ef51ce5faf9be3ecc70033", "ref_doc_id": "98f7130eb241131f863490012092873a6fd5809d"}, "71eed7d6-85af-4857-bc01-978b6f82434e": {"doc_hash": "4ca9017bdb448d9a09432895e92eaad06b71d218aee44d5680b0c38994603249", "ref_doc_id": "98f7130eb241131f863490012092873a6fd5809d"}, "6c3f6d53-fa63-45a7-bc00-cccb865d12d2": {"doc_hash": "1e891a9e39b732fccfef08084b576477d1e4f18ad57f9e6fb4a9b907446a8a20", "ref_doc_id": "98f7130eb241131f863490012092873a6fd5809d"}, "9b3a0910-987e-429c-9ef1-a5205ea6340a": {"doc_hash": "7dd3ed304f6ca8e8262bb10fd59bf15c3820612ec87c5001bca947fbf67aff1f", "ref_doc_id": "98f7130eb241131f863490012092873a6fd5809d"}, "75ca0bb8-beb8-4916-967c-df5b398383bc": {"doc_hash": "296ad89b92b41d9a9efc479a2d0e724c848bf3783ab4c95f7102e4a4e928d493", "ref_doc_id": "668f40fd40ccb8cb8f52b4dd024537e187d29b58"}, "7a402500-8e70-48dd-a0e6-c2ec8da6d825": {"doc_hash": "4c3207f248bf4207bbd576178969b6b621958d676eaabe85a0a90f4badfdd29e", "ref_doc_id": "668f40fd40ccb8cb8f52b4dd024537e187d29b58"}, "1524a62d-b301-4fbd-a14b-f5f99865a74b": {"doc_hash": "2e1c9b313d192917b132b1e8682ee954e8657798a733536f2c3c9b6ec73a8842", "ref_doc_id": "668f40fd40ccb8cb8f52b4dd024537e187d29b58"}, "30f2ef8e-e622-4f8c-95f9-58dbff218928": {"doc_hash": "2d6837bbca0d12e126496dedfc7e12e76daf5433d3db222e426cc723364f2012", "ref_doc_id": "668f40fd40ccb8cb8f52b4dd024537e187d29b58"}, "3f076fba-0df9-4031-9e1d-30354889f6ac": {"doc_hash": "c196577a5617765266e16fe4fb292119517d62b707dabfbc32250bd48b43ef15", "ref_doc_id": "8dcf60d2e6d1f70a71948bed9d17b41b268158af"}, "6e4c799a-4780-47b7-9347-eab1ed871a97": {"doc_hash": "a39f91bacee80da7df182b653b0b28384398ce59f9685c823a028c36a044166d", "ref_doc_id": "8dcf60d2e6d1f70a71948bed9d17b41b268158af"}, "9627830b-cf6a-4fb9-a6b4-e7797a152ef8": {"doc_hash": "36b55cbba4b157b8bc991129b91e46f50bbf2e56b4e31a008afb8f6a59eb93cf", "ref_doc_id": "8dcf60d2e6d1f70a71948bed9d17b41b268158af"}, "3d99ecd1-678e-463a-8c37-656eb7c32fd9": {"doc_hash": "3a80c34cc2e8dc3203044469e9c79cc3697346d556411f4438eab1b4600f9ce9", "ref_doc_id": "8dcf60d2e6d1f70a71948bed9d17b41b268158af"}, "8f11e3e7-5da1-428b-be09-b36924d10610": {"doc_hash": "70ba992cccff927d2b50e191c929c1ee3c9283910a60cf4592ac75bf21d256a5", "ref_doc_id": "8dcf60d2e6d1f70a71948bed9d17b41b268158af"}, "9aed861d-d98a-40f3-b029-f58961a42181": {"doc_hash": "3d6794f15c456790ecfd4c13218d44a3dd0e9ff36f3fc79dfac73179164781af", "ref_doc_id": "8dcf60d2e6d1f70a71948bed9d17b41b268158af"}, "ac36254f-a199-4d58-85dc-9ef7a8bd4384": {"doc_hash": "edb60f607c258a673e41ff3300ffbbeb3b56db368f62f6c1cfde92f2ae3dae00", "ref_doc_id": "c23329205d3abe0e591c33e5bdf037be100b82f8"}, "2c87ceec-bebe-4142-99e9-0059e2b39a71": {"doc_hash": "a307650b8636b24b62b2bd03fa5a742ca755696267a1649fd4d7609aa1431bb7", "ref_doc_id": "c23329205d3abe0e591c33e5bdf037be100b82f8"}, "8a609de4-2b84-4727-8ddb-e729827315ff": {"doc_hash": "3e7e3ff918968c81898ab2ee9ad87b0f528fdaffb2a853cd3cddcf3f1275c240", "ref_doc_id": "c23329205d3abe0e591c33e5bdf037be100b82f8"}, "4c498e28-1392-418a-abe9-c63836673bc1": {"doc_hash": "ff841bf9ec99252996207ca673f7ed2fdafdb78c9bf0df8264b0ba135dca710e", "ref_doc_id": "c23329205d3abe0e591c33e5bdf037be100b82f8"}, "cbb3a478-c18d-4cbc-b1ae-fbeb93558a62": {"doc_hash": "d49780b5bcf9e5fa2b9ae6e9f3e93d1bc600773b3308f7598603a279eb382055", "ref_doc_id": "fee24e8db4e27a615822f30ea775a10b2d7b6b3d"}, "0415416f-84c3-405b-8fb8-5359f8fabb0d": {"doc_hash": "b9c72d0864d8fa7ce835cc98cc00ffa0ca2eb519e9a917a89e78126d70a49870", "ref_doc_id": "fee24e8db4e27a615822f30ea775a10b2d7b6b3d"}, "77c0b8e8-4de3-4f11-8594-a5d8729b8d26": {"doc_hash": "3bd83c1eb073b42edb8a299c29f6cd189dc04f55eecf465afb64efb94f490ed1", "ref_doc_id": "fee24e8db4e27a615822f30ea775a10b2d7b6b3d"}, "ebce57b5-9b0e-4045-8626-0f88300778c2": {"doc_hash": "150b0423e60fbdc4d45a23825057590df3b662510ee01740bac5de3502ed04b3", "ref_doc_id": "fee24e8db4e27a615822f30ea775a10b2d7b6b3d"}, "f7ac6d86-b0f5-4253-bbdc-bc0b43fa3069": {"doc_hash": "6deba4d6c80c005fed6444c770de0e544e72524c905ca192791038555efe83a3", "ref_doc_id": "fee24e8db4e27a615822f30ea775a10b2d7b6b3d"}, "99ad9764-d836-4813-9dca-22790911bf19": {"doc_hash": "a70b7e2a72acf23da98246847de5d5b3c51cb10b17781caa667f40dd0c58f935", "ref_doc_id": "fee24e8db4e27a615822f30ea775a10b2d7b6b3d"}, "7bd87e70-9614-4b72-83c8-64832f427e16": {"doc_hash": "74984df9597f8ae4b8aeea08a199e9da31469d1e94c2e801cfd7819ff06bee19", "ref_doc_id": "fee24e8db4e27a615822f30ea775a10b2d7b6b3d"}, "bd4eec5a-9bfa-4684-87b9-97c789ba1005": {"doc_hash": "b779f614fe4e3e14a30ddd1e9d028dfc864f87301346d47570323056e902ce1b", "ref_doc_id": "64eb0119282fd09fee22b48cc04566a64f67a96d"}, "068f1a58-5e9b-43a6-9f65-10386d6b9015": {"doc_hash": "b0ba0546c18ea4689ebbf11f410177db15f984760569db026febbdb1c4d20780", "ref_doc_id": "64eb0119282fd09fee22b48cc04566a64f67a96d"}, "1e34eba1-a04d-464c-bf1c-9a7b65037059": {"doc_hash": "5709ec57145c2ad8f3d5867c517101b2c9f87cac931d76e5b48506f82fb28870", "ref_doc_id": "64eb0119282fd09fee22b48cc04566a64f67a96d"}, "2487a0c5-1ae7-4fb4-857e-3064199e76b8": {"doc_hash": "6f08663cf1bb816c5d4a90c3f419091776ce0409f22ecbec46ac3b37d99b7272", "ref_doc_id": "8a96e4574aba7eb809847da71dd40c6938cf6f23"}, "b7fda838-a5cc-4106-9321-2267e217645f": {"doc_hash": "f850baf135d23075fa2a54b1c066b1263b5d994d3ce3d331b363ed05dd80b562", "ref_doc_id": "8a96e4574aba7eb809847da71dd40c6938cf6f23"}, "e97700a8-760f-4c70-86f0-093ec489018d": {"doc_hash": "cf64411d449efbacd4121580cae7797235a402040e1abc6feb778140b40c292c", "ref_doc_id": "8a96e4574aba7eb809847da71dd40c6938cf6f23"}, "4d7a4de1-5cf8-4f2d-930b-25da1db1fa1b": {"doc_hash": "9887ddf12b1444e86b7dc26581dc4cc50058f8401016beaf7017a4877ff7bcf5", "ref_doc_id": "8a96e4574aba7eb809847da71dd40c6938cf6f23"}, "c5b40e31-af9a-4a17-9467-7833365a11e3": {"doc_hash": "0f599b2d465445d531a3042e830cb1b92ec60e0ef556834dbde700b1182a7ec7", "ref_doc_id": "8a96e4574aba7eb809847da71dd40c6938cf6f23"}, "91a198a6-76dc-4d9f-9616-19e067641eed": {"doc_hash": "02079c2497b77454fb342f8b5d47f2a6a49c809b5e50dc6277a8c1799a33b850", "ref_doc_id": "8a96e4574aba7eb809847da71dd40c6938cf6f23"}, "c397213c-9c1a-400d-9c99-4c8e4be38045": {"doc_hash": "3cad0d17868046191897172fc079f478855a07da81e248f32f9d990d089e3a10", "ref_doc_id": "927f9ada8498522abe51d129ffafab4ac7b77725"}, "8324debc-29c7-4cb1-ab45-853b0a610db0": {"doc_hash": "21b2684c7d83cfd2c7cdfbce6bb137c89a49f2bfdc3b9268ab71ee7bc93be69e", "ref_doc_id": "927f9ada8498522abe51d129ffafab4ac7b77725"}, "4ad8fbb5-a558-43a8-a4f6-57aa7db05cd6": {"doc_hash": "b718a547b9c7b9225358d120df88895e0794df381ec161c6aab381bbdaedd027", "ref_doc_id": "927f9ada8498522abe51d129ffafab4ac7b77725"}, "58b54d3b-2a0b-43d3-b6dd-62f7acafd328": {"doc_hash": "f3cb78fc7af064a0da4f3bf52a0748d1d71830d5420b3ae38f7963833a544837", "ref_doc_id": "927f9ada8498522abe51d129ffafab4ac7b77725"}, "05360090-f326-4e5c-8248-229453889a49": {"doc_hash": "6d3ea4aea83cd333fe566d7a83ecf66bb8b8d1b0efe63c307a60c73e957cca5c", "ref_doc_id": "927f9ada8498522abe51d129ffafab4ac7b77725"}, "23ef7e2f-a189-4d7b-a34f-96f2d627e227": {"doc_hash": "7b7c96ee6678029294a419f6c121a68701e4a5e73dcf7e86814c95196505548f", "ref_doc_id": "927f9ada8498522abe51d129ffafab4ac7b77725"}, "4ad5399b-c527-40bd-baec-41c1e57f7a50": {"doc_hash": "4641bd7445efb351baa0d18b71b97364b17692664a87996612312ac9eebb9467", "ref_doc_id": "927f9ada8498522abe51d129ffafab4ac7b77725"}, "3096edd0-1321-4094-9e2b-0f17142057ac": {"doc_hash": "97d3ef84d0c06658e6e94efba01d5bb3b0cb028489bde93ac011ed903c677cc1", "ref_doc_id": "927f9ada8498522abe51d129ffafab4ac7b77725"}, "eca714af-9a20-4985-af63-858f70092120": {"doc_hash": "ef223053caba2182822721ef46714b2cba33763e9091897c03f61e7deb32fd71", "ref_doc_id": "927f9ada8498522abe51d129ffafab4ac7b77725"}, "63377d3b-51ec-4975-a3c4-d8e28d4e40b4": {"doc_hash": "702b8b2b1db3f3c67d5b6e31840d01a54e36d83c0c4ba839b4d4ac33ec20e5b3", "ref_doc_id": "927f9ada8498522abe51d129ffafab4ac7b77725"}, "925a6b77-054b-4323-a8f3-760accd1c119": {"doc_hash": "f7991b4c2609cd8a641fef4295791e06671b914105c1e5fab91b0338b19b6ed9", "ref_doc_id": "624a346be5b5ed1033d35b2741eddc3cf2aa5128"}, "88bc1172-2866-428f-bd44-549d4c1289b8": {"doc_hash": "11b39a4c278537d2b9327fd3db32f101dc6908914b9a5528a3e6c83b4b1db968", "ref_doc_id": "624a346be5b5ed1033d35b2741eddc3cf2aa5128"}, "f1eee4dd-b3d4-4d79-9ed8-8d37ea062b53": {"doc_hash": "2f051c6b0a4747aa7955a2ad28cae20a0be2defbfe0769657d37b35831863351", "ref_doc_id": "624a346be5b5ed1033d35b2741eddc3cf2aa5128"}, "69ca2a5b-623d-472c-8af4-cfa588941b04": {"doc_hash": "c580f11698beeec95c77b6eb61a45c9b092eda0e9552ba37025b4843b028b3c4", "ref_doc_id": "624a346be5b5ed1033d35b2741eddc3cf2aa5128"}, "cf60f238-226a-4971-b0c9-267b0f4e957f": {"doc_hash": "eac5db901635a7f69a1803bd492ee52cd038cd573c57531c819f0250df2cfd8a", "ref_doc_id": "8d325b2c10b2024113807cfb38e90e87bd385ade"}, "7bf55822-a527-4d5d-82cc-cdde560dcf5c": {"doc_hash": "7d272474f60cf0ea4f7dd73c584260bb6ecc09d6be1ba9e4d2239d8770625c52", "ref_doc_id": "8d325b2c10b2024113807cfb38e90e87bd385ade"}, "db9900a8-a0dd-4c42-bafe-1e8baef92b13": {"doc_hash": "142b7f0704657d2ad9696c6a457f8079c0e5e886ddbda95e967d18492cda7e97", "ref_doc_id": "8d325b2c10b2024113807cfb38e90e87bd385ade"}, "b564367b-e5c1-40a0-a5a5-8713963dbe7c": {"doc_hash": "ca5ea9c7f69bb170f87f39c147e58c20f7ffb938b3c5d63084b8a9bca335a95b", "ref_doc_id": "8d325b2c10b2024113807cfb38e90e87bd385ade"}, "ee655c63-8c35-43d3-b503-12f3edaf0914": {"doc_hash": "e0fe187812310eba0bac0fe33f7d20fed675bb8b427adba442e48baa41f78acc", "ref_doc_id": "8d325b2c10b2024113807cfb38e90e87bd385ade"}, "d647976b-6e99-47d8-8021-1bae71dac227": {"doc_hash": "fb331e867cb0ca2cc83c68210758c3796df141725b2a94d9c868e79ed1b3907c", "ref_doc_id": "8d325b2c10b2024113807cfb38e90e87bd385ade"}, "5e1d7986-585d-423d-a623-a134c7e5807e": {"doc_hash": "12ad643bc5ca3338ca76eda51905aa0e98d843bfe1bf79b25de48d4583a25f23", "ref_doc_id": "8d325b2c10b2024113807cfb38e90e87bd385ade"}, "b14d460c-8af0-48ad-b044-0d8c71860adf": {"doc_hash": "982e06cc54011f6a8235732b4352847794a10d89546b482099c6dd15f4c89509", "ref_doc_id": "8d325b2c10b2024113807cfb38e90e87bd385ade"}, "9950fcd6-4150-4b7a-9590-5da2c4217ef9": {"doc_hash": "45134f6247c606aa740563897d8104f3dc3d7cc8be4038d9dc2c7c755eaf82f1", "ref_doc_id": "8d325b2c10b2024113807cfb38e90e87bd385ade"}, "341fbfd6-0bee-4999-8e00-27aa46ea4e41": {"doc_hash": "04702dbdc8b236eb2343e538dafc2929e3362237f01623f63f5b5dfb120d156d", "ref_doc_id": "8d325b2c10b2024113807cfb38e90e87bd385ade"}, "b35ef148-0321-409e-99c5-9155f15982de": {"doc_hash": "35f64a70b6c77cad02e0a267d0516724bdd1b3dd3dbafe5ef7305e76b4e5307a", "ref_doc_id": "8d325b2c10b2024113807cfb38e90e87bd385ade"}, "97cba33a-51a9-4833-b9d6-ca810cb21b3c": {"doc_hash": "d1b6e84e73b63d4f1251ed2d0d0465350c2286234146f534d800fcd59516b91c", "ref_doc_id": "8d325b2c10b2024113807cfb38e90e87bd385ade"}, "d71ed047-238b-4b2c-acf4-a8c2aae28dda": {"doc_hash": "0280ca7d855a7da36df89bf8b0a2584110fb2b84e075b30a8af97e668c477017", "ref_doc_id": "8d325b2c10b2024113807cfb38e90e87bd385ade"}, "e2c23ed4-42d7-4c80-8bfe-0c997478ee76": {"doc_hash": "be54220cecdd5bc955ceaddc437892a61ef1f018a10d6e38a21936db19089255", "ref_doc_id": "a331a65c47188836aaa0e5d36408367352f57290"}, "fc14ece5-dc61-4cb0-899e-5232f1a64ff1": {"doc_hash": "c88cb0cfcca23baf7b83d95aef98cf3f0a5696051683de159257d9dcb7cd5a01", "ref_doc_id": "a331a65c47188836aaa0e5d36408367352f57290"}, "8333a992-15f7-4004-9494-7b6347fc0152": {"doc_hash": "ca5118c3019ee6a15c82dfe445fb3b20a4f20cc53ae04e7c87599de3e2df59ab", "ref_doc_id": "3e8eae8b276e681c237335f58a222338f667815d"}, "0a8274f2-77cf-4d7d-bb8f-64088ad279ba": {"doc_hash": "1677d69375e4b6553e4cb3bd1f181acc8d5f55e1d37890d4ae8d0a6a96fd01b0", "ref_doc_id": "3e8eae8b276e681c237335f58a222338f667815d"}, "45364044-6199-4d48-a8b9-2e66d7d449f8": {"doc_hash": "3a098ce176a505419cad6fb4be3dac47021eedb828efe1b224efb013593d48b3", "ref_doc_id": "3e8eae8b276e681c237335f58a222338f667815d"}, "78ff5745-6f46-4f62-b214-d2702042e9fa": {"doc_hash": "759caf18313d82533a6587be0a1bd4abc163e7ee7212daf0def481c4728d7f30", "ref_doc_id": "3e8eae8b276e681c237335f58a222338f667815d"}, "d468dfc7-1cb3-48b5-9cf7-36135a659db6": {"doc_hash": "d68506f1aa426fc38c2c81708d298831338619f5494412b731d4c10c6fb34ea2", "ref_doc_id": "3e8eae8b276e681c237335f58a222338f667815d"}, "8923ba87-dd20-46bb-a76d-8fdab4eb822d": {"doc_hash": "7c44537ca63ef03d4619dcbb7ad18768b87d55802eea17da324f175ffa8e5aaf", "ref_doc_id": "3e8eae8b276e681c237335f58a222338f667815d"}, "54cc9583-c314-4ef2-add2-b230255d4fb4": {"doc_hash": "df14c33566081ed026700df7876be8d4bb1d79e6f954ec0c38e8546515636e2d", "ref_doc_id": "3e8eae8b276e681c237335f58a222338f667815d"}, "a8ecf130-b38b-4bd4-830a-f969dfa36a62": {"doc_hash": "22c8c6bf2f86a879bf6e3c1e62663806dad0a2bd35277c4ab5e5152b990e2773", "ref_doc_id": "3e8eae8b276e681c237335f58a222338f667815d"}, "d25b0572-5509-45b7-871e-466d1f949eeb": {"doc_hash": "8f780b48e78b381df811d1c96f2fef046180335a66115d25959aac7efd411c2e", "ref_doc_id": "3e8eae8b276e681c237335f58a222338f667815d"}, "75aa1581-8bbe-4c1c-8108-8e99b441309b": {"doc_hash": "3afcca13372a7b775001e01d34de5a72a621e9d3f60861b6eb891db194fee840", "ref_doc_id": "3e8eae8b276e681c237335f58a222338f667815d"}, "6215c304-acf9-4c94-b095-b8f351bf1402": {"doc_hash": "dbc819d63bc5c082c949846ad46887772a8e20c0dc263f2625a90eb026438b28", "ref_doc_id": "3e8eae8b276e681c237335f58a222338f667815d"}, "8a41e316-598a-415c-ba26-500b3f704312": {"doc_hash": "821a3789cde992174f7cfa6e630ea445c438a34e71c5214066930f58607d2653", "ref_doc_id": "3e8eae8b276e681c237335f58a222338f667815d"}, "77229180-75f2-4771-954c-9135d78c9729": {"doc_hash": "032f61f1b69b5e66bebbf235e18e5efd7d442bdb0399d3344366c81263b29b21", "ref_doc_id": "3182e86b97c1203991444533b54ac5fc88a66ed0"}, "f5b4991f-fec3-484c-8439-28687f42c7b0": {"doc_hash": "7fa21cc1a7bfd380a46e5c7b601a85940138120e5fa6af87a471ce6c409aab8a", "ref_doc_id": "3182e86b97c1203991444533b54ac5fc88a66ed0"}, "e8ecc2c2-b33a-481d-9d14-691183df01e8": {"doc_hash": "a4914365f6ec5d90f43cb66f5c7208654c310bfc6959389acad26f99a527d4f2", "ref_doc_id": "3182e86b97c1203991444533b54ac5fc88a66ed0"}, "9ebc6237-6a00-4e19-9091-e54f298f40d1": {"doc_hash": "c9ff6f2bdd4a1585e12819a9ed95aba4454befe8e1da89cae6d6a8e601d45f3f", "ref_doc_id": "3182e86b97c1203991444533b54ac5fc88a66ed0"}, "fe491d36-fb97-497f-b6ae-08d36ca86f17": {"doc_hash": "8b42e36029a6d0d27a8aa7bdb112a59d6513b8db3d15c2ce1fc7661838006a9a", "ref_doc_id": "ef8e6012999a7a6e32e082f29682eda36131faef"}, "56777a82-cf61-4fe4-9d48-722af7d6bb4e": {"doc_hash": "6a9bf47260986631a347f1c5c8a8f81ad81162a95c04ff8fd03604de912595b5", "ref_doc_id": "6d7e6431e5cddfd6a06ee7e9ab5822c1329b2b0e"}, "054965fb-5679-4fc7-aca5-5d3f11c9c1ad": {"doc_hash": "c06f79fde1dc9147ae349956cf0406df8080b0798be92b471693bf3013bc3b65", "ref_doc_id": "6d7e6431e5cddfd6a06ee7e9ab5822c1329b2b0e"}, "f4d7e9c2-1138-49c1-80e6-5c7df819fe30": {"doc_hash": "892eab968dcdd97b76acb667cb19547ea64853226aef20291628d45b40dc5cac", "ref_doc_id": "6d7e6431e5cddfd6a06ee7e9ab5822c1329b2b0e"}, "ff65a235-2ddb-48f0-a3e7-241505cfdb27": {"doc_hash": "41c0447369303128e280392d2fed18fd747174894559c40ddd84b96c0eccc9ce", "ref_doc_id": "6d7e6431e5cddfd6a06ee7e9ab5822c1329b2b0e"}, "46a88e3a-3e44-4ebd-aebd-dce702abb0dd": {"doc_hash": "97dc5d54b7e6121735a86d116e4116dcbe7bf4786cb07b71b2a771236c368888", "ref_doc_id": "6d7e6431e5cddfd6a06ee7e9ab5822c1329b2b0e"}, "d582ea00-2bee-4fbb-854c-1a125ae13fee": {"doc_hash": "13ffc34f6834c9b8bc5abc80210f60b2053cfe0b94a11d4c6f5b696e9d240ce7", "ref_doc_id": "6d7e6431e5cddfd6a06ee7e9ab5822c1329b2b0e"}, "91713ecd-aefa-42bc-95c6-bd04ea372d96": {"doc_hash": "e4e787e478e23730629eece470ee308eb667161e87cafbdfc784e7dcc85cad25", "ref_doc_id": "6d7e6431e5cddfd6a06ee7e9ab5822c1329b2b0e"}, "954ac9e1-bc4d-490d-ac3d-4b50e793ad83": {"doc_hash": "49ba6765db2695ff388207c8290a7b9c5514ba4bda00dbd23515fe66d11068ff", "ref_doc_id": "6d7e6431e5cddfd6a06ee7e9ab5822c1329b2b0e"}, "1d3c9772-f5fb-427f-b7ec-eead6aced26b": {"doc_hash": "e1f9ffc484dad6560a65956e188ef5a1c5eae6e6612f2fc138d7c912b293c373", "ref_doc_id": "4f2da080a588c5ea1d8bfe0c9d68d53a356b91fd"}, "89a00069-0d2d-42c6-8163-567115cfefd2": {"doc_hash": "6961f99f9013165bc148cfa0d56384b6aca2760f97a253b2364092a372d391c9", "ref_doc_id": "11c7e9d8f282fef7475458c482dec034b4df3874"}, "e740b92b-85cc-40ba-be92-7fb64b9dbede": {"doc_hash": "1d36798ef3f1b951f335ca6767392144a5ad33f698a90e27b47dfe63b22a97ce", "ref_doc_id": "11c7e9d8f282fef7475458c482dec034b4df3874"}, "c6e24368-4347-4e90-a819-d0dd8c223fec": {"doc_hash": "ff346d629ef2d3734c9cf71e3c2a2aca58ce1e96d1da893b1b812801f372765c", "ref_doc_id": "11c7e9d8f282fef7475458c482dec034b4df3874"}, "a9bb3361-65ee-4afb-82eb-c1ed17ed3620": {"doc_hash": "e0bcec1419c7497fe1187af500f5958debc055be52d16ccbc0d47ab00d4fe506", "ref_doc_id": "11c7e9d8f282fef7475458c482dec034b4df3874"}, "404a6474-69bd-44ab-9646-63c593e6be57": {"doc_hash": "9acabf121080db4c544ec128b827fc2f4478383531e1afff428635088161e282", "ref_doc_id": "11c7e9d8f282fef7475458c482dec034b4df3874"}, "11fc1079-3dd2-4ef0-a191-d35de4c9bea9": {"doc_hash": "040a6fbf65590ab049705922e3331ce57e0d2ec11d3d4959674de7777ab526ca", "ref_doc_id": "8b6cac76e24de27aa7e6bc8cbef3c13529b17454"}, "05e785c0-ab29-4bcb-80fb-c06be3ee9ef8": {"doc_hash": "996eab2d9d35d50ce2d21282d6cbf2ca6ac0616451da6d7517a1d9051a4ce753", "ref_doc_id": "8b6cac76e24de27aa7e6bc8cbef3c13529b17454"}, "8321f722-120d-4137-a070-d015f646daac": {"doc_hash": "46cd2f7542df728b97d8731e7a88d8cf8d96b7d8c358be8c9ba116d8860f1be3", "ref_doc_id": "a1f0d505f567d310aa53ab01a415389cefcf1ec0"}, "04e492ba-5ec4-459c-ae43-f514616bb325": {"doc_hash": "49101c1456aa601a809240de525fc04308e648286dd83248a1e2e64502482fae", "ref_doc_id": "a1f0d505f567d310aa53ab01a415389cefcf1ec0"}, "1c2dad3d-55cf-41e7-89f0-29523b35a64b": {"doc_hash": "c2006be8ce31fb1b8821ef701adfe367cf2a3489cc7123dbd328c4342bf413d3", "ref_doc_id": "6a1aabb923cba74a491fbdfa4c1baa346145c68f"}, "d696c437-1b5c-4cec-b9e6-8a9da6459a7e": {"doc_hash": "11352118f23e1ddead9a9abe3be56f2a32b84c1f90347a3a5f18ebb3ac021dbf", "ref_doc_id": "6a1aabb923cba74a491fbdfa4c1baa346145c68f"}, "59a8ff39-64f5-4ec7-b73c-c52429c73238": {"doc_hash": "dcf4fa659f4cb0e9395b5d47bc5f7c331a27f0bb166dd5da1f6d34ec85ba1260", "ref_doc_id": "6a1aabb923cba74a491fbdfa4c1baa346145c68f"}, "ba2f601c-49d2-4cdd-955d-437b4a254779": {"doc_hash": "1283b9a70e179a49a26cb01a448204e3cafb7e50cc47178f2b05c4392d7bfc79", "ref_doc_id": "6a1aabb923cba74a491fbdfa4c1baa346145c68f"}, "978836bc-ab3d-4ae7-b20a-13b4397c2b1c": {"doc_hash": "0d89a1438a8a6123eb48338fb1259477efae2c4abb5550f34060503a203ad14c", "ref_doc_id": "b21225042294002d67fe849e6beac725ca866407"}, "d51cd805-0bbc-4437-ba05-d4c2714d38ed": {"doc_hash": "ff43b35a2b2345e5cd246f7581ee087ae897cae1363b6b86e7ebd301bf294b72", "ref_doc_id": "b21225042294002d67fe849e6beac725ca866407"}, "2baf1dd3-a0f6-45c7-a8c8-1c8ff9c31fd7": {"doc_hash": "22f4546123251564c9288fc07ca1213d0925413830d628d9f45d8faf201d2987", "ref_doc_id": "4e20487d32191e476930dc85955953c46a3a1d67"}, "7419e078-acb1-4ecd-b3a6-340703bada45": {"doc_hash": "6fb31d2b74051ed0aa02d34d01232cf838cedad6bc6d037045821b7b701e47e1", "ref_doc_id": "4e20487d32191e476930dc85955953c46a3a1d67"}, "c5508b32-c267-45b4-b16e-b20d6df51fda": {"doc_hash": "bd1076c55e203bcb840aaa369a703d116c5638af105704ce2742b4874cef382c", "ref_doc_id": "4e20487d32191e476930dc85955953c46a3a1d67"}, "c2a79b32-ca6e-45dd-be58-8019a110def5": {"doc_hash": "ff7b02414b29c01aa9116598f53996f77e1d4b07713ffe953711df2ce64b1c26", "ref_doc_id": "4e20487d32191e476930dc85955953c46a3a1d67"}, "3358ef0c-fc73-4dd3-b2bb-e9c6375784da": {"doc_hash": "eee2a44c0e2d14baaf61fc2469b77dcc9c7ef0d1841b633d23d9473803fab07a", "ref_doc_id": "4e20487d32191e476930dc85955953c46a3a1d67"}, "00c45e54-9445-4e34-9fa8-60cfa851c7f4": {"doc_hash": "712f8ba37be97f086c1df5e3f4a87ea1e29b67a2fc86871068ecf53f551c2e62", "ref_doc_id": "4e20487d32191e476930dc85955953c46a3a1d67"}, "b57f7651-1a26-436c-b1b6-c2bc77a50eac": {"doc_hash": "eedab84643b6d63269e919b7a885cf0c913426b09dc2f6dbdf5267aa769771cc", "ref_doc_id": "4e20487d32191e476930dc85955953c46a3a1d67"}, "d88f0fa7-7639-40f2-9acf-522c3ed2955b": {"doc_hash": "3f1dc2a42444021214effa2e40c4183bccf09178f87ee73d1befb6f8588261ff", "ref_doc_id": "4e20487d32191e476930dc85955953c46a3a1d67"}, "2490e403-d24f-4af6-accd-ebda25b9c1f6": {"doc_hash": "3a8e84fb3924efd3a2084ecd59b0f8c0158f6acc41628a04d835d9fcfb901a87", "ref_doc_id": "50105f402ecbfa26a36820fdcabb328adb1e40ae"}, "f381ef0c-6bfd-4f4f-b6bb-4b2e7a040fa6": {"doc_hash": "ae4b7d84effe5b0de25bfa66e9cf573da7b7c3bcde945ad244156312d7ab92e2", "ref_doc_id": "50105f402ecbfa26a36820fdcabb328adb1e40ae"}, "c9b3e111-8bf9-43fd-96dc-64c5a28b9506": {"doc_hash": "e7fe7886c5e1c3bb071bcc250a30802e35734e9fd4aa27b67ba0c895939b5ab6", "ref_doc_id": "143bab71b884e89f36539c349633b05cefb1a21d"}, "3fc45081-f03c-40dd-8adf-5e209d942c77": {"doc_hash": "14edfde704ae75e1734077efade6736723f46d7132ca6788f4883e5043466f4c", "ref_doc_id": "143bab71b884e89f36539c349633b05cefb1a21d"}, "f4d2bef2-ba45-4fe5-a85d-681b3e73d726": {"doc_hash": "274607db39421e2095fc03b718f4998c19ef9d88effe342b4e128b2de67c7066", "ref_doc_id": "143bab71b884e89f36539c349633b05cefb1a21d"}, "1de5d9ea-aecd-4412-a1e5-c73d972c6002": {"doc_hash": "3b3c44de057826ef04043a8deb611cbe3a866993e4818ca803fb8a48ca6afe6f", "ref_doc_id": "143bab71b884e89f36539c349633b05cefb1a21d"}, "53095d5a-e99b-47e6-bdc3-2b22488d2405": {"doc_hash": "158cc1d61b501126227114960dd94fcdf9f6f763c9b5a23739ff1d6e79543a06", "ref_doc_id": "143bab71b884e89f36539c349633b05cefb1a21d"}, "0b236a0a-60d4-4da3-9b08-e666415072f1": {"doc_hash": "8bdb61dbeb0b60db9c958da66038e2d5371716fc6f4b9df3a80789c1ec0e3646", "ref_doc_id": "143bab71b884e89f36539c349633b05cefb1a21d"}, "d584710b-9372-4116-ace8-7fa80f3cb0a7": {"doc_hash": "14b10b6371a6c925a03ab43e5989374142c20b6a57fd96398a3cdb0a3ec00549", "ref_doc_id": "143bab71b884e89f36539c349633b05cefb1a21d"}, "161e40d2-82bc-455e-8e29-f63c0ed7eeb4": {"doc_hash": "60c709f9ab2776bb9c806f3abc3c2fd3923aaebc8786669ec2869208cc2e98a5", "ref_doc_id": "143bab71b884e89f36539c349633b05cefb1a21d"}, "4b6bd2e3-400d-4bde-af07-d63472bef197": {"doc_hash": "6b6735ae4af89508955954649469754bdb400d0bb4e5f34b628931a6af4b47b4", "ref_doc_id": "143bab71b884e89f36539c349633b05cefb1a21d"}, "d53159c8-1edf-40d9-a35d-9c675283c8b9": {"doc_hash": "1afbeaa3065fc982dde5ac2f3f32c56097f4cc633e3c53e5dec8c7419ce0270e", "ref_doc_id": "8556b4ada63422fb37dc12080942c8249702da36"}, "e3ab99ab-cd56-4913-b826-0efd9ba3cd24": {"doc_hash": "019b6cdf948f7f7aaf21c30e584a79c7d901081f38b701d8aa78ce611e2f0c44", "ref_doc_id": "8556b4ada63422fb37dc12080942c8249702da36"}, "c9adf33f-ecc3-42ac-92b9-d5a83389995a": {"doc_hash": "5516531e4551a2d7fcaaf99c9971489bfe75922e724b60328d0108e0dd5f6050", "ref_doc_id": "8556b4ada63422fb37dc12080942c8249702da36"}, "38080fe9-697c-4a82-a115-a984296d66f1": {"doc_hash": "dee86f9f99114c46966c2d8b0d78b97c5824cf2cb6037b5fe2eb0573e87e7ce5", "ref_doc_id": "8556b4ada63422fb37dc12080942c8249702da36"}, "226146c3-4d51-47b8-a1aa-b0c5c93d26d6": {"doc_hash": "07c2181fe77f13645aa0bca95a6c2729c5e429dd23b9c25531bc86c1f7c895ba", "ref_doc_id": "e60c36d02599c01c70fccd50d0fdec161eba2274"}, "dfdcd136-cdb2-41d2-80cd-f958076d6dad": {"doc_hash": "6301b09215e495618b913fc2f6bc272053b304b13007d60089302b5b9dd73508", "ref_doc_id": "e60c36d02599c01c70fccd50d0fdec161eba2274"}, "21fb90d8-ec86-4af3-930c-25db961375af": {"doc_hash": "7026ecad1ed6ad50c606ea13840fb98d05b2cedefd2e42e0c49d5c19ea5636ea", "ref_doc_id": "e60c36d02599c01c70fccd50d0fdec161eba2274"}, "97d81078-226c-4841-ba5a-753b2457e085": {"doc_hash": "c887c5a7dbe26cac331be65772a4ea123c97d3edc9a613e40ddaceaf213b141d", "ref_doc_id": "159e51777ec2abedc5ccc951ec251d17f7c7cc98"}, "0fead943-ca0f-4992-9af2-ad059124df07": {"doc_hash": "655e1798d9ec358dcc3ae4d478a858c0c03e9544ed2027a10478d3f6a1216303", "ref_doc_id": "159e51777ec2abedc5ccc951ec251d17f7c7cc98"}, "540e0dec-4b2b-4f83-a399-0612df44d809": {"doc_hash": "b25f68d48f1e53a2f89a61c940e47401b2621865c784a0272bc5d710d9888e2a", "ref_doc_id": "159e51777ec2abedc5ccc951ec251d17f7c7cc98"}, "8fe6cac8-dd3a-4087-8fd6-40844b0d3407": {"doc_hash": "f03183ed29ae7b393a65799f02b9545824e58c33f2479d45fceb3840cc040a9b", "ref_doc_id": "159e51777ec2abedc5ccc951ec251d17f7c7cc98"}, "384268df-4581-4f7c-8667-4c349abadec1": {"doc_hash": "1180468fb57d6d8b463f40089d635ee792859d348d212bf116f9a543014cf897", "ref_doc_id": "159e51777ec2abedc5ccc951ec251d17f7c7cc98"}, "72dfd693-3fe6-47d8-8c29-72b1427c8a1a": {"doc_hash": "35504cf1ffea6f0382d91caf6d06eba1ed23671a47a306b705853770260546dc", "ref_doc_id": "159e51777ec2abedc5ccc951ec251d17f7c7cc98"}, "3afb3b43-a789-4b38-8111-df7666f22db6": {"doc_hash": "13822ad165060cf54ccbb844d44786c2f886d60c3b051f5a64fdece1bca9fb40", "ref_doc_id": "159e51777ec2abedc5ccc951ec251d17f7c7cc98"}, "1b1ff46f-680b-4814-b633-d23c1de28e29": {"doc_hash": "d7dcf163088a208a65156e1b880c99d13c03db79890f0b4654d7d91a0654273c", "ref_doc_id": "b2f0b0b2bb02b617f046ca9b6a6fd877c7fe7ae1"}, "de7224ae-1b0a-4839-811b-4dacfaa8abfb": {"doc_hash": "c14c1480d3ed1378a54b3a76ae26874f3a9cdd495093be678dd5734df954aa47", "ref_doc_id": "b2f0b0b2bb02b617f046ca9b6a6fd877c7fe7ae1"}, "5dce8023-a5b4-463d-bd84-f5d338bb1456": {"doc_hash": "b4acf7604a35a535ddc97972ca5d1408dea599d0c57c238b1474f69cabd700c0", "ref_doc_id": "b2f0b0b2bb02b617f046ca9b6a6fd877c7fe7ae1"}, "d30cbf3d-4dd3-4c58-a6d3-cc82cdb55e8a": {"doc_hash": "191915b8d719381d2f52ba84289fd00b7c14c436321c6b7606bd38ed6bb36efe", "ref_doc_id": "b2f0b0b2bb02b617f046ca9b6a6fd877c7fe7ae1"}, "6d60dc1b-ace4-4326-8a4e-ae413861a951": {"doc_hash": "2f47d2d9b0a7ef8621c3947a3b5aeba406780559118e4efa2266f6d2eea2de49", "ref_doc_id": "b2f0b0b2bb02b617f046ca9b6a6fd877c7fe7ae1"}, "90bba9fc-fba7-4d05-96b4-a05c1110ac32": {"doc_hash": "46f18b69842fe71b8e717c1d1ed8b5df7e83f621322035cfac172ffab93cb76f", "ref_doc_id": "b2f0b0b2bb02b617f046ca9b6a6fd877c7fe7ae1"}, "8313bdae-5fc0-4fe7-b332-1b02ea0a18f4": {"doc_hash": "f1d85eea26f5207c82919d4849903b6e4907ad091d794a0667f5b68ba1bdcab4", "ref_doc_id": "b2f0b0b2bb02b617f046ca9b6a6fd877c7fe7ae1"}, "70353792-2001-4e58-9751-99ab517c9f34": {"doc_hash": "b8a32cd78b27be468beff9cdf12cfaa240bd37434653478aece646bb3369c2de", "ref_doc_id": "b2f0b0b2bb02b617f046ca9b6a6fd877c7fe7ae1"}, "74c8b1e0-0699-4736-8678-0d77acc01130": {"doc_hash": "00914102d3d1b99c2fa64296f93b65898c8b226a4df9b9f43ac9e86a30be582a", "ref_doc_id": "161681ebf796409572b5c4eb8c67091275b68e4a"}, "8897d239-77d8-4444-89b9-2c95088a1fde": {"doc_hash": "2b61df96913d77be3832d7066cccc3a8a748563e06ab1db085f6cad9c7395080", "ref_doc_id": "161681ebf796409572b5c4eb8c67091275b68e4a"}, "9c83608f-054e-4dfa-9b81-4628e9ab4736": {"doc_hash": "0e6561f2d120550393c04a69ed6f7752141db9bf467cce3ccddd5cb432fbe76e", "ref_doc_id": "161681ebf796409572b5c4eb8c67091275b68e4a"}, "080b1b1a-cca3-4d1e-9feb-f5fc446a6e6c": {"doc_hash": "878ec488789d68fb13d9bce7fe80c1d4266f2648036e8906cdbd17db4a008ede", "ref_doc_id": "161681ebf796409572b5c4eb8c67091275b68e4a"}, "a50e8f84-7f16-4821-960a-bdc7bc561855": {"doc_hash": "7169a30c821bab2d8c28e258f5b7c505ed80c153e63c8621d65ef203f8e61586", "ref_doc_id": "60c2640f348629fc4962c1e10618f2683cd35de2"}, "7295f6ee-b017-44c7-bfd5-8de903c6df6e": {"doc_hash": "7103d5208a9e46e5b3e953868a4b14cb00f5fa178e53dab61569579e9862e9b9", "ref_doc_id": "60c2640f348629fc4962c1e10618f2683cd35de2"}, "55a89d0c-2f43-4f89-8cbe-597d6745b493": {"doc_hash": "85cee0686286d478527ef6b61483d106551749120794a5a3d1807a7dfeb068f3", "ref_doc_id": "60c2640f348629fc4962c1e10618f2683cd35de2"}, "4d146f56-7968-4b84-94c1-92e68a4cb209": {"doc_hash": "18546df0d85509fdb5d7d672533c1db2f32228b6b8dd513387330b61e0f4a18d", "ref_doc_id": "7a67886d89bb0784e422ee7c927eb51cb1123ca2"}, "415ad1cd-759d-41e0-a5ef-9d069aecd078": {"doc_hash": "f6e2c93a73563183a18ed3aa70adcc9b655ecf69f4736c6184376910d8d7e61d", "ref_doc_id": "7a67886d89bb0784e422ee7c927eb51cb1123ca2"}, "b3e8c75d-c8b7-4100-92ef-f8ae0e4456e0": {"doc_hash": "a641e89358e3a9c5c6bc734f8821451a4b6a0528c6d6e96c27979e051f031254", "ref_doc_id": "7a67886d89bb0784e422ee7c927eb51cb1123ca2"}, "8c626164-c4a4-4833-88fc-17a3e73c0775": {"doc_hash": "05469fcac345b1a7e36b3c9ee4a8c54765af3ace1b49706086f6bba030ab77ff", "ref_doc_id": "286e17f1308fb09cfa03975a8ca6a25832790446"}, "58ac15b4-a23e-49a7-b7b7-657e247a85be": {"doc_hash": "835b05951aff729111c5e30cf592edd607018aa264058313d63717cc20d79f92", "ref_doc_id": "286e17f1308fb09cfa03975a8ca6a25832790446"}, "9bd88261-9519-4468-940d-d782a5e77f54": {"doc_hash": "f84d0fee258f8c134d890bfadd2675ada975e2e12690d54541e69f4fd34906a9", "ref_doc_id": "286e17f1308fb09cfa03975a8ca6a25832790446"}, "fb6f99eb-8eac-45b1-aeea-e7f0db9cf3ec": {"doc_hash": "bc4028954ad7cc9ad3fb2a70094925b990ccef68afff6ef249b187c9ab2131d5", "ref_doc_id": "2377f0e1338c2db7024c66952c1fee0e6170507d"}, "941de30b-0845-4b20-bffc-b793cad06528": {"doc_hash": "983b5e454deb2be0bb6f45e94825f8048c1e34e426ed98d0198120b861b6a407", "ref_doc_id": "2377f0e1338c2db7024c66952c1fee0e6170507d"}, "ad87286a-4015-42fc-8194-a5888909f0ab": {"doc_hash": "7c9f6059090c8154664f0f8fc31393a40b270c6781cb86ab6ea8593e415efc7e", "ref_doc_id": "2377f0e1338c2db7024c66952c1fee0e6170507d"}, "9d6bc837-7e9b-42ae-89d4-3ccddde7fbe4": {"doc_hash": "572fa9c102257de50d34d8ce4af222197fc66b570c1b9c5004f9e9b2b249420c", "ref_doc_id": "2377f0e1338c2db7024c66952c1fee0e6170507d"}, "ce2aa491-c90e-4a78-9d70-aa7f51c7f268": {"doc_hash": "fb626d94bbd55a4a6dda534e7b89fe858781a42baffdf2f25f39132500a05164", "ref_doc_id": "7f66dc56567cfb3fa29430626fb4aab5fd255fe4"}, "8316821d-1ba6-44e6-9f64-ad786f438683": {"doc_hash": "fd7fff706b9876259a623acb8acb5fcbcc5030d3554b3bce0c4d77da1a4f0cf3", "ref_doc_id": "7f66dc56567cfb3fa29430626fb4aab5fd255fe4"}, "2302c724-603c-449d-b856-c08dcdb6a843": {"doc_hash": "6113acd49dec062f9a4e168956b9ad6c6dac76a66d9b9609d76c1947d0c893a9", "ref_doc_id": "7f66dc56567cfb3fa29430626fb4aab5fd255fe4"}, "fcbe030f-93cb-4ddd-afd8-73d951c5897b": {"doc_hash": "785199c9a0b7e40d1bea2233fac07789b44167400ce2a62aa201d1dd5dd3f507", "ref_doc_id": "7f66dc56567cfb3fa29430626fb4aab5fd255fe4"}, "60146657-9825-4dcb-97e0-d4985eaee3bb": {"doc_hash": "bb8691d7e28e0bb74af10cb8647e0d09810eacab522b1ddfacbf1bedfe8a253a", "ref_doc_id": "7f66dc56567cfb3fa29430626fb4aab5fd255fe4"}, "28df59b3-1bc8-4f7d-be61-b9556a8ec576": {"doc_hash": "84521b23675dff70327ff8c62ea83fc9f5a0b60d4ef8cd59d8780e4db28eadc3", "ref_doc_id": "7f66dc56567cfb3fa29430626fb4aab5fd255fe4"}, "f6717d28-06d3-4f9c-8b36-72cbf03a3f73": {"doc_hash": "7e6298f0ca4d8c49782cf3fe8af09b0e4ca5ca21884bd93453c98e9b4290cf0e", "ref_doc_id": "7f66dc56567cfb3fa29430626fb4aab5fd255fe4"}, "d0304bb5-369a-4cf3-b354-355f97a81f05": {"doc_hash": "2dfce508d7b433d6682277eda90a8165696f1af6b886c5f3a8dc614701cbe262", "ref_doc_id": "7f66dc56567cfb3fa29430626fb4aab5fd255fe4"}, "d552f198-d6b0-49ac-ba00-e4c968d736da": {"doc_hash": "eaabeed227635d331dcd6e654ae04f33defd59f076f2588cb3ba1b5452f368e3", "ref_doc_id": "7f66dc56567cfb3fa29430626fb4aab5fd255fe4"}, "2602e596-f107-4add-b35c-c240322816fe": {"doc_hash": "ff120773322f6f306c9c27e7bd419152db06fad9d270c6ffa2d808c593e93d6b", "ref_doc_id": "7f66dc56567cfb3fa29430626fb4aab5fd255fe4"}, "ed81e182-5cc6-4ff5-843e-95c909104924": {"doc_hash": "8c823efb54e6663fb8d3b71c348384a8805e20e02e69451c2ebb2e21d73e1899", "ref_doc_id": "7f66dc56567cfb3fa29430626fb4aab5fd255fe4"}, "c7ae6db5-b344-45d3-b778-5c942c979970": {"doc_hash": "c631a1165a0d54b3b9d927f29e6204e17df2b48e5047791cf0dd4ecde5cf3da0", "ref_doc_id": "7f66dc56567cfb3fa29430626fb4aab5fd255fe4"}, "ab31c5c0-e2c6-4cbe-8f24-84c25226b8b6": {"doc_hash": "0bfc54f49a43bd24d4d76e8610761f3f0971c3626ef06f30d4c5c794f30a46a1", "ref_doc_id": "f3fb6dc2279c705193f531307a22840cd583caff"}, "0416dbc0-0794-4ea1-9ee3-76c53a724acd": {"doc_hash": "55abe65ebeed96bc25e26be779f2ffa3eebb21c3bf3100f35cccbb261cacf4ef", "ref_doc_id": "f3fb6dc2279c705193f531307a22840cd583caff"}, "ccf5c083-dec9-4444-9e66-be0571075a97": {"doc_hash": "60f9ae8b319735fd052597d51324b4418d60799da28aa3669089b776b88590a6", "ref_doc_id": "f3fb6dc2279c705193f531307a22840cd583caff"}, "18fe7ee9-c80b-4fb3-abda-8eea6606b18a": {"doc_hash": "85ee9fcdb8d90cb94d0fffb9a8a179d71081d8369137f3b3c8de60ba5dab349c", "ref_doc_id": "f3fb6dc2279c705193f531307a22840cd583caff"}, "00f92b9d-9dea-437e-9d09-e44f754bc26b": {"doc_hash": "08b1c4d4efc33570e013207f908c882d787b0be722448796ea93988ded9efcc6", "ref_doc_id": "52e19bc7f56ce4e0bedd245c19d616399fffefe6"}, "a9531166-643d-4fd6-a9b0-519771bd0e37": {"doc_hash": "380c3cec5e97cf415fffff79decf720655564ab47b8204bb9f253a8d4c908e3b", "ref_doc_id": "52e19bc7f56ce4e0bedd245c19d616399fffefe6"}, "0913eca2-476a-4980-9ae7-7f6fd51aea3d": {"doc_hash": "dedff1ffff1d1a3b8f87afea7a10a411f7702ec903c4b02088100b86e797798e", "ref_doc_id": "52e19bc7f56ce4e0bedd245c19d616399fffefe6"}, "94e8c25c-faf2-49ab-b641-74135056dd52": {"doc_hash": "569f8e1345edf68ad09a036596517999085fd1d5de899b949bd305aa3069c2ce", "ref_doc_id": "52e19bc7f56ce4e0bedd245c19d616399fffefe6"}, "1b876c94-91dd-484f-839e-1c2326b27aa7": {"doc_hash": "664e3abcb10ac6f838237466a1709b3bd247414f4ef546a00313505213e7aa49", "ref_doc_id": "52e19bc7f56ce4e0bedd245c19d616399fffefe6"}, "4f8300fe-ee92-446c-b402-9846bd7abf0e": {"doc_hash": "6c186be825c9bf359a6ea6c3ad76a0ae262c571e3e141bc855dcefa1a31c2436", "ref_doc_id": "52e19bc7f56ce4e0bedd245c19d616399fffefe6"}, "bccc99b5-ed04-4153-a613-7fd6c7838a0f": {"doc_hash": "e4d5c856bc7b07b46a6dbdbb0cb584068d216cfe5041405f0645b0d0937fbca6", "ref_doc_id": "52e19bc7f56ce4e0bedd245c19d616399fffefe6"}, "a0eeff40-0958-4c82-8c7e-cdc3b77e5bf6": {"doc_hash": "e229e244d48c769cde8b0453dee668e7318ce78ec62e838f9a00e9bcce9a1c10", "ref_doc_id": "8bc9342e9ff6bb64558730297314184c1da63565"}, "6ebff1be-dd06-4581-b177-bb5542ba7879": {"doc_hash": "a8d8dbfe2c503aaee8863b542645ddae6714620b3feae89b885c69ce6ac7cea1", "ref_doc_id": "8bc9342e9ff6bb64558730297314184c1da63565"}, "79c27988-3214-4b16-bffa-e9b236a31c0c": {"doc_hash": "aeb39ad3c831191e4420b8836b46e80e3adefa1731b0c0b80e0ef43a71da77d9", "ref_doc_id": "edc9cabb3ad17e1bddd327b994b4a110d5f3aa89"}, "b9e6634e-54c3-4a6f-884f-c06ff80db216": {"doc_hash": "73ad87ee4a9647945a743c8b36f4e7e08b3bc5c48067148edfbb8b7fcdb7a9c4", "ref_doc_id": "edc9cabb3ad17e1bddd327b994b4a110d5f3aa89"}, "edcb2275-1e02-440f-a61e-de412a086980": {"doc_hash": "01c02038e51e822280f2cc35b39110135d368eb31aebf44f0ea09ae657426ef4", "ref_doc_id": "edc9cabb3ad17e1bddd327b994b4a110d5f3aa89"}, "0d40ea8f-bf2b-4479-9a1c-86141aec2107": {"doc_hash": "78fe4dc5c5e68df3377c82bb58729590de636e184bd9cbd19f8cf96651b3f5d3", "ref_doc_id": "edc9cabb3ad17e1bddd327b994b4a110d5f3aa89"}, "cd9beebb-d4f1-4497-be86-72200520c3f0": {"doc_hash": "db0e4f0cf53183f12bf7f915a78294df23288c6bdb59a3ef5aa250931a80fa60", "ref_doc_id": "edc9cabb3ad17e1bddd327b994b4a110d5f3aa89"}, "4d7b38e0-1413-4d47-9ad9-4449b5d20fce": {"doc_hash": "a2c1c37ee8c2621f569944b679baae1f67b234e6d6b00ae135742a8a7e752e9a", "ref_doc_id": "48f54c1111b3058ec67086b604e9a49784554e7c"}, "891059cf-1b48-4415-9a47-28004c07ad6f": {"doc_hash": "17182ec9fa240ba83936b40095498bd6cc2f6e3b295ac487f0604cf344661f5b", "ref_doc_id": "4bbc298e3bacc512fa4af18cfcd0c9d8bb81d831"}, "e953f380-88f3-4859-aec9-b282c96b9e71": {"doc_hash": "35f3e423a4b36c0ab871e895d9f878927975646b34b3c5e7c1089807a9c610c8", "ref_doc_id": "4bbc298e3bacc512fa4af18cfcd0c9d8bb81d831"}, "7856cb4c-f2f2-49ec-ab9b-feb997ec2db7": {"doc_hash": "7ffa034d131f2024488346649ebb211ac94d0305a8d6d339123fa4273f50e625", "ref_doc_id": "ff41251c7d67ab93bc7862cdcac037270157e545"}, "d552f1d9-7580-4227-a97b-a27c0f6f9612": {"doc_hash": "12d80b37e88c17645af5ed4a586183434d49a89bf58d24e420a9a9f9c18aadfc", "ref_doc_id": "ff41251c7d67ab93bc7862cdcac037270157e545"}, "fcfc5869-040b-43e7-bd3e-5f9ea39b28c4": {"doc_hash": "a08fd70909fcc40720bbe8b32f4a8036b9e3a1e462ea7bc123f89946bbcbc50d", "ref_doc_id": "ff41251c7d67ab93bc7862cdcac037270157e545"}, "bec0c4a9-3193-4e17-bf96-0c716654f379": {"doc_hash": "04e29e7b560c18c1fedae7826b71cc10a433b2c653ce0d333e3ee01642294565", "ref_doc_id": "ff41251c7d67ab93bc7862cdcac037270157e545"}, "618edb0d-88e7-46ae-8586-5ccf15072040": {"doc_hash": "bf235b114db3a90f7d8b1fee38c3a114079ebdddfd1d596d043ee7b63e0535ac", "ref_doc_id": "ff41251c7d67ab93bc7862cdcac037270157e545"}, "40aace77-1f5e-41da-b405-a1003912c4f2": {"doc_hash": "42030ab52c96a2870a4327bc090bcc0a2e6f543576a3416d000ef46d90163a78", "ref_doc_id": "ff41251c7d67ab93bc7862cdcac037270157e545"}, "579fc2a0-fe5d-4d1e-946e-17d2b73350c0": {"doc_hash": "2de52803a0e097ce547f67eee02d7f4f0c4cbf899e11dfa340eb2930b41d1f5a", "ref_doc_id": "6556be6f2fd8263ac02122f8a4efe7c7fa4ec651"}, "be9ddbaa-954d-4701-8f45-f811ab5edbcc": {"doc_hash": "95e37cead0e653c7dd8cd390c371e58cd70b524fe4a947d2de1b20e519c9d3bd", "ref_doc_id": "6556be6f2fd8263ac02122f8a4efe7c7fa4ec651"}, "4654ee6c-084f-482d-8ed1-6ef84b3a91cb": {"doc_hash": "5c3d867a9b44b7c46398b306a5af5bbf3fb8f1a5f0caa2bdb20bd58021d8b3af", "ref_doc_id": "6556be6f2fd8263ac02122f8a4efe7c7fa4ec651"}, "7bb623cb-9a78-4262-bf07-e93270e3367b": {"doc_hash": "d307add0f7dfe98f74f1afdfded42e48d251d8ac44613aafd5d911eef4d16ac9", "ref_doc_id": "00d90edc65181cee01ed17b88cb7e6ae5ce91bdd"}, "e3a27a1d-d923-45df-8785-059ffa33404e": {"doc_hash": "1579e8f531ab92fd07660e3de7b6701036972f8d7195387a7d221b5d72b12684", "ref_doc_id": "00d90edc65181cee01ed17b88cb7e6ae5ce91bdd"}, "12f31c50-162e-42f2-b03a-eaeadff8f7af": {"doc_hash": "d826d58f7e8efea64f90f9cd873887cfcd1636427a63f66d280445a552335c39", "ref_doc_id": "00d90edc65181cee01ed17b88cb7e6ae5ce91bdd"}, "3bfe1ecb-0e17-46f0-a869-53cc9236dec9": {"doc_hash": "0fc137c1ca954a9eb33809eeea558a437915d97a270b7e454515b03e16d320ba", "ref_doc_id": "00d90edc65181cee01ed17b88cb7e6ae5ce91bdd"}, "5477001f-16d8-41f8-98f7-5e76c8eb98ff": {"doc_hash": "3c5fc0f37990a5d9c228f9369e8a56bc8fc18880a89f5223d2e076fd9521508e", "ref_doc_id": "00d90edc65181cee01ed17b88cb7e6ae5ce91bdd"}, "f9f569db-d51a-46c8-af43-ead72df1165d": {"doc_hash": "a87ca968c970e923f515caec694beff99979ef8388fb60a2a8e467dde33202b2", "ref_doc_id": "492a4e999a1114f68a9abd7be8e4e1d32cae23b5"}, "0610f0fe-d167-43c4-9ed6-28ceb5ac87ce": {"doc_hash": "5bdce84225f1510f172602a1923f3cf03b432268cda16aa316c22872eaef29fa", "ref_doc_id": "492a4e999a1114f68a9abd7be8e4e1d32cae23b5"}, "ddaba8b1-bec8-4fa5-94e1-3df252712c41": {"doc_hash": "faf1b7a0468b6146b8962aa2c35bd2eda12c0c5017ed3f2572d2b29659c2d9ef", "ref_doc_id": "492a4e999a1114f68a9abd7be8e4e1d32cae23b5"}, "8314e5a4-2f5c-4639-a830-de71e3c0e634": {"doc_hash": "56b468a294663a4863a8f045bd2ee0ed1703526f77f1622b6ac5947d4ecfde25", "ref_doc_id": "dc53721b5061bbc02876a388723694163ab4fa80"}, "d0f065df-6a7f-4c7b-b94e-696818475ce4": {"doc_hash": "dd77a34324258bd8b27b079840cd5cb85fa3d3478a7d3342b2d5fd25b8795d70", "ref_doc_id": "dc53721b5061bbc02876a388723694163ab4fa80"}, "52400e5e-ae46-469b-93b7-1dcc6349ea6b": {"doc_hash": "c2ae4d6f5340e66b935d8f75e71d4e5e846a3ef515833fddfe054bcb3f4bce7d", "ref_doc_id": "dc53721b5061bbc02876a388723694163ab4fa80"}, "115052c5-98f0-4822-bbcb-50c6dd1115b7": {"doc_hash": "840200dba46b7287fc260b83c384298b8954d56f2b377c17e060b99f0f84d8d3", "ref_doc_id": "dc53721b5061bbc02876a388723694163ab4fa80"}, "3eb03534-5c17-49c1-b067-1781a4397b0f": {"doc_hash": "275552a04980c2884a90cb26951a1e8d00910c61bd38b9c7100963a76d46c4b9", "ref_doc_id": "dc53721b5061bbc02876a388723694163ab4fa80"}, "50b4bc0a-4332-4dba-8715-34b3a9e56341": {"doc_hash": "13d674283e9a671eb91ac7935c43d95391284f5a5aaf2f71f7855f4696306d90", "ref_doc_id": "dc53721b5061bbc02876a388723694163ab4fa80"}, "ff21ac58-0557-4157-ada7-65009e9ac5c7": {"doc_hash": "ab4426b5615ddbd6bf26ffe3590491f39bfcc430089b695168e9b7f8e4e8f745", "ref_doc_id": "dc53721b5061bbc02876a388723694163ab4fa80"}, "4b537fc2-ba1c-4fd7-a583-4862c5bf84ef": {"doc_hash": "3d2f32e0d4d3f90b98e221bd399766b0ad684af7033349b72ba5a4d6e67e15dc", "ref_doc_id": "371a9324af5fb53afa43db1fb8d2a431ae6f5a31"}, "5ff76236-e60a-4d4f-ad74-3be5cf7bcd52": {"doc_hash": "96e3f9e09b0d17e64144e2c67013468a71fb2e6923d149d2dc4a479b03e6823d", "ref_doc_id": "035b7e9143b00c05382e22591eec57689abe652b"}, "d8636349-b258-4949-bb8e-097951315cef": {"doc_hash": "8a45d72bf26c8510d3fa099a844e31b689b7f5bfb6ed28e77b0160d94adae6e4", "ref_doc_id": "035b7e9143b00c05382e22591eec57689abe652b"}, "9ec85419-ddf7-41c2-9b50-15e4a17e86a6": {"doc_hash": "76c5f49c282a43872b1d14ac36ae4efaa1d1dd4e6f82dd63bf6c22f770774225", "ref_doc_id": "035b7e9143b00c05382e22591eec57689abe652b"}, "cc09cd80-cd20-4a8a-8b82-c333357d8cb5": {"doc_hash": "d52d4b300b2a9e67800bd51d149e495ce769f7a276449c1f10b0b182ea7acba5", "ref_doc_id": "035b7e9143b00c05382e22591eec57689abe652b"}, "3a812dfc-d6fb-4712-9431-3dd8200d3fd2": {"doc_hash": "07c82690a692e15c55dfa47e7f2e92553bd8fb00dff5d00abc38a130340bb4c5", "ref_doc_id": "3cea54a8f500385d0fa1e927ebe9d0d40b49fd4f"}, "66d5d5a8-3051-4731-8643-0ac144a48cc1": {"doc_hash": "b9142893f45b9082ac26064bd428f34c8961880d3080232fb416fa3312e5fea8", "ref_doc_id": "3cea54a8f500385d0fa1e927ebe9d0d40b49fd4f"}, "99022406-85b3-47b5-9272-37eed43c2724": {"doc_hash": "43b0496e3bb9f9cff1f535e7b237177434dc20354db470054e9e8326b05327fa", "ref_doc_id": "3cea54a8f500385d0fa1e927ebe9d0d40b49fd4f"}, "05a0658b-6cb1-4d22-a54b-4559d199f3e4": {"doc_hash": "8b3295861a591fe2b83e863005196b08ac1455694fbd82f051a0c178c385d5e4", "ref_doc_id": "3cea54a8f500385d0fa1e927ebe9d0d40b49fd4f"}, "47eab606-732e-4c73-a5ec-4c9e900397be": {"doc_hash": "7a828c9fa21c9e9f1581a8a4ae5a37e42f352d815d1d50eaa9ddc18bd878f661", "ref_doc_id": "3cea54a8f500385d0fa1e927ebe9d0d40b49fd4f"}, "7c0740f3-b122-4d00-ac90-6bbe4c4fcfcd": {"doc_hash": "8791243047c8ba03e38f452ae5b92459176b7b2eacf4145d936dcb42f58c9e25", "ref_doc_id": "13adf5c8e2b786fbbb46755aa34d17db3c75336a"}, "5206085b-5118-414c-b212-7ecdcb2eceb6": {"doc_hash": "d9942a3721aa0bf38fddbb5b1ce165c5dbb6b63a3fe65ee0997dee3c01276c43", "ref_doc_id": "13adf5c8e2b786fbbb46755aa34d17db3c75336a"}, "77973aca-89a9-45fa-b6af-c56ae534bc36": {"doc_hash": "e275d2ab2630a8dbef3cd3c265b8528eae5a3eb309e12f307258dbf36b0fb3c5", "ref_doc_id": "13adf5c8e2b786fbbb46755aa34d17db3c75336a"}, "3d693d25-7f46-4f61-b81c-9c0c6f752ddf": {"doc_hash": "57c3f4b37e1d3b7c9fedb2495e598726c0e32f736db1ea377123d36563a2bd47", "ref_doc_id": "13adf5c8e2b786fbbb46755aa34d17db3c75336a"}, "a8fab582-dfe8-4cf4-ad1d-f7a6125f9890": {"doc_hash": "cb61bda3cd993da2d1e80eb6a0ec852a147af9cd62f87f77cfa6caf2498f928c", "ref_doc_id": "13adf5c8e2b786fbbb46755aa34d17db3c75336a"}, "cb59b098-cd1f-45b9-993f-b866156a9ac1": {"doc_hash": "2cf3aa12810a4defcd92f97844ecc9523e9f769fe332b36b4a0c4aa9a2ad342c", "ref_doc_id": "8f35585e76a1bc3ffed2cbf731dc1b332f816bbe"}, "c8fd5613-6329-46b3-8e69-a035226343ab": {"doc_hash": "1d6a90fd44edf3bc36817dc72142b532fdbd2dfaab9b11094674732368de4b07", "ref_doc_id": "8f35585e76a1bc3ffed2cbf731dc1b332f816bbe"}, "4e784825-1460-43a4-8e44-e0a7411649cc": {"doc_hash": "61387f6bf2d3004a48dd12da47b0732821d802aa0f4e2cc1ed4d5d5cff1c9c3f", "ref_doc_id": "8f35585e76a1bc3ffed2cbf731dc1b332f816bbe"}, "fb6e7d93-de54-4a7f-98f7-f55b80e0766f": {"doc_hash": "cda6d033a9127ea773d26cd61f2c27bb7ae025758d35f4b40ecb261568ab914d", "ref_doc_id": "8f35585e76a1bc3ffed2cbf731dc1b332f816bbe"}, "c1cf4a62-c848-40e4-914b-7298bc440454": {"doc_hash": "68fdb0d4154e7159591084078785a56bcb74febeb3bed986995bc6b3be015d96", "ref_doc_id": "8f35585e76a1bc3ffed2cbf731dc1b332f816bbe"}, "c3968a55-daad-4c70-b09e-7f4d4b46532c": {"doc_hash": "a74de01524c5e6dbc84db22d72c52d6ecb899e21262f6f08b72cb5277a084012", "ref_doc_id": "8f35585e76a1bc3ffed2cbf731dc1b332f816bbe"}, "8d4b8d6d-8111-4e70-9924-a95141f2bacd": {"doc_hash": "9d2ac0a9aaf922c32074f616267da66b237b67860bf4eaccbe198ba80ca07376", "ref_doc_id": "8f35585e76a1bc3ffed2cbf731dc1b332f816bbe"}, "59bc2e56-4adf-4b71-9e1b-5fd258994d80": {"doc_hash": "8bbbea2bb183bdf2017b96798748266d0f0abd4fbd19534452b25993aa7db269", "ref_doc_id": "8f35585e76a1bc3ffed2cbf731dc1b332f816bbe"}, "56eaaf2e-09b0-4960-9b83-9135f0f754da": {"doc_hash": "e776f8c134f0a4aba3c0d5b7794d471731ed4df6bd3c6999dbc27551ccb4720c", "ref_doc_id": "8f35585e76a1bc3ffed2cbf731dc1b332f816bbe"}, "dd8da4a1-3585-4fdf-bf64-7c309f514adf": {"doc_hash": "10fbfa6315fc61dc7eabc804f910c6baea579b83045021ce6bc50f9ea8541a4d", "ref_doc_id": "b7fc36adc8f2d912a33243922309512877129c27"}, "55043b98-3915-4fec-8177-659e8e97039d": {"doc_hash": "181b5b63b07c18964d1b9c09789b9c27f8e658f4961f9b6cfcf3ef96118f619c", "ref_doc_id": "b7fc36adc8f2d912a33243922309512877129c27"}, "2bf380bb-6fd7-4d56-9db7-8d22e48c2990": {"doc_hash": "d2cde524ea0c088cccc470738e83a796a6f81815c1dd458a7ebb6abfb51b2000", "ref_doc_id": "b7fc36adc8f2d912a33243922309512877129c27"}, "b59bb394-9dc5-4ef0-a3ac-f229fb69d10a": {"doc_hash": "b775f1126a72d247b37bd3558089d4ba970dcfc0ae52185c138e9af2ed4b6412", "ref_doc_id": "b7fc36adc8f2d912a33243922309512877129c27"}, "9d70017f-f314-4b1f-86c2-9483bc1df7a4": {"doc_hash": "f30226969e768cb736aa61aee7f9b9aa3800293e4a7c7c80e1791b9d19fbf0c0", "ref_doc_id": "83f04067b575b5e6b8627e7e55029d4e4508a63c"}, "6473755b-6532-459a-8785-0b4facc6f487": {"doc_hash": "3c5275e9156c39b052d386d4c38b6b91ef901c1fe8a8d7d89c34f48fa420aadb", "ref_doc_id": "83f04067b575b5e6b8627e7e55029d4e4508a63c"}, "ae99e404-a5f7-47bc-b709-3c1a14911534": {"doc_hash": "2ea7ac5782ba1b248a3d8cd019e1622b4adb0b43c8a5ae34c2a91693e4199a74", "ref_doc_id": "83f04067b575b5e6b8627e7e55029d4e4508a63c"}, "f934e589-bf01-4240-94b7-7f20c9eb41ac": {"doc_hash": "c211c4a5360b6260ff8c329020f988e944a6949023f8fef78cc1ce5bf75614f9", "ref_doc_id": "83f04067b575b5e6b8627e7e55029d4e4508a63c"}, "549d76ed-67bf-4ae9-b078-83be4d61a4f7": {"doc_hash": "9f17ac0720a546106f8051833e1a263188210a8471e15ef7bdeeb121f19063e5", "ref_doc_id": "83f04067b575b5e6b8627e7e55029d4e4508a63c"}, "1ac6293a-ba6b-4daf-87bf-e3cf7145f87d": {"doc_hash": "40e08a78de0bada985145e9ecd9670e5a3372fc0f096950b39d5cdbeb59d75ae", "ref_doc_id": "34357061b9d4b5ee5f2bd1ee3627dfe6c1d5d7da"}, "639b3e37-a2f1-4b03-a5f5-48161c18cea4": {"doc_hash": "d25fc91fbea185637dc65857e026f20659778302c4a5b253c3da27247a3a2457", "ref_doc_id": "34357061b9d4b5ee5f2bd1ee3627dfe6c1d5d7da"}, "9e0f872d-1c33-4a14-b31b-e6beb0f544a8": {"doc_hash": "8e7b932635318e4fb06f697307762743b3f1b44068aa2299d0cc94a114bb031c", "ref_doc_id": "4291c1fc4ab9499cf43018e43448307f7b944a48"}, "9f5286d1-2129-4d21-a610-060453e515e1": {"doc_hash": "8277cd4fe56ad5f1355f278df7672ea5d715ca24baba7c7c14cf71ce91ca5b54", "ref_doc_id": "4291c1fc4ab9499cf43018e43448307f7b944a48"}, "cb60f436-d51a-453f-a980-4e0ceae23d3e": {"doc_hash": "4e4eea7c3d7161e959112a95fefb47a7c312f0be71424222c68156ae46a672d4", "ref_doc_id": "4291c1fc4ab9499cf43018e43448307f7b944a48"}, "fa8b4974-baf7-4288-9209-f1c26f548bcc": {"doc_hash": "68b2e8f55a44dced865e4c537f26c84d03e3604a2a1464926cc5854adec94ba0", "ref_doc_id": "86a114353b34fd2817fae8c83cf36934ba7397a0"}, "1cdf4f5f-88db-430d-81b4-bfcffa2a68a1": {"doc_hash": "fc0731097d23e8ea91fb30789a1dd52b3619357f8a90a3e4909dd42dab4f49bb", "ref_doc_id": "86a114353b34fd2817fae8c83cf36934ba7397a0"}, "302115c9-3411-4926-b574-124515fae95e": {"doc_hash": "c741faf142739c9aefcdbecab0bd9815a42764ad3ba225bf27c5783436b49022", "ref_doc_id": "86a114353b34fd2817fae8c83cf36934ba7397a0"}, "d402fc3f-f489-409a-9d07-42d09ff29083": {"doc_hash": "dcb9cfb310839292ff10b4d5b4ffaa46b208b5a197bb6caf9a5bfb56d60b7784", "ref_doc_id": "86a114353b34fd2817fae8c83cf36934ba7397a0"}, "456959e6-6174-48f7-962f-44ecd8a2185a": {"doc_hash": "f6470c1ab401bbff134f52edd52b97b85445cf2b46d1dc627918e784bfc987cb", "ref_doc_id": "86a114353b34fd2817fae8c83cf36934ba7397a0"}, "96cc535f-2a72-4bb5-8ce7-ec2d748ffb3b": {"doc_hash": "1a0d228da9b994833a6e46c547b6014b4046841e921550fc90f9b7c1616eead1", "ref_doc_id": "86a114353b34fd2817fae8c83cf36934ba7397a0"}, "598b2115-2931-4c58-97cd-3cee5a06e2f6": {"doc_hash": "5d142442429412650db9f465199ab0a431d2d4c82ee4d59e08a9693efa365179", "ref_doc_id": "86a114353b34fd2817fae8c83cf36934ba7397a0"}, "7719744b-b314-47a1-9cf3-fadde3a8ce4e": {"doc_hash": "a82ca8f9412140a7069cee9befe98ed1ad5b01e6395b51a0bd3b73c939443337", "ref_doc_id": "86a114353b34fd2817fae8c83cf36934ba7397a0"}, "aa488d7e-a823-4e17-8c42-aecfe530d58c": {"doc_hash": "ed40b821db7acce3bcb363dd45b3bb20be19bce4f167c42340709fc6134dda89", "ref_doc_id": "66aa6f8cc678aadc5a969459f6f9eb7a821c3620"}, "dfb36cc8-30a6-4178-a45b-1070d7d82a4e": {"doc_hash": "6a165a2aefb60efa9116860409db7df9322da26f57aea1081e18c285cfb04d84", "ref_doc_id": "66aa6f8cc678aadc5a969459f6f9eb7a821c3620"}, "87dbb29d-0c4d-44ab-840a-3b64042b01ba": {"doc_hash": "806b2b7b4e98a9be4d32d2151e371f9abcc1df3ec4c17d6e90faa66618558d69", "ref_doc_id": "89ceb70807b763bbcfc5fe74ae2e375f4dc2d782"}, "b769955d-baa0-4fec-b3e5-49eeca7bbf85": {"doc_hash": "74e11070977f538dac64ab8861f5c121c5717727aa9958e3ce36c8ba5953ee30", "ref_doc_id": "1581ee7d39bf9661a367ac9d6b3f81d530b34bee"}, "9354e5ff-e987-479c-88f0-7b599bd17ae2": {"doc_hash": "1c0e6d2a68b93331af9f0c9f0f5e4f0d50a4b8ba27dca08179aceb0604b01e32", "ref_doc_id": "1581ee7d39bf9661a367ac9d6b3f81d530b34bee"}, "86b24062-b744-46e2-96d2-46d9168454db": {"doc_hash": "6cecf321b390b7b78a56b06ac4a26059a7d67266bee87d25793fa94fd2fc7927", "ref_doc_id": "10a75d73e5d8d0e9b104683e6d7bfe09293b5023"}, "a9281b55-cf8f-4b28-ab11-3e323fd16b5a": {"doc_hash": "ffbd1a351098abe3772fac99fcd4fef907dfcc3db4ac808342956145ef88cf83", "ref_doc_id": "10a75d73e5d8d0e9b104683e6d7bfe09293b5023"}, "e2acdc8e-31bc-4315-86b2-f4afae560b13": {"doc_hash": "fe2470169106d24f45b2769b75d7e6a2dacb80f65583bb5d32f1c115ade0667a", "ref_doc_id": "256586df8a1aa3c09acfa2292c63735dccd854f5"}, "1ccb54dc-c127-445d-85c4-5c26372b9516": {"doc_hash": "f7648c5c0073fab2018ee1408051826a3a308dfa609a950f3b0759158425ff47", "ref_doc_id": "256586df8a1aa3c09acfa2292c63735dccd854f5"}, "310b95e5-24d6-4990-a813-f2e1eee3a750": {"doc_hash": "4fc641cf8d65b7d44ee7a2bcce28396c14f3fe3b86b9f8e6480c5928b9fa7350", "ref_doc_id": "256586df8a1aa3c09acfa2292c63735dccd854f5"}, "b4e15559-e1cf-4778-a24b-7c5f3ec0caf8": {"doc_hash": "266fb7ca77ef21fbc114a83165ac9f6dfaf29508d600f627cbe533751a00c32b", "ref_doc_id": "256586df8a1aa3c09acfa2292c63735dccd854f5"}, "0a661824-ee26-43bb-adf7-8452f63ab67e": {"doc_hash": "4008730f9f34639c2850bf092ad5ca0ddb707320b616ea8df3222d4aabb38e1b", "ref_doc_id": "256586df8a1aa3c09acfa2292c63735dccd854f5"}, "b957cb39-065b-42a2-b7cd-815b6abda9a7": {"doc_hash": "4790ef65b33bb6de0d687d531faaf61cf6737acf6faafb72441d1a3afbc1a94b", "ref_doc_id": "256586df8a1aa3c09acfa2292c63735dccd854f5"}, "5950ef8f-f7b9-48fc-ae1e-c71dcc3a9bfb": {"doc_hash": "9196b92e9fa7680ca46f8fc5606185586ea21b6f72142c767d3b5a7b31dc6274", "ref_doc_id": "256586df8a1aa3c09acfa2292c63735dccd854f5"}, "c1d53f88-c90a-45b4-9622-50a914687a47": {"doc_hash": "b8470cce204bdae894240c72d0ae245ee67c9a986f4a796099c56fe9ee82ed0b", "ref_doc_id": "256586df8a1aa3c09acfa2292c63735dccd854f5"}, "df26ab01-fa26-423c-86c3-5249d1249e88": {"doc_hash": "1e0f994e54d6ea6d07746c91f4e7d4fce6915c76f5b3e5eb6e307669e6d683ed", "ref_doc_id": "256586df8a1aa3c09acfa2292c63735dccd854f5"}, "8d6ff66b-dc81-4444-90c4-d5380b061d04": {"doc_hash": "5cd0bbb2c89b1dcfc90e0371f6d6674168cba8070cad9b5d09e98123e41c6d71", "ref_doc_id": "256586df8a1aa3c09acfa2292c63735dccd854f5"}, "f1e811fb-4614-49e1-aed0-868e5c8efc52": {"doc_hash": "5f9a32364ba18166ddd3bf357da2343e7a50ca72e917b7fac278dafc7e774ae5", "ref_doc_id": "256586df8a1aa3c09acfa2292c63735dccd854f5"}, "9e03292a-1c81-43a8-a3a9-66022aba8b89": {"doc_hash": "a55f9b10862875749bb7e33aea9ba0c3cabe12e47cc809c7005179616b1f2c5f", "ref_doc_id": "256586df8a1aa3c09acfa2292c63735dccd854f5"}, "3db97770-b3da-4914-8b60-8f388e1ac8ca": {"doc_hash": "bbe6c0e888e14a1a71124f4807ea274a9d5155ea954a2ef7e4c56647d9f0e596", "ref_doc_id": "256586df8a1aa3c09acfa2292c63735dccd854f5"}, "19af9096-f4bc-4d29-80ea-84e5fff6b530": {"doc_hash": "9b7991a302baf2def4f24ce1878b778f9d299946579706ff536a307d685c180f", "ref_doc_id": "6f3132a6cece86b6e85dd51fe358d6e6a38d7ee7"}, "f331e0af-1164-4e54-a308-69512875a6f0": {"doc_hash": "7c67df95a6e71785d045b4e59000e3814bb6addf4ec8d85eeab68b08a0e09838", "ref_doc_id": "6f3132a6cece86b6e85dd51fe358d6e6a38d7ee7"}, "739d7393-1d00-4cae-9437-a9614910e2a8": {"doc_hash": "3024fc9e2d43591aea02353d62e67ca2ad78075bc2f0dd16c17bdddaa22c7a54", "ref_doc_id": "6f3132a6cece86b6e85dd51fe358d6e6a38d7ee7"}, "219871bf-1cf9-4c54-b9ca-472ec7b0c759": {"doc_hash": "2c91e2158a247d1eac93aaffe5b41ee9c22704082a9a8df13f35ad53e5249491", "ref_doc_id": "6f3132a6cece86b6e85dd51fe358d6e6a38d7ee7"}, "5a22ca8d-07f7-4776-844b-e45fc466c183": {"doc_hash": "fb551cdd27a6e94f9de1e9363babf0173ad22a48267d35e52998f272281453dc", "ref_doc_id": "6f3132a6cece86b6e85dd51fe358d6e6a38d7ee7"}, "3cbf0c56-6dc8-427e-af44-f13729c9e357": {"doc_hash": "a741bc2fe09d09ec839acfd68494c43dcaab57798b57cb1de27e5c75bfa72271", "ref_doc_id": "6f3132a6cece86b6e85dd51fe358d6e6a38d7ee7"}, "d5718c2b-aa57-4bf6-8a44-6620e314b894": {"doc_hash": "7008bcda3da245704c23f18eb522406ac32fd06f8438e3d20f24f538108263fc", "ref_doc_id": "6f3132a6cece86b6e85dd51fe358d6e6a38d7ee7"}, "28515fe3-24fa-48a6-be43-5043a6ff43ba": {"doc_hash": "044fe4c4697d4f869a2da0f05c9f5175eda4deb9cb99eb95cf9f6bc1d0ae175e", "ref_doc_id": "6f3132a6cece86b6e85dd51fe358d6e6a38d7ee7"}, "636f2416-da46-4b92-a0d7-b09aa22afa42": {"doc_hash": "5d5da43e3c8d959c1b8dc96c91a2190aecc270110aed8ea08bfb69e873a5e0db", "ref_doc_id": "7f6e4c88a484a97feba808522fbaf331f642e5ed"}, "1a8c30f8-a42a-4c92-89c1-1ee8f2d84959": {"doc_hash": "74916e1f068094eb0e7ab839dad0f1ccc2e136e6bba026d80bd0277ca6a71ed8", "ref_doc_id": "7f6e4c88a484a97feba808522fbaf331f642e5ed"}, "48d705bd-af37-44e8-a40f-44ae0a7c8e9a": {"doc_hash": "36308a68148cd614f3b9b16b84e78df7a268747e426abe697fa2d0ba8460c101", "ref_doc_id": "7f6e4c88a484a97feba808522fbaf331f642e5ed"}, "1eb0f5ca-9ddd-408a-b620-dfc883ae1fde": {"doc_hash": "421d50d90f81312eb8483793d018beefbf7d04e45a8252cd1512b34de3dfd623", "ref_doc_id": "7f6e4c88a484a97feba808522fbaf331f642e5ed"}, "ac5d6845-c74a-42f1-9601-9930731ddc36": {"doc_hash": "1f3a7f2fa6c7715b667a0b749efe8dfbb3e9861817770c41cf5239f7a312f061", "ref_doc_id": "7fb288dc4f96a65f1f48a2bb1d9fd7803341d8ed"}, "d99346ce-d736-4ad9-8ac2-96caff5a8557": {"doc_hash": "324eeac99aeb1c69909381abf53b47aa0ec33611561d1d92d440b19a466477d2", "ref_doc_id": "7fb288dc4f96a65f1f48a2bb1d9fd7803341d8ed"}, "a7794d1a-ae8f-40d0-a63a-4509d74e68c3": {"doc_hash": "4a88fd43c9ed47e0d059ab88ff712bef18f9663c88b4f0d41c04d30d5569a991", "ref_doc_id": "7fb288dc4f96a65f1f48a2bb1d9fd7803341d8ed"}, "f6878cba-08da-4d59-a014-221cdef85829": {"doc_hash": "6a95beb74218e0a18369ffc71a119ef87437cf963d571f41d8e8e1c168c32465", "ref_doc_id": "7fb288dc4f96a65f1f48a2bb1d9fd7803341d8ed"}, "d1b8c08a-4fbf-4e2d-9f3e-411309f6c83e": {"doc_hash": "d88fa51daece77df85fa1cf7cff697eb63299567ec0e59ab1d474b17a57361b6", "ref_doc_id": "7fb288dc4f96a65f1f48a2bb1d9fd7803341d8ed"}, "8c64c0b2-c9d0-4c2b-9f03-857490f13573": {"doc_hash": "c14d1ef117749826c1cbb1ea36dc6bca8e57f6ec3c782797db864cf665ce1b84", "ref_doc_id": "65198970a9ab108ebd764aff9cb2c57128dbb826"}, "26bdd5b3-9b52-4aed-8563-5b725d92d86e": {"doc_hash": "55857da1bed6ba1b3047cffdc0795a3d1b1a87ee432de7dd5f457195233756e8", "ref_doc_id": "65198970a9ab108ebd764aff9cb2c57128dbb826"}, "7f209dbe-2942-415d-a54f-100d8d397c09": {"doc_hash": "3f0aa5947741f82f5591e2e6d2a2b64e270f70a10cf3443980a29193cfe7753b", "ref_doc_id": "65198970a9ab108ebd764aff9cb2c57128dbb826"}, "a420e654-dac2-486b-83c2-20ad3ef4a351": {"doc_hash": "fc78ecd7ef02072436761c6bd6d7d8f8b40a939156c9ea53ecd49645e9cf53bd", "ref_doc_id": "65198970a9ab108ebd764aff9cb2c57128dbb826"}, "aec15d2c-e0a9-4c8f-bfcf-c0860dccff8d": {"doc_hash": "9897bd48e256f7a3c261e9f91d8a9a6d58839c6c084675dda198b236be533351", "ref_doc_id": "65198970a9ab108ebd764aff9cb2c57128dbb826"}, "6c393daf-e8f9-4630-a65d-42612db449c6": {"doc_hash": "ce0d36b80ad2c78d78324be802541f4ed39e9cb10dbf3ca3e6c7e7b55c821bfd", "ref_doc_id": "65198970a9ab108ebd764aff9cb2c57128dbb826"}, "907cf2c7-9766-4bee-ad25-9c9ac2e490a4": {"doc_hash": "9751f5ee49b3545ce243f0c3a20835f6c431bb9b9b186ee35252358152451fe4", "ref_doc_id": "65198970a9ab108ebd764aff9cb2c57128dbb826"}, "10f6d76f-f546-4d40-9007-9a63bd679499": {"doc_hash": "13257859099fb740f9577da8bf2a2660f628ded7885d2bee4d79b163d745c977", "ref_doc_id": "65198970a9ab108ebd764aff9cb2c57128dbb826"}, "8986a232-8ea8-4a68-bf97-fdf64eecf6e0": {"doc_hash": "2728972014cd3f1987ef0801f9f18997a3e2c2999357ccdc45aa0a49c7a01044", "ref_doc_id": "65198970a9ab108ebd764aff9cb2c57128dbb826"}, "6b7bb132-5d5b-4b03-b618-fafdda3b78e8": {"doc_hash": "c5a115be91746ee36228b62043c7b53470847ee2c8f3d4243d91a012328d70e3", "ref_doc_id": "65198970a9ab108ebd764aff9cb2c57128dbb826"}, "6ea18a6d-4f47-4aed-800d-6da1ce719ee2": {"doc_hash": "bc834c7ea8bf4414493c0f7e3b3a99013d047de2bf9f0e1b42f764310b8f2b94", "ref_doc_id": "65198970a9ab108ebd764aff9cb2c57128dbb826"}, "93538ea9-6016-4f34-a0e9-97f71e7d120f": {"doc_hash": "98992b33a5210ec6fc6f21c1540c55d4b040e9dda6c82177aa2e4aa89caed17c", "ref_doc_id": "65198970a9ab108ebd764aff9cb2c57128dbb826"}, "3adc2230-d0ba-46f9-877d-d4feab39e261": {"doc_hash": "deda04161931ad00be16362d6a80402c73dc451154f808fc7ae950cc9db7b250", "ref_doc_id": "65198970a9ab108ebd764aff9cb2c57128dbb826"}, "541b5ef3-fed9-4fa8-9c00-24badea00ca8": {"doc_hash": "4430294c1a46001428d9795a86db116172adaccf844de14f594f453815232ce2", "ref_doc_id": "fc127981d6650460d981c8b779d20efcb0c8ea02"}, "45d9d141-093f-4c2e-be11-d3bbe57d24cf": {"doc_hash": "a819124822024cbccbda18cd3a2ca4c8b07e15c848c1df0ba82288737dff8ead", "ref_doc_id": "fc127981d6650460d981c8b779d20efcb0c8ea02"}, "d61f1885-e2de-44a9-999e-b91069d8ee09": {"doc_hash": "f55b9cda305bd53622ecd3437500a7e0056d8e105d655fae8898987b6300ec82", "ref_doc_id": "fc127981d6650460d981c8b779d20efcb0c8ea02"}, "3dbb9ec6-e3fd-4c2a-96e5-7d5f2b7d1a1e": {"doc_hash": "dc9e5c329792246f50340d400ab835ff12ea2eda1a0210949183573ff80e6dc1", "ref_doc_id": "fc127981d6650460d981c8b779d20efcb0c8ea02"}, "02c074ab-373d-4dcd-9f33-34b08a6732c8": {"doc_hash": "0f552c8db8b47eaa513122044ecad67e9a08335bcf5811b87d5ce8842523e17c", "ref_doc_id": "fc127981d6650460d981c8b779d20efcb0c8ea02"}, "fc521f2f-4b9f-4934-9414-8c63d98e8d16": {"doc_hash": "cf658705e8cfd6bf5b2887f2d77c6c79b445eb3e39a71ca6ae98f974cc21a635", "ref_doc_id": "e4e517529d67eefc9e4cd7181dcbed90c43d4cd7"}, "ce3e5ad8-6134-49d3-a259-c3bfd2c64b7c": {"doc_hash": "217277a94202dd7a0eacd06a98deff06230da04e2315321c1dfa9202fbb696b4", "ref_doc_id": "e4e517529d67eefc9e4cd7181dcbed90c43d4cd7"}, "37a64b8b-4e44-46ae-899b-612137268ddd": {"doc_hash": "2b608d7b078920171cfe3cf3f325d3beace71257a63ca590fd05170b64c0d09d", "ref_doc_id": "e4e517529d67eefc9e4cd7181dcbed90c43d4cd7"}, "3d9c0da5-cbce-4726-a61e-147e01da4a44": {"doc_hash": "ed53e26259f53a49f6bb6dca62775eff9f1a67740367184f7f78488069d80ca0", "ref_doc_id": "e4e517529d67eefc9e4cd7181dcbed90c43d4cd7"}, "a3cfe595-bdfb-4819-94ec-f55f25a16f12": {"doc_hash": "0fce6fc99ad9ea3412c5165d54a98497844cf72d1848f3b40889c198d41c97fc", "ref_doc_id": "e4e517529d67eefc9e4cd7181dcbed90c43d4cd7"}, "c4c1776c-cfe9-41a7-942d-4e2318ca6af5": {"doc_hash": "31b6e8e7bbe4bb46f82a5f120ec6e06765520577735e0ba22d578ac2eacf04db", "ref_doc_id": "e4e517529d67eefc9e4cd7181dcbed90c43d4cd7"}, "36685bb9-75aa-4d89-b540-eed18a172990": {"doc_hash": "1120cceda1c05e88fbf8287a15616fb3a29bd017227f50a67a81753ea359d3c8", "ref_doc_id": "e4e517529d67eefc9e4cd7181dcbed90c43d4cd7"}, "69d132f8-e263-4232-8b75-aac9085676c0": {"doc_hash": "25fdb5f60a3f169b31e01e78f7c26f32efc800d7d5fdbead2ab24eb255b3437b", "ref_doc_id": "e4e517529d67eefc9e4cd7181dcbed90c43d4cd7"}, "9dd1b536-345b-4de3-a75d-8e269975beb0": {"doc_hash": "3d1d76d028e4ccca46022e2b333597602a452e015feb40ef2426f48d4bf7be13", "ref_doc_id": "e4e517529d67eefc9e4cd7181dcbed90c43d4cd7"}, "0fba014f-7a15-4dde-8330-57453fc070c7": {"doc_hash": "64ddcb48ae0edd41314c4b0cabff886732126ea47321141c77ebb94c2410c9b1", "ref_doc_id": "e4e517529d67eefc9e4cd7181dcbed90c43d4cd7"}, "fcecf74e-ea20-46c2-8a99-0cebc05436c9": {"doc_hash": "2b7e632cb615efa5a2e86c695af3c2da70af6375cb264e1f49d13e0ff69352a9", "ref_doc_id": "e4e517529d67eefc9e4cd7181dcbed90c43d4cd7"}, "c106f80d-1b73-4789-aa10-d08cee4fb664": {"doc_hash": "1bac79ecf0e824aeeef476fbae8ca34cde0b69b6f1dc44c9ef7ab667fe7bd3ee", "ref_doc_id": "e4e517529d67eefc9e4cd7181dcbed90c43d4cd7"}, "8aa39170-c67c-4827-8320-24a4fd4e3da3": {"doc_hash": "724fb6e402e115079d6d1c3bdc4dba78742736650dece7b76ccf5c818269016b", "ref_doc_id": "e4e517529d67eefc9e4cd7181dcbed90c43d4cd7"}, "a0a9b1ea-9d22-48e1-839c-160c5a00659d": {"doc_hash": "617bf592f2719a90e1c06eaeb65f8c853802178bb4416242d6653dfe5e165c28", "ref_doc_id": "e4e517529d67eefc9e4cd7181dcbed90c43d4cd7"}, "34e1994e-9e58-429d-b0e4-db103caccc40": {"doc_hash": "676597d7b8f8d4b127f9368b0b427c78b2e8c4b9d933a1afad8c4a2c7c7309b7", "ref_doc_id": "e4e517529d67eefc9e4cd7181dcbed90c43d4cd7"}, "5039b8f5-fdef-4de8-9e60-bdebd9dd43ea": {"doc_hash": "00fd9e05bc40b3df947b3cb3a2114ab6fc9d7c50c826094ff40eef3320fbd390", "ref_doc_id": "e4e517529d67eefc9e4cd7181dcbed90c43d4cd7"}, "dea03a73-2622-466f-8208-79524be2dc20": {"doc_hash": "7744b60d6d4e03b1b97674869cd2f53d671d05080670792e782ba145de629743", "ref_doc_id": "1f87f18b953f1321696550473dc9105cb8c5343a"}, "4e95000a-aa88-4121-a400-44af17cb6a1a": {"doc_hash": "da53e1b21602210cce9fe9063d00e7eb66dd36441a754aa38b4714539b28d168", "ref_doc_id": "1f87f18b953f1321696550473dc9105cb8c5343a"}, "25f40eff-310e-4326-8a10-4cdcf7c2d397": {"doc_hash": "397234a79b2c06ead27ef076dc13965e2a6467bfa5dee1fbcfa8831f9f5b5d3d", "ref_doc_id": "1f87f18b953f1321696550473dc9105cb8c5343a"}, "8642aa8e-ec01-4de1-841e-5994386f0962": {"doc_hash": "2366d6c8dba64bb1ea767bb5eae07e2c209ae065667dfb3352c0b46523c1e281", "ref_doc_id": "1f87f18b953f1321696550473dc9105cb8c5343a"}, "b5206bc0-fbbb-498b-b14f-20a4021dead1": {"doc_hash": "70a89c0120fa93a3f20339ca64e91396853d5d581cb2cf981df2f6213092835c", "ref_doc_id": "1f87f18b953f1321696550473dc9105cb8c5343a"}, "b9ff43aa-5678-462d-b9c0-c6bc98c1e836": {"doc_hash": "d922f51c67c26cb592a8aafdc1b6620bd719fdd1efbcb91a96e894bee39a28b2", "ref_doc_id": "1f87f18b953f1321696550473dc9105cb8c5343a"}, "db87102d-a143-40a3-81da-6923ec440402": {"doc_hash": "10c0502dd5d0b7a8781685386addc9b0db37a53cd98a0f7cbc8f91e6e36c65f0", "ref_doc_id": "1f87f18b953f1321696550473dc9105cb8c5343a"}, "3f18374c-682c-4a30-87fa-f31117fb671f": {"doc_hash": "3fdeee9b7f819094585ffbb8f2039efc1ef010e75faacaaf71edd41195703c1d", "ref_doc_id": "1f87f18b953f1321696550473dc9105cb8c5343a"}, "a91550df-a634-46f7-a589-3c7df98b9d4b": {"doc_hash": "fcde65132b9f15e3f41c6f07b395c273248e39ad5122ab33c2c1db238caec66b", "ref_doc_id": "1f87f18b953f1321696550473dc9105cb8c5343a"}, "619eaea8-b2d6-470b-9239-679fff6229f2": {"doc_hash": "1c3591414b1b5af7dc88a041bdcd39a0d9642fdee5e12c3f2adcdce97d8f6c8a", "ref_doc_id": "eaa105e297475f3803a685f817f8c0e24131024a"}, "9ed8e1dd-8521-4826-bd10-1f1fbacdf0e9": {"doc_hash": "708e6ed5cd322753a8d2f73bee764a81d05ced2f1b1e66cf3858ab8b82acdae7", "ref_doc_id": "eaa105e297475f3803a685f817f8c0e24131024a"}, "f3b9ec0f-537d-4cb0-a7ad-9acbe09e810f": {"doc_hash": "54ae45327ca510138a99e1570fa64bb6f6568e913d88bf75d9d9dff2eb86f91f", "ref_doc_id": "eaa105e297475f3803a685f817f8c0e24131024a"}, "9ef1896d-ac99-4913-83f2-872b4e304549": {"doc_hash": "98417d4f818ede4c4458c4d985cf70c5a287506c74462b115e2ca7c64629c801", "ref_doc_id": "eaa105e297475f3803a685f817f8c0e24131024a"}, "5db774ac-f6b8-4ab7-9532-1f95a9058c1b": {"doc_hash": "a19571830f540222b869fb7b6a256be44911f932b748b6b7ece1b5a5d970d15f", "ref_doc_id": "eaa105e297475f3803a685f817f8c0e24131024a"}, "b7b43f5a-c95d-46b6-899c-b745cf29fb41": {"doc_hash": "9ea7a3b957052191e7166fa1f07c08c187c2e793caad7e62aaf736f6bec4815b", "ref_doc_id": "eaa105e297475f3803a685f817f8c0e24131024a"}, "107d3f9f-091c-4d07-86f2-e00c4a039ba8": {"doc_hash": "f9e2278ec72140dd0782819f2443a3a7e800c6b8bed940d0ee565a7aaceb1eeb", "ref_doc_id": "eaa105e297475f3803a685f817f8c0e24131024a"}, "af3fd3ca-cf09-4a15-b63b-87b5dff1008c": {"doc_hash": "56efa1a2dfc288f7c12b67525affae6fe9f382aaf1e316dfc5ee03730454ea09", "ref_doc_id": "989f0088e5fcc9ce25d95b2332c00d2f9c649f02"}, "588642b5-6ade-4210-8eb4-caeb1dd0a27a": {"doc_hash": "1fc385db0aa812580011cf15dba02f1b5d0f780127c16c02199cb13e4819ac13", "ref_doc_id": "989f0088e5fcc9ce25d95b2332c00d2f9c649f02"}, "55e8cd01-4487-48b9-b05d-26db3d5d7f48": {"doc_hash": "35cc31b179aa81339108d6e96fad99fe1e4bfe11944b9ea3f49bd09b3d3de2c6", "ref_doc_id": "989f0088e5fcc9ce25d95b2332c00d2f9c649f02"}, "f6cb0853-50fe-4123-8322-7f70fa9067b4": {"doc_hash": "50fb36db231d3ddc73ec3473db599cc4fe85eba8e32a87abb2447adbc17d271e", "ref_doc_id": "989f0088e5fcc9ce25d95b2332c00d2f9c649f02"}, "438b3f56-c110-4d65-8118-94f091c71755": {"doc_hash": "c1c16da14d2497eb2d1ca3fb03c52a30cbea783c567bf0a645c660599378571c", "ref_doc_id": "989f0088e5fcc9ce25d95b2332c00d2f9c649f02"}, "a2cfa7f1-35d0-4c24-b431-81afa8e3655c": {"doc_hash": "b5c4364492e764a9b9f52f9a227f673d8699e45e242022fd765a2ce76ec63199", "ref_doc_id": "989f0088e5fcc9ce25d95b2332c00d2f9c649f02"}, "281c9da6-1ba7-4d7b-a76b-ac7e3d348515": {"doc_hash": "64043b7f65c9336a5cd08aa04610b8bd970ce1ee463c0dc27b7343b65a5da6a5", "ref_doc_id": "989f0088e5fcc9ce25d95b2332c00d2f9c649f02"}, "b7dd00c2-0372-45e5-ba66-768c16f4b704": {"doc_hash": "0f1437f92586f066caaba6e59d8a6b4887c0f1a956db1dda966673f5baf013f4", "ref_doc_id": "989f0088e5fcc9ce25d95b2332c00d2f9c649f02"}, "02fa54ff-e38f-4cda-b8b7-19324a1d81ee": {"doc_hash": "8f4395f4f450e322ea2443c2257f89fa1cd5fdd7f99a7559d5a8d58ecb6f714a", "ref_doc_id": "989f0088e5fcc9ce25d95b2332c00d2f9c649f02"}, "c38d59bc-e64d-434d-b56b-6d09bc59efbf": {"doc_hash": "ed8ed6d5a925c4baab17e814bf59ad6c55eaaa17c44edb21f3a622a53a8e3819", "ref_doc_id": "989f0088e5fcc9ce25d95b2332c00d2f9c649f02"}, "19498f37-7df9-4718-8e4d-9916cd9c5435": {"doc_hash": "dfafb2dc8ed65dc721cf5aae5358e8be56378bbc763cd43b9cd3a49d85d223c6", "ref_doc_id": "cce0e42feff5749d2720b802910ae0346a10701f"}, "16074cfa-e434-40e0-8b29-a018297d9395": {"doc_hash": "87f533a0b80b668d2f3e90e5698d6b98cfafd2e865319198cb3abf9bb6fb21a1", "ref_doc_id": "cce0e42feff5749d2720b802910ae0346a10701f"}, "454136f5-6d92-4423-9e1f-217f68899dff": {"doc_hash": "9e9ecb6736b3063538ebc81de21c2a108e95332c7b3c57064b62784b64d99300", "ref_doc_id": "cce0e42feff5749d2720b802910ae0346a10701f"}, "64b19fdc-0a95-4391-8891-a2aece609b0f": {"doc_hash": "09e2e9a2b19a9775c1a4b02becf75929caa94fb52777fe2f610e813da0c03e28", "ref_doc_id": "cce0e42feff5749d2720b802910ae0346a10701f"}, "a9fef430-1e26-48af-ba7b-5bbed3818521": {"doc_hash": "5da4b8722ec5d5306ec61e929707ccb493d42c4b6af054110dd8e5c5e6065dfd", "ref_doc_id": "cce0e42feff5749d2720b802910ae0346a10701f"}, "834e2f53-8e93-427e-8012-9105619dd603": {"doc_hash": "55e70ee16376af8e1c97376dfc775b3d4e143a71575d9720dd0aac470b697f99", "ref_doc_id": "cce0e42feff5749d2720b802910ae0346a10701f"}, "834edb49-7119-48e6-bb9e-22fbd4a18b6d": {"doc_hash": "443856b50bb6b3c9ed4c348123352284a5c1d3f8f4dee7af64ace91f0c088819", "ref_doc_id": "cce0e42feff5749d2720b802910ae0346a10701f"}, "5818986d-269b-4807-9a00-105d9612ad8d": {"doc_hash": "29d067fa045be2e9b741c631a836f7b6053de47ba606f88e77ee3fce15cd79c0", "ref_doc_id": "cce0e42feff5749d2720b802910ae0346a10701f"}, "492401d9-48ba-4743-a339-55ed16ef2f97": {"doc_hash": "61ab7c88272d5e9e2c22b357a1472de693e540b7436ab844cab6c8e824d9b33b", "ref_doc_id": "014f22fde517f68ec763a546547581c2a18ef0ae"}, "a7cd6097-4784-47bc-a17b-15d135471541": {"doc_hash": "4c93109049125ad0169f39f34e4e29fb88235d4e519ede315616dcec3d8c2de8", "ref_doc_id": "014f22fde517f68ec763a546547581c2a18ef0ae"}, "cee353c2-bc3b-4b4e-abd5-eb8655e5411a": {"doc_hash": "9ace958b7fd4b79a0280d5ff3797ca2225fbbe495369c2f55c00968c2a90cf5f", "ref_doc_id": "014f22fde517f68ec763a546547581c2a18ef0ae"}, "e5dc4910-4fbf-4f85-b519-ecf4c2a01eb7": {"doc_hash": "bf9ce27555f32957c9db9845e31342615cb4a98e35bbc3b25cf772e4596cfb91", "ref_doc_id": "014f22fde517f68ec763a546547581c2a18ef0ae"}, "a7cf1caa-1cad-46d7-b455-2acdef19ff05": {"doc_hash": "f062f51f46a652ee196384ddff9d52816c3cf0ebd3c480e6da21a89483bd2856", "ref_doc_id": "014f22fde517f68ec763a546547581c2a18ef0ae"}, "b3acddad-1db6-47d6-9d61-fd710c680352": {"doc_hash": "76c0ad1a039e4ebf6f172f5f32416b5a05a51802edea67f9ea48e4b01c6a2f16", "ref_doc_id": "014f22fde517f68ec763a546547581c2a18ef0ae"}, "43c6150a-6b00-4e4d-8a01-2a3585906bef": {"doc_hash": "6fadcc288391bc83328bbc1db6f728408629ba67892caa12beeb0e97740a0328", "ref_doc_id": "014f22fde517f68ec763a546547581c2a18ef0ae"}, "3ebbd8c1-331f-4f5e-893f-2d96bbcfdedb": {"doc_hash": "d4045ffc10d76d962ff5519ea64a5b60f6904699d1466be7f5aa22ed7d6b352a", "ref_doc_id": "014f22fde517f68ec763a546547581c2a18ef0ae"}, "3b8de6b7-e4a0-44b7-a956-b46ca62d8410": {"doc_hash": "c9e773aa8544e289d373b99ecfe72ca65a0bb09b2904b4500260bbc4fbecf6a6", "ref_doc_id": "014f22fde517f68ec763a546547581c2a18ef0ae"}, "d9e10699-7082-468a-b0f5-528fad959a78": {"doc_hash": "c154e3e54c97222618f59108b17dc88d39bd5a62dc6e502bebced7c51b807667", "ref_doc_id": "014f22fde517f68ec763a546547581c2a18ef0ae"}, "49864ab2-21b8-4a55-af95-723c06234a7c": {"doc_hash": "83b155135efccad37c393c3678c69ad35537ad62a50354c9db2abce0b0ee41d7", "ref_doc_id": "69a5301e1b40c30face1b93dd813547f360786c9"}, "7c26d503-6972-4df3-8628-453f2679ba14": {"doc_hash": "e2e7e69ff8004a23810105946c9632fbc6a7a99ec72e090e0237496ca312abed", "ref_doc_id": "69a5301e1b40c30face1b93dd813547f360786c9"}, "9a943161-ac4a-4d0d-9169-76ebcb5617a3": {"doc_hash": "f4986004f58578a3d71622c36badea0c8f714637b1d46ba90f385f3878dd1c9a", "ref_doc_id": "69a5301e1b40c30face1b93dd813547f360786c9"}, "8bb77451-4e1b-4f6b-804e-1a7fcf8aeb22": {"doc_hash": "5eea6ed5863145bb97a66dd01a3b788d7c7e706c40397f62cc09530bf13c246f", "ref_doc_id": "69a5301e1b40c30face1b93dd813547f360786c9"}, "34e1b707-b7a5-4930-a74f-28d44c805f89": {"doc_hash": "e2eed2114a16f31ddd1e27efb1d21653d745df52863fc21ccd9c718edf6f74fc", "ref_doc_id": "69a5301e1b40c30face1b93dd813547f360786c9"}, "d70c1ce8-fbbd-4c16-8c8a-a05e4f863eb7": {"doc_hash": "6c6b3fed83c9af240ae29a7eb60ffb0da03650c14da3e30ba01d5467012d5c2f", "ref_doc_id": "69a5301e1b40c30face1b93dd813547f360786c9"}, "7c01448a-1afb-4841-b845-1142cc2dca33": {"doc_hash": "4ccdf4f269bc504959e5791b36c0e319f3b1a1fb71319b9ef469c829f9184288", "ref_doc_id": "69a5301e1b40c30face1b93dd813547f360786c9"}, "b33e2937-e0da-4049-9924-da49ea4e7a70": {"doc_hash": "b8359f017cf71c20d8604fdf2458faec9a8a89185994642dda710009efdd6245", "ref_doc_id": "69a5301e1b40c30face1b93dd813547f360786c9"}, "be5e8158-dc05-4b57-a6c1-8053a706d906": {"doc_hash": "1369f5c652ebf0543ef8652de293c3a52a7d362c0b6c30d8ba6eb03bf91e8c20", "ref_doc_id": "69a5301e1b40c30face1b93dd813547f360786c9"}, "a9d138d4-878b-4635-a95a-57688b3096d5": {"doc_hash": "cedd6e45127a014c18ec297c00eec32222a56bacfe14aff95aa874a159b1ea26", "ref_doc_id": "69a5301e1b40c30face1b93dd813547f360786c9"}, "15e8ac6b-e0ea-4612-ac54-aaa526549c63": {"doc_hash": "2009d38bf581560cc2423594741ab47c00e7f8bed3c81fe70296d47ef8f08148", "ref_doc_id": "69a5301e1b40c30face1b93dd813547f360786c9"}, "e0c21ce4-3677-472e-adc9-dc788d2b1a3f": {"doc_hash": "b43029c736098c6db4eb2bd0593248f79ead3514f6909f2b06fe5ac113825bb0", "ref_doc_id": "69a5301e1b40c30face1b93dd813547f360786c9"}, "0c55c9ae-a64a-440b-8b3e-ba90b7e96c73": {"doc_hash": "b100564da6dbaf3202346331bbf4198dd521a816b806d7eef308238453a23557", "ref_doc_id": "69a5301e1b40c30face1b93dd813547f360786c9"}, "07d1ed14-cdcf-4f64-9f88-ff9ac2399f42": {"doc_hash": "b07d92b81dc153947fd19efff8353213b49d5a5d86678f87578557938ab1b130", "ref_doc_id": "a22de11d3b13a577bc7b1ecad7d7b88fe4a20f79"}, "8f2a0c91-f4db-4cf5-a81c-c4c1c172f23d": {"doc_hash": "5fab5207ed8a1907b57d27afc98c1907a720e8a8b1900865c77276ba81156abd", "ref_doc_id": "a22de11d3b13a577bc7b1ecad7d7b88fe4a20f79"}, "0aa6559f-9909-44d3-8ceb-fb0c3f78d1f6": {"doc_hash": "a8127b9fd6e1151d3dbb1fbca75405ab5240e9f148098e6614d7de251ca34432", "ref_doc_id": "a22de11d3b13a577bc7b1ecad7d7b88fe4a20f79"}, "a81d1d42-c424-4090-903e-19ebfdeddbf4": {"doc_hash": "b529b12eeb75e06678bf550279d427eac04d53c627c01f069675aed64f7fcbc6", "ref_doc_id": "a22de11d3b13a577bc7b1ecad7d7b88fe4a20f79"}, "a10498ad-35bc-403f-8aa6-2d5734d43cb3": {"doc_hash": "8aa7b153f977d8f63579ad5c372b9b6c6d840c3c562aa89ed9f55a1056178c33", "ref_doc_id": "e2591cd379a655b639df11e1714eace4b9151c03"}, "e39d4c6f-5d16-487c-8659-ebd044935024": {"doc_hash": "f6ede37f2cfdded8b0e62a0e166ffda883b3704e3cd61fbf1cade9055ec6cad3", "ref_doc_id": "e2591cd379a655b639df11e1714eace4b9151c03"}, "a9b1c354-4dad-402c-a09d-1dd7a3075cca": {"doc_hash": "e28e7a65d46f721986c7d9d9746afe51fb551247fbf13ac5fa00104b5a39992e", "ref_doc_id": "e2591cd379a655b639df11e1714eace4b9151c03"}, "f3d91f5f-08d1-4607-9eae-880e482dd88f": {"doc_hash": "9899312f622ae00a2f7161e419c8c4afecdff44dc14bb25f616b32c28495a131", "ref_doc_id": "e2591cd379a655b639df11e1714eace4b9151c03"}, "2a267dff-c546-48aa-b403-78a1581794ba": {"doc_hash": "719cd523a970de41e0c11b2f29f244e4b162bfe33d04c3772bcc7fe7b081bc27", "ref_doc_id": "e2591cd379a655b639df11e1714eace4b9151c03"}, "b8e1ee20-791f-4718-9efa-6c88cc496562": {"doc_hash": "9abc1eca43333da2e71469f79e781c673b3c23e3fb22e63b7c5783e423873e48", "ref_doc_id": "e2591cd379a655b639df11e1714eace4b9151c03"}, "b0727fea-925c-4729-ad88-85556660c83c": {"doc_hash": "ff70118b4a5f0fab2d8e98bcf61c5e9431fca1a1c5d5fa48b593a61fcd231629", "ref_doc_id": "e2591cd379a655b639df11e1714eace4b9151c03"}, "38476f23-98a0-4c24-a2aa-55913c3496c3": {"doc_hash": "7740337caf3fe5ea0ad69e800380e8dfab0581cd9bf81d69405d3975c13a8c62", "ref_doc_id": "149becad4a5a8b66533fa5e62a4c0b8fa3e00613"}, "fd153871-ac2e-41c6-99f3-4eec21071068": {"doc_hash": "b21601eec741c410d429102f6af92696a029ab4f92c49baa2ebe279c296a5b79", "ref_doc_id": "149becad4a5a8b66533fa5e62a4c0b8fa3e00613"}, "f25cfbf5-220f-4ff9-bfd9-04f080023a68": {"doc_hash": "5c2f5b51accc825a5e10be9b9ce78d76eb7c3f3e5f4489dbee27f78f24ab4fa0", "ref_doc_id": "149becad4a5a8b66533fa5e62a4c0b8fa3e00613"}, "70dce5fd-bd16-49b5-89fe-f7bf1fc72471": {"doc_hash": "0886b460fb64e26c8add352ec7d431f70b557c51a38ed8fda936a72896695067", "ref_doc_id": "149becad4a5a8b66533fa5e62a4c0b8fa3e00613"}, "517dad91-7162-4449-bc32-d19c5fbdbdfc": {"doc_hash": "de0979e7b72f47ab76f531c8637db9afa82b362d5cd2adea38e630c93b0b4952", "ref_doc_id": "149becad4a5a8b66533fa5e62a4c0b8fa3e00613"}, "9a3e3df2-d615-45cd-b2a3-006d09afed05": {"doc_hash": "b6b9867110be956a97925330e40ef17fe0fcd69f1de82d1132a48c0008718a43", "ref_doc_id": "fd9eafadb2674c69661090ce2357d1f0ebc701af"}, "11af686c-8c2d-4e81-9aae-d5a2265cf8d9": {"doc_hash": "d7adc46375cb970b85b16007b4b373c3348d1c286c99c75812e69a783f0f0c4b", "ref_doc_id": "fd9eafadb2674c69661090ce2357d1f0ebc701af"}, "9416a4b8-bc96-4c68-a794-d4b1e8967149": {"doc_hash": "a7bf9e78cd52f5d1e247d50ee5cd690e3ca2aa0b0c05f912d345ceff6c0e0804", "ref_doc_id": "fd9eafadb2674c69661090ce2357d1f0ebc701af"}, "846d46a3-3076-4489-ad84-eff7eabbff53": {"doc_hash": "c5d46201011ed2750f80d67b47e7439aa39100a21a6cfa2c0a220a027521b129", "ref_doc_id": "fd9eafadb2674c69661090ce2357d1f0ebc701af"}, "e54e6eba-8813-4986-bddd-2c8698a74fd8": {"doc_hash": "3480be6c73b8b618e4e637e63219dbe0886ad74a2ad9d4b7628157795c6ab935", "ref_doc_id": "fd9eafadb2674c69661090ce2357d1f0ebc701af"}, "48d56e49-87f3-4015-a9c4-8cfeae7fb9f7": {"doc_hash": "38a247a290a478cbef834d909bb15eca2a96b8830797398b974e89e90381a8d8", "ref_doc_id": "2ebbd239bb3e826723ce367562f033a702e1d27b"}, "b856e896-b66c-4d27-8560-a628a397d44f": {"doc_hash": "b6de0d25fab24b4b97da666c8bc15471fceb258bddcd53505ba17e0bfb794f48", "ref_doc_id": "2ebbd239bb3e826723ce367562f033a702e1d27b"}, "ebf42227-1075-4948-bb4e-e4530d5b7f37": {"doc_hash": "0d1b98dcb2903199d46505d111a3b72a94355fceea4eb975469cbbd5e9f8addf", "ref_doc_id": "2ebbd239bb3e826723ce367562f033a702e1d27b"}, "2cac4e1e-8b54-4b31-ad7e-5a87db371d18": {"doc_hash": "d48118ff65892269117fb3e5516f7b71a4e7ca75118bf5b4aa12a6ad583146ee", "ref_doc_id": "2ebbd239bb3e826723ce367562f033a702e1d27b"}, "da3f695c-212e-43c8-99fd-a928ae03b562": {"doc_hash": "e32ec8d3dec250468433f173a8eaae211a91bb1ed88724a0cdb6cd5870efcb71", "ref_doc_id": "2ebbd239bb3e826723ce367562f033a702e1d27b"}, "a64062b0-4265-46de-a76f-d81f92cb235a": {"doc_hash": "595c2a49d8f0eed4ec2e435e8397991ca442018beb49b5d7e2a6e8dfbdb5d527", "ref_doc_id": "2ebbd239bb3e826723ce367562f033a702e1d27b"}, "d9c71133-9890-4fee-b120-0bc1b02d53b7": {"doc_hash": "1aa4d3e51d49cc42ed8662cbade990c21930b1931db7471347779374276537dc", "ref_doc_id": "2ebbd239bb3e826723ce367562f033a702e1d27b"}, "cda7e477-857f-488f-a971-53a75103a33b": {"doc_hash": "240c41f3b7e3447f7224af29a352d8ba2a5e2652cb685b1e3beae22ac7783ca5", "ref_doc_id": "40b3a564f767884fbd05bb17f4dca3224b438fe9"}, "c7702d9c-c932-4a00-be0b-712bc568996a": {"doc_hash": "318085e57a1d22b95931ab39001bd7cb8fa20ca67f1e9b61594989314a34fcec", "ref_doc_id": "40b3a564f767884fbd05bb17f4dca3224b438fe9"}, "eb233699-d1d3-456d-bc8b-3904fab1bef6": {"doc_hash": "8aea639a6fb64b5a6ee5ac8eb1ac78ef65702683bb3eaa83faad15c245aeb40a", "ref_doc_id": "40b3a564f767884fbd05bb17f4dca3224b438fe9"}, "6065525d-67a3-4be9-bb56-16df5b26e239": {"doc_hash": "620f738fb06cb61666a62060358dfa29083041974ebd707e38ef9858232dfbdd", "ref_doc_id": "40b3a564f767884fbd05bb17f4dca3224b438fe9"}, "6af50d14-1367-47de-b490-8b12c0f345bb": {"doc_hash": "b9b9d8470e88362c03de408afe85123656b4a35b41f8ca93cff47e25a7678f7b", "ref_doc_id": "40b3a564f767884fbd05bb17f4dca3224b438fe9"}, "9d286f1a-8029-4e6e-9b90-fee29a35ba79": {"doc_hash": "7e099c46086d93f078179676aad4737d28689eb3a658436b9929226f67ecfa3f", "ref_doc_id": "40b3a564f767884fbd05bb17f4dca3224b438fe9"}, "1f30924f-293f-41b5-bb3a-50654ebf7539": {"doc_hash": "1b4d7a53641e87bd6d9223310f4da90232789a5a26ab0808ed678c9c68bb7f2c", "ref_doc_id": "f082fb711c93851bc355d199330461957d63441d"}, "76c07528-fdc2-4545-9da9-be22c68d6d4e": {"doc_hash": "30029d31328c005bf88296c36bb04ebca594edcc7dfb32f72ddbbdab04be079b", "ref_doc_id": "f082fb711c93851bc355d199330461957d63441d"}, "07cdc0e8-3cd8-4fd2-be72-bfb67a0eecbf": {"doc_hash": "1c13bf5085b17f7f7c06bd582dc6282db5417f5e4a51cf42069f6b7d2379620d", "ref_doc_id": "f082fb711c93851bc355d199330461957d63441d"}, "51aa30f1-98c7-434c-ac8e-6fe0827a9982": {"doc_hash": "8cb53ea8f5cb0ccf9b568a9781dc281a8c8ce5a53232b9ea077a9e17001da5f2", "ref_doc_id": "f082fb711c93851bc355d199330461957d63441d"}, "8016ae4c-25dc-420e-888f-0ade9c221184": {"doc_hash": "1a500bf105875dd9b1ebcbea32f57013dc0a7b9d5bdf212e2d31224a56f497eb", "ref_doc_id": "25a20d5437e310362add9f625f65c5d689a8a191"}, "73e78321-82bb-426b-9118-29a95ab8d78c": {"doc_hash": "738a858e83d4d78a4b15b926878ecc1cfb4bcc2ead2254fdff84da4ab06b7cc6", "ref_doc_id": "25a20d5437e310362add9f625f65c5d689a8a191"}, "84e5ec93-fdc6-4d2e-9bef-1b2a03212954": {"doc_hash": "d1b02345347995a92738ebed0fff734ba94741a413b761811d0e18e16b2c75bd", "ref_doc_id": "25a20d5437e310362add9f625f65c5d689a8a191"}, "39afa38e-4f04-4fd0-bd2a-6490343ac3e5": {"doc_hash": "6a492214c39c4d7c88b3dbdca987275f03557f13f0a7fb062a1b14ce81b2c24b", "ref_doc_id": "25a20d5437e310362add9f625f65c5d689a8a191"}, "dfdd63e6-55c3-4f88-a3d2-f3908ee3d675": {"doc_hash": "8a5cb949c71224d4b0e09d17de54e4261e6b1b6392b443cfc73c8663857b5fb0", "ref_doc_id": "25a20d5437e310362add9f625f65c5d689a8a191"}, "f8d21455-0502-497c-b44c-df4ca2e43c15": {"doc_hash": "e16bda550e8542aa728d3168e45d298430f6757c2aef6620ac8b51392803b1ac", "ref_doc_id": "25a20d5437e310362add9f625f65c5d689a8a191"}, "6752a6e4-5fef-472e-8e5f-07266d74fd3a": {"doc_hash": "45d24b7b80b89f4448973880eb5f3c26b682fae5a57933e9403d04ba5fb1c2c3", "ref_doc_id": "25a20d5437e310362add9f625f65c5d689a8a191"}, "b5dec119-2479-44f5-8688-91a688a8c222": {"doc_hash": "ff12b98bfddf1d4e654ed29073871afd11f44e2bfeec8af1686753f4349ff076", "ref_doc_id": "25a20d5437e310362add9f625f65c5d689a8a191"}, "48283220-9879-4b22-b302-967f8070ce5b": {"doc_hash": "34ebf6e8a01332aba54bf6a0c073995d6c21618c2f9f6cb5229d0c710700e24b", "ref_doc_id": "7f472b17e7351aecf059b72f4c3a7a336f79e844"}, "d86d6cdf-6579-42f8-86ed-594be7e85c5f": {"doc_hash": "40be0d05469dead4e1f6534216caab5bd78608ba6a6b678e23142e8039ea1f4e", "ref_doc_id": "7f472b17e7351aecf059b72f4c3a7a336f79e844"}, "a6460a7e-634c-4286-9c4f-4ab8c7ec191e": {"doc_hash": "fa3205132e6171b58326e932792f8122190a943e04b5f9ed7047db717b69b859", "ref_doc_id": "7f472b17e7351aecf059b72f4c3a7a336f79e844"}, "13b614f5-4798-4a0b-8ccf-19a5c59e6e49": {"doc_hash": "e6f394aaf31cb88ce1c458b84e3fe0acd59c5ffe79c001e3e43d0bb2d493bb94", "ref_doc_id": "f673d123bf102db8a480f02babcde22ea573abf2"}, "a418b110-eb44-4491-af4d-5431bfcbd175": {"doc_hash": "81b3fab2c8f5661d201342fa22a28d44aef3f5ef7d96aa289c9f3f1ccf119595", "ref_doc_id": "ad7fd21594c7fcbaa7fd48ab99c748c2e6138c48"}, "73a41840-dfe4-4f74-8f3a-2403bfcba90b": {"doc_hash": "1aa7389f7e1eee5b6eb0d547555a42134b7b2a1811bc5cdb73314fd6e39bab2c", "ref_doc_id": "8a35cef8d35872816a3069afec8f20edc9bb1ae6"}, "1d4a1dbd-bf20-4b02-86b1-db59816c45da": {"doc_hash": "08b4f740745c35a886de61e8386b2b09cb576f74f576c74a02a4718275276c54", "ref_doc_id": "8a35cef8d35872816a3069afec8f20edc9bb1ae6"}, "92510c83-f484-4fcb-a99e-f2aa48679ca9": {"doc_hash": "e89d71031317ed1d3696e317268f2e352c8158465008657012c72c6ceb414d45", "ref_doc_id": "8a35cef8d35872816a3069afec8f20edc9bb1ae6"}, "59d6db8e-299d-4e58-83ab-1d63fb463eda": {"doc_hash": "978089c4ff7a4d95bd717dcd264eca96621e0ea6cf01f031efa186eccaff0477", "ref_doc_id": "8a35cef8d35872816a3069afec8f20edc9bb1ae6"}, "cd5a4783-e1ba-41fe-b73d-2f98b6760f3d": {"doc_hash": "478346e7f5004053aa72aae75bc2fd0333365ea00a0cece27068820f6854bdfa", "ref_doc_id": "8a35cef8d35872816a3069afec8f20edc9bb1ae6"}, "4cda5db1-bc4a-4f33-a2f5-fbdb67cf9d04": {"doc_hash": "e382653b766927058d93493637cc7b2e50aed36055c29ea96a4f45802e1b3554", "ref_doc_id": "8a35cef8d35872816a3069afec8f20edc9bb1ae6"}, "48ff6118-6f22-4ff3-934b-5a575cc44abe": {"doc_hash": "c41ddae9bb0c71e5e9a186b097f0053b299e8e99dd1128939a5e83643b7d65eb", "ref_doc_id": "2f1ad0d97bcddef3edc50a5d3149cfa91c9b8c09"}, "96b193c0-4265-4dc8-9dc5-e352bd9ce975": {"doc_hash": "5da598ad5d60b9e0e5a7e49c94c0206998e153ac6d1aa1a3f9dfebed626c2643", "ref_doc_id": "fb70d4c67d684aab5c530314642f9f3b7537cb11"}, "501ec811-5095-4a1f-9e6c-4dd8a39dd701": {"doc_hash": "ae021db6ee47db9c16a8aff3d2896a854207e723072bd1338dd1d1621f506217", "ref_doc_id": "fb70d4c67d684aab5c530314642f9f3b7537cb11"}, "79fdf51c-d696-4f74-a1c7-fdc56e19aae6": {"doc_hash": "eba0a1c3928a6e22d70d2ea49995555789cb8ddfd0d8f62e029fdc4eac9062e6", "ref_doc_id": "1a38c8d2ea0470e33c5d60b8b96bbde29f8c8ca7"}, "878121c0-a736-4a7f-bb8c-1f8ddf98b569": {"doc_hash": "79552a531aefb751d972b341d8cf5ca28a3b5b05c45ef12317ea18c4f2832e1e", "ref_doc_id": "1a38c8d2ea0470e33c5d60b8b96bbde29f8c8ca7"}, "8e899786-8742-4954-a411-ed7cf595819c": {"doc_hash": "170a5e7af9cdcfad65e94fb03435fcaabc608f632516c5f0eeb61937b6cb8a8c", "ref_doc_id": "1a38c8d2ea0470e33c5d60b8b96bbde29f8c8ca7"}, "7683ca08-a268-4f2a-91f5-bed579149532": {"doc_hash": "8c3145c74907c85c480ae61770e90b4db814d713354551992b8f6b69f807888f", "ref_doc_id": "e8814ff885859f19a3428f8f919b0a0cb6bee9f7"}, "bbaa1797-b014-4b73-a1ea-a7d9d0e8b723": {"doc_hash": "9bbc6ac74645df6f97605e110982fb1f13cdf00b3a1ed2e920cbb0adcd55c927", "ref_doc_id": "e8814ff885859f19a3428f8f919b0a0cb6bee9f7"}, "71a4a0aa-80e1-41d5-a80c-143cb7d90bc6": {"doc_hash": "bb33f07e08c4e6d07f80cc78bbb144fe4919cf441ab120de7b6abcdbcc63f318", "ref_doc_id": "e8814ff885859f19a3428f8f919b0a0cb6bee9f7"}, "c11483b9-b3a3-4059-9803-21268465efaa": {"doc_hash": "20c378d24a5e7d4c9410969d0a773ab99b4b4a2538ef265f7a896264a18c5ca4", "ref_doc_id": "3cf4d46cddebf7ea75ef3ec2ff4bc98c611cab00"}, "c9c69454-683e-4e96-a44a-218ad670a4cb": {"doc_hash": "fd12e9048a6dc98164dd64d42c79cb36c9e06d6eb80452085bc43d7ed2e85922", "ref_doc_id": "3cf4d46cddebf7ea75ef3ec2ff4bc98c611cab00"}, "0cf66a8d-9f40-4c10-b2cc-347a0021aaf0": {"doc_hash": "a22fedbd242c1f21494385cde9e0b6b924df7ef3ec5602ae5cab285e7e14a8e5", "ref_doc_id": "d12917a004424ffb54be29563b144bcc93b1b4dd"}, "41c442b3-edb6-4555-8977-b122675ffd68": {"doc_hash": "f3883d452dd2a62c2affd331407e0ba42ab6ef4beee75e8252feededeb33e43a", "ref_doc_id": "3936833acdb985f1ac97c2f994a3c5af3d6cbd7a"}, "1c820e9b-0b62-4610-a60e-8de41a890354": {"doc_hash": "e04099347b01a30eb09429e83726b4360fd7aaa9a05ada278ed4289932821232", "ref_doc_id": "04022fd873e8f9fb7ab865b3c31feb0767d860d1"}, "8ac3787c-19b8-419a-b246-2f665478c2a1": {"doc_hash": "3613224815dd65b29bc434b9207ddfbc20bcd42680b44564e80015b1f39677d1", "ref_doc_id": "04022fd873e8f9fb7ab865b3c31feb0767d860d1"}, "feb7323d-0286-47c4-84a7-00fa591b1e8b": {"doc_hash": "8b3c6a6ec6522160c933805ccbd4d8e37241bd474538ee9b69ae384045eb27fc", "ref_doc_id": "eae5aa6e20649d718e1f654bbad8fad1f4306033"}, "f594911f-f8dc-4086-af71-e46a0ce3af12": {"doc_hash": "47d6f59f160a3af4bb79fae8e22435a4258deb7dff478dc13219ca354c049e03", "ref_doc_id": "79e275ce268d61858dadd6852d0cfb89bbc83c0e"}, "74e781b7-666f-4848-a4d1-be06e9734d90": {"doc_hash": "c97d54eeabdaee0dd76887531d37a412743a4cfbd42bf64494180022240aadef", "ref_doc_id": "79e275ce268d61858dadd6852d0cfb89bbc83c0e"}, "e149df3c-ec64-4ccb-9b77-6940e4a5ea94": {"doc_hash": "3ee461127015a9437c4d0a53df19aa8230496a8babea5188e10e121144b24068", "ref_doc_id": "377d94488afb12f6247eb287b1bac6a8e9652ef2"}, "eafed595-944d-4e92-90a7-e4391cf4462d": {"doc_hash": "d714bae607f3d655c7b8fd7d65db219127f72e350e5939c33eb0c888c63375cb", "ref_doc_id": "377d94488afb12f6247eb287b1bac6a8e9652ef2"}, "a342de3d-4fe7-42a9-9ea3-425ee9dd9e68": {"doc_hash": "92e5eb42f74d97fdeab2442932ec505388dd1ff96bed466b0af9681ff7f141df", "ref_doc_id": "377d94488afb12f6247eb287b1bac6a8e9652ef2"}, "bb06f609-927d-4581-8f18-10d3dc5bac48": {"doc_hash": "11ee7bee25fa7e07a7ad5727d33dbd61ab270a3901b0a7943487bc6e565819ac", "ref_doc_id": "377d94488afb12f6247eb287b1bac6a8e9652ef2"}, "d9b701a8-c51e-4c33-b1b7-fcbf14bf2412": {"doc_hash": "12027dd6fbba2bb949c212c77ebee63412a336ae92be574a3a906f4ef29b10f0", "ref_doc_id": "3cbcca882043c65501dbd4669c76b180993c0cba"}, "b4944352-4ccc-43a1-8b4b-59015f34af1a": {"doc_hash": "ecce4a03530944249ec92da0ed703851203ecdb637a89eb3c9c3fdffee1be384", "ref_doc_id": "de6ce5afbe09f30a04d3bfabc40bdf429a7c63db"}, "787c832f-9d95-44d7-811e-3a61cfd43bb0": {"doc_hash": "20be96ba19a10d833337a3d4efb53ae27492b8d3ef5e7d57b610baf3accfc867", "ref_doc_id": "56513518ae1f305e3f1ccee1d417cd291c2d1f3d"}, "e3895ca1-4eda-4b2a-bbdf-42006cc099ad": {"doc_hash": "b89f24c95efdd229bd98e92d033132c0600d53ee32249f69f4a2dc0f0c8a6d29", "ref_doc_id": "56513518ae1f305e3f1ccee1d417cd291c2d1f3d"}, "2da609ff-11d1-449d-ac40-e8043e8a1652": {"doc_hash": "9968b3654f0b72e24c30f760f38d8ae606f75e6510593796985e5c6129cabde1", "ref_doc_id": "56513518ae1f305e3f1ccee1d417cd291c2d1f3d"}, "cacd16c9-986c-430c-9b77-b072affd8166": {"doc_hash": "d49a3b2c85d60542ff325f9be217db93ee1f2db80729897dfc58f9e78c6dfbab", "ref_doc_id": "56513518ae1f305e3f1ccee1d417cd291c2d1f3d"}, "4f60c508-7c26-4c37-ac3c-c45ce5b40fa9": {"doc_hash": "b9ace237db62e48fd36bb140b16899d94a49e41992298c9ccc8a4b493b54babd", "ref_doc_id": "76520a818d77c80964d651e20eb8b4aa6ea824e5"}, "c0763d78-3ef0-475c-ae88-806c4bb5c3af": {"doc_hash": "4d6c5462cc5ba653c6e0a9215dc795ccc57b83639000e99447971b1056c4776d", "ref_doc_id": "76520a818d77c80964d651e20eb8b4aa6ea824e5"}, "72a36960-0f71-4910-881a-ddb0a61d7f2e": {"doc_hash": "749c6092964b04a91790a20a0a0e5137eba3338a1d8c11d2ea28f501687f017c", "ref_doc_id": "76520a818d77c80964d651e20eb8b4aa6ea824e5"}, "ae85ca46-b6e0-4a1a-a204-54ad5e9f8f35": {"doc_hash": "f622c708e8f80e6b169b740b560e39cee8b2b960d45534d643909673e9b2cba3", "ref_doc_id": "76520a818d77c80964d651e20eb8b4aa6ea824e5"}, "073c5872-3de8-420d-92ce-a930982a41ab": {"doc_hash": "37555ed63769efc2fc4b81924c04e867264130560801b636bf2dc39f2abbc588", "ref_doc_id": "76520a818d77c80964d651e20eb8b4aa6ea824e5"}, "e24a3c59-b619-43a2-b2b0-b9be3996f1b5": {"doc_hash": "597cb2bb170110db2914c86c06392c720c6e882f95d95983570d8da5f9b954e2", "ref_doc_id": "aab8e4a05906198ddd17f386b0da935faa14526d"}, "fe95ede8-4677-4e52-94d3-5b91deb7c766": {"doc_hash": "8f366bbb8c7f8e9718c4a97a88c94ffb0b122c803b7431f3a2ea6696aa3e533a", "ref_doc_id": "a158bb06ce772414a566b5ce58713e6c2ca78887"}, "80b94b93-e890-4414-963d-25435a80cb7d": {"doc_hash": "3e815323278f2de904693b310ed8d96ed29dace43f261c7ac9e4700fb0b83e82", "ref_doc_id": "a158bb06ce772414a566b5ce58713e6c2ca78887"}, "a130b221-b7ce-49e4-96d5-eef3d469fb1a": {"doc_hash": "8c4547531d2b96d36a656b31378027bf811d857eaef1ded2b9ad21a28fdc255f", "ref_doc_id": "a158bb06ce772414a566b5ce58713e6c2ca78887"}, "b635c152-cb2d-496d-abb3-91f5bc52fc2d": {"doc_hash": "a843c009979f6bc6634078199d6ace9766b4174e8fd131b93b789664e7b0f069", "ref_doc_id": "95610813901697287facb0b791e554c35a059060"}, "34ba79c9-0fec-4c82-823d-9b0ce3d8d32e": {"doc_hash": "a08695bb65fcbb29edd5d709e6fb6dc7fce069733395500d8f5dfa35d95fe012", "ref_doc_id": "95610813901697287facb0b791e554c35a059060"}, "989b7af6-1394-4d65-a1f9-5247147d18f4": {"doc_hash": "c69470e04f629a768d3a5bbb3768e6c5eae94a8b237fd035a6d85904460d2f41", "ref_doc_id": "95610813901697287facb0b791e554c35a059060"}, "9d824206-6431-4a0c-893e-d6b53444de1c": {"doc_hash": "cbaaa0bf2a827fc7443af7a7dfbb493cdac3dbfc0c3ed5c5c0b9d17e687384b9", "ref_doc_id": "95610813901697287facb0b791e554c35a059060"}, "fd8601ba-a7ee-4188-ae16-7be783718a71": {"doc_hash": "f7ccd900af1d9b46f681672e863cb98c0d41b8c41b3afffaa42c8a36da60deb1", "ref_doc_id": "95610813901697287facb0b791e554c35a059060"}, "7c94458b-fb45-495d-8f5d-e62b807637a5": {"doc_hash": "a78f891e4014ba048811bcdb1ecd6c0104ad81c20ab56f1ed2edd8120e4b90f2", "ref_doc_id": "c88f22fa49d1f5be1735f3753c868bacc95853e6"}, "f0ba38f9-b506-42cc-b058-9a086b44da4c": {"doc_hash": "32550e7bae7c840e38dd789f69935e909df5470c6bcd0bbeef096da7360d56b5", "ref_doc_id": "e1f5e617cedcd3db41c3982126270037e57139ac"}, "c0cc0e00-486e-405a-b6cd-6818938f6922": {"doc_hash": "7fac1f745ad7649906224969a44bf3b81762844b27803117a9986cf25b1c07b5", "ref_doc_id": "e1f5e617cedcd3db41c3982126270037e57139ac"}, "132b5491-ba5a-4b66-be7b-9290b8533cff": {"doc_hash": "07e56966a9a9920fc6530ac93288a691c92d7fd9ee0757eedeb0ff03c845be17", "ref_doc_id": "e1f5e617cedcd3db41c3982126270037e57139ac"}, "5b41f0fe-4414-4417-b7ee-1dce4ccc22a2": {"doc_hash": "eedde252cb2471ceed179b896cbe83f3120d03e1ad2ed0977ff3dfbbe4d6fc8d", "ref_doc_id": "e1f5e617cedcd3db41c3982126270037e57139ac"}, "efcab669-8add-436a-89f1-dcd1fb8e8ffd": {"doc_hash": "ac7a5b3ce8bcde50c080e187b2dc2ed93e2ca3582c08319efae16f2562a96e2c", "ref_doc_id": "e1f5e617cedcd3db41c3982126270037e57139ac"}, "851b7ae1-fca6-4d05-9051-1d86d0a32c28": {"doc_hash": "206c8d697463a23dcbb3d1b01fafaa075da90dbd57f774fd4062c352070d29fb", "ref_doc_id": "e1f5e617cedcd3db41c3982126270037e57139ac"}, "b0e34356-6a4d-4d64-8434-f67dc352d5d0": {"doc_hash": "64c6f3c8548e7f012678640580af2cec067b89e5cf2521ed823f2fab2aa40d57", "ref_doc_id": "e1f5e617cedcd3db41c3982126270037e57139ac"}, "f5697a90-f95b-46f4-a500-d123b7e6ed00": {"doc_hash": "064eae7d822aeeeaefb19b2f1b2f8ce1a533702edd3fb58462f201b2cc769f52", "ref_doc_id": "e1f5e617cedcd3db41c3982126270037e57139ac"}, "1a7c6c77-8921-447d-a598-f695de5a16c7": {"doc_hash": "42f49dda49fa68c9838dfceed1321656446a644bd70ebd3e735d2a2f176e59bb", "ref_doc_id": "e1f5e617cedcd3db41c3982126270037e57139ac"}, "1781bb9a-d78b-40d5-ab6a-e3d30d3d85f5": {"doc_hash": "6018d3c54f31be5a90d94765c61ee0d2a15879cd33113b4d14a0686c6f6a9319", "ref_doc_id": "e1f5e617cedcd3db41c3982126270037e57139ac"}, "70d3cca9-625d-4bd5-835b-5113f50de443": {"doc_hash": "7f9336e1f236ee158930243d27b6df6b19e83176fd2931b3cb7c54fcca0ca9c2", "ref_doc_id": "e1f5e617cedcd3db41c3982126270037e57139ac"}, "41bc6c09-c165-4963-a6f9-0f5da0179860": {"doc_hash": "d9e6243739d65157198ccd658e53ead03e52c5644114ca71808eef8beb51a277", "ref_doc_id": "e1f5e617cedcd3db41c3982126270037e57139ac"}, "7f3f950a-7f8c-4ae7-b8ed-c4f426ff9749": {"doc_hash": "6838f20cbdaaeb95f4a40a66b96d1aeb6025a3f82ad1098ab63a5028e016f9c6", "ref_doc_id": "4ec3e8d81b62c4cc78c1620ba3246141b0228ca9"}, "de51b2ea-5776-4ff2-9bb4-b737d2dfd629": {"doc_hash": "6c3fff5d92456e2165a892381c979e1fe1b9758082f16ee30cd336c220435407", "ref_doc_id": "4ec3e8d81b62c4cc78c1620ba3246141b0228ca9"}, "957327cf-dab6-46f3-af96-083ce34ff6bd": {"doc_hash": "54cdedb7a90ecc18c65c5728dbe3a33207ee8d5283b38d2337091c42c181ebec", "ref_doc_id": "4ec3e8d81b62c4cc78c1620ba3246141b0228ca9"}, "60e4685f-91fb-4cce-83d9-096c118e018c": {"doc_hash": "73c0910f8194cb104db011638c7bc1badcea0bb117ae7fa905d1340bb225de8c", "ref_doc_id": "4ec3e8d81b62c4cc78c1620ba3246141b0228ca9"}, "0f896d08-f392-4279-a470-ab00a1372a98": {"doc_hash": "b94da5a4c0acdcae462ec33c3bf955f8b0973c8cf0850eec94e8ba16cffcb1f5", "ref_doc_id": "83c57d0116c654d1fde6fe6be130a8936772c0d7"}, "0b050f28-104b-4f60-a515-ca503fa741ca": {"doc_hash": "8b8041131ee20ec2affca773de4696567d9f84b2df8c48fc216dbd78a6a2c642", "ref_doc_id": "83c57d0116c654d1fde6fe6be130a8936772c0d7"}, "221c1c3e-891e-4c85-85bd-1daca8f6dc5f": {"doc_hash": "e827d0233c16fc12dad0d9fd1c0c223a9c2b99805b853f79653c3f10ebb6aa06", "ref_doc_id": "83c57d0116c654d1fde6fe6be130a8936772c0d7"}, "e13af675-2902-4001-a951-155f8a25efc9": {"doc_hash": "6510446af26d412c7c7fc68b9afcbc3b23a9aae0a9576a85337eddb8d39694ef", "ref_doc_id": "6e9972f4ecf308f1be7ed80d272c99058e9e0092"}, "f201e863-9ac6-474c-86f6-81a1ae04ade3": {"doc_hash": "d837cf2f0561e949a33e8490438e2046620bcb9fd7298bd58c5a0d1e4e86cf2e", "ref_doc_id": "6e9972f4ecf308f1be7ed80d272c99058e9e0092"}, "a702c5b3-eb85-479f-8b38-aaf028b8b0e4": {"doc_hash": "5f7383d3a4fbd43adda265905eb491cfb5ead6a1a781c62300331ff1a6119bef", "ref_doc_id": "6e9972f4ecf308f1be7ed80d272c99058e9e0092"}, "c9097a95-20be-430c-a68b-a68d80945721": {"doc_hash": "04b9cdd27f5a297afe0954f68a2812cbf0aed26eaafb8517fd842aab3f3c9d85", "ref_doc_id": "6e9972f4ecf308f1be7ed80d272c99058e9e0092"}, "e556167c-0ba7-44cd-8430-de6f784e1e27": {"doc_hash": "6d2e1c55436ecdaebd0790a240c3ff105f7571abed33e988c8099962210ebb11", "ref_doc_id": "6e9972f4ecf308f1be7ed80d272c99058e9e0092"}, "6758da10-88a8-4264-b156-856b97594dae": {"doc_hash": "2c55e0083479bdba20f2816ca3742416066ad36510d34c8a0bc850cfd07fd753", "ref_doc_id": "ea26a70f0c082a509c0ec2173624770771a0f284"}, "f0f66940-8fd6-4d98-84fb-a1af88f7ecd3": {"doc_hash": "7efd65e7dd29fad7602df84beb96f82ea360931417c6fe663269511cd20296d8", "ref_doc_id": "ea26a70f0c082a509c0ec2173624770771a0f284"}, "d0b11c34-d92b-49f6-a8a6-189efe65b287": {"doc_hash": "ee16d1c41e50bdf440eec0d0a6c4dccb5e47a094a98a255488a806948f9e018b", "ref_doc_id": "ea26a70f0c082a509c0ec2173624770771a0f284"}, "ef1452fa-0e78-487a-a416-10b1ce77c0ce": {"doc_hash": "fc8a72e62029fa3b7ff62b5f7c0faaea861e8340d6f21be58e4eb9876e9471a1", "ref_doc_id": "ea26a70f0c082a509c0ec2173624770771a0f284"}, "781289cb-23cb-4771-95cb-129de2bb24d7": {"doc_hash": "a69e806366a18795d6dd4b372635a9ad57f42bd0ab6e21a36b9482b3c028e80c", "ref_doc_id": "ea26a70f0c082a509c0ec2173624770771a0f284"}, "4a9a9263-33c0-4121-9000-ae44b2579778": {"doc_hash": "4d1f7a5c11f601ec5b502dad72436cea45238af74d2eb564498a1c45ccd32981", "ref_doc_id": "b19165f8c68139c21b5716496eb54813a7934126"}, "fa647d48-cb54-4db6-a3dc-789f1537896a": {"doc_hash": "1d0bbee193be4b2d699e676cfc14525f6fabe99aa2ed0ae96382147d79ee0e60", "ref_doc_id": "a9aae77c5912b21f204856882b43e031d90ab9e7"}, "6d9e17d2-0ea2-4b9b-b4f1-4a5b2ac33035": {"doc_hash": "07c91a2c46c955e100b9259c3c026fc5a258c7d68869734ccfbcb39f5e478dfd", "ref_doc_id": "a9aae77c5912b21f204856882b43e031d90ab9e7"}, "cb2fa1b3-9773-400d-80b8-278cbb1b8988": {"doc_hash": "3a932ec8ecee05ad504cc7ac779151d74336a02bbc38059bbb87ee7f289645db", "ref_doc_id": "a9aae77c5912b21f204856882b43e031d90ab9e7"}, "fdfcec0c-c3b1-4166-b007-dbb3cde6cb87": {"doc_hash": "e0855f6c1944db401288cf0e9c67f0e4f9a4a7a54630ed935a3d277a3165f355", "ref_doc_id": "a9aae77c5912b21f204856882b43e031d90ab9e7"}, "0bd6ac79-b59f-4eda-b01f-2dca9473d218": {"doc_hash": "f6ac0dc674b9ee12d003eed3a6f162d7812465d5029041dd39798e7a965cf397", "ref_doc_id": "a9aae77c5912b21f204856882b43e031d90ab9e7"}, "d34764f9-082b-4b34-8560-55d3871c00cd": {"doc_hash": "20189d034aa56fe3ab20ecc14496e7ffc3d17689d0e274d4a57fec0c2387d436", "ref_doc_id": "e388974b7c1a48f2123d0c1f6e9fb557cf726ed1"}, "dd6e4d6f-3852-48f7-980d-efe9a137585a": {"doc_hash": "6ff1c6bcd2683d2aaf94f25d13875406b839a12f2417bac7e80ff720f6455960", "ref_doc_id": "e388974b7c1a48f2123d0c1f6e9fb557cf726ed1"}, "e9cb1aae-aa73-435e-9645-9e163aaf3472": {"doc_hash": "208e49018c0243e6a497096c0706d69a042c8effea0330d4126942ca62d6922a", "ref_doc_id": "e388974b7c1a48f2123d0c1f6e9fb557cf726ed1"}, "e4516197-9820-4de6-9b9f-281d77e7d24d": {"doc_hash": "7ae7037a4a5d7e9ca3403ae04158491da4e5c448e6b3ae4fd661723987e00199", "ref_doc_id": "82b92aa69032d14de0733589b2dd55fdeb12e61b"}, "ce05d3af-a828-4b97-9c1a-6b9a5686ddbe": {"doc_hash": "f356772efa688024095be3952cc3595e93d29a3e387799fe64e275114e9f9c60", "ref_doc_id": "82b92aa69032d14de0733589b2dd55fdeb12e61b"}, "32d85a66-600c-4087-aa86-276476d672d3": {"doc_hash": "2e9bdb524bd54a18f8a64b4282743d5edb5101c7a16be9d2a77e44d1daf66ed3", "ref_doc_id": "5afa175c67246cdf95838acf7af829ddc04c452e"}, "66272ba0-0d63-440c-9474-9b9eb971540c": {"doc_hash": "efdaf37c269a3ee2c51e8553bd22f6d258b2143d090bcac7ce3004cdfbe6ad1a", "ref_doc_id": "5afa175c67246cdf95838acf7af829ddc04c452e"}, "6d73f126-7390-46f2-9103-cc327fc67aa0": {"doc_hash": "0ec77d2c5b2274e54e162f8c229c75025d14e72190b29864581d38577edbd1d0", "ref_doc_id": "d6d6cfb75bea34c2dc1d6b69b7f13e4be508aa7a"}, "462d7fc2-4e96-4350-98ab-0a74fef0983b": {"doc_hash": "25e07304db02ea8793aa1385f13b1e0eb4f71fefbea813a74d865986919f98e8", "ref_doc_id": "d6d6cfb75bea34c2dc1d6b69b7f13e4be508aa7a"}, "e8751f60-10a7-41fe-8bd8-87f8ebe28614": {"doc_hash": "368816a413184000cc45b2179dddd6dd3cca449772841b710d32b0aaeb2c6eab", "ref_doc_id": "d6d6cfb75bea34c2dc1d6b69b7f13e4be508aa7a"}, "765447fa-2b8e-4d44-a605-a509db3666dc": {"doc_hash": "bc5ae1e10e7105fb8b91bd17c74e852bd8cb3b43c280596e95d63e8d51731687", "ref_doc_id": "d6d6cfb75bea34c2dc1d6b69b7f13e4be508aa7a"}, "79f2b5ad-ffd3-4bf8-bd5d-d11c19cb3220": {"doc_hash": "87bc7c79d5fa4abeee24b178dd74545c15f3c2792a3304d99e64f89f0f5d6324", "ref_doc_id": "d6d6cfb75bea34c2dc1d6b69b7f13e4be508aa7a"}, "c255850c-9f1e-455a-aee2-5898e492da45": {"doc_hash": "880be448fc929d62494869208e87573d0290d60638d7e7dc648151ab6634b3f7", "ref_doc_id": "45aaf0fe6de941f721b00d0d740c7d6b24e606f0"}, "8d6897db-7d60-4ea8-9851-92eca308c319": {"doc_hash": "97a72d6d292f8d762eef4428335514a38838c013b412bb977ff6054bf090177c", "ref_doc_id": "45aaf0fe6de941f721b00d0d740c7d6b24e606f0"}, "3c22067d-ab2c-41ba-a2d8-f90ae11d748d": {"doc_hash": "33fc448bc8ee59727a4f23184ed71fd3bdd032fdb963679b6352873b4af7b5a3", "ref_doc_id": "45aaf0fe6de941f721b00d0d740c7d6b24e606f0"}, "ec781f92-9cc1-47e7-b197-89a46f871e59": {"doc_hash": "5c944566183fb6a03d49305a64bac2459a14d7b1ac466b08f0cda9e94778841a", "ref_doc_id": "45aaf0fe6de941f721b00d0d740c7d6b24e606f0"}, "37676dbb-ef25-4ec9-b950-5f10076d9e73": {"doc_hash": "e8cdf3b655b826722cbb776525231eec8a3a2c0e01389dbef5830e62ceed5852", "ref_doc_id": "73f62c0f8e8a79fafc98311d1c45280390e91965"}, "060b241c-88fc-4f4f-9f81-3253d2d525b4": {"doc_hash": "5b155e468e538482b1b54976e40c2b3b77132b945bd7813d1a2f4231d90bb46d", "ref_doc_id": "73f62c0f8e8a79fafc98311d1c45280390e91965"}, "b37f0112-8e5f-49c2-8f49-510c506a7c1a": {"doc_hash": "38b9384c57409120c0a51c1d57cbdeed5d3000a8be69eaa6c6f3ceb5e7126925", "ref_doc_id": "73f62c0f8e8a79fafc98311d1c45280390e91965"}, "439c3f20-a3b0-4d95-ba84-f542f5087eb3": {"doc_hash": "fba1b5862dfb7a9acd673476bcba03bd4d7c7c20dd96473f0c014e3cbe46d464", "ref_doc_id": "73f62c0f8e8a79fafc98311d1c45280390e91965"}, "c8531571-2d1f-42df-90a4-fa26b0be12cd": {"doc_hash": "9e42a6a01705a315d9b6d45e94903a6f2cd614163f12a0a50ce1535cb1b8eacb", "ref_doc_id": "73f62c0f8e8a79fafc98311d1c45280390e91965"}, "c6e85c37-7088-4237-8d4e-060e503ddb77": {"doc_hash": "dc2738588f9689551bc971dc792f417acc93456dbce3a6fda0aaa9035f10f957", "ref_doc_id": "45d13c8ad1e99470de343f89ca9eb092b56e2572"}, "9fc7fe9e-0ff0-462b-a692-daba87acfc83": {"doc_hash": "a554dc26a54e3c7f487720937a5d32cfdc6a037514fdfaa022479f27606f6396", "ref_doc_id": "45d13c8ad1e99470de343f89ca9eb092b56e2572"}, "0dac04e3-83d9-434b-a8b3-3e1b093439d8": {"doc_hash": "df60f3a84dddbc00cf74d3d2b603cb6fe43245d78db0a84862351cee7c8bb306", "ref_doc_id": "45d13c8ad1e99470de343f89ca9eb092b56e2572"}, "71db8c1e-1f65-46b6-87d3-e543a0f37eee": {"doc_hash": "58a9196b5043e45043ac1f301a509d7baf6389bb06c4bb3c9c34fb263b9f783b", "ref_doc_id": "c0aa4204dd8d5ec2d2d44532743fa0a9097171e2"}, "90ff720a-2fd3-4f28-9667-68a4b77e45b3": {"doc_hash": "6d9ef61bd72cb4476218828b863cf27629b6ffdbb6543fb64cd89334d31faaf8", "ref_doc_id": "c0aa4204dd8d5ec2d2d44532743fa0a9097171e2"}, "72ff670c-a984-404c-acb8-217da8edba24": {"doc_hash": "6fba4c34743d0b9904d18cca6e6df7a049ab536eb49c7b3f7fc5571e607299dd", "ref_doc_id": "c0aa4204dd8d5ec2d2d44532743fa0a9097171e2"}, "87e89258-7d8a-4632-bd72-bd1992b37de0": {"doc_hash": "96229ffb9d1d0636b0c35ff4d408240e56c70547203ddc16fba6e8ab23361d0c", "ref_doc_id": "c0aa4204dd8d5ec2d2d44532743fa0a9097171e2"}, "f9069fd1-d628-4fa5-82a6-a1b343736ed3": {"doc_hash": "8f1cdc6ece5b1ccbc2eeff66c9ea7c59c3457c62ccfecb4e949e5b9ee82e240b", "ref_doc_id": "a4411c73dc1aa331618d9d0d632e2ba5827444af"}, "acd0935a-955c-4013-ad82-f32a5ca56ca9": {"doc_hash": "8abef8d01e91dbe69a688052107c6a31568d40f7d03414ba77a4ccec597ccd8a", "ref_doc_id": "a4411c73dc1aa331618d9d0d632e2ba5827444af"}, "9f3d17e9-48ff-46f6-9764-8b991308cc70": {"doc_hash": "f6c96a2e86e33487d625d4614ba441c9b5e648f0bbc2d568c7f811e1b7c9b003", "ref_doc_id": "a4411c73dc1aa331618d9d0d632e2ba5827444af"}, "730b8de2-7347-4576-a7d3-ae28ce45166e": {"doc_hash": "932e240bd42ecc9039ec3c03ae80af1d846e28e4ec428f79b2eced749870db5a", "ref_doc_id": "a4411c73dc1aa331618d9d0d632e2ba5827444af"}, "598acf31-5064-40df-8217-939607b1845c": {"doc_hash": "6169dcf9a08513d6cf25073ee1682628f503f40579fe3fc4383a3ab8283804e4", "ref_doc_id": "a4411c73dc1aa331618d9d0d632e2ba5827444af"}, "a7aa00fa-7a85-4ef1-8076-950e8cf7f439": {"doc_hash": "c6bb0df806dd8ff357d283a3abc189fd9341a9814802cd86de4207c33e27c280", "ref_doc_id": "a4411c73dc1aa331618d9d0d632e2ba5827444af"}, "e4b413bf-9b94-4fe0-888c-da633f8be2d0": {"doc_hash": "9eb5085bb0f6d1f6a55009427854f06ad78562775150af9ac096210920b5fcd1", "ref_doc_id": "a4411c73dc1aa331618d9d0d632e2ba5827444af"}, "168aa1a5-d857-4e0e-8091-107688f72a4e": {"doc_hash": "b2e2c1905a74951be964646f52e616bc38d655dfcab76c21a5201578490d4092", "ref_doc_id": "a4411c73dc1aa331618d9d0d632e2ba5827444af"}, "010d0b08-5203-49d5-ad13-1f0c066f4699": {"doc_hash": "b5c0e66ebacbe0d580196dcc323268eb8ff34c86e928a1dbd13cee102e5c753d", "ref_doc_id": "a4411c73dc1aa331618d9d0d632e2ba5827444af"}, "e0c385a1-64d1-40e4-ac09-b62a0729da11": {"doc_hash": "7a5680a2a21c6768ee185e28caf7229ff010af3fef38438ca27e453ec60135ce", "ref_doc_id": "a4411c73dc1aa331618d9d0d632e2ba5827444af"}, "99c8121d-1e25-4c7d-ace2-81a5b4ef6dbd": {"doc_hash": "f1000a16ff6091feb55b7e312541d9945bd0c9a44caf435d8594341618c2103a", "ref_doc_id": "a4411c73dc1aa331618d9d0d632e2ba5827444af"}, "3f7812af-53a6-4bae-aef2-65e36df1c0c9": {"doc_hash": "6052b38d824efe1b97c5d6eaeb04fbad4ad1613c08b9dac5406bccdfebccc6ad", "ref_doc_id": "30053960561d7e77879410dccc86baf9c6d9239c"}, "d2ea97a6-92a2-46e6-8581-30d79ebdc0fb": {"doc_hash": "38ba326334856106602c5d1008c7f13f6dbd03bea5bf55eb6c35f8fe45290539", "ref_doc_id": "30053960561d7e77879410dccc86baf9c6d9239c"}, "0895f810-6420-424f-8206-067847102858": {"doc_hash": "902802fd2e49e16423adae906a32c909b78be740e5e62e25de3e07bbf0267de6", "ref_doc_id": "30053960561d7e77879410dccc86baf9c6d9239c"}, "be15a7ec-76d2-4ba9-8e82-8411ea552b74": {"doc_hash": "063d5be83af86aaa0a8daaa29f483194fa45a882a797b4a0a188b39469df53c3", "ref_doc_id": "30053960561d7e77879410dccc86baf9c6d9239c"}, "e533cbd1-13e8-46f5-9b79-86e2227e72e2": {"doc_hash": "46b89c5ed2aff6a907eee72e095e944151df9f9dbda582d9b100965c4a377e3a", "ref_doc_id": "b17389139497f7004d4451ada3cb10e4ec0d1514"}, "87c9c159-9e02-4b09-83fa-dc32ea367433": {"doc_hash": "74471893fd0397cb267b94aa21a9ddd499526560ef932de74d5502fab33b336d", "ref_doc_id": "75d4383302ea37c7aa3b3f7acbe9c8ed3b798b94"}, "fca7732b-085b-4ec2-8f14-e5a58b44ccd7": {"doc_hash": "7c2419688ee00dbe55a58857e9cd26c559178fc002c6f6136eedefe3137ba29e", "ref_doc_id": "75d4383302ea37c7aa3b3f7acbe9c8ed3b798b94"}, "c7455f0b-442e-4ac2-aadb-d843ef3c1bde": {"doc_hash": "61d91870dc3e4464b0c543058a7efa031d07e1ddadc1f9581d8a37b4f15e098f", "ref_doc_id": "75d4383302ea37c7aa3b3f7acbe9c8ed3b798b94"}, "be09359e-1de7-46ad-bba2-7df1c76d0c5d": {"doc_hash": "a807e7bd467034a8c894339c56e38344506cb9cbc095458660157e22ce53aec4", "ref_doc_id": "75d4383302ea37c7aa3b3f7acbe9c8ed3b798b94"}, "a5ef58db-6e3d-4a8e-884f-457593d4e317": {"doc_hash": "93dd006dcfe7707ef977ff5bf2c1415e9d1b3c9bfac8cd71582109b0621e231f", "ref_doc_id": "75d4383302ea37c7aa3b3f7acbe9c8ed3b798b94"}, "26dc955f-f3ed-4e7c-8313-10ead465464f": {"doc_hash": "c76a0248f537d7abd8582e34d84d5bd6f811b504ade6d567ece2824347285ff2", "ref_doc_id": "85550ef4c3755f1377fde344cd61a25fc2674d58"}, "5e4623ed-18df-4e1b-b73f-1d7e88942659": {"doc_hash": "75c150c9414f0d202690edd18009081f2ead0d6e856089079a3da2784102dbc2", "ref_doc_id": "85550ef4c3755f1377fde344cd61a25fc2674d58"}, "ada66e15-6e09-4e85-9b6c-441024372c68": {"doc_hash": "1bd362acda966ecbbe40ffc29a553acc1fd1bb35cd4b85ab309c8319471bc116", "ref_doc_id": "85550ef4c3755f1377fde344cd61a25fc2674d58"}, "7f8d2c61-671d-4ef8-81ba-2bb323626a55": {"doc_hash": "505c2140bd26927f5f0b52c1cb2813337e0be6b48dc7b25624eb8b16c5fc68e8", "ref_doc_id": "85550ef4c3755f1377fde344cd61a25fc2674d58"}, "852816ae-27f5-4f84-aad0-9e0aa67fb694": {"doc_hash": "9ae610579069ba8ed2b9e70f114d1c076d846f4fb1d906f2c731e602ab1c3b66", "ref_doc_id": "a463bdc37f43bab9ff6d2cd183ac928ff9a124af"}, "726f2bf4-c7aa-4f64-8467-efb7e8640708": {"doc_hash": "523c453e6f7ed3937f79541dc64bc8586f0c1daab3b3772daa53a69b64581f25", "ref_doc_id": "a463bdc37f43bab9ff6d2cd183ac928ff9a124af"}, "0f04c2f7-6690-44a2-b35b-1520e959be6f": {"doc_hash": "3cc39166ab03434418c825b22e057c1f0335fc847c5401071772d1f3c64dffe6", "ref_doc_id": "a463bdc37f43bab9ff6d2cd183ac928ff9a124af"}, "fc1fc752-5b1c-40f0-a36d-4dace22102fb": {"doc_hash": "c36d865fbd657edc7d55015f3715ec35b89f7e509620944e49f0bfbe6c96ecd9", "ref_doc_id": "a463bdc37f43bab9ff6d2cd183ac928ff9a124af"}, "c6528ffa-1e92-497a-ad7c-774e047773bb": {"doc_hash": "da5c4be68f5e60ba4fc1d7fc8658b2538acf7b37e82270aa5259b7a940a4f848", "ref_doc_id": "7b748625a09cc02cabbd6c8aae28cb79de91842e"}, "5bcf2424-320c-47c2-9b78-514ef53c918b": {"doc_hash": "cc3a33e391e0dd49484f5ede85b1665e51183176737057aa4419d3565a1a5f93", "ref_doc_id": "7b748625a09cc02cabbd6c8aae28cb79de91842e"}, "23703675-b1a8-4e42-99fd-3a89a5ce758c": {"doc_hash": "a5c4d23d9d9f4f350171116ab39eb717c4c8206209cc63a9dd4faa67c5745f04", "ref_doc_id": "7b748625a09cc02cabbd6c8aae28cb79de91842e"}, "86cd3857-971f-4c1f-ac92-5f0a3e56e1ae": {"doc_hash": "fd31fa4168e0f8090f7b51b6e9865aec94896e657e6232f12e779a352a0745fb", "ref_doc_id": "7b748625a09cc02cabbd6c8aae28cb79de91842e"}, "dece2124-4c96-42eb-9300-55564a3ad274": {"doc_hash": "c2b2c81adb81f4aa903e55550db0e55ebda186841935f1c181e0f52cd05358a6", "ref_doc_id": "7b748625a09cc02cabbd6c8aae28cb79de91842e"}, "21ca4057-4934-4c1c-b374-1e198113ef5f": {"doc_hash": "b384b58650d356037f861d1d49bc1b24e6ab629eca6c1ea728f4067d725652f7", "ref_doc_id": "7b748625a09cc02cabbd6c8aae28cb79de91842e"}, "6429b799-3671-445c-85b2-22312b8f8a24": {"doc_hash": "1e4b4aaa78a05a2cb88d0a617a557044aa290dc85ce43429f5018b9c33457c97", "ref_doc_id": "7b748625a09cc02cabbd6c8aae28cb79de91842e"}, "51cfb133-b545-47ec-a509-245afc5f411a": {"doc_hash": "695ab06a678fba600345b016f50cc48237246c59a27d49f2752227aa5fedbfc8", "ref_doc_id": "7b748625a09cc02cabbd6c8aae28cb79de91842e"}, "6c67c5af-ab33-41bb-bab2-870223be2e21": {"doc_hash": "c36ebe1c4810b67a34949219e5b57b6f475d74be10c51cee3869202cbb724cf4", "ref_doc_id": "7b748625a09cc02cabbd6c8aae28cb79de91842e"}, "044cb4be-c26b-49b6-a678-e204bdb4f79e": {"doc_hash": "d2eb0bc15c3b1a178684eebb8fa31c9ad1055b56057b1d893b9285174111fd60", "ref_doc_id": "c4764c5f66e4b85ae0309c9c39e0291e3f9581b5"}, "5aa226a5-e05e-4f1b-9fda-40473394df23": {"doc_hash": "2662e3d17d7e266a11f94981197e89cc3aced5c081dab4f6e1bf04292c91b916", "ref_doc_id": "c4764c5f66e4b85ae0309c9c39e0291e3f9581b5"}, "3544fe8f-2d4e-458e-a9cd-fcb1658e8973": {"doc_hash": "0785095b0a69bb104da9520f786b748c5657e8cd2a6d20b5eab435a61cc1ff51", "ref_doc_id": "c4764c5f66e4b85ae0309c9c39e0291e3f9581b5"}, "fc2b08e3-c8a1-40cf-b41a-77f73692c106": {"doc_hash": "02028ef7777061cd1db624d01992ab4b3ee5aa7e92ea8e7f4e586d1d75bab627", "ref_doc_id": "3d0d64194d615afb520db59c13d0c4490263d0c8"}, "5bd7e501-0aa6-48c8-90a5-520ae826c804": {"doc_hash": "6a1f5c1e4b67adab252deea207e233419e4d17d64aad37ce9d97345587b38091", "ref_doc_id": "e57b614081ef77937fc68e9933db694052ef66d7"}, "5612835f-7577-42fc-a4f0-db311db2c210": {"doc_hash": "cbd6b5129385de760768a7328b2eb499c9fe9792b0f1bc1e3d160ee5929bdfdf", "ref_doc_id": "e57b614081ef77937fc68e9933db694052ef66d7"}, "ccf6f4d4-1235-4f1b-a4b3-4017064d27d3": {"doc_hash": "a1e38332a7c3b85544b3d445009568e7f101ca133f4db510d91066e73aa6fc16", "ref_doc_id": "e57b614081ef77937fc68e9933db694052ef66d7"}, "48c08aba-aa93-4b75-9f2c-f40d74abf2af": {"doc_hash": "e0a7b16d76a50790826fe4e7b87bc03254f0784bedfbd3372be30faa52c6fd0b", "ref_doc_id": "e57b614081ef77937fc68e9933db694052ef66d7"}, "4e9ab68e-e014-4ee0-b29d-5233bae3e041": {"doc_hash": "bdf5d1dc3cd845cd8e730a563e7922f062d90aae079ca118019c73b70574db96", "ref_doc_id": "e57b614081ef77937fc68e9933db694052ef66d7"}, "b0206fd3-120b-4fcb-9bb1-94e74f4d2cda": {"doc_hash": "221ed8314435ddf6eab19b79b8d9f9bc38df2aa6710d751b35fcb70395a2db3d", "ref_doc_id": "e57b614081ef77937fc68e9933db694052ef66d7"}, "46c3c3be-813c-4455-8a1c-bf9bd42fe316": {"doc_hash": "ef2c7b89f70dd1e0a0b9f87757db2faf88daa9683a62854a4c0eaa73634a6926", "ref_doc_id": "c9a91eb240b0c2abf37eba616e546a47dc89b646"}, "52ed74bf-acad-4a2e-99ea-ca7b0c2ab4f7": {"doc_hash": "15f1c7e7bbb90bc7a76d03956994ef4b7d80c5cdbd2674821aa08c8db7d67116", "ref_doc_id": "c9a91eb240b0c2abf37eba616e546a47dc89b646"}, "8edd7592-23be-4cd0-9446-ddd22cccace3": {"doc_hash": "4354cce6e223b4130b1bd60e2172b658d3ea05aea00548cd27e7b2f0ff1c5e30", "ref_doc_id": "c9a91eb240b0c2abf37eba616e546a47dc89b646"}, "2a1a14bc-4ebf-4bd4-ab1f-a3361148f31b": {"doc_hash": "8061fa7014397ab358406407f2cc981b1d447ba082bc154f0ae8ae006b0eef35", "ref_doc_id": "c9a91eb240b0c2abf37eba616e546a47dc89b646"}, "d5157af2-bad5-4a26-a26b-50e9b87983fb": {"doc_hash": "68888ccc0392b33324ef88620eb8b300a1de8ab9331f1ab14b58a3adace45bff", "ref_doc_id": "c9a91eb240b0c2abf37eba616e546a47dc89b646"}, "f4b38551-9784-4521-90dc-cf68117fdcae": {"doc_hash": "ae0ce3319e6cb986b6926e2a78d809b1e0bc720642e11fd8ad19603b54eb8a95", "ref_doc_id": "c9a91eb240b0c2abf37eba616e546a47dc89b646"}, "17f8080c-6887-4e10-95f6-1146ec9c0907": {"doc_hash": "d7dbf5edecb4b0e177ec1aa1d248b12ef3b29af6f196e2e4c1238ea00f251a8a", "ref_doc_id": "c9a91eb240b0c2abf37eba616e546a47dc89b646"}, "2423c392-53a1-42a8-be26-cdde9dee597f": {"doc_hash": "532e4c94cdb05858b98e0cbd5acc27f163c15ed4d37aa1184152216521ddbc9e", "ref_doc_id": "c9a91eb240b0c2abf37eba616e546a47dc89b646"}, "b6eda0ba-2726-40c5-ba34-0638cc985881": {"doc_hash": "98c2cb6d6a9338093b9e7430d087d34cf138eb0018106452aad7f90e49fb7cb1", "ref_doc_id": "031ddfe01306f3a776c1e026c769282f245a5983"}, "8e5a82da-63d7-45db-97a2-c25e5c737c73": {"doc_hash": "d504780911d1a0831ba41737ff27fe66ad0f52c762a6a2d93d4b3804b742f07f", "ref_doc_id": "031ddfe01306f3a776c1e026c769282f245a5983"}, "647a8712-b62b-40db-8c5d-7a7cf36a6981": {"doc_hash": "5bb048775f3550b1737488115da13ac1efebbc190fe1f6335fa13c2ed1facd9b", "ref_doc_id": "031ddfe01306f3a776c1e026c769282f245a5983"}, "42545cec-c62d-4fdc-a00b-b09667d2c253": {"doc_hash": "40bef68b1c823810ee2d1d811f094b8ba3788d895eb8507a0f2204ec53915565", "ref_doc_id": "1fbc76632e9707a983d814c8b21dc06e6176235f"}, "1487e158-dfba-4c97-8d89-837386f7cc39": {"doc_hash": "b0351af1e05e5b4401a1e896bb86ea6c111a3b10598838c204d6c1d8042550ae", "ref_doc_id": "a57753c31a5d59b48c7e5d141653599f8086c610"}, "554f7c1b-9cae-4517-9506-46ef15bcfbb4": {"doc_hash": "79d772242738012a36df7f3a2e34421d8cdd276d8e8f7c66cb771a76baa6cc73", "ref_doc_id": "a57753c31a5d59b48c7e5d141653599f8086c610"}, "e4e5b658-e7b2-47c5-a7e3-0541056a2cd7": {"doc_hash": "c01a4d61ca72ca28ac7222bd1d12bf3be4821c62df1cd9897678e78d03d19af6", "ref_doc_id": "a57753c31a5d59b48c7e5d141653599f8086c610"}, "5aa18332-5a68-4038-a09a-6c81d3912971": {"doc_hash": "fc9bdd2b3e730ee7d6123bcfc3d0340e0079b956bf3fb04da3a629d6b8392c7f", "ref_doc_id": "a57753c31a5d59b48c7e5d141653599f8086c610"}, "22632927-b496-4e37-ad2f-871d87f73693": {"doc_hash": "42b392e8dd2811642fecda8d86469bf1beba07eb5cb2d15ebd12172336558549", "ref_doc_id": "a57753c31a5d59b48c7e5d141653599f8086c610"}, "b112cea0-72da-4a99-bd96-ead723ffa09a": {"doc_hash": "196505b4f73cbbd26085a378a4bf38e3f72f738822a7d7e66b2f69ceba19806e", "ref_doc_id": "a57753c31a5d59b48c7e5d141653599f8086c610"}, "7d9c734b-2066-45a9-9b55-922ee932a1ab": {"doc_hash": "ae98ad18942cd6bc9831aaccf327d733c4b51d5d3a44dcfc2eaf09b22c6cada7", "ref_doc_id": "8c44f027ea1b419105b11d8e2288e92c1edcef82"}, "e9bd19e8-d335-403a-9f63-c08318293ad1": {"doc_hash": "e7caac0de2df06682980f59e184222fc32f641942f415b5cc51c1a622e566479", "ref_doc_id": "a8b0d88d5b36c608bd17ba94c3d8725687598621"}, "2fac73f2-6449-464c-981f-b83b2f4b8a12": {"doc_hash": "d6cb3a9437ea7cec86c63d765073feb2a0389d1d25c3feb3921e61eb4ebe47c2", "ref_doc_id": "a8b0d88d5b36c608bd17ba94c3d8725687598621"}, "1512107f-204a-479b-92a6-da9e93156742": {"doc_hash": "d3ab89a9bf0c86e9fe2e452eab72acf1ca2d0ba70ea11ae5f0a23329bdaa135e", "ref_doc_id": "a8b0d88d5b36c608bd17ba94c3d8725687598621"}, "6a95e527-81b6-4ace-b28d-188312a311d8": {"doc_hash": "d884a76505980c3a24af3c7f102c20dc4236c1afe866133f16d875d6f1544164", "ref_doc_id": "a8b0d88d5b36c608bd17ba94c3d8725687598621"}, "ea83bedf-4e23-48ef-90ac-a8d8fee9199d": {"doc_hash": "d32d30961b8e1ca79aa02f71c288252d05fe8e15b60b53fee5222a90b4676f5e", "ref_doc_id": "a8b0d88d5b36c608bd17ba94c3d8725687598621"}, "31c9348e-b245-4e60-8fcf-07ef3b249972": {"doc_hash": "1e43f392c18b7ad70ceb84eb50a535bb6579ad9a96f48cc4ab558c8c6b7bed2a", "ref_doc_id": "a8b0d88d5b36c608bd17ba94c3d8725687598621"}, "32b0ff2b-179a-4d0f-b13e-04606173c873": {"doc_hash": "8c61bef976bdf1e2bc387045bc5d7d6f60816078ef33f47c769dab6ee7c8de76", "ref_doc_id": "a8b0d88d5b36c608bd17ba94c3d8725687598621"}, "6fd9109a-1064-44db-9a4d-322b8dc61f06": {"doc_hash": "a309f11dfefd730a16be5b7a5f2f2cfa22a569eb902bb83b5df0730c7093fad9", "ref_doc_id": "a8b0d88d5b36c608bd17ba94c3d8725687598621"}, "588e93ae-7779-498b-a2d6-5ea826be7438": {"doc_hash": "60306ca2b9fc4921539f7d3e31e07fc4099c6705f0d5910b3f114fa3b0ad931d", "ref_doc_id": "a8b0d88d5b36c608bd17ba94c3d8725687598621"}, "9ab24707-8f1b-424f-8815-ce9459e85c38": {"doc_hash": "7c070a4d1ecc1ea25b8f8d1720d81ca1e818fbc3466928e78ccacb23732e51ff", "ref_doc_id": "7505abbee31c559f0025f65372704047017212c8"}, "10502fea-fc82-4256-bd6d-15b0d5ff9b60": {"doc_hash": "c63b143b08f529e59665d494ce6a171c7b3f9a0590c5ff1adbc0cce913238210", "ref_doc_id": "7505abbee31c559f0025f65372704047017212c8"}, "5fb96297-e08b-429c-bdfc-0293dfa774d0": {"doc_hash": "b86eb17c38a3d44eb521139926e37f24f61f72e50acb9f7ed6c2ec2266ad3f45", "ref_doc_id": "7505abbee31c559f0025f65372704047017212c8"}, "0f2616d1-97c3-463f-a139-1d31fa67b657": {"doc_hash": "6275193f932bbeeabef804fb7ce0e13e1e49f8830f5d926bdd706d3fd99c2c2c", "ref_doc_id": "b27cff73a988f8ababc8bc7a124d917a53cc0ee2"}, "f61d9cee-27e3-4e07-aa03-523729fac921": {"doc_hash": "f3f7c3c14451164a9338d53e688a05edddb788698c7f7b676da47e051f7c0070", "ref_doc_id": "9e1bbe9d483905cbe766763665179dc905c7ddc5"}, "2aadae41-964b-444b-bda1-4ad41cedd970": {"doc_hash": "f800238bc5672db9c6e9f64f9c4a7ab6bfa4af8f697a8ec141a47d5f8c834c8d", "ref_doc_id": "7b3be480ff4d91293c8afb78d0b934fa45fd76dd"}, "9c8fe68f-cfdc-404b-9bb4-a3ab750031f1": {"doc_hash": "e9c3c7a1ba67af25e74098f724ff84f36fbe95307addee24c9dbf134b4b1f177", "ref_doc_id": "7b3be480ff4d91293c8afb78d0b934fa45fd76dd"}, "7757714b-f2d2-415d-ab8d-cce69bd6c14d": {"doc_hash": "708df8f5918160c693de23266eb4bdd3a7a869caf950c413c2f5344ed10df39e", "ref_doc_id": "7b3be480ff4d91293c8afb78d0b934fa45fd76dd"}, "1df939de-189b-4020-b8d2-daa338d006cb": {"doc_hash": "e7f3c8a048ac77686567ada18c5a5aa507d14ca9baff189c57f7ba66895ba1dd", "ref_doc_id": "73ca6dcd7e26b579839f7ef9e494553f67e4b333"}, "75a8b802-1fcb-4d4e-ac4f-076a94d38179": {"doc_hash": "9097796f3a21c25753e44ef5181f0fe8caae79dcc8a818cf932f8d5806a48482", "ref_doc_id": "73ca6dcd7e26b579839f7ef9e494553f67e4b333"}, "71e8519d-274c-4114-b43c-d5a0b0b802b6": {"doc_hash": "a10ecabf2842217d1df4502001c0c72d6a6e1f35f9ac31a160e874af55233aa2", "ref_doc_id": "bd4b7f82433b47bf6c54e0ef42cd27a0c6a9480b"}, "9ce32931-625f-4dbd-9679-683126f65bb9": {"doc_hash": "f5d1272ddacbbe0c8586e92bbac06ebe90b5aa9a1d637dfc91db7063a23a454b", "ref_doc_id": "d01e89941ed69e1c2f32bf1b891f6c52154560c7"}, "6fea5dda-7ce0-427a-a21b-cc01d338035c": {"doc_hash": "a2e59b367d374c4f4bdb45e4fcf51008b48240adca56c17f2a12620398bc635f", "ref_doc_id": "d01e89941ed69e1c2f32bf1b891f6c52154560c7"}, "6a1f40c0-b135-4c90-8283-b0a8e829d90c": {"doc_hash": "5f406dc2e3ed1280f668326a6bd02634cd5fe23c6a6c182c5544aedd4a9e3f94", "ref_doc_id": "4278dfca8afec311f9ed2b84418432aa3410e59c"}, "b41100e3-90e4-4c5f-868a-00b6d6b914e2": {"doc_hash": "ef99861271b76953bc3816a6bfd505f9d34d1369342dfec29bcf951bc9dc5380", "ref_doc_id": "4278dfca8afec311f9ed2b84418432aa3410e59c"}, "9f431172-3fdb-4a15-98f2-9feab66c6d31": {"doc_hash": "2699329a93f8b305489b3a69b4ea9286f3f4950ae8677291a0ac876c81156335", "ref_doc_id": "4278dfca8afec311f9ed2b84418432aa3410e59c"}, "e64affda-3bff-44e8-b9d8-289e39a714fb": {"doc_hash": "03379e320afe9a1a82149b4329e20da93beb2f1c42e32d9ac94f3d5cedb278c4", "ref_doc_id": "4ce6409ac93c347526d700cb7e4966776926ff7f"}, "090d2ec4-817c-4cc3-9468-06fb9486e8ed": {"doc_hash": "d0b57d0f9186388c500dffb6209da368a7db7fc378e72a695d27fb184f07ffaa", "ref_doc_id": "4ce6409ac93c347526d700cb7e4966776926ff7f"}, "d6d9f561-8750-4631-8db2-38ee9b786328": {"doc_hash": "f26968003a38d0ab6d9fb19cbd4595763afe6029bbf32dd2099c63df6d56c01a", "ref_doc_id": "4ce6409ac93c347526d700cb7e4966776926ff7f"}, "4a549acd-5ff9-4133-87b3-a02de44917bf": {"doc_hash": "d61bf70a41cd6886a2da051be37b058f9da7ca2fa34ce351377ab29d34e49321", "ref_doc_id": "4ce6409ac93c347526d700cb7e4966776926ff7f"}, "8146eb18-3b8f-4897-8541-5bb8b9c41195": {"doc_hash": "c0ef2a502ed0b2fc02105d7109d22feb0b6222d61cc3952c89ae7c1230fa836f", "ref_doc_id": "4ce6409ac93c347526d700cb7e4966776926ff7f"}, "fc1eef6d-6b7a-4649-9892-d47f67043083": {"doc_hash": "1359a2527738ef108f958c6599118f23c300f04004015c49922079d112faa647", "ref_doc_id": "4ce6409ac93c347526d700cb7e4966776926ff7f"}, "3afb0fcc-56b5-4290-b8da-2d046ce08adb": {"doc_hash": "10ee016a8b45d764e88fc9b7dc0b5a100a3f14bf9dbfa638812fb53818c01f10", "ref_doc_id": "4ce6409ac93c347526d700cb7e4966776926ff7f"}, "e4a1c06f-98de-4112-a3e2-21ce20a0fed7": {"doc_hash": "3d02bd5cec266b5a03f127ff633c92c5ccc9c8671fa8310b95674c0890cfe7c9", "ref_doc_id": "4ce6409ac93c347526d700cb7e4966776926ff7f"}, "8bed5728-b2f6-43ee-add9-b7d08bf8ab63": {"doc_hash": "c33687e96ea819466d587b4921e0f847a7e54fa2ef352981fdfe79e9c4ffaaf1", "ref_doc_id": "4ce6409ac93c347526d700cb7e4966776926ff7f"}, "513c758f-b166-44a4-b069-bf1683d8ed9d": {"doc_hash": "5defe39c35deabfcd9a253044dc34e444cb9e1e437f589df26e8a3aa277f9fec", "ref_doc_id": "256e47d73d4bf60aca3133493ca95abf91fe00e4"}, "064701cf-f27c-49fd-8f92-7ac9e9ecd22e": {"doc_hash": "e803b85f0d58fd5b80d6a2ed564b6f6500093e509d2371041a977e29df7da5a1", "ref_doc_id": "8eb314b0333c4ba493793dfd9ba2ce893a6547b9"}, "98c87eed-6dec-4834-9563-836a8d588d43": {"doc_hash": "d447b768cde2e144583a5242ca27b86e850799964b84dd6c94f3550a428d6642", "ref_doc_id": "8eb314b0333c4ba493793dfd9ba2ce893a6547b9"}, "92e9d97c-933f-4bfc-bf23-935d8e086e53": {"doc_hash": "e7ae3eef54bdaf7550efc863b9989264aaefb81358739dbc774948555f7360b1", "ref_doc_id": "8eb314b0333c4ba493793dfd9ba2ce893a6547b9"}, "46190a61-b40b-4acd-86ab-a2b1477f0297": {"doc_hash": "0dd01ebee78f133ab211e59185e04608ca7d8adc22fc12374c02fe62115e64b8", "ref_doc_id": "8eb314b0333c4ba493793dfd9ba2ce893a6547b9"}, "5e7120b2-2329-4415-b352-e6dd30b6bc60": {"doc_hash": "542527d0ca68a63efc2c8faec4bd64e627d5927774a5b4bb2de3ba39f484347e", "ref_doc_id": "8eb314b0333c4ba493793dfd9ba2ce893a6547b9"}, "d4985e12-8ce8-4490-ba07-e6c0fb242385": {"doc_hash": "2a4c1c4abaf148144f5b91ccdd91cddcb17885af0afff5757af41f9cdbf38831", "ref_doc_id": "061b771be8917b72b2a8d207265306431741a933"}, "fa091c86-da71-4db5-8a39-96e46927a80e": {"doc_hash": "5f3b14b10ef3192795b97b154c1637010737c8038bb40459660fe64637d1274b", "ref_doc_id": "061b771be8917b72b2a8d207265306431741a933"}, "08f3f658-aa2a-46e0-94f1-49361114e4fb": {"doc_hash": "664cab361ddff319d846292201a601ceb8c5e8a09aed236f8c719d836f226e75", "ref_doc_id": "061b771be8917b72b2a8d207265306431741a933"}, "634183dc-c705-4b6c-a9ed-23e037d32a1d": {"doc_hash": "ebbdf7d78b06f591580b25dd1c0dc6a3bdf70adddd71a6ad7b6666766fac5026", "ref_doc_id": "061b771be8917b72b2a8d207265306431741a933"}, "3cad261b-5c1f-4af5-b4b3-b0783a1f0f1c": {"doc_hash": "b8ef6c0d08b56ae1bcfa4b265dcebedef7dbfcbddcf43440dcd21527d02f241c", "ref_doc_id": "cfde068da88f58b217a6f3fd0338e9d045465c51"}, "24376799-52a9-4aea-9856-db549c3aeeb4": {"doc_hash": "27bcd094b9eb279f5d37f23c4c84d78331b1dee37f32d3ad7da3e15d812157c4", "ref_doc_id": "41be55a09be5033f2eea524485b22120018082ff"}, "b2a620fa-d63b-4c66-995c-b4f9987fd4a0": {"doc_hash": "6fa80e6e2463eabd1ff9e70b7013def609c85d6fc775ce7754564551e81ace66", "ref_doc_id": "41be55a09be5033f2eea524485b22120018082ff"}, "8a9ffdcc-9446-4a90-9854-b4c52eb7bf0a": {"doc_hash": "9ea13311e575d48d4f64927927e40ad202e8427b3dd22f650d992b823ad45bee", "ref_doc_id": "41be55a09be5033f2eea524485b22120018082ff"}, "52e6db04-5d5a-41c6-8448-030dd8a0db5b": {"doc_hash": "298339d122ea6c0dc6d5ceb3bbe24618e970c589cf3871ad5cc45ede8fda513d", "ref_doc_id": "6805e171a6f0e8219bd991755d52c61da3691993"}, "bef86cf0-ead4-4ee6-aaa0-fb44d08a3072": {"doc_hash": "8bb40deddead0f54b76f6812a3200ba35db94c7795875100723070f2ef15dadb", "ref_doc_id": "6805e171a6f0e8219bd991755d52c61da3691993"}, "9b6f5e50-0935-4187-a778-91c13f2f4b5f": {"doc_hash": "502ebb124510e0039e159de88fb3b2b7261cc8b4a5e3d94036bb49ba865299b9", "ref_doc_id": "5f666870ca123e44ec5df8d692ff862658fc6a3b"}, "2d6d4d76-a6fe-4e29-9d38-3dd82ee7c840": {"doc_hash": "44a85eeca99f87013b5954bd72c463d8b3c8cdf24733b41fdcd99a90a611cf86", "ref_doc_id": "5f666870ca123e44ec5df8d692ff862658fc6a3b"}, "c61ab50e-2f00-46e1-bc94-0f154917aad2": {"doc_hash": "0e233865170c1ef6f9e8c6d0ed2953251b667c557b0385104dbf897d0bd560a2", "ref_doc_id": "6fbb72630bb9a26289f6a3c5fff16389522ba38a"}, "8b6c685e-68dc-400b-b676-3c6dc04a1d9c": {"doc_hash": "18ba55cf082224299be549a9982bc9fe0f02d83e914a98e29b5fc00e658a26a6", "ref_doc_id": "6fbb72630bb9a26289f6a3c5fff16389522ba38a"}, "9f51a5f4-4861-4639-a825-513eec5a5155": {"doc_hash": "7a0011d43221330f809271161be788084b6737273076b250b4a9664253ae82eb", "ref_doc_id": "6fbb72630bb9a26289f6a3c5fff16389522ba38a"}, "1858abab-4a6f-4c25-86c6-b1176278f366": {"doc_hash": "292a7ac578e852b7ac08f22b1badc8eaec7cb36da62cb83cd4fd6fe49f160016", "ref_doc_id": "6fbb72630bb9a26289f6a3c5fff16389522ba38a"}, "b27e9a55-8ca4-408c-9e9c-e9247c4acd88": {"doc_hash": "274d2a10ba5140c1699f1feb4444277d5c17c0cc14457c16fcfe358d53dc0102", "ref_doc_id": "6fbb72630bb9a26289f6a3c5fff16389522ba38a"}, "95923a71-3e56-489e-a57e-aee7f7ac1425": {"doc_hash": "6f3dfeb7336a655b33ed9664387f33d6d7d87370f0bba83f44ce85926e9d041a", "ref_doc_id": "6fbb72630bb9a26289f6a3c5fff16389522ba38a"}, "1431613f-6184-4cd6-8407-a758be8c2499": {"doc_hash": "103ba7488f2a19092804b0aa05b54122f462a51ec43c6585f55951d0411713d8", "ref_doc_id": "91f59ef2c83163e9e6de39c67a5f232678f4dde3"}, "85cb63ee-0a33-47b7-b5b9-b01e365027c7": {"doc_hash": "7ad862fe1f341142d921b2a59303e554435427998f06568c271c1ab1ac1084c8", "ref_doc_id": "661e95e290a052c60fea6cae09903d0bd8cbf614"}, "eb48e803-bc2d-4658-b795-e4ef7500e931": {"doc_hash": "404c1a65faaa5b2d1f1b2e4f98ba350a833d347b630469f8a1965e164179662d", "ref_doc_id": "661e95e290a052c60fea6cae09903d0bd8cbf614"}, "e4ef987e-74a3-4b62-9849-400f8885ff74": {"doc_hash": "c0c5277354764896b854c4b2e54bc07c92ae164112f8a5b5bb167534821b02b9", "ref_doc_id": "661e95e290a052c60fea6cae09903d0bd8cbf614"}, "5782aa45-2481-4e62-9120-218779f3e241": {"doc_hash": "caf0125b0925efbac497ee93fa14678ebd32510142489a3d2f529c1aa524e7d8", "ref_doc_id": "661e95e290a052c60fea6cae09903d0bd8cbf614"}, "9d2600a8-32e3-4d7e-b8ab-48b3605d8a20": {"doc_hash": "a74cd60c4cc45231cc71549ef2be27506c57220104bc1073dbe62dd7d0b24412", "ref_doc_id": "661e95e290a052c60fea6cae09903d0bd8cbf614"}, "745c3709-7c2a-4594-a51e-1d6ca0b4677b": {"doc_hash": "84ab01fc611fdb2780a95fb49aae3fa334a3d57241bf1ac42613a2b45100166e", "ref_doc_id": "b26356cf8a0228c5c69c8a0ea6a4d4409e64550e"}, "c2404728-8f37-4fea-ae7b-b08afc6683a6": {"doc_hash": "78d3d5da3eca46d642716e16455082f98d1ea8315b372a54154e2c34224d4406", "ref_doc_id": "b26356cf8a0228c5c69c8a0ea6a4d4409e64550e"}, "ebe4222b-23f3-43aa-9cb3-fe53a44502f5": {"doc_hash": "9dd8dd66c1e23dac312639c6e2cbefea6afa6a05647e150b137615fa2f46bd0c", "ref_doc_id": "b26356cf8a0228c5c69c8a0ea6a4d4409e64550e"}, "a023565d-8c16-472b-91c4-6b6c9b177a9c": {"doc_hash": "deefc7ae0657940caad79e30a237ef0755e19834b9d22c7309395f05b93b2c07", "ref_doc_id": "b26356cf8a0228c5c69c8a0ea6a4d4409e64550e"}, "f3afce35-a7cc-4bf3-84de-552d074b2704": {"doc_hash": "ce24cc728665fe69428898b031429074a1e112790e490b82c257054ce12154cd", "ref_doc_id": "b26356cf8a0228c5c69c8a0ea6a4d4409e64550e"}, "897a97ad-1d55-4ece-bd2c-2da03d5c5b81": {"doc_hash": "e213611eebd65901da98304e00a724fd3391136fd344bbbaee3f2afa56143764", "ref_doc_id": "f5c8b41f6f9d156b76b0958190399db8535aca38"}, "cab8e801-cea7-4ac9-a126-ab4772a874d2": {"doc_hash": "d6604492c4e8c63fc3cd9f8e54e7c374e151568b872ca5bdc819abdeb7797e2b", "ref_doc_id": "d2b8ca6e684ba428a41e44ae62a651f9c310dd67"}, "94109ae1-2579-42ab-a183-aea84e1b5eec": {"doc_hash": "8e6d9052da1993267b2cd27a71c2e8f0db3789b3362ff0ab53e900a43974894f", "ref_doc_id": "a61f1b9ded63c52a5b65dd3b430aca551f7ea64e"}, "630bac84-83af-4d67-8636-ac73b69bc032": {"doc_hash": "72ca44c3369bfba0ab22de8fbc282b6dc371548898f176fb7f5a94f7dea1e047", "ref_doc_id": "a61f1b9ded63c52a5b65dd3b430aca551f7ea64e"}, "133529db-14dc-4442-858b-f447790642d2": {"doc_hash": "0521c7c8b0b250517282b7c29d65f51fdc0f3a0a48641a72119dbc0d35f31f80", "ref_doc_id": "a61f1b9ded63c52a5b65dd3b430aca551f7ea64e"}, "8afd1714-d93b-4b5c-80c7-158743d48d55": {"doc_hash": "8108a6f03d7dbeab4524a7165711eddbb7ebb564345d87aaf47355c5bab0f693", "ref_doc_id": "a61f1b9ded63c52a5b65dd3b430aca551f7ea64e"}, "0f156819-9fa1-4c47-b5ae-7af81312b8eb": {"doc_hash": "46e9bacd964063cb2a06272a39bd7d0d386e9d0df0c965449f5c6bd4f48e4b4d", "ref_doc_id": "a8f7760003ebeffb38762f85cf9e68967cfb0390"}, "9414ca3e-ee26-4c8e-9628-b1f871935774": {"doc_hash": "3b438adef6d1fd05316a06192a8cdf96b4af244f447aa04f84f79b147903e65a", "ref_doc_id": "a8f7760003ebeffb38762f85cf9e68967cfb0390"}, "3484cf56-6ab4-4b07-b08f-ef0c21c64fea": {"doc_hash": "2659b01ebca87a0f0b8c73f3a239336b85d6ea1837ee082b9c2259b2a828434f", "ref_doc_id": "a8f7760003ebeffb38762f85cf9e68967cfb0390"}, "7f582b2f-6ad8-4673-aaa1-70b52fda855f": {"doc_hash": "c5c60639e2332b5808f0f20de76be62499fcce8f1f97353620e4ddc930ee69f6", "ref_doc_id": "a8f7760003ebeffb38762f85cf9e68967cfb0390"}, "acd3479a-cedd-4375-90eb-1cf13d4742dd": {"doc_hash": "9e732ace30b998db9f096a4a866c927aa834405327444f31ec6d0dafdb0a9b4a", "ref_doc_id": "87a47d6a0c5bbf75f4b4ae2b756f55faa4b4c085"}, "2d44dc29-e016-464a-a34b-e47c6b94d8ef": {"doc_hash": "b49864c001621fffd8a4027f697f9cebba537fe6cf53718799bb2404d14c661b", "ref_doc_id": "f56c737c6eb4dcf2a1479c5284b8ed6f12192a89"}, "55336aa0-04fb-49b3-87ab-650f8d33ce0e": {"doc_hash": "7003ef21aad40d102d6eea3af687757dade409adda1605ab0bb575660a5e4fbf", "ref_doc_id": "f56c737c6eb4dcf2a1479c5284b8ed6f12192a89"}, "9939af94-075f-441c-9295-1806e53fdc0e": {"doc_hash": "fc15ce7a9860375f003474bd0e7b9929b5a0d0b0c6a9fd9a2b95d3012b3420f8", "ref_doc_id": "f56c737c6eb4dcf2a1479c5284b8ed6f12192a89"}, "a0e1da0c-1696-41a4-9058-7bf3bcc7a662": {"doc_hash": "def21498a78b1e9ee4b0d79c44f4f37ff4787bc3e3786bcefb711708a488dddb", "ref_doc_id": "c3bdaeb0cd41c040f794a6e5a409bba8c6e863ee"}, "e5c46faf-322d-4a47-bc3c-b60c12313b7b": {"doc_hash": "39c741e68c8459c8dc10c2892f7c260c6e3bfdabede468068002f9e86b8b7d9f", "ref_doc_id": "c3bdaeb0cd41c040f794a6e5a409bba8c6e863ee"}, "f805629b-f50c-4e5b-8540-c03d920557e6": {"doc_hash": "6f2347afeda7ee06925b8ed14566747b20cf97a50e3175821bcb869394bf669d", "ref_doc_id": "c3bdaeb0cd41c040f794a6e5a409bba8c6e863ee"}, "1c6eb5e0-fa4b-4536-8bdf-767fbcaea873": {"doc_hash": "de528c0c090508f65296eed3962831e6da614a501a9c7289d8e42f2a6db16906", "ref_doc_id": "c3bdaeb0cd41c040f794a6e5a409bba8c6e863ee"}, "8bd6f963-937c-4dba-99ff-f6688b0a6f96": {"doc_hash": "0d93dcfa1d3bba7a88b0cc62f0c49a1e9222148eb18c6da7c3029467dcfafb9d", "ref_doc_id": "c3bdaeb0cd41c040f794a6e5a409bba8c6e863ee"}, "63ab863b-90a5-4803-8ad8-53ccdead4564": {"doc_hash": "9b107b20a73d40b29968071f46a4c46b9eedac18c996d92b0803484b6f96e332", "ref_doc_id": "c3bdaeb0cd41c040f794a6e5a409bba8c6e863ee"}, "53485845-fdbf-41c1-9c22-a62f10702217": {"doc_hash": "45a693c14ff235adae630647c58d03503c9e398a0c2c45a0d053080dd44261a4", "ref_doc_id": "c3bdaeb0cd41c040f794a6e5a409bba8c6e863ee"}, "cd6f70cb-50fc-437d-aee6-1ba3f42a64e5": {"doc_hash": "4c62cfe87b87a5d8e90507dab06d0c77ce5b231293860f457a264d469c8c1b97", "ref_doc_id": "c3bdaeb0cd41c040f794a6e5a409bba8c6e863ee"}, "647a49be-8175-42c0-93d4-daa2017f59b1": {"doc_hash": "0b8310e89889c2cbb0345cac9ba5d5860d2ee5f3fc51f462219b05de5f2ec8e9", "ref_doc_id": "99e4eaaeab428e5f1fb883e6f986f575634022a0"}, "f6b09623-6758-4468-ad57-389eb1806b78": {"doc_hash": "0c2ba5a465c5790d76e112182f8d08c5b6a6b6d7a4e2a347b6c240d94369b330", "ref_doc_id": "4181cecb5656f6d97e6fe95c16d230394483e0f6"}, "3d5787ff-5560-43d9-bfdf-b377ae29aa9b": {"doc_hash": "b5c747d74911855fe3495142a10a00798eab3e875c4b7770463f70720c2a85a0", "ref_doc_id": "4181cecb5656f6d97e6fe95c16d230394483e0f6"}, "870c731e-f4d5-4f5c-a0a6-b0ea65d70c76": {"doc_hash": "7640869ca90da220fa567855c5462ab26bfe9221ea1bcc2894e98e7d584a800b", "ref_doc_id": "4181cecb5656f6d97e6fe95c16d230394483e0f6"}, "23bb79d4-8a1c-4eee-bf37-5116dc022152": {"doc_hash": "f1636c80d891b019624e9dde1edcf9b052d989afe1889981820bef87ecc4bbbe", "ref_doc_id": "4181cecb5656f6d97e6fe95c16d230394483e0f6"}, "6596966f-9876-4c20-98c3-56912e7524f4": {"doc_hash": "3cf9fad314031aeadad6daeb609f232236986cf024f2202776c0d0b2f8f97d42", "ref_doc_id": "4181cecb5656f6d97e6fe95c16d230394483e0f6"}, "df91fe72-0f65-4782-9610-e9af6c076d95": {"doc_hash": "a543b74c966b36b1f967539ddef2c60a2be143e1c034a34cfc1c5f7b8d2de8cf", "ref_doc_id": "7f188176c5b0c533ec648e7c2ddd982007e138a6"}, "3ca9b59f-e9fc-468e-9855-cda32b881891": {"doc_hash": "bc76a2358e904f88351c5a704d8063c39f1c9cfd7eedaa64da05c64936a34ae8", "ref_doc_id": "7f188176c5b0c533ec648e7c2ddd982007e138a6"}, "c69c5b53-7368-4676-b0ba-c7c00fb8ec65": {"doc_hash": "4afeb07907509a9dad0caff9ba6c639d9e74f0ea263d6242bc3e8069ae30893a", "ref_doc_id": "7f188176c5b0c533ec648e7c2ddd982007e138a6"}, "9f3557da-bc43-44d9-b227-0e835ab6572f": {"doc_hash": "5fc023892f570a9631f43376ffcf31b2227e96d2a160097514b79d7a50f8b64f", "ref_doc_id": "7f188176c5b0c533ec648e7c2ddd982007e138a6"}, "27dfda83-9fb4-45eb-ac9c-e24b1eef45d9": {"doc_hash": "4edad36182668c9f6c60c6efe80db995044280f316afdeec8770a0e6bf0367ad", "ref_doc_id": "18ca6dd0c5e075e92771b546166d5a4a04901750"}, "d00091b9-f77f-42d5-a0e4-00940a535b6e": {"doc_hash": "2357ffbd1e25fb7262863158779cdac9d7755504b8bde61fcc9014fdc0fac59a", "ref_doc_id": "18ca6dd0c5e075e92771b546166d5a4a04901750"}, "4f7b4ab6-e358-4bc7-b285-8bb7d7444066": {"doc_hash": "08939af0d539f73d89ff18101a2a221f50b0fa08cfa01df44d6ab538f42e1f20", "ref_doc_id": "18ca6dd0c5e075e92771b546166d5a4a04901750"}, "641477e8-6b91-4146-b924-20efc0b67d20": {"doc_hash": "00724154a90331ff3ef5f0d3e659ffb2a99ce99f3032c0e1097c6bd25519930b", "ref_doc_id": "18ca6dd0c5e075e92771b546166d5a4a04901750"}, "2d0b7306-758a-4b55-84a5-e9e160c786e9": {"doc_hash": "774c502d48174a412167c480252c5ab348e6768051b43617227701c91c66822d", "ref_doc_id": "18ca6dd0c5e075e92771b546166d5a4a04901750"}, "6d8345cf-d544-4caa-baf5-7a4124079b6a": {"doc_hash": "29f388aa9bd78423798ec7c94625d219927ab59e96e5622b633ecc191d867268", "ref_doc_id": "18ca6dd0c5e075e92771b546166d5a4a04901750"}, "0196feee-0d0b-4e1e-ae9d-a03d778e57c6": {"doc_hash": "70469fbafba376e17a213a3e8d6109819d2427f323ae0f13d416d2783b4a36f1", "ref_doc_id": "60cd93963c8cfc493d1d3d82cceac0f8dcccb07c"}, "4373b93d-8bb3-44bb-b3d0-fb01e5fd9dbe": {"doc_hash": "bdbea652ee229d901f70083f06dee9833a9e12c69d5360da6fa01810426f1345", "ref_doc_id": "60cd93963c8cfc493d1d3d82cceac0f8dcccb07c"}, "92270c9e-30fd-457e-aae2-9a4e96654fc3": {"doc_hash": "fa0e9509c3b4c96552dce6032d7a5ddde3426f6dfce6291e495f49527538d49f", "ref_doc_id": "60cd93963c8cfc493d1d3d82cceac0f8dcccb07c"}, "19cb0862-8e5f-4911-b20e-24099c72754f": {"doc_hash": "4f1c83a141cc6a655e4810874d42519a765dc441f1443f5446e64f57d9323255", "ref_doc_id": "60cd93963c8cfc493d1d3d82cceac0f8dcccb07c"}, "cf355f47-f8d2-453e-941f-3d4886ebbde9": {"doc_hash": "b0e96e0b951f7d7ecc0fce8d4ee1ddf8d4e2da1c2b39f92c377bb0acdcc66b7d", "ref_doc_id": "60cd93963c8cfc493d1d3d82cceac0f8dcccb07c"}, "95539202-50ad-4499-a3fb-b75198d68226": {"doc_hash": "f475dcc5c5c88633df63b43850b0c76782a536245df5994dff55dad9ddd056ff", "ref_doc_id": "08a0a4e684a827f239dad458b6bcfadea40689eb"}, "2a84702d-de0e-45d4-9dc1-9d2df0e45eec": {"doc_hash": "ef767b513464db8df21d57346101fef3dd1cd7a8b560c79faf7e2637c38f0914", "ref_doc_id": "08a0a4e684a827f239dad458b6bcfadea40689eb"}, "969f5205-b458-48e8-93a9-b712aeb5db4c": {"doc_hash": "220f6ec8e9906a9096aa901ec1746694077381453ffae37d2fc1d351a15f1233", "ref_doc_id": "f7eb9f1294c1b6cf964fad9d6e5bbb9f602532d5"}, "6689c015-61ae-4cb0-a2f7-3f8e0452d3d7": {"doc_hash": "26a6b2116a886edf36918304bd07565be9401a46fa52e734f111f41ffc5e09ff", "ref_doc_id": "f7eb9f1294c1b6cf964fad9d6e5bbb9f602532d5"}, "ed319e02-68ac-412c-a2fa-132513007208": {"doc_hash": "f2a26368cff15811a5fc153636c0ec03b53349ab1aa5fd0389a4a1210b975cdd", "ref_doc_id": "f7eb9f1294c1b6cf964fad9d6e5bbb9f602532d5"}, "b5792900-80ff-40c5-b091-124585321dc1": {"doc_hash": "c9aa40c9150dbd168dafafcd85515f33cce59c9ec4fc200886223fa8bc554095", "ref_doc_id": "f7eb9f1294c1b6cf964fad9d6e5bbb9f602532d5"}, "40fbdf84-5002-404d-8396-f67240cf73d7": {"doc_hash": "1b8e02baa93a0ee2124f2ef11eba37ba6042df974051c6c83a245837294bd6d1", "ref_doc_id": "f199c9c0cc32df3b7956dd89db0f6a575159a0e1"}}, "docstore/ref_doc_info": {"61998a4efcfbdb989f5c480c08909d667884df5f": {"node_ids": ["03c62b4a-1bb6-4909-a5c2-c0ae38b0c0dc", "38046b9f-ee17-4df9-ae8f-b89affb613c1"], "metadata": {"file_path": "src/pages/bugs.mdx", "file_name": "bugs.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/bugs.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/bugs.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["button", "covered", "contracts", "rewards", "program", "bounty", "smart", "provides", "import", "overview", "anyone", "brief", "finds"]}}, "10dd8b62a3045dca49137da7dcb6a4c4121c8a18": {"node_ids": ["c6b15143-6f20-4714-b491-efa94198639d"], "metadata": {"file_path": "src/pages/changelog.mdx", "file_name": "changelog.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/changelog.mdx", "header_path": "/\ud83d\udcdd Changelog/", "customer_id": 1, "source_url": "src/pages/changelog.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["announced", "plans", "migrating", "announcement", "ensv2", "march", "scaling", "brand", "improving", "roadmap", "internet", "entire", "registrations", "involves", "addition"]}}, "69298715a5aec4e7656a839af9af420b37df7943": {"node_ids": ["61e92ba0-3a4f-4269-82ea-f3c88cee56ae", "58b1a582-76e7-4502-8aca-88300dfa69db", "c54b0326-7de9-4697-a837-7bb2ec11f4c8"], "metadata": {"file_path": "src/pages/contracts/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/contracts/index.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/contracts/index.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ethereum", "responsible", "storing", "contracts", "these", "smart", "resolution", "associated", "managing", "information", "service"]}}, "6da91feba0c3e5a64e590639831f383ebb89e4e3": {"node_ids": ["acae3053-2189-4bcd-ae73-bc16f2f0ddab", "7dafaa9e-5384-4ec6-8a1e-b4338bbb1a71", "7918dc0d-ede1-474e-ae53-dcdb4e6fbbae", "6079b638-a814-4cf1-acca-5648dc5a3bc1", "fc068f04-1dbf-4625-b704-625676e90a9a"], "metadata": {"file_path": "src/pages/dao/constitution.mdx", "file_name": "constitution.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/constitution.mdx", "header_path": "/ENS DAO Constitution/", "customer_id": 1, "source_url": "src/pages/dao/constitution.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["infringes", "retain", "ability", "against", "ownership", "rights", "discriminate", "enact", "governance", "infringed", "users", "change", "names", "shall", "unfairly"]}}, "3fc0ffd26c436ca41bd28f1813768bfcef16b09a": {"node_ids": ["e35370e7-b94a-4fb5-9d93-b4aedb421d7e", "04dc5d67-8948-4cc0-8216-a5167e8da5a1"], "metadata": {"file_path": "src/pages/dao/foundation.mdx", "file_name": "foundation.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/foundation.mdx", "header_path": "/The ENS Foundation/", "customer_id": 1, "source_url": "src/pages/dao/foundation.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["company", "limited", "foundations", "directors", "details", "foundation", "cayman", "incorporated", "cannot", "companies", "shareholders", "dividends"]}}, "b0b1369dd98c88d4727707bbddb7b0fca7294aa7": {"node_ids": ["f962702c-4f05-4779-90aa-80655c661b30", "dc7f1064-3d47-4e0a-ac2d-5cce27976b19", "0fec98a1-2795-40a9-8133-e028d7adeb09"], "metadata": {"file_path": "src/pages/dao/governance/moderator.mdx", "file_name": "moderator.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/governance/moderator.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/governance/moderator.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["author", "moderator", "modify", "advancing", "advanced", "proposal", "documentation", "draft", "below", "handling", "moderators", "checklists", "follow"]}}, "b574a585df475c28afa32c974d576b6d6a2b705d": {"node_ids": ["ca38ab31-3f42-468e-acd9-e18a0ca6df0b", "b844299e-9222-4043-8e28-898b2dc8dd61", "a62d8855-c65d-4fb2-97d1-8dfb95207a0f", "ee1be138-7899-46f0-a67f-d0e5f1feeb49", "db238dd6-2b8f-4d07-95a4-b6ae66249de3", "37bab68f-f7d6-4f4f-8a4a-074177cd4775", "1e28483f-5643-4bfb-b854-73ca1cc0f698", "3aa6e25a-019c-4643-89fc-a6fd5b448bea"], "metadata": {"file_path": "src/pages/dao/governance/process.mdx", "file_name": "process.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/governance/process.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/governance/process.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["living", "document", "advancing", "suggested", "developing", "enforced", "modified", "overview", "intended", "process", "governance"]}}, "7487535ef62920a2375d26873895825683379d42": {"node_ids": ["46e3229f-8619-460f-87c9-7aa8ba490dc2", "1411cad6-14f1-47fe-a5a3-ceaa6bd320be"], "metadata": {"file_path": "src/pages/dao/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/index.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/index.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["community", "protocol", "manage", "twitter", "governs", "welcome", "support", "landing", "register", "users", "context", "official", "where"]}}, "a994d5a2080393d753842c17f9c5b45642c990dd": {"node_ids": ["a35ca2c1-5266-47a4-9c39-67aee592452f", "ab0f1a2b-f99d-4779-8fb3-59e295bd1c00", "b849f16d-d38d-40b0-9b25-cfb3d2d30c97"], "metadata": {"file_path": "src/pages/dao/proposals/0.1.mdx", "file_name": "0.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/0.1.mdx", "header_path": "/[EP0.1] [Social] Proposal: Transfer ENS Treasury and Contract Ownership/", "customer_id": 1, "source_url": "src/pages/dao/proposals/0.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["contract", "taken", "ownership", "transferred", "abstract", "treasury", "planning", "launch", "transfer", "recent", "multisig", "summary", "powers", "governance"]}}, "7f18dfee12840fe64a2c0aa664da0dac4637e691": {"node_ids": ["03d836d0-529c-420e-ab9b-37464f0afa9c", "7b940807-0627-4ecf-8574-438539aa4227", "1eae0915-0f98-49a3-bb3f-8ef6bc111a3f"], "metadata": {"file_path": "src/pages/dao/proposals/0.2.mdx", "file_name": "0.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/0.2.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/0.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["primary", "contract", "tokens", "accounts", "amended", "multiplier", "despite", "owned", "receive", "another", "users", "airdrop", "retrospective", "owning"]}}, "69b9e7785bb4744be9335d95436149c8275199cf": {"node_ids": ["1bd58345-3353-40fc-9ab9-7241be175220", "04050e01-2864-4c5b-964d-f2c2a1576963", "f2354256-cc12-446b-a3bc-34178b45a141"], "metadata": {"file_path": "src/pages/dao/proposals/0.3.mdx", "file_name": "0.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/0.3.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/0.3.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["accidentally", "amend", "numbered", "proposal", "include", "funds", "passed", "returned", "airdrop", "previously", "token"]}}, "d6f4c38d58dda7420ae643988365bba43457efbc": {"node_ids": ["46fb3510-cb07-4a4e-8b11-e7702cf7bd75", "0239a6c3-37aa-4e10-8b07-50019abbbb99", "3867e942-0397-4790-b7e8-5514f5a012d8", "31e94a70-9b5f-4833-a92e-1ea8e4aa735b", "cfb3e109-90b0-42f4-be1c-035f31492470"], "metadata": {"file_path": "src/pages/dao/proposals/0.4.mdx", "file_name": "0.4.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/0.4.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/0.4.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["foundational", "groups", "creation", "establish", "within", "working", "related", "dissolution", "rules"]}}, "c4769c1a127b735d178499682235056c0975d9c3": {"node_ids": ["27057ce6-42e1-4c06-8cf3-adb8383cc697", "9361edb9-4bb5-4837-86c6-73613b861dcf", "db4ee585-edc6-40c4-aabe-4a97b2242877"], "metadata": {"file_path": "src/pages/dao/proposals/1.1.mdx", "file_name": "1.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.1.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["expire", "temporary", "start", "price", "numbered", "added", "passed", "premium", "names", "previously"]}}, "29081a337c70a6d9edcb403bfd0f2549c546b5cb": {"node_ids": ["701689bb-900c-4986-8bf0-7a5da4d167ac", "f75a467d-213e-4032-9836-b43b5686bcba", "f756ac5b-0bf1-4342-a1b9-da45c2c28a7e", "254a800e-2f47-46fe-8fd0-4575f4b61377", "a4b4c3bc-2fee-48b5-9717-98fb068e1274"], "metadata": {"file_path": "src/pages/dao/proposals/1.2.1.mdx", "file_name": "1.2.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.2.1.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.2.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["removal", "numbered", "brantly", "foundation", "director", "rejected", "millegan", "previously"]}}, "33eab29a6208ea20adda0029e292aa1e4bad8c0d": {"node_ids": ["191d23ac-e5ea-4a0a-ba19-b2b105c6f56d", "0a3a5a71-a093-4050-b3f5-a9af479b2388", "ea88d072-e97b-4a45-9d0b-0cf9ff4d4df0", "944d94d0-8256-438b-88f9-f4c1698e05c7", "a39def53-63de-4cd6-9c7f-4c963e6ec2c0"], "metadata": {"file_path": "src/pages/dao/proposals/1.2.2.mdx", "file_name": "1.2.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.2.2.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.2.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["selected", "numbered", "proposal", "election", "foundation", "director", "previously"]}}, "e446ffa9be76bd4fbb0083b99edd238093503be3": {"node_ids": ["fb0552b6-0f09-4087-9739-a1eb1cf49620", "ed7a25f2-1827-4c18-9281-7aa631bf8277", "5996d67f-7756-49a9-a206-d7200da7982b", "66eabab4-46b4-4595-8702-f55e980f8aa1"], "metadata": {"file_path": "src/pages/dao/proposals/1.3.1.mdx", "file_name": "1.3.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.3.1.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.3.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["request", "numbered", "budget", "passed", "working", "previously"]}}, "da3cc7157f3141d3cc7b02e90a09ad4267c5a610": {"node_ids": ["fdb2e910-6059-4df5-9ae6-92a6fd23f071", "0c787b74-9663-44c4-83a0-e32891bd48be", "aa87f8ef-fcc2-45ab-b392-ac48f2c47a60"], "metadata": {"file_path": "src/pages/dao/proposals/1.3.2.mdx", "file_name": "1.3.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.3.2.mdx", "header_path": "/[EP2.2.2] [Executable] Q3 & Q4 2022 Ecosystem WG Budget/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.3.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["start", "ecosystem", "request", "bounties", "requesting", "elected", "three", "bounty", "funding", "operational", "summary", "steward", "initial"]}}, "eb818dd928b07a7bceb167a8ea94af8e79f9a198": {"node_ids": ["9270c857-164d-40a3-83df-8d3990aae4b9", "943e91e4-b4a6-4a72-ba3a-7d422781037d", "afce39f0-25af-4d13-ab24-5ddbe0eebd10", "7cee1bcf-5e82-42fd-af15-a3e83fab96ef"], "metadata": {"file_path": "src/pages/dao/proposals/1.3.3.mdx", "file_name": "1.3.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.3.3.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.3.3.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["community", "request", "numbered", "budget", "passed", "working", "previously"]}}, "54696254683656e5b45d4f25550d4fae51b92919": {"node_ids": ["fcb2327e-25f5-42ad-ae98-1b8f099db6cc", "dbf663bf-1d2e-4450-8583-c5c20b56b372"], "metadata": {"file_path": "src/pages/dao/proposals/1.3.4.mdx", "file_name": "1.3.4.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.3.4.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.3.4.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["numbered", "budget", "passed", "public", "goods", "previously"]}}, "3dc821253cfe96e107c1af96b08b2eb5bfd4e8c8": {"node_ids": ["bb67c201-8516-4817-b4dd-bc7aafa8f532", "3b4c399d-2500-4812-aa04-b28443b92000", "28af730d-f7aa-4cc8-b97a-bb6519e358db", "9d8ff335-2b79-48b9-8585-18d75bf118ec"], "metadata": {"file_path": "src/pages/dao/proposals/1.4.mdx", "file_name": "1.4.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.4.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.4.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["incurred", "limited", "numbered", "reimburse", "expenses", "passed", "names", "obligations", "behalf", "previously"]}}, "e5dfc26f6176f20211f73d7f492470b73a9fadbf": {"node_ids": ["cbf6fe92-7303-4572-8dc2-84ec7f65e457", "699acdc1-4910-4aeb-a118-fd3d9b96382c", "bc0bbc55-c07f-4013-bc4e-85dbd8843954"], "metadata": {"file_path": "src/pages/dao/proposals/1.5.mdx", "file_name": "1.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.5.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.5.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["price", "numbered", "exponential", "passed", "oracle", "premium", "change", "previously"]}}, "2250ef7905fdfdc7514c9a97c6beab8946b0b16f": {"node_ids": ["c087bc11-5670-45fa-bc91-847d8ab236ed", "58b1bd0a-f97e-462c-903c-7989853b3b58", "442a68c0-5763-4f7a-87a4-0f738148706d", "60613400-66bf-4527-89aa-d7948d9e0f23"], "metadata": {"file_path": "src/pages/dao/proposals/1.6.mdx", "file_name": "1.6.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.6.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.6.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["numbered", "identity", "passed", "server", "previously"]}}, "e2162248fd79a9b62b1c7a06b5e11e6b5e952540": {"node_ids": ["5fab2b80-4bec-48c2-b029-a6afd5afd1f2", "557dd585-8f5d-484e-852d-94b6dde61e56", "3c207b91-c8bd-409c-a651-d82b0c4bfbd6"], "metadata": {"file_path": "src/pages/dao/proposals/1.7.mdx", "file_name": "1.7.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.7.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.7.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["tokens", "numbered", "airdrops", "passed", "transferring", "revoking", "airdrop", "previously"]}}, "4236b9482b685947720b3e60876c3ee3c7af1f1d": {"node_ids": ["f83c6da7-bd73-4cf4-bd9d-7bf093254c3f", "ac3405c1-7ed7-443b-84ce-d04914987403", "e7c21118-cf1e-413c-8b5b-8911bbd792f2", "5a676ae0-1c60-4970-87ac-9c2bbbf8fff8"], "metadata": {"file_path": "src/pages/dao/proposals/1.8.mdx", "file_name": "1.8.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.8.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.8.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["those", "specified", "group", "replace", "passed", "working", "repeal", "rules"]}}, "8e6fd53cffeba76f3f00808e77af0daa3f1c6d86": {"node_ids": ["25aab8d3-70b2-4f38-a76d-c07767b76d4a", "5005a839-81c4-4f7e-8636-3d11dee04e47", "f4a09cce-aa86-4fa4-ac8d-a5d87d4bf3a2", "048dbebe-dcac-4142-b949-7392a18ec5be", "1c9599c7-436e-49b0-aafc-a6c45c2800d7", "4c717d4e-fd03-4b71-a3da-775207a1ff53", "fbca787c-4040-4291-9dce-719598510765", "1e527830-455d-41ad-9f08-462d93f84f6b"], "metadata": {"file_path": "src/pages/dao/proposals/1.9.mdx", "file_name": "1.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/1.9.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/1.9.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["protocol", "guild", "numbered", "pilot", "passed", "previously"]}}, "1b72395a4a21227f26ee22089de5bd32bbd3fea0": {"node_ids": ["3942c878-43ff-4232-b005-3abb4c90535c", "326bf1f5-65a5-4624-93c4-1350df3c7e54", "ea684ac6-dac1-4fbc-91c6-95961f4f1d79"], "metadata": {"file_path": "src/pages/dao/proposals/2.1.mdx", "file_name": "2.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.1.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/2.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["numbered", "previously", "passed", "funding", "names"]}}, "240392b5e3c4e821b6234da86fa46bcb36115c0c": {"node_ids": ["c0558ed2-8edc-493a-8922-eb03f790d456", "85c2d0cb-dcb7-45cc-9677-571c47e6ca48", "48f88023-e156-4770-b5c5-b7fd0cbf83bb"], "metadata": {"file_path": "src/pages/dao/proposals/2.2.1.mdx", "file_name": "2.2.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.2.1.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/2.2.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["numbered", "passed", "budget", "previously"]}}, "356cc7f43f644f3d168d5d6f82bf639888969dff": {"node_ids": ["c9794257-8be9-4c3e-9a07-3f16f32eaea5", "fc27c99b-c95b-453c-84d5-2d66f0147d4a", "d29140c3-9d7b-439d-9ae7-b800318c9caf", "9ca8a0d3-892b-438f-86b6-75dd159eb203"], "metadata": {"file_path": "src/pages/dao/proposals/2.2.2.mdx", "file_name": "2.2.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.2.2.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/2.2.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ecosystem", "request", "numbered", "budget", "passed", "working", "previously"]}}, "130aa01903969438cb3950c4ed13094e887b4751": {"node_ids": ["1a4d4f3a-e481-4976-8472-e0f98bc0a88a", "b734bafb-3f9e-4013-b59c-3848ed584d6a", "9ab6d5e7-c753-4609-8c6e-05c515dfd939", "09798735-4514-4652-9970-881778bfd4ae"], "metadata": {"file_path": "src/pages/dao/proposals/2.2.3.mdx", "file_name": "2.2.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.2.3.mdx", "header_path": "/[EP2.2.3] [Executable] Q3 & Q4 2022 Public Goods WG Budget/", "customer_id": 1, "source_url": "src/pages/dao/proposals/2.2.3.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["multisigs", "second", "group", "budget", "equivalent", "requesting", "presented", "public", "working", "funding", "figures", "summary", "value", "goods"]}}, "f5a93c865f0ed38f1c8768cffbd87110cdfdf152": {"node_ids": ["8daa696f-2c6d-4763-9931-ced2aa431c4f", "514f5baf-1e23-4c1e-b1d0-a8b2b79dcb38", "307a33bf-09eb-40f1-a1f0-8bfd416974d9", "471307ba-8ed0-433a-aace-3ead00537c41"], "metadata": {"file_path": "src/pages/dao/proposals/2.2.4.mdx", "file_name": "2.2.4.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.2.4.mdx", "header_path": "/[EP2.2.4] [Social] ENS Endaoment RFP/", "customer_id": 1, "source_url": "src/pages/dao/proposals/2.2.4.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["insulate", "established", "seeking", "economic", "endowment", "ensuring", "treasury", "current", "combination", "ongoing", "continue", "overview", "manage", "exist", "manager"]}}, "4e50dc9d543c89a985765a07a5348984bbed7d77": {"node_ids": ["608564ea-a108-4c22-9918-83ac839a903b", "c3e6604e-b15b-4b17-91dc-b998f539636b"], "metadata": {"file_path": "src/pages/dao/proposals/2.2.5.mdx", "file_name": "2.2.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/2.2.5.mdx", "header_path": "/[EP2.2.5] [Social] Selection of an ENS endowment fund manager/", "customer_id": 1, "source_url": "src/pages/dao/proposals/2.2.5.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["selected", "group", "abstract", "stewards", "managers", "following", "working", "potential", "short", "manage", "elect", "approved", "process", "specification"]}}, "d84fbf0fb1f018fe61812247f37e823a30dfa1b6": {"node_ids": ["d24bb743-6029-4acf-8aa6-8141fff1603a", "6d0901af-2d8f-415a-b60d-c982ccaf56ad", "71f2f7ba-9ee7-43b4-9410-fb378495c957"], "metadata": {"file_path": "src/pages/dao/proposals/3.1.1.mdx", "file_name": "3.1.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.1.1.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/3.1.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ecosystem", "request", "group", "proposal", "passed", "funding", "working"]}}, "2676a0ba1b3d4f477a161ceb312760cb0f96d3cd": {"node_ids": ["486bc25c-2f54-4d3f-8b6c-cd05732cc567", "f9dd2af8-2dc4-4a37-8cbb-3e1c9f958683", "499151f9-af41-4d8a-8b00-28c7a024c4f4"], "metadata": {"file_path": "src/pages/dao/proposals/3.1.2.mdx", "file_name": "3.1.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.1.2.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/3.1.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["request", "group", "proposal", "passed", "funding", "working"]}}, "41a2a51b46af8418c1aa3a6055cd314a20692c6a": {"node_ids": ["ba22d2a8-0f4f-40b3-85dd-23dd963d1c92", "186d8c59-e2df-4f41-b1c3-0b082ac89280", "2b4ee8a1-f06c-41ea-898e-f5e6a6dd8ebc"], "metadata": {"file_path": "src/pages/dao/proposals/3.1.3.mdx", "file_name": "3.1.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.1.3.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/3.1.3.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["request", "group", "proposal", "public", "passed", "funding", "working", "goods"]}}, "23c37542bfaa676e9f5b688c6d31af6c54e176b6": {"node_ids": ["74d13cc1-bf70-49ff-9ebb-8e597b9cf449", "766b7f26-249a-4848-9040-a605a1dc37ed", "0dcb2019-2c08-4684-8d1d-757670d27ac4"], "metadata": {"file_path": "src/pages/dao/proposals/3.2.mdx", "file_name": "3.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.2.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/3.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["executes", "groups", "group", "april", "proposal", "passed", "working", "funding", "requests"]}}, "304f867ffa1249de6f40a356e7f9a9a8aea41ed6": {"node_ids": ["3adc35f2-a7a8-43f3-93bb-0b2c0a4049e9", "8cebbf2b-1946-4d5e-81ab-0be5ee3af388", "186dd590-6411-4c94-92e5-81983459c4de", "2b6ee95a-dace-471b-8a0a-eac1b5705a56"], "metadata": {"file_path": "src/pages/dao/proposals/3.3.mdx", "file_name": "3.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.3.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/3.3.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["executes", "operating", "proposal", "expenses", "enough", "passed", "ensure", "cover"]}}, "bb8d14ca7d972482b63a1e9f8527eb29a0d0db3e": {"node_ids": ["1ea9b6ee-e4d4-4184-9c3b-4b57b7b3fb7e", "f0654a41-18d2-42de-8b7d-9016a81adf7d", "e2925c83-df31-4dfb-9533-4b4107d465c8"], "metadata": {"file_path": "src/pages/dao/proposals/3.4.mdx", "file_name": "3.4.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.4.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/3.4.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["first", "passed", "tranche", "endowment"]}}, "d54ac6e65decfc0410125b743da363a4119fda93": {"node_ids": ["60620605-c1b8-4291-94c0-485bdffe6896", "9518cde5-046c-4004-a4e9-b9f8f33e857b", "49a9c96f-49ed-4795-aa65-56c1002f592b", "c4e7d3b3-8e9c-4e27-a713-213b9df031d0"], "metadata": {"file_path": "src/pages/dao/proposals/3.5.mdx", "file_name": "3.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.5.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/3.5.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["controller", "registrar", "proposal", "reverse", "passed", "activate"]}}, "cf1b14de40f8829d833bc7e51aab7f5e1efb4193": {"node_ids": ["9614435f-ed4b-4ab5-89c7-ec1a5551a5cd", "3306ae43-3588-4f62-9cdd-f1ad1982329d", "e16f19f7-c41a-49cc-9a57-d01583078fcd", "d292176d-5ae5-4fd7-807b-677955dd90f2", "c6ed1008-b93b-42ec-a812-90e6afc480d1"], "metadata": {"file_path": "src/pages/dao/proposals/3.6.mdx", "file_name": "3.6.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.6.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/3.6.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["foundation", "passed", "director", "election"]}}, "4f45f5028d85a55b262e6a28ca64f3c37c6f6659": {"node_ids": ["032aef20-e8db-4205-a970-42e9e3d27be0", "85937d28-4c47-4bb2-bbc3-0a3bee6126ba", "cb7e5dfe-e6c7-4607-81f7-b2f2a8366868", "1a3d793e-bf39-43ad-be46-8119aa3491d8"], "metadata": {"file_path": "src/pages/dao/proposals/3.7.mdx", "file_name": "3.7.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/3.7.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/3.7.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["normalization", "passed", "standard", "approval"]}}, "f127d4f240828976857627d4222670802b77ed83": {"node_ids": ["67a9d35f-dd38-4d74-9286-4adde1698a98", "be7cf2ca-9ac8-452c-b999-cc112bcc090f", "045824c9-4e43-4dba-a0db-59fcba4a91c3", "bc9ffcae-f9f9-4555-934c-d88b1f522da7", "e6e47967-536b-45c8-8db9-b55a81efc68a"], "metadata": {"file_path": "src/pages/dao/proposals/4.1.mdx", "file_name": "4.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.1.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["strategies", "endowment", "actions", "passed", "further", "approve"]}}, "01ee139d7998ab3e37e58980ef63c5f858061654": {"node_ids": ["1c4ab026-2dda-4b4e-a5b8-5a554188de8a", "9c988448-cfd5-4cc4-9c69-360841b1bad1", "f941c31e-8558-4077-98aa-758b20bcbe44", "074f7ee4-1e93-4bbe-bd19-4ea6366525f5"], "metadata": {"file_path": "src/pages/dao/proposals/4.10.mdx", "file_name": "4.10.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.10.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.10.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["community", "power", "aiming", "ownership", "transfers", "enhance", "proposal", "decentralize", "passed", "transfer", "further", "managing", "trust", "governance"]}}, "e8a8293d5d243e8bc15e05ae3f2ff6dce36255de": {"node_ids": ["8235eb78-8296-4c97-9351-0a79e3bdde73", "661a7b3a-1cae-4611-9b14-c80b0cfbd9ae", "879f0528-6639-45e3-a0f4-69735a75612a", "14d93045-f662-4c95-86fd-063b8b7ae54e", "7c238625-65fd-46f3-824a-5b7fc6752139", "356807e8-ef34-469d-a486-c80dbcc45b37"], "metadata": {"file_path": "src/pages/dao/proposals/4.2.mdx", "file_name": "4.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.2.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["passed", "endowment"]}}, "34e5714aa7e5b9cf9c3801979bc46db55eda23a4": {"node_ids": ["e06d93a2-4903-4be0-bef6-ce5633925b04", "589371e1-565c-4002-aba5-79bc58215f57"], "metadata": {"file_path": "src/pages/dao/proposals/4.3.mdx", "file_name": "4.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.3.mdx", "header_path": "/[EP4.3] [Executable] Refund Invalid .eth Names/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.3.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["facilitate", "latest", "group", "abstract", "introduced", "proposal", "transfer", "working", "initiates", "normalization", "refunding", "invalidated", "names", "specification"]}}, "35762c48bc02e9af512ea3cf46c040f6c58e916b": {"node_ids": ["e521f5fc-8271-4151-be02-e6d72251c180", "264faeef-de6a-4436-8678-ed7d59e1570c", "0070967d-2767-495f-a5da-e4c874506f9a", "e0c48793-8bb6-47b2-ad51-071f27886f4a", "c16e2973-974b-42b5-87bd-151267951be7"], "metadata": {"file_path": "src/pages/dao/proposals/4.4.1.mdx", "file_name": "4.4.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.4.1.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.4.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ecosystem", "group", "passed", "funding", "working"]}}, "e1ab7ccac835860ee87e5c897299d2f05e12ce65": {"node_ids": ["fee47ba0-68e2-4921-b4b0-149d7ff72c7f", "cd3053ec-61fb-4350-8610-6d531554e2eb", "62c40d78-eb5f-4112-99b0-c4bffdbfc56c", "b30daaf7-5d8b-486f-8100-daae8f61c7c2", "30732d8b-472f-49ba-b3e5-292f65ccff8a"], "metadata": {"file_path": "src/pages/dao/proposals/4.4.2.mdx", "file_name": "4.4.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.4.2.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.4.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["group", "proposal", "passed", "funding", "working", "requests"]}}, "f482e39f0eb278080809d7d4f71b2b92b368b0dc": {"node_ids": ["f824e608-c5e2-4429-96e7-32094840e584", "272139c0-562f-4f24-b93a-e26390e2aa9a", "cdcaa058-bdff-4bf2-975c-830619481f1c", "c729c807-07bd-4d0d-9ea9-0320d20d7151", "659c02d1-9cb6-49b7-829c-e1a53de4162d", "3c39d8f1-0d05-45cc-bdbc-d913a82cc21a"], "metadata": {"file_path": "src/pages/dao/proposals/4.4.3.mdx", "file_name": "4.4.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.4.3.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.4.3.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["requests", "group", "proposal", "passed", "public", "funding", "working", "goods"]}}, "47275a3f3fa887ab77778303ed52fb8a1775f26b": {"node_ids": ["f8e05795-3625-4fba-8e3a-25bfe17e993b", "3ac4813b-f90a-46c9-9bff-5626d8330201", "5b1cbb6f-f082-45c1-998f-de5b5305402d", "ccd37ea0-5d24-404e-bc9c-bf9815b46de1"], "metadata": {"file_path": "src/pages/dao/proposals/4.5.mdx", "file_name": "4.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.5.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.5.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["karpatkey", "endowment", "passed", "update", "permissions"]}}, "4d4699de4e69af7e3f9820abb1d35918d3c54741": {"node_ids": ["a0a45d3a-dcc2-4154-8346-da0f27e4ddb6", "c01a4a0c-765f-425d-bfb8-9f2c20ce5280", "a18b83e2-4f03-4dc5-b899-1dc0ac582452", "fca28c76-e83f-4417-96b2-c1325b2be025"], "metadata": {"file_path": "src/pages/dao/proposals/4.6.mdx", "file_name": "4.6.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.6.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.6.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["executes", "group", "october", "proposal", "three", "passed", "working", "funding", "requests"]}}, "fba16e66e14b44d57136544ad4626a98f44ad840": {"node_ids": ["e0ada741-a59a-4f73-bb09-3fc82b094064", "40c2e112-69c5-4725-b219-773884c542a9", "bb0b17e3-b658-4271-a662-cf1e1f5c4b2c", "3e5dbb7f-26c5-4a01-9471-06a9d4e181af", "a17092ff-9164-4ca3-97f1-53d7afd9d8df"], "metadata": {"file_path": "src/pages/dao/proposals/4.7.mdx", "file_name": "4.7.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.7.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.7.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["streams", "budget", "create", "provider", "service"]}}, "8f7e9b85fde163515b934a1c4e9ed3586fe65b10": {"node_ids": ["d849b75b-23a5-4984-92f0-71ef714ad1ac", "87966131-45a6-4a00-a9aa-e40b377e57e7", "c2a27263-90c3-4e82-a362-a16eb71160c2"], "metadata": {"file_path": "src/pages/dao/proposals/4.8.mdx", "file_name": "4.8.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.8.mdx", "header_path": "/[EP4.8] [Social] Amend working groups rules to extend to a full year/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.8.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["guidelines", "attract", "increasing", "retain", "ability", "modify", "motivation", "group", "abstract", "enhance", "proposal", "enable", "working", "potential", "intent"]}}, "00ce5c61dbd0addd19e8f61b5f0501d6a290e100": {"node_ids": ["ed0c6e78-0ceb-40d4-8069-d45f92d2cb11", "95631830-6b86-464f-b046-b2cf64faa12e", "264d67b6-3cd4-43fd-8596-c313f6c13f47", "f1be52bc-ce60-4988-a3fc-45f2bf368846", "208da026-7d7c-42d7-8693-8a1653accccf", "8da457b1-7236-4191-b2ca-a959631c1cbf", "3359ff13-8920-4b92-9680-fb461744aabb", "0fa03420-4ecf-4ab7-922e-4dd401f84c93", "98b5f877-bbf7-4760-8ce8-c7faeceba58b", "93665316-f86d-4c1a-9c91-36b9b405ea97", "4fb08107-afa0-43bb-b2b9-894aef106827", "19ea8390-bbb0-48fc-8b1b-39cf6997ad3d", "1524ab94-670a-4bd5-adf1-83a329e36b0c", "4a335bf5-c922-451f-96fc-d9bbb244fff9", "eb73840f-ec5a-449e-a4a7-a63755d11d9c", "1139db0c-9ea5-4255-b308-7bcde2cfc0de", "0ecc8946-fb29-4cf2-a407-07398d13a118"], "metadata": {"file_path": "src/pages/dao/proposals/4.9.mdx", "file_name": "4.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/4.9.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/4.9.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["providers", "streams", "passed", "select"]}}, "17a3cb0d28286bc508f58906e9a5ff9733cb8573": {"node_ids": ["68e4fd6a-a645-4c2a-8d32-8701caa6ecbc", "71d9f953-d01b-4330-b964-03f22881be5e", "4265bbb6-ef4c-49c9-b4f1-8ce0b1435d66"], "metadata": {"file_path": "src/pages/dao/proposals/5.1.mdx", "file_name": "5.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.1.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["enables", "registrar", "upgrade", "version", "passed", "oracle", "support", "dnssec"]}}, "e39e027548c49485ed06ca8330b68d62d263f701": {"node_ids": ["c0e8fe01-3bbf-444e-b582-a6c1e28da36b", "d9f4485c-36bd-4e0d-8df8-26d5aff9e0f3", "f93c5942-6ed5-49e7-8ac0-2744a56ebb23", "2de5a625-0abf-4ca1-b0ee-34c513e41065", "975ef36b-3be6-470f-85b9-bf9e6d5e2378", "cf349581-82cb-4205-b65a-1b2993a9ef0c", "fa9ddaa7-c258-4e97-bae7-d15e7676e7c4"], "metadata": {"file_path": "src/pages/dao/proposals/5.10.mdx", "file_name": "5.10.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.10.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.10.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["confirms", "attacks", "against", "securitycouncil", "security", "malicious", "proposals", "proposal", "individuals", "using", "smart", "canceling", "protect", "defined", "governance"]}}, "a598e792434e0549ac45f9b4f47a59c16ce2db58": {"node_ids": ["cc427ac7-d114-4a32-81bd-3b52c9e61b10", "a35a9bba-9db1-4e28-8c1e-1f052c9bb13d", "9c937e25-2b26-4526-81cd-c591cc5732a9", "b570aebc-10d5-4480-aad2-b1fb9f02144f"], "metadata": {"file_path": "src/pages/dao/proposals/5.11.mdx", "file_name": "5.11.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.11.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.11.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["specified", "group", "treasury", "amended", "proposal", "funds", "passed", "working", "support", "including", "governance"]}}, "bb38110a632599a398dca4776103984395f43830": {"node_ids": ["a037b9d7-b6ca-45e2-89dd-1d106cfde39c", "7c352582-1b5c-47cf-b84d-e4376f8e10b2", "e506da9d-ba43-4a58-899a-f2c2cf722216", "1e390e81-6473-43ef-b850-1b0cf47ec438", "6f36f26e-2f9f-497e-b416-7d8191c3d24f", "a5fc6ffd-60ad-4176-b872-37dc0c8d0c91", "b954e43e-f6cb-477c-8439-b9bd792777fa"], "metadata": {"file_path": "src/pages/dao/proposals/5.12.mdx", "file_name": "5.12.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.12.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.12.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["updates", "endowment", "roles", "passed", "migration", "modifier", "permissions"]}}, "c4d59eb011b10fdb4d0e92ba61da1832c64f2a2a": {"node_ids": ["62afb90f-485c-49ca-930a-889d0b60ad53", "d9dad3f1-5a66-4390-b1b8-bb197fe3cd02", "db7e6fe4-5f5d-4dd5-bfa8-9e1a63a71b85", "a8e22399-acff-4be8-8f06-2f9c1d76f89b", "1c9c16f9-bd3a-4e32-b3c4-f17761ab1471", "b151bd79-3dd5-4d19-8e4a-499a717f8fe1", "8fcb1e60-5d15-4f1d-8092-f0bc684810e8"], "metadata": {"file_path": "src/pages/dao/proposals/5.13.mdx", "file_name": "5.13.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.13.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.13.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["mechanism", "security", "malicious", "expiration", "control", "establish", "authority", "council", "proposal", "centralized", "greater", "delegation", "ensure", "prevent", "governance"]}}, "39082baa9575bc246e4de83db1be3f9dc3e6a5fe": {"node_ids": ["da0ecb25-29dc-4ad9-80b6-a9b063c1774b", "8873ddbe-e902-4784-bcda-9b99a52b2c78", "9b002ff9-fc4d-4ab1-9c6f-e4e0867165f7", "fa595e06-102c-4b4d-8000-da134556e2e4", "b2e644df-b16a-44f3-9177-a6b8ee38383c"], "metadata": {"file_path": "src/pages/dao/proposals/5.14.mdx", "file_name": "5.14.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.14.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.14.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["deploying", "landscape", "permissions", "evolving", "endowment", "proposal", "diversification", "market", "alignment", "introduce", "focusing", "karpatkey", "improved"]}}, "4a567b11fb2631abecb3cb1b3cdea3a33ad8fdf2": {"node_ids": ["3952aa3c-5762-46ac-8880-4c9974920e41", "c6d59e1f-a711-4faf-84ec-6e7860ea6dc7", "c3e3b392-a217-4663-88c9-133614de87d0", "1a35017e-42a7-4d2f-853d-cf2449a30982", "1fe34838-aaf2-47cb-9c20-18d0b0f02c8e"], "metadata": {"file_path": "src/pages/dao/proposals/5.15.mdx", "file_name": "5.15.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.15.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.15.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["proposalbond", "functionality", "proposing", "would", "governor", "proposes", "propose", "accessible", "allow", "proposer", "lower", "adding"]}}, "045200707d2d7e1b0862602ba488ce539f45f064": {"node_ids": ["bdfeabc7-6c13-47bb-910b-af00310fecea", "e242e347-557b-406c-b995-16acd61adf29", "6d8b50d2-0c34-4224-bce8-13be7d0e0e68", "18910034-ab2c-4e39-b135-5f56fcf7ad04", "7d8e5244-00a3-4da9-9a55-d9b529bd50be"], "metadata": {"file_path": "src/pages/dao/proposals/5.16.mdx", "file_name": "5.16.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.16.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.16.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["incurred", "payment", "litigation", "implement", "pursuing", "proposal", "legal", "seeks", "reimbursement", "executable", "protect", "while"]}}, "feb102dd42cbf6d3061d7e85a13a85265423d0f2": {"node_ids": ["25027bf8-34e7-4dbf-b063-eceaecabca23", "16b386b3-17c3-4c02-9d74-b6e01ea43219", "f14576b5-1094-4692-aca2-09fd71b42612", "0de814d1-6671-4d0c-a5d1-fa61bda9d2d7", "3279de26-2223-4fc6-862a-05b8dcfbe80d", "3a7d85a8-07b0-48a8-9425-fdda474609f2"], "metadata": {"file_path": "src/pages/dao/proposals/5.17.1.mdx", "file_name": "5.17.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.17.1.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.17.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["operations", "covering", "social", "group", "april", "proposal", "passed", "funding", "working", "requests", "through", "resources"]}}, "6c52d41b712678eb24d67cd26bd9181f50144835": {"node_ids": ["386842c1-9a6b-48db-9d3b-33c94913234f", "7b048c95-81c6-4c7b-8432-9eacde858581", "5eb30dbe-8483-44ee-8509-25650df45c14", "0d1186a8-4951-4442-9c7f-5e5dbbb04293", "b6e03aa5-6fa1-41d9-ae6a-a0b19d7ddee5", "25ed975e-6016-420b-873b-f068c95cae19"], "metadata": {"file_path": "src/pages/dao/proposals/5.17.2.mdx", "file_name": "5.17.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.17.2.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.17.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["social", "ecosystem", "group", "proposal", "passed", "funding", "working", "including", "requests"]}}, "a0defc8fa6b14a2dd3d6432b56c91a1b1f896c38": {"node_ids": ["ad7b4b0c-d932-4191-ab4a-161d490bfbd7", "25bf1d5c-d4d1-4a24-9d6d-30b476551c21", "65f36be4-e621-4903-94b8-408df15463f5", "0a722a7d-cd73-4616-8344-0f36969744a7", "6fd30b8b-2b8c-4709-83e4-e97dfb453108", "605a4628-41e7-4048-8445-ec9252ab200d"], "metadata": {"file_path": "src/pages/dao/proposals/5.17.3.mdx", "file_name": "5.17.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.17.3.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.17.3.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["group", "public", "passed", "funding", "working", "goods"]}}, "862f3ee634783325a1c41d6a62b40e0d91398faf": {"node_ids": ["c7769dc2-7547-481c-94fe-8490ab8cb11a", "179a11a6-8942-4b7c-a017-35f2b69c051f", "7d5fa07f-e148-4b2f-a7c4-c1b08aedc222", "b752e0f2-2eaf-4268-9d27-4ffa5d609c94"], "metadata": {"file_path": "src/pages/dao/proposals/5.18.mdx", "file_name": "5.18.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.18.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.18.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["structure", "metagov", "group", "creation", "responsibility", "background", "working", "place", "steward", "compensation", "rules"]}}, "7cc385a2cb8ce08970cd694f5809ed89a76d696a": {"node_ids": ["0842ff1d-ab6a-483e-a5b4-dc1c52c641e4", "56ebbbc5-38e1-42b9-babb-4f143985aae6", "13f6decd-d5f6-4acb-9cbd-9c14b240cf9c", "b51fa0cc-cab7-4c7e-9216-8851ebb5acda", "1280b65e-35ce-41e6-a088-90c8b29ce66a"], "metadata": {"file_path": "src/pages/dao/proposals/5.19.mdx", "file_name": "5.19.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.19.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.19.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["tokens", "engage", "aiming", "program", "proposal", "eligible", "pilot", "contributors", "issuing", "receiving", "distribute", "outlines", "payments", "governance"]}}, "0802bb1297851cdc8b6f26bf16d2dea2717fd157": {"node_ids": ["95051d0b-4676-42e9-9d91-75cfaf2d0998", "b2867177-afc9-4b8e-8b51-2f130e6d285d", "d416f970-010d-41e2-939e-82db374dc08b", "776aab8c-52dc-4315-9523-0088c5bd11c0"], "metadata": {"file_path": "src/pages/dao/proposals/5.2.mdx", "file_name": "5.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.2.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["commence", "selected", "providers", "streams", "initiate", "passed", "service"]}}, "84a89a83d8d38f5c7ed4eb732e5e184dd6ec8624": {"node_ids": ["c491bc79-0e71-4f9f-9866-feefeb8612a7", "fc0c73a1-4270-4afe-86c6-c493bd8e687a", "39009882-824c-469e-aa8e-604f054f6e91", "9e6b28d3-03c8-4893-b798-49dd0b4925b2", "d9c0092c-6a0f-45bd-9b8c-5125fd1cd3b4", "6e754841-06f9-4772-9659-390dc6102a52"], "metadata": {"file_path": "src/pages/dao/proposals/5.20.mdx", "file_name": "5.20.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.20.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.20.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["community", "introduces", "feedback", "clarify", "endowment", "investment", "performance", "statement", "proposal", "policy", "adjustments", "include", "conservative", "based"]}}, "b6f599b6f25d49cd1ede8e3815664bd8fd80f056": {"node_ids": ["e2172ede-991f-4f5d-9f2d-c43055021053", "24cad3a2-7e66-46ef-896b-3cdee5382c5f", "3b626fd6-5efb-47e5-aad1-902774e8ff11", "c0517d39-3b46-4072-b519-24e0331fd2d9", "ce1ce580-b026-4732-a403-a93bdac575db", "f56d0410-96c6-4c17-8937-8b2d62c4a061", "ef1bfa0e-b7c0-4e1e-b137-2a2cef23db66"], "metadata": {"file_path": "src/pages/dao/proposals/5.21.mdx", "file_name": "5.21.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.21.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.21.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["identifying", "tokens", "critical", "blockful", "efforts", "compensate", "proposal", "vulnerability", "which", "seeks", "their", "mitigating", "extensive", "vested", "governance"]}}, "6fed7e26ab86a49d22e52042ff6f1c68560365a2": {"node_ids": ["8c0f106d-59d5-4854-84b3-ea4eae74ebd8", "009e32cd-3f5d-4104-86db-d824e724e7f2", "dada718e-366c-408f-82c5-21458ee4aa71"], "metadata": {"file_path": "src/pages/dao/proposals/5.22.mdx", "file_name": "5.22.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.22.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.22.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["stream", "development", "implement", "budget", "proposal", "audit", "passed", "seeks", "funding", "maintain", "revised", "ensv2"]}}, "00d31569675c9cf4b712578145bdbdc13e6eb94e": {"node_ids": ["f6c7f086-3905-4dc8-bd35-030fd6cbbc8a", "1cd8ec29-4a37-4062-ad11-48e3b564f2f1", "a047eb4b-01de-4173-8837-464c8df9cd37", "22f5bd2c-de0d-4339-b747-9c44251c5361", "a4e31bee-b768-47fa-afc4-272206d1e2d2", "e0507227-dd77-4686-a027-2bed9c9b7c5f"], "metadata": {"file_path": "src/pages/dao/proposals/5.23.mdx", "file_name": "5.23.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.23.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.23.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["security", "blockful", "compensate", "proposal", "reporting", "vulnerability", "bounty", "passed", "severe", "their", "mitigating", "governance"]}}, "064cac2120845890d1a07efa6e51287569f33202": {"node_ids": ["2031e6c3-d941-401a-a5a3-e5071814a5c9", "8bf708c4-9a15-40aa-87c7-c3da1a2b4686", "ea716b8a-717f-4cae-850a-173a90b9f0fd", "79519b60-8fba-46ae-b4d7-0776d66ca5f6", "04ff77f8-63b0-4566-82c9-c85a102c0272", "4b704df6-63e0-478b-86e7-6a992d1236f3", "6f52e93d-7a3c-4d70-b122-282b15a4579c"], "metadata": {"file_path": "src/pages/dao/proposals/5.24.mdx", "file_name": "5.24.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.24.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.24.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["group", "proposal", "working", "rejected", "funding", "collective"]}}, "085c5fa1cf626643aefc2dca893366458aee6dbd": {"node_ids": ["ccec0058-cd57-4903-a06f-7a0979e3cdfb", "4b434471-32b0-483d-8c71-f825cff539c8", "0f96e932-f8bf-4532-9647-72c0a1f279be", "93ff0a49-49b8-4501-b8a9-81ee80e00a06", "a1bf66ff-51aa-401d-9e98-e48dde78fd44"], "metadata": {"file_path": "src/pages/dao/proposals/5.25.mdx", "file_name": "5.25.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.25.mdx", "header_path": "/[EP 5.25] [Executable] Collective Working Group Funding Request (Oct 2024) - Resubmission/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.25.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["executes", "amounts", "group", "description", "october", "abstract", "proposal", "three", "funding", "working", "resubmission", "requests", "technical", "changes"]}}, "77bef923da6a25731952f8a9c9b9d34897b00118": {"node_ids": ["9e548961-218e-421b-b975-21d33f2077e8", "e2f8f1e1-f75b-40af-ba2d-d9f6f8f50352", "d34445b3-1b53-4feb-a84e-e53762824ffa", "ea4f4272-86a1-482c-a11f-62f1415977e5"], "metadata": {"file_path": "src/pages/dao/proposals/5.26.mdx", "file_name": "5.26.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.26.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.26.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["program", "proposal", "pilot", "passed", "distribution", "executable", "implementation", "implements", "approved", "governance"]}}, "f415e41f23a8bc7b2e5dca40d8848ab7b25a5c9e": {"node_ids": ["73b29236-883d-40a3-a836-31eb491606de", "944b1e81-e556-4171-a50a-e997bbba868d", "d11ca0ba-a642-49d8-9ba9-369809081384"], "metadata": {"file_path": "src/pages/dao/proposals/5.27.mdx", "file_name": "5.27.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.27.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.27.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ability", "upgrade", "wrapper", "passed", "revoke"]}}, "94a06ae0539ae6f5553efe2daa0bfacf52115086": {"node_ids": ["79475dbc-f58f-4122-bb14-a7136b528ebf", "722d5e1c-e793-4c06-8736-5b29bbaef7ec", "c4f1f27b-c322-4022-a971-ed5ae05c2778", "115a57ee-a2b4-4d89-9423-b05de405e7ab", "51132b34-8edc-4fc0-9584-6bbeaad426d8"], "metadata": {"file_path": "src/pages/dao/proposals/5.28.mdx", "file_name": "5.28.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.28.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.28.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["passed", "ongoing", "reimbursement", "legal"]}}, "c8b0560383b2ae5769173676f0c6e4353f4b9bc7": {"node_ids": ["c4365b99-44f9-419e-aea6-aa56a50c643f", "b29aafc9-acb3-4cab-830e-e1f39e4054ac", "3fea145f-779d-46b7-b1d3-6ae865a5feef", "85d5275b-38c3-452d-b373-dc6e162c4579", "6dc6f0fb-1629-4538-a002-5b728d576eae"], "metadata": {"file_path": "src/pages/dao/proposals/5.29.mdx", "file_name": "5.29.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.29.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.29.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["request", "rollout", "network", "ensip", "gateways", "unruggable", "funding", "build", "operate", "supporting"]}}, "932a996be9338bb545c634b1582f53802d1435d4": {"node_ids": ["3fbf8dd3-e144-4cbd-a9c4-374fa7342e64", "9963b80e-f995-4f7d-b28a-006fdd14b56c", "bb22f620-a201-4c47-9856-300846ef632f"], "metadata": {"file_path": "src/pages/dao/proposals/5.3.mdx", "file_name": "5.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.3.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.3.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["consider", "determine", "litigation", "settlement", "legal", "expenses", "reimbursement", "approved", "steps"]}}, "7d6e440c2ed0fa8afb92dd8371a9acdc3a75486b": {"node_ids": ["21e05220-474d-4cc2-b996-a2d0d670e568", "b687f76b-85e3-462e-8c4c-d768b3342038", "56a97a8e-32b1-4d28-9ee7-86e206fbcaf7", "8ab09f3f-d0aa-4f2e-bee3-15ccdde31d6c", "c00070b2-76d7-4f47-b3be-dbc04a3f65d7", "e7bb9a61-b68d-4105-a05d-705a2479cfa6"], "metadata": {"file_path": "src/pages/dao/proposals/5.4.1.mdx", "file_name": "5.4.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.4.1.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.4.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["amount", "metagov", "september", "group", "treasury", "anticipated", "budgetary", "funding", "working", "multisig", "fulfill", "requested", "needs", "through", "specification"]}}, "2b402f836970e8c16ffad1961e90cc039b697d99": {"node_ids": ["7e92bae9-3e3a-44c5-b72c-2ab1b9be04e2", "d9e1e38b-57b3-4305-bd8a-76ee7a70806e", "48f62834-35c9-4d5b-844f-ddbfec4e064f", "759386d4-329f-42de-be70-cda07a147ad7", "353b98fb-826a-4c7f-ba46-f387a2931ba1", "1cef538b-1c0f-489c-a9f8-b042ebf2e75a"], "metadata": {"file_path": "src/pages/dao/proposals/5.4.2.mdx", "file_name": "5.4.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.4.2.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.4.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["amount", "september", "requested", "treasury", "anticipated", "public", "budgetary", "funding", "multisig", "fulfill", "goods", "needs", "through", "specification"]}}, "98f7130eb241131f863490012092873a6fd5809d": {"node_ids": ["af63da69-ba0f-4238-86a1-ecf359627f43", "16e2da20-d643-45c4-b8cf-8d24d93f7544", "cfe61197-8863-4e78-9b22-2e82ccc4b974", "a24cea5b-9af1-49ce-b7a6-77e3afa4802f", "71eed7d6-85af-4857-bc01-978b6f82434e", "6c3f6d53-fa63-45a7-bc00-cccb865d12d2", "9b3a0910-987e-429c-9ef1-a5205ea6340a"], "metadata": {"file_path": "src/pages/dao/proposals/5.5.mdx", "file_name": "5.5.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.5.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.5.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["group", "public", "passed", "funding", "working", "goods"]}}, "668f40fd40ccb8cb8f52b4dd024537e187d29b58": {"node_ids": ["75ca0bb8-beb8-4916-967c-df5b398383bc", "7a402500-8e70-48dd-a0e6-c2ec8da6d825", "1524a62d-b301-4fbd-a14b-f5f99865a74b", "30f2ef8e-e622-4f8c-95f9-58dbff218928"], "metadata": {"file_path": "src/pages/dao/proposals/5.6.mdx", "file_name": "5.6.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.6.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.6.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["authorizes", "metagov", "already", "endowment", "withdraw", "passed", "enable", "reimburses", "month"]}}, "8dcf60d2e6d1f70a71948bed9d17b41b268158af": {"node_ids": ["3f076fba-0df9-4031-9e1d-30354889f6ac", "6e4c799a-4780-47b7-9347-eab1ed871a97", "9627830b-cf6a-4fb9-a6b4-e7797a152ef8", "3d99ecd1-678e-463a-8c37-656eb7c32fd9", "8f11e3e7-5da1-428b-be09-b36924d10610", "9aed861d-d98a-40f3-b029-f58961a42181"], "metadata": {"file_path": "src/pages/dao/proposals/5.7.mdx", "file_name": "5.7.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.7.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.7.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["safeguard", "ensuring", "power", "security", "counter", "malicious", "council", "promoting", "decentralized", "passed", "integrity", "establishing"]}}, "c23329205d3abe0e591c33e5bdf037be100b82f8": {"node_ids": ["ac36254f-a199-4d58-85dc-9ef7a8bd4384", "2c87ceec-bebe-4142-99e9-0059e2b39a71", "8a609de4-2b84-4727-8ddb-e729827315ff", "4c498e28-1392-418a-abe9-c63836673bc1"], "metadata": {"file_path": "src/pages/dao/proposals/5.8.mdx", "file_name": "5.8.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.8.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.8.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["safeguard", "ensuring", "power", "security", "counter", "malicious", "proposal", "council", "promoting", "decentralized", "passed", "integrity", "vesting", "establishing", "steward"]}}, "fee24e8db4e27a615822f30ea775a10b2d7b6b3d": {"node_ids": ["cbb3a478-c18d-4cbc-b1ae-fbeb93558a62", "0415416f-84c3-405b-8fb8-5359f8fabb0d", "77c0b8e8-4de3-4f11-8594-a5d8729b8d26", "ebce57b5-9b0e-4045-8626-0f88300778c2", "f7ac6d86-b0f5-4253-bbdc-bc0b43fa3069", "99ad9764-d836-4813-9dca-22790911bf19", "7bd87e70-9614-4b72-83c8-64832f427e16"], "metadata": {"file_path": "src/pages/dao/proposals/5.9.mdx", "file_name": "5.9.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/5.9.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/5.9.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["group", "passed", "funding", "working"]}}, "64eb0119282fd09fee22b48cc04566a64f67a96d": {"node_ids": ["bd4eec5a-9bfa-4684-87b9-97c789ba1005", "068f1a58-5e9b-43a6-9f65-10386d6b9015", "1e34eba1-a04d-464c-bf1c-9a7b65037059"], "metadata": {"file_path": "src/pages/dao/proposals/6.1.mdx", "file_name": "6.1.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/6.1.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/6.1.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["operating", "passed", "convert", "expenses"]}}, "8a96e4574aba7eb809847da71dd40c6938cf6f23": {"node_ids": ["2487a0c5-1ae7-4fb4-857e-3064199e76b8", "b7fda838-a5cc-4106-9321-2267e217645f", "e97700a8-760f-4c70-86f0-093ec489018d", "4d7a4de1-5cf8-4f2d-930b-25da1db1fa1b", "c5b40e31-af9a-4a17-9467-7833365a11e3", "91a198a6-76dc-4d9f-9616-19e067641eed"], "metadata": {"file_path": "src/pages/dao/proposals/6.2.mdx", "file_name": "6.2.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/6.2.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/6.2.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["tranche", "endowment", "passed", "funding", "expansion", "third"]}}, "927f9ada8498522abe51d129ffafab4ac7b77725": {"node_ids": ["c397213c-9c1a-400d-9c99-4c8e4be38045", "8324debc-29c7-4cb1-ab45-853b0a610db0", "4ad8fbb5-a558-43a8-a4f6-57aa7db05cd6", "58b54d3b-2a0b-43d3-b6dd-62f7acafd328", "05360090-f326-4e5c-8248-229453889a49", "23ef7e2f-a189-4d7b-a34f-96f2d627e227", "4ad5399b-c527-40bd-baec-41c1e57f7a50", "3096edd0-1321-4094-9e2b-0f17142057ac", "eca714af-9a20-4985-af63-858f70092120", "63377d3b-51ec-4975-a3c4-d8e28d4e40b4"], "metadata": {"file_path": "src/pages/dao/proposals/6.3.mdx", "file_name": "6.3.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/6.3.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/6.3.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["check", "renew", "whether", "budget", "program", "increase", "provider", "under", "service", "intends"]}}, "624a346be5b5ed1033d35b2741eddc3cf2aa5128": {"node_ids": ["925a6b77-054b-4323-a8f3-760accd1c119", "88bc1172-2866-428f-bd44-549d4c1289b8", "f1eee4dd-b3d4-4d79-9ed8-8d37ea062b53", "69ca2a5b-623d-472c-8af4-cfa588941b04"], "metadata": {"file_path": "src/pages/dao/proposals/submit.mdx", "file_name": "submit.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/proposals/submit.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/proposals/submit.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["proposals", "types", "proposal", "passing", "submitting", "three", "smart", "there", "series", "process", "governance"]}}, "8d325b2c10b2024113807cfb38e90e87bd385ade": {"node_ids": ["cf60f238-226a-4971-b0c9-267b0f4e957f", "7bf55822-a527-4d5d-82cc-cdde560dcf5c", "db9900a8-a0dd-4c42-bafe-1e8baef92b13", "b564367b-e5c1-40a0-a5a5-8713963dbe7c", "ee655c63-8c35-43d3-b503-12f3edaf0914", "d647976b-6e99-47d8-8021-1bae71dac227", "5e1d7986-585d-423d-a623-a134c7e5807e", "b14d460c-8af0-48ad-b044-0d8c71860adf", "9950fcd6-4150-4b7a-9590-5da2c4217ef9", "341fbfd6-0bee-4999-8e00-27aa46ea4e41", "b35ef148-0321-409e-99c5-9155f15982de", "97cba33a-51a9-4833-b9d6-ca810cb21b3c", "d71ed047-238b-4b2c-acf4-a8c2aae28dda"], "metadata": {"file_path": "src/pages/dao/stewards.mdx", "file_name": "stewards.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/stewards.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/stewards.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["those", "matters", "avatar", "stewards", "major", "holders", "which", "import", "democratic", "through", "governed", "decided", "process", "governance"]}}, "a331a65c47188836aaa0e5d36408367352f57290": {"node_ids": ["e2c23ed4-42d7-4c80-8bfe-0c997478ee76", "fc14ece5-dc61-4cb0-899e-5232f1a64ff1"], "metadata": {"file_path": "src/pages/dao/token.mdx", "file_name": "token.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/token.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/token.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["plans", "please", "tokens", "airdropped", "weary", "these", "airdrops", "decisions", "major", "another", "notices", "anyone", "could", "token", "governance"]}}, "3e8eae8b276e681c237335f58a222338f667815d": {"node_ids": ["8333a992-15f7-4004-9494-7b6347fc0152", "0a8274f2-77cf-4d7d-bb8f-64088ad279ba", "45364044-6199-4d48-a8b9-2e66d7d449f8", "78ff5745-6f46-4f62-b214-d2702042e9fa", "d468dfc7-1cb3-48b5-9cf7-36135a659db6", "8923ba87-dd20-46bb-a76d-8fdab4eb822d", "54cc9583-c314-4ef2-add2-b230255d4fb4", "a8ecf130-b38b-4bd4-830a-f969dfa36a62", "d25b0572-5509-45b7-871e-466d1f949eeb", "75aa1581-8bbe-4c1c-8108-8e99b441309b", "6215c304-acf9-4c94-b095-b8f351bf1402", "8a41e316-598a-415c-ba26-500b3f704312"], "metadata": {"file_path": "src/pages/dao/wg/rules.mdx", "file_name": "rules.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dao/wg/rules.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dao/wg/rules.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["document", "rules", "group", "represent", "amended", "these", "current", "represents", "working", "created", "state", "should"]}}, "3182e86b97c1203991444533b54ac5fc88a66ed0": {"node_ids": ["77229180-75f2-4771-954c-9135d78c9729", "f5b4991f-fec3-484c-8439-28687f42c7b0", "e8ecc2c2-b33a-481d-9d14-691183df01e8", "9ebc6237-6a00-4e19-9091-e54f298f40d1"], "metadata": {"file_path": "src/pages/dweb/intro.mdx", "file_name": "intro.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/dweb/intro.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/dweb/intro.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["component", "website", "hosting", "using", "first", "decentralized", "import", "popular", "badge", "contenthash"]}}, "ef8e6012999a7a6e32e082f29682eda36131faef": {"node_ids": ["fe491d36-fb97-497f-b6ae-08d36ca86f17"], "metadata": {"file_path": "src/pages/ensip/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/ensip/index.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/ensip/index.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["included", "table", "proposals", "ensips", "current", "import", "contains", "their", "summary", "improvement"]}}, "6d7e6431e5cddfd6a06ee7e9ab5822c1329b2b0e": {"node_ids": ["56777a82-cf61-4fe4-9d48-722af7d6bb4e", "054965fb-5679-4fc7-aca5-5d3f11c9c1ad", "f4d7e9c2-1138-49c1-80e6-5c7df819fe30", "ff65a235-2ddb-48f0-a3e7-241505cfdb27", "46a88e3a-3e44-4ebd-aebd-dce702abb0dd", "d582ea00-2bee-4fbb-854c-1a125ae13fee", "91713ecd-aefa-42bc-95c6-bd04ea372d96", "954ac9e1-bc4d-490d-ac3d-4b50e793ad83"], "metadata": {"file_path": "src/pages/faq.mdx", "file_name": "faq.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/faq.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/faq.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["asked", "ethereum", "frequently", "wallets", "supported", "about", "which", "support", "found", "dapps", "questions", "notable", "range", "service"]}}, "4f2da080a588c5ea1d8bfe0c9d68d53a356b91fd": {"node_ids": ["1d3c9772-f5fb-427f-b7ec-eead6aced26b"], "metadata": {"file_path": "src/pages/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/index.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/index.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ethereum", "mainnet", "taken", "offchain", "homepage", "layer", "starts", "using", "resolution", "import", "landing", "leveraging"]}}, "11c7e9d8f282fef7475458c482dec034b4df3874": {"node_ids": ["89a00069-0d2d-42c6-8163-567115cfefd2", "e740b92b-85cc-40ba-be92-7fb64b9dbede", "c6e24368-4347-4e90-a819-d0dd8c223fec", "a9bb3361-65ee-4afb-82eb-c1ed17ed3620", "404a6474-69bd-44ab-9646-63c593e6be57"], "metadata": {"file_path": "src/pages/learn/ccip-read.mdx", "file_name": "ccip-read.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/learn/ccip-read.mdx", "header_path": "/Layer 2 & Offchain Resolution/", "customer_id": 1, "source_url": "src/pages/learn/ccip-read.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["telling", "responsible", "layer", "resolution", "first", "registry", "associated", "where", "client", "clients", "resolver", "register", "fetch"]}}, "8b6cac76e24de27aa7e6bc8cbef3c13529b17454": {"node_ids": ["11fc1079-3dd2-4ef0-a191-d35de4c9bea9", "05e785c0-ab29-4bcb-80fb-c06be3ee9ef8"], "metadata": {"file_path": "src/pages/learn/deployments.mdx", "file_name": "deployments.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/learn/deployments.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/learn/deployments.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["multichain", "developers", "libraries", "would", "query", "deployments", "handle", "being", "address", "contains", "interact", "relevant", "information", "contract", "addition"]}}, "a1f0d505f567d310aa53ab01a415389cefcf1ec0": {"node_ids": ["8321f722-120d-4137-a070-d015f646daac", "04e492ba-5ec4-459c-ae43-f514616bb325"], "metadata": {"file_path": "src/pages/learn/dns.mdx", "file_name": "dns.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/learn/dns.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/learn/dns.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ethereum", "dnsgrid", "dnsusageexamples", "naming", "allowing", "system", "supports", "import", "embedlink", "users", "names", "service"]}}, "6a1aabb923cba74a491fbdfa4c1baa346145c68f": {"node_ids": ["1c2dad3d-55cf-41e7-89f0-29523b35a64b", "d696c437-1b5c-4cec-b9e6-8a9da6459a7e", "59a8ff39-64f5-4ec7-b73c-c52429c73238", "ba2f601c-49d2-4cdd-955d-437b4a254779"], "metadata": {"file_path": "src/pages/learn/protocol.mdx", "file_name": "protocol.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/learn/protocol.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/learn/protocol.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ethereum", "dnsgrid", "protocol", "enables", "naming", "learn", "about", "decentralized", "import", "embedlink", "ensprofile", "service"]}}, "b21225042294002d67fe849e6beac725ca866407": {"node_ids": ["978836bc-ab3d-4ae7-b20a-13b4397c2b1c", "d51cd805-0bbc-4437-ba05-d4c2714d38ed"], "metadata": {"file_path": "src/pages/learn/resolution.mdx", "file_name": "resolution.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/learn/resolution.mdx", "header_path": "/Resolution [The ENS Resolution Process]/", "customer_id": 1, "source_url": "src/pages/learn/resolution.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["forward", "limited", "going", "component", "forwards", "these", "include", "resolution", "associated", "records", "hideaddress", "fetch", "process"]}}, "4e20487d32191e476930dc85955953c46a3a1d67": {"node_ids": ["2baf1dd3-a0f6-45c7-a8c8-1c8ff9c31fd7", "7419e078-acb1-4ecd-b3a6-340703bada45", "c5508b32-c267-45b4-b16e-b20d6df51fda", "c2a79b32-ca6e-45dd-be58-8019a110def5", "3358ef0c-fc73-4dd3-b2bb-e9c6375784da", "00c45e54-9445-4e34-9fa8-60cfa851c7f4", "b57f7651-1a26-436c-b1b6-c2bc77a50eac", "d88f0fa7-7639-40f2-9acf-522c3ed2955b"], "metadata": {"file_path": "src/pages/registry/dns.mdx", "file_name": "dns.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/dns.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/registry/dns.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["learned", "functionality", "building", "extend", "registrar", "blocks", "responsible", "gasless", "level", "enabled", "implementation", "explore", "names", "dnssec"]}}, "50105f402ecbfa26a36820fdcabb328adb1e40ae": {"node_ids": ["2490e403-d24f-4af6-accd-ebda25b9c1f6", "f381ef0c-6bfd-4f4f-b6bb-4b2e7a040fa6"], "metadata": {"file_path": "src/pages/registry/ens.mdx", "file_name": "ens.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/ens.mdx", "header_path": "/The Registry [Root Registry of the Ethereum Name Service]/", "customer_id": 1, "source_url": "src/pages/registry/ens.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["domains", "allocation", "specify", "imposed", "governing", "owned", "smart", "called", "which", "following", "their", "anyone", "contracts", "rules"]}}, "143bab71b884e89f36539c349633b05cefb1a21d": {"node_ids": ["c9b3e111-8bf9-43fd-96dc-64c5a28b9506", "3fc45081-f03c-40dd-8adf-5e209d942c77", "f4d2bef2-ba45-4fe5-a85d-681b3e73d726", "1de5d9ea-aecd-4412-a1e5-c73d972c6002", "53095d5a-e99b-47e6-bdc3-2b22488d2405", "0b236a0a-60d4-4da3-9b08-e666415072f1", "d584710b-9372-4116-ace8-7fa80f3cb0a7", "161e40d2-82bc-455e-8e29-f63c0ed7eeb4", "4b6bd2e3-400d-4bde-af07-d63472bef197"], "metadata": {"file_path": "src/pages/registry/eth.mdx", "file_name": "eth.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/eth.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/registry/eth.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["special", "controller", "allows", "registrar", "responsible", "registration", "baseregistrar", "charge", "import", "fihash", "contracts", "trustless"]}}, "8556b4ada63422fb37dc12080942c8249702da36": {"node_ids": ["d53159c8-1edf-40d9-a35d-9c675283c8b9", "e3ab99ab-cd56-4913-b826-0efd9ba3cd24", "c9adf33f-ecc3-42ac-92b9-d5a83389995a", "38080fe9-697c-4a82-a115-a984296d66f1"], "metadata": {"file_path": "src/pages/registry/reverse.mdx", "file_name": "reverse.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/registry/reverse.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/registry/reverse.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["primary", "special", "ethereum", "registrar", "handled", "controls", "responsible", "address", "reverse", "using", "resolution", "mapping", "process"]}}, "e60c36d02599c01c70fccd50d0fdec161eba2274": {"node_ids": ["226146c3-4d51-47b8-a1aa-b0c5c93d26d6", "dfdcd136-cdb2-41d2-80cd-f958076d6dad", "21fb90d8-ec86-4af3-930c-25db961375af"], "metadata": {"file_path": "src/pages/resolution/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolution/index.mdx", "header_path": "/Resolution/", "customer_id": 1, "source_url": "src/pages/resolution/index.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["library", "little", "simply", "queried", "under", "about", "resolver", "resolve", "happens", "favourite", "every", "implements", "information", "contract"]}}, "159e51777ec2abedc5ccc951ec251d17f7c7cc98": {"node_ids": ["97d81078-226c-4841-ba5a-753b2457e085", "0fead943-ca0f-4992-9af2-ad059124df07", "540e0dec-4b2b-4f83-a399-0612df44d809", "8fe6cac8-dd3a-4087-8fd6-40844b0d3407", "384268df-4581-4f7c-8667-4c349abadec1", "72dfd693-3fe6-47d8-8c29-72b1427c8a1a", "3afb3b43-a789-4b38-8111-df7666f22db6"], "metadata": {"file_path": "src/pages/resolution/names.mdx", "file_name": "names.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolution/names.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/resolution/names.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["stored", "protocol", "directly", "important", "interacting", "processing", "handle", "readable", "undergoes", "their", "there", "recommendations", "steps", "names", "human"]}}, "b2f0b0b2bb02b617f046ca9b6a6fd877c7fe7ae1": {"node_ids": ["1b1ff46f-680b-4814-b633-d23c1de28e29", "de7224ae-1b0a-4839-811b-4dacfaa8abfb", "5dce8023-a5b4-463d-bd84-f5d338bb1456", "d30cbf3d-4dd3-4c58-a6d3-cc82cdb55e8a", "6d60dc1b-ace4-4326-8a4e-ae413861a951", "90bba9fc-fba7-4d05-96b4-a05c1110ac32", "8313bdae-5fc0-4fe7-b332-1b02ea0a18f4", "70353792-2001-4e58-9751-99ab517c9f34"], "metadata": {"file_path": "src/pages/resolvers/ccip-read.mdx", "file_name": "ccip-read.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/ccip-read.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/resolvers/ccip-read.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["offchain", "enables", "repository", "learn", "EIP-3668", "about", "import", "gateway", "embedlink", "properties", "resolvers", "trust"]}}, "161681ebf796409572b5c4eb8c67091275b68e4a": {"node_ids": ["74c8b1e0-0699-4736-8678-0d77acc01130", "8897d239-77d8-4444-89b9-2c95088a1fde", "9c83608f-054e-4dfa-9b81-4628e9ab4736", "080b1b1a-cca3-4d1e-9feb-f5fc446a6e6c"], "metadata": {"file_path": "src/pages/resolvers/interacting.mdx", "file_name": "interacting.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/interacting.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/resolvers/interacting.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["behaviour", "modify", "interacting", "advanced", "allow", "interface", "possible", "their", "users", "support", "checking", "EIP-165", "resolver", "contract"]}}, "60c2640f348629fc4962c1e10618f2683cd35de2": {"node_ids": ["a50e8f84-7f16-4821-960a-bdc7bc561855", "7295f6ee-b017-44c7-bfd5-8de903c6df6e", "55a89d0c-2f43-4f89-8cbe-597d6745b493"], "metadata": {"file_path": "src/pages/resolvers/public.mdx", "file_name": "public.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/public.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/resolvers/public.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["permits", "purpose", "suitable", "update", "public", "general", "their", "owner", "resolver", "includes", "suits"]}}, "7a67886d89bb0784e422ee7c927eb51cb1123ca2": {"node_ids": ["4d146f56-7968-4b84-94c1-92e68a4cb209", "415ad1cd-759d-41e0-a5ef-9d069aecd078", "b3e8c75d-c8b7-4100-92ef-f8ae0e4456e0"], "metadata": {"file_path": "src/pages/resolvers/quickstart.mdx", "file_name": "quickstart.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/quickstart.mdx", "header_path": "/Resolvers Quickstart/", "customer_id": 1, "source_url": "src/pages/resolvers/quickstart.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["myresolver", "naive", "bytes4", "external", "returns", "interfaceid", "return", "plausible", "example", "resolver", "contract", "basic", "function"]}}, "286e17f1308fb09cfa03975a8ca6a25832790446": {"node_ids": ["8c626164-c4a4-4833-88fc-17a3e73c0775", "58ac15b4-a23e-49a7-b7b7-657e247a85be", "9bd88261-9519-4468-940d-d782a5e77f54"], "metadata": {"file_path": "src/pages/resolvers/universal.mdx", "file_name": "universal.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/universal.mdx", "header_path": "/Universal Resolver [A swiss army knife for resolution.]/Overview/", "customer_id": 1, "source_url": "src/pages/resolvers/universal.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["forward", "version", "these", "argument", "resolution", "given", "bytes", "resolve", "records", "resolver", "methods"]}}, "2377f0e1338c2db7024c66952c1fee0e6170507d": {"node_ids": ["fb6f99eb-8eac-45b1-aeea-e7f0db9cf3ec", "941de30b-0845-4b20-bffc-b793cad06528", "ad87286a-4015-42fc-8194-a5888909f0ab", "9d6bc837-7e9b-42ae-89d4-3ccddde7fbe4"], "metadata": {"file_path": "src/pages/resolvers/writing.mdx", "file_name": "writing.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/resolvers/writing.mdx", "header_path": "/Writing a Resolver/", "customer_id": 1, "source_url": "src/pages/resolvers/writing.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["imyresolver", "external", "returns", "something", "interface", "might", "however", "extended", "resolver", "methods", "function", "simple"]}}, "7f66dc56567cfb3fa29430626fb4aab5fd255fe4": {"node_ids": ["ce2aa491-c90e-4a78-9d70-aa7f51c7f268", "8316821d-1ba6-44e6-9f64-ad786f438683", "2302c724-603c-449d-b856-c08dcdb6a843", "fcbe030f-93cb-4ddd-afd8-73d951c5897b", "60146657-9825-4dcb-97e0-d4985eaee3bb", "28df59b3-1bc8-4f7d-be61-b9556a8ec576", "f6717d28-06d3-4f9c-8b36-72cbf03a3f73", "d0304bb5-369a-4cf3-b354-355f97a81f05", "d552f198-d6b0-49ac-ba00-e4c968d736da", "2602e596-f107-4add-b35c-c240322816fe", "ed81e182-5cc6-4ff5-843e-95c909104924", "c7ae6db5-b344-45d3-b778-5c942c979970"], "metadata": {"file_path": "src/pages/terminology.mdx", "file_name": "terminology.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/terminology.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/terminology.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["multiple", "identifier", "glossary", "consist", "called", "separated", "terminology", "import", "embedlink", "contains", "overview", "terms", "technical", "names"]}}, "f3fb6dc2279c705193f531307a22840cd583caff": {"node_ids": ["ab31c5c0-e2c6-4cbe-8f24-84c25226b8b6", "0416dbc0-0794-4ea1-9ee3-76c53a724acd", "ccf5c083-dec9-4444-9e66-be0571075a97", "18fe7ee9-c80b-4fb3-abda-8eea6606b18a"], "metadata": {"file_path": "src/pages/web/avatars.mdx", "file_name": "avatars.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/avatars.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/web/avatars.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["special", "across", "enables", "makes", "profiles", "identity", "record", "avatar", "covers", "personalization", "avatars", "users", "getting", "their", "hideaddress"]}}, "52e19bc7f56ce4e0bedd245c19d616399fffefe6": {"node_ids": ["00f92b9d-9dea-437e-9d09-e44f754bc26b", "a9531166-643d-4fd6-a9b0-519771bd0e37", "0913eca2-476a-4980-9ae7-7f6fd51aea3d", "94e8c25c-faf2-49ab-b641-74135056dd52", "1b876c94-91dd-484f-839e-1c2326b27aa7", "4f8300fe-ee92-446c-b402-9846bd7abf0e", "bccc99b5-ed04-4153-a613-7fd6c7838a0f"], "metadata": {"file_path": "src/pages/web/design.mdx", "file_name": "design.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/design.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/web/design.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["interfaces", "guidelines", "experience", "making", "sendtransactiondemo", "addresses", "design", "ensprofile", "import", "users", "simplify", "blockchain", "designing"]}}, "8bc9342e9ff6bb64558730297314184c1da63565": {"node_ids": ["a0eeff40-0958-4c82-8c7e-cdc3b77e5bf6", "6ebff1be-dd06-4581-b177-bb5542ba7879"], "metadata": {"file_path": "src/pages/web/enumerate.mdx", "file_name": "enumerate.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/enumerate.mdx", "header_path": "/Listing a Users Names/", "customer_id": 1, "source_url": "src/pages/web/enumerate.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["wildcard", "onchain", "ownership", "these", "about", "which", "always", "exist", "notable", "exception", "meaning", "names"]}}, "edc9cabb3ad17e1bddd327b994b4a110d5f3aa89": {"node_ids": ["79c27988-3214-4b16-bffa-e9b236a31c0c", "b9e6634e-54c3-4a6f-884f-c06ff80db216", "edcb2275-1e02-440f-a61e-de412a086980", "0d40ea8f-bf2b-4479-9a1c-86141aec2107", "cd9beebb-d4f1-4497-be86-72200520c3f0"], "metadata": {"file_path": "src/pages/web/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/index.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/web/index.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["section", "leverage", "experience", "started", "improve", "standards", "break", "following", "import", "embedlink", "getting", "examples", "through", "walks"]}}, "48f54c1111b3058ec67086b604e9a49784554e7c": {"node_ids": ["4d7b38e0-1413-4d47-9ad9-4449b5d20fce"], "metadata": {"file_path": "src/pages/web/libraries.mdx", "file_name": "libraries.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/libraries.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/web/libraries.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["there", "connectkits", "jumpstart", "libraries", "quickstart", "tools", "these", "include", "everything", "interface", "import", "users", "connect"]}}, "4bbc298e3bacc512fa4af18cfcd0c9d8bb81d831": {"node_ids": ["891059cf-1b48-4415-9a47-28004c07ad6f", "e953f380-88f3-4859-aec9-b282c96b9e71"], "metadata": {"file_path": "src/pages/web/multichain.mdx", "file_name": "multichain.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/multichain.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/web/multichain.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["announced", "plans", "multichain", "migrating", "addition", "scaling", "crosschain", "recently", "roadmap", "internet", "entire", "registrations", "involves", "improved"]}}, "ff41251c7d67ab93bc7862cdcac037270157e545": {"node_ids": ["7856cb4c-f2f2-49ec-ab9b-feb997ec2db7", "d552f1d9-7580-4227-a97b-a27c0f6f9612", "fcfc5869-040b-43e7-bd3e-5f9ea39b28c4", "bec0c4a9-3193-4e17-bf96-0c716654f379", "618edb0d-88e7-46ae-8586-5ccf15072040", "40aace77-1f5e-41da-b405-a1003912c4f2"], "metadata": {"file_path": "src/pages/web/naming-contracts.mdx", "file_name": "naming-contracts.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/naming-contracts.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/web/naming-contracts.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["primary", "known", "accounts", "naming", "order", "while", "smart", "regular", "manage", "contracts", "commonly"]}}, "6556be6f2fd8263ac02122f8a4efe7c7fa4ec651": {"node_ids": ["579fc2a0-fe5d-4d1e-946e-17d2b73350c0", "be9ddbaa-954d-4701-8f45-f811ab5edbcc", "4654ee6c-084f-482d-8ed1-6ef84b3a91cb"], "metadata": {"file_path": "src/pages/web/quickstart.mdx", "file_name": "quickstart.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/quickstart.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/web/quickstart.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["connectkits", "addressrecords", "quickstart", "learn", "ensprofile", "import", "textrecords", "there", "checkout", "process"]}}, "00d90edc65181cee01ed17b88cb7e6ae5ce91bdd": {"node_ids": ["7bb623cb-9a78-4262-bf07-e93270e3367b", "e3a27a1d-d923-45df-8785-059ffa33404e", "12f31c50-162e-42f2-b03a-eaeadff8f7af", "3bfe1ecb-0e17-46f0-a869-53cc9236dec9", "5477001f-16d8-41f8-98f7-5e76c8eb98ff"], "metadata": {"file_path": "src/pages/web/records.mdx", "file_name": "records.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/records.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/web/records.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["retrieve", "records", "profiles", "pairs", "these", "value", "store", "import", "embedlink", "textrecords", "every", "information"]}}, "492a4e999a1114f68a9abd7be8e4e1d32cae23b5": {"node_ids": ["f9f569db-d51a-46c8-af43-ead72df1165d", "0610f0fe-d167-43c4-9ed6-28ceb5ac87ce", "ddaba8b1-bec8-4fa5-94e1-3df252712c41"], "metadata": {"file_path": "src/pages/web/resolution.mdx", "file_name": "resolution.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/resolution.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/web/resolution.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ethereum", "protocol", "addresses", "providing", "address", "instead", "lookup", "users", "getting", "resolve", "names", "blockchain", "simple"]}}, "dc53721b5061bbc02876a388723694163ab4fa80": {"node_ids": ["8314e5a4-2f5c-4639-a830-de71e3c0e634", "d0f065df-6a7f-4c7b-b94e-696818475ce4", "52400e5e-ae46-469b-93b7-1dcc6349ea6b", "115052c5-98f0-4822-bbcb-50c6dd1115b7", "3eb03534-5c17-49c1-b067-1781a4397b0f", "50b4bc0a-4332-4dba-8715-34b3a9e56341", "ff21ac58-0557-4157-ada7-65009e9ac5c7"], "metadata": {"file_path": "src/pages/web/reverse.mdx", "file_name": "reverse.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/reverse.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/web/reverse.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["primary", "retrieve", "registrar", "aesthetically", "addresses", "preferred", "super", "convert", "agree", "order", "reverse", "smart", "hideaddress", "names"]}}, "371a9324af5fb53afa43db1fb8d2a431ae6f5a31": {"node_ids": ["4b537fc2-ba1c-4fd7-a583-4862c5bf84ef"], "metadata": {"file_path": "src/pages/web/siwe.mdx", "file_name": "siwe.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/siwe.mdx", "header_path": "/Sign In With Ethereum (SIWE) [A specification that leverages ethereum signatures to perform authentication]/", "customer_id": 1, "source_url": "src/pages/web/siwe.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["issue", "writing", "whether", "authentication", "integrated", "above", "utilities", "program", "implementations", "using", "subdomains", "integrate", "easily", "phenomenal", "addition"]}}, "035b7e9143b00c05382e22591eec57689abe652b": {"node_ids": ["5ff76236-e60a-4d4f-ad74-3be5cf7bcd52", "d8636349-b258-4949-bb8e-097951315cef", "9ec85419-ddf7-41c2-9b50-15e4a17e86a6", "cc09cd80-cd20-4a8a-8b82-c333357d8cb5"], "metadata": {"file_path": "src/pages/web/subdomains.mdx", "file_name": "subdomains.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/subdomains.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/web/subdomains.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["deposit", "address", "subdomains", "subnames", "smart", "believe", "interact", "place", "favorite", "exchange", "contracts", "maybe", "should"]}}, "3cea54a8f500385d0fa1e927ebe9d0d40b49fd4f": {"node_ids": ["3a812dfc-d6fb-4712-9431-3dd8200d3fd2", "66d5d5a8-3051-4731-8643-0ac144a48cc1", "99022406-85b3-47b5-9272-37eed43c2724", "05a0658b-6cb1-4d22-a54b-4559d199f3e4", "47eab606-732e-4c73-a5ec-4c9e900397be"], "metadata": {"file_path": "src/pages/web/subgraph.mdx", "file_name": "subgraph.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/web/subgraph.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/web/subgraph.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["events", "covering", "allows", "address", "about", "subgraph", "names", "imported", "approximation", "build", "indexes", "reasonable"]}}, "13adf5c8e2b786fbbb46755aa34d17db3c75336a": {"node_ids": ["7c0740f3-b122-4d00-ac90-6bbe4c4fcfcd", "5206085b-5118-414c-b212-7ecdcb2eceb6", "77973aca-89a9-45fa-b6af-c56ae534bc36", "3d693d25-7f46-4f61-b81c-9c0c6f752ddf", "a8fab582-dfe8-4cf4-ad1d-f7a6125f9890"], "metadata": {"file_path": "src/pages/wrapper/contracts.mdx", "file_name": "contracts.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/contracts.mdx", "header_path": "/Name Wrapper Contract Details\r/", "customer_id": 1, "source_url": "src/pages/wrapper/contracts.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["unwrapping", "automatically", "issues", "calling", "directly", "wrapper", "transfer", "owner", "wrapping", "contract", "manager"]}}, "8f35585e76a1bc3ffed2cbf731dc1b332f816bbe": {"node_ids": ["cb59b098-cd1f-45b9-993f-b866156a9ac1", "c8fd5613-6329-46b3-8e69-a035226343ab", "4e784825-1460-43a4-8e44-e0a7411649cc", "fb6e7d93-de54-4a7f-98f7-f55b80e0766f", "c1cf4a62-c848-40e4-914b-7298bc440454", "c3968a55-daad-4c70-b09e-7f4d4b46532c", "8d4b8d6d-8111-4e70-9924-a95141f2bacd", "59bc2e56-4adf-4b71-9e1b-5fd258994d80", "56eaaf2e-09b0-4960-9b83-9135f0f754da"], "metadata": {"file_path": "src/pages/wrapper/creating-subname-registrar.mdx", "file_name": "creating-subname-registrar.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/creating-subname-registrar.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/wrapper/creating-subname-registrar.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["other", "ability", "registrar", "creating", "talked", "subnames", "stand", "about", "subname", "allow", "wrapped", "maybe", "people"]}}, "b7fc36adc8f2d912a33243922309512877129c27": {"node_ids": ["dd8da4a1-3585-4fdf-bf64-7c309f514adf", "55043b98-3915-4fec-8177-659e8e97039d", "2bf380bb-6fd7-4d56-9db7-8d22e48c2990", "b59bb394-9dc5-4ef0-a3ac-f229fb69d10a"], "metadata": {"file_path": "src/pages/wrapper/expiry.mdx", "file_name": "expiry.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/expiry.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/wrapper/expiry.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["automatically", "determine", "whether", "expiry", "wrapper", "order", "fuses", "itself", "determines", "import", "active", "burned"]}}, "83f04067b575b5e6b8627e7e55029d4e4508a63c": {"node_ids": ["9d70017f-f314-4b1f-86c2-9483bc1df7a4", "6473755b-6532-459a-8785-0b4facc6f487", "ae99e404-a5f7-47bc-b709-3c1a14911534", "f934e589-bf01-4240-94b7-7f20c9eb41ac", "549d76ed-67bf-4ae9-b078-83be4d61a4f7"], "metadata": {"file_path": "src/pages/wrapper/fuses.mdx", "file_name": "fuses.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/fuses.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/wrapper/fuses.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["other", "truly", "permission", "grace", "reset", "wrapper", "fuses", "which", "cannot", "available", "names", "manager", "section"]}}, "34357061b9d4b5ee5f2bd1ee3627dfe6c1d5d7da": {"node_ids": ["1ac6293a-ba6b-4daf-87bf-e3cf7145f87d", "639b3e37-a2f1-4b03-a5f5-48161c18cea4"], "metadata": {"file_path": "src/pages/wrapper/overview.mdx", "file_name": "overview.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/overview.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/wrapper/overview.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["allows", "looking", "wrapper", "video", "allowfullscreen", "import", "interact", "overview", "guides", "contract", "manager"]}}, "4291c1fc4ab9499cf43018e43448307f7b944a48": {"node_ids": ["9e0f872d-1c33-4a14-b31b-e6beb0f544a8", "9f5286d1-2129-4d21-a610-060453e515e1", "cb60f436-d51a-453f-a980-4e0ceae23d3e"], "metadata": {"file_path": "src/pages/wrapper/states.mdx", "file_name": "states.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/states.mdx", "header_path": "/", "customer_id": 1, "source_url": "src/pages/wrapper/states.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["graph", "wrapper", "these", "taking", "wrapped", "states", "possible"]}}, "86a114353b34fd2817fae8c83cf36934ba7397a0": {"node_ids": ["fa8b4974-baf7-4288-9209-f1c26f548bcc", "1cdf4f5f-88db-430d-81b4-bfcffa2a68a1", "302115c9-3411-4926-b574-124515fae95e", "d402fc3f-f489-409a-9d07-42d09ff29083", "456959e6-6174-48f7-962f-44ecd8a2185a", "96cc535f-2a72-4bb5-8ce7-ec2d748ffb3b", "598b2115-2931-4c58-97cd-3cee5a06e2f6", "7719744b-b314-47a1-9cf3-fadde3a8ce4e"], "metadata": {"file_path": "src/pages/wrapper/usecases.mdx", "file_name": "usecases.mdx", "url": "https://api.github.com/ensdomains/docs/blob/master/src/pages/wrapper/usecases.mdx", "header_path": "/Name Wrapper Use-Cases\r/", "customer_id": 1, "source_url": "src/pages/wrapper/usecases.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["issue", "tickets", "those", "emancipate", "event", "fuses", "choose", "custom", "still", "subdomains", "indicate", "maybe"]}}, "66aa6f8cc678aadc5a969459f6f9eb7a821c3620": {"node_ids": ["aa488d7e-a823-4e17-8c42-aecfe530d58c", "dfb36cc8-30a6-4178-a45b-1070d7d82a4e"], "metadata": {"file_path": "src/public/governance/constitutional-amendment-template.md", "file_name": "constitutional-amendment-template.md", "url": "https://api.github.com/ensdomains/docs/blob/master/src/public/governance/constitutional-amendment-template.md", "header_path": "/", "customer_id": 1, "source_url": "src/public/governance/constitutional-amendment-template.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["title", "description", "abstract", "proposal", "version", "someone", "pending", "short", "terse", "should", "specification"]}}, "89ceb70807b763bbcfc5fe74ae2e375f4dc2d782": {"node_ids": ["87dbb29d-0c4d-44ab-840a-3b64042b01ba"], "metadata": {"file_path": "src/public/governance/executable-proposal-template.md", "file_name": "executable-proposal-template.md", "url": "https://api.github.com/ensdomains/docs/blob/master/src/public/governance/executable-proposal-template.md", "header_path": "/[Executable] Proposal Title/", "customer_id": 1, "source_url": "src/public/governance/executable-proposal-template.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["abstract", "proposal", "version", "someone", "terse", "describe", "should", "specification"]}}, "1581ee7d39bf9661a367ac9d6b3f81d530b34bee": {"node_ids": ["b769955d-baa0-4fec-b3e5-49eeca7bbf85", "9354e5ff-e987-479c-88f0-7b599bd17ae2"], "metadata": {"file_path": "src/public/governance/rfp-template.md", "file_name": "rfp-template.md", "url": "https://api.github.com/ensdomains/docs/blob/master/src/public/governance/rfp-template.md", "header_path": "/", "customer_id": 1, "source_url": "src/public/governance/rfp-template.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["describing", "detailed", "level", "criteria", "scope", "description", "template", "winning", "include", "place", "overview", "seeks", "submission", "selection"]}}, "10a75d73e5d8d0e9b104683e6d7bfe09293b5023": {"node_ids": ["86b24062-b744-46e2-96d2-46d9168454db", "a9281b55-cf8f-4b28-ab11-3e323fd16b5a"], "metadata": {"file_path": "src/public/governance/social-proposal-template.md", "file_name": "social-proposal-template.md", "url": "https://api.github.com/ensdomains/docs/blob/master/src/public/governance/social-proposal-template.md", "header_path": "/", "customer_id": 1, "source_url": "src/public/governance/social-proposal-template.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["title", "abstract", "version", "proposal", "someone", "pending", "terse", "should", "specification"]}}, "256586df8a1aa3c09acfa2292c63735dccd854f5": {"node_ids": ["e2acdc8e-31bc-4315-86b2-f4afae560b13", "1ccb54dc-c127-445d-85c4-5c26372b9516", "310b95e5-24d6-4990-a813-f2e1eee3a750", "b4e15559-e1cf-4778-a24b-7c5f3ec0caf8", "0a661824-ee26-43bb-adf7-8452f63ab67e", "b957cb39-065b-42a2-b7cd-815b6abda9a7", "5950ef8f-f7b9-48fc-ae1e-c71dcc3a9bfb", "c1d53f88-c90a-45b4-9622-50a914687a47", "df26ab01-fa26-423c-86c3-5249d1249e88", "8d6ff66b-dc81-4444-90c4-d5380b061d04", "f1e811fb-4614-49e1-aed0-868e5c8efc52", "9e03292a-1c81-43a8-a3a9-66022aba8b89", "3db97770-b3da-4914-8b60-8f388e1ac8ca"], "metadata": {"file_path": "ensips/1.md", "file_name": "1.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/1.md", "header_path": "/", "customer_id": 1, "source_url": "ensips/1.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["final", "ethereum", "protocol", "abstract", "describes", "proposed", "documentation", "details", "ensip", "flexible", "provides", "resolution", "definition", "EIP-137", "basic"]}}, "6f3132a6cece86b6e85dd51fe358d6e6a38d7ee7": {"node_ids": ["19af9096-f4bc-4d29-80ea-84e5fff6b530", "f331e0af-1164-4e54-a308-69512875a6f0", "739d7393-1d00-4cae-9437-a9614910e2a8", "219871bf-1cf9-4c54-b9ca-472ec7b0c759", "5a22ca8d-07f7-4776-844b-e45fc466c183", "3cbf0c56-6dc8-427e-af44-f13729c9e357", "d5718c2b-aa57-4bf6-8a44-6620e314b894", "28515fe3-24fa-48a6-be43-5043a6ff43ba"], "metadata": {"file_path": "ensips/10.md", "file_name": "10.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/10.md", "header_path": "/", "customer_id": 1, "source_url": "ensips/10.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["mechanism", "wildcard", "EIP-2544", "draft", "resolution", "provides", "support", "names"]}}, "7f6e4c88a484a97feba808522fbaf331f642e5ed": {"node_ids": ["636f2416-da46-4b92-a0d7-b09aa22afa42", "1a8c30f8-a42a-4c92-89c1-1ee8f2d84959", "48d705bd-af37-44e8-a40f-44ae0a7c8e9a", "1eb0f5ca-9ddd-408a-b620-dfc883ae1fde"], "metadata": {"file_path": "ensips/11.md", "file_name": "11.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/11.md", "header_path": "/ENSIP-11: EVM compatible Chain Address Resolution/", "customer_id": 1, "source_url": "ensips/11.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["designed", "motivation", "address", "types", "define", "relies", "ensip", "which", "majority", "chains", "deterministic", "encoding", "compatible", "existing", "existence"]}}, "7fb288dc4f96a65f1f48a2bb1d9fd7803341d8ed": {"node_ids": ["ac5d6845-c74a-42f1-9601-9930731ddc36", "d99346ce-d736-4ad9-8ac2-96caff5a8557", "a7794d1a-ae8f-40d0-a63a-4509d74e68c3", "f6878cba-08da-4d59-a014-221cdef85829", "d1b8c08a-4fbf-4e2d-9f3e-411309f6c83e"], "metadata": {"file_path": "ensips/12.md", "file_name": "12.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/12.md", "header_path": "/ENSIP-12: Avatar Text Records/", "customer_id": 1, "source_url": "ensips/12.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["primary", "ethereum", "across", "known", "motivation", "integrated", "multiple", "profile", "facto", "widely", "started", "reverse", "avatar", "based", "specifying"]}}, "65198970a9ab108ebd764aff9cb2c57128dbb826": {"node_ids": ["8c64c0b2-c9d0-4c2b-9f03-857490f13573", "26bdd5b3-9b52-4aed-8563-5b725d92d86e", "7f209dbe-2942-415d-a54f-100d8d397c09", "a420e654-dac2-486b-83c2-20ad3ef4a351", "aec15d2c-e0a9-4c8f-bfcf-c0860dccff8d", "6c393daf-e8f9-4630-a65d-42612db449c6", "907cf2c7-9766-4bee-ad25-9c9ac2e490a4", "10f6d76f-f546-4d40-9007-9a63bd679499", "8986a232-8ea8-4a68-bf97-fdf64eecf6e0", "6b7bb132-5d5b-4b03-b618-fafdda3b78e8", "6ea18a6d-4f47-4aed-800d-6da1ce719ee2", "93538ea9-6016-4f34-a0e9-97f71e7d120f", "3adc2230-d0ba-46f9-877d-d4feab39e261"], "metadata": {"file_path": "ensips/13.md", "file_name": "13.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/13.md", "header_path": "/", "customer_id": 1, "source_url": "ensips/13.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["facilitate", "authentication", "safer", "sillytuna", "convenient", "jwahdatehagh", "crydoteth", "draft", "cyberpnkwin", "using", "wwhchung", "signing", "records"]}}, "fc127981d6650460d981c8b779d20efcb0c8ea02": {"node_ids": ["541b5ef3-fed9-4fa8-9c00-24badea00ca8", "45d9d141-093f-4c2e-be11-d3bbe57d24cf", "d61f1885-e2de-44a9-999e-b91069d8ee09", "3dbb9ec6-e3fd-4c2a-96e5-7d5f2b7d1a1e", "02c074ab-373d-4dcd-9f33-34b08a6732c8"], "metadata": {"file_path": "ensips/14.md", "file_name": "14.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/14.md", "header_path": "/", "customer_id": 1, "source_url": "ensips/14.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["source", "measure", "reveal", "parameter", "knowing", "abstract", "registration", "using", "about", "secret", "chain", "information", "reasons"]}}, "e4e517529d67eefc9e4cd7181dcbed90c43d4cd7": {"node_ids": ["fc521f2f-4b9f-4934-9414-8c63d98e8d16", "ce3e5ad8-6134-49d3-a259-c3bfd2c64b7c", "37a64b8b-4e44-46ae-899b-612137268ddd", "3d9c0da5-cbce-4726-a61e-147e01da4a44", "a3cfe595-bdfb-4819-94ec-f55f25a16f12", "c4c1776c-cfe9-41a7-942d-4e2318ca6af5", "36685bb9-75aa-4d89-b540-eed18a172990", "69d132f8-e263-4232-8b75-aac9085676c0", "9dd1b536-345b-4de3-a75d-8e269975beb0", "0fba014f-7a15-4dde-8330-57453fc070c7", "fcecf74e-ea20-46c2-8a99-0cebc05436c9", "c106f80d-1b73-4789-aa10-d08cee4fb664", "8aa39170-c67c-4827-8320-24a4fd4e3da3", "a0a9b1ea-9d22-48e1-839c-160c5a00659d", "34e1994e-9e58-429d-b0e4-db103caccc40", "5039b8f5-fdef-4de8-9e60-bdebd9dd43ea"], "metadata": {"file_path": "ensips/15.md", "file_name": "15.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/15.md", "header_path": "/", "customer_id": 1, "source_url": "ensips/15.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ethereum", "service", "abstract", "standardizes", "process", "record", "avatar", "draft", "ensip", "standard", "normalization", "adraffy", "storage"]}}, "1f87f18b953f1321696550473dc9105cb8c5343a": {"node_ids": ["dea03a73-2622-466f-8208-79524be2dc20", "4e95000a-aa88-4121-a400-44af17cb6a1a", "25f40eff-310e-4326-8a10-4cdcf7c2d397", "8642aa8e-ec01-4de1-841e-5994386f0962", "b5206bc0-fbbb-498b-b14f-20a4021dead1", "b9ff43aa-5678-462d-b9c0-c6bc98c1e836", "db87102d-a143-40a3-81da-6923ec440402", "3f18374c-682c-4a30-87fa-f31117fb671f", "a91550df-a634-46f7-a589-3c7df98b9d4b"], "metadata": {"file_path": "ensips/16.md", "file_name": "16.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/16.md", "header_path": "/", "customer_id": 1, "source_url": "ensips/16.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["offchain", "allows", "abstract", "metadata", "querying", "draft", "queried", "enabled", "ensip", "EIP-3668", "jefflau", "specifies", "makoto", "names"]}}, "eaa105e297475f3803a685f817f8c0e24131024a": {"node_ids": ["619eaea8-b2d6-470b-9239-679fff6229f2", "9ed8e1dd-8521-4826-bd10-1f1fbacdf0e9", "f3b9ec0f-537d-4cb0-a7ad-9acbe09e810f", "9ef1896d-ac99-4913-83f2-872b4e304549", "5db774ac-f6b8-4ab7-9532-1f95a9058c1b", "b7b43f5a-c95d-46b6-899c-b745cf29fb41", "107d3f9f-091c-4d07-86f2-e00c4a039ba8"], "metadata": {"file_path": "ensips/17.md", "file_name": "17.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/17.md", "header_path": "/ENSIP-17: Gasless DNS Resolution/", "customer_id": 1, "source_url": "ensips/17.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["transaction", "ability", "motivation", "thereby", "contents", "facilitated", "record", "claim", "EIP-3668", "prove", "which", "integration", "corresponding", "several", "notable", "verifying"]}}, "989f0088e5fcc9ce25d95b2332c00d2f9c649f02": {"node_ids": ["af3fd3ca-cf09-4a15-b63b-87b5dff1008c", "588642b5-6ade-4210-8eb4-caeb1dd0a27a", "55e8cd01-4487-48b9-b05d-26db3d5d7f48", "f6cb0853-50fe-4123-8322-7f70fa9067b4", "438b3f56-c110-4d65-8118-94f091c71755", "a2cfa7f1-35d0-4c24-b431-81afa8e3655c", "281c9da6-1ba7-4d7b-a76b-ac7e3d348515", "b7dd00c2-0372-45e5-ba66-768c16f4b704", "02fa54ff-e38f-4cda-b8b7-19324a1d81ee", "c38d59bc-e64d-434d-b56b-6d09bc59efbf"], "metadata": {"file_path": "ensips/18.md", "file_name": "18.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/18.md", "header_path": "/ENSIP-18: Profile Text Records/", "customer_id": 1, "source_url": "ensips/18.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ethereum", "identifying", "across", "global", "motivation", "profile", "although", "integrating", "started", "record", "become", "increasingly", "popular", "defined", "names"]}}, "cce0e42feff5749d2720b802910ae0346a10701f": {"node_ids": ["19498f37-7df9-4718-8e4d-9916cd9c5435", "16074cfa-e434-40e0-8b29-a018297d9395", "454136f5-6d92-4423-9e1f-217f68899dff", "64b19fdc-0a95-4391-8891-a2aece609b0f", "a9fef430-1e26-48af-ba7b-5bbed3818521", "834e2f53-8e93-427e-8012-9105619dd603", "834edb49-7119-48e6-bb9e-22fbd4a18b6d", "5818986d-269b-4807-9a00-105d9612ad8d"], "metadata": {"file_path": "ensips/19.md", "file_name": "19.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/19.md", "header_path": "/", "customer_id": 1, "source_url": "ensips/19.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["primary", "other", "allows", "EIP-2304", "abstract", "reverse", "resolution", "ensip", "setting", "specifies", "records", "names", "resolving"]}}, "014f22fde517f68ec763a546547581c2a18ef0ae": {"node_ids": ["492401d9-48ba-4743-a339-55ed16ef2f97", "a7cd6097-4784-47bc-a17b-15d135471541", "cee353c2-bc3b-4b4e-abd5-eb8655e5411a", "e5dc4910-4fbf-4f85-b519-ecf4c2a01eb7", "a7cf1caa-1cad-46d7-b455-2acdef19ff05", "b3acddad-1db6-47d6-9d61-fd710c680352", "43c6150a-6b00-4e4d-8a01-2a3585906bef", "3ebbd8c1-331f-4f5e-893f-2d96bbcfdedb", "3b8de6b7-e4a0-44b7-a956-b46ca62d8410", "d9e10699-7082-468a-b0f5-528fad959a78"], "metadata": {"file_path": "ensips/2.md", "file_name": "2.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/2.md", "header_path": "/ENSIP-2: Initial Hash Registrar/", "customer_id": 1, "source_url": "ensips/2.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["registrar", "motivation", "adoption", "factors", "order", "safely", "following", "optimize", "knowledge", "considered", "initial", "should", "governance"]}}, "69a5301e1b40c30face1b93dd813547f360786c9": {"node_ids": ["49864ab2-21b8-4a55-af95-723c06234a7c", "7c26d503-6972-4df3-8628-453f2679ba14", "9a943161-ac4a-4d0d-9169-76ebcb5617a3", "8bb77451-4e1b-4f6b-804e-1a7fcf8aeb22", "34e1b707-b7a5-4930-a74f-28d44c805f89", "d70c1ce8-fbbd-4c16-8c8a-a05e4f863eb7", "7c01448a-1afb-4841-b845-1142cc2dca33", "b33e2937-e0da-4049-9924-da49ea4e7a70", "be5e8158-dc05-4b57-a6c1-8053a706d906", "a9d138d4-878b-4635-a95a-57688b3096d5", "15e8ac6b-e0ea-4612-ac54-aaa526549c63", "e0c21ce4-3677-472e-adc9-dc788d2b1a3f", "0c55c9ae-a64a-440b-8b3e-ba90b7e96c73"], "metadata": {"file_path": "ensips/20.md", "file_name": "20.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/20.md", "header_path": "/", "customer_id": 1, "source_url": "ensips/20.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["wildcard", "domains", "mechanism", "writing", "offchain", "ethereum", "addresses", "growing", "abstract", "proposes", "within", "ensip", "standardized", "managing", "service"]}}, "a22de11d3b13a577bc7b1ecad7d7b88fe4a20f79": {"node_ids": ["07d1ed14-cdcf-4f64-9f88-ff9ac2399f42", "8f2a0c91-f4db-4cf5-a81c-c4c1c172f23d", "0aa6559f-9909-44d3-8ceb-fb0c3f78d1f6", "a81d1d42-c424-4090-903e-19ebfdeddbf4"], "metadata": {"file_path": "ensips/21.md", "file_name": "21.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/21.md", "header_path": "/ENSIP-21: Batch Gateway Offchain Lookup Protocol/", "customer_id": 1, "source_url": "ensips/21.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ibatchgateway", "string", "error", "request", "struct", "solidity", "EIP-3668", "bgolp", "interface", "following", "extracted", "information", "specification"]}}, "e2591cd379a655b639df11e1714eace4b9151c03": {"node_ids": ["a10498ad-35bc-403f-8aa6-2d5734d43cb3", "e39d4c6f-5d16-487c-8659-ebd044935024", "a9b1c354-4dad-402c-a09d-1dd7a3075cca", "f3d91f5f-08d1-4607-9eae-880e482dd88f", "2a267dff-c546-48aa-b403-78a1581794ba", "b8e1ee20-791f-4718-9efa-6c88cc496562", "b0727fea-925c-4729-ad88-85556660c83c"], "metadata": {"file_path": "ensips/3.md", "file_name": "3.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/3.md", "header_path": "/", "customer_id": 1, "source_url": "ensips/3.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ethereum", "addresses", "abstract", "reverse", "using", "resolution", "ensip", "EIP-181", "interface", "specifies", "resolver"]}}, "149becad4a5a8b66533fa5e62a4c0b8fa3e00613": {"node_ids": ["38476f23-98a0-4c24-a2aa-55913c3496c3", "fd153871-ac2e-41c6-99f3-4eec21071068", "f25cfbf5-220f-4ff9-bfd9-04f080023a68", "70dce5fd-bd16-49b5-89fe-f7bf1fc72471", "517dad91-7162-4449-bc32-d19c5fbdbdfc"], "metadata": {"file_path": "ensips/4.md", "file_name": "4.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/4.md", "header_path": "/ENSIP-4: Support for contract ABIs/", "customer_id": 1, "source_url": "ensips/4.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["typically", "particularly", "additional", "basis", "important", "abstract", "interacting", "metadata", "supplied", "required", "which", "burden", "updated", "where"]}}, "fd9eafadb2674c69661090ce2357d1f0ebc701af": {"node_ids": ["9a3e3df2-d615-45cd-b2a3-006d09afed05", "11af686c-8c2d-4e81-9aae-d5a2265cf8d9", "9416a4b8-bc96-4c68-a794-d4b1e8967149", "846d46a3-3076-4489-ad84-eff7eabbff53", "e54e6eba-8813-4986-bddd-2c8698a74fd8"], "metadata": {"file_path": "ensips/5.md", "file_name": "5.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/5.md", "header_path": "/ENSIP-5: Text Records/", "customer_id": 1, "source_url": "ensips/5.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["permits", "profile", "motivation", "metadata", "define", "reporting", "often", "ensip", "desire", "associated", "EIP-165", "general", "there", "resolver", "otherwise", "simple"]}}, "2ebbd239bb3e826723ce367562f033a702e1d27b": {"node_ids": ["48d56e49-87f3-4015-a9c4-8cfeae7fb9f7", "b856e896-b66c-4d27-8560-a628a397d44f", "ebf42227-1075-4948-bb4e-e4530d5b7f37", "2cac4e1e-8b54-4b31-ad7e-5a87db371d18", "da3f695c-212e-43c8-99fd-a928ae03b562", "a64062b0-4265-46de-a76f-d81f92cb235a", "d9c71133-9890-4fee-b120-0bc1b02d53b7"], "metadata": {"file_path": "ensips/6.md", "file_name": "6.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/6.md", "header_path": "/ENSIP-6: DNS-in-ENS/", "customer_id": 1, "source_url": "ensips/6.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["desirable", "allows", "motivation", "profile", "abstract", "highly", "defines", "ensip", "store", "provides", "authoritative", "resolver", "lookup", "features", "storage"]}}, "40b3a564f767884fbd05bb17f4dca3224b438fe9": {"node_ids": ["cda7e477-857f-488f-a971-53a75103a33b", "c7702d9c-c932-4a00-be0b-712bc568996a", "eb233699-d1d3-456d-bc8b-3904fab1bef6", "6065525d-67a3-4be9-bb56-16df5b26e239", "6af50d14-1367-47de-b490-8b12c0f345bb", "9d286f1a-8029-4e6e-9b90-fee29a35ba79"], "metadata": {"file_path": "ensips/7.md", "file_name": "7.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/7.md", "header_path": "/", "customer_id": 1, "source_url": "ensips/7.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["content", "final", "introduces", "addresses", "storing", "hashes", "decanus", "field", "EIP-1577", "contenthash"]}}, "f082fb711c93851bc355d199330461957d63441d": {"node_ids": ["1f30924f-293f-41b5-bb3a-50654ebf7539", "76c07528-fdc2-4545-9da9-be22c68d6d4e", "07cdc0e8-3cd8-4fd2-be72-bfb67a0eecbf", "51aa30f1-98c7-434c-ac8e-6fe0827a9982"], "metadata": {"file_path": "ensips/8.md", "file_name": "8.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/8.md", "header_path": "/ENSIP-8: Interface Discovery/", "customer_id": 1, "source_url": "ensips/8.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["interfaces", "those", "exposing", "abstract", "address", "applications", "method", "allowing", "ensip", "associated", "interact", "specifies", "discover", "contract"]}}, "25a20d5437e310362add9f625f65c5d689a8a191": {"node_ids": ["8016ae4c-25dc-420e-888f-0ade9c221184", "73e78321-82bb-426b-9118-29a95ab8d78c", "84e5ec93-fdc6-4d2e-9bef-1b2a03212954", "39afa38e-4f04-4fd0-bd2a-6490343ac3e5", "dfdd63e6-55c3-4f88-a3d2-f3908ee3d675", "f8d21455-0502-497c-b44c-df4ca2e43c15", "6752a6e4-5fef-472e-8e5f-07266d74fd3a", "b5dec119-2479-44f5-8688-91a688a8c222"], "metadata": {"file_path": "ensips/9.md", "file_name": "9.md", "url": "https://api.github.com/ensdomains/ensips/blob/master/ensips/9.md", "header_path": "/", "customer_id": 1, "source_url": "ensips/9.md", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["other", "multichain", "increasing", "introduces", "motivation", "addresses", "EIP-2304", "address", "resolution", "uptake", "which", "overloads", "blockchains", "field", "permit"]}}, "7f472b17e7351aecf059b72f4c3a7a336f79e844": {"node_ids": ["48283220-9879-4b22-b302-967f8070ce5b", "d86d6cdf-6579-42f8-86ed-594be7e85c5f", "a6460a7e-634c-4286-9c4f-4ab8c7ec191e"], "metadata": {"file_path": "docs/core/design/how-ens-works.mdx", "file_name": "how-ens-works.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/design/how-ens-works.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/core/design/how-ens-works.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["explained", "protocol", "works", "heart", "lookups", "registry", "smart", "which", "where", "contract", "serenae"]}}, "f673d123bf102db8a480f02babcde22ea573abf2": {"node_ids": ["13b614f5-4798-4a0b-8ccf-19a5c59e6e49"], "metadata": {"file_path": "docs/core/design/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/design/index.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/core/design/index.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["start", "heart", "description", "these", "doccardlist", "lookups", "throughout", "design", "terminology", "import", "terms", "contract", "serenae"]}}, "ad7fd21594c7fcbaa7fd48ab99c748c2e6138c48": {"node_ids": ["a418b110-eb44-4491-af4d-5431bfcbd175"], "metadata": {"file_path": "docs/core/design/where-are-names-stored.mdx", "file_name": "where-are-names-stored.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/design/where-are-names-stored.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/core/design/where-are-names-stored.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["stored", "where", "names", "serenae"]}}, "8a35cef8d35872816a3069afec8f20edc9bb1ae6": {"node_ids": ["73a41840-dfe4-4f74-8f3a-2403bfcba90b", "1d4a1dbd-bf20-4b02-86b1-db59816c45da", "92510c83-f484-4fcb-a99e-f2aa48679ca9", "59d6db8e-299d-4e58-83ab-1d63fb463eda", "cd5a4783-e1ba-41fe-b73d-2f98b6760f3d", "4cda5db1-bc4a-4f33-a2f5-fbdb67cf9d04"], "metadata": {"file_path": "docs/core/ens-use-cases.mdx", "file_name": "ens-use-cases.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/ens-use-cases.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/core/ens-use-cases.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["usecases", "cases", "everything", "cthulu", "things", "article"]}}, "2f1ad0d97bcddef3edc50a5d3149cfa91c9b8c09": {"node_ids": ["48ff6118-6f22-4ff3-934b-5a575cc44abe"], "metadata": {"file_path": "docs/core/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/index.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/core/index.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["profile", "picture", "record", "avatar", "doccardlist", "update", "cthulu", "import", "concepts", "background", "upload"]}}, "fb70d4c67d684aab5c530314642f9f3b7537cb11": {"node_ids": ["96b193c0-4265-4dc8-9dc5-e352bd9ce975", "501ec811-5095-4a1f-9e6c-4dd8a39dd701"], "metadata": {"file_path": "docs/core/records/avatar.mdx", "file_name": "avatar.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/records/avatar.mdx", "header_path": "/The Avatar Record/", "customer_id": 1, "source_url": "docs/core/records/avatar.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["other", "wallet", "looks", "avatar", "corner", "along", "which", "click", "shows", "popular", "information", "where", "manager"]}}, "1a38c8d2ea0470e33c5d60b8b96bbde29f8c8ca7": {"node_ids": ["79fdf51c-d696-4f74-a1c7-fdc56e19aae6", "878121c0-a736-4a7f-bb8c-1f8ddf98b569", "8e899786-8742-4954-a411-ed7cf595819c"], "metadata": {"file_path": "docs/core/records/coin-types.mdx", "file_name": "coin-types.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/records/coin-types.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/core/records/coin-types.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["integrated", "missing", "cryptocurrency", "coins", "services", "types", "added", "supports", "which", "support", "custom", "number", "names", "service"]}}, "e8814ff885859f19a3428f8f919b0a0cb6bee9f7": {"node_ids": ["7683ca08-a268-4f2a-91f5-bed579149532", "bbaa1797-b014-4b73-a1ea-a7d9d0e8b723", "71a4a0aa-80e1-41d5-a80c-143cb7d90bc6"], "metadata": {"file_path": "docs/core/records/content-hash.mdx", "file_name": "content-hash.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/records/content-hash.mdx", "header_path": "/The Content record/", "customer_id": 1, "source_url": "docs/core/records/content-hash.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["content", "enter", "browsers", "resolves", "point", "address", "record", "display", "decentralized", "allow", "location", "their", "compatible"]}}, "3cf4d46cddebf7ea75ef3ec2ff4bc98c611cab00": {"node_ids": ["c11483b9-b3a3-4059-9803-21268465efaa", "c9c69454-683e-4e96-a44a-218ad670a4cb"], "metadata": {"file_path": "docs/core/records/custom-records.mdx", "file_name": "custom-records.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/records/custom-records.mdx", "header_path": "/Custom records/", "customer_id": 1, "source_url": "docs/core/records/custom-records.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["already", "common", "notation", "storing", "imagine", "reverse", "default", "manager", "there", "service", "fields"]}}, "d12917a004424ffb54be29563b144bcc93b1b4dd": {"node_ids": ["0cf66a8d-9f40-4c10-b2cc-347a0021aaf0"], "metadata": {"file_path": "docs/core/records/eth-address.mdx", "file_name": "eth-address.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/records/eth-address.mdx", "header_path": "/The ETH Address record/", "customer_id": 1, "source_url": "docs/core/records/eth-address.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["primary", "ethereum", "providing", "address", "usually", "record", "because", "funds", "required", "determines", "summary", "records", "where", "setting"]}}, "3936833acdb985f1ac97c2f994a3c5af3d6cbd7a": {"node_ids": ["41c442b3-edb6-4555-8977-b122675ffd68"], "metadata": {"file_path": "docs/core/records/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/records/index.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/core/records/index.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["primary", "works", "identity", "doccardlist", "resolution", "cthulu", "import", "records", "wallet", "primaryname"]}}, "04022fd873e8f9fb7ab865b3c31feb0767d860d1": {"node_ids": ["1c820e9b-0b62-4610-a60e-8de41a890354", "8ac3787c-19b8-419a-b246-2f665478c2a1"], "metadata": {"file_path": "docs/core/records/primary-name.mdx", "file_name": "primary-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/records/primary-name.mdx", "header_path": "/The Primary name/How name resolution works/", "customer_id": 1, "source_url": "docs/core/records/primary-name.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["forward", "graph", "simply", "reverse", "record", "resolution", "points", "determined", "wallet", "where"]}}, "eae5aa6e20649d718e1f654bbad8fad1f4306033": {"node_ids": ["feb7323d-0286-47c4-84a7-00fa591b1e8b"], "metadata": {"file_path": "docs/core/records/resolver.mdx", "file_name": "resolver.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/records/resolver.mdx", "header_path": "/The Resolver Record/", "customer_id": 1, "source_url": "docs/core/records/resolver.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["going", "expanding", "unset", "public", "default", "manager", "0x231b0ee14048e9dccd1d247744d114a4eb5e8e63", "resolver", "scrolling", "setting", "changed"]}}, "79e275ce268d61858dadd6852d0cfb89bbc83c0e": {"node_ids": ["f594911f-f8dc-4086-af71-e46a0ce3af12", "74e781b7-666f-4848-a4d1-be06e9734d90"], "metadata": {"file_path": "docs/core/records/social.mdx", "file_name": "social.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/records/social.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/core/records/social.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["github", "social", "media", "twitter", "telegram", "discord", "cthulu", "contains", "records", "reddit", "manager"]}}, "377d94488afb12f6247eb287b1bac6a8e9652ef2": {"node_ids": ["e149df3c-ec64-4ccb-9b77-6940e4a5ea94", "eafed595-944d-4e92-90a7-e4391cf4462d", "a342de3d-4fe7-42a9-9ea3-425ee9dd9e68", "bb06f609-927d-4581-8f18-10d3dc5bac48"], "metadata": {"file_path": "docs/core/registration/fees.mdx", "file_name": "fees.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/fees.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/core/registration/fees.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["characters", "collect", "annual", "price", "dependent", "costs", "three", "cthulu", "number", "example", "register"]}}, "3cbcca882043c65501dbd4669c76b180993c0cba": {"node_ids": ["d9b701a8-c51e-4c33-b1b7-fcbf14bf2412"], "metadata": {"file_path": "docs/core/registration/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/index.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/core/registration/index.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["importing", "integrating", "registration", "doccardlist", "domain", "cthulu", "import", "supercharge", "supports", "integrate", "names"]}}, "de6ce5afbe09f30a04d3bfabc40bdf429a7c63db": {"node_ids": ["b4944352-4ccc-43a1-8b4b-59015f34af1a"], "metadata": {"file_path": "docs/core/registration/integrating-dns.mdx", "file_name": "integrating-dns.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/integrating-dns.mdx", "header_path": "/Integrating DNS names/", "customer_id": 1, "source_url": "docs/core/registration/integrating-dns.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["availability", "temporary", "cycle", "expiration", "through", "stages", "cthulu", "names", "information", "premium", "lifecycle"]}}, "56513518ae1f305e3f1ccee1d417cd291c2d1f3d": {"node_ids": ["787c832f-9d95-44d7-811e-3a61cfd43bb0", "e3895ca1-4eda-4b2a-bbdf-42006cc099ad", "2da609ff-11d1-449d-ac40-e8043e8a1652", "cacd16c9-986c-430c-9b77-b072affd8166"], "metadata": {"file_path": "docs/core/registration/name-lifecycle.mdx", "file_name": "name-lifecycle.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/name-lifecycle.mdx", "header_path": "/The Lifecycle of an ENS Name/", "customer_id": 1, "source_url": "docs/core/registration/name-lifecycle.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["availability", "graph", "buyer", "normally", "active", "normal", "become", "inactive", "available", "without", "classdef", "class"]}}, "76520a818d77c80964d651e20eb8b4aa6ea824e5": {"node_ids": ["4f60c508-7c26-4c37-ac3c-c45ce5b40fa9", "c0763d78-3ef0-475c-ae88-806c4bb5c3af", "72a36960-0f71-4910-881a-ddb0a61d7f2e", "ae85ca46-b6e0-4a1a-a204-54ad5e9f8f35", "073c5872-3de8-420d-92ce-a930982a41ab"], "metadata": {"file_path": "docs/core/registration/registration-steps.mdx", "file_name": "registration-steps.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/registration-steps.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/core/registration/registration-steps.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["request", "registration", "cthulu", "register", "there", "commit", "information", "steps"]}}, "aab8e4a05906198ddd17f386b0da935faa14526d": {"node_ids": ["e24a3c59-b619-43a2-b2b0-b9be3996f1b5"], "metadata": {"file_path": "docs/core/registration/renewals.mdx", "file_name": "renewals.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/renewals.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/core/registration/renewals.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["structure", "require", "ethereum", "development", "renewals", "network", "registration", "registering", "renewal", "currently", "continued", "addition"]}}, "a158bb06ce772414a566b5ce58713e6c2ca78887": {"node_ids": ["fe95ede8-4677-4e52-94d3-5b91deb7c766", "80b94b93-e890-4414-963d-25435a80cb7d", "a130b221-b7ce-49e4-96d5-eef3d469fb1a"], "metadata": {"file_path": "docs/core/registration/temporary-premium.mdx", "file_name": "temporary-premium.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/registration/temporary-premium.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/core/registration/temporary-premium.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["temporary", "cthulu", "auction", "premium", "dutch"]}}, "95610813901697287facb0b791e554c35a059060": {"node_ids": ["b635c152-cb2d-496d-abb3-91f5bc52fc2d", "34ba79c9-0fec-4c82-823d-9b0ce3d8d32e", "989b7af6-1394-4d65-a1f9-5247147d18f4", "9d824206-6431-4a0c-893e-d6b53444de1c", "fd8601ba-a7ee-4188-ae16-7be783718a71"], "metadata": {"file_path": "docs/core/what-is-ens.mdx", "file_name": "what-is-ens.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/core/what-is-ens.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/core/what-is-ens.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ethereum", "built", "protocol", "service", "translate", "naming", "standards", "decentralized", "smart", "based", "adheres", "contracts", "blockchain"]}}, "c88f22fa49d1f5be1735f3753c868bacc95853e6": {"node_ids": ["7c94458b-fb45-495d-8f5d-e62b807637a5"], "metadata": {"file_path": "docs/dev-basics/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/index.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/dev-basics/index.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["basics", "sheet", "cheat", "developer", "quick", "doccardlist", "cheatsheet", "import", "integration", "integrate", "serenae"]}}, "e1f5e617cedcd3db41c3982126270037e57139ac": {"node_ids": ["f0ba38f9-b506-42cc-b058-9a086b44da4c", "c0cc0e00-486e-405a-b6cd-6818938f6922", "132b5491-ba5a-4b66-be7b-9290b8533cff", "5b41f0fe-4414-4417-b7ee-1dce4ccc22a2", "efcab669-8add-436a-89f1-dcd1fb8e8ffd", "851b7ae1-fca6-4d05-9051-1d86d0a32c28", "b0e34356-6a4d-4d64-8434-f67dc352d5d0", "f5697a90-f95b-46f4-a500-d123b7e6ed00", "1a7c6c77-8921-447d-a598-f695de5a16c7", "1781bb9a-d78b-40d5-ab6a-e3d30d3d85f5", "70d3cca9-625d-4bd5-835b-5113f50de443", "41bc6c09-c165-4963-a6f9-0f5da0179860"], "metadata": {"file_path": "docs/dev-basics/integration/quick-cheatsheet.mdx", "file_name": "quick-cheatsheet.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/integration/quick-cheatsheet.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/dev-basics/integration/quick-cheatsheet.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["setup", "sheet", "cheat", "website", "quick", "starting", "using", "react", "scratch", "ntegrating", "build"]}}, "4ec3e8d81b62c4cc78c1620ba3246141b0228ca9": {"node_ids": ["7f3f950a-7f8c-4ae7-b8ed-c4f426ff9749", "de51b2ea-5776-4ff2-9bb4-b737d2dfd629", "957327cf-dab6-46f3-af96-083ce34ff6bd", "60e4685f-91fb-4cce-83d9-096c118e018c"], "metadata": {"file_path": "docs/dev-basics/namehash.mdx", "file_name": "namehash.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namehash.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/dev-basics/namehash.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["certainly", "different", "numbers", "represent", "decimal", "these", "hexadecimal", "pieces", "encounter", "working", "overview", "value", "almost", "technical", "token"]}}, "83c57d0116c654d1fde6fe6be130a8936772c0d7": {"node_ids": ["0f896d08-f392-4279-a470-ab00a1372a98", "0b050f28-104b-4f60-a515-ca503fa741ca", "221c1c3e-891e-4c85-85bd-1daca8f6dc5f"], "metadata": {"file_path": "docs/dev-basics/namewrapper/approved-operators.mdx", "file_name": "approved-operators.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/approved-operators.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/dev-basics/namewrapper/approved-operators.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["permissions", "operators", "wrapper", "fuses", "approved", "namewrapper", "serenae"]}}, "6e9972f4ecf308f1be7ed80d272c99058e9e0092": {"node_ids": ["e13af675-2902-4001-a951-155f8a25efc9", "f201e863-9ac6-474c-86f6-81a1ae04ade3", "a702c5b3-eb85-479f-8b38-aaf028b8b0e4", "c9097a95-20be-430c-a68b-a68d80945721", "e556167c-0ba7-44cd-8430-de6f784e1e27"], "metadata": {"file_path": "docs/dev-basics/namewrapper/expiry.mdx", "file_name": "expiry.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/expiry.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/dev-basics/namewrapper/expiry.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["expiration", "expiry", "wrapper", "wrapped", "namewrapper", "serenae"]}}, "ea26a70f0c082a509c0ec2173624770771a0f284": {"node_ids": ["6758da10-88a8-4264-b156-856b97594dae", "f0f66940-8fd6-4d98-84fb-a1af88f7ecd3", "d0b11c34-d92b-49f6-a8a6-189efe65b287", "ef1452fa-0e78-487a-a416-10b1ce77c0ce", "781289cb-23cb-4771-95cb-129de2bb24d7"], "metadata": {"file_path": "docs/dev-basics/namewrapper/fuses.mdx", "file_name": "fuses.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/fuses.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/dev-basics/namewrapper/fuses.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["permissions", "wrapper", "fuses", "namewrapper", "serenae"]}}, "b19165f8c68139c21b5716496eb54813a7934126": {"node_ids": ["4a9a9263-33c0-4121-9000-ae44b2579778"], "metadata": {"file_path": "docs/dev-basics/namewrapper/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/index.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/dev-basics/namewrapper/index.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["wrapper", "doccardlist", "import", "overview", "contract", "namewrapper", "serenae"]}}, "a9aae77c5912b21f204856882b43e031d90ab9e7": {"node_ids": ["fa647d48-cb54-4db6-a3dc-789f1537896a", "6d9e17d2-0ea2-4b9b-b4f1-4a5b2ac33035", "cb2fa1b3-9773-400d-80b8-278cbb1b8988", "fdfcec0c-c3b1-4166-b007-dbb3cde6cb87", "0bd6ac79-b59f-4eda-b01f-2dca9473d218"], "metadata": {"file_path": "docs/dev-basics/namewrapper/overview.mdx", "file_name": "overview.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/overview.mdx", "header_path": "/Overview/", "customer_id": 1, "source_url": "docs/dev-basics/namewrapper/overview.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["themed", "separate", "parent", "wrapper", "unless", "associated", "before", "custom", "owner", "created", "without"]}}, "e388974b7c1a48f2123d0c1f6e9fb557cf726ed1": {"node_ids": ["d34764f9-082b-4b34-8560-55d3871c00cd", "dd6e4d6f-3852-48f7-980d-efe9a137585a", "e9cb1aae-aa73-435e-9645-9e163aaf3472"], "metadata": {"file_path": "docs/dev-basics/namewrapper/states.mdx", "file_name": "states.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/states.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/dev-basics/namewrapper/states.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["explaining", "namewrapper", "wrapper", "wrapped", "states", "serenae", "names", "through", "lifecycle"]}}, "82b92aa69032d14de0733589b2dd55fdeb12e61b": {"node_ids": ["e4516197-9820-4de6-9b9f-281d77e7d24d", "ce05d3af-a828-4b97-9c1a-6b9a5686ddbe"], "metadata": {"file_path": "docs/dev-basics/namewrapper/use-cases/issue-tickets.mdx", "file_name": "issue-tickets.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/use-cases/issue-tickets.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/dev-basics/namewrapper/use-cases/issue-tickets.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["issue", "permissions", "tickets", "wrapper", "fuses", "subdomains", "namewrapper", "serenae"]}}, "5afa175c67246cdf95838acf7af829ddc04c452e": {"node_ids": ["32d85a66-600c-4087-aa86-276476d672d3", "66272ba0-0d63-440c-9474-9b9eb971540c"], "metadata": {"file_path": "docs/dev-basics/namewrapper/use-cases/lock-records.mdx", "file_name": "lock-records.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/use-cases/lock-records.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/dev-basics/namewrapper/use-cases/lock-records.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["permissions", "wrapper", "fuses", "resolved", "records", "namewrapper", "serenae"]}}, "d6d6cfb75bea34c2dc1d6b69b7f13e4be508aa7a": {"node_ids": ["6d73f126-7390-46f2-9103-cc327fc67aa0", "462d7fc2-4e96-4350-98ab-0a74fef0983b", "e8751f60-10a7-41fe-8bd8-87f8ebe28614", "765447fa-2b8e-4d44-a605-a509db3666dc", "79f2b5ad-ffd3-4bf8-bd5d-d11c19cb3220"], "metadata": {"file_path": "docs/dev-basics/namewrapper/use-cases/nft-holders.mdx", "file_name": "nft-holders.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/use-cases/nft-holders.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/dev-basics/namewrapper/use-cases/nft-holders.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["permissions", "wrapper", "fuses", "subnames", "holders", "namewrapper", "serenae"]}}, "45aaf0fe6de941f721b00d0d740c7d6b24e606f0": {"node_ids": ["c255850c-9f1e-455a-aee2-5898e492da45", "8d6897db-7d60-4ea8-9851-92eca308c319", "3c22067d-ab2c-41ba-a2d8-f90ae11d748d", "ec781f92-9cc1-47e7-b197-89a46f871e59"], "metadata": {"file_path": "docs/dev-basics/namewrapper/use-cases/sell-rent-subnames.mdx", "file_name": "sell-rent-subnames.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/namewrapper/use-cases/sell-rent-subnames.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/dev-basics/namewrapper/use-cases/sell-rent-subnames.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["permissions", "wrapper", "fuses", "subnames", "namewrapper", "serenae"]}}, "73f62c0f8e8a79fafc98311d1c45280390e91965": {"node_ids": ["37676dbb-ef25-4ec9-b950-5f10076d9e73", "060b241c-88fc-4f4f-9f81-3253d2d525b4", "b37f0112-8e5f-49c2-8f49-510c506a7c1a", "439c3f20-a3b0-4d95-ba84-f542f5087eb3", "c8531571-2d1f-42df-90a4-fa26b0be12cd"], "metadata": {"file_path": "docs/dev-basics/set-contract-primary.mdx", "file_name": "set-contract-primary.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/dev-basics/set-contract-primary.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/dev-basics/set-contract-primary.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["primary", "identity", "address", "regular", "wallet", "contract", "primaryname", "serenae"]}}, "45d13c8ad1e99470de343f89ca9eb092b56e2572": {"node_ids": ["c6e85c37-7088-4237-8d4e-060e503ddb77", "9fc7fe9e-0ff0-462b-a692-daba87acfc83", "0dac04e3-83d9-434b-a8b3-3e1b093439d8"], "metadata": {"file_path": "docs/faq/bug-bounty.mdx", "file_name": "bug-bounty.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/bug-bounty.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/faq/bug-bounty.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["submit", "rewards", "program", "bounty", "found", "cthulu", "report", "anyone", "submission"]}}, "c0aa4204dd8d5ec2d2d44532743fa0a9097171e2": {"node_ids": ["71db8c1e-1f65-46b6-87d3-e543a0f37eee", "90ff720a-2fd3-4f28-9667-68a4b77e45b3", "72ff670c-a984-404c-acb8-217da8edba24", "87e89258-7d8a-4632-bd72-bd1992b37de0"], "metadata": {"file_path": "docs/faq/contributor-guidelines.mdx", "file_name": "contributor-guidelines.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/contributor-guidelines.mdx", "header_path": "/Contributor Guidelines/", "customer_id": 1, "source_url": "docs/faq/contributor-guidelines.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["formatting", "blocks", "written", "results", "opposed", "produce", "markdown", "articles", "since", "using", "create", "format", "difficult", "should"]}}, "a4411c73dc1aa331618d9d0d632e2ba5827444af": {"node_ids": ["f9069fd1-d628-4fa5-82a6-a1b343736ed3", "acd0935a-955c-4013-ad82-f32a5ca56ca9", "9f3d17e9-48ff-46f6-9764-8b991308cc70", "730b8de2-7347-4576-a7d3-ae28ce45166e", "598acf31-5064-40df-8217-939607b1845c", "a7aa00fa-7a85-4ef1-8076-950e8cf7f439", "e4b413bf-9b94-4fe0-888c-da633f8be2d0", "168aa1a5-d857-4e0e-8091-107688f72a4e", "010d0b08-5203-49d5-ad13-1f0c066f4699", "e0c385a1-64d1-40e4-ac09-b62a0729da11", "99c8121d-1e25-4c7d-ace2-81a5b4ef6dbd"], "metadata": {"file_path": "docs/faq/dnssec.mdx", "file_name": "dnssec.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/dnssec.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/faq/dnssec.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["domain", "cthulu", "import", "integrate", "dnssec"]}}, "30053960561d7e77879410dccc86baf9c6d9239c": {"node_ids": ["3f7812af-53a6-4bae-aef2-65e36df1c0c9", "d2ea97a6-92a2-46e6-8581-30d79ebdc0fb", "0895f810-6420-424f-8206-067847102858", "be15a7ec-76d2-4ba9-8e82-8411ea552b74"], "metadata": {"file_path": "docs/faq/manager/general.mdx", "file_name": "general.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/general.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/faq/manager/general.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["there", "after", "labels", "grace", "length", "wrapped", "general", "happens", "maximum", "bytes", "names", "cannot", "period"]}}, "b17389139497f7004d4451ada3cb10e4ec0d1514": {"node_ids": ["e533cbd1-13e8-46f5-9b79-86e2227e72e2"], "metadata": {"file_path": "docs/faq/manager/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/index.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/faq/manager/index.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["storing", "doccardlist", "cthulu", "import", "managing", "records", "manager"]}}, "75d4383302ea37c7aa3b3f7acbe9c8ed3b798b94": {"node_ids": ["87c9c159-9e02-4b09-83fa-dc32ea367433", "fca7732b-085b-4ec2-8f14-e5a58b44ccd7", "c7455f0b-442e-4ac2-aadb-d843ef3c1bde", "be09359e-1de7-46ad-bba2-7df1c76d0c5d", "a5ef58db-6e3d-4a8e-884f-457593d4e317"], "metadata": {"file_path": "docs/faq/manager/managing-names.mdx", "file_name": "managing-names.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/managing-names.mdx", "header_path": "/Managing a name/", "customer_id": 1, "source_url": "docs/faq/manager/managing-names.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["primary", "ethereum", "allows", "address", "reverse", "display", "money", "points", "dapps", "resolve", "sending", "connect"]}}, "85550ef4c3755f1377fde344cd61a25fc2674d58": {"node_ids": ["26dc955f-f3ed-4e7c-8313-10ead465464f", "5e4623ed-18df-4e1b-b73f-1d7e88942659", "ada66e15-6e09-4e85-9b6c-441024372c68", "7f8d2c61-671d-4ef8-81ba-2bb323626a55"], "metadata": {"file_path": "docs/faq/manager/registering-names.mdx", "file_name": "registering-names.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/registering-names.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/faq/manager/registering-names.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["other", "registration", "registering", "cthulu", "import", "register", "names", "manager"]}}, "a463bdc37f43bab9ff6d2cd183ac928ff9a124af": {"node_ids": ["852816ae-27f5-4f84-aad0-9e0aa67fb694", "726f2bf4-c7aa-4f64-8467-efb7e8640708", "0f04c2f7-6690-44a2-b35b-1520e959be6f", "fc1fc752-5b1c-40f0-a36d-4dace22102fb"], "metadata": {"file_path": "docs/faq/manager/troubleshooting.mdx", "file_name": "troubleshooting.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/troubleshooting.mdx", "header_path": "/Troubleshooting/", "customer_id": 1, "source_url": "docs/faq/manager/troubleshooting.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["stored", "jumble", "instead", "access", "using", "decoded", "search", "shown", "possible", "cannot", "manage", "still", "names", "matched"]}}, "7b748625a09cc02cabbd6c8aae28cb79de91842e": {"node_ids": ["c6528ffa-1e92-497a-ad7c-774e047773bb", "5bcf2424-320c-47c2-9b78-514ef53c918b", "23703675-b1a8-4e42-99fd-3a89a5ce758c", "86cd3857-971f-4c1f-ac92-5f0a3e56e1ae", "dece2124-4c96-42eb-9300-55564a3ad274", "21ca4057-4934-4c1c-b374-1e198113ef5f", "6429b799-3671-445c-85b2-22312b8f8a24", "51cfb133-b545-47ec-a509-245afc5f411a", "6c67c5af-ab33-41bb-bab2-870223be2e21"], "metadata": {"file_path": "docs/faq/manager/v2-manager.mdx", "file_name": "v2-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/manager/v2-manager.mdx", "header_path": "/V2 Manager FAQ/", "customer_id": 1, "source_url": "docs/faq/manager/v2-manager.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["though", "addresses", "point", "tools", "applications", "hosting", "store", "static", "which", "regular", "technically", "there", "resolve", "suggest", "attached"]}}, "c4764c5f66e4b85ae0309c9c39e0291e3f9581b5": {"node_ids": ["044cb4be-c26b-49b6-a678-e204bdb4f79e", "5aa226a5-e05e-4f1b-9fda-40473394df23", "3544fe8f-2d4e-458e-a9cd-fcb1658e8973"], "metadata": {"file_path": "docs/faq/marketplaces/ensvision.mdx", "file_name": "ensvision.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/marketplaces/ensvision.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/faq/marketplaces/ensvision.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["markets", "ensvision", "vision", "marketplace", "market", "cthulu", "secondary", "marketplaces"]}}, "3d0d64194d615afb520db59c13d0c4490263d0c8": {"node_ids": ["fc2b08e3-c8a1-40cf-b41a-77f73692c106"], "metadata": {"file_path": "docs/faq/marketplaces/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/marketplaces/index.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/faq/marketplaces/index.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["previous", "after", "markets", "important", "marketplace", "registration", "purchasing", "cthulu", "period", "secondary", "things", "marketplaces"]}}, "e57b614081ef77937fc68e9933db694052ef66d7": {"node_ids": ["5bd7e501-0aa6-48c8-90a5-520ae826c804", "5612835f-7577-42fc-a4f0-db311db2c210", "ccf6f4d4-1235-4f1b-a4b3-4017064d27d3", "48c08aba-aa93-4b75-9f2c-f40d74abf2af", "4e9ab68e-e014-4ee0-b29d-5233bae3e041", "b0206fd3-120b-4fcb-9bb1-94e74f4d2cda"], "metadata": {"file_path": "docs/faq/marketplaces/opensea.mdx", "file_name": "opensea.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/marketplaces/opensea.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/faq/marketplaces/opensea.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["markets", "marketplace", "market", "cthulu", "opensea", "secondary", "marketplaces"]}}, "c9a91eb240b0c2abf37eba616e546a47dc89b646": {"node_ids": ["46c3c3be-813c-4455-8a1c-bf9bd42fe316", "52ed74bf-acad-4a2e-99ea-ca7b0c2ab4f7", "8edd7592-23be-4cd0-9446-ddd22cccace3", "2a1a14bc-4ebf-4bd4-ab1f-a3361148f31b", "d5157af2-bad5-4a26-a26b-50e9b87983fb", "f4b38551-9784-4521-90dc-cf68117fdcae", "17f8080c-6887-4e10-95f6-1146ec9c0907", "2423c392-53a1-42a8-be26-cdde9dee597f"], "metadata": {"file_path": "docs/faq/normalization/homoglyphs.mdx", "file_name": "homoglyphs.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/normalization/homoglyphs.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/faq/normalization/homoglyphs.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["watch", "crypto", "buying", "characters", "common", "different", "composed", "names", "homoglyphs", "trading", "sending", "meaning", "things", "identical"]}}, "031ddfe01306f3a776c1e026c769282f245a5983": {"node_ids": ["b6eda0ba-2726-40c5-ba34-0638cc985881", "8e5a82da-63d7-45db-97a2-c25e5c737c73", "647a8712-b62b-40db-8c5d-7a7cf36a6981"], "metadata": {"file_path": "docs/faq/normalization/normalization-faq.mdx", "file_name": "normalization-faq.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/normalization/normalization-faq.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/faq/normalization/normalization-faq.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["normalization", "there", "estimates", "depends", "cthulu", "rough", "cannot", "released", "rules"]}}, "1fbc76632e9707a983d814c8b21dc06e6176235f": {"node_ids": ["42545cec-c62d-4fdc-a00b-b09667d2c253"], "metadata": {"file_path": "docs/faq/secondary_market.mdx", "file_name": "secondary_market.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/secondary_market.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/faq/secondary_market.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["after", "markets", "important", "marketplace", "registration", "purchasing", "cthulu", "period", "secondary", "things", "marketplaces"]}}, "a57753c31a5d59b48c7e5d141653599f8086c610": {"node_ids": ["1487e158-dfba-4c97-8d89-837386f7cc39", "554f7c1b-9cae-4517-9506-46ef15bcfbb4", "e4e5b658-e7b2-47c5-a7e3-0541056a2cd7", "5aa18332-5a68-4038-a09a-6c81d3912971", "22632927-b496-4e37-ad2f-871d87f73693", "b112cea0-72da-4a99-bd96-ead723ffa09a"], "metadata": {"file_path": "docs/faq/security.mdx", "file_name": "security.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/security.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/faq/security.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["safeguard", "secure", "security", "theft", "cthulu", "precautions", "wallet", "phishing", "stolen"]}}, "8c44f027ea1b419105b11d8e2288e92c1edcef82": {"node_ids": ["7d9c734b-2066-45a9-9b55-922ee932a1ab"], "metadata": {"file_path": "docs/faq/services/twitter.mdx", "file_name": "twitter.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/services/twitter.mdx", "header_path": "/Twitter/Frequently Asked Questions/", "customer_id": 1, "source_url": "docs/faq/services/twitter.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["selectable", "simply", "profile", "integrated", "twitter", "recently", "support", "username", "rolled", "names"]}}, "a8b0d88d5b36c608bd17ba94c3d8725687598621": {"node_ids": ["e9bd19e8-d335-403a-9f63-c08318293ad1", "2fac73f2-6449-464c-981f-b83b2f4b8a12", "1512107f-204a-479b-92a6-da9e93156742", "6a95e527-81b6-4ace-b28d-188312a311d8", "ea83bedf-4e23-48ef-90ac-a8d8fee9199d", "31c9348e-b245-4e60-8fcf-07ef3b249972", "32b0ff2b-179a-4d0f-b13e-04606173c873", "6fd9109a-1064-44db-9a4d-322b8dc61f06", "588e93ae-7779-498b-a2d6-5ea826be7438"], "metadata": {"file_path": "docs/faq/v2-manager.mdx", "file_name": "v2-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/v2-manager.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/faq/v2-manager.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ethereum", "profile", "addresses", "point", "storing", "twitter", "avatar", "store", "decentralized", "cthulu", "blockchains", "information", "manager"]}}, "7505abbee31c559f0025f65372704047017212c8": {"node_ids": ["9ab24707-8f1b-424f-8815-ce9459e85c38", "10502fea-fc82-4256-bd6d-15b0d5ff9b60", "5fb96297-e08b-429c-bdfc-0293dfa774d0"], "metadata": {"file_path": "docs/faq/wallets/coinbase_wallet.mdx", "file_name": "coinbase_wallet.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/wallets/coinbase_wallet.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/faq/wallets/coinbase_wallet.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["coinbase", "zadok7", "mobile", "phone", "wallet"]}}, "b27cff73a988f8ababc8bc7a124d917a53cc0ee2": {"node_ids": ["0f2616d1-97c3-463f-a139-1d31fa67b657"], "metadata": {"file_path": "docs/faq/wallets/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/wallets/index.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/faq/wallets/index.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["unable", "doccardlist", "wallets", "device", "ledger", "cthulu", "import", "hardware", "wallet"]}}, "9e1bbe9d483905cbe766763665179dc905c7ddc5": {"node_ids": ["f61d9cee-27e3-4e07-aa03-523729fac921"], "metadata": {"file_path": "docs/faq/wallets/ledger.mdx", "file_name": "ledger.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/wallets/ledger.mdx", "header_path": "/Ledger/", "customer_id": 1, "source_url": "docs/faq/wallets/ledger.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["confirmation", "transactions", "contact", "prompted", "sometimes", "resulting", "ledger", "loses", "which", "never", "bridge", "metamask"]}}, "7b3be480ff4d91293c8afb78d0b934fa45fd76dd": {"node_ids": ["2aadae41-964b-444b-bda1-4ad41cedd970", "9c8fe68f-cfdc-404b-9bb4-a3ab750031f1", "7757714b-f2d2-415d-ab8d-cce69bd6c14d"], "metadata": {"file_path": "docs/faq/wallets/metamask.mdx", "file_name": "metamask.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/wallets/metamask.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/faq/wallets/metamask.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["browser", "suffers", "known", "documented", "clearing", "cthulu", "extension", "several", "metamask"]}}, "73ca6dcd7e26b579839f7ef9e494553f67e4b333": {"node_ids": ["1df939de-189b-4020-b8d2-daa338d006cb", "75a8b802-1fcb-4d4e-ac4f-076a94d38179"], "metadata": {"file_path": "docs/faq/wallets/metamask_mobile.mdx", "file_name": "metamask_mobile.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/wallets/metamask_mobile.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/faq/wallets/metamask_mobile.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["mobile", "cthulu", "phone", "wallet", "metamask"]}}, "bd4b7f82433b47bf6c54e0ef42cd27a0c6a9480b": {"node_ids": ["71e8519d-274c-4114-b43c-d5a0b0b802b6"], "metadata": {"file_path": "docs/faq/wallets/trezor.mdx", "file_name": "trezor.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/faq/wallets/trezor.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/faq/wallets/trezor.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["asked", "trezor", "frequently", "device", "cthulu", "hardware", "updated", "questions", "wallet", "connect"]}}, "d01e89941ed69e1c2f32bf1b891f6c52154560c7": {"node_ids": ["9ce32931-625f-4dbd-9679-683126f65bb9", "6fea5dda-7ce0-427a-a21b-cc01d338035c"], "metadata": {"file_path": "docs/howto/add-custom-record.mdx", "file_name": "add-custom-record.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/add-custom-record.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/howto/add-custom-record.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["profile", "zadok7", "record", "custom", "records", "service"]}}, "4278dfca8afec311f9ed2b84418432aa3410e59c": {"node_ids": ["6a1f40c0-b135-4c90-8283-b0a8e829d90c", "b41100e3-90e4-4c5f-868a-00b6d6b914e2", "9f431172-3fdb-4a15-98f2-9feab66c6d31"], "metadata": {"file_path": "docs/howto/add-wallet-address.mdx", "file_name": "add-wallet-address.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/add-wallet-address.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/howto/add-wallet-address.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["addresses", "address", "storing", "learn", "cthulu", "capable", "tutorial", "number", "wallet", "large"]}}, "4ce6409ac93c347526d700cb7e4966776926ff7f": {"node_ids": ["e64affda-3bff-44e8-b9d8-289e39a714fb", "090d2ec4-817c-4cc3-9468-06fb9486e8ed", "d6d9f561-8750-4631-8db2-38ee9b786328", "4a549acd-5ff9-4133-87b3-a02de44917bf", "8146eb18-3b8f-4897-8541-5bb8b9c41195", "fc1eef6d-6b7a-4649-9892-d47f67043083", "3afb0fcc-56b5-4290-b8da-2d046ce08adb", "e4a1c06f-98de-4112-a3e2-21ce20a0fed7", "8bed5728-b2f6-43ee-add9-b7d08bf8ab63"], "metadata": {"file_path": "docs/howto/decentralized-website.mdx", "file_name": "decentralized-website.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/decentralized-website.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/howto/decentralized-website.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["hosted", "ability", "powerful", "website", "interesting", "point", "creating", "webpages", "decentralized", "create", "features", "where", "names"]}}, "256e47d73d4bf60aca3133493ca95abf91fe00e4": {"node_ids": ["513c758f-b166-44a4-b069-bf1683d8ed9d"], "metadata": {"file_path": "docs/howto/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/index.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/howto/index.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["importing", "makes", "doccardlist", "domain", "cthulu", "import", "supports", "which", "possible", "integrate", "names"]}}, "8eb314b0333c4ba493793dfd9ba2ce893a6547b9": {"node_ids": ["064701cf-f27c-49fd-8f92-7ac9e9ecd22e", "98c87eed-6dec-4834-9563-836a8d588d43", "92e9d97c-933f-4bfc-bf23-935d8e086e53", "46190a61-b40b-4acd-86ab-a2b1477f0297", "5e7120b2-2329-4415-b352-e6dd30b6bc60"], "metadata": {"file_path": "docs/howto/integrate-dns.mdx", "file_name": "integrate-dns.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/integrate-dns.mdx", "header_path": "/Integrate a DNS name/", "customer_id": 1, "source_url": "docs/howto/integrate-dns.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["integrating", "establish", "domain", "search", "enable", "before", "click", "connect", "integrate", "existing", "manager", "dnssec"]}}, "061b771be8917b72b2a8d207265306431741a933": {"node_ids": ["d4985e12-8ce8-4490-ba07-e6c0fb242385", "fa091c86-da71-4db5-8a39-96e46927a80e", "08f3f658-aa2a-46e0-94f1-49361114e4fb", "634183dc-c705-4b6c-a9ed-23e037d32a1d"], "metadata": {"file_path": "docs/howto/namewrapper/change-permissions.mdx", "file_name": "change-permissions.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/namewrapper/change-permissions.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/howto/namewrapper/change-permissions.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["transaction", "please", "changing", "expiry", "wrapper", "these", "review", "reversed", "before", "cannot", "revoking", "change", "permissions"]}}, "cfde068da88f58b217a6f3fd0338e9d045465c51": {"node_ids": ["3cad261b-5c1f-4af5-b4b3-b0783a1f0f1c"], "metadata": {"file_path": "docs/howto/namewrapper/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/namewrapper/index.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/howto/namewrapper/index.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["unwrapping", "wrapper", "doccardlist", "import", "names", "contract", "namewrapper", "serenae"]}}, "41be55a09be5033f2eea524485b22120018082ff": {"node_ids": ["24376799-52a9-4aea-9856-db549c3aeeb4", "b2a620fa-d63b-4c66-995c-b4f9987fd4a0", "8a9ffdcc-9446-4a90-9854-b4c52eb7bf0a"], "metadata": {"file_path": "docs/howto/namewrapper/unwrap-names.mdx", "file_name": "unwrap-names.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/namewrapper/unwrap-names.mdx", "header_path": "/Unwrapping Names\r/", "customer_id": 1, "source_url": "docs/howto/namewrapper/unwrap-names.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["automatically", "enter", "helper", "transaction", "website", "unwrap", "address", "using", "small", "sense", "correct", "built", "still", "manager"]}}, "6805e171a6f0e8219bd991755d52c61da3691993": {"node_ids": ["52e6db04-5d5a-41c6-8448-030dd8a0db5b", "bef86cf0-ead4-4ee6-aaa0-fb44d08a3072"], "metadata": {"file_path": "docs/howto/namewrapper/wrap-eth-2ld.mdx", "file_name": "wrap-eth-2ld.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/namewrapper/wrap-eth-2ld.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/howto/namewrapper/wrap-eth-2ld.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["wrapper", "existing", "serenae", "contract", "namewrapper", "manager"]}}, "5f666870ca123e44ec5df8d692ff862658fc6a3b": {"node_ids": ["9b6f5e50-0935-4187-a778-91c13f2f4b5f", "2d6d4d76-a6fe-4e29-9d38-3dd82ee7c840"], "metadata": {"file_path": "docs/howto/namewrapper/wrap-subname.mdx", "file_name": "wrap-subname.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/namewrapper/wrap-subname.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/howto/namewrapper/wrap-subname.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["transaction", "dialog", "banner", "wrapper", "existing", "should", "first", "browse", "subname", "click", "necessary", "approve", "contract", "showing", "manager"]}}, "6fbb72630bb9a26289f6a3c5fff16389522ba38a": {"node_ids": ["c61ab50e-2f00-46e1-bc94-0f154917aad2", "8b6c685e-68dc-400b-b676-3c6dc04a1d9c", "9f51a5f4-4861-4639-a825-513eec5a5155", "1858abab-4a6f-4c25-86c6-b1176278f366", "b27e9a55-8ca4-408c-9e9c-e9247c4acd88", "95923a71-3e56-489e-a57e-aee7f7ac1425"], "metadata": {"file_path": "docs/howto/registration.mdx", "file_name": "registration.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/registration.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/howto/registration.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["amount", "select", "beginning", "wallets", "provided", "search", "searched", "continue", "click", "during", "years", "register", "manager", "connect"]}}, "91f59ef2c83163e9e6de39c67a5f232678f4dde3": {"node_ids": ["1431613f-6184-4cd6-8407-a758be8c2499"], "metadata": {"file_path": "docs/howto/renew-names.mdx", "file_name": "renew-names.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/renew-names.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/howto/renew-names.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["renew", "extend", "profile", "would", "zadok7", "search", "possible", "click", "names", "manager", "connect"]}}, "661e95e290a052c60fea6cae09903d0bd8cbf614": {"node_ids": ["85cb63ee-0a33-47b7-b5b9-b01e365027c7", "eb48e803-bc2d-4658-b795-e4ef7500e931", "e4ef987e-74a3-4b62-9849-400f8885ff74", "5782aa45-2481-4e62-9120-218779f3e241", "9d2600a8-32e3-4d7e-b8ab-48b3605d8a20"], "metadata": {"file_path": "docs/howto/set-avatar.mdx", "file_name": "set-avatar.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/set-avatar.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/howto/set-avatar.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["profile", "learn", "record", "avatar", "update", "cthulu", "tutorial", "upload"]}}, "b26356cf8a0228c5c69c8a0ea6a4d4409e64550e": {"node_ids": ["745c3709-7c2a-4594-a51e-1d6ca0b4677b", "c2404728-8f37-4fea-ae7b-b08afc6683a6", "ebe4222b-23f3-43aa-9cb3-fe53a44502f5", "a023565d-8c16-472b-91c4-6b6c9b177a9c", "f3afce35-a7cc-4bf3-84de-552d074b2704"], "metadata": {"file_path": "docs/howto/set-primary-name.mdx", "file_name": "set-primary-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/set-primary-name.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/howto/set-primary-name.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["primary", "helping", "responsible", "services", "address", "guide", "record", "reverse", "display", "decentralized", "based", "wallet", "resolving"]}}, "f5c8b41f6f9d156b76b0958190399db8535aca38": {"node_ids": ["897a97ad-1d55-4ece-bd2c-2da03d5c5b81"], "metadata": {"file_path": "docs/howto/set-record.mdx", "file_name": "set-record.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/set-record.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/howto/set-record.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["alter", "modify", "bring", "record", "update", "cthulu", "create", "search", "click", "manage", "wallet", "change", "names", "manager"]}}, "d2b8ca6e684ba428a41e44ae62a651f9c310dd67": {"node_ids": ["cab8e801-cea7-4ac9-a126-ab4772a874d2"], "metadata": {"file_path": "docs/howto/set-twitter-name.mdx", "file_name": "set-twitter-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/set-twitter-name.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/howto/set-twitter-name.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["social", "profile", "media", "verify", "twitter", "first", "cthulu", "setting", "integrate", "change", "simpler"]}}, "a61f1b9ded63c52a5b65dd3b430aca551f7ea64e": {"node_ids": ["94109ae1-2579-42ab-a183-aea84e1b5eec", "630bac84-83af-4d67-8636-ac73b69bc032", "133529db-14dc-4442-858b-f447790642d2", "8afd1714-d93b-4b5c-80c7-158743d48d55"], "metadata": {"file_path": "docs/howto/test-v3-manager.mdx", "file_name": "test-v3-manager.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/test-v3-manager.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/howto/test-v3-manager.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["goerli", "alpha", "version", "zadok7", "released", "preview", "third", "manager"]}}, "a8f7760003ebeffb38762f85cf9e68967cfb0390": {"node_ids": ["0f156819-9fa1-4c47-b5ae-7af81312b8eb", "9414ca3e-ee26-4c8e-9628-b1f871935774", "3484cf56-6ab4-4b07-b08f-ef0c21c64fea", "7f582b2f-6ad8-4673-aaa1-70b52fda855f"], "metadata": {"file_path": "docs/howto/transfer-name.mdx", "file_name": "transfer-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/transfer-name.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/howto/transfer-name.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["automatically", "reflect", "record", "learn", "tutorial", "transferring", "another", "cthulu", "transfer", "owner", "updated"]}}, "87a47d6a0c5bbf75f4b4ae2b756f55faa4b4c085": {"node_ids": ["acd3479a-cedd-4375-90eb-1cf13d4742dd"], "metadata": {"file_path": "docs/howto/v2/_set-discord-name.mdx", "file_name": "_set-discord-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/_set-discord-name.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/howto/v2/_set-discord-name.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["service", "zadok7", "record", "discord", "custom", "there", "records", "manager"]}}, "f56c737c6eb4dcf2a1479c5284b8ed6f12192a89": {"node_ids": ["2d44dc29-e016-464a-a34b-e47c6b94d8ef", "55336aa0-04fb-49b3-87ab-650f8d33ce0e", "9939af94-075f-441c-9295-1806e53fdc0e"], "metadata": {"file_path": "docs/howto/v2/add-wallet-address.mdx", "file_name": "add-wallet-address.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/add-wallet-address.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/howto/v2/add-wallet-address.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["addresses", "address", "storing", "learn", "cthulu", "capable", "tutorial", "number", "wallet", "large"]}}, "c3bdaeb0cd41c040f794a6e5a409bba8c6e863ee": {"node_ids": ["a0e1da0c-1696-41a4-9058-7bf3bcc7a662", "e5c46faf-322d-4a47-bc3c-b60c12313b7b", "f805629b-f50c-4e5b-8540-c03d920557e6", "1c6eb5e0-fa4b-4536-8bdf-767fbcaea873", "8bd6f963-937c-4dba-99ff-f6688b0a6f96", "63ab863b-90a5-4803-8ad8-53ccdead4564", "53485845-fdbf-41c1-9c22-a62f10702217", "cd6f70cb-50fc-437d-aee6-1ba3f42a64e5"], "metadata": {"file_path": "docs/howto/v2/decentralized_website.mdx", "file_name": "decentralized_website.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/decentralized_website.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/howto/v2/decentralized_website.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["ability", "powerful", "website", "interesting", "decentralized", "cthulu", "create", "features", "names"]}}, "99e4eaaeab428e5f1fb883e6f986f575634022a0": {"node_ids": ["647a49be-8175-42c0-93d4-daa2017f59b1"], "metadata": {"file_path": "docs/howto/v2/index.mdx", "file_name": "index.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/index.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/howto/v2/index.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["importing", "makes", "allowing", "domain", "doccardlist", "cthulu", "import", "supports", "which", "possible", "integrate", "names", "manager"]}}, "4181cecb5656f6d97e6fe95c16d230394483e0f6": {"node_ids": ["f6b09623-6758-4468-ad57-389eb1806b78", "3d5787ff-5560-43d9-bfdf-b377ae29aa9b", "870c731e-f4d5-4f5c-a0a6-b0ea65d70c76", "23bb79d4-8a1c-4eee-bf37-5116dc022152", "6596966f-9876-4c20-98c3-56912e7524f4"], "metadata": {"file_path": "docs/howto/v2/link-dns-name.mdx", "file_name": "link-dns-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/link-dns-name.mdx", "header_path": "/Link a DNS name/", "customer_id": 1, "source_url": "docs/howto/v2/link-dns-name.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["providers", "types", "since", "verified", "hosting", "which", "support", "dnssec", "popular", "changed"]}}, "7f188176c5b0c533ec648e7c2ddd982007e138a6": {"node_ids": ["df91fe72-0f65-4782-9610-e9af6c076d95", "3ca9b59f-e9fc-468e-9855-cda32b881891", "c69c5b53-7368-4676-b0ba-c7c00fb8ec65", "9f3557da-bc43-44d9-b227-0e835ab6572f"], "metadata": {"file_path": "docs/howto/v2/registration.mdx", "file_name": "registration.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/registration.mdx", "header_path": "/How to register a name/", "customer_id": 1, "source_url": "docs/howto/v2/registration.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["graph", "transaction", "registering", "active", "provided", "details", "search", "three", "searched", "continue", "click", "inactive", "classdef"]}}, "18ca6dd0c5e075e92771b546166d5a4a04901750": {"node_ids": ["27dfda83-9fb4-45eb-ac9c-e24b1eef45d9", "d00091b9-f77f-42d5-a0e4-00940a535b6e", "4f7b4ab6-e358-4bc7-b285-8bb7d7444066", "641477e8-6b91-4146-b924-20efc0b67d20", "2d0b7306-758a-4b55-84a5-e9e160c786e9", "6d8345cf-d544-4caa-baf5-7a4124079b6a"], "metadata": {"file_path": "docs/howto/v2/set-avatar.mdx", "file_name": "set-avatar.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/set-avatar.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/howto/v2/set-avatar.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["profile", "record", "avatar", "update", "cthulu", "wallet", "upload", "manager", "connect"]}}, "60cd93963c8cfc493d1d3d82cceac0f8dcccb07c": {"node_ids": ["0196feee-0d0b-4e1e-ae9d-a03d778e57c6", "4373b93d-8bb3-44bb-b3d0-fb01e5fd9dbe", "92270c9e-30fd-457e-aae2-9a4e96654fc3", "19cb0862-8e5f-4911-b20e-24099c72754f", "cf355f47-f8d2-453e-941f-3d4886ebbde9"], "metadata": {"file_path": "docs/howto/v2/set-primary-name.mdx", "file_name": "set-primary-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/set-primary-name.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/howto/v2/set-primary-name.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["primary", "helping", "responsible", "services", "address", "guide", "record", "reverse", "display", "decentralized", "based", "wallet", "resolving"]}}, "08a0a4e684a827f239dad458b6bcfadea40689eb": {"node_ids": ["95539202-50ad-4499-a3fb-b75198d68226", "2a84702d-de0e-45d4-9dc1-9d2df0e45eec"], "metadata": {"file_path": "docs/howto/v2/set-record.mdx", "file_name": "set-record.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/set-record.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/howto/v2/set-record.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["alter", "modify", "zadok7", "record", "update", "create", "click", "wallet", "change", "manager", "connect"]}}, "f7eb9f1294c1b6cf964fad9d6e5bbb9f602532d5": {"node_ids": ["969f5205-b458-48e8-93a9-b712aeb5db4c", "6689c015-61ae-4cb0-a2f7-3f8e0452d3d7", "ed319e02-68ac-412c-a2fa-132513007208", "b5792900-80ff-40c5-b091-124585321dc1"], "metadata": {"file_path": "docs/howto/v2/transfer-name.mdx", "file_name": "transfer-name.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/howto/v2/transfer-name.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/howto/v2/transfer-name.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["resides", "therefore", "order", "called", "transfer", "cthulu", "owner", "wallet", "manager"]}}, "f199c9c0cc32df3b7956dd89db0f6a575159a0e1": {"node_ids": ["40fbdf84-5002-404d-8396-f67240cf73d7"], "metadata": {"file_path": "docs/intro.mdx", "file_name": "intro.mdx", "url": "https://api.github.com/ensdomains/ens-support-docs/blob/main/docs/intro.mdx", "header_path": "/", "customer_id": 1, "source_url": "docs/intro.mdx", "parent_headings": {}, "chunk_type": "text", "code_language": null, "keywords": ["introduction", "start", "hidden", "twitter", "documentation", "false", "discord", "cthulu", "support", "discussion", "official"]}}}}